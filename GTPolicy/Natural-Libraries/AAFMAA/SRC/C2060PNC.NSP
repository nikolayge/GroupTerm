* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* *************************************************
* PROGRAM-ID: C2060PNC NEW CERTIFICATE SCREEN
* PURPOSE   : TO PROCESS THE 'NC' COMMAND OR NEW CERTIFICATE
*
* MODIFICATIONS:
*  0789   CHANGE RESTRICTED MEMBERSHIP WORDING PER MITCHELL   JAK
*  0989   ADD A NEW MAP FOR REDUCED PAY-UPS PER COMSTI        JAK
*  0290   NET SNG PREM WORDING CHANGE                         DRW
*  0290   NET SNG PREM WORDING CHANGE                         DRW
*  10182006 DW1 Make separate map for LT                      DRW
*  01172007 PM2 Correct index for use in ATHPCAPD             PAM
* DRW  09192007 DW3  Reset Invalid Characters for PDF to '*'
* DRW  09282007 DW4  Reverse labels of Issue-date and Effective Date
* DRW  11122007 DW5  Do DW4 for NC file from T4CYCAPD
* YAK  07172008 YK1  Add logic for saving Policy Number
*                    on the UNIX file for printing Policy Package
* DRW 08/22/2008 DW6 Gen Plus Map
* BZ  09/22/2010 bz1 Print death report
* NG  11/10/2010 NG1 New format for names
* YAK 05/17/2011 YK2 Add warning message about policy print
*                    for older policies
* YAK 06/03/2011 YK3 Call GPRN0001 to log print request
* YAK 10/10/2012 YK4 Use function to identify Level Term II plans
* NGG 11/15/2012 NG2 New page for Level Term II plans
* RSE 05/01/2013 RE1 Stability Project for $1M Policy - change edit mask
* TMT 12/27/2013 TT1 ADDED GP2 POLICY
* YAK 11/24/2014 YK5 Add check for conversion
* vxt 06/07/2017 vt1 Group Term Project
* **********************************************************************
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX    /* WORK FIELDS FOR GONERCXX - ERROR ROUTINE
LOCAL USING C2060LNC
LOCAL USING C2060ANC    /* fields linked to C2060SNC. Changed for 1M$
LOCAL
*                             NG1 \/
1 #LONG-NAME           (A65)
1 #LONG-INSURED        (A65)
1 #LONG-OWNER          (A65)
1 #LONG-LNK-MBR        (A65)
*                            NG1  /\
1 #PDF-chars-100    (a100)                      /* DW3
*
1 #YYYYMMDD    (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY    (N4)
  2 #MM      (N2)
  2 #DD      (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A    (A4)
  2 #MM-A      (A2)
  2 #DD-A      (A2)
1 #CAT-DESC   (A15)
1 #USER       (A14)
1 #FILL-BLNKS (A78/24)
* 1 #CONTACT-SEG (N1)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER         (N6)
  2 NAME
  2 NUM-MBRSHIPS      (9)
  2 STATUS            (9)
  2 PLAN              (9)
  2 PAY-STATUS        (9)
  2 MODE              (9)
  2 ISSUE-DATE        (9)
  2 MONTH-ALLOC-AMT   (9)
*
1 #TILDE           (A1) INIT <'~'>
1 #CN-CNT          (P3)
1 #STOP            (A1)
1 #SPLIT-POL       (L)
1 #PLAN            (A2)
1 REDEFINE #PLAN
  2 #PLAN-A1        (A1)
  2 #PLAN-A2        (A1)
1 #TERMED-ISS-DT   (N8)
1 #SCR-TEXT-78    (A78/18)
*
1 #SLASH (A1) CONST<'/'>
1 #SEL-CV          (C/9)
1 #HOLD-COMP-DB   (N5.2)
1 #HOLD-SCR-ID     (N6)
1 #I1              (I2)
1 #I2              (I2)
1 #I3              (I2)
1 #CNT             (I2)  /* PM2
1 #ISC             (I2)
1 #HAS-MODE-G          (L)
1 #DB-LABEL    (A22)
*
1 #SI     (I4)
1 #SCR-LINE                (A78/80)
1 REDEFINE #SCR-LINE
  2 #SCR-LINE-TBL      (80)
    3 #SCR-NC-FIL-3   (A3)
    3 #SCR-NC-LINE    (A75)
    3 REDEFINE #SCR-NC-LINE
      4 #SCR-NC-44     (A44)
      4 #SCR-NC-31     (A31)
    3 REDEFINE #SCR-NC-LINE
      4 #SCR-NC-FIL-4A  (A4)
      4 #SCR-NC-YRS-LBL (A30)
      4 #SCR-NC-AMT-LBL (A41)
    3 REDEFINE #SCR-NC-LINE
      4 #SCR-NC-FIL-4B  (A4)
      4 #SCR-NC-YEARS   (A30)
      4 #SCR-NC-ANN     (A10)
      4 #SCR-NC-FIL-4D  (A1)
      4 #SCR-NC-AMT     (A10)
      4 #SCR-NC-FIL-4C  (A1)
      4 #SCR-NC-TOTAL   (A10)
    3 REDEFINE #SCR-NC-LINE
      4 #SCR-RT-FIL-4B  (A4)
      4 #SCR-RT-YEARS   (A11)
      4 #SCR-RT-PREM-1  (A12)
      4 #SCR-RT-DB-1    (A17)
      4 #SCR-RT-PREM-2  (A13)
      4 #SCR-RT-DB-2    (A13)
    3 REDEFINE #SCR-NC-LINE
      4 #SCR-RT-FIL-1N  (A1)
      4 #SCR-RT-YEARSN  (A10)
      4 #SCR-RT-PREM-1N (A12)
      4 #SCR-RT-FIL-6N  (A6)
      4 #SCR-RT-DB-1N   (A17)
      4 #SCR-RT-PREM-2N (A13)
      4 #SCR-RT-FIL-3N  (A3)
      4 #SCR-RT-DB-2N   (A13)
    3 REDEFINE #SCR-NC-LINE
      4 #SCR-NC-FIL-55  (A55)
      4 #SCR-NC-EXP-DT  (A16)
*
1  v_cnt   (N2)   INIT <0>   /* bz1
*
1 #FULL-NAME           (A) DYNAMIC  /* NG1
1 #ORDER-LIST          (A) DYNAMIC INIT <'Policy'>    /* YK3
1 #ID-NUMBER           (A) DYNAMIC                    /* YK3
1 #PROCESS-NAME        (A) DYNAMIC INIT <'POLPRINT'>  /* YK3
1 #ERROR-CODE          (A1)                           /* YK3
*
END-DEFINE
*
SET KEY PF5 NAMED 'Print'           /* YK1
DEFINE WINDOW WARNING-WINDOW        /* YK2
  SIZE 5 * 50                       /* YK2
  BASE 8 / 15                       /* YK2
  TITLE 'Warning Window'            /* YK2
  FRAMED ON                         /* YK2
*
IF #CGA-SCR-SUFFIX = 'NEW'
  READ ST-V BY MEMBER-KEY FROM #CGA-ID-G
    IF #CN-CNT GE 17
      WRITE '   *** PLEASE PRESS ENTER ********'
      INPUT 'PRESS ENTER TO CONTINUE OR TYPE "S" AND ENTER TO STOP'
        #STOP
      IF #STOP = 'S'
        RESET #CGA-SCR-COMMAND
      END-IF
*
      MOVE  ID-NUMBER TO #CGA-SCR-ID
      FETCH 'G1000PXX'
    END-IF
*
    FOR #I1 1 TO 9
      CALLNAT 'GPLNMSXX' #SCN-POLICY-NUMBER ID-NUMBER #I1 /*build POL-#
      DISPLAY ID-NUMBER #SCN-POLICY-NUMBER   /* DO NOT REMOVE <<<<<<
      ADD 1 TO #CN-CNT
    END-FOR
  END-READ
END-IF
*
* INCLUDE GONERCXX       /* NATURAL ERROR ROUTINE
GET STATUS-VIEW #CGA-ISN
*
MOVE '* ' TO #CGA-SCR-COMMAND
MOVE #CGA-SCR-ID TO #HOLD-SCR-ID
RESET #CGA-SCR-ID
MOVE 'CERTIFICATE COVER MENU SCREEN' TO #SCR-TITLE
SEPARATE STATUS-VIEW.NAME LEFT INTO #LAST-NAME #FIRST/MIDDLE #SUFFIX
  WITH DELIMITER #DEL
*
COMPRESS #FIRST/MIDDLE #LAST-NAME INTO #SCN-NAME
IF #SUFFIX NE ' '
  COMPRESS #SCN-NAME ',' INTO #SCN-NAME LEAVING NO SPACE
  COMPRESS #SCN-NAME #SUFFIX INTO #SCN-NAME
END-IF
#FULL-NAME := ' '
CALLNAT 'GPRS0CNT'  STATUS-VIEW.MEMBER-CONTACT-ID  #FULL-NAME  /* NG1
#LONG-NAME := #FULL-NAME                                       /* NG1
*
IF STATUS-VIEW.C*ACTIVE-SEGMENTS = 0
  MOVE 'NC' TO #CGA-SCR-COMMAND
  MOVE #HOLD-SCR-ID TO #CGA-SCR-ID

  IF #CGA-ORIG-SUFFIX = 'P22'                                 /* bz1
    v_cnt := v_cnt + 1                                        /* bz1
    IF v_cnt > 1 NEWPAGE(22) END-IF                           /* bz1
    WRITE (22) NOTITLE "No Active Segments for NC command"    /* bz1
    ESCAPE ROUTINE                                            /* bz1
  ELSE                                                        /* bz1
    INPUT WITH TEXT 'NO ACTIVE SEGMENTS' MARK *#CGA-SCR-COMMAND USING MAP 'C2V10MVP'
    FETCH 'G1000PXX'
  END-IF                                                       /* bz1
ELSE
  PERFORM FORMAT-MENU
END-IF
*
IF   (#SCR-SELECTION(1) NE 'X')
    AND (*DEVICE NE 'BATCH')
  MOVE '* ' TO #CGA-SCR-COMMAND
*
  IF #CGA-SCR-SUFFIX = 'POL'
    MOVE (AD=P) TO #SEL-CV (*)
    MOVE 'NC' TO #CGA-SCR-COMMAND
    MOVE #HOLD-SCR-ID TO #CGA-SCR-ID
    RESET #CGA-SCR-SUFFIX
    INPUT USING MAP 'C2V10MVP'
    FETCH 'G1000PXX'
  ELSE
    IF #CGA-SCR-SUFFIX <> 'P22'
      INPUT MARK *#SCR-SELECTION(1) USING MAP 'C2V10MVP'
    END-IF
  END-IF
*
  IF #CGA-SCR-COMMAND NE '* '
    FETCH 'G1000PXX'
  END-IF
END-IF
*
FOR #SCR-X = 1 TO 9
  IF #SCR-SELECTION (#SCR-X) = 'X'
    MOVE #SCR-SAVE-IDX(#SCR-X) TO #INS-INDEX
*
*    if #SCR-PLN (#SCR-X) ne 'GT1'                                 /* vt 06/07/2017
    CALLNAT 'C2060SNC'
      #CGA-SCR-COMMAND
      #CGA-SCR-ID
      #CGA-SCR-SUFFIX
      #CGA-ISN
      #PDA-AREA-C2060ANC
*
    #LONG-INSURED := #INSURED        /* NG1
    #LONG-OWNER   := #OWNER          /* NG1
    #LONG-LNK-MBR := #LNK-MBR        /* NG1
    PERFORM SHOW-NC
*    end-if                                                     /* vt 06/07/2017
  END-IF
END-FOR
*
IF *DEVICE = 'BATCH' OR #CGA-SCR-SUFFIX = 'P22' OR #CGA-ORIG-SUFFIX ='P22'   /*  bz1
  ESCAPE ROUTINE
END-IF
*
IF  (#CGA-ORIG-SUFFIX = 'AL*')
    AND #HAS-MODE-G
  MOVE 'FA' TO #CGA-SCR-COMMAND
  MOVE #CGA-ID TO #CGA-SCR-ID
ELSE
  IF #CGA-SCR-COMMAND = ' '
    IF #CGA-ORIG-SUFFIX = 'PUR' /* probably came from CI (for ELB)
      MOVE 'DP' TO #CGA-SCR-COMMAND
    ELSE
      MOVE 'ST' TO #CGA-SCR-COMMAND
    END-IF
    MOVE #CGA-ID TO #CGA-SCR-ID
  END-IF
END-IF
*
FETCH 'G1000PXX'
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE SHOW-NC
* * * * * * * * * * * * * *
*
if plan(#ins-index) = 'GT1'                    /* vt1 06/07/2017 \/
  escape routine
end-if                                         /* vt1 06/07/2017 /\
*
MOVE PLAN (#INS-INDEX) TO #PLAN
IF #PLAN = 'LT'
  MOVE 'Initial Death Benefit:' TO #DB-LABEL
ELSE
  MOVE 'Death Benefit:' TO #DB-LABEL
END-IF
*
IF *DEVICE = 'BATCH'
  IF #CGA-ORIG-SUFFIX = 'NCD'   /* NC DOWNLOAD
    IF CONV-DURATION (#INS-INDEX) NE 999  /* not a cap policy
      ESCAPE ROUTINE
    END-IF
*
    RESET #SCR-LINE (*) #SI
    IF  (ISSUE-DATE (#INS-INDEX) LT 19970101)
        OR (MONTH-ALLOC-AMT (#INS-INDEX) = 999.99)
      MOVE 'MUST USE OLD "NC"' TO #SCR-NC-LINE (1)
      WRITE WORK FILE 2 #SCR-LINE (1)
      MOVE '~' TO #SCR-LINE (1)
      WRITE WORK FILE 2 #SCR-LINE (1)
      ESCAPE ROUTINE
    END-IF
*
    ADD 1 TO #SI
    MOVE #TILDE TO #SCR-NC-FIL-3 (#SI) /* preceed w tilde if in between
*
    COMPRESS FULL 'Insured:' #INSURED
      '       Certificate #:  ' #SCN-POLICY-NUMBER
      INTO #SCR-NC-LINE(#SI)
    ADD 1 TO #SI
    COMPRESS FULL 'Owner:' #OWNER
      'Issue-Date:     ' #SCN-DATE-entered INTO #SCR-NC-LINE(#SI) /*DW5
    ADD 1 TO #SI
    COMPRESS FULL 'Plan Type:' #PLAN-TYPE
      'Effective-Date: ' #SCN-DATE INTO #SCR-NC-LINE(#SI)   /*DW5
    ADD 1 TO #SI
*
    COMPRESS FULL #DB-LABEL #SCN-FACE '      '
      'Nicotine Use:   ' #SMOKER-LBL INTO #SCR-NC-LINE(#SI)
    ADD 1 TO #SI
    COMPRESS FULL #SCN-HDR-VAR-1 #SCN-HDR-VAR-2 INTO #SCR-NC-LINE(#SI)
*
    IF PLAN (#INS-INDEX) = 'RT'
      ADD 1 TO #SI
      ADD 1 TO #SI
      COMPRESS 'This certificate is guaranteed renewable in five year'
        'intervals, as defined' INTO #SCR-NC-LINE(#SI)
      ADD 1 TO #SI
      COMPRESS 'in Terms and Conditions.  The options at the first'
        'renewal point are:' INTO #SCR-NC-LINE(#SI)
      PERFORM BUILD-RT-INFO
*
*     ADD 3 TO #SI
      ADD 1 TO #SI
      MOVE #SCN-LINES(1) TO #SCR-NC-LINE(#SI)
      ADD 1 TO #SI
      MOVE #SCN-LINES(2) TO #SCR-NC-LINE(#SI)
    ELSE
      FOR #I1 1 TO 13
        ADD 1 TO #SI
        MOVE #SCN-LINES(#I1) TO #SCR-NC-LINE(#SI)
      END-FOR
*
    END-IF
*
    ADD 2 TO #SI
    COMPRESS 'Attachments:' INTO #SCR-NC-LINE(#SI)
    ADD 1 TO #SI
    COMPRESS '- Terms and Conditions of Insurance Benefits and'
      'Membership (' #DATA-3 INTO #SCR-NC-LINE(#SI)
    IF NOT INTRO-FLAG = 'S' OR = 'K' OR = 'G'
      ADD 1 TO #SI
      MOVE #RIDER-LINE TO #SCR-NC-LINE(#SI)
    END-IF
*
    ADD 1 TO #SI
*
    ADD 1 TO #SI
    MOVE '~' TO #SCR-LINE (#SI)  /* move tilde
*
    FOR #SI 1 TO 80
      IF #SCR-LINE (#SI) = '~'   /* if tilde
        ESCAPE BOTTOM
      ELSE
        WRITE WORK FILE 2 #SCR-LINE (#SI)
      END-IF
    END-FOR
  ELSE
    WRITE 'Batch NC"s  NOT ALLOWED'
  END-IF
  ESCAPE ROUTINE
END-IF
*
RESET #TERMED-ISS-DT
FOR #I1 1 TO 9
  IF   (ISSUE-DATE (#I1) = ISSUE-DATE (#INS-INDEX))
      AND (PLAN (#I1)       = PLAN (#INS-INDEX))
      AND (STATUS (#I1) = 'E' OR = 'F' OR = 'G')
    MOVE ISSUE-DATE (#I1) TO #TERMED-ISS-DT
    ESCAPE BOTTOM
  END-IF
END-FOR
*
RESET #SPLIT-POL
FOR #I1 1 TO 9
  IF   (ISSUE-DATE (#I1) = ISSUE-DATE (#INS-INDEX))
      AND (ISSUE-DATE (#I1) = #TERMED-ISS-DT)
      AND (STATUS (#I1) = 'D')
    MOVE TRUE TO #SPLIT-POL
  END-IF
END-FOR
*
IF #CGA-ORIG-SUFFIX = 'PDF'
  PERFORM PDF-LAYOUT
END-IF
*
IF   (ONLINE-ACTION (#INS-INDEX) = '2' OR = '3' OR = '4' OR = 'N')
    AND (PAY-STATUS (#INS-INDEX) LE '40')   /* POL CONVERTED
  IF (#CGA-ORIG-SUFFIX = 'P22')                   /* bz1
    v_cnt := v_cnt + 1                           /* bz1
    IF v_cnt > 1 NEWPAGE(22) END-IF              /* bz1
    WRITE (22) NOTITLE USING MAP 'C2062FNC'      /* bz1
  ELSE                                            /* bz1
    INPUT USING MAP 'C2062MNC'
  END-IF                                          /* bz1
ELSE
  IF PAY-STATUS(#INS-INDEX) = '45'      /* RPU (REDUCED PAID UP)
    IF (#CGA-ORIG-SUFFIX = 'P22')                   /* bz1
      v_cnt := v_cnt + 1                          /* bz1
      IF v_cnt > 1 NEWPAGE(22) END-IF             /* bz1
      WRITE (22) NOTITLE USING MAP 'C2061FNC'     /* bz1
    ELSE                                            /* bz1
      INPUT USING MAP 'C2061MNC'
    END-IF                                           /* bz1
  ELSE
    IF   (ISSUE-DATE (#INS-INDEX) GE 19970101)    /* nxt
        AND (MONTH-ALLOC-AMT (#INS-INDEX) NE 999.99)
      IF PLAN (#INS-INDEX) = 'RT'
        IF (#CGA-ORIG-SUFFIX = 'P22')                  /* bz1
          v_cnt := v_cnt + 1                          /* bz1
          IF v_cnt > 1 NEWPAGE(22) END-IF             /* bz1
          WRITE (22) NOTITLE USING MAP 'C2069FNC'
        ELSE                                           /* bz1
          INPUT USING MAP 'C2069MNC'
        END-IF                                         /* bz1
      ELSE
        IF PLAN (#INS-INDEX) = 'LT'   /* DW1
          IF (#CGA-ORIG-SUFFIX = 'P22')                  /* bz1
            v_cnt := v_cnt + 1                          /* bz1
            IF v_cnt > 1 NEWPAGE(22) END-IF             /* bz1
            WRITE (22) NOTITLE USING MAP 'C206BFNC'     /* bz1
          ELSE                                           /* bz1
            INPUT USING MAP 'C206BMNC'
          END-IF                                         /* bz1
        ELSE
          if plan (#ins-index) = 'GPL' /* or = 'GP2'          /* TT1   /* DW6
            IF (#CGA-ORIG-SUFFIX = 'P22')                  /* bz1
              v_cnt := v_cnt + 1                          /* bz1
              IF v_cnt > 1 NEWPAGE(22) END-IF             /* bz1
              WRITE (22) NOTITLE USING MAP 'C206CFNC'     /* bz1
            ELSE                                           /* bz1
              input using map 'C206CMNC'
            END-IF                                         /* bz1
          else
            IF PLAN (#INS-INDEX) = 'GP2' THEN
              IF (#CGA-ORIG-SUFFIX = 'P22')                                /*TT1 BEGIN
                v_cnt := v_cnt + 1                          /* bz1
                IF v_cnt > 1 NEWPAGE(22) END-IF             /* bz1
                WRITE (22) NOTITLE USING MAP 'C206EFNC'     /* bz1
              ELSE                                           /* bz1
                input using map 'C206EMNC'
              END-IF                                         /* bz1         /*TT1 END
            else
              IF (#CGA-ORIG-SUFFIX = 'P22')                  /* bz1
                v_cnt := v_cnt + 1                         /* bz1
                IF v_cnt > 1 NEWPAGE(22) END-IF             /* bz1
                WRITE (22) NOTITLE USING MAP 'C2068FNC'     /* bz1
              ELSE                                           /* bz1
                INPUT USING MAP 'C2068MNC'
                IF F-LT2PLUS-TRUE(<PLAN(#INS-INDEX)>)        /* NG2
                  CALLNAT 'C2060NNC'
                    #CGA-SCR-COMMAND
                    #CGA-SCR-ID
                    #CGA-SCR-SUFFIX
                    #CGA-ISN
                    #INS-INDEX
                END-IF                                       /* NG2
              END-IF                                         /* bz1
            end-if
          END-IF
        END-IF
      END-IF
*
      IF #CGA-ORIG-SUFFIX <> 'P22'                   /* bz1
        INPUT USING MAP 'C2066MNC'
      END-IF
    ELSE
      IF #CGA-ORIG-SUFFIX = 'P22'                   /* bz1
        v_cnt := v_cnt + 1                         /* bz1
        IF v_cnt > 1 NEWPAGE(22) END-IF            /* bz1
        WRITE (22) NOTITLE USING MAP 'C2060FNC'    /* bz1
        ESCAPE ROUTINE                             /* bz1
      ELSE                                          /* bz1
        INPUT USING MAP 'C2060MNC'       /* OLD OR NEW
      END-IF                                        /* bz1
    END-IF
  END-IF
END-IF
*
IF *PF-KEY = 'PF5'                             /* YK1
* Check for Policy Issue date                  /* YK2 Start
  IF (ISSUE-DATE (#INS-INDEX) LE 20081201)
    INPUT WINDOW = 'WARNING-WINDOW' WITH TEXT
      '       Policy print cannot be ordered on     '
      '        policies issued before 12/2008.      '
      '     *** Complete manual policy print ***    '
  ELSE                                         /* YK2 End
    #ID-NUMBER := #SCN-POLICY-NUMBER
* If Plan = 'RT' - check for conversion
    IF PLAN(#INS-INDEX) = 'RT'                 /* YK5
      #ERROR-CODE:= '?'                        /* YK5
    END-IF                                     /* YK5
    CALLNAT 'GPRN0001' #PROCESS-NAME #ID-NUMBER #ORDER-LIST
      #ERROR-CODE             /* YK3
  END-IF                                       /* YK2
END-IF                                         /* YK1
*
IF #MEC-IND = 'Y'   /* below is also in C2460PLI and C2009SNM
  RESET #I1
  ADD 1 TO #I1
  COMPRESS 'This policy is identified as a Modified'
    'Endowment Contract (MEC)' INTO #SCR-TEXT-78(#I1)
  ADD 1 TO #I1
*
  COMPRESS 'and comes under the provisions of the Technical and'
    'Miscellaneous Revenue ACT' INTO #SCR-TEXT-78(#I1)
  ADD 1 TO #I1
*
  COMPRESS '(TAMRA) of 1988. Unless you are disabled, TAMRA may impose'
    'ordinary income tax' INTO #SCR-TEXT-78(#I1)
  ADD 1 TO #I1
*
  COMPRESS 'implications on MEC policy distributions, i.e. loans,'
    'withdrawals or cash' INTO #SCR-TEXT-78(#I1)
  ADD 1 TO #I1
*
  COMPRESS 'surrenders, regardless of your age. Also, if you are'
    'under age 59 1/2 a' INTO #SCR-TEXT-78(#I1)
  ADD 1 TO #I1
*
  COMPRESS '10% penalty tax may apply to distributions. The tax'
    'and penalty apply only' INTO #SCR-TEXT-78(#I1)
  ADD 1 TO #I1
*
  COMPRESS 'to distribution of interest earnings. The IRS sequence'
    'for distributions is' INTO #SCR-TEXT-78(#I1)
  ADD 1 TO #I1
*
  COMPRESS 'interest earnings first and then principal. No income'
    'tax or penalty is' INTO #SCR-TEXT-78(#I1)
  ADD 1 TO #I1
*
  COMPRESS 'applicable to principal. Principal is the cost basis'
    'of the policy. Cost' INTO #SCR-TEXT-78(#I1)
  ADD 1 TO #I1
*
  COMPRESS 'Basis is premiums paid plus any taxable distributions'
    'made from the policy.' INTO #SCR-TEXT-78(#I1)
*
  ADD 1 TO #I1
  COMPRESS 'For the purpose of determining any gain includable'
    'in gross income upon cash' INTO #SCR-TEXT-78(#I1)
  ADD 1 TO #I1
*
  COMPRESS 'surrender, all MEC"s issued by the same company to the'
    'same policyholder' INTO #SCR-TEXT-78(#I1)
  ADD 1 TO #I1
*
  COMPRESS 'within any calendar year are treated as one MEC contract.'
    TO #SCR-TEXT-78(#I1)
*
  ADD 1 TO #I1
  MOVE 'You may want to seek professional advice.' TO #SCR-TEXT-78(#I1)
*
  IF  (#CGA-ORIG-SUFFIX = 'P22')                                  /* bz1
    WRITE (22) NOTITLE USING MAP 'C206AFNC'                     /* bz1
  ELSE                                                            /* bz1
    INPUT USING MAP 'C206AMNC'
  END-IF                                                          /* bz1
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE FORMAT-MENU
* * * * * * * * * * * * * * *
*
MOVE 0 TO #SCR-X
FOR #INS-INDEX = 1 TO 9
  IF   (STATUS-VIEW.STATUS(#INS-INDEX) = 'D')
      OR ((#CGA-ORIG-SUFFIX = 'PUR')
      AND (STATUS-VIEW.STATUS (#INS-INDEX) = 'E' OR = 'F' OR = 'G'))
    IGNORE
  ELSE
    ESCAPE TOP
  END-IF
*
  IF #INS-INDEX GT STATUS-VIEW.C*ACTIVE-SEGMENTS
    ESCAPE BOTTOM
  END-IF
*
  ADD 1 TO #SCR-X
*
  CALLNAT 'GPLNMSXX' #SCN-POLICY-NUMBER ID-NUMBER #INS-INDEX
*
  MOVE #SCN-POLICY-NUMBER TO #SCR-POL-NUM (#SCR-X)
*  MOVE EDITED FACE-AMOUNT (#INS-INDEX) (EM=ZZZ,ZZ9.99)    /* RE1
  MOVE EDITED FACE-AMOUNT (#INS-INDEX) (EM=Z,ZZZ,ZZ9.99)   /* RE1
    TO #SCR-FACE (#SCR-X)
  COMPRESS '$' #SCR-FACE (#SCR-X) INTO #SCR-FACE (#SCR-X) LEAVING NO
  MOVE PLAN        (#INS-INDEX) TO #SCR-PLAN (#SCR-X)
  MOVE ISSUE-DATE(#INS-INDEX) TO #YYYYMMDD
  COMPRESS #MM-A #DD-A #YYYY-A INTO #SCR-EFF-DATE(#SCR-X) WITH #SLASH
  MOVE '(' TO #SCR-LFT-PAREN(#SCR-X)
  MOVE ')' TO #SCR-RGT-PAREN(#SCR-X)
  MOVE #INS-INDEX TO #SCR-SAVE-IDX(#SCR-X)
*
  IF #CGA-ORIG-SUFFIX = 'AL*' /* from ad NUR from ci rpu
    IF MODE (#INS-INDEX) = 'G'
      MOVE TRUE TO #HAS-MODE-G
    END-IF
*
    RESET #CGA-SCR-SUFFIX
    MOVE 'X' TO #SCR-SELECTION (#INS-INDEX)
  END-IF
*
  IF  (*DEVICE = 'BATCH')
      OR (#CGA-ORIG-SUFFIX = 'PUR')  /* probably from CI (ELB)
      OR (#CGA-SCR-SUFFIX = 'P22') OR  (#CGA-ORIG-SUFFIX = 'P22')    /* bz1
    MOVE 'X' TO #SCR-SELECTION (#SCR-X)                           /* PM2
  END-IF
END-FOR
*
IF   (#SCR-X = 1)
    AND (#CGA-SCR-SUFFIX NE 'POL')

  MOVE 'X' TO #SCR-SELECTION(1)
END-IF
*
FOR #INS-INDEX = 1 TO 9
  IF #SCR-LFT-PAREN(#INS-INDEX) NE '('
    MOVE (AD=P) TO #SEL-CV(#INS-INDEX)
  END-IF
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-RT-INFO
* * * * * * * * * * * * * * * * *
*
ADD 1 TO #SI
COMPRESS FULL '          INCREASING          LEVEL'
  '           LEVEL         DECREASING' INTO #SCR-NC-LINE(#SI)
ADD 1 TO #SI
COMPRESS FULL '  AGE   MONTHLY PREMIUM   DEATH BENEFIT'
  '   MONTHLY PREMIUM  DEATH BENEFIT' INTO #SCR-NC-LINE(#SI)
*
FOR #I1 1 TO 7
  ADD 1 TO #SI
  MOVE #SCN-YEARS (#I1) TO #SCR-RT-YEARSN (#SI)
  MOVE #SCN-VALUE (#I1) TO #SCR-RT-PREM-1N(#SI)
  MOVE #RT-DB-1   (#I1) TO #SCR-RT-DB-1N  (#SI)
  MOVE #RT-PREM-2 (#I1) TO #SCR-RT-PREM-2N(#SI)
  MOVE #RT-DB-2   (#I1) TO #SCR-RT-DB-2N  (#SI)
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE PDF-LAYOUT
* * * * * * * * * * * * * *
*
MOVE *DATN TO #YYYYMMDD
COMPRESS #MM-A #DD-A #YYYY-A INTO #USER WITH '/'
COMPRESS #CGA-CLERK #USER INTO #USER
*
IF #PLAN-A1 = 'U' OR = 'X' OR = 'S'             /* YK4
  MOVE 'Standard'  TO #CAT-DESC
ELSE
  IF #PLAN-A1 = 'V' OR = 'Y' OR = 'R'           /* YK4
    MOVE 'Select'  TO #CAT-DESC
  ELSE
    IF #PLAN-A1 = 'W' OR = 'Z' OR = 'Q'         /* YK4
      MOVE 'Super Select'  TO #CAT-DESC
    ELSE
      MOVE 'Standard'  TO #CAT-DESC
    END-IF
  END-IF
END-IF
*
IF #PREM-RATING NE ' '
  COMPRESS #CAT-DESC 'Rated' #PREM-RATING INTO #CAT-DESC
END-IF
*
MOVE '%FDF-1.2' TO #FILL-BLNKS (1)
MOVE '1 0 obj << /FDF << /Fields [' TO #FILL-BLNKS (2)
COMPRESS #FILL-BLNKS (2) ' <</T(ID)/V(' #USER ')>>'
  INTO #FILL-BLNKS (2) LEAVING NO
COMPRESS '<</T(POLNUMBER)/V(' #SCN-POLICY-NUMBER ')>>'
  '<</T(POLTYPE)/V(' #PLAN-TYPE ')>>'
  INTO #FILL-BLNKS (3) LEAVING NO
COMPRESS '<</T(EFF-DATE)/V(' #SCN-DATE ')>>'
  '<</T(POLCLASS)/V(' #CAT-DESC ')>>'
  INTO #FILL-BLNKS (4) LEAVING NO
COMPRESS '<</T(AMOUNT)/V(' #SCN-FACE ')>>'
  '<</T(ANNPREM)/V(' #SCN-PREM ')>>'
  INTO #FILL-BLNKS (5) LEAVING NO
COMPRESS '<</T(INSUREDAGE)/V(' #SCN-AGE ')>>'
  '<</T(TOBACCO)/V(' #SMOKER-LBL ')>>'
  INTO #FILL-BLNKS (6) LEAVING NO
COMPRESS '<</T(INSUREDNAME)/V(' #INSURED ')>>'
  '<</T(INSUREDSSN)/V(' #INSURED-SSN ')>>'
  INTO #FILL-BLNKS (7) LEAVING NO
COMPRESS '<</T(OWNERNAME)/V(' #OWNER ')>>'
  '<</T(OWNERSSN)/V(' #OWNER-SSN ')>>'
  INTO #FILL-BLNKS (8) LEAVING NO
*
COMPRESS '<</T(DETAILS)/V('  INTO #FILL-BLNKS (9) LEAVING NO

IF #PLAN = 'LT'
  MOVE 1  TO #I2  /* starting line   WAs 2            /* DW3
  MOVE 8  TO #I3  /* ending line
ELSE
  IF #PLAN = 'RT'
    RESET #SI
    PERFORM BUILD-RT-INFO
*
    FOR #I2 1 TO 9
      MOVE #SCR-LINE (#I2) TO #SCN-LINES (#I2)
    END-FOR
*
    MOVE 1 TO #I2
    MOVE 9  TO #I3
  ELSE
*   IF (#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z') /* LTII        /* YK4
    IF F-LT2-TRUE(<PLAN(#INS-INDEX)>)                         /* YK4
      MOVE 2 TO #I2
      MOVE 5  TO #I3  /* ending line
    ELSE    /* W/L
      MOVE 1 TO #I2
      MOVE 8  TO #I3  /* ending line
    END-IF
  END-IF
END-IF
*
MOVE 9 TO #I1 /* start variable in line 10
FOR #I2 #I2 TO 13
  ADD 1 TO #I1
* MOVE #SCN-LINES (#I2) TO #FILL-BLNKS (#I1)      /* DW3
  move #scn-lines (#i2) to #pdf-chars-100         /* DW3
  callnat 'GPDFRSXX' #pdf-chars-100
  MOVE #pdf-chars-100 TO #fill-blnks (#i1)        /* DW3
*
  IF  (#I1 GE 20)
      OR (#I2 GE #I3)
    ESCAPE BOTTOM
  END-IF
END-FOR
COMPRESS #FILL-BLNKS (#I1)   ')>>' INTO #FILL-BLNKS (#I1)
*
ADD 1 TO #I1
MOVE '] /F (P:\CERTIFICATE.PDF)>> >>'      TO #FILL-BLNKS (#I1)
ADD 1 TO #I1
MOVE 'endobj'                             TO #FILL-BLNKS (#I1)
ADD 1 TO #I1
MOVE'trailer <</Root 1 0 R >> %%EOF'     TO #FILL-BLNKS  (#I1)
*
INPUT USING MAP 'GPDFXMXX'
*
END-SUBROUTINE
*
END
