* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 2
* <Natural Source Header
* PGM-ID: C2600PST THIS PROGRAM OUTPUTS THE ST SCREEN
******************************************************
*        MODIFICATION LOG
* USER   DATE      TAG  REASON
* DRW    09282004  DW1  add CREDIT CARD processing
* DRW    12232004  DW2  Incr size of loan balance
* DRW    01142005  DW3  Add ALP Code 8 (CIP) Cred Card
* DRW    03042005  DW4  Add AL Death bene calc
* DRW    04072005  DW5  Consider Inactive pols Suspended
* DRW    04152005  DW6  Add face Amt & TPP linkage to CVALUSXX
* DRW    05102005  DW7  Add Policy # to Batch ST for DAL
* DRW    05182005  DW8  Add FBR Prems to TOT-PAD-AMT
* DRW    06292005  DW9  Show EXPD if Term ins has face zero (GDROPSTM)
* DRW    08142006  DW10 Show PCC to KHB/DRW if not blk/0
* DRW    09132006  DW11 Show 'PULT Indicator' if it applies
* DRW    04252007  DW12 Allow SAL? Code of "9" to Ind AIP Waiting (AIW)
* PAM    20070506  PM13 Added policy auto issue
* DRW    10102007  DW14 Remove PDF Logic
* DRW    10242007  DW15 Display CAP-BILL-DATE
* YAK    12052007  YK1  Remove hardcording for interest rates
*                       (use function to read GEN-TABLE instead)
* DRW    01172008  DW16 Add SALP code of "L" (CAP Loan Only Pending)
* YAK    02052008  YK2  Change code to use FUNCTION-INT-RATE
*                         to get rate from GEN-TABLE
* DRW  05/22/2008  DW17 Check Death Contestability
* PAM  06/23/2008  PM18 Added SALP code of 'E' (EZPay CAP Loan Pending)
*                       and EZPay pending flag
* DRW 07/18/2008 DW19 Add No Longer Contestable Linkage to GCONTSXX
* DRW 11/25/2008 DW20 Add Linkage to GCONTSXX for #CONTESTABLE-BUT-PAID
* DRW 12/08/2008 DW21 Show ALP code "*" if after ATHPIALA and before ATHPCPLN
* PAM 02/26/2009 PM22 Added CIL code
* DRW 09/12/2009 DW23 Check if AFFL policy exists to do AFFL ST
* DRW 09/16/2009 DW24 Process-ind CGA-USER-COPANY Changes
* DRW 09/16/2009 DW25 Screen Message changes
* DRW 09/22/2009 DW26 SVC-FEE CALC  /  PROCESS-IND / Number-memberships /600000
* RE1 11/19/2009 RE1  Don't display 'PRE' screem for SAS;
*                     Call program to display SAS notes for UNIFICATION.
* PAM 12/01/2009 PM23 Added extra TRADE-UP note
* RSE 12/14/2009 RE2  Display ST info for pending applicants and inactive members
*                     with no insurance
* PAM 02/11/2010 PM24 Adjust CSV display
* PAM 02/24/2010 PM25 Added annual statement pop-up
* RSE 04/15/2010 RE3  Enable PF4 for ST, ST PRE, and ST FBR
* PAM 05/26/2010 PM26 Added new DBCR transaction screen
* PAM 07/19/2010 PM27 Added 3SR logic - regrandfather
* NGG 07/19/2010 NG1  Call subprogram instead of function
* PAM 07/20/2010 PM28 Allow SUFFIX of 'PRE' when coming back from SAS notes
* NGG 11/10/2010 NG2  Changes for name formating
* PAM 01/05/2010 PM29 Removed NO AFFL SERVICES message for grandfathered members
* PAM 01/11/2011 PM30 Added new outstanding term refund bucket
* vxt 02/23/2011 vt1  Change the logic to determine the value in the field "policy owner".
* vxt 06/01/2011 vt2  Add the x-alt-lp-date field to the ST screen.
* vxt 07/28/2011 vt3  change the source of the SSN, DOB info.
* YAK 01/30/2012 YK3  Enable PF4 for Service Maintenance screen
*                     Show services on the Dues line (#SCR-DUES-INFO)
* YAK 09/26/2012 YK4  Use function to identify Level Term II plans
* NGG 04/02/2013 NG3  Add Nursing Home Pay Status
* YAK 04/10/2013 YK5  Add message for EZ Term discount
* TMT 03/10/2014 TT2  Read Services from A-Products table using function
*                     GET-PLAN-INFO.  Membership Expansion Project.
* TMT 06/11/2014 TT3  Contact Normalization - DOB and Sex
* TMT 10/23/2014 TT4  Membership Expansion phase II
* TMT 01/29/2015 TT5  Policy Ownership Logic Modification
* BZ  01/20/2016 bz-GPL/GP2 - reuse MEC field for GIP
* YAK 02/08/2017 YK6  Add message for AR Term plans
* vxt 06/06/2077 vt4  Group Term Project
******************************************************
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL  USING GONERLXX
LOCAL  USING C2600LST   /* view of A-STATUS file                      /* vt3
LOCAL  USING A-IFAFFL   /* PDA used with FUNCTION F-if-AFFL           /* DW23
LOCAL  USING SVCA0001   /* PM27
LOCAL  USING OBJAMB02   /* TT4
*
LOCAL
1 Contact view of a-contacts       /* vt1 \/
  2 id-number
  2 contact-id
  2 first-name
  2 middle-name
  2 last-name
  2 ssn                                          /* vt3
  2 date-of-birth                                /* vt3
  2 GENDER-CD                                          /* TT1
1 #contact-id (n8)
1 #first-name  (a25)
1 #middle-name (a25)
1 #last-name   (a25)
1 #suffix-n    (a10)
1 #SCN-SEX     (A1)
*                                /* vt1 /\
1 #ADDRESS             (A43/4) /* NG2
* 1 #CURR-VAR-INT-RATE (P2.3) INIT <8.10>  /* YK1
1 #CURR-VAR-INT-RATE   (P2.3)              /* YK1
1 #SCR-TOT-LOAN-AMT    (P6.2) /* move to 700
1 #SCR-TOT-ACC-INT     (P5.2)
1 #SCR-TOT-P-I         (P6.2)
1 #SCR-PAY-METHOD      (A38)
1 #NXT-YR-ACC-INT   (P7.2/9)
1 #NXT-YR-ACC-INT-2 (P7.2/9)
1 #HAS-AIL-POLICY      (L)                     /* DW16
*
1 #SEG-X     (I2)                       /* DW17
1 #HAS-CONTESTABILITY  (L)
1 #NO-LONGER-CONTESTABLE  (L)   /* DW19
1 #C0NTESTABLE-BUT-PAID   (L)   /* DW20
1 #POL-NUM    (A16)  /* DW7
1 #SUFFIX     (A3)
1 REDEFINE #SUFFIX
  2 #SUFFIX-2   (A2)
  2 #SUFFIX-X   (N1)
1 #AS-OF-DT   (N8)
1 #LOAN-BAL   (N7.2/9)
1 #LOAN-BAL-2 (N7.2/9)
1 #ACC-INT    (N7.2/9)
1 #ACC-INT-2  (N7.2/9)
1 #CSV        (N7.2/9)
1 #CVALUE     (N7.2/9)
1 #LVALUE     (N7.2/9)
1 #MCSV       (N7.2/9)
1 #DB         (N7.2/9)
1 #ANN-PREMIUM (N7.2/9)
1 #FACE-AMT    (N7.2/9)  /* DW6
1 #TPP         (N7.2/9)  /* DW6
1 #CSV-P      (P7.2/9)
*
1 #PULT-POL    (L)   /* DW11
1 #NEW-FLDS   (L)
1 #AMT    (N7.2)
1 REDEFINE #AMT
  2 #AMT-FILL  (A2)
  2 #AMT-DOLS  (A5)
  2 #AMT-CENTS (A2)
1 REDEFINE #AMT
  2 #AMT-A     (A9)
1 #CAP-LOAN-MONS   (N3)
1 #CAP-CSV-MONS    (N3)
1 #CAP-REMAIN-MONS (N3)
1 #BOT-LINE        (A78)
1 #EFF-DATE        (N8)
*
1 #SCR-SUFFIX   (A3)
1 REDEFINE #SCR-SUFFIX
  2 #SCR-SUFFIX-1  (A1)
  2 #SCR-SUFFIX-2  (N1)
  2 #SCR-SUFFIX-3  (A1)
*
1 #TOT-FPF   (N7.2)
1 #TOT-BADJ  (N5.2)
1 #TOT-BDOL  (N5.2)
1 #TOT-FBR-FPF (N5.2)
1 #TOT-FBR-BAL (N5.2)
*
1 #SCR-POL-TABLE   (1:9)
  2 #SCR-FPF          (N7.2)
  2 #SCR-BADJ         (N5.2)
  2 #SCR-BDOL         (N5.2)
  2 #SCR-FBR-FPF      (N3.2)
  2 #SCR-FBR-BAL      (N5.2)
  2 #SCR-SEL         (A1)
  2 #SCR-PUR         (A1)
  2 #SCR-PLN         (A3)
  2 #SCR-RATING      (A1)
  2 #SCR-ORIG-UNITS  (N2)
  2 #SCR-SMK         (A1)
  2 #SCR-AGE         (A2)
  2 #SCR-POL-NUM     (A16)
  2 #SCR-EFF-DATE    (A10)
  2 #SCR-EFF-DTE     (N8)
  2 REDEFINE #SCR-EFF-DTE
    3 #SCR-EFF-DTE-MM  (A2)
    3 #SCR-EFF-DTE-DD  (A2)
    3 #SCR-EFF-DTE-CENT (A2)
    3 #SCR-EFF-DTE-YY  (A2)
  2 #PRE-1997         (A1)
  2 #SCR-PD-THRU      (N8)
  2 #SCR-BILL-TO       (N6)
  2 #SCR-PD-UP        (N6)
  2 #SCR-LAST-DUR     (N2)
  2 #SCR-MEC-IND      (A1)
  2 #SCR-MEC          (A3)
  2 #SCR-FBR          (A3)
  2 #SCR-STATUS       (A4)
  2 #SCR-MBR          (N1)
  2 #SCR-COST-BASIS   (P7.2)
  2 #SCR-OWN-FLG      (A1)
  2 #SCR-OWN-FLG-DISP (A25)                       /* vt1 was A13
  2 #SCR-PAD-PEND     (A1)     /* PM18
  2 #SCR-AMOUNT       (P7.2)
  2 #SCR-A-PREM       (P5.2)
  2 #SCR-MD           (A1)
  2 #SCR-MD-PRM       (P5.2)
  2 #SCR-MON-PRM      (P5.2)
  2 #SCR-GUAR-CV      (P7.2)                                   /* PM24
  2 #SCR-TPP          (P7.2)                                  /*TT1 INCREASED FOR 1MIL
  2 #SCR-TPP-TDIV-IND (A2)
  2 #SCR-CURR-DB      (P7.2)
*
  2 #SCR-CASH-VALU    (P7.2)  /* real cv                          PM24
  2 #SCR-LOAN-VALU    (P6.2)
  2 #SCR-AVL-LV       (N6.2)
  2 REDEFINE #SCR-AVL-LV
    3 #SCR-AVL-LV-DOLS  (N6)
    3 #SCR-AVL-LV-CENTS (N2)
  2 #SCR-CURR-CV      (P7.2)  /* actually CSV (cv plus avl tdiv)  PM24
  2 #SCR-AVL-CV       (P7.2)                                   /* PM24
*
  2 #SCR-FBR-PLAN     (A2)
  2 #SCR-FBR-EFF-DT   (A10)
  2 #SCR-FBR-PD-TO    (A10)
  2 #SCR-FBR-SPS-DB   (N6)
  2 #SCR-FBR-TOTAL-DEP (N6)
  2 #SCR-FBR-PREM     (N3.2)
*
  2 #SCR-POL-CV    (C)
  2 #SCR-LOAN-CV   (C)
  2 #SCR-LOAN-2-CV (C)
*
  2 #SCR-LOAN-DT      (N8)
  2 #SCR-LOAN-DT-2    (N8)
  2 #SCR-LOAN-AMT     (P5.2)
  2 #SCR-LOAN-AMT-2   (P6.2)  /* DW2
  2 #SCR-INT-RATE     (A6)
  2 #SCR-INT-RATE-2   (A6)
  2 #SCR-DAILY-INT    (P3.7)
  2 #SCR-DAILY-INT-2  (P3.7)
  2 #SCR-ACC-INT      (P5.2)
  2 #SCR-ACC-INT-2    (P5.2)
  2 #SCR-INT-RCVD     (P5.2)
  2 #SCR-INT-RCVD-2   (P5.2)
  2 #SCR-INT-BILLED   (P5.2)
  2 #SCR-INT-BILLED-2 (P5.2)
  2 #SCR-CAP-AMT      (P5.2)
  2 #SCR-CAP-AMT-2    (P5.2)
  2 #SCR-NXT-YR-ACC-INT  (P5.2)
  2 #SCR-NXT-YR-ACC-INT-2 (P5.2)
  2 #SCR-ALP-IND      (A3)
  2 #SCR-ALP-IND-2    (A3)
  2 #SCR-ALP-AMT      (P5.2)
  2 #SCR-ALP-AMT-2    (P5.2)
  2 #SCR-EXCP-LIST    (A33)
  2 #SCR-AUTO-ISSUE   (A3)                                              /* PM13
  2 #SCR-AUTO-ISSUE-LBL (A11)                                           /* PM13
  2 #scr-alt-lp-date  (a10)                              /* vt2
*
1 #SCR-INT-RATE-X   (A6)
1 #SCR-INT-RATE-X-2 (A6)
1 #SCR-TOT-LOAN-VALU   (P6.2)
1 #SCR-TOT-CURR-CV     (P7.2)     /* PM24
1 #SCR-TOT-AVL-LV      (N6.2)
1 REDEFINE #SCR-TOT-AVL-LV
  2 #SCR-TOT-AVL-LV-DOLS  (N6)
  2 #SCR-TOT-AVL-LV-CENTS (N2)
1 #SCR-TOT-AVL-CV      (P7.2)     /* PM24
1 #SCR-TOT-BILL-INT    (P5.2)
1 #SCR-TOT-INT-RCVD    (P5.2)
1 #SCR-TOT-CAP-INT     (P5.2)
1 #SCR-TOT-ALT-AMT     (P5.2)
1 #SCR-TOT-AMOUNT      (P7.2)
1 #SCR-TOT-A-PREM      (P5.2)
1 #SCR-TOT-MD-PRM      (P5.2)
1 #SCR-TOT-GUAR-CV     (P7.2)     /* PM24
1 #SCR-TOT-CURR-DB     (P7.2)
1 #SCR-TOT-FIX-LOAN    (P7.2)
1 #SCR-TOT-FIX-INT     (P7.2)
1 #SCR-TOT-FIX-CAP     (P7.2)
1 #SCR-TOT-FIX-INT-RCVD (P7.2)
1 #SCR-TOT-VAR-LOAN    (P7.2)
1 #SCR-TOT-VAR-INT     (P7.2)
1 #SCR-TOT-VAR-CAP     (P7.2)
1 #SCR-TOT-VAR-INT-RCVD (P7.2)
*
1 #SCR-SUB-LOAN-VALU   (P6.2)
1 #SCR-SUB-CURR-CV     (P7.2)      /* PM24
1 #SCR-SUB-AVL-LV      (P6.2)
1 #SCR-SUB-AVL-CV      (P7.2)      /* PM24
1 #SCR-SUB-LOAN-AMT    (P6.2)
1 #SCR-SUB-ACC-INT     (P5.2)
1 #SCR-SUB-BILL-INT    (P5.2)
1 #SCR-SUB-INT-RCVD    (P5.2)
1 #SCR-SUB-CAP-INT     (P5.2)
1 #SCR-SUB-ALT-AMT     (P5.2)
*
* below is linkage to GRIDCSXX
1 #ID         (N6)
1 REDEFINE #ID
  2 #ID-A      (A6)
* THE FOLLOWING INPUT IS PASSED ONLY ON AN "AT" FOR A NEW RIDER
1 #AT-RID-ATTACH-FAC-AMT (N6.2) /* Only if attached to the new "AT"
1 #AT-RID-ATTACH-PLAN    (A3)   /*    policy not yet created
1 #AT-RID-PLAN           (A2/5) /* New rider plan
1 #AT-RID-ATTACH-ISS-DT  (N8/5) /* Only if attached to an existing pol
* output below  (ex = existing)
1 #AT-TOT-FBR-PREM        (N3.2)
1 #EX-FBR-PREM-BY-LINE    (N3.2/9)
1 #EX-SPS-DB-BY-LINE      (N6/9)
1 #EX-DEP-DB-BY-LINE      (N6/9)
1 #EX-EACH-DEP-DB-BY-LINE (N6/9)
1 #NUM-ELIG-CHILDREN      (N2)
1 #NUM-ELIG-CHILDREN-UNDER-6-MON (N2)
1 #TOT-CHILD-DB      (N6)
1 #RID-TEXT          (A78)
* above is linkage to GRIDCSXX
*
1 FR-V VIEW OF A-FIRS
  2 DEPN-NAME           (14)
  2 DEPN-STATUS-CD      (14)
  2 DEPN-DATE-OF-BIRTH  (14)
*
1 #SCR-DEP-NAME    (A15/14)
1 #SCR-DEP-DB      (P6/14)
1 #TOT-RID-UNITS   (P3)
1 #SCR-TOT-SPS-DB  (P6)
1 #SCR-TOT-DEP-DB  (P6)
1 #SCR-TOT-FBR-PREM (P4.2)
*
1 #6-MON-AGO        (N8)
1 #SCR-DUES-INFO    (A77)
1 #AVL-TDIV     (P7.2)
*
1 #PLAN-N   (A3)
1 REDEFINE #PLAN-N
  2 #PLAN-A1 (A1)
  2 #PLAN-N2 (N2)
1 #WORK-CAP-CONV-ACV (P9.2)
1 #WORK-AMT   (A76)
1 #SVC-FEE    (N2.2)
1 #SVC-FEE-2P (N2.2) INIT <18.50>
1 #SVC-FEE-3P (N2.2) INIT <12.50>
1 #SVC-FEE-4P (N1.2) INIT <9.50>
1 #SVC-FEE-5P (N1.2) INIT <7.50>
1 #SVC-FEE-6P (N1.2) INIT <6.50>
1 #SVC-FEE-7P (N1.2) INIT <6.00>
1 #SVC-FEE-10 (N1.2) INIT <4.50>
1 #SVC-FEE-20 (N1.2) INIT <3.00>
1 #SVC-FEE-30 (N1.2) INIT <2.50>
1 #SVC-FEE-OL (N1.2) INIT <2.00>
1 #SVC-FEE-TM (N1.2) INIT <2.00>
*
1 #SVC-FEE-LBL-1 (A3) INIT <'Svc'>
*
1 #CSV-LOAN-VALUE     (P6.2)
1 #HOLD-LINE          (A78)
1 #SCR-LAST-HDR       (A78)
1 #SCR-SUB-TOT-LBL    (A8) INIT <' TOTAL  '>
1 #SCR-FBR-LBL        (A2)
1 #SCR-ORIG-UNITS-LBL (A2)
1 #FOUND-2-YR-COND   (L)
1 #HAS-COST-BASIS    (L)
1 #TPP-CSV           (L)
1 #HAS-FBR           (L)
1 #HAS-AAFM-CC       (L)
1 #HAS-AAFM          (L)   /* DW23
1 #HAS-LOANS         (L)
1 #NUM-LOANS       (P3)
1 #SCR-OPEN-FIELD   (A77)
1 REDEFINE #SCR-OPEN-FIELD
  2 #SCR-OPEN-FLD-FIL       (A32)
  2 #SCR-OPEN-FLD-ACV-LONG  (A45)
  2 REDEFINE #SCR-OPEN-FLD-ACV-LONG
    3 #SCR-OPEN-FLD-ACV-FIL  (A18)
    3 #SCR-OPEN-FLD-ACV-SHORT (A27)
*
1 #NUM-LINES        (P2)
1 #SCR-LBL-FPF      (A3)
1 #SCR-LBL-APL-CNT  (A7)
1 #SCR-ACCT-INFO    (A40)
1 #SCR-LBL-ALT-AMT  (A4)
1 #SCR-LBL-ALP      (A3)
*
1 #SCR-LBL-1TIM     (A16)
1 #SCR-LBL-BIL-PRM  (A8)
1 #SCR-LBL-BIL-ADJ  (A7)
1 #SCR-LBL-DB-CR    (A5)
1 #SCR-LBL-TERM-RF  (A20)  /* PM30
1 #SCR-LBL-COST-BAS (A10)
1 #SCR-LBL-PL-OWNER (A3)
1 #SCR-LBL-EZ-PAY   (A10)
*
1 #SCR-NOT-MSG      (A76)
1 #SCR-TERMID       (A12)
1 #SCR-DOB          (N8)
1 #SCR-RET-SEP-LAB  (A3)
1 #SCR-RETDT        (N8)
*
1 #SCR-ZIP          (A10)
1 #SCR-ACCTDT       (N8)
1 #SCR-OTHDT        (N8)
1 #SCR-NEW-LN-RATE  (P2.3)
1 #SCR-NET-BILL-PREM (P5.2)
1 #SCR-LPRECV       (N8)
*
1 #SCR-FBR-NUM-CHILDREN  (N2)
1 #SCR-FBR-NUM-CHILDREN-UNDER-6-MON  (N2)
*
1 #SCR-AUTO-ISSUE-LABEL (A11)  INIT <'AUTO ISSUE:'>                     /* PM13
1 #FBR-UNDER-6-MO (N2)
1 #FBR-OVER-6-MO  (N2)
*
1 #CV-SUS-CD  (C)
1 #CV-GEN     (C)
1 #CV-GEN-X   (C/9)
*
1 #I1   (I2)
1 #I2   (I2)
1 #I3   (I2)
1 J     (I2)              /* TT4
*
1 #DATE-DISP   (A10)
1 #YYYYMMDD   (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY   (N4)
    3 #MM     (N2)
  2 #DD     (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A (A4)
  2 #MM-A   (A2)
  2 #DD-A   (A2)
*
1 #WKYYYYMMDD
  2 #WKYYYY  (N4)
  2 #WKMM    (N2)
  2 #WKDD    (N2)
1 REDEFINE #WKYYYYMMDD
  2 #WKYYYYMMDD-N (N8.0)
*
1 #WYYYYMMDD
  2 #WYYYY  (N4)
  2 #WMM    (N2)
  2 #WDD    (N2)
1 REDEFINE #WYYYYMMDD
  2 #WYYYYMMDD-N  (N8.0)
*
1 #WMMDDYYYY
  2 #WMM   (N2)
  2 #WDD   (N2)
  2 #WYYYY (N4)
1 REDEFINE #WMMDDYYYY
  2 #WMMDDYYYY-N (N8)
1 REDEFINE #WMMDDYYYY
  2 #WMM-A   (A2)
  2 #WDD-A   (A2)
  2 #WYYYY-A (A4)
*
1 #WMMYYYY
  2 #WMM     (N2)
  2 #WYYYY   (N4)
1 REDEFINE #WMMYYYY
  2 #WMMYYYY-N (N6)
*
1 #ISS-DT-YYYYMMDD
  2 #ISS-DT-YYYY    (N4)
  2 #ISS-DT-MM      (N2)
  2 #ISS-DT-DD      (N2)
1 REDEFINE #ISS-DT-YYYYMMDD
  2 #ISS-DT-YYYYMMDD-N (N8)
*
1 #TODAY-YYYYMMDD   (N8)
1 REDEFINE #TODAY-YYYYMMDD
  2 #TODAY-YYYY      (N4)
  2 #TODAY-MM        (N2)
  2 #TODAY-DD        (N2)
1 REDEFINE #TODAY-YYYYMMDD
  2 #TODAY-YYYYMM    (N6)
  2 #TODAY-DD-2      (N2)
*
1 #ISS-YYYYMM-PLUS-2     (N6)
1 REDEFINE #ISS-YYYYMM-PLUS-2
  2 #ISS-PLUS-2-YYYY (N4)
  2 #ISS-PLUS-2-MM   (N2)
*
1 #WORK-TIME (N7)        /* PAM - added time/date stamp to ST screens
1 REDEFINE #WORK-TIME
  2 #WORK-TIME-HH (N2)
  2 #WORK-TIME-MM (N2)
  2 #WORK-TIME-SS (N2)
  2 #WORK-TIME-T  (N1)
1 #DISPLAY-HH (A2)
1 #DISPLAY-MM (A2)
1 #DISPLAY-SS (A2)
1 #DISPLAY-TIME (A9)
*
1 #PAD-AMT          (P5.2)
1 #MONTHLY-INCR     (P5.2)
1 #NUM-MONTHS       (P2)
1 #INVALID          (L)
1 #HOLD-MODE        (A1)
1 #HOLD-PAY-STAT    (A2)
1 #HOLD-PDTO-DATE   (N8)
1 #TOT-ASQ          (P5.2)
*
1 #AT-LEAST-1-MEC     (L)
1 #AT-LEAST-1-POL-NON-MBR (L)
1 #AT-LEAST-1-PP     (L)
1 #AT-LEAST-1-ASQM   (L)
1 #AT-LEAST-1-NOT-PD (L)
1 #FOUND-MBR-ASQM    (L)
1 #GAWT-PENDING-QAPL (L)
1 #ACV-ADJ           (L)
1 #SVC-ONLY          (L)
1 #NUM-POLS          (P3)
1 #DISP-8            (A8)
1 #ERR-MSG          (A60)
1 #ADDL-LOAN        (P6.2)
1 #NEW-RATE         (P2.4)
1 #ADDL-LOAN-DISP   (A10)
1 #NEW-RATE-DISP    (A7)
1 #INIT-ID          (A8)
1 REDEFINE #INIT-ID
  2 #TERM-ID        (A4)
  2 #TERM-FIL       (A4)
1 #TERMID-LIT       (A5)
* BELOW for CALC-PREMS-PAID
1 #PP-DATE-OF-BIRTH  (N8)
1 #PP-ANNUAL-PREM    (N5.2)
1 #PP-PAY-STATUS     (A2)
1 #PP-TOT-PREMIUMS-PAID (N7.2)
1 #PP-PAID-TO-DATE   (N8)
1 #PP-ISSUE-DATE     (N8)
1 #PP-MODE           (A1)
1 #PP-PLAN           (A3)
1 #PP-COST-BASIS      (N7.2)
1 #PP-MONTH-ALLOC-AMT (N7.2)  /* NG99
1 #PP-INTRO-FLAG     (A1)
1 #PP-FIRST-PLACE-FEE (N7.2)
1 #PREMS-PAID         (P7.2)
1 #SUB-PREMS-PAID     (P7.2)
1 #PP-BADJ            (P5.2)
* ABOVE for CALC-PREMS-PAID
*
1 #FUNCTION           (A4)   INIT <'DBCR'>   /* PM26
1 #FUNC-TRF           (A4)   INIT <'TMRF'>   /* PM30
1 #TRF-I              (I4)                   /* PM30
1 #TOTAL-TRF          (N7.2)                 /* PM30
*
* 1 #non-ins-owner      (l)         /* vt1 \/                                         /* TT5
* 1 #multi-owner        (l)
* 1 #owner-occ-9        (9)
*   2 #OWNER-FLAG (A1)         /* " "=owner is insured "N"=owner is not insured
*   2 #OWNER-CN   (N6/10)      /* up to 10 owners for each pol
* *
*   2 #OWNER-CN-BY-POL (N6)    /* 1st owners of each set of policies
*   2 #OWNER-CN-SEG    (I2/9)  /* all segment of pols owned by above NMO
*   2 #ISSUE-DATE      (N8/9)  /* all pols owned by above non-mbr-owner
*   2 #ISSUE-DATE-DISP (A10/9)
* *    beneficiary info output
*   2 #BN-TYPE         (A1/2)
*   2 #BN-TEXT         (A60/10)
1 #POLICY-OWNER        (N6)                                                            /* TT5
1 #pos (i2)
1 #owner-cn-by-pol-a (a6/9)
1 #id-number-a       (a6)
*                                  /* vt1 /\
1 #work-date      (n8)                        /* vt2 \/
1 redefine #work-date
  2 #work-date-yyyy   (a4)
  2 #work-date-mm     (a2)
  2 #work-date-dd     (a2)                    /* vt2 /\
*
1 #ssn               (n9)                    /* vt3
1 #dob               (n8)                    /* vt3
1 #name              (a36)                   /* vt3
* YK3 Start
1 #GET-BY-CN    (A) DYNAMIC CONST <'GET-BY-CN'>
1 #MODAL-PREM   (N7.2)
1 #TAB-SEL      (A1)
1 #PS-SVC-PLAN  (A3) CONST <'PSM'>
* YK3 End
1 #EZ-DISCOUNT  (N3.2) CONST <1.00>          /* YK5
1 #SVC-MODE     (A15)
1 #PLAN-INFO    (A) DYNAMIC                  /* TT4
1 #PLAN-MODE    (A) DYNAMIC                  /* TT4
1 v_RC          (N4)                         /* bz-GPL/GP2
1 #idx          (i2)                         /* vt4 06/06/2017
END-DEFINE
* * *
INCLUDE GONERCXX
*
SET KEY PF4
*
DEFINE WINDOW ANNUAL-STATEMENT     /* PM25
  SIZE 15 * 60                     /* PM25
  BASE TOP LEFT                    /* PM25
  FRAMED ON POSITION SYMBOL AUTO   /* PM25
*
IF #CGA-SCR-SUFFIX = 'STM'  /* PDF  removed 10/2007      display last ann stmt
  FETCH 'C2690PST'
END-IF
*
IF #CGA-SCR-SUFFIX = 'AMO' OR = 'AMS'  /* so all can do AMO
  FETCH 'C2400PLM'
END-IF
*
IF #CGA-ISN = 0
  INPUT TEXT 'CN must be entered' MARK *#CGA-SCR-ID USING MAP 'G1000MXX'
  FETCH 'G1000PXX'
END-IF
*
GET ST-V #CGA-ISN

CALLNAT 'ADRN0016' ST-V.MEMBER-CONTACT-ID    /* NG2
  #ADDRESS (*)
move #address(1) to #name                                     /* vt3
*
perform get-dob-ssn                                           /* vt3
*
IF *INIT-USER = 'your id here'
  WRITE '1' '=' #CGA-ORIG-ID '='#CGA-ID-G
END-IF
*
CALLNAT 'PLAN-AFA' ST-V.ID-NUMBER F-IF-AFFL-DATA /* NG1
*
#SERVICES-CN        := ST-V.ID-NUMBER        /* PM27
#SERVICES-PARM-DATE := *DATN                 /* PM27
CALLNAT 'SVCN0001'                           /* PM27
  #PDA-AAFMAA-SERVICES                       /* PM27
IF #CGA-SCR-COMMAND = 'ST' OR = 'RL'         /* bypass if return from NS  PM25
    AND ST-V.ANNUAL-STATEMENT-RESEND = 'Y'      /* PM25
    AND *DEVICE NE 'BATCH'                      /* PM25
    AND  (#CGA-ORIG-SUFFIX <> 'P22')            /* bz1
  SET WINDOW 'ANNUAL-STATEMENT'              /* PM25
  INPUT USING MAP 'ANRESEND'               /* PM25
  SET WINDOW OFF                             /* PM25
END-IF                                       /* PM25
*
IF   (#CGA-SCR-COMMAND = 'ST' OR = 'RL')     /* bypass if return from NS
    AND (*DEVICE NE 'BATCH')
    AND (#CGA-ORIG-SUFFIX <> 'P22')         /*  bz1
    AND (NOT #CGA-SCR-SUFFIX = 'CON' OR = 'QCK') /* no notes (be quick)
  CALLNAT 'C2650SST'
    #CGA-SCR-COMMAND #CGA-SCR-ID #CGA-SCR-SUFFIX
    #CGA-ORIG-ID
    #CGA-MF-SCR-COMMAND
    #CGA-MF-SCR-PARM-1
  MOVE 'ST' TO #CGA-SCR-COMMAND
END-IF
IF *INIT-USER = 'your id here'
  WRITE '2' '=' #CGA-ORIG-ID '='#CGA-ID-G
END-IF
*
IF   (*DEVICE NE 'BATCH')    /* DO NOT DO NOTES If DOING INTRO CONV
    AND ((#CGA-SCR-SUFFIX) <> 'P22' OR (#CGA-ORIG-SUFFIX <> 'P22'))  /* bz1
    AND (#CGA-SCR-COMMAND = 'ST') /* not returning from ns
    AND (NOT #CGA-SCR-SUFFIX = 'CON' OR = 'QCK') /* no notes (be quick)
  RESET #CGA-MF-SCR-COMMAND
  MOVE '*' TO #CGA-SCR-COMMAND      /* "NS" PROCESSOR
  FETCH 'G4020PNS'
END-IF
*
MOVE '*' TO #CGA-SCR-COMMAND
*
#CURR-VAR-INT-RATE := FUNCTION-INT-RATE(<'RATE5AB'>)  /* YK2
*
FOR #I1 1 TO 9
  IF STATUS (#I1) NE ' '    /* Has a active or termed policy    * DW23
    MOVE TRUE TO #HAS-AAFM
  END-IF
*
  IF (X-FIRST-PLACE-FEE (#I1) NE 0)
      OR (X-BILL-ADJUST    (#I1) NE 0)
      OR (X-BILL-DOLLAR    (#I1) NE 0)
      OR (X-RID-FPF        (#I1) NE 0)
      OR (X-RID-BALANCE    (#I1) NE 0)
      OR (X-NXT-YR-ACCUM-INT   (#I1) NE 0)
      OR (X-NXT-YR-ACCUM-INT-2 (#I1) NE 0)
      OR (NOT X-PRINCIPAL-CHG-CODE (#I1) = ' ' OR = '0')  /* DW10
    MOVE TRUE TO #NEW-FLDS
  END-IF
END-FOR
*
MOVE *DATN TO #TODAY-YYYYMMDD
MOVE *INIT-ID TO #INIT-ID
MOVE *TIMN TO #WORK-TIME       /* PAM - 11/21/2003 - added time stamp
MOVE EDITED #WORK-TIME-HH (EM=99) TO #DISPLAY-HH
MOVE EDITED #WORK-TIME-MM (EM=99) TO #DISPLAY-MM
MOVE EDITED #WORK-TIME-SS (EM=99) TO #DISPLAY-SS
COMPRESS #DISPLAY-HH ':' #DISPLAY-MM ':' #DISPLAY-SS
  INTO #DISPLAY-TIME LEAVING NO
*
IF DATE-OF-DEATH NE 0
  MOVE DATE-OF-DEATH TO #WKYYYYMMDD-N
  COMPRESS #WKMM #WKDD #WKYYYY INTO #DATE-DISP WITH '/'
  COMPRESS #SCR-NOT-MSG 'DECEASED' #DATE-DISP INTO #SCR-NOT-MSG
END-IF
*
IF MILITARY-STATUS = 'C'
  MOVE 'SEP' TO #SCR-RET-SEP-LAB
ELSE
  MOVE 'RET' TO #SCR-RET-SEP-LAB
END-IF
*
IF SUSPEND-CODE = '0'
  MOVE (AD=D) TO #CV-SUS-CD
ELSE
  MOVE (AD=I) TO #CV-SUS-CD
END-IF
*
RESET #SCR-POL-TABLE (*)
*
* MOVE DATE-OF-BIRTH TO #WYYYYMMDD-N                        /* vt3
move #DOB to #wyyyymmdd-n                                   /* vt3
MOVE BY NAME #WYYYYMMDD TO #WMMDDYYYY
MOVE #WMMDDYYYY-N TO #SCR-DOB
MOVE DATE-RETIRED    TO #WYYYYMMDD-N
MOVE BY NAME #WYYYYMMDD TO #WMMDDYYYY
MOVE #WMMDDYYYY-N TO #SCR-RETDT
MOVE DATE-ACCT-UPDATE TO #WYYYYMMDD-N
MOVE BY NAME #WYYYYMMDD TO #WMMDDYYYY
MOVE #WMMDDYYYY-N TO #SCR-ACCTDT
MOVE DATE-OTHER-UPDATE TO #WYYYYMMDD-N
MOVE BY NAME #WYYYYMMDD TO #WMMDDYYYY
MOVE #WMMDDYYYY-N TO #SCR-OTHDT
*
**MOVE EDITED #ZIP-CODE (EM=9(5)-9(4)) TO #SCR-ZIP
*
IF  (#CGA-ORIG-SUFFIX = 'PUR')
    OR (*DEVICE = 'BATCH') /* So ATHPLAPS works
  FOR #I1 1 TO 9
    IF STATUS (#I1) = 'E' OR = 'F' OR = 'G'
      MOVE 'D' TO STATUS (#I1)
      MOVE 'P' TO #SCR-PUR (#I1)
    END-IF
  END-FOR
END-IF
*
MOVE ST-V.FACE-AMOUNT (*) TO #FACE-AMT (*) /* DW6
MOVE *DATN TO #AS-OF-DT
MOVE 'NTP' TO #SUFFIX /* do not replace w tpp
CALLNAT 'CVALUSXX'
  ST-V.ID-NUMBER
  #SUFFIX
  #AS-OF-DT
  #LOAN-BAL   (1:9)
  #LOAN-BAL-2 (1:9)
  #ACC-INT    (1:9)
  #ACC-INT-2  (1:9)
  #CSV        (1:9)
  #CVALUE     (1:9)
  #LVALUE     (1:9)
  #MCSV       (1:9)
  #DB         (1:9)
  #ANN-PREMIUM  (1:9)
  #FACE-AMT   (1:9)   /* DW6
  #TPP        (1:9)   /* DW6
*
MOVE #FACE-AMT (*) TO ST-V.FACE-AMOUNT (*) /* DW6
*
RESET #I2 MOVE (AD=N) TO #CV-GEN-X(*)
FOR #I1 1 TO 9
  IF STATUS (#I1) NE 'D'
    ESCAPE TOP
  END-IF
*
  IF (X-RID-FPF (#I1) NE 0) OR (X-RID-BALANCE (#I1) NE 0)
    MOVE TRUE TO #HAS-FBR
  END-IF
*
  IF  (X-FIRST-PLACE-FEE (#I1) NE 0)
      OR (X-BILL-ADJUST    (#I1) NE 0)
      OR (X-BILL-DOLLAR    (#I1) NE 0)
      OR (#HAS-FBR)
    MOVE TRUE TO #NEW-FLDS
  END-IF
*
  IF PAY-STATUS (#I1) = '43'  OR=  '73' /* PULT - Long term care settlement or NH Nursing home  NG3
    RESET CASH-VALUE  (#I1)
      NXT-MON-CASH-VALUE (#I1)
      DEATH-BENEFIT  (#I1)
      NXT-MON-DEATH-BENEFIT  (#I1)
  END-IF
*
  ADD 1 TO #I2
  RESET #CV-GEN-X (#I2)
  IF RID-PLAN (#I1) NE ' '
    MOVE TRUE TO #HAS-FBR
    MOVE 'FBR' TO #SCR-FBR (#I2)
    ADD RID-PLAN-2 (#I1) TO #TOT-RID-UNITS
  END-IF
*
  IF PLAN (#I1) = 'SO' OR = 'FSO'
    MOVE TRUE TO #SVC-ONLY
  END-IF
*
  IF   (MODE (#I1) = 'A' OR = 'S' OR = 'Q' OR = 'M') /* do not add 0124
      AND (PAY-STATUS (#I1) LT '40')
      AND (OWNERSHIP-FLAG (#I1) = ' ')
    MOVE TRUE TO #FOUND-MBR-ASQM
  END-IF
*
  IF   (MODE (#I1) = '0' OR = '1' OR = '2' OR = '4')
      AND (PAY-STATUS (#I1) LT '40')
    MOVE TRUE TO #HAS-AAFM-CC
  END-IF
*
  IF OWNERSHIP-FLAG (#I1) = 'N' OR = 'D'
    MOVE TRUE TO #AT-LEAST-1-POL-NON-MBR
  END-IF
END-FOR
*
IF #HAS-FBR
  MOVE 'FB' TO #SCR-FBR-LBL
*
  MOVE ST-V.ID-NUMBER TO #ID
  CALLNAT 'GRIDCSXX' USING
    #ID
    #AT-RID-ATTACH-FAC-AMT
    #AT-RID-ATTACH-PLAN
    #AT-RID-PLAN            (1:5)
    #AT-RID-ATTACH-ISS-DT   (1:5)
    #AT-TOT-FBR-PREM
    #EX-FBR-PREM-BY-LINE    (1:9)
    #EX-SPS-DB-BY-LINE      (1:9)
    #EX-DEP-DB-BY-LINE      (1:9)
    #EX-EACH-DEP-DB-BY-LINE (1:9)
    #NUM-ELIG-CHILDREN
    #NUM-ELIG-CHILDREN-UNDER-6-MON
    #TOT-CHILD-DB
    #RID-TEXT
*
  IF #RID-TEXT NE ' '
    WRITE 'FBR ERROR MESSAGE' #RID-TEXT
  END-IF
*
  COMPUTE #SCR-FBR-NUM-CHILDREN
    = #NUM-ELIG-CHILDREN - #NUM-ELIG-CHILDREN-UNDER-6-MON
  MOVE #NUM-ELIG-CHILDREN-UNDER-6-MON
    TO #SCR-FBR-NUM-CHILDREN-UNDER-6-MON
*
  MOVE *DATN TO #YYYYMMDD
  SUBTRACT 6 FROM #MM
  IF #MM LT 1
    ADD 12 TO #MM
    SUBTRACT 1 FROM #YYYY
  END-IF
  MOVE #YYYYMMDD TO #6-MON-AGO
*
  FIND (1) FR-V WITH MEMBER-KEY = #ID-A
    RESET #I2
    FOR #I1 1 TO 14
      IF  (DEPN-STATUS-CD (#I1) = 'D')
          OR (#I2 GE 10)
        ESCAPE TOP
      END-IF
*
      IF DEPN-DATE-OF-BIRTH (#I1) GE #6-MON-AGO /* UNDER 6 MON
        ADD 1 TO #I2
        MOVE DEPN-NAME (#I1) TO #SCR-DEP-NAME (#I2)
        COMPUTE #SCR-DEP-DB (#I2) = 1000 * #TOT-RID-UNITS
      ELSE
        IF DEPN-DATE-OF-BIRTH (#I1) GT *DATN - 210000 /* UNDER AGE 21
          ADD 1 TO #I2
          MOVE DEPN-NAME (#I1) TO #SCR-DEP-NAME (#I2)
          COMPUTE #SCR-DEP-DB (#I2) = 5000 * #TOT-RID-UNITS
        END-IF
      END-IF
    END-FOR
  END-FIND
END-IF
*
MOVE (AD=N) TO #SCR-POL-CV    (*)
MOVE (AD=N) TO #SCR-LOAN-CV   (*)
MOVE (AD=N) TO #SCR-LOAN-2-CV (*)
MOVE 'ALP' TO #SCR-LBL-ALP
RESET #I2
FOR #I1 1 TO 9
  IF (#CGA-SCR-SUFFIX = 'CON')
      AND (FUNCTION-TERM-POLICY(<PLAN(#I1)>) OR PLAN(#I1) = 'SO')  /* YK4
    ESCAPE TOP
  END-IF
*
  IF PAY-STATUS (#I1) = '43'    /* DW11
    MOVE TRUE TO #PULT-POL
  END-IF
*
  IF STATUS (#I1) = 'D'
    IF PAY-STATUS (#I1) = '22'
      MOVE TRUE TO #AT-LEAST-1-PP
    END-IF
*
    IF MODE (#I1) = 'A' OR = 'S' OR = 'Q' OR = 'M' /* do not add 0124
      MOVE TRUE TO #AT-LEAST-1-ASQM
*
      IF   (PAID-TO-DATE (#I1) LT BILL-TO-DATE (#I1)) /* UNPAID BILL
          AND (PT-YYYYMM    (#I1) NE PU-YYYYMM (#I1))    /* NOT PAID-UP
          AND ((OWNERSHIP-FLAG (#I1) = ' ')
          OR ((OWNERSHIP-FLAG (#I1) = 'N') AND NOT #FOUND-MBR-ASQM))
        MOVE TRUE TO #AT-LEAST-1-NOT-PD
      END-IF
    END-IF
  ELSE
    ESCAPE TOP
  END-IF
*
  ADD 1 TO #I2
  MOVE #I2 TO #NUM-LINES
  RESET #SCR-POL-CV (#I2)
*
  MOVE X-FIRST-PLACE-FEE (#I1) TO #SCR-FPF (#I2)
  ADD X-FIRST-PLACE-FEE  (#I1) TO #TOT-FPF
  MOVE X-BILL-ADJUST (#I1) TO #SCR-BADJ (#I2)
  ADD X-BILL-ADJUST (#I1) TO #TOT-BADJ
  MOVE X-BILL-DOLLAR (#I1) TO #SCR-BDOL (#I2)
  ADD X-BILL-DOLLAR  (#I1) TO #TOT-BDOL
  MOVE X-RID-FPF (#I1) TO #SCR-FBR-FPF (#I2)
  ADD X-RID-FPF  (#I1) TO #TOT-FBR-FPF
  MOVE X-RID-BALANCE (#I1) TO #SCR-FBR-BAL (#I2)
  ADD X-RID-BALANCE  (#I1) TO #TOT-FBR-BAL
*
*   CALLNAT 'GPLNMSXX' #SCR-POL-NUM (#I2) ID-NUMBER #I1 /* build POL-#    /* TT5
  #SCR-POL-NUM (#I2)   := ST-V.POLICY-ID(#I1)
*
  IF  (X-LOAN-DATE      (#I1) NE 0)
      OR (X-LOAN-AMOUNT    (#I1) NE 0)
      OR (X-ACCUM-INTEREST (#I1) NE 0)
      OR (X-ALT-LP-IND     (#I1) = 'L' OR = '*')      /* DW16   DW21
      OR (X-ALT-LP-IND     (#I1) = 'E' OR = 'C')      /* PM18   PM22
    MOVE TRUE TO #HAS-LOANS
    RESET #SCR-LOAN-CV (#I2)
  END-IF
*
  IF  (X-LOAN-DATE-2      (#I1) NE 0)
      OR (X-LOAN-AMOUNT-2    (#I1) NE 0)
      OR (X-ACCUM-INTEREST-2 (#I1) NE 0)
    MOVE TRUE TO #HAS-LOANS
    RESET #SCR-LOAN-2-CV (#I2)
  END-IF
*
  MOVE X-LOAN-DATE (#I1) TO #WYYYYMMDD-N
  MOVE BY NAME #WYYYYMMDD TO #WMMDDYYYY
  MOVE #WMMDDYYYY-N TO #SCR-LOAN-DT (#I2)
  MOVE X-LOAN-DATE-2 (#I1) TO #WYYYYMMDD-N
  MOVE BY NAME #WYYYYMMDD TO #WMMDDYYYY
  MOVE #WMMDDYYYY-N TO #SCR-LOAN-DT-2 (#I2)
*
  MOVE X-LOAN-AMOUNT        (#I1) TO #SCR-LOAN-AMT         (#I2)
  MOVE X-LOAN-AMOUNT-2      (#I1) TO #SCR-LOAN-AMT-2       (#I2)
  MOVE X-INTEREST-RECEIVED  (#I1) TO #SCR-INT-RCVD         (#I2)
  MOVE X-INTEREST-RECEIVED-2(#I1) TO #SCR-INT-RCVD-2       (#I2)
  MOVE X-BILL-INTEREST-AMT  (#I1) TO #SCR-INT-BILLED       (#I2)
  MOVE X-BILL-INTEREST-AMT-2(#I1) TO #SCR-INT-BILLED-2     (#I2)
  MOVE X-CAP-AMT            (#I1) TO #SCR-CAP-AMT          (#I2)
  MOVE X-CAP-AMT-2          (#I1) TO #SCR-CAP-AMT-2        (#I2)
  MOVE X-NXT-YR-ACCUM-INT   (#I1) TO #SCR-NXT-YR-ACC-INT   (#I2)
  MOVE X-NXT-YR-ACCUM-INT-2 (#I1) TO #SCR-NXT-YR-ACC-INT-2 (#I2)
*
  move x-alt-lp-date        (#i1) to #work-date                 /* vt2 \/
  compress #work-date-mm '/'
    #work-date-dd  '/'
    #work-date-yyyy into #scr-alt-lp-date  (#i2)  leaving no    /* vt2 /\
*
  DECIDE ON FIRST VALUE X-ALT-LP-IND   (#I1)
    VALUE '1' MOVE 'ALP' TO #SCR-ALP-IND (#I2)
    VALUE '2' MOVE 'AIP' TO #SCR-ALP-IND (#I2)
    VALUE '3' MOVE 'ELP' TO #SCR-ALP-IND (#I2)
    VALUE '4' MOVE 'EIP' TO #SCR-ALP-IND (#I2)
    VALUE '6' MOVE 'MIP' TO #SCR-ALP-IND (#I2)
    VALUE '8' MOVE 'CIP' TO #SCR-ALP-IND (#I2)  /* DW3
    VALUE '9' MOVE 'AIW' TO #SCR-ALP-IND (#I2)  /* DW12
    VALUE 'L'
      MOVE 'AIL' TO #SCR-ALP-IND (#I2)  /* CAP Pending Loan DW16
      MOVE TRUE TO #HAS-AIL-POLICY
    VALUE '*'                                             /* DW21
      MOVE 'AI*' TO #SCR-ALP-IND (#I2)  /* CAP Pending Loan after ATHPIALA
      MOVE TRUE TO #HAS-AIL-POLICY
    VALUE 'E' MOVE 'EIL' TO #SCR-ALP-IND (#I2)  /* PM18
      MOVE TRUE TO #HAS-AIL-POLICY
    VALUE 'C'                                             /* PM22
      MOVE 'CIL' TO #SCR-ALP-IND (#I2)                    /* PM22
      MOVE TRUE TO #HAS-AIL-POLICY                        /* PM22
    VALUE '!'                                             /* PM22
      MOVE 'CI*' TO #SCR-ALP-IND (#I2)                    /* PM22
      MOVE TRUE TO #HAS-AIL-POLICY                        /* PM22
    NONE IGNORE
  END-DECIDE
*
  DECIDE ON FIRST VALUE X-ALT-LP-IND-2 (#I1)
    VALUE '1' MOVE 'ALP' TO #SCR-ALP-IND-2 (#I2)
    VALUE '2' MOVE 'AIP' TO #SCR-ALP-IND-2 (#I2)
    VALUE '3' MOVE 'ELP' TO #SCR-ALP-IND-2 (#I2)
    VALUE '4' MOVE 'EIP' TO #SCR-ALP-IND-2 (#I2)
    VALUE '6' MOVE 'MIP' TO #SCR-ALP-IND-2 (#I2)
    VALUE '8' MOVE 'CIP' TO #SCR-ALP-IND-2 (#I2) /* DW3
    VALUE '9' MOVE 'AIW' TO #SCR-ALP-IND-2 (#I2) /* DW12
    NONE IGNORE
  END-DECIDE
*
  MOVE X-ALT-LP-AMT         (#I1) TO #SCR-ALP-AMT          (#I2)
  MOVE X-ALT-LP-AMT-2       (#I1) TO #SCR-ALP-AMT-2        (#I2)
*
  MOVE #ACC-INT (#I1) TO #SCR-ACC-INT (#I2)
  IF X-LOAN-AMOUNT (#I1) = 0
    RESET #SCR-INT-RATE   (#I2)
    RESET #SCR-DAILY-INT  (#I2)
  ELSE
    ADD 1 TO #NUM-LOANS
    MOVE EDITED X-INTEREST-RATE (#I1) (EM=ZZ.999) TO #SCR-INT-RATE(#I2)
    MOVE #SCR-INT-RATE (#I2) TO #SCR-INT-RATE-X
    COMPUTE ROUNDED #SCR-DAILY-INT (#I2)  =
      X-LOAN-AMOUNT (#I1) * (X-INTEREST-RATE (#I1) / 365) / 100
  END-IF
*
  MOVE #ACC-INT-2 (#I1) TO #SCR-ACC-INT-2 (#I2)
  IF X-LOAN-AMOUNT-2 (#I1) = 0
    RESET #SCR-INT-RATE-2  (#I2)
    RESET #SCR-DAILY-INT-2 (#I2)
  ELSE
    ADD 1 TO #NUM-LOANS
    MOVE EDITED #CURR-VAR-INT-RATE (EM=ZZ.999) TO #SCR-INT-RATE-2 (#I2)
    COMPUTE ROUNDED #SCR-DAILY-INT-2 (#I2) =
      X-LOAN-AMOUNT-2 (#I1) * (#CURR-VAR-INT-RATE / 365) / 100
    MOVE #SCR-INT-RATE-2 (#I2) TO #SCR-INT-RATE-X-2
  END-IF
*
  IF X-BILL-SW (#I1) NE '1'
    RESET X-BILL-INTEREST-AMT (#I1)
  END-IF
*
  IF X-BILL-SW-2 (#I1) NE '1'
    RESET X-BILL-INTEREST-AMT-2 (#I1)
  END-IF
*
  ADD X-LOAN-AMOUNT   (#I1) TO #SCR-TOT-LOAN-AMT
  ADD X-LOAN-AMOUNT-2 (#I1) TO #SCR-TOT-LOAN-AMT
  ADD X-LOAN-AMOUNT   (#I1) TO #SCR-TOT-FIX-LOAN
  ADD X-LOAN-AMOUNT-2 (#I1) TO #SCR-TOT-VAR-LOAN
  ADD #SCR-ACC-INT    (#I2) TO #SCR-TOT-ACC-INT
  ADD #SCR-ACC-INT-2  (#I2) TO #SCR-TOT-ACC-INT
  ADD #SCR-ACC-INT    (#I2) TO #SCR-TOT-FIX-INT
  ADD #SCR-ACC-INT-2  (#I2) TO #SCR-TOT-VAR-INT
  COMPUTE #SCR-TOT-P-I = #SCR-TOT-LOAN-AMT + #SCR-TOT-ACC-INT
  ADD X-CAP-AMT       (#I1) TO #SCR-TOT-CAP-INT
  ADD X-CAP-AMT-2     (#I1) TO #SCR-TOT-CAP-INT
  ADD X-CAP-AMT       (#I1) TO #SCR-TOT-FIX-CAP
  ADD X-CAP-AMT-2     (#I1) TO #SCR-TOT-VAR-CAP
  ADD X-BILL-INTEREST-AMT   (#I1) TO #SCR-TOT-BILL-INT
  ADD X-BILL-INTEREST-AMT-2 (#I1) TO #SCR-TOT-BILL-INT
  ADD X-INTEREST-RECEIVED   (#I1) TO #SCR-TOT-INT-RCVD
  ADD X-INTEREST-RECEIVED-2 (#I1) TO #SCR-TOT-INT-RCVD
  ADD X-INTEREST-RECEIVED   (#I1) TO #SCR-TOT-FIX-INT-RCVD
  ADD X-INTEREST-RECEIVED-2 (#I1) TO #SCR-TOT-VAR-INT-RCVD
  ADD X-ALT-LP-AMT          (#I1) TO #SCR-TOT-ALT-AMT
  ADD X-ALT-LP-AMT-2        (#I1) TO #SCR-TOT-ALT-AMT
*
  IF #I2 LE 5
    ADD X-LOAN-AMOUNT   (#I1) TO #SCR-SUB-LOAN-AMT
    ADD X-LOAN-AMOUNT-2 (#I1) TO #SCR-SUB-LOAN-AMT
    ADD #SCR-ACC-INT    (#I2) TO #SCR-SUB-ACC-INT
    ADD #SCR-ACC-INT-2  (#I2) TO #SCR-SUB-ACC-INT
    ADD X-CAP-AMT       (#I1) TO #SCR-SUB-CAP-INT
    ADD X-CAP-AMT-2     (#I1) TO #SCR-SUB-CAP-INT
    ADD X-BILL-INTEREST-AMT   (#I1) TO #SCR-SUB-BILL-INT
    ADD X-BILL-INTEREST-AMT-2 (#I1) TO #SCR-SUB-BILL-INT
    ADD X-INTEREST-RECEIVED   (#I1) TO #SCR-SUB-INT-RCVD
    ADD X-INTEREST-RECEIVED-2 (#I1) TO #SCR-SUB-INT-RCVD
    ADD X-ALT-LP-AMT          (#I1) TO #SCR-SUB-ALT-AMT
    ADD X-ALT-LP-AMT-2        (#I1) TO #SCR-SUB-ALT-AMT
  END-IF
*
  IF  (X-ALT-LP-IND   (#I1) = '9')  /* DW12
      OR (X-ALT-LP-IND-2 (#I1) = '9')
    MOVE 'AIW' TO #SCR-LBL-ALP
  END-IF
*
  IF  (X-ALT-LP-IND   (#I1) = 'L' OR = '*')  /* DW16 DW21
    MOVE 'AIL' TO #SCR-LBL-ALP
  END-IF
*
  IF  (X-ALT-LP-IND   (#I1) = 'E')  /* PM18
    MOVE 'EIL' TO #SCR-LBL-ALP      /* PM18
  END-IF                            /* PM18
*
  IF  (X-ALT-LP-IND   (#I1) = 'C' OR = '!')       /* PM22
    MOVE 'CIL' TO #SCR-LBL-ALP                    /* PM22
  END-IF                                          /* PM22
*
  IF  (X-ALT-LP-IND   (#I1) = '8')  /* DW3
      OR (X-ALT-LP-IND-2 (#I1) = '8')
    MOVE 'CIP' TO #SCR-LBL-ALP
  END-IF
*
  IF  (X-ALT-LP-IND   (#I1) = '6')
      OR (X-ALT-LP-IND-2 (#I1) = '6')
    MOVE 'MIP' TO #SCR-LBL-ALP
  END-IF
*
  IF  (X-ALT-LP-IND   (#I1) = '4')
      OR (X-ALT-LP-IND-2 (#I1) = '4')
    MOVE 'EIP' TO #SCR-LBL-ALP
  END-IF
*
  IF  (X-ALT-LP-IND   (#I1) = '3')
      OR (X-ALT-LP-IND-2 (#I1) = '3')
    MOVE 'ELP' TO #SCR-LBL-ALP
  END-IF
*
  IF  (X-ALT-LP-IND   (#I1) = '2')
      OR (X-ALT-LP-IND-2 (#I1) = '2')
    MOVE 'AIP' TO #SCR-LBL-ALP
  END-IF
*
  IF  (X-ALT-LP-IND   (#I1) = '1')
      OR (X-ALT-LP-IND-2 (#I1) = '1')
    MOVE 'ALP' TO #SCR-LBL-ALP
  END-IF
*
  IF X-ALT-LP-IND (#I1) = '4'
    ADD X-ALT-LP-AMT (#I1) TO #PAD-AMT
  ELSE
    IF X-ALT-LP-IND (#I1) = '3'
      ADD X-ALT-LP-AMT (#I1) TO #PAD-AMT
    END-IF
  END-IF
*
  IF X-ALT-LP-IND-2 (#I1) = '4'
    ADD X-ALT-LP-AMT-2 (#I1) TO #PAD-AMT
  ELSE
    IF X-ALT-LP-IND-2 (#I1) = '3'
      ADD X-ALT-LP-AMT-2 (#I1) TO #PAD-AMT
    END-IF
  END-IF
*
  MOVE ISSUE-DATE (#I1) TO #ISS-DT-YYYYMMDD-N
  MOVE PLAN (#I1) TO #SCR-PLN (#I2)
  MOVE PREM-RATING (#I1) TO #SCR-RATING (#I2)
  MOVE ISSUE-AGE (#I1) TO #SCR-AGE (#I2)
*
  DECIDE FOR FIRST CONDITION
    WHEN AUTO-ISSUE (#I1) = 'Y'
      #SCR-AUTO-ISSUE (#I2)     := 'Yes'
      #SCR-AUTO-ISSUE-LBL (#I2) := #SCR-AUTO-ISSUE-LABEL
    WHEN AUTO-ISSUE (#I1) = 'N'
      #SCR-AUTO-ISSUE (#I2)     := 'No'
      #SCR-AUTO-ISSUE-LBL (#I2) := #SCR-AUTO-ISSUE-LABEL
    WHEN NONE
      RESET #SCR-AUTO-ISSUE (#I2) #SCR-AUTO-ISSUE-LBL (#I2)
  END-DECIDE
*
  IF MEC-IND (#I1) = 'Y'   /* added 1/5/2003
    MOVE TRUE TO #AT-LEAST-1-MEC
    MOVE 'M' TO #SCR-MEC-IND (#I2)
    MOVE 'MEC' TO #SCR-MEC (#I2)
  END-IF
*
  CALLNAT 'GP-P2P' 3 POLICY-ID(#I1) v_RC  J                /* bz-GPL/GP2
*  IF v_RC <> 0 PRINT 'ST Command: Error in GP-P2P' END-IF  /* bz-GPL/GP2  --db
  IF J <> 0                                                /* bz-GPL/GP2
    IF #SCR-MEC(#I2) = 'MEC'                              /* bz-GPL/GP2
      #SCR-MEC(#I2):= 'M/G'                              /* bz-GPL/GP2
    ELSE                                                  /* bz-GPL/GP2
      #SCR-MEC(#I2):= 'GIP'                              /* bz-GPL/GP2
    END-IF                                                /* bz-GPL/GP2
  END-IF

  IF #CGA-CLERK = 'DRW' OR = 'VXT'                    /* vt was 'LCC'
    MOVE 'UN' TO #SCR-ORIG-UNITS-LBL
    IF PAY-STATUS (#I1) = '44' OR = '45'   /* eti or rpu
      IF ISSUE-DATE (#I1) LT 19941201
        MOVE NUM-MBRSHIPS (#I1) TO #SCR-ORIG-UNITS (#I2)
      ELSE
        MOVE EXPIRY-DAY (#I1) TO #SCR-ORIG-UNITS (#I2)
      END-IF
    ELSE
      IF FACE-AMOUNT (#I1) GE 500000
        MOVE 99 TO #SCR-ORIG-UNITS (#I2)
      ELSE
        COMPUTE #SCR-ORIG-UNITS (#I2) = FACE-AMOUNT (#I1) / 5000
      END-IF
    END-IF
  END-IF
*
  CALLNAT 'GPYSTSXX' PAY-STATUS (#I1) #SCR-STATUS(#I2) #INVALID #ERR-MSG
*
  IF ONLINE-ACTION (#I1) = '9'
    MOVE 'ETIM' TO #SCR-STATUS (#I2)
  END-IF
  IF FUNCTION-TERM-POLICY(<PLAN(#I1)>)                           /* YK4
      AND (FACE-AMOUNT (#I1) = 0)
    MOVE 'EXPD' TO #SCR-STATUS (#I2)               /* DW9
  END-IF
*
  MOVE OWNERSHIP-FLAG (#I1) TO #SCR-OWN-FLG   (#I2)
*
*   callnat 'GOWNRSXX' id-number #non-ins-owner #multi-owner #owner-occ-9(1:9)   /* TT5 BEGIN
*
  #POLICY-OWNER := GET-POLICY-OWNER(<ST-V.POLICY-ID(#I1)>)
  IF #POLICY-OWNER = 0
    IGNORE
  ELSE
    if #POLICY-OWNER ne id-number
      find contact with id-number = #POLICY-OWNER
        move contact.contact-id to #contact-id
        #scr-own-flg-disp (#i2) := FUNCTION-FRM-NAME
          (<#CONTACT-ID,
          #FIRST-NAME,
          #MIDDLE-NAME,
          #LAST-NAME,
          #SUFFIX-n>)
      end-find                                                                     /* TT5 END
    end-if
  END-IF
*
  #SCR-PAD-PEND (#I2) := EZPAY-START (#I1)      /* PM18
  MOVE LAST-DURATION  (#I1) TO #SCR-LAST-DUR  (#I2) /**********
  MOVE ISSUE-DATE     (#I1) TO #YYYYMMDD
  COMPRESS #MM-A #DD-A #YYYY-A INTO #SCR-EFF-DATE (#I2) WITH '/'
  MOVE ISSUE-DATE     (#I1) TO #WYYYYMMDD-N
  MOVE BY NAME #WYYYYMMDD TO #WMMDDYYYY
  MOVE #WMMDDYYYY-N TO #SCR-EFF-DTE   (#I2)
  MOVE PAID-TO-DATE   (#I1) TO #WYYYYMMDD-N
  MOVE X-NXT-YR-ACCUM-INT   (#I1) TO #NXT-YR-ACC-INT   (#I2)
  MOVE X-NXT-YR-ACCUM-INT-2 (#I1) TO #NXT-YR-ACC-INT-2 (#I2)
*
  IF  (ISSUE-DATE (#I1) LT 19970101)    /* old or new
      OR (MONTH-ALLOC-AMT (#I1) = 999.99)  /*   processing
      OR (ISS-DT-DD (#I1) = 1)    /* NXT PROCESSING WITH ISS DAY = 1
    IF #WYYYYMMDD.#WMM = 02
      MOVE 28 TO #WYYYYMMDD.#WDD
    ELSE
      IF #WYYYYMMDD.#WMM = 4 OR = 6 OR = 9 OR = 11
        MOVE 30 TO #WYYYYMMDD.#WDD
      ELSE
        MOVE 31 TO #WYYYYMMDD.#WDD
      END-IF
    END-IF
  ELSE
    IF ((ISS-DT-MM (#I1) = 2)
        AND (ISS-DT-DD (#I1) = 28 OR = 29))  /* LAST DAY OF MONTH
        OR ((ISS-DT-MM (#I1) = 4 OR = 6 OR = 9 OR = 11)
        AND (ISS-DT-DD (#I1) = 30))
        OR ((ISS-DT-MM (#I1) = 1 OR = 3 OR = 5 OR = 7 OR = 8 OR = 10
        OR = 12) AND (ISS-DT-DD (#I1) = 31))
      IF #WYYYYMMDD.#WMM = 02
        MOVE 27 TO #WYYYYMMDD.#WDD /* nxt to last day of month
      ELSE
        IF #WYYYYMMDD.#WMM = 4 OR = 6 OR = 9 OR = 11
          MOVE 29 TO #WYYYYMMDD.#WDD
        ELSE
          MOVE 30 TO #WYYYYMMDD.#WDD
        END-IF
      END-IF
    ELSE
      COMPUTE #WYYYYMMDD.#WDD = ISS-DT-DD (#I1) - 1
*
      IF (#WYYYYMMDD.#WMM = 2) AND (#WYYYYMMDD.#WDD GE 27)
        MOVE 26 TO #WYYYYMMDD.#WDD /* nxt to nxt to last day of month
      END-IF
    END-IF
  END-IF
*
  MOVE BY NAME #WYYYYMMDD TO #WMMDDYYYY
  MOVE #WMMDDYYYY-N TO #SCR-PD-THRU (#I2)
*
* IF MODE (#I1) = 'A' OR = 'S' OR = 'Q' OR = 'M' /* do not add 0124
  MOVE BILL-TO-DATE (#I1) TO #WYYYYMMDD-N
  MOVE BY NAME #WYYYYMMDD TO #WMMYYYY
  MOVE #WMMYYYY-N TO #SCR-BILL-TO (#I2)
* END-IF
*
  MOVE PAID-UP-DATE (#I1) TO #WYYYYMMDD-N
  MOVE BY NAME #WYYYYMMDD TO #WMMYYYY
  MOVE #WMMYYYY-N TO #SCR-PD-UP (#I2)
*
  IF ONLINE-ACTION-GN = '2'          /* NEW MEMBER
    IGNORE
  ELSE
    IF ONLINE-ACTION(#I1) = '1'     /*ADDL MEMBER
      IGNORE
    ELSE
      MOVE LAST-DURATION (#I1) TO #SCR-LAST-DUR (#I2)
    END-IF
  END-IF
*
  IF CONVERSION-FLAG (#I1) = 'C' OR = 'N'
    MOVE SMOKER-FLAG (#I1) TO #SCR-SMK (#I2)
  ELSE
    MOVE '-' TO #SCR-SMK (#I2)
  END-IF
*
  RESET #AVL-TDIV
  IF   (ISSUE-DATE(#I1) GE 19970101)
      AND (MONTH-ALLOC-AMT (#I1) NE 999.99)
      AND (NOT PLAN (#I1) = 'SO' OR = 'FSO')  /* SO ALWAYS $1,000
    COMPUTE #AVL-TDIV = BEG-CASH-VALUE (#I1) - MONTH-ALLOC-AMT (#I1)
    IF #AVL-TDIV GT 0
      MOVE '#' TO #SCR-TPP-TDIV-IND (#I2)
      MOVE '# CSV & DB Include Termination Dividend' TO #SCR-OPEN-FIELD
      COMPRESS #SCR-EXCP-LIST (#I2) '/CSV INCL TRM DIV'
        INTO #SCR-EXCP-LIST (#I2) LEAVING NO
    ELSE
      RESET #AVL-TDIV
    END-IF
  END-IF
*
  MOVE #DB (#I1) TO #SCR-CURR-DB  (#I2)
*
  IF   (ISSUE-DATE(#I1) GE 19970101)
      AND (MONTH-ALLOC-AMT (#I1) = 999.99)
    MOVE '*' TO #PRE-1997 (#I2)
    COMPRESS #SCR-NOT-MSG '* PRE 1997 METHOD' INTO #SCR-NOT-MSG
    COMPRESS #SCR-EXCP-LIST (#I2) '/PRE 1997 METHOD'
      INTO #SCR-EXCP-LIST (#I2) LEAVING NO
  END-IF
  ADD  #SCR-CURR-DB  (#I2) TO #SCR-TOT-CURR-DB
*
  MOVE FACE-AMOUNT (#I1) TO #SCR-AMOUNT (#I2)
*
* IF PLAN (#I1) = 'RT' /* to handle renewal month  (2/2002)
  IF PLAN (#I1) = 'RT'
      AND (#SCR-PUR (#I2) NE 'P') /* purged policy  (3/2004)
    MOVE #SCR-CURR-DB (#I2) TO #SCR-AMOUNT (#I2)
  END-IF
*
  MOVE #CSV (#I1) TO #SCR-CURR-CV  (#I2)
  PERFORM CALC-PREMS-PAID-SETUP
*
  MOVE TRUE TO #HAS-COST-BASIS
  IF COST-BASIS (#I1) = 0
*   MOVE #PREMS-PAID TO #SCR-COST-BASIS (#I2)
    MOVE #TPP (#I1) TO #SCR-COST-BASIS (#I2)
  ELSE
    COMPUTE #SCR-COST-BASIS (#I2) = COST-BASIS (#I1)
      + (#TPP (#I1) - TOT-PREMIUMS-PAID (#I1))
  END-IF
*
* IF NOT PLAN (#I1) = 'RT' OR = 'LT'                            /* YK4
*     AND ((PLAN-A1 (#I1) LT 'U') OR (PLAN-A1 (#I1) GT 'Z'))    /* YK4
  IF (NOT FUNCTION-TERM-POLICY(<PLAN(#I1)>))                    /* YK4
    IF (#TPP (#I1) GT CASH-VALUE (#I1)) /* CV never < tpp
        AND (X-FIRST-PLACE-FEE (#I1) = 0)             /* fpf has been paid
        AND (NOT PLAN (#I1) = 'SO' OR = 'FSO')     /* SCV-ONLY has no CSV
*     AND (PROCESS-IND NE 'S')                 /* AFSC MEMBER   DW24
      MOVE TRUE TO #TPP-CSV
      COMPRESS #SCR-TPP-TDIV-IND (#I2) '@'
        INTO #SCR-TPP-TDIV-IND (#I2) LEAVING NO
      COMPRESS #SCR-EXCP-LIST (#I2) '/TPP EX CSV'
        INTO #SCR-EXCP-LIST (#I2) LEAVING NO
    END-IF
  END-IF
*
  IF #SCR-CURR-CV (#I2) LT 0
    RESET #SCR-CURR-CV (#I2)
  END-IF
*
  MOVE #MCSV (#I1) TO #SCR-GUAR-CV (#I2)
  MOVE #TPP (#I1) TO #SCR-TPP (#I2)
  MOVE #SCR-TPP (#I2) TO #SCR-GUAR-CV (#I2)
*
  IF #SCR-GUAR-CV (#I2) LT 0
    RESET #SCR-GUAR-CV (#I2)
  END-IF
*     below removed as per khb 2/6/2002
* IF NOT CONV-DURATION (#I1) = 888 OR = 777
  ADD #SCR-GUAR-CV (#I2) TO #SCR-TOT-GUAR-CV
* END-IF
*
  MOVE #CVALUE (#I1) TO #SCR-CASH-VALU (#I2)
  MOVE #LVALUE (#I1) TO #SCR-LOAN-VALU (#I2)
*
  IF  (PLAN (#I1) = 'SO' OR = 'FSO')     /* SCV-ONLY has no CSV
      OR (#SCR-LOAN-VALU (#I2) LT 0)
    RESET #SCR-LOAN-VALU (#I2)
  END-IF
  IF (NOT FUNCTION-TERM-POLICY(<PLAN(#I1)>))                   /* YK4
    IF #I2 LE 5
      ADD #SCR-CURR-CV   (#I2) TO #SCR-SUB-CURR-CV
      ADD #SCR-LOAN-VALU (#I2) TO #SCR-SUB-LOAN-VALU
    END-IF
*
    ADD #SCR-CURR-CV   (#I2) TO #SCR-TOT-CURR-CV
    ADD #SCR-LOAN-VALU (#I2) TO #SCR-TOT-LOAN-VALU
*
    IF   (ST-V.CONV-DURATION (#I1) = 999) /* cap mbr still paying
        AND (X-LOAN-AMOUNT (#I1) NE 0)
      COMPUTE #SCR-AVL-LV (#I2) = #SCR-LOAN-VALU(#I2)
        - X-LOAN-AMOUNT-2 (#I1) - #SCR-ACC-INT-2(#I2)
      COMPUTE #SCR-AVL-CV (#I2) = #SCR-CURR-CV  (#I2)
        - X-LOAN-AMOUNT-2 (#I1) - #SCR-ACC-INT-2(#I2)
    ELSE
      COMPUTE #SCR-AVL-LV(#I2) = #SCR-LOAN-VALU(#I2) - X-LOAN-AMOUNT(#I1)
        - X-LOAN-AMOUNT-2 (#I1) -#SCR-ACC-INT (#I2) - #SCR-ACC-INT-2(#I2)
      COMPUTE #SCR-AVL-CV(#I2) = #SCR-CURR-CV  (#I2) - X-LOAN-AMOUNT(#I1)
        - X-LOAN-AMOUNT-2 (#I1) -#SCR-ACC-INT (#I2) - #SCR-ACC-INT-2(#I2)
    END-IF
*
    IF #SCR-AVL-LV (#I2) LT 0
      RESET #SCR-AVL-LV (#I2)
    END-IF
*
    IF #SCR-AVL-LV (#I2) LT 0
      MULTIPLY  #SCR-AVL-LV-DOLS (#I2) BY -1
      MOVE -0 TO #SCR-AVL-LV-CENTS (#I2)   /* lob off cents (MBW)
    ELSE
      RESET #SCR-AVL-LV-CENTS (#I2)   /* lob off cents (MBW)
    END-IF
*
    IF #I2 LE 5
      IF #SCR-AVL-LV (#I2) GT 0
        ADD #SCR-AVL-LV (#I2) TO #SCR-SUB-AVL-LV
      END-IF
*
      IF #SCR-AVL-CV (#I2) GT 0
        ADD #SCR-AVL-CV (#I2) TO #SCR-SUB-AVL-CV
      END-IF
    END-IF
*
    IF #SCR-AVL-LV (#I2) GT 0
      ADD #SCR-AVL-LV-DOLS (#I2) TO #SCR-TOT-AVL-LV-DOLS
    END-IF
*
    IF #SCR-AVL-CV (#I2) GT 0
      ADD #SCR-AVL-CV (#I2) TO #SCR-TOT-AVL-CV
    END-IF
  END-IF
*
  IF   (CONV-DURATION (#I1) = 999)    /* CAP MBR POLICY
      AND (FACE-AMOUNT (#I1) LE 10000)
      AND (X-LOAN-AMOUNT (#I1) NE 0)
    MOVE 'No CV growth until CAP loan is repaid' TO #SCR-OPEN-FIELD
  END-IF
*
  MOVE MODE          (#I1) TO #SCR-MD       (#I2)
  MOVE ANNUAL-PREM   (#I1) TO #SCR-A-PREM   (#I2)
  COMPUTE #SCR-MON-PRM (#I2) = ANNUAL-PREM (#I1) / 12
*
  IF MODE (#I1) = 'A' OR = '1' /* DW1
    MOVE ANNUAL-PREM (#I1) TO #SCR-MD-PRM (#I2)
  ELSE
    IF MODE (#I1) = 'S' OR = '2' /* DW1
      COMPUTE #SCR-MD-PRM (#I2) = ANNUAL-PREM (#I1) / 2
    ELSE
      IF MODE (#I1) = 'Q' OR  = '4' /* DW1
        COMPUTE #SCR-MD-PRM (#I2) = ANNUAL-PREM (#I1) / 4
      ELSE
        COMPUTE #SCR-MD-PRM (#I2) = ANNUAL-PREM (#I1) / 12
*
        IF   (MODE (#I1) = 'E')
            AND (PAY-STATUS (#I1) LT '40')
          IF (PAD-CODE = 'E') AND (PT-YYYYMM (#I1) GT #TODAY-YYYYMM)
            IGNORE
          ELSE
            ADD #SCR-MD-PRM (#I2) TO #PAD-AMT
            IF PLAN(#I1) = 'EZ'                            /* YK5
              #PAD-AMT := #PAD-AMT - #EZ-DISCOUNT          /* YK5
            END-IF                                         /* YK5
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
*
  ADD #SCR-AMOUNT   (#I2) TO #SCR-TOT-AMOUNT
*
  IF PAY-STATUS (#I1) LE '40'
    ADD #SCR-MD-PRM (#I2) TO #SCR-TOT-MD-PRM
    IF #SCR-A-PREM (#I2) + #SCR-TOT-A-PREM GT 99999.99
      MOVE 99999.99 TO #SCR-TOT-A-PREM
    ELSE
      ADD #SCR-A-PREM (#I2) TO #SCR-TOT-A-PREM
    END-IF
  END-IF
*
  IF RID-PLAN (#I1) NE ' '
    MOVE RID-PLAN (#I1) TO #SCR-FBR-PLAN (#I2)
    MOVE RID-EFF-DT (#I1) TO #YYYYMMDD
    COMPRESS #MM-A #DD-A #YYYY-A INTO #SCR-FBR-EFF-DT (#I2) WITH '/'
    MOVE RID-PD-TO (#I1) TO #YYYYMMDD
*
    IF RID-EFF-DT-DD (#I1) = 1    /* NXT PROCESSING WITH ISS DAY = 1
      IF #MM = 02
        MOVE 28 TO #DD
      ELSE
        IF #MM = 4 OR = 6 OR = 9 OR = 11
          MOVE 30 TO #DD
        ELSE
          MOVE 31 TO #DD
        END-IF
      END-IF
    ELSE
      IF ((RID-EFF-DT-MM (#I1) = 2)
          AND (RID-EFF-DT-DD (#I1) = 28 OR = 29))  /* LAST DAY OF MO
          OR ((RID-EFF-DT-MM (#I1) = 4 OR = 6 OR = 9 OR = 11)
          AND (RID-EFF-DT-DD (#I1) = 30))
          OR ((RID-EFF-DT-MM (#I1) = 1 OR = 3 OR = 5 OR = 7 OR = 8 OR = 10
          OR = 12) AND (RID-EFF-DT-DD (#I1) = 31))
        IF #MM = 02
          MOVE 27 TO #DD /* NXT TO LAST DAY OF MONTH
        ELSE
          IF #MM = 4 OR = 6 OR = 9 OR = 11
            MOVE 29 TO #DD
          ELSE
            MOVE 30 TO #DD
          END-IF
        END-IF
      ELSE
        COMPUTE #DD = RID-EFF-DT-DD (#I1) - 1
*
        IF (#MM = 2) AND (#DD GE 27)
          MOVE 26 TO #DD /* NXT TO NXT TO LAST DAY OF MONTH
        END-IF
      END-IF
    END-IF
*
    COMPRESS #MM-A #DD-A #YYYY-A INTO #SCR-FBR-PD-TO (#I2) WITH '/'
    MOVE #EX-SPS-DB-BY-LINE (#I1) TO #SCR-FBR-SPS-DB  (#I2)
    MOVE #EX-DEP-DB-BY-LINE (#I1) TO #SCR-FBR-TOTAL-DEP (#I2)
*
    IF MODE (#I1) = 'A' OR = '1'  /* DW1
      COMPUTE #SCR-FBR-PREM (#I2) = #EX-FBR-PREM-BY-LINE (#I1) * 12
    ELSE
      IF MODE (#I1) = 'S' OR = '2'  /* DW1
        COMPUTE #SCR-FBR-PREM (#I2) = #EX-FBR-PREM-BY-LINE (#I1) * 6
      ELSE
        IF MODE (#I1) = 'Q' OR = '4'  /* DW1
          COMPUTE #SCR-FBR-PREM (#I2) = #EX-FBR-PREM-BY-LINE (#I1) * 3
        ELSE
          MOVE #EX-FBR-PREM-BY-LINE (#I1) TO #SCR-FBR-PREM (#I2)
*
          IF   (MODE (#I1) = 'E')                   /* DW8
              AND (PAY-STATUS (#I1) LT '40')
            IF (PAD-CODE = 'E') AND (RID-PT-YYYYMM(#I1)GT #TODAY-YYYYMM)
              IGNORE
            ELSE
              ADD #SCR-FBR-PREM (#I2) TO #PAD-AMT
            END-IF
          END-IF
        END-IF
      END-IF
    END-IF
*
    ADD #SCR-FBR-SPS-DB    (#I2) TO #SCR-TOT-SPS-DB
    ADD #SCR-FBR-TOTAL-DEP (#I2) TO #SCR-TOT-DEP-DB
    ADD #SCR-FBR-PREM      (#I2) TO #SCR-TOT-FBR-PREM
  END-IF
END-FOR /*(0873)
*
IF #AT-LEAST-1-MEC
  COMPRESS #SCR-NOT-MSG '-- MEC --' INTO #SCR-NOT-MSG
END-IF
*
IF #CGA-MF-SCR-COMMAND = MASK ('T')
  COMPRESS #SCR-NOT-MSG '- Trade-up - PLEASE VERIFY AMOUNTS' INTO #SCR-NOT-MSG  /* PM23
END-IF
*
IF #HAS-AAFM-CC
  COMPRESS #SCR-NOT-MSG '<<Pays by Credit Card>>' INTO #SCR-NOT-MSG
END-IF
*
IF #CGA-SCR-SUFFIX = 'CON'
  MOVE #SCR-TOT-A-PREM TO #AMT
  MOVE #AMT-DOLS  TO #CGA-MF-SCR-PARM-2
  MOVE #AMT-CENTS TO #CGA-MF-ORIG-PARM-2
  MOVE #SCR-TOT-CURR-CV TO #AMT
  MOVE #AMT-A TO #CGA-MF-SCR-PARM-1
  MOVE #SCR-TOT-CURR-DB TO #AMT
  MOVE #AMT-A TO #CGA-MF-ORIG-PARM-1
  FETCH 'C2V10PVP'
END-IF
*
IF #SCR-TOT-AVL-LV LT 0
  MULTIPLY  #SCR-TOT-AVL-LV-DOLS BY -1
END-IF
*
FOR #I1 1 TO 9
  IF   (ISSUE-DATE (#I1) NE 0)
      AND (STATUS (#I1) = 'D')
    MOVE ISSUE-DATE (#I1) TO #WKYYYYMMDD-N    /* GET MOST CURRENT ISS DT
    MOVE PAY-STATUS (#I1) TO #HOLD-PAY-STAT   /* pay-status
    MOVE MODE       (#I1) TO #HOLD-MODE       /* and mode
*
    IF  (MODE (#I1) = 'Q' OR = 'S' OR = 'A'
        OR = '4' OR = '2' OR = '1' OR = '0') /* DW1
        AND (PAY-STATUS (#I1) LT '40')          /* NOT PAID UP
      MOVE PAID-TO-DATE (#I1) TO #HOLD-PDTO-DATE
      DECIDE ON FIRST MODE (#I1)
        VALUE 'A'   ADD ANNUAL-PREM (#I1) TO #TOT-ASQ
        VALUE '1'   ADD ANNUAL-PREM (#I1) TO #TOT-ASQ
        VALUE 'S'   ADD (ANNUAL-PREM (#I1) / 2) TO #TOT-ASQ
        VALUE '2'   ADD (ANNUAL-PREM (#I1) / 2) TO #TOT-ASQ
        VALUE 'Q'   ADD (ANNUAL-PREM (#I1) / 4) TO #TOT-ASQ
        VALUE '4'   ADD (ANNUAL-PREM (#I1) / 4) TO #TOT-ASQ
        VALUE 'M'   ADD (ANNUAL-PREM (#I1) / 12) TO #TOT-ASQ
        VALUE '0'   ADD (ANNUAL-PREM (#I1) / 12) TO #TOT-ASQ
        NONE        IGNORE
      END-DECIDE
    END-IF
*
    MOVE ISS-DT-YYYYMM (#I1) TO #ISS-YYYYMM-PLUS-2
    ADD 2 TO #ISS-PLUS-2-YYYY
*
    IF   (MODE (#I1) = 'G')
        AND (PAY-STATUS    (#I1) = '21')
        AND (PT-YYYYMM     (#I1) LT #TODAY-YYYYMM)
        AND (PT-YYYYMM (#I1) GE #ISS-YYYYMM-PLUS-2)
      MOVE TRUE TO #GAWT-PENDING-QAPL
    END-IF
  END-IF
END-FOR
*
MOVE 01 TO #WKDD
*
ADD 2 TO #WKMM      /* 2 MONTHS FROM BEGINNING OF ISS DATE
IF #WKMM GT 12
  SUBTRACT 12 FROM #WKMM
  ADD 10000 TO #WKYYYYMMDD-N
END-IF
*
IF   (#TOT-FPF GE 1.00)   /* FPF DELINQUENT
    AND (#HOLD-PAY-STAT = '12')
    AND (*DATN GE #WKYYYYMMDD-N)
  MOVE '* FPF DELQT *' TO #SCR-ACCT-INFO
END-IF
*
IF   (DEBIT-CREDIT-AMT GE 400.00)   /* PUSP DELINQUENT
    AND (#HOLD-PAY-STAT = '47')
    AND (*DATN GE #WKYYYYMMDD-N)
    AND (#HOLD-MODE = 'G')            /*
  MOVE '* SNG PRM DELQT *' TO #SCR-ACCT-INFO
END-IF
*
ADD 1 TO #WKMM      /* 3 MONTHS FROM BEGINNING OF ISS DATE
IF #WKMM GT 12
  SUBTRACT 12 FROM #WKMM
  ADD 10000 TO #WKYYYYMMDD-N
END-IF
*
IF   (#TOT-FPF GE 1.00)      /* FPF DELINQUENT PENDINF LAPS/APL
    AND (#HOLD-PAY-STAT = '12')
  IF #TOT-FPF GE #SCR-TOT-LOAN-VALU
    IF *DATN GE #WKYYYYMMDD-N
      MOVE 'PENDING LAPSE' TO #SCR-ACCT-INFO
    END-IF
  ELSE
    IF *DATN GE #WKYYYYMMDD-N
      MOVE 'PENDING APL' TO #SCR-ACCT-INFO
    END-IF
  END-IF
END-IF
*
IF    (DEBIT-CREDIT-AMT GE 400.00) /* PUSP DELINQUENT PENDING LAPS/APL
    AND (#HOLD-PAY-STAT = '47')
    AND (#HOLD-MODE = 'G')            /*
  IF #TOT-FPF GE (#SCR-TOT-LOAN-VALU - DEBIT-CREDIT-AMT)
    IF *DATN GE #WKYYYYMMDD-N
      MOVE 'PENDING LAPSE' TO #SCR-ACCT-INFO
    END-IF
  ELSE
    IF *DATN GE #WKYYYYMMDD-N
      MOVE 'PENDING APL' TO #SCR-ACCT-INFO
    END-IF
  END-IF
END-IF
*
IF #HOLD-PDTO-DATE NE 0
    AND #AT-LEAST-1-PP
  MOVE #HOLD-PDTO-DATE TO #WKYYYYMMDD-N    /* GET LAST ASQ PDTO DATE
  MOVE 01 TO #WKDD
*
  ADD 2 TO #WKMM      /* 2 MONTHS FROM PDTO DATE
  IF #WKMM GT 12
    SUBTRACT 12 FROM #WKMM
    ADD 10000 TO #WKYYYYMMDD-N
  END-IF
*
  IF *DATN GE #WKYYYYMMDD-N           /* PREM DELQ PENDING LAPS/APL
    IF #CSV-LOAN-VALUE GE #TOT-ASQ
      MOVE 'PENDING APL' TO #SCR-ACCT-INFO
    ELSE
      MOVE 'PENDING LAPSE' TO #SCR-ACCT-INFO
    END-IF
  END-IF
END-IF
*
IF #GAWT-PENDING-QAPL
  COMPRESS #SCR-ACCT-INFO 'PENDING Q-APL' INTO #SCR-ACCT-INFO
END-IF
*  below removed 7/3/20010 as per khb
IF (ST-V.ALOT-AMT = 0) AND (ST-V.STOP-DATE NE 0)
  MOVE ST-V.STOP-DATE TO #YYYYMMDD
  COMPRESS #MM-A #DD-A #YYYY-A INTO #DATE-DISP WITH '/'
  COMPRESS #SCR-ACCT-INFO 'ALOT stopped' #DATE-DISP INTO #SCR-ACCT-INFO
END-IF
*
IF PAD-CODE = 'P' OR = 'N' OR = 'D' OR = 'L'
    OR = 'V' OR = 'W' OR = 'X' OR = 'Z'
  COMPRESS #SCR-ACCT-INFO 'EZ-Pay pending' INTO #SCR-ACCT-INFO
END-IF
*
IF #CGA-SCR-SUFFIX = 'LON'
  FORMAT IP=OFF
  INPUT /// 10X 'ENTER ADDITIONAL LOAN AMT IN DOLLARS' //
    15X '$' #ADDL-LOAN
  IF #ADDL-LOAN NE 0
    IF #SCR-TOT-LOAN-VALU - #ADDL-LOAN LT 0
      MOVE '** NEW LOAN AMOUNT EXCEEDS LOAN VALUE' TO #SCR-NOT-MSG
    ELSE
      MOVE #CURR-VAR-INT-RATE TO #NEW-RATE
*
      MOVE EDITED #ADDL-LOAN (EM=ZZ,ZZZ.99) TO #ADDL-LOAN-DISP
      MOVE EDITED #NEW-RATE  (EM=ZZ.9999) TO #NEW-RATE-DISP
      COMPRESS 'WITH AN ADDL LOAN(S) OF $' #ADDL-LOAN-DISP 'THE NEW'
        'INTEREST RATE WILL BE' #NEW-RATE-DISP INTO #SCR-NOT-MSG
    END-IF
  END-IF
END-IF
*
COMPRESS *INIT-USER '-' #CGA-CLERK INTO #SCR-TERMID LEAVING NO
*
* * * * * * * ONLY SHOW SELECTED LABELS IF SOMETHING TO SHOW * *
*
IF #HAS-COST-BASIS
  MOVE 'CUR-CST-BS' TO #SCR-LBL-COST-BAS
END-IF
*
IF #TPP-CSV
  COMPRESS #SCR-NOT-MSG '@-TPP exceeds CSV' INTO #SCR-NOT-MSG
END-IF
*
IF #PAD-AMT NE 0
  MOVE 'EZ-PAY AMT' TO #SCR-LBL-EZ-PAY
END-IF
*
IF APL-CNT NE 0
  MOVE 'APL-CNT' TO #SCR-LBL-APL-CNT
END-IF
*
IF ALOT-AMT NE 0
  MOVE 'ALLT' TO #SCR-LBL-ALT-AMT
END-IF
*
IF #TOT-FPF NE 0
*  IF PROCESS-IND = 'S'                               /* DW24
*    MOVE 'ONE-TIME-PMT-DUE' TO #SCR-LBL-1TIM
*  ELSE
  MOVE 'FPF' TO #SCR-LBL-FPF
*  END-IF
END-IF
*
MOVE BILL-DOLLAR TO #SCR-NET-BILL-PREM
IF   #AT-LEAST-1-PP
    AND #AT-LEAST-1-ASQM
    AND #AT-LEAST-1-NOT-PD
  MOVE 'CURR-BIL' TO #SCR-LBL-BIL-PRM
ELSE
  MOVE 'LAST-BIL' TO #SCR-LBL-BIL-PRM
END-IF
*
IF #TOT-BADJ NE 0
  MOVE 'BIL-ADJ' TO #SCR-LBL-BIL-ADJ
END-IF
*
IF DEBIT-CREDIT-AMT NE 0
  MOVE 'DB/CR' TO #SCR-LBL-DB-CR
END-IF
*
PERFORM SUM-TERM-REFUND                    /* PM30
IF #TOTAL-TRF NE 0                         /* PM30
  #SCR-LBL-TERM-RF := 'TERM REFUND CREDIT' /* PM30
END-IF                                     /* PM30
*
IF #AT-LEAST-1-POL-NON-MBR
  MOVE 'N/D' TO #SCR-LBL-PL-OWNER
END-IF
*
FOR #I1 1 TO 9   /* get 1st active pol
  IF STATUS (#I1) = 'D'
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF #I1 GT 9
  MOVE 1 TO #I1
END-IF
*
IF (ISSUE-DATE (#I1) GE 19970101) AND (MONTH-ALLOC-AMT (#I1) NE 999.99)
    AND (STATUS (#I1) = 'D')
    AND (NOT PLAN (#I1) = 'SO' OR = 'FSO')
    AND (NOT INTRO-FLAG = 'S' OR = 'K' OR = 'G'
    OR = 'O' OR = 'P' OR = 'Q')
    AND (PROCESS-IND = 'G')        /* Only applies if member & P-I is G/F   /* DW26
  RESET #SVC-FEE
  IF DUES-ALL-PAID-IND = 'Y'
    MOVE 'All DUES are paid' TO #SCR-DUES-INFO
  ELSE
    IF PAY-STATUS (#I1) LT '40'
      DECIDE ON FIRST VALUE PLAN (#I1)
        VALUE '2PF' MOVE #SVC-FEE-2P TO #SVC-FEE
        VALUE '3PF' MOVE #SVC-FEE-3P TO #SVC-FEE
        VALUE '4PF' MOVE #SVC-FEE-4P TO #SVC-FEE
        VALUE '5PF' MOVE #SVC-FEE-5P TO #SVC-FEE
        VALUE '6PF' MOVE #SVC-FEE-6P TO #SVC-FEE
        VALUE '7PF' MOVE #SVC-FEE-7P TO #SVC-FEE
        VALUE '8PF' MOVE #SVC-FEE-7P TO #SVC-FEE
        VALUE '9PF' MOVE #SVC-FEE-7P TO #SVC-FEE
        VALUE '7P'  MOVE #SVC-FEE-7P TO #SVC-FEE
        VALUE '20P' MOVE #SVC-FEE-20 TO #SVC-FEE
        VALUE '30P' MOVE #SVC-FEE-30 TO #SVC-FEE
        VALUE 'OL'  MOVE #SVC-FEE-OL TO #SVC-FEE
*       VALUE 'RT'  MOVE #SVC-FEE-TM TO #SVC-FEE   /* YK4
*       VALUE 'LT'  MOVE #SVC-FEE-TM TO #SVC-FEE   /* YK4
        NONE        IGNORE
      END-DECIDE
*
*     IF   (PLAN-A1 (#I1) GE 'U')                /* YK4
*         AND (PLAN-A1 (#I1) LE 'Z')             /* YK4
      IF FUNCTION-TERM-POLICY(<PLAN(#I1)>)       /* YK4
        MOVE #SVC-FEE-TM TO #SVC-FEE
      END-IF
*
      IF PLAN (#I1) = MASK (NN'F')
        IF PLAN (#I1) LE '19F' MOVE #SVC-FEE-10 TO #SVC-FEE ELSE
          IF PLAN (#I1) LE '29F' MOVE #SVC-FEE-20 TO #SVC-FEE ELSE
            IF PLAN (#I1) LE '34F' MOVE #SVC-FEE-30 TO #SVC-FEE ELSE
              MOVE #SVC-FEE-OL TO #SVC-FEE
            END-IF END-IF END-IF
      END-IF
*
      MOVE EDITED #SVC-FEE (EM=Z9.99) TO #SCR-DUES-INFO
      COMPRESS 'Mnthly-dues' #SCR-DUES-INFO INTO #SCR-DUES-INFO
    END-IF
  END-IF
*
  IF   (MODE (#I1) = 'E')
      AND (PAY-STATUS (#I1) LT '40')
      AND (PT-YYYYMM (#I1) LE #TODAY-YYYYMM)
    ADD #SVC-FEE TO #PAD-AMT
  END-IF
*
  IF DUES-BALANCE NE 0
    MOVE EDITED DUES-BALANCE (EM=-ZZ9.99) TO #WORK-AMT
    COMPRESS #SCR-DUES-INFO 'Dues-balance' #WORK-AMT INTO #SCR-DUES-INFO
  END-IF
*
  IF DUES-FPF NE 0
    MOVE EDITED DUES-FPF (EM=-ZZ9.99) TO #WORK-AMT
    COMPRESS #SCR-DUES-INFO 'Dues-FPF' #WORK-AMT INTO #SCR-DUES-INFO
  END-IF
*
  IF DUES-TOT-PAID NE 0
    MOVE EDITED DUES-TOT-PAID (EM=-ZZ9.99) TO #WORK-AMT
    COMPRESS #SCR-DUES-INFO 'Dues-Tot-paid' #WORK-AMT
      INTO #SCR-DUES-INFO
  END-IF
ELSE    /* to show terminated dues balances
  IF DUES-BALANCE NE 0
    MOVE EDITED DUES-BALANCE (EM=-ZZ9.99) TO #WORK-AMT
    COMPRESS #SCR-DUES-INFO 'Dues-balance' #WORK-AMT INTO #SCR-DUES-INFO
  END-IF
*
  IF DUES-FPF NE 0
    MOVE EDITED DUES-FPF (EM=-ZZ9.99) TO #WORK-AMT
    COMPRESS #SCR-DUES-INFO 'Dues-FPF' #WORK-AMT INTO #SCR-DUES-INFO
  END-IF
END-IF
*
IF #SVC-ONLY
  COMPRESS '                                              *ACCD'
    'Death Benefit only on SO*' TO #SCR-OPEN-FIELD
END-IF
*
RESIZE ARRAY #SVC-MEMBER TO (1 : 1)                                              /* TT4 BEGIN
#SVC-MEMBER.SVC-ID-NUMBER (1) := ST-V.ID-NUMBER
CALLNAT 'OBJNMB02' #MSG #SVC-COUNT #SVC-MEMBER (*)
**CALLNAT 'OBJNMB01' #GET-BY-CN #MSG #SVC-MEMBER
IF #MSG = ' '
  FOR J 1 TO #SVC-COUNT
    IF J = 1
      #PLAN-INFO := *TRIM(GET-PLAN-INFO(<#SVC-MEMBER.SVC-PLAN (J) >)(1) )
      #PLAN-MODE :=
        *TRIM(FUNCTION-PAYMENT-MODE(<#SVC-MEMBER.SVC-MODE (1) >)(1) )
      IF #SVC-COUNT > 1
        #PLAN-INFO := 'Multiple Services - Press F4 to select one'
      ELSE
        COMPRESS 'Services Info:' #PLAN-INFO INTO #PLAN-INFO
      END-IF
    END-IF
    IF #SVC-COUNT > 1
      RESET #WORK-AMT
    ELSE
      IF #SVC-MEMBER.SVC-STATUS (J) = 'A'
        IF #SVC-MEMBER.SVC-PAY-UP (J) <> 'Y'
          IF #SVC-MEMBER.SVC-PLAN (J) = #PS-SVC-PLAN
            #MODAL-PREM := #SVC-MEMBER.SVC-MONTHLY-RATE (J)
              * F-PAY-MONTHS(<#SVC-MEMBER.SVC-MODE (J) >)
            MOVE EDITED #MODAL-PREM (EM=ZZZZZZ9.99) TO #WORK-AMT
            COMPRESS ' Modal Premium:' *TRIM(#WORK-AMT) INTO #WORK-AMT
          END-IF
        ELSE
          COMPRESS 'Pay Mode-' #PLAN-MODE INTO #WORK-AMT
        END-IF
      ELSE
        IF #SVC-MEMBER.SVC-STATUS (J) = 'P'
          #WORK-AMT := '- Pending Approval'
        ELSE
          IF #SVC-MEMBER.SVC-STATUS (J) = 'F'
            #WORK-AMT := '- First Payment Received'
          ELSE
            #WORK-AMT := '- Plan not Active'
          END-IF
        END-IF
      END-IF
    END-IF
  END-FOR
  if #plan-info ne ' '                                                          /* vt4 \/
    compress #scr-dues-info 'Additional SVCs. Press PF4'
      into #scr-dues-info
*     COMPRESS FULL #scr-dues-info
*       #PLAN-INFO
*       #WORK-AMT
*       #PLAN-MODE
*       INTO #SCR-DUES-INFO                                                      /* TT4 END
  end-if                                                      /* TT4 END
END-IF
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*
IF #HAS-FBR
  COMPRESS #SCR-OPEN-FIELD '- FBR info follows' INTO #SCR-OPEN-FIELD
END-IF
*
IF (ALOT-SW NE ' ') AND (#CGA-CLERK = 'VXT' OR = 'KEC')   /* vt 06/19/2013
  COMPRESS 'ALOT-SW is' ALOT-SW #SCR-NOT-MSG INTO #SCR-NOT-MSG
END-IF
*
IF #PULT-POL    /* DW11
  COMPRESS #SCR-NOT-MSG '*** LTCSO ***' INTO #SCR-NOT-MSG
END-IF
*
IF CAP-BILL-DATE NE 0                             /* DW15
  MOVE CAP-BILL-DATE  TO #YYYYMMDD
  COMPRESS #MM-A #DD-A #YYYY-A INTO #DATE-DISP WITH '/'
  COMPRESS #SCR-NOT-MSG ' -CAP-BILL-DATE is' #DATE-DISP INTO #SCR-NOT-MSG
END-IF
*
IF #HAS-AIL-POLICY                                /* DW16 PM18 PM22
  COMPRESS #SCR-NOT-MSG '*HAS AIL/EIL/CIL Condition' INTO #SCR-NOT-MSG
END-IF
*
* IF  (#CGA-USER-COMPANY = 'S') /* an AFSC USER         /* DW24
* OR (PROCESS-IND = 'S') /* AFSC MEMBER                 /* DW24
*
IF (#CGA-ORIG-SUFFIX = 'PRE')  /* to force dons layout  /* DW24
* AND #CGA-USER-COMPANY NE 'S'                          /* RE1 PM28
  PERFORM DONS-ST-LAYOUT
ELSE
  PERFORM REG-ST-LAYOUT
END-IF
*
IF *DEVICE = 'BATCH'    /* called by athplaps
    OR (#CGA-SCR-SUFFIX = 'P22')
    OR (#CGA-ORIG-SUFFIX = 'P22')    /* bz1
  ESCAPE ROUTINE
END-IF
*
IF #CGA-SCR-COMMAND = '*'
  MOVE 'ST' TO #CGA-SCR-COMMAND
END-IF
*
**IF #AFFL-CLIENT                                   /* DW23            RE1
* MOVE 'SAS' TO #CGA-SCR-SUFFIX                     /* YK3
* FETCH 'S2600PST'                                  /* YK3
* FETCH 'C2600PST'                                  /* YK3
**END-IF                                            /* RE1
*
FETCH 'G1000PXX'
*
******************************************************
DEFINE SUBROUTINE DONS-ST-LAYOUT
******************************************************
*
IF #NUM-LINES GT 3
  MOVE (AD=N) TO #CV-GEN #CV-GEN-X (*)
*
  MOVE #SCR-OPEN-FIELD TO #HOLD-LINE
  COMPRESS #SCR-NOT-MSG '* Has more than 3 Lines *' INTO #SCR-NOT-MSG
  MOVE '***** Press ENTER to see Policy Detail Information  *****'
    TO #SCR-OPEN-FIELD
ELSE
  COMPRESS '  FAC-AMT    A-PREM MD     M-PRM   T-PR-PD LOAN-VALU   C'
    'URR-CSV       CURR-DB' INTO #SCR-LAST-HDR LEAVING NO
END-IF
*
MOVE *DATN TO #TODAY-YYYYMMDD  /* COMMENT OUT THIS SECTION IF YOU <<><<
*
examine st-v.plan(*) for 'GT1' index #idx                                              /* vt4 06/06/2017
if st-v.plan(#idx) ne 'GT1'                                                            /* vt4 06.06.2017
  CALLNAT 'GCONTSXX' ST-V.ID-NUMBER #SEG-X #HAS-CONTESTABILITY    /* DW17
    #NO-LONGER-CONTESTABLE #C0NTESTABLE-BUT-PAID   /* DW19 DW20
*
  IF #HAS-CONTESTABILITY
    MOVE 'Has a Contestable Death Claim' TO #SCR-NOT-MSG
  END-IF
end-if                                                                                 /* vt4 06/06/2017
*
IF NOT #AFFL-CLIENT                        /* DW25
    AND NOT PROCESS-IND = 'G'                 /* PM29
* COMPRESS 'No AFFL Services' #SCR-NOT-MSG INTO #SCR-NOT-MSG
  COMPRESS 'No Services' #SCR-NOT-MSG INTO #SCR-NOT-MSG               /* YK3
END-IF
*
IF #NUM-ACTIVE-AFFL-PLANS NE 0          /* DW25
  IF #SERVICES                                                        /* PM27
    COMPRESS 'AAFMAA Insurance + Services Member' INTO #SCR-NOT-MSG   /* PM27
  ELSE                                                                /* PM27
*   COMPRESS 'Has' #NUM-ACTIVE-AFFL-PLANS 'AFFL Service - Press ENTER' #SCR-NOT-MSG
    COMPRESS 'Has' #NUM-ACTIVE-AFFL-PLANS 'AFA Service - Press PF4 on Service Line' #SCR-NOT-MSG  /* YK3
      INTO #SCR-NOT-MSG
  END-IF                                                              /* PM27
END-IF
* YK5
RESET #I1
EXAMINE ST-V.PLAN(*) FOR 'EZ' INDEX #I1
IF #I1 <> 0 AND STATUS(#I1) = 'D' AND (MODE(#I1) = 'G' OR = 'E') AND ST-V.PAY-STATUS(#I1) <> '73'
  IF #SCR-NOT-MSG <> ' '
    COMPRESS 'EZ Term premium discount applies' '--'  #SCR-NOT-MSG INTO #SCR-NOT-MSG
  ELSE
    #SCR-NOT-MSG := 'EZ Term premium discount applies'
  END-IF
END-IF
IF PAY-STATUS(*) = '73'
  IF #SCR-NOT-MSG <> ' '
    COMPRESS 'Premiums waived for Nursing home stay' '--'  #SCR-NOT-MSG INTO #SCR-NOT-MSG
  ELSE
    #SCR-NOT-MSG := 'Premiums waived for Nursing home stay'
  END-IF
END-IF
* YK5
* YK6
RESET #I1
EXAMINE ST-V.PLAN-A1(*) FOR 'T' INDEX #I1
IF #I1 <> 0 AND STATUS(#I1) = 'D'
  IF #SCR-NOT-MSG <> ' '
    COMPRESS 'Plan' ST-V.PLAN(#I1) 'is Annual Renewable' '--'  #SCR-NOT-MSG INTO #SCR-NOT-MSG
  ELSE
    COMPRESS 'Plan' ST-V.PLAN(#I1) 'is Annual Renewable' INTO #SCR-NOT-MSG
  END-IF
END-IF
* YK6
IF #NUM-LINES = 1
  INPUT TEXT #SCR-NOT-MSG USING MAP 'C2601MST'
ELSE
  INPUT TEXT #SCR-NOT-MSG USING MAP 'C2600MST'
END-IF
*
REPEAT                                                    /* RE3
  UNTIL *PF-KEY NE 'PF4'
  IF *CURS-LINE = 2
    CALLNAT 'GCMF4SXX' MEMBER-CONTACT-ID ID-NUMBER #CGA-ORIG-COMMAND
  END-IF
*
  IF *CURS-LINE = 8                                       /* PM26
    CALLNAT 'STON0001' ST-V.ID-NUMBER #FUNCTION           /* PM26
  END-IF                                                  /* PM26
*
  IF *CURS-LINE = 10                                      /* PM30
    CALLNAT 'STON0001' ST-V.ID-NUMBER #FUNC-TRF           /* PM30
  END-IF                                                  /* PM30
*
  IF (#NUM-LINES = 1 AND *CURS-LINE = 16)  OR             /* YK3
      (#NUM-LINES <> 1 AND *CURS-LINE = 11)                /* YK3
    CALLNAT 'SVCNM001' ST-V.ID-NUMBER                   /* YK3 #CGA-SCR-COMMAND
    ESCAPE BOTTOM                                         /* YK3
  END-IF                                                  /* YK3
*
  IF #NUM-LINES = 1
    INPUT TEXT #SCR-NOT-MSG USING MAP 'C2601MST'
  ELSE
    INPUT TEXT #SCR-NOT-MSG USING MAP 'C2600MST'
  END-IF
END-REPEAT                                                /* RE3
*
IF #CGA-SCR-COMMAND NE '*'
  FETCH 'G1000PXX'
END-IF
*
IF #CGA-CLERK = 'DRW' OR = 'KHB'
    AND #NEW-FLDS
  FOR #I1 1 TO 9
    DISPLAY #I1  (EM=9)
      'Iss/Date'    #SCR-EFF-DATE (#I1)
      'FPF'         #SCR-FPF (#I1)
      'BADJ'        #SCR-BADJ (#I1)
      'Bill/Dollar' #SCR-BDOL (#I1) (EM=Z,ZZZ.99)
      'Fbr/FPF'     #SCR-FBR-FPF (#I1) (EM=ZZZ.99)
      'Fbr/Bal'     #SCR-FBR-BAL (#I1) (EM=ZZZ.99)
      'Fix/Nxt-YR/Ac-Int' #NXT-YR-ACC-INT (#I1) (EM=ZZZ.99)
      'Var/Nxt-YR/Ac-Int' #NXT-YR-ACC-INT-2 (#I1) (EM=ZZZ.99)
      'PCC'               X-PRINCIPAL-CHG-CODE (#I1)          /* DW10
  END-FOR
END-IF
*
IF #HAS-FBR
  MOVE '*' TO #CGA-SCR-COMMAND
  MOVE '***** Press ENTER to see FBR Information  *****'
    TO #SCR-OPEN-FIELD
ELSE
  MOVE '*' TO #CGA-SCR-COMMAND
END-IF
*
IF   (#NUM-LINES GT 3)
  RESET #CV-GEN #CV-GEN-X (*)
  MOVE #HOLD-LINE TO #SCR-OPEN-FIELD
*
  IF  (NOT #CGA-SECURITY-CODE = 4 OR = 99) /* BYPASS ACCOUNTING
      OR (#CGA-CLERK = 'DRW')
    COMPRESS '  FAC-AMT    A-PREM MD     M-PRM   T-PR-PD LOAN-VALU   C'
      'URR-CV        CURR-DB' INTO #SCR-LAST-HDR LEAVING NO
  ELSE
    COMPRESS '  FAC-AMT    A-PREM MD     M-PRM   GUAR-CV LOAN-VALU   C'
      'URR-CV        CURR-DB' INTO #SCR-LAST-HDR LEAVING NO
  END-IF
*
  INPUT TEXT #SCR-NOT-MSG USING MAP 'C2610MST'
*
  IF #CGA-SCR-COMMAND NE '*'
    FETCH 'G1000PXX'
  END-IF
END-IF
*
IF #HAS-FBR
  INPUT TEXT #SCR-NOT-MSG USING MAP 'C2620MST'    /* FBR
*
  IF #CGA-SCR-COMMAND NE '*'
    FETCH 'G1000PXX'
  END-IF
END-IF
*
IF #HAS-LOANS
  IF #NUM-LINES GT 4
    MOVE 'Press ENTER to see remaining policies'
      TO #SCR-NOT-MSG
    MOVE 'SUBTOTAL' TO #SCR-SUB-TOT-LBL
  END-IF
*
  IF #NUM-LINES NE 1
    INPUT TEXT #SCR-NOT-MSG USING MAP 'C2630MST'   /* DRW
*
    IF #CGA-SCR-COMMAND NE '*'
      FETCH 'G1000PXX'
    END-IF
*
    IF  (#CGA-SCR-COMMAND = '*')
        AND (#NUM-LINES GT 4)
      RESET #SCR-NOT-MSG
      INPUT TEXT #SCR-NOT-MSG USING MAP 'C2632MST'   /* DRW
*
      IF #CGA-SCR-COMMAND NE '*'
        FETCH 'G1000PXX'
      END-IF
    END-IF
  END-IF
END-IF
*
END-SUBROUTINE
*
******************************************************
DEFINE SUBROUTINE REG-ST-LAYOUT
******************************************************
*
RESET #I1
IF #CGA-SCR-SUFFIX = MASK ('P'N' ') /* loaded by athplaps or manually
  MOVE #CGA-SCR-SUFFIX TO #SCR-SUFFIX       /* DW7
  MOVE #SCR-SUFFIX-2 TO #I1
  IF #I1 NE 0
    MOVE 'X' TO #SCR-SEL (#I1)
*     CALLNAT 'GPLNMSXX' #POL-NUM ID-NUMBER #I1  /* DW7                   /* TT5
    #POL-NUM := ST-V.POLICY-ID(#I1)                                       /* TT5
  END-IF
  MOVE 'LAP' TO #CGA-SCR-SUFFIX   /* To ind from ATHPTRMS (Auto Lapse)
END-IF
*
IF *DEVICE = 'BATCH'
    OR (#CGA-SCR-SUFFIX = 'P22')  /* bz1
  MOVE 'ST' TO #CGA-SCR-COMMAND
  IF #I1 = 0
    FOR #I1 1 TO 9
      IF ST-V.STATUS (#I1) = 'D'
        MOVE 'X' TO #SCR-SEL (#I1)
      END-IF
    END-FOR
  END-IF
*
  IF  #CGA-SCR-SUFFIX = 'P22'                   /* bz1
    WRITE (22) NOTITLE USING FORM 'C2640FST'
  ELSE
    EJECT(8)
    WRITE (8) NOTITLE USING FORM 'C2640FST'
  END-IF
*
  FOR #I1 1 TO 9
    IF #SCR-SEL (#I1) NE ' '
      MOVE BY NAME #SCR-POL-TABLE (#I1) TO #SCR-POL-TABLE (1)
*
      EJECT (8)
      WRITE (8) USING FORM 'C2642FST'
*
      IF #SCR-FBR (1) = 'FBR'
        EJECT (8)
        WRITE (8) USING FORM 'C2621FST'
      END-IF
    END-IF
  END-FOR
*
  ESCAPE ROUTINE
END-IF
*
examine st-v.plan(*) for 'GT1' index #idx                                            /* vt4 06/06/12/2017
if st-v.plan(#idx) ne 'GT1'                                                          /* vt4 06/06/12/2017
  CALLNAT 'GCONTSXX' ST-V.ID-NUMBER #SEG-X #HAS-CONTESTABILITY    /* DW17
    #NO-LONGER-CONTESTABLE #C0NTESTABLE-BUT-PAID   /* DW19 DW20
*
  IF #HAS-CONTESTABILITY
    MOVE 'Has  Contestable Death Claim' TO #SCR-NOT-MSG
  END-IF
end-if                                                                               /* vt4 06/06/12/2017
IF EZPAY-CAP-LOAN-AMOUNT <> 0
  MOVE EDITED  EZPAY-CAP-LOAN-AMOUNT (EM=ZZ9.99) TO #BOT-LINE
  COMPRESS 'Unapplied first EZ-PAY loan payment'  #BOT-LINE INTO #BOT-LINE
END-IF
*
* IF #NUM-LINES GT 4
*   COMPRESS #SCR-NOT-MSG 'Press ENTER to see addl policies'
*     TO #SCR-NOT-MSG
*   MOVE 'Press ENTER for addl policies' TO #BOT-LINE
* END-IF
*

IF NOT #AFFL-CLIENT                        /* DW25
    AND NOT PROCESS-IND = 'G'                 /* PM29
* COMPRESS 'No AFFl Services' #SCR-NOT-MSG INTO #SCR-NOT-MSG
  COMPRESS 'No Services' #SCR-NOT-MSG INTO #SCR-NOT-MSG               /* YK3
END-IF
*
IF #NUM-ACTIVE-AFFL-PLANS NE 0          /* DW25
  IF #SERVICES                                                        /* PM27
    COMPRESS 'AAFMAA Insurance + Services Member' INTO #SCR-NOT-MSG   /* PM27
  ELSE                                                                /* PM27
*   COMPRESS 'Has' #NUM-ACTIVE-AFFL-PLANS 'AFFL Service - Press ENTER' #SCR-NOT-MSG
    COMPRESS 'Has Services - Press PF4 on Service Line' #SCR-NOT-MSG  /* YK3
      INTO #SCR-NOT-MSG
  END-IF                                                              /* PM27
END-IF
*
INPUT TEXT #SCR-NOT-MSG MARK *#SCR-SEL (1) USING MAP 'C2640MST'
*
REPEAT                                                    /* RE3
  UNTIL *PF-KEY NE 'PF4'
  IF *CURS-LINE = 2
    CALLNAT 'GCMF4SXX' MEMBER-CONTACT-ID ID-NUMBER #CGA-ORIG-COMMAND
  END-IF
*
  IF *CURS-LINE = 9                                       /* PM26
    CALLNAT 'STON0001' ST-V.ID-NUMBER #FUNCTION           /* PM26
  END-IF                                                  /* PM26
*
  IF *CURS-LINE = 10                                      /* PM30
    CALLNAT 'STON0001' ST-V.ID-NUMBER #FUNC-TRF           /* PM30
  END-IF                                                  /* PM30
*
  IF *CURS-LINE = 11                                      /* YK3
    IF #SVC-COUNT > 1                                                  /* TT4 BEGIN
      CALLNAT 'SVCNM002' #MSG #SVC-COUNT #SVC-MEMBER (*)
    ELSE
      CALLNAT 'SVCNM001' ST-V.ID-NUMBER                     /* YK3  #CGA-SCR-COMMAND
      ESCAPE BOTTOM                                         /* YK3
    END-IF
  END-IF                                                  /* YK3       /* TT4 END
*
  INPUT TEXT #SCR-NOT-MSG MARK *#SCR-SEL (1) USING MAP 'C2640MST'
END-REPEAT                                                /* RE3
*
IF #CGA-SCR-COMMAND NE '*'
  FETCH 'G1000PXX'
END-IF
*
IF #NUM-LINES GT 4
  RESET #SCR-NOT-MSG
  INPUT TEXT #SCR-NOT-MSG MARK *#SCR-SEL (5) USING MAP 'C2641MST'
*
  IF #CGA-SCR-COMMAND NE '*'
    FETCH 'G1000PXX'
  END-IF
END-IF
*
FOR #I1 1 TO 9
  IF #SCR-SEL (#I1) NE ' '
    MOVE #SCR-EXCP-LIST (#I1) TO #SCR-NOT-MSG
    MOVE BY NAME #SCR-POL-TABLE (#I1) TO #SCR-POL-TABLE (1)
*
* YK5
    IF ST-V.PLAN(#I1) = 'EZ' AND STATUS(#I1) = 'D' AND (MODE(#I1) = 'G' OR = 'E') AND PAY-STATUS(#I1) <> '73'
      COMPRESS 'EZ Term premium discount applies' INTO #SCR-NOT-MSG
    END-IF
    IF PAY-STATUS(#I1) = '73'
      #SCR-NOT-MSG := 'Premiums waived for Nursing home stay'
    END-IF
* YK5
* YK6
    IF SUBSTR(#SCR-PLN(1),1,1) = 'T'
      IF #SCR-NOT-MSG <> ' '
        COMPRESS 'Plan' #SCR-PLN(1) 'is Annual Renewable' '/'  #SCR-NOT-MSG INTO #SCR-NOT-MSG
      ELSE
        COMPRESS 'Plan' #SCR-PLN(1) 'is Annual Renewable' INTO #SCR-NOT-MSG
      END-IF
    END-IF
* YK6
    IF #SCR-FBR (1) = 'FBR'
      MOVE 'Press ENTER for FAMILY BENEFIT RIDER (FBR) information'
        TO #SCR-NOT-MSG
    END-IF
*
    INPUT TEXT #SCR-NOT-MSG USING MAP 'C2642MST'
*
    REPEAT                                                    /* RE3
      UNTIL *PF-KEY NE 'PF4'
      IF *CURS-LINE = 2
        CALLNAT 'GCMF4SXX' MEMBER-CONTACT-ID ID-NUMBER #CGA-ORIG-COMMAND
      END-IF
      INPUT TEXT #SCR-NOT-MSG USING MAP 'C2642MST'
    END-REPEAT                                                /* RE3
*
    IF #CGA-SCR-COMMAND NE '*'
      FETCH 'G1000PXX'
    END-IF
*
    IF #SCR-FBR (1) = 'FBR'
      INPUT TEXT #SCR-NOT-MSG USING MAP 'C2621MST'
    END-IF
*
    REPEAT                                                    /* RE3
      UNTIL *PF-KEY NE 'PF4'
      IF *CURS-LINE = 3
        CALLNAT 'GCMF4SXX' MEMBER-CONTACT-ID ID-NUMBER #CGA-ORIG-COMMAND
      END-IF
      IF #SCR-FBR (1) = 'FBR'
        INPUT TEXT #SCR-NOT-MSG USING MAP 'C2621MST'
      END-IF
    END-REPEAT                                                /* RE3
*
    IF #CGA-SCR-COMMAND NE '*'
      FETCH 'G1000PXX'
    END-IF
  END-IF
END-FOR
*
END-SUBROUTINE
*
******************************************************
DEFINE CALC-PREMS-PAID-SETUP
******************************************************
*
RESET #PREMS-PAID
MOVE DATE-OF-BIRTH           TO #PP-DATE-OF-BIRTH
MOVE ANNUAL-PREM (#I1)       TO #PP-ANNUAL-PREM
MOVE PAY-STATUS (#I1)        TO #PP-PAY-STATUS
MOVE TOT-PREMIUMS-PAID (#I1) TO #PP-TOT-PREMIUMS-PAID
MOVE PAID-TO-DATE (#I1)      TO #PP-PAID-TO-DATE
MOVE ISSUE-DATE (#I1)        TO #PP-ISSUE-DATE
MOVE MODE (#I1)              TO #PP-MODE
MOVE PLAN (#I1)              TO #PP-PLAN
MOVE COST-BASIS (#I1)        TO #PP-COST-BASIS
MOVE MONTH-ALLOC-AMT (#I1)   TO #PP-MONTH-ALLOC-AMT
MOVE INTRO-FLAG              TO #PP-INTRO-FLAG
MOVE X-FIRST-PLACE-FEE (#I1) TO #PP-FIRST-PLACE-FEE
MOVE X-BILL-ADJUST     (#I1) TO #PP-BADJ
*
CALLNAT 'GPRPDSCO'
  #PP-DATE-OF-BIRTH
  #PP-ANNUAL-PREM
  #PP-PAY-STATUS
  #PP-TOT-PREMIUMS-PAID
  #PP-PAID-TO-DATE
  #PP-ISSUE-DATE
  #PP-MODE
  #PP-PLAN
  #PP-COST-BASIS
  #PP-MONTH-ALLOC-AMT
  #PP-INTRO-FLAG
  #PP-FIRST-PLACE-FEE
  #PREMS-PAID
  #SUB-PREMS-PAID
  #PP-BADJ
*
END-SUBROUTINE
*
******************************************************
DEFINE SUBROUTINE SUM-TERM-REFUND              /* PM30
******************************************************
*
RESET #TOTAL-TRF
FOR #TRF-I 1 TO ST-V.C*OUT-TERM-REF-GROUP
  ADD ST-V.OUT-TERM-REF-AMOUNT (#TRF-I) TO #TOTAL-TRF
END-FOR
*
#TOTAL-TRF := #TOTAL-TRF * -1
*
END-SUBROUTINE
*
*****************
define subroutine get-dob-ssn                         /* vt3 \/
*****************
*
find contact with contact.contact-id  = ST-V.MEMBER-CONTACT-ID
  if no
    escape bottom
  end-norec
  MOVE CONTACT.GENDER-CD  TO #SCN-SEX
  move contact.ssn to #ssn
  move contact.date-of-birth to #dob
end-find
*
end-subroutine                                        /* vt3 /\
*
END
