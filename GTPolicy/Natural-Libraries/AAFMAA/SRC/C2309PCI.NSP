* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: C2309PCI
*    CI SCREEN 'CORR' PROCESSING   OLD TRAN 609
*
************************************************
*                       MODIFICATION LOG
* USER   DATE      TAG     REASON
*
* PAM  05132004 PM1  Added call to program to update 1035, FLEX,
*                    and POL ISS notes with new issue date.
* DRW  09292004 DW2  Add Credit Card Processing
* DRW  03042005 DW3  Add AL (Annuity Life) PROCESSING
* DRW  05152005 DW4     Add SEX for LTII prem calc
* DRW  07282005 DW5  Do not recalc Prem On a AL Change
* DRW 08/28/2008 DW6 Gen Plus Processing
* YAK 03/15/2010 YK1 Add BIL-PAYER-FLAG to the process
* BZ  10/20/2010 bz1 Exclude Reinput
* YAK 09/24/2012 YK2 Add RENEW-FLAG to the process
*                    Use function to identify Level Term II plans
* NGG  20130204  NG1 Add Nursing Home Pay Status
* TMT  12/06/2013 TT1 1 MILLION DOLLAR STABILITY PROJECT
* TMT  01/16/2014 TT2 GP2 POLICY SUPPORT
* TMT  10/27/2014 TT3 Annuity Life Policy modifications
* vxt  06/01/2017 vt1 Group Term Project
******************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK.CI-BLOCK
LOCAL USING CONTPDA1
LOCAL
1 #PAY-STAT-XX    (A2)   /* DW3
1 #PLAN    (A3)         /* DW4
1 REDEFINE #PLAN
  2 #PLAN-A1   (A1)
  2 #PLAN-N2   (N2)
1 REDEFINE #PLAN
  2 #PLAN-FLEX-N2  (N2)
  2 REDEFINE #PLAN-FLEX-N2
    3 #PLAN-FLEX-N1 (N1)
    3 #PLAN-FLEX-P  (A1)
  2 #PLAN-FLEX-F   (A1)
1 #I2    (I2)
1 #YYYYMMDD  (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY    (A4)
  2 #MM      (A2)
  2 #DD      (A2)
1 #TOT-DB    (N9.2)
1 #MEC-IND   (A9)
1 REDEFINE #MEC-IND
  2 #MEC-IND-X (A1/9)
*
1 #SCR-MEC-IND   (A9)
1 REDEFINE #SCR-MEC-IND
  2 #SCR-MEC-IND-X (A1/9)
*
1 #TR-REG-OLD-CORR-GR
  2 #TR-REG-OLD-CORR-LBL           (A08) INIT <'CI-CORR'>     /* YK3
  2 #TR-REG-OLD-CORR-5-AREAS               (5)
    3 #TR-REG-OLD-CORR-LABEL       (A10)
    3 #TR-REG-OLD-CORR-FILL-1       (A01)
    3 #TR-REG-OLD-CORR-DATA         (A14)
1 REDEFINE #TR-REG-OLD-CORR-GR
  2 #TR-REG-OLD-CORR              (A125)
*
1 #TR-REG-NEW-CORR-GR
  2 #TR-REG-NEW-CORR-LBL           (A08) INIT <'CORR '>        /* YK3
  2 #TR-REG-NEW-CORR-5-AREAS               (5)
    3 #TR-REG-NEW-CORR-LABEL       (A10)
    3 #TR-REG-NEW-CORR-FILL-1       (A01)
    3 #TR-REG-NEW-CORR-DATA         (A14)
1 REDEFINE #TR-REG-NEW-CORR-GR
  2 #TR-REG-NEW-CORR              (A125)
*
1 #OLD-STAT-XXXX     (A4)
1 #INVALID           (L)
1 #ERR-MSG           (A60)
1 #WORK-FREQ         (P2)
1 #EXP-DAY-G
  2 #EXP-FILL       (A1) INIT <' '>
  2 #EXP-DAY-A      (A2)
1 REDEFINE #EXP-DAY-G
  2 #EXP-DAY-N      (N3)
*
1 #WYYYYMMDD-FL-G
  2 #WYYYY-FL      (N4)
  2 #WMM-FL        (N2)
  2 #WDD-FL        (N2)
1 REDEFINE #WYYYYMMDD-FL-G
  2 #WYYYYMMDD-FL  (N8)
*
1 #WYYYYMMDD-SC-G
  2 #WYYYY-SC      (N4)
  2 #WMM-SC        (N2)
  2 #WDD-SC        (N2)
1 REDEFINE #WYYYYMMDD-SC-G
  2 #WYYYYMMDD-SC  (N8)
1 #HOLD-TODAY-DT   (N8)
1 REDEFINE #HOLD-TODAY-DT
  2 #HOLD-MONTH-KEY   (N6)
  2 #HOLD-DD          (N2)
*
1 #WK-PDUP-YYYYMMDD    (N8)
1 REDEFINE #WK-PDUP-YYYYMMDD
  2 #WK-PDUP-YYYYMM     (N6)
  2 REDEFINE #WK-PDUP-YYYYMM
    3 #WK-PDUP-YYYY      (N4)
    3 #WK-PDUP-MM        (N2)
  2 #WK-PDUP-DD         (N2)
*
1 #WK-PDTO-YYYYMMDD    (N8)
1 REDEFINE #WK-PDTO-YYYYMMDD
  2 #WK-PDTO-YYYYMM     (N6)
  2 REDEFINE #WK-PDTO-YYYYMM
    3 #WK-PDTO-YYYY      (N4)
    3 #WK-PDTO-MM        (N2)
  2 #WK-PDTP-DD         (N2)
*
1 #MS-FOUND  (L) INIT <TRUE>
1 #IMSN    (I2)
1 #IMSO    (I2)
1 #SUFFIX    (A3)
1 #PREM-6-2  (N7.2)             /*TT1
*
1 STATS-V VIEW OF A-MBRSHIP-STATS
  2 MONTH-KEY           (N6)
  2 GAIN-MBRS           (P5.0/1:16)
  2 GAIN-SHIPS          (P5.0/1:16)
  2 GAIN-FAC-AMT        (P9.2/1:16)
  2 TOT-GAIN-ARMY-UNITS (P5)
  2 TOT-GAIN-AIRF-UNITS (P5)
*
1 ST-V VIEW OF A-STATUS
  2 PREM-RATING   (9)
*
1 #ID-NUMBER   (N6)
1 REDEFINE #ID-NUMBER
  2 #ID-NUMBER-A  (A6)
END-DEFINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
MOVE CI-V.ID-NUMBER TO #ID-NUMBER
FIND (1) ST-V WITH MEMBER-KEY = #ID-NUMBER-A
END-FIND
*
RESET #PAY-STAT-XX
CALLNAT 'GPYSTSXX' #PAY-STAT-XX #SCR-STATUS (#ISC) #INVALID #ERR-MSG
*
IF   (IS-ANNUITY-LIFE(<#SCR-PLN (#ISC)>))    /* DW3          /* TT3
    AND (#PAY-STAT-XX LT '40')
*  REINPUT '"AL" cannot be converted to Prem Paying' MARK *#SCR-STATUS (#ISC) /* bz1
  #SCR-MSG-LINE-1 := '"AL" cannot be converted to Prem Paying'              /* bz1
  ESCAPE ROUTINE                                                            /* bz1
END-IF
*
RESET PDA-CONTACT                                    /* TT1
P-CONTACT-ID := CI-V.MEMBER-CONTACT-ID               /* TT1
CALLNAT 'CONTS001' PDA-CONTACT                       /* TT1
*
MOVE #FILE-MATCHING-INDX (#ISC) TO #I2
* DISPLAY #ISC #I2 #SCR-STATUS (#ISC) CI-V.PAY-STATUS (#I2)
IF   (#SCR-STATUS (#ISC) = 'PULT')  /* is becoming PULT
    AND (CI-V.PAY-STATUS (#I2) NE '43')
*   IF  (#SCR-PLN (#ISC) = 'RT' OR = 'LT' OR = 'SO' OR = 'AL')  /* DW3           /* YK2
*    OR ((#SCR-PLN-A1 (#ISC) GE 'U') AND (#SCR-PLN-A1 (#ISC) LE 'Z'))            /* YK2
  IF (#SCR-PLN(#ISC) = 'SO' OR IS-ANNUITY-LIFE(<#SCR-PLN (#ISC)>)) OR FUNCTION-TERM-POLICY(<#SCR-PLN(#ISC)>)  /* YK2  /* TT3
*    REINPUT 'Long Term Care is only valid for Whole Life' MARK *#SCR-STATUS (#ISC)
    #SCR-MSG-LINE-1 := 'Long Term Care is only valid for Whole Life'          /* bz1
    ESCAPE ROUTINE                                                            /* bz1

  END-IF
*
  FOR #I1 1 TO 9
    IF #SCR-STATUS (#I1) = 'PULT'
      ADD #SCR-DB (#I1) TO #TOT-DB
    END-IF
  END-FOR
*
  IF #TOT-DB GT 315000
*    REINPUT 'Long Term Care is only valid up to $315,000' MARK *#SCR-STATUS (#ISC) /* bz1
    #SCR-MSG-LINE-1 := 'Long Term Care is only valid up to $315,000'                /* bz1
    ESCAPE ROUTINE                                                                  /* bz1
  END-IF
*
  MOVE *DATN TO #SCR-PAID-UP-YYYYMMDD (#ISC)
  MOVE *DATN TO #YYYYMMDD
  COMPRESS #MM #YYYY INTO #SCR-PAID-UP (#ISC) LEAVING NO
END-IF
* DISPLAY #SCR-DB (#ISC) #TOT-DB #SCR-PAID-UP (#ISC)
*
IF   (#SCR-STATUS (#ISC) = 'NH')  /* is becoming NH    NG1
    AND (CI-V.PAY-STATUS (#I2) NE '73')
  IF #SCR-PLN (#ISC) NE 'EZ'
    #SCR-MSG-LINE-1 := 'Nursing Home is only valid for EZ Term'
    ESCAPE ROUTINE
  END-IF
*  MOVE *DATN TO #SCR-PAID-UP-YYYYMMDD (#ISC)
*  MOVE *DATN TO #YYYYMMDD
*  COMPRESS #MM #YYYY INTO #SCR-PAID-UP (#ISC) LEAVING NO
END-IF
*
MOVE #CGA-MF-ORIG-PARM-1 TO #MEC-IND
MOVE #CGA-MF-SCR-PARM-1  TO #SCR-MEC-IND
*
IF CI-V.ONLINE-ACTION-GN = '1' OR = '2' OR = '3'     /* ALREADY FLAGGED
  IGNORE
ELSE
  MOVE  '4' TO CI-V.ONLINE-ACTION-GN     /* INDICATE ACTION THIS MONTH
END-IF
*
MOVE CI-V.ISSUE-DATE (#IFL)       TO #WYYYYMMDD-FL
MOVE #SCR-EFF-DTE-YYYYMMDD (#ISC) TO #WYYYYMMDD-SC
*
IF   (#WDD-FL NE 01)
    AND (#WDD-SC  = 01)
*  REINPUT 'Issue Date day cannot be changed to "01"' MARK *#SCR-EFF-DTE (#ISC)     /* bz1
  #SCR-MSG-LINE-1 := 'Issue Date day cannot be changed to "01"'                   /* bz1
  ESCAPE ROUTINE                                                                  /* bz1
END-IF
*
ADD 1 TO #ITR2
MOVE 'ISSUE-DATE'           TO #TR-REG-OLD-CORR-LABEL (#ITR2)
MOVE CI-V.ISSUE-DATE (#IFL) TO #TR-REG-OLD-CORR-DATA (#ITR2)
MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
*
IF  (#WYYYY-FL NE #WYYYY-SC)
    OR (#WMM-FL   NE #WMM-SC)
    OR (#WDD-FL   NE #WDD-SC)
  MOVE TRUE TO #REC-CHGD
  MOVE 'ISSUE-DATE'  TO #TR-REG-NEW-CORR-LABEL (#ITR2)
  MOVE #SCR-EFF-DTE-YYYYMMDD (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
  MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
  MOVE #SCR-EFF-DTE-YYYYMMDD (#ISC) TO CI-V.ISSUE-DATE (#IFL)
  IF #CGA-SCR-SUFFIX = 'UPD'                                      /* PM1
    CALLNAT 'C2342SCI'                                            /* PM1
      #ID-NUMBER                                                  /* PM1
      #WYYYYMMDD-FL                                               /* PM1
      #WYYYYMMDD-SC                                               /* PM1
  END-IF                                                          /* PM1
END-IF
*
IF CI-V.ISSUE-AGE (#IFL) NE #SCR-AGE (#ISC)
  MOVE TRUE TO #REC-CHGD
  ADD 1 TO #ITR2
  MOVE 'ISSUE-AGE'  TO #TR-REG-OLD-CORR-LABEL (#ITR2)
    #TR-REG-NEW-CORR-LABEL (#ITR2)
  MOVE CI-V.ISSUE-AGE (#IFL) TO #TR-REG-OLD-CORR-DATA (#ITR2)
  MOVE #SCR-AGE       (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
  MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
  MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
  PERFORM CHECK-FULL-TRAILER
  MOVE #SCR-AGE (#ISC) TO CI-V.ISSUE-AGE (#IFL)
*
  PERFORM CALC-PREM
END-IF
*
MOVE CI-V.BILL-TO-DATE (#IFL)     TO #WYYYYMMDD-FL
MOVE #SCR-BILL-TO-YYYYMMDD (#ISC) TO #WYYYYMMDD-SC
*
IF #SCR-MODE (#ISC) NE 'G'
  IF  (#WYYYY-FL NE #WYYYY-SC)
      OR (#WMM-FL   NE #WMM-SC)
    MOVE TRUE TO #REC-CHGD
    ADD 1 TO #ITR2
    MOVE 'BILL-TO-DT'  TO #TR-REG-OLD-CORR-LABEL (#ITR2)
      #TR-REG-NEW-CORR-LABEL (#ITR2)
    MOVE CI-V.BILL-TO-DATE      (#IFL) TO #TR-REG-OLD-CORR-DATA (#ITR2)
    MOVE #SCR-BILL-TO-YYYYMMDD (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
    MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
    MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
    PERFORM CHECK-FULL-TRAILER
    MOVE #SCR-BILL-TO-YYYYMMDD (#ISC) TO CI-V.BILL-TO-DATE (#IFL)
  END-IF
END-IF
*
MOVE CI-V.PAID-UP-DATE (#IFL)     TO #WYYYYMMDD-FL
MOVE #SCR-PAID-UP-YYYYMMDD (#ISC) TO #WYYYYMMDD-SC
*
IF  (#WYYYY-FL NE #WYYYY-SC)
    OR (#WMM-FL   NE #WMM-SC)
  MOVE TRUE TO #REC-CHGD
  ADD 1 TO #ITR2
  MOVE 'PAID-UP-DT'  TO #TR-REG-OLD-CORR-LABEL (#ITR2)
    #TR-REG-NEW-CORR-LABEL (#ITR2)
  MOVE CI-V.PAID-UP-DATE       (#IFL) TO #TR-REG-OLD-CORR-DATA (#ITR2)
  MOVE #SCR-PAID-UP-YYYYMMDD (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
  MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
  MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
  PERFORM CHECK-FULL-TRAILER
  MOVE #SCR-PAID-UP-YYYYMMDD (#ISC) TO CI-V.PAID-UP-DATE (#IFL)
END-IF
*
CALLNAT 'GPYSTSXX' CI-V.PAY-STATUS (#IFL) #OLD-STAT-XXXX
  #INVALID #ERR-MSG
*
IF #OLD-STAT-XXXX NE #SCR-STATUS (#ISC)
  MOVE TRUE TO #REC-CHGD
  ADD 1 TO #ITR2
  MOVE 'PAY-STATUS'  TO #TR-REG-OLD-CORR-LABEL (#ITR2)
    #TR-REG-NEW-CORR-LABEL (#ITR2)
  MOVE #OLD-STAT-XXXX TO #TR-REG-OLD-CORR-DATA (#ITR2)
  MOVE #SCR-STATUS (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
  MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
  MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
  PERFORM CHECK-FULL-TRAILER
*
  RESET CI-V.PAY-STATUS (#IFL)
  CALLNAT 'GPYSTSXX' CI-V.PAY-STATUS (#IFL) #SCR-STATUS (#ISC)
    #INVALID #ERR-MSG
END-IF
*
IF CI-V.FACE-AMOUNT (#IFL) NE #SCR-FACE-AMT (#ISC)
  MOVE TRUE TO #REC-CHGD
  ADD 1 TO #ITR2
  MOVE 'FACE-AMT'  TO #TR-REG-OLD-CORR-LABEL (#ITR2)
    #TR-REG-NEW-CORR-LABEL (#ITR2)
  MOVE EDITED CI-V.FACE-AMOUNT(#IFL) (EM=ZZZZZZ9.99) TO #TR-REG-OLD-CORR-DATA (#ITR2)        /* TT1
  MOVE EDITED #SCR-FACE-AMT (#ISC)   (EM=ZZZZZZ9.99) TO #TR-REG-NEW-CORR-DATA (#ITR2)        /* TT1
  MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
  MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
  PERFORM CHECK-FULL-TRAILER
*
  ASSIGN #MS-FOUND = TRUE
  MOVE *DATN TO #HOLD-TODAY-DT
    FIND (1) STATS-V WITH MONTH-KEY = #HOLD-MONTH-KEY
      IF NO RECORDS FOUND
        ASSIGN #MS-FOUND = FALSE
      END-NOREC
      IF #MS-FOUND = FALSE
        DISPLAY 'C2309PCI - MS RECORD NOT FOUND CONTACT EDS'
      END-IF

*
      IF #MS-FOUND
        IF CI-V.ONLINE-ACTION-GN     = '2'    /* NEW MEMBER
*       DECIDE ON FIRST CI-V.FACE-AMOUNT (#IFL)
*         VALUE  5000 MOVE 1 TO #IMSO
*         VALUE 10000 MOVE 2 TO #IMSO
*         VALUE 15000 MOVE 3 TO #IMSO
*         VALUE 20000 MOVE 4 TO #IMSO
*         VALUE 25000 MOVE 5 TO #IMSO
*         VALUE 30000 MOVE 6 TO #IMSO
*         VALUE 35000 MOVE 7 TO #IMSO
*         VALUE 40000 MOVE 8 TO #IMSO
*         VALUE 45000 MOVE 9 TO #IMSO
*         VALUE 50000 MOVE 10 TO #IMSO
*         NONE IGNORE
*       END-DECIDE
*
*       DECIDE ON FIRST #SCR-FACE-AMT (#ISC)
*         VALUE  5000 MOVE 1 TO #IMSN
*         VALUE 10000 MOVE 2 TO #IMSN
*         VALUE 15000 MOVE 3 TO #IMSN
*         VALUE 20000 MOVE 4 TO #IMSN
*         VALUE 25000 MOVE 5 TO #IMSN
*         VALUE 30000 MOVE 6 TO #IMSN
*         VALUE 35000 MOVE 7 TO #IMSN
*         VALUE 40000 MOVE 8 TO #IMSN
*         VALUE 45000 MOVE 9 TO #IMSN
*         VALUE 50000 MOVE 10 TO #IMSN
*         NONE IGNORE
*       END-DECIDE
*
*       COMPUTE GAIN-MBRS (#IMSO) = GAIN-MBRS (#IMSO) - 1
*       COMPUTE GAIN-MBRS (#IMSN) = GAIN-MBRS (#IMSN) + 1
*       COMPUTE GAIN-SHIPS (#IMSO) = GAIN-SHIPS (#IMSO) -
*                          (CI-V.FACE-AMOUNT (#IFL) / 5000)
*       COMPUTE GAIN-SHIPS (#IMSN) = GAIN-SHIPS(#IMSN) +
*                          (#SCR-FACE-AMT (#ISC) / 5000)
*       COMPUTE GAIN-FAC-AMT (#IMSO) = GAIN-FAC-AMT (#IMSO) -
*                    CI-V.FACE-AMOUNT (#IFL)
*       COMPUTE GAIN-FAC-AMT (#IMSN) = GAIN-FAC-AMT(#IMSN) +
*                    #SCR-FACE-AMT (#ISC)
*
          IF CI-V.MILITARY-SERVICE = MASK ('A')
            COMPUTE TOT-GAIN-ARMY-UNITS =
              TOT-GAIN-ARMY-UNITS
              + ((#SCR-FACE-AMT (#ISC) / 5000)
              -  (CI-V.FACE-AMOUNT (#IFL) / 5000))
          ELSE
            IF CI-V.MILITARY-SERVICE = MASK ('F')
              COMPUTE TOT-GAIN-AIRF-UNITS =
                TOT-GAIN-AIRF-UNITS
                + ((#SCR-FACE-AMT (#ISC) / 5000)
                -  (CI-V.FACE-AMOUNT (#IFL) / 5000))
            END-IF
          END-IF
*
          UPDATE
*     ELSE
*       IF NOT CI-V.PLAN (#IFL) = 'LT' OR = 'RT'
*         DISPLAY         /* MUST BE MANUAL ON UNITS CHANGE ON ADDL POL
*         'CALL EDS TO ADJ AMOUNTS; HIT ENTER TO CONTINUE'
*       END-IF
        END-IF
      END-IF
    END-FIND
  MOVE #SCR-FACE-AMT (#ISC) TO CI-V.FACE-AMOUNT (#IFL)
*
*  MOVE CI-V.PLAN (#IFL) TO #PLAN                                     /* YK2
*   IF  (CI-V.PLAN (#IFL) = 'LT' OR = 'RT')                           /* YK2
*    OR (#PLAN-A1 = 'U' OR = 'V' OR = 'W' OR = 'X' OR = 'Y' OR = 'Z') /* YK2
  IF FUNCTION-TERM-POLICY(<CI-V.PLAN(#IFL)>)                            /* YK2
    MOVE CI-V.FACE-AMOUNT (#IFL) TO DEATH-BENEFIT (#IFL)
    MOVE CI-V.FACE-AMOUNT (#IFL) TO NXT-MON-DEATH-BENEFIT (#IFL)
    MOVE CI-V.FACE-AMOUNT (#IFL) TO #SCR-DB (#ISC)
  END-IF
*
  PERFORM CALC-PREM    /* calc new premium
END-IF
*
IF CI-V.SMOKER-FLAG (#IFL) NE #SCR-SMK (#ISC)
  MOVE TRUE TO #REC-CHGD
  ADD 1 TO #ITR2
  MOVE 'SMOKER FLG'  TO #TR-REG-OLD-CORR-LABEL (#ITR2)
    #TR-REG-NEW-CORR-LABEL (#ITR2)
  MOVE CI-V.SMOKER-FLAG (#IFL) TO #TR-REG-OLD-CORR-DATA (#ITR2)
  MOVE #SCR-SMK (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
  MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
  MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
  PERFORM CHECK-FULL-TRAILER
  MOVE #SCR-SMK (#ISC) TO CI-V.SMOKER-FLAG (#IFL)
*
  PERFORM CALC-PREM
END-IF
*
IF CI-V.OWNERSHIP-FLAG (#IFL) NE #SCR-POL-OWNERSHIP (#ISC)
  MOVE TRUE TO #REC-CHGD
  ADD 1 TO #ITR2
  MOVE 'OWNER FLAG'  TO #TR-REG-OLD-CORR-LABEL (#ITR2)
    #TR-REG-NEW-CORR-LABEL (#ITR2)
  MOVE CI-V.OWNERSHIP-FLAG (#IFL) TO #TR-REG-OLD-CORR-DATA (#ITR2)
  MOVE #SCR-POL-OWNERSHIP (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
  MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
  MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
  PERFORM CHECK-FULL-TRAILER
  MOVE #SCR-POL-OWNERSHIP (#ISC) TO CI-V.OWNERSHIP-FLAG (#IFL)
END-IF
* Add section for new field - Bill-Payer-Flag                  /* YK1 start
IF CI-V.BILL-PAYER-FLAG (#IFL) NE #SCR-BILL-PAYER (#ISC)
  MOVE TRUE TO #REC-CHGD
  ADD 1 TO #ITR2
  MOVE 'BILL PAYER FLAG'  TO #TR-REG-OLD-CORR-LABEL (#ITR2)
    #TR-REG-NEW-CORR-LABEL (#ITR2)
  MOVE CI-V.BILL-PAYER-FLAG (#IFL) TO #TR-REG-OLD-CORR-DATA (#ITR2)
  MOVE #SCR-BILL-PAYER (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
  MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
  MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
  PERFORM CHECK-FULL-TRAILER
  MOVE #SCR-BILL-PAYER (#ISC) TO CI-V.BILL-PAYER-FLAG (#IFL)
END-IF                                                         /* YK1 end
* Add section for new field - Renew-Flag                       /* YK2 start
IF CI-V.RENEW-FLAG (#IFL) NE #SCR-RENEW-FLAG (#ISC)
  MOVE TRUE TO #REC-CHGD
  ADD 1 TO #ITR2
  MOVE 'RENEW FLAG' TO #TR-REG-OLD-CORR-LABEL (#ITR2)
    #TR-REG-NEW-CORR-LABEL (#ITR2)
  MOVE CI-V.RENEW-FLAG (#IFL) TO #TR-REG-OLD-CORR-DATA (#ITR2)
  MOVE #SCR-RENEW-FLAG (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
  MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
  MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
  PERFORM CHECK-FULL-TRAILER
  MOVE #SCR-RENEW-FLAG (#ISC) TO CI-V.RENEW-FLAG (#IFL)
END-IF                                                         /* YK2 end
*   removed 5/13/2004 MBW
* IF CI-V.COST-BASIS (#IFL) NE #SCR-COST-BASIS (#ISC)
*   MOVE TRUE TO #REC-CHGD
*   ADD 1 TO #ITR2
*   MOVE 'COST-BASIS'  TO #TR-REG-OLD-CORR-LABEL (#ITR2)
*                         #TR-REG-NEW-CORR-LABEL (#ITR2)
*   MOVE CI-V.COST-BASIS    (#IFL) TO #TR-REG-OLD-CORR-DATA (#ITR2)
*   MOVE #SCR-COST-BASIS    (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
*   MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
*   MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
*   PERFORM CHECK-FULL-TRAILER
*   MOVE #SCR-COST-BASIS (#ISC) TO CI-V.COST-BASIS (#IFL)
* END-IF
*
IF CI-V.ORIG-COST-BASIS (#IFL) NE #SCR-ORIG-COST-BASIS (#ISC)
  MOVE TRUE TO #REC-CHGD
  ADD 1 TO #ITR2
  MOVE 'Cost Basis'  TO #TR-REG-OLD-CORR-LABEL (#ITR2)
    #TR-REG-NEW-CORR-LABEL (#ITR2)
  MOVE CI-V.ORIG-COST-BASIS    (#IFL) TO #TR-REG-OLD-CORR-DATA (#ITR2)
  MOVE #SCR-ORIG-COST-BASIS    (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
  MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
  MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
  PERFORM CHECK-FULL-TRAILER
  MOVE #SCR-ORIG-COST-BASIS (#ISC) TO CI-V.ORIG-COST-BASIS (#IFL)
  MOVE #SCR-ORIG-COST-BASIS (#ISC) TO CI-V.COST-BASIS (#IFL)   /* 5/2004
END-IF
*
IF #MEC-IND-X (#IFL) NE #SCR-MEC-IND-X (#ISC)
  MOVE TRUE TO #REC-CHGD
  ADD 1 TO #ITR2
  MOVE 'Mec-Ind'  TO #TR-REG-OLD-CORR-LABEL (#ITR2)
    #TR-REG-NEW-CORR-LABEL (#ITR2)
  MOVE #MEC-IND-X     (#IFL) TO #TR-REG-OLD-CORR-DATA (#ITR2)
  MOVE #SCR-MEC-IND-X (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
  MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
  MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
  PERFORM CHECK-FULL-TRAILER
* new mec-ind is moved in c2300pci
END-IF
*
IF CI-V.PAY-STATUS (#IFL) GT '40'    /* DW4
  IGNORE
ELSE
  IF PLAN (#IFL) = 'OL' or = 'GPL' OR = 'GP2'     /* TT2      /* DW4  DW6
    IF   (CI-V.ISSUE-DATE (#IFL) GE 19970101)
        AND (CI-V.MONTH-ALLOC-AMT (#IFL) NE 999.99)
      COMPUTE #SCR-PAID-UP-YYYYMMDD(#ISC) = P-DATE-OF-BIRTH + 1000000           /* TT1
    ELSE
      COMPUTE #SCR-PAID-UP-YYYYMMDD(#ISC) = P-DATE-OF-BIRTH + 960000            /* TT1
    END-IF
  ELSE
    IF PLAN (#IFL) = '20P'
      COMPUTE #SCR-PAID-UP-YYYYMMDD(#ISC) =
        CI-V.ISSUE-DATE(#IFL) + 200000
    ELSE
      IF PLAN (#IFL) = '30P'
        COMPUTE #SCR-PAID-UP-YYYYMMDD(#ISC) =
          CI-V.ISSUE-DATE(#IFL) + 300000
      ELSE
        IF PLAN (#IFL) = '7P'
          COMPUTE #SCR-PAID-UP-YYYYMMDD(#ISC) =
            CI-V.ISSUE-DATE(#IFL) + 70000
        ELSE
*         IF PLAN (#IFL) = 'RT'                     /* Can't do
*           COMPUTE #SCR-PAID-UP-YYYYMMDD(#ISC) =
*               CI-V.ISSUE-DATE (#IFL) + 50000
*         ELSE
          IF PLAN (#IFL) = 'LT'
            IF CI-V.SMOKER-FLAG  (#IFL) = 'S'
              COMPUTE #SCR-PAID-UP-YYYYMMDD(#ISC) =
                P-DATE-OF-BIRTH + 500000               /* TT1
            ELSE
              COMPUTE #SCR-PAID-UP-YYYYMMDD(#ISC) =
                P-DATE-OF-BIRTH + 600000               /* TT1
            END-IF
          ELSE
            MOVE PLAN (#IFL) TO #PLAN
*             IF  (#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z') /* LTII    /* YK2
            IF F-LT2-TRUE(<#PLAN>)                                 /* YK2
              IF #PLAN = MASK (.NN)
                COMPUTE #SCR-PAID-UP-YYYYMMDD(#ISC) =
                  CI-V.ISSUE-DATE(#IFL) + (#PLAN-N2 * 10000)
              END-IF
            ELSE    /* MUST BE OL FLEX
              IF #PLAN-FLEX-F = 'F'    /* ??F
                IF #PLAN-FLEX-P = 'P'  /* 4PF etc
                  COMPUTE #SCR-PAID-UP-YYYYMMDD(#ISC) =
                    CI-V.ISSUE-DATE (#IFL) + (#PLAN-FLEX-N1 * 10000)
                ELSE                   /* MUST BE 59F ETC
                  COMPUTE #SCR-PAID-UP-YYYYMMDD(#ISC) =
                    CI-V.ISSUE-DATE (#IFL) + (#PLAN-FLEX-N2 * 10000)
                END-IF
              END-IF
            END-IF
*           END-IF
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
*
  MOVE #SCR-PAID-UP-YYYYMMDD (#ISC) TO #YYYYMMDD
  COMPRESS #MM #YYYY INTO #SCR-PAID-UP (#ISC) LEAVING NO
END-IF
*
IF CI-V.PAID-UP-DATE (#IFL) NE #SCR-PAID-UP-YYYYMMDD (#ISC)   /* DW4
  MOVE TRUE TO #REC-CHGD
  ADD 1 TO #ITR2
  MOVE 'PD-UP-Date'  TO #TR-REG-OLD-CORR-LABEL (#ITR2)
    #TR-REG-NEW-CORR-LABEL (#ITR2)
  MOVE CI-V.PAID-UP-DATE       (#IFL) TO #TR-REG-OLD-CORR-DATA (#ITR2)
  MOVE #SCR-PAID-UP-YYYYMMDD   (#ISC) TO #TR-REG-NEW-CORR-DATA (#ITR2)
  MOVE #TR-REG-OLD-CORR TO TR-REG-V.OLD-DATA (#ITR1)
  MOVE #TR-REG-NEW-CORR TO TR-REG-V.NEW-DATA (#ITR1)
  PERFORM CHECK-FULL-TRAILER
  MOVE #SCR-PAID-UP-YYYYMMDD (#ISC) TO CI-V.PAID-UP-DATE (#IFL)
END-IF
*
IF #ITR2 NE 0
  ADD 1 TO #ITR1
  MOVE 0 TO #ITR2
END-IF
*
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-FULL-TRAILER
* * * * * * * * * * * * * * * * * *
*
IF #ITR2 = 5
  ADD  1 TO #ITR1
  MOVE 0 TO #ITR2
  RESET #TR-REG-OLD-CORR
  RESET #TR-REG-NEW-CORR
  MOVE 'CI-CR' TO #TR-REG-OLD-CORR-LBL
  MOVE 'CORR'  TO #TR-REG-NEW-CORR-LBL
END-IF
*
END-SUBROUTINE /*(0595)
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-PREM
* * * * * * * * * * * * * *
*
IF IS-ANNUITY-LIFE(<CI-V.PLAN(#IFL)>)   /* DW5  /* TT3
    or ci-v.plan(#ifl) = 'GT1'                                      /* vt1 06/01/2017
  ESCAPE ROUTINE
END-IF
*
IF CI-V.PLAN (#IFL) = MASK (..'F')   /* flex plan
  IF #PAY-STAT-XX LT '40'
    WRITE /// 'Since this was a Flex plan you must calc the new'
    WRITE 'premium using a PO FLX and have EDS enter it manually.'
    WRITE // 'Press ENTER to continue'
  END-IF
ELSE
  RESET #SUFFIX
  IF MONTH-ALLOC-AMT (#IFL) = 999.99
    MOVE 'OLD' TO #SUFFIX
  END-IF
*
  MOVE #SCR-ANN-PRM (#ISC) TO #PREM-6-2
*
  IF PREM-RATING (#IFL) NE ' '
    COMPRESS 'SB' PREM-RATING (#IFL) INTO #SUFFIX LEAVING NO
  END-IF
*
  CALLNAT 'GPREMSXX' #CGA-SCR-COMMAND #CGA-SCR-ID #SUFFIX
    #SCR-PLN (#ISC) #SCR-AGE-N (#ISC)
    #PREM-6-2 #SCR-EFF-DTE-YYYYMMDD (#ISC)
    #SCR-SMK (#ISC) #SCR-FACE-AMT (#ISC) P-GENDER  /* DW4        /* TT1
  MOVE #PREM-6-2 TO #SCR-ANN-PRM (#ISC)
*
  IF CI-V.MODE (#IFL) = 'A' OR = '1'   /* DW2
    MOVE  1 TO #WORK-FREQ
  ELSE
    IF CI-V.MODE (#IFL) = 'S' OR = '2'  /* DW2
      MOVE 2 TO #WORK-FREQ
    ELSE
      IF CI-V.MODE (#IFL) = 'Q' OR = '4'  /* DW2
        MOVE 4 TO #WORK-FREQ
      ELSE
        MOVE 12 TO #WORK-FREQ
      END-IF
    END-IF
  END-IF
*
  COMPUTE #SCR-MODAL-PRM (#ISC) = #SCR-ANN-PRM (#ISC)/ #WORK-FREQ
  MOVE #SCR-ANN-PRM (#ISC) TO CI-V.ANNUAL-PREM (#IFL)
END-IF
*
END-SUBROUTINE
*
END
