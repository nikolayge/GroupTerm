* >Natural Source Header 000000
* :Mode S
* :CP
* :LineIncrement 10
* <Natural Source Header
/** New Subprogram ORDNCNTS.
/**
/** :author nguentchev
DEFINE DATA
PARAMETER
  USING ORDPDA
LOCAL USING GOCOA001
LOCAL USING OBJLGENT
LOCAL 
1 BLANK       (A1)  CONST <' '>
1 #ERROR-LOG  (I4)  CONST <3>
/* Contact.Id               CRM Contact GUID
/* Relationship.MemberId    Role-1 CRM Contact GUID
/* Relationship.PartnerId   Role-2 CRM Contact GUID
* 1 #CONTACT  /* GOCOA001
*   2 CONTACT-ID (N8.0)
*   2 ID-NUMBER (N6)
*   2 CONTACT-TYPE (A1)
*   2 RANK-ID (N6)
*   2 MILITARY-STATUS (A1)
*   2 PREFIX-TITLE (A25)
*   2 FULL-NAME
*     3 FIRST-NAME (A25)
*     3 MIDDLE-NAME (A25)
*     3 LAST-NAME (A25)
*     3 SUFFIX (A10)
*   2 GENDER-CD (A1)
*   2 DATE-OF-BIRTH (N8.0)
*   2 SSN (N9.0)
*   2 FIRM-ORGANIZATION-NAME (A75)
*   2 WEBSITE-URL (A70)
*   2 CRM-CONTACT-GUI (A50)
*   2 #FORCE-NEW (L)

1 #PHONE  /* GOPHA001
  2 PHONE-ID (N8.0)
  2 CONTACT-ID (N8.0)
  2 PHONE-TYPE-CODE (A1)
  2 INTL-ACCESS-CODE (N3.0)
  2 INTL-DIAL-NUMBER-A (A20)
  2 REDEFINE INTL-DIAL-NUMBER-A /* BEGIN REDEFINE: INTL-DIAL-NUM
    3 INTL-DIAL-NUMBER (N20)
  2 AREA-CODE (N3.0)
  2 DIAL-NUMBER (N7.0)
  2 EXT (N6.0)
  2 PREFERRED-PHONE-IND (A1)
  2 PHONE-SOURCE (A1)
  2 REMARKS (A70/3)

1 #EMAIL  /* GOEMA001
  2 EMAIL-ID (N8)
  2 CONTACT-ID (N8)
  2 EMAIL-TYPE (A1)
  2 EMAIL-ADDRESS (A70)
  2 EMAIL-PROTECTION-IND (A1)
  2 EMAIL-UNDELIV (A1)
  2 EMAIL-PREFERRED-IND (A1)
  2 EMAIL-SOURCE (A1)
  2 STATUS (A1)
  2 STATUS-DATE (N8)
  2 REMARKS (A70/3)

1 #ADDR-POOL /* GOADA001
  2 ADDRESS-POOL-ID (N8)
  2 STREET (A50)
  2 UNIT (A25)
  2 CITY (A50)
  2 STATE-CODE (A2)
  2 ZIP-CODE (N9)
  2 REDEFINE ZIP-CODE
    3 ZIP-5 (N5)
    3 ZIP-4 (N4)
  2 COUNTRY-CODE (A2)
  2 INTL-REGION (A50)
  2 POSTAL-CODE (A25)
  2 URBANIZATION (A50)
  2 ADDR-VALID-IND (A1)
1 #ADDR-REL
  2 CONTACT-ID (N8)
  2 ADDRESS-POOL-ID (N8)
  2 ADDR-TYPE-CD (A1)
  2 ADDR-LOCATION (A1)
  2 ATTENTION-LINE (A50)
  2 RETURNED-MAIL-IND (A1)
  2 PREVENT-OVER-IND (A1)
  2 ADDRESS-SOURCE (A1)
  2 STATUS (A1)
  2 STATUS-DATE (N8)
1 #CLERK-ID (A3)
1 #MSG      (A) DYNAMIC
1 #CONTACT-REL   /* GOCRA001
  2 CONTACT-1-ID (N8)
  2 ROLE-1-CD (A1)
  2 CONTACT-2-ID (N8)
  2 ROLE-2-CD (A1)
  2 LAST-USER-UPD (A8)
  2 ACCESS-AUTH-SVC (A1)
  2 ACCESS-AUTH-INS (A1)
  2 LAST-DATE-UPD (N8)
  2 LAST-TIME-UPD (N7)
*
/* GOMDN001 -- SUBPROGRAM
/* GOMDA001 -- Local data AREA
1 #MIL
  2 ID-NUMBER (N6)
  2 CONTACT-ID (N8)
  2 RANK-ID (N6)
  2 MILITARY-STATUS (A1)
  2 MILITARY-ID (A3)
  2 DATE-INIT-ENTRY-MIL-SVC (N8)
  2 BASE-PAY-EF-DATE (N8)
  2 ACTIVE-DUTY-BASE-DATE (N8)
  2 DATE-OF-RANK (N8)
  2 SERVICE-DATE-1405 (N8)
  2 PRIOR-DATE-OF-RANK (N8)
  2 DATE-RETIRED (N8)
  2 VA-CLAIM-NUMBER (A12)
  2 VA-DISABILITY-PCT (P1.2)
  2 VA-DISABLE-DATE (N8)
  2 RSV-NG-20-YR-CERT-LTR-DATE (N8)
  2 RET-RSV-DATE (N8)
  2 RETIRED-PAY-AMT (P5)
  2 MIL-SBP-OPT (A1)
  2 MIL-SBP-AMT (P5)
  2 RANK-ABBR (A25)
  2 RSV-NG-TYPE-ANNUITY (A1)
  2 RSV-NG-RETIRE-PTS (P5)
  2 CHIEF-OF-STAFF-IND (A1)
  2 RSFPP-AMT (P5)
  2 DATE-OF-BIRTH (N8)
  2 WIDOW-FLAG (A1)
  2 DISABILITY-PCT (P1.2)
  2 DATE-OF-DEATH (N8)
*
1 J          (I4)
1 K          (I4)
1 #UPDATED   (L)
1 #HOLD-DATE (A/3) DYNAMIC
1 #DATE(A8)
1 REDEFINE #DATE
  2 #YYYY  (N4)
  2 #MM    (N2)
  2 #DD    (N2)
1 REDEFINE #DATE
  2 #DATE-N  (N8)
*
1 #HOLD-AREA-CODE (A) DYNAMIC
1 #HOLD-DIAL-NUMBER (A) DYNAMIC
*
1 CNT-V VIEW OF A-CONTACTS
  2 CONTACT-ID  (N8)
END-DEFINE
/*
FOR J 1 TO C@Contact
  FIND CNT-V WITH CRM-CONTACT-GUI = IASOrder.Id (J)
    IF NO RECORDS FOUND
      PERFORM CREATE-CONTACT
    END-NOREC
  END-FIND
END-FOR

PERFORM CREATE-CONTACT-REL

DEFINE CREATE-CONTACT
/*     ==============

PERFORM CREATE-CONTACT-RECORD

DECIDE FOR EVERY CONDITION
* /* BillingAddress
*   WHEN IASOrder.Street <> BLANK
*     PERFORM STORE-BILLING-ADDRESS

/* PrimaryAddress
  WHEN IASOrder.Street_001(J) <> BLANK
    PERFORM STORE-PRIMARY-ADDRESS

/* SecondaryAddress
  WHEN IASOrder.Street_002(J) <> BLANK
    PERFORM STORE-SECONDARY-ADDRESS

/* Phone1
  WHEN IASOrder.PhoneNumber(J) <> BLANK
    PERFORM STORE-PHONE-1

/* Phone2
  WHEN IASOrder.PhoneNumber_001(J) <> BLANK
    PERFORM STORE-PHONE-2

/* Phone3
  WHEN IASOrder.PhoneNumber_002(J) <> BLANK
    PERFORM STORE-PHONE-3

/* Email1 ASSUMING THIS IS PREFERRED
  WHEN IASOrder.EmailAddress(J) <> BLANK
    PERFORM STORE-EMAIL-1

/* Email2
  WHEN IASOrder.EmailAddress_001(J) <> BLANK
    PERFORM STORE-EMAIL-2

/* Email3
  WHEN IASOrder.EmailAddress_002(J) <> BLANK
    PERFORM STORE-EMAIL-3

  WHEN NONE
    IGNORE
END-DECIDE

PERFORM POPULATE-MILITARY-INFO

END-SUBROUTINE
/*

DEFINE CREATE-EMAIL
/*     ============

IF #EMAIL.EMAIL-ADDRESS NE BLANK
  RESET #MSG
  #EMAIL.CONTACT-ID := #CONTACT.CONTACT-ID
  IF #EMAIL.EMAIL-TYPE = BLANK      /* Default is P
    #EMAIL.EMAIL-TYPE := 'P'
  END-IF
  CALLNAT 'GOEMN001' #EMAIL #CLERK-ID #MSG
    #UPDATED
  IF #MSG NE BLANK
    COMPRESS IASOrder.ErrorDescription_002 (J) #MSG
      INTO IASOrder.ErrorDescription_002 (J)
  END-IF
END-IF
END-SUBROUTINE
/*

DEFINE CREATE-PHONE
/*     ==============
IF #PHONE.INTL-DIAL-NUMBER NE 0
  #MSG := 'ZERO ACCEPTED'
  #PHONE.CONTACT-ID := #CONTACT.CONTACT-ID
  CALLNAT 'GOPHN001' #PHONE #CLERK-ID #MSG
    #UPDATED
  IF #MSG NE BLANK
    COMPRESS IASOrder.ErrorDescription_002 (J) #MSG
      INTO IASOrder.ErrorDescription_002 (J)
  END-IF
END-IF
END-SUBROUTINE
/*

DEFINE CREATE-CONTACT-REL
/*     ==================
RESET #MSG
RESET #CONTACT-REL
FOR J 1 TO IASOrder.C@Relationship
  FIND(1) CNT-V WITH CRM-CONTACT-GUI = IASOrder.MemberId (J)
    IF NO RECORDS FOUND
      COMPRESS #MSG '<> No contact found GOUD:' IASOrder.MemberId (j)
        INTO #MSG
      ESCAPE BOTTOM
    END-NOREC
    IASOrder.MemberContactID (J) := CNT-V.CONTACT-ID
    #CONTACT-REL.CONTACT-1-ID := CNT-V.CONTACT-ID
    #HOLD-AREA-CODE := *TRANSLATE(IASOrder.Role (j),UPPER)
    #CONTACT-REL.ROLE-1-CD := F-ROLECD (< #HOLD-AREA-CODE >)
  END-FIND
  FIND(1) CNT-V WITH CRM-CONTACT-GUI = IASOrder.PartnerId (J)
    IF NO RECORDS FOUND
      COMPRESS #MSG '<> No contact found GOUD:' IASOrder.PartnerId (J)
        INTO #MSG
      ESCAPE BOTTOM
    END-NOREC
    IASOrder.PartnerContactID (J) := CNT-V.CONTACT-ID
    #CONTACT-REL.CONTACT-2-ID := CNT-V.CONTACT-ID
    #HOLD-AREA-CODE := *TRANSLATE(IASOrder.PartnerRole (j),UPPER)
    #CONTACT-REL.ROLE-2-CD := F-ROLECD (< #HOLD-AREA-CODE >)
  END-FIND
  IF #CONTACT-REL.CONTACT-1-ID > 0
    CALLNAT 'GOCRN001' #CONTACT-REL #MSG #UPDATED
  END-IF
END-FOR
/*
END-SUBROUTINE
/*

DEFINE CREATE-ADDRESS
/*     ==============
IF #ADDR-POOL.STREET NE BLANK
  RESET #MSG
  #ADDR-REL.CONTACT-ID := #CONTACT.CONTACT-ID
  IF #ADDR-REL.ADDRESS-SOURCE = BLANK
    #ADDR-REL.ADDRESS-SOURCE := 'A'
  END-IF
  IF #ADDR-POOL.COUNTRY-CODE = BLANK   /* Default is US
    #ADDR-POOL.COUNTRY-CODE := 'US'
  END-IF
  IF #ADDR-POOL.COUNTRY-CODE = 'US' OR= 'PR'
    RESET #ADDR-POOL.POSTAL-CODE
  ELSE
    RESET #ADDR-POOL.ZIP-CODE
  END-IF
  CALLNAT 'GOADN001' #ADDR-POOL #ADDR-REL #CLERK-ID #MSG
    #UPDATED
  IF #MSG NE BLANK
    COMPRESS IASOrder.ErrorDescription_002 (J) #MSG
      INTO IASOrder.ErrorDescription_002 (J)
  END-IF
END-IF
END-SUBROUTINE
/*

DEFINE POPULATE-MILITARY-INFO
/*     ======================
RESET #MIL
*
IF #CONTACT.CONTACT-ID > 0
  #MIL.CONTACT-ID                  := #CONTACT.CONTACT-ID
  DECIDE FOR EVERY CONDITION
    WHEN *LENGTH(IASOrder.MilitaryRankId(J)) > 0
     #MIL.RANK-ID                     := VAL(IASOrder.MilitaryRankId(J))
    WHEN *LENGTH(IASOrder.DIEMS(J)) > 0
      #MIL.DATE-INIT-ENTRY-MIL-SVC     := VAL(IASOrder.DIEMS(J))
    WHEN *LENGTH(IASOrder.PEBD(J)) > 0
      #MIL.BASE-PAY-EF-DATE            := VAL(IASOrder.PEBD(J))
    WHEN *LENGTH(IASOrder.BASD(J)) > 0
      #MIL.ACTIVE-DUTY-BASE-DATE       := VAL(IASOrder.BASD(J))
    WHEN *LENGTH(IASOrder.DateOfPromotion(J)) > 0
    #MIL.DATE-OF-RANK                := VAL(IASOrder.DateOfPromotion(J))
    WHEN *LENGTH(IASOrder.DateOfPreviousPromotion(J)) > 0
#MIL.PRIOR-DATE-OF-RANK          := VAL(IASOrder.DateOfPreviousPromotion(J))
    WHEN *LENGTH(IASOrder.DateRetired(J)) > 0
      #MIL.DATE-RETIRED                := VAL(IASOrder.DateRetired(J))
    WHEN *LENGTH(IASOrder.VADisabilityPercent(J)) > 0
#MIL.VA-DISABILITY-PCT           := VAL(IASOrder.VADisabilityPercent(J))
    WHEN *LENGTH(IASOrder.VADisabilityDate(J)) > 0
   #MIL.VA-DISABLE-DATE             := VAL(IASOrder.VADisabilityDate(J))
    WHEN NONE
      IGNORE
  END-DECIDE

  #MIL.MILITARY-STATUS             := IASOrder.MilitaryStatus(J)
  #MIL.MILITARY-ID                 := IASOrder.BranchOfService(J)
  #MIL.VA-CLAIM-NUMBER             := IASOrder.VAClaimNumber(J)
  #MIL.MIL-SBP-OPT                 := IASOrder.SBPOption(J)
  #MIL.DATE-OF-BIRTH               := #CONTACT.DATE-OF-BIRTH

  CALLNAT 'GOMDN001' #MIL #CLERK-ID #MSG
    #UPDATED
  IF #MSG NE BLANK
    COMPRESS IASOrder.ErrorDescription_002 (J) #MSG
      INTO IASOrder.ErrorDescription_002 (J)
  END-IF
END-IF
END-SUBROUTINE
/*

DEFINE SUBROUTINE CREATE-CONTACT-RECORD
/*                =====================
RESET #CONTACT #HOLD-DATE(*)
#CONTACT.CRM-CONTACT-GUI  := IASOrder.Id (J)

IF *LENGTH(IASOrder.ContactType (J)) > 1
  #CONTACT.CONTACT-TYPE := SUBSTR(IASOrder.ContactType(J),1,1)
ELSE
  #CONTACT.CONTACT-TYPE     := IASOrder.ContactType (J)
END-IF

IF *LENGTH(IASOrder.DateOfBirth(J)) > 1
*   SEPARATE IASOrder.DateOfBirth(J) INTO #HOLD-DATE(*) WITH DELIMITER '/'
*   #YYYY := VAL(#HOLD-DATE(3))
*   #MM   := VAL(#HOLD-DATE(1))
*   #DD   := VAL(#HOLD-DATE(2))
*   #CONTACT.DATE-OF-BIRTH    := VAL(#DATE)
  #CONTACT.DATE-OF-BIRTH := VAL(IASOrder.DateOfBirth(J))
END-IF

IF *LENGTH(IASOrder.CN(J)) > 0
  #CONTACT.ID-NUMBER        := VAL(IASOrder.CN(J))
END-IF

IF *LENGTH(IASOrder.FirstName(J)) > 25
  #CONTACT.FIRST-NAME       := SUBSTRING(IASOrder.FirstName(J),1,25)
ELSE
  #CONTACT.FIRST-NAME       := IASOrder.FirstName(J)
END-IF

IF *LENGTH(IASOrder.MiddleName(J)) > 25
  #CONTACT.MIDDLE-NAME       := SUBSTRING(IASOrder.MiddleName(J),1,25)
ELSE
  #CONTACT.MIDDLE-NAME       := IASOrder.MiddleName(J)
END-IF

IF *LENGTH(IASOrder.LastName(J)) > 25
  #CONTACT.LAST-NAME       := SUBSTRING(IASOrder.LastName(J),1,25)
ELSE
  #CONTACT.LAST-NAME       := IASOrder.LastName(J)
END-IF

IF *LENGTH(IASOrder.Suffix(J)) > 10
  #CONTACT.SUFFIX       := SUBSTRING(IASOrder.Suffix(J),1,10)
ELSE
  #CONTACT.SUFFIX       := IASOrder.Suffix(J)
END-IF

IF *LENGTH(IASOrder.Prefix(J)) > 25
  #CONTACT.PREFIX-TITLE       := SUBSTRING(IASOrder.Prefix(J),1,25)
ELSE
  #CONTACT.PREFIX-TITLE     := IASOrder.Prefix(J)
END-IF

IF *LENGTH(IASOrder.OrganizationName(J)) > 75
#CONTACT.FIRM-ORGANIZATION-NAME := SUBSTRING(IASOrder.OrganizationName(J),1,75)
ELSE
  #CONTACT.FIRM-ORGANIZATION-NAME := IASOrder.OrganizationName(J)
END-IF

#CONTACT.GENDER-CD        := IASOrder.Gender(J)
#CONTACT.MILITARY-STATUS  := IASOrder.MilitaryStatus(J)
*
IF IASORDER.GOVTID(J) > BLANK
  IF IASORDER.GOVTID(J) IS (N9)
    #CONTACT.SSN := VAL(IASORDER.GOVTID(J))
  ELSE
    EXAMINE IASORDER.GOVTID(J) FOR '-' DELETE
    #CONTACT.SSN := VAL(IASORDER.GOVTID(J))
  END-IF
END-IF
*
IF *LENGTH(IASOrder.WebsiteURL(J)) > 70
  #CONTACT.WEBSITE-URL := SUBSTRING(IASOrder.WebsiteURL(J),1,70)
ELSE
  #CONTACT.WEBSITE-URL := IASOrder.WebsiteURL(J)
END-IF

IF #CONTACT.CONTACT-TYPE = BLANK
  #CONTACT.CONTACT-TYPE := 'I'
END-IF

IF #CONTACT.CONTACT-TYPE = 'O'
  #DATE := IASOrder.OrganizationEstablishedDate (J)
  IF #DATE = MASK(YYYYMMDD)
    #CONTACT.FIRM-ESTABLISHED-DATE := #DATE-N
  END-IF
END-IF

CALLNAT 'GOCON001' #CONTACT #CLERK-ID #MSG
  #UPDATED
IF #MSG NE BLANK
  COMPRESS IASOrder.ErrorDescription_002 (J) #MSG
    INTO IASOrder.ErrorDescription_002 (J)
  RESET #MSG
END-IF
END-SUBROUTINE


DEFINE SUBROUTINE STORE-BILLING-ADDRESS
/*                =============================
RESET #ADDR-POOL #ADDR-REL
#ADDR-REL.ADDR-TYPE-CD := 'O'

IF *LENGTH(IASOrder.Street) > 50
  #ADDR-POOL.STREET := SUBSTRING(IASOrder.Street,1,50)
ELSE
  #ADDR-POOL.STREET := IASOrder.Street
END-IF

IF *LENGTH(IASOrder.Unit) > 25
  #ADDR-POOL.UNIT :=  SUBSTRING(IASOrder.Unit,1,25)
ELSE
  #ADDR-POOL.UNIT := *TRIM(IASOrder.Unit)
END-IF

#ADDR-POOL.STATE-CODE:= IASOrder.State

IF *LENGTH(IASOrder.City) > 50
  #ADDR-POOL.CITY := SUBSTRING(IASOrder.City,1,50)
ELSE
  #ADDR-POOL.CITY := IASOrder.City
END-IF

#ADDR-POOL.COUNTRY-CODE := IASOrder.CountryCode

IF *LENGTH(IASOrder.Zip) > 0
  EXAMINE IASOrder.Zip FOR '-' DELETE
  #ADDR-POOL.ZIP-CODE := VAL(IASOrder.Zip)
END-IF

#ADDR-REL.RETURNED-MAIL-IND := IASOrder.Undeliverable

IF *LENGTH(IASOrder.Zip5) > 0
  #ADDR-POOL.ZIP-5 := VAL(IASOrder.Zip5)
END-IF

IF *LENGTH(IASOrder.Zip4) > 0
  #ADDR-POOL.ZIP-4 := VAL(IASOrder.Zip4)
END-IF

IF *LENGTH(IASOrder.AddressRole) > 1
  #ADDR-REL.ADDR-TYPE-CD := SUBSTR(IASOrder.AddressRole,1,1)
ELSE
  #ADDR-REL.ADDR-TYPE-CD := IASOrder.AddressRole
END-IF

IF IASOrder.Certified
  #ADDR-POOL.ADDR-VALID-IND := 'Y'
ELSE
  #ADDR-POOL.ADDR-VALID-IND := 'N'
END-IF

PERFORM CREATE-ADDRESS
*
END-SUBROUTINE
/*


DEFINE SUBROUTINE STORE-PRIMARY-ADDRESS
/*                =====================
RESET #ADDR-POOL #ADDR-REL
#ADDR-REL.ADDR-TYPE-CD := 'P'

IF *LENGTH(IASOrder.Street_001(J)) > 50
  #ADDR-POOL.STREET := SUBSTRING(IASOrder.Street_001(J),1,50)
ELSE
  #ADDR-POOL.STREET := IASOrder.Street_001(J)
END-IF

IF *LENGTH(IASOrder.Unit_001(J)) > 25
  #ADDR-POOL.UNIT := SUBSTRING(IASOrder.Unit_001(J),1,25)
ELSE
  #ADDR-POOL.UNIT := IASOrder.Unit_001(J)
END-IF

IF *LENGTH(IASOrder.State_001(J)) > 2
  #MSG := *TRANSLATE(IASOrder.State_001(J),UPPER)
  FIND GEN-TABLE-V WITH GEN-KEY = 'STCD'
    IF GEN-TABLE-V.GEN-ALPHA-VALUE = IASOrder.State_001(J)
        OR *TRANSLATE(GEN-TABLE-V.GEN-ALPHA-VALUE,UPPER) = #MSG
      #ADDR-POOL.STATE-CODE := GEN-TABLE-V.GEN-SUB-KEY
      RESET #MSG
      ESCAPE BOTTOM
    END-IF
  END-FIND
ELSE  
  #ADDR-POOL.STATE-CODE:= IASOrder.State_001(J)
  #ADDR-POOL.STATE-CODE := *TRANSLATE(#ADDR-POOL.STATE-CODE,UPPER)
  #MSG := FUNCTION-STATE-CHECK (< #ADDR-POOL.STATE-CODE >)
END-IF

IF *LENGTH(IASOrder.City_001(J)) > 50
  #ADDR-POOL.CITY := SUBSTRING(IASOrder.City_001(J),1,50)
ELSE
  #ADDR-POOL.CITY := IASOrder.City_001(J)
END-IF

#ADDR-POOL.COUNTRY-CODE := IASOrder.CountryCode_001(J)

IF *LENGTH(IASOrder.Zip_001(J)) > 0
  EXAMINE IASOrder.Zip_001(J) FOR '-' DELETE
  IF Zip_001(J) IS (N5)
    COMPRESS Zip_001(J) '0000' INTO Zip_001(J) LEAVING NO
  END-IF
  #ADDR-POOL.ZIP-CODE := VAL(IASOrder.Zip_001(J))
END-IF

IF *TRANSLATE (IASOrder.Undeliverable_001(J),UPPER) = 'TRUE'
  #ADDR-REL.RETURNED-MAIL-IND := 'Y'
ELSE
  #ADDR-REL.RETURNED-MAIL-IND := 'N'
END-IF

IF *LENGTH(IASOrder.Zip5_001(J)) > 0
  #ADDR-POOL.ZIP-5 := VAL(IASOrder.Zip5_001(J))
END-IF

IF *LENGTH(IASOrder.Zip4_001(J)) > 0
  #ADDR-POOL.ZIP-4 := VAL(IASOrder.Zip4_001(J))
END-IF

IF IASOrder.Certified_001(J)
  #ADDR-POOL.ADDR-VALID-IND := 'Y'
ELSE
  #ADDR-POOL.ADDR-VALID-IND := 'N'
END-IF

PERFORM CREATE-ADDRESS

END-SUBROUTINE
/*


DEFINE SUBROUTINE STORE-SECONDARY-ADDRESS
/*                =======================
RESET #ADDR-POOL #ADDR-REL
#ADDR-REL.ADDR-TYPE-CD := 'S'

IF *LENGTH(IASOrder.Street_002(J)) > 50
  #ADDR-POOL.STREET := SUBSTRING(IASOrder.Street_002(J),1,50)
ELSE
  #ADDR-POOL.STREET := IASOrder.Street_002(J)
END-IF

IF *LENGTH(IASOrder.Unit_001(J)) > 25
  #ADDR-POOL.UNIT := SUBSTRING(IASOrder.Unit_002(J),1,25)
ELSE
  #ADDR-POOL.UNIT := IASOrder.Unit_002(J)
END-IF

IF *LENGTH(IASOrder.State_002(J)) > 2
  #MSG := *TRANSLATE(IASOrder.State_002(J),UPPER)
  FIND GEN-TABLE-V WITH GEN-KEY = 'STCD'
    IF GEN-TABLE-V.GEN-ALPHA-VALUE = IASOrder.State_002(J)
        OR *TRANSLATE(GEN-TABLE-V.GEN-ALPHA-VALUE,UPPER) = #MSG
      #ADDR-POOL.STATE-CODE := GEN-TABLE-V.GEN-SUB-KEY
      RESET #MSG
      ESCAPE BOTTOM
    END-IF
  END-FIND
ELSE  
  #ADDR-POOL.STATE-CODE:= IASOrder.State_002(J)
  #ADDR-POOL.STATE-CODE := *TRANSLATE(#ADDR-POOL.STATE-CODE,UPPER)
  #MSG := FUNCTION-STATE-CHECK (< #ADDR-POOL.STATE-CODE >)
END-IF

IF *LENGTH(IASOrder.City_001(J)) > 50
  #ADDR-POOL.CITY := SUBSTRING(IASOrder.City_002(J),1,50)
ELSE
  #ADDR-POOL.CITY := IASOrder.City_002(J)
END-IF

#ADDR-POOL.COUNTRY-CODE := IASOrder.CountryCode_002(J)

IF *LENGTH(IASOrder.Zip_002(J)) > 0
  EXAMINE IASOrder.Zip_002(J) FOR '-' DELETE
  IF Zip_002(J) IS (N5)
    COMPRESS Zip_002(J) '0000' INTO Zip_002(J) LEAVING NO
  END-IF
  #ADDR-POOL.ZIP-CODE := VAL(IASOrder.Zip_002(J))
END-IF

IF *TRANSLATE (IASOrder.Undeliverable_002(J),UPPER) = 'TRUE'
  #ADDR-REL.RETURNED-MAIL-IND := 'Y'
ELSE
  #ADDR-REL.RETURNED-MAIL-IND := 'N'
END-IF

IF *LENGTH(IASOrder.Zip5_002(J)) > 0
  #ADDR-POOL.ZIP-5 := VAL(IASOrder.Zip5_002(J))
END-IF

IF *LENGTH(IASOrder.Zip4_001(J)) > 0
  #ADDR-POOL.ZIP-4 := VAL(IASOrder.Zip4_002(J))
END-IF

* IF *LENGTH(IASOrder.AddressRole_002(J)) > 1
*   #ADDR-REL.ADDR-TYPE-CD := SUBSTR(IASOrder.AddressRole_002(J),1,1)
* ELSE
*   #ADDR-REL.ADDR-TYPE-CD := IASOrder.AddressRole_002(J)
* END-IF

IF IASOrder.Certified_002(J)
  #ADDR-POOL.ADDR-VALID-IND := 'Y'
ELSE
  #ADDR-POOL.ADDR-VALID-IND := 'N'
END-IF

PERFORM CREATE-ADDRESS

END-SUBROUTINE
/*

DEFINE SUBROUTINE STORE-PHONE-1
/*                ============
RESET #PHONE
#PHONE.CONTACT-ID := #CONTACT.CONTACT-ID

IF IASOrder.International(J)
  EXAMINE IASOrder.PhoneNumber(J) FOR '-' DELETE
  EXAMINE IASOrder.PhoneNumber(J) FOR '(' DELETE
  EXAMINE IASOrder.PhoneNumber(J) FOR ')' DELETE
  EXAMINE IASOrder.PhoneNumber(J) FOR BLANK DELETE
ELSE
  EXAMINE PhoneNumber(J) FOR '-' DELETE
  EXAMINE PhoneNumber(J) FOR '(' DELETE
  EXAMINE PhoneNumber(J) FOR ')' DELETE
  EXAMINE PhoneNumber(J) FOR BLANK DELETE
  #HOLD-AREA-CODE    := SUBSTR(IASOrder.PhoneNumber(J),1,3)
  #HOLD-DIAL-NUMBER  := SUBSTR(IASOrder.PhoneNumber(J),4,7)
  #PHONE.AREA-CODE   := VAL(#HOLD-AREA-CODE)
  #PHONE.DIAL-NUMBER := Val(#HOLD-DIAL-NUMBER)
END-IF

IF *LENGTH(IASOrder.PhoneNumber(J)) > 20
  #PHONE.INTL-DIAL-NUMBER-A := SUBSTRING(IASOrder.PhoneNumber(J),1,20)
ELSE
  #PHONE.INTL-DIAL-NUMBER-A := IASOrder.PhoneNumber(J)
END-IF

IF *LENGTH(IASOrder.Extension(J)) > 1
  #PHONE.EXT := VAL(IASOrder.Extension(J))
END-IF

IF *LENGTH(IASOrder.Type(J)) > 1
  #PHONE.PHONE-TYPE-CODE := SUBSTR(IASOrder.Type(J),1,1)
ELSE
  #PHONE.PHONE-TYPE-CODE := IASOrder.Type(J)
END-IF

* IF IASOrder.Preferred(J)
/* Will assume the first phone is the preferred one
#PHONE.PREFERRED-PHONE-IND := 'Y'
* END-IF

PERFORM CREATE-PHONE

END-SUBROUTINE
/*

DEFINE SUBROUTINE STORE-PHONE-2
/*                ============
RESET #PHONE
#PHONE.CONTACT-ID := #CONTACT.CONTACT-ID

IF IASOrder.International_001(J)
  EXAMINE IASOrder.PhoneNumber_001(J) FOR '-' DELETE
  EXAMINE IASOrder.PhoneNumber_001(J) FOR '(' DELETE
  EXAMINE IASOrder.PhoneNumber_001(J) FOR ')' DELETE
  EXAMINE IASOrder.PhoneNumber_001(J) FOR BLANK DELETE
ELSE
  EXAMINE PhoneNumber_001(J) FOR '-' DELETE
  EXAMINE PhoneNumber_001(J) FOR '(' DELETE
  EXAMINE PhoneNumber_001(J) FOR ')' DELETE
  EXAMINE PhoneNumber_001(J) FOR BLANK DELETE
  #HOLD-AREA-CODE    := SUBSTR(IASOrder.PhoneNumber_001(J),1,3)
  #HOLD-DIAL-NUMBER  := SUBSTR(IASOrder.PhoneNumber_001(J),4,7)
  #PHONE.AREA-CODE   := VAL(#HOLD-AREA-CODE)
  #PHONE.DIAL-NUMBER := Val(#HOLD-DIAL-NUMBER)
END-IF

IF *LENGTH(IASOrder.PhoneNumber_001(J)) > 20
#PHONE.INTL-DIAL-NUMBER-A := SUBSTRING(IASOrder.PhoneNumber_001(J),1,20)
ELSE
  #PHONE.INTL-DIAL-NUMBER-A := IASOrder.PhoneNumber_001(J)
END-IF

IF *LENGTH(IASOrder.Extension_001(J)) > 1
  #PHONE.EXT := VAL(IASOrder.Extension_001(J))
END-IF

IF *LENGTH(IASOrder.Type_001(J)) > 1
  #PHONE.PHONE-TYPE-CODE := SUBSTR(IASOrder.Type_001(J),1,1)
ELSE
  #PHONE.PHONE-TYPE-CODE := IASOrder.Type_001(J)
END-IF

IF IASOrder.Preferred_001(J)
  #PHONE.PREFERRED-PHONE-IND := 'Y'
END-IF

PERFORM CREATE-PHONE

END-SUBROUTINE
/*


DEFINE SUBROUTINE STORE-PHONE-3
/*                ============
RESET #PHONE
#PHONE.CONTACT-ID := #CONTACT.CONTACT-ID
*
IF IASOrder.International_002(J)
  #PHONE.INTL-DIAL-NUMBER-A := *TRIM(IASOrder.PhoneNumber_002(J))
ELSE
  EXAMINE PhoneNumber_002(J) FOR '-' DELETE
  EXAMINE PhoneNumber_002(J) FOR '(' DELETE
  EXAMINE PhoneNumber_002(J) FOR ')' DELETE
  #HOLD-AREA-CODE    := SUBSTR(IASOrder.PhoneNumber_002(J),1,3)
  #HOLD-DIAL-NUMBER  := SUBSTR(IASOrder.PhoneNumber_002(J),4,7)
  #PHONE.AREA-CODE   := VAL(#HOLD-AREA-CODE)
  #PHONE.DIAL-NUMBER := Val(#HOLD-DIAL-NUMBER)
END-IF
*
IF *LENGTH(IASOrder.PhoneNumber_002(J)) > 20
#PHONE.INTL-DIAL-NUMBER-A := SUBSTRING(IASOrder.PhoneNumber_002(J),1,20)
ELSE
  #PHONE.INTL-DIAL-NUMBER-A := IASOrder.PhoneNumber_002(J)
END-IF

IF *LENGTH(IASOrder.Extension_002(J)) > 1
  #PHONE.EXT := VAL(IASOrder.Extension_002(J))
END-IF

IF *LENGTH(IASOrder.Type_002(J)) > 1
  #PHONE.PHONE-TYPE-CODE := SUBSTR(IASOrder.Type_002(J),1,1)
ELSE
  #PHONE.PHONE-TYPE-CODE := IASOrder.Type_002(J)
END-IF

IF IASOrder.Preferred_002(J)
  #PHONE.PREFERRED-PHONE-IND := 'Y'
END-IF

PERFORM CREATE-PHONE
END-SUBROUTINE
/*


DEFINE SUBROUTINE STORE-EMAIL-1
/*                =============
RESET #EMAIL
#EMAIL.CONTACT-ID := #CONTACT.CONTACT-ID

IF *LENGTH(IASOrder.EmailAddress(J)) > 70
  #EMAIL.EMAIL-ADDRESS :=  SUBSTRING(IASOrder.EmailAddress(J),1,70)
ELSE
  #EMAIL.EMAIL-ADDRESS := IASOrder.EmailAddress(J)
END-IF

IF *LENGTH(IASOrder.Type_003(J)) > 1
  #EMAIL.EMAIL-TYPE := SUBSTR(IASOrder.Type_003(J),1,1)
ELSE
  #EMAIL.EMAIL-TYPE := IASOrder.Type_003(J)
END-IF

IF IASOrder.EmailUndeliverable(J)
  #EMAIL.EMAIL-UNDELIV := 'Y'
ELSE
  #EMAIL.EMAIL-UNDELIV := 'N'
END-IF

IF *LENGTH(IASOrder.Status(J)) > 1
  #EMAIL.STATUS := SUBSTR(IASOrder.Status(J),1,1)
ELSE
  #EMAIL.STATUS := IASOrder.Status(J)
END-IF
*
IF *LENGTH(IASOrder.EmailStatusDate(J)) > 1
  #EMAIL.STATUS-DATE := VAL(IASOrder.EmailStatusDate(J))
END-IF

IF IASOrder.Protected(J)
  #EMAIL.EMAIL-PROTECTION-IND := 'Y'
ELSE
  #EMAIL.EMAIL-PROTECTION-IND := 'N'
END-IF

#EMAIL.EMAIL-PREFERRED-IND := 'Y'

PERFORM CREATE-EMAIL
END-SUBROUTINE
/*


DEFINE SUBROUTINE STORE-EMAIL-2
/*                =============
RESET #EMAIL
#EMAIL.CONTACT-ID := #CONTACT.CONTACT-ID

IF *LENGTH(IASOrder.EmailAddress_001(J)) > 70
  #EMAIL.EMAIL-ADDRESS :=  SUBSTRING(IASOrder.EmailAddress_001(J),1,70)
ELSE
  #EMAIL.EMAIL-ADDRESS := IASOrder.EmailAddress_001(J)
END-IF

IF *LENGTH(IASOrder.Type_004(J)) > 1
  #EMAIL.EMAIL-TYPE := SUBSTR(IASOrder.Type_004(J),1,1)
ELSE
  #EMAIL.EMAIL-TYPE := IASOrder.Type_004(J)
END-IF

IF IASOrder.EmailUndeliverable_001(J)
  #EMAIL.EMAIL-UNDELIV := 'Y'
ELSE
  #EMAIL.EMAIL-UNDELIV := 'N'
END-IF

IF *LENGTH(IASOrder.Status_001(J)) > 1
  #EMAIL.STATUS := SUBSTR(IASOrder.Status_001(J),1,1)
ELSE
  #EMAIL.STATUS := IASOrder.Status_001(J)
END-IF
*
IF *LENGTH(IASOrder.EmailStatusDate_001(J)) > 1
  #EMAIL.STATUS-DATE := VAL(IASOrder.EmailStatusDate_001(J))
END-IF

IF IASOrder.Protected_001(J)
  #EMAIL.EMAIL-PROTECTION-IND := 'Y'
ELSE
  #EMAIL.EMAIL-PROTECTION-IND := 'N'
END-IF

PERFORM CREATE-EMAIL
END-SUBROUTINE
/*


DEFINE SUBROUTINE STORE-EMAIL-3
/*                =============
RESET #EMAIL
#EMAIL.CONTACT-ID := #CONTACT.CONTACT-ID

IF *LENGTH(IASOrder.EmailAddress_002(J)) > 70
  #EMAIL.EMAIL-ADDRESS :=  SUBSTRING(IASOrder.EmailAddress_002(J),1,70)
ELSE
  #EMAIL.EMAIL-ADDRESS := IASOrder.EmailAddress_002(J)
END-IF

IF *LENGTH(IASOrder.Type_005(J)) > 1
  #EMAIL.EMAIL-TYPE := SUBSTR(IASOrder.Type_005(J),1,1)
ELSE
  #EMAIL.EMAIL-TYPE := IASOrder.Type_005(J)
END-IF

IF IASOrder.EmailUndeliverable_002(J)
  #EMAIL.EMAIL-UNDELIV := 'Y'
ELSE
  #EMAIL.EMAIL-UNDELIV := 'N'
END-IF

IF *LENGTH(IASOrder.Status_002(J)) > 1
  #EMAIL.STATUS := SUBSTR(IASOrder.Status_002(J),1,1)
ELSE
  #EMAIL.STATUS := IASOrder.Status_002(J)
END-IF
*
IF *LENGTH(IASOrder.EmailStatusDate_002(J)) > 1
  #EMAIL.STATUS-DATE := VAL(IASOrder.EmailStatusDate_002(J))
END-IF

IF IASOrder.Protected_002(J)
  #EMAIL.EMAIL-PROTECTION-IND := 'Y'
ELSE
  #EMAIL.EMAIL-PROTECTION-IND := 'N'
END-IF

PERFORM CREATE-EMAIL
END-SUBROUTINE
/*
END
