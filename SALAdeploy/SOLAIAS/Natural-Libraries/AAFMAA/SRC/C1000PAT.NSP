* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 2
* <Natural Source Header
* PROGRAM ID: C1000PAT
* The new version based on Contact data
************************************************************************
*                       MODIFICATION LOG                               *
* USER    DATE      TAG     REASON                                     *
* PAM    08/16/2011 PM1     Added Smoker Flag changes                  *
* NGG    08/16/2011 NG1     Fixes for REFUND-TO-CAP, FACE-AMT-DOLS,    *
*                           RECOMMEND-MSG, SMOKER-FLAG                 *
* PAM    09/16/2011 PM2     Check for status, id, civilian states, etc *
* PAM    09/22/2011 PM3     Adjusted defaults for REFUND-TO-CAP,       *
*                           ALOT-AUTH-CHG and SIGNATURE CARD. HEIGHT   *
*                           and WEIGHT always mandatory                *
* NGG    12/30/2011 NG2     Premier services change                    *
* NGG    04/23/2012 NG3     Pop-up window to confirm Premier Service   *
* PAM    05/14/2012 PM4     Allow rated policies for 20P/30P and 7P    *
* NGG    07/02/2012 NG4     Reverse Premier Service                    *
* VXT    08/27/2012 vt1     Convert inches to ft /ticket 1388/         *
* VXT    10/30/2012 VT2     Add Memeber-CN to #pda-c1002sat parm /ticket 1185/ *
* YAK    09/26/2012 YK1     Use function to identify Level Term II plans
* YAK    11/13/2012 YK2     Add No Medical Term plan (EZ)              *
* NGG    20130111   NG5     Ticket 1710                                *
* NGG    20130419   NG6     Stability Project for $1M Policy           *
* vxt    01/28/2014 vt3     Add total amount to passing parms of C1002S / ticket 1830/
* vxt    04/10/2014 vt4     /Ticket 2712/
* YAK    06/17/2014 YK3     Add E-check capabilities                   *
* vxt    08/18/2014 vt5     /Ticket 2997 /                             *
* ngg    08/21/2014 ng7     Convert e-mail to lower case               *
* NGG    20141023   NG8     Annuity life products
* vxt    02/12/2015 vt6     fix error 3113 /Ticket 3337/               *
* vxt    02/27/2015 vt7     /Ticket 3368/                              *
* vxt    03/05/2015 vt8     /Ticket 3386/                              *
* vxt    03/17/2015 vt9     /Ticket 3391/                              *
* vxt    02/14/2015 vt10    Remove changes to ticket 3368              *
* vxt    03/24/2015 vt11    /Ticket 3425/                              *
* vxt    05/05/2015 vt12    /Ticket 3511/                              *
* vxt    05/20/2015 vt13    /Ticket 3541/                              *
* vxt    06/04/2015 vt14    /Ticket 3580)                              *
* vxt    09/09/2015 vt15    /Ticket 3809/                              *
* bz     10/28/2015 bz OI-3876 Escape Routine DB-UPDATE after U3 Completed
* NGG    20141023   NG9     Value Added Whole Life - new version       *
* bz     2016/01/03 bz-4116 add data etry for status W4
* vxt    03/14/2016 vt16    /Ticket 4258 - add handling flag           *
* bz     03/01]2016 bz-4190 /* add handaling of SUSPEND CODE
* vxt    04/29/2016 vt17    /Ticket-4437/                              *
* NGG    05/13/2016 NG10    VAWL version
* bz     12/15/2015           bz-GPL/GP2 * GPL/GP2 Proj
* bz     08/29/2016           bz-MIB       MIB Proj
* vxt    02/06/2017 vt18    /Ticket 2681/                              *
* yf     02/27/2017 yf1     /Ticket 2944/                              *
* bz     05/05/2017   bz-CRM-Proj
* bxt    05/10/2017 vt19  Group Term project                           *
* bz     08/08/2017  bz-HD-5046   Enforce Mode G for Plan SP
* TMT    12/05/2017  TT1     Sola project
************************************************************************
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX
LOCAL USING C1100LAI        /* #PDA-AUTO-ISSUE
LOCAL USING C1002LAT        /* #PDA-C1002SAT
LOCAL USING C1103LAI        /* #PDA-C1103LAI
LOCAL USING CLASSLAI
LOCAL USING GOADA001        /* Address pool and relations PDA
LOCAL USING GOADA002        /* Address UI
LOCAL USING GOEMA001        /* email PDA
LOCAL USING GOCOA001        /* Contact PDA
LOCAL USING GOMDA001        /* Military PDA
LOCAL USING C1008AAT        /* UI Application tracking file data
LOCAL USING C1009AAT        /* UI Additional data
* LOCAL USING C1010LAT        /* UI Phones
local
1 #PH
  2 #HOME
    3 #H_PH1 (N3)
    3 #H_PH2 (N3)
    3 #H_PH3 (N4)
    3 #H_PH4 (N6)
    3 #H-PH-ID (N8)
  2 #WORK
    3 #W_PH1 (N3)
    3 #W_PH2 (N3)
    3 #W_PH3 (N4)
    3 #W_PH4 (N6)
    3 #W-PH-ID (N8)
  2 #CELL
    3 #C_PH1 (N3)
    3 #C_PH2 (N3)
    3 #C_PH3 (N4)
    3 #C-PH-ID (N8)
  2 #PREFF (A1)
LOCAL USING C1011LAT        /* Application Tracking view
LOCAL USING C1012LAT        /* Status view (A-STAT )
LOCAL USING OBJLCONT        /* Contact file
LOCAL
1 #AGE-LIMIT          (N3) /* ng10
1 #SWITCHES
  2 #AT-#-ENT         (L)
  2 #NEW-AT           (L)
  2 #PAYS-DUES        (L)
  2 #LTII             (L)
  2 #TRY-MBR          (L)
  2 #ONLY-RIDER       (L)
  2 #WAS-INQUIRY      (L)
  2 #WAS-PENDING      (L)
  2 #WILL-BE-INQUIRY  (L)
  2 #WILL-BE-PENDING  (L)
  2 #ENTRY-SCN        (L)
  2 #FROM-AN          (L)
  2 #FLEX-POLICY      (L)
  2 #PENDING-SCN      (L)
  2 #HAS-FBR          (L)
  2 #NEW-POL-RIDER    (L)
  2 #ATTCH-POL-RIDER  (L)
  2 #PROSP            (L)
  2 #APPL-FOUND       (L)
  2 #STAT-FOUND       (L)
  2 #INVALID          (L)
*   2 #KATRINA-ZIP      (L)              /* vt12
  2 #DISCLOSURE       (L)
  2 #ERROR            (L)
*
1 #CONTROL-VARS     (C/28) 1 REDEFINE #CONTROL-VARS    /* vt14 was 22  /* vt16  /* vt17  /* vt19  
  2 #ONLY-EDS-CV      (C)
  2 #ONLY-EDS-CV-P    (C)
  2 #SDF-CV           (C)
  2 #SEC-CV           (C)
  2 #USER-CV          (C)
  2 #SERVICE-CV       (C)
  2 #GEN-CV           (C)
  2 #CHG-CV           (C)   /* #HPH-CV, #WPH-CV, #CPH-CV, #EML-CV, #MIL-CV
  2 #HPH-CV           (C)
  2 #WPH-CV           (C)
  2 #CPH-CV           (C)
  2 #pref-cv          (c)               /* vt14
  2 #EML-CV           (C)
  2 #MIL-CV           (C)
  2 #STATUS-CV        (C)
  2 #RID-CV2          (C)
  2 #SVC-TEXT-CV      (C)
  2 #AUTO-ISSUE-CV    (C)
  2 #ALOT-AUTH-CV     (C)
  2 #CV-ADDR          (C)
  2 #CV-ADDR-S        (C)
  2 #CV-MAIL          (C)
  2 #CV-RATE-DATE     (C)   /* NG9
  2 #cv-sh            (c)              /* vt16
  2 #intro-cv         (c)              /* vt17     04/20/2016
  2 #dols-cv          (c)              /* vt19  
  2 #units-cv         (c)              /* vt19  
  2 #cv-in            (c)              /* vt19  
1 #CV-SAVE            (C/28)           /* vt14 was 22 /* vt16 /* vt17 /* vt19  
*
1 #UPDATED               (L)
1 #HOLD-TODAY-DATE       (N8)
1 REDEFINE #HOLD-TODAY-DATE
  2 #HTD-CC   (A2)
  2 #HTD-YY   (A2)
  2 #HTD-MM   (A2)
  2 #HTD-DD   (A2)
1 REDEFINE #HOLD-TODAY-DATE
  2 #HOLD-MONTH-KEY   (N6)
1 REDEFINE #HOLD-TODAY-DATE
  2 #HTD-CC-N   (N2)
  2 #HTD-YY-N   (N2)
  2 #HTD-MM-N   (N2)
1 REDEFINE #HOLD-TODAY-DATE
  2 #HTD-YYYY   (N4)
  2 #HTD-MMDD   (N4)
1 #YYYYMMDD               (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY  (N4)
  2 REDEFINE #YYYY
    3 #CENT (A2)
    3 #YY   (A2)
  2 #MMDD  (N4)
  2 REDEFINE #MMDD
    3 #MM   (N2)
    3 #DD   (N2)
  2 REDEFINE #MMDD
    3 #MM-A (A2)
    3 #DD-A (A2)
1 #TEXT                   (A78)
1 REDEFINE #TEXT
  2 #TEXT-1ST-42  (A42)
  2 #TEXT-FILL    (A1)
  2 #TEXT-LST-35  (A35)
1  redefine #text                       /* vt17 \/
  2 #text-43    (a43)
  2 #text-rest  (a35)                   /* vt17 /\
*
1 #DEP-RCVD            (N7.2)
1 #DEP-RCVD-CASH       (N7.2)
1 #EXCH-1035           (N7.2)
1 #FLEX-DUES-PMT       (N3.2)
1 #FACE-AMT            (N7.2)   /* NG6
1 #FACE-9              (N7.2)
1 #FLEX-ANN-PREM       (N7.2)
1 #APREM               (N7.2)
1 #TOT-FACE            (N7.2)   /* NG5
1 #TOT-FACE-TERM       (N7.2)
1 #WORK-FACE           (N7.2)
1 #HOLD-SUFFIX         (A3)
1 #FLEX-NUM-YEARS      (N3)
1 #FLEX-PREM-AGE       (N2)
1 #POL-TYPE-YRS        (N2)
1 #NUMBER-OF-MONTHS    (N2)
1 #HOLD-TODAY-MMDDYYYY (A10)
*
1 #I1                  (I4)
1 #HOLD-SSN            (N9)
1 #SEC-CODE            (N2)
1 #SCN-ACTION-DATE     (A8)
1 #SCN-RECEIVED        (A8)
1 #LINKED-TO           (A7)
1 #LINKED-TO-AT        (A7)
1 #CURR-USER           (A3)
1 #ST-DESC             (A40)
1 #ERR-MSG             (A60)
1 #POL#                (P2)
1 #NEW-ADDL            (A1)
1 #HOLD-RIDER          (A1)
1 #POL-NUM                  (A9)  INIT <'??????-?'>
1 #DISPLAY-AUTO-ISSUE-LABEL (A11) INIT <'Auto Issue*'>
1 #DISPLAY-YES-ON-MED-LABEL (A10) INIT <'Yes on Med'>
1 #DISPLAY-AUTO-ISSUE-AMT   (A12)
1 #C1602SCO-NAME            (A25)
1 #PREFIX-TITLE-DESC        (A40)
1 #WORK-PROTECTED           (A1)
1 #F-PLAN                   (A3)
1 REDEFINE #F-PLAN
  2 #F-PLAN-N1               (N1.0)
  2 #F-PLAN-VT-N2            (N2.0)
1 REDEFINE #F-PLAN
  2 #F-PLAN-N2               (N2.0)
*
1 #WYYYYMMDD
  2 #WCENT (N2)
  2 #WYY   (N2)
  2 #WMM   (N2)
  2 #WDD   (N2)
1 REDEFINE #WYYYYMMDD
  2 #WYYYYMMDD-N (N8)
1 REDEFINE #WYYYYMMDD
  2 #WCENT-A (A2)
  2 #WYY-A   (A2)
  2 #WMM-A   (A2)
  2 #WDD-A   (A2)
1 REDEFINE #WYYYYMMDD
  2 #WYYYY-A (A4)
  2 #WMMDD-A (A4)
1 REDEFINE #WYYYYMMDD
  2 #WYYYY-N (N4)
  2 #WMMDD-N (N4)
*
1 #WMMDDYYYY
  2 #WMM   (N2)
  2 #WDD   (N2)
  2 #WCENT (N2)
  2 #WYY   (N2)
1 REDEFINE #WMMDDYYYY
  2 #WMMDDYYYY-A (A8)
*
1 #FAC-AMT         (N7.2) /* NG6
1 REDEFINE #FAC-AMT
  2 #FAC-AMT-UNITS (N4)   /* NG6
  2 #FAC-AMT-DOLS  (N3)
  2 #FAC-AMT-CNTS  (N2)
*
1 #DIVIDEND        (N5.4)
1 REDEFINE #DIVIDEND
  2 #DIV-5         (N5)
  2 #REM           (N4)
*
1 #ISS-AGE-4         (P4)
1 #ISS-AGE-MM        (N2)
1 #ISS-AGE           (N2)
1 REDEFINE #ISS-AGE
  2 #ISS-AGE-A2      (A2)
*
1 #CONTINUE                  (A1)
1 #MODE                      (A1)
1 #MSG-72                    (A72)
1 #SELECT                    (I4)
1 #CONTACT-SEL               (I4) CONST <5>
1 #RANK-SEL                  (I4) CONST <7>
1 #ADDRESS-SEL               (I4) CONST <2>
1 #ADDRESS-SEL-S             (I4) CONST <3>
1 #PHONE-SEL-H               (I4) CONST <8>
1 #PHONE-SEL-W               (I4) CONST <9>
1 #PHONE-SEL-C               (I4) CONST <10>
1 #prefered-sel              (i4) CONST <11>                   /* vt14
* 1 #intro-sel                 (i4) CONST <12>                             /* vt17  04/20/2016
1 #EMAIL-SEL                 (I4) CONST <4>
1 YES                        (A1) CONST <'Y'>
1 NO                         (A1) CONST <'N'>
1 #CRM-RESULT                (A) DYNAMIC
* #CRM-STATUS-UPDATE         (A2/6) CONST <  'PR','W1', 'W2', 'W3', 'W4', 'WU'
* >
1 #REQ-PEND                  (A19) INIT <'Required if Pending'>
1 #INVALID-STATUS            (A3)  INIT <'XX'>
1 PUERTORICO                 (A2) CONST <'PR'>
1 USA                        (A2) CONST <'US'>
1 CANADA                     (A2) CONST <'CA'>
1 BLANK                      (A1) CONST <' '>
1 #INSURED-OPTIONS           (A1/12) CONST <' ','S','K','G','I','C','B','O','P','Q','F','A'>
*
1 #CN-PARMS
  2 CN                       (N6)
  2 ERR                      (N4)
  2 ERR-DESC                 (A78)
  2 MOD                      (A1)
*
1 #J                         (I4)
1 #STATUS-ISN                (P8)
1 #XML                       (A) DYNAMIC
1 #LINE                      (A) DYNAMIC
1 #RESPONSE-2                (A) DYNAMIC
1 #CRM-REQUEST               (I4)
1 #S-ADDRESS-POOL-ID         (N8)
1 #ADDR-TYPE-CD              (A1)
1 #FACE-AMT-DOLS             (A3)         /* NG1
1 redefine #face-amt-dols                 /* vt19  
  2 #face-amt-dols-n         (n3)         /* vt19  
1 #P-SERVICE-IND             (A1)         /* NG2
1 #SVC-STAT                  (A20)        /* NG2
1 #SVC-M-RATE                (A7)         /* NG2
1 #CRM-SERVICE-ID            (A50)        /* NG2
1 GroupTerm                  (A3) CONST <'GT1'>
*
****** 1 #CV-IN                     (C)                    /* VT1    /* vt19  
1 #NEW-HEIGHT-IN             (N2)                   /* VT1
1 #SAVE-HEIGHT-IN            (N3)                   /* VT1
1 #NEW-HEIGHT-FT             (N2)                   /* VT1
1 #I                         (I2)                   /* VT3
1 #TOT-FACE-AMOUNT           (N7.2)                 /* VT3
1 #EFF-DATE                  (N8)                   /* VT3
1 #PAY-STAT                  (A4)                   /* VT3
*
1 #special-status            (l)                    /* vt8
1 #prefered                  (a1)                   /* vt14
1 #code                      (a1)                   /* vt15  04/20/2016
1 #env                       (A3)                   /* bz-CRM-Proj
END-DEFINE
*
************************************************************************
*
IF #CGA-SCR-SUFFIX = 'MIB'                                            /* bz-MIB
  FETCH RETURN 'MIB' #CGA-ID #CGA-CLERK                              /* bz-MIB
END-IF                                                                /* bz-MIB
IF #CGA-SCR-SUFFIX = 'GIP' FETCH 'C100GIPO' END-IF          /* bz-GPL/GP2
move *datn to #eff-date                            /* vt3
*
DEFINE WINDOW NO-DEPOSIT
  SIZE QUARTER
  BASE BOTTOM RIGHT
  FRAMED ON POSITION SYMBOL AUTO
*
DEFINE WINDOW SERVICE
  SIZE 8 * 43
  BASE 8/20
  FRAMED ON POSITION SYMBOL AUTO
*
INCLUDE GONERCXX
*
SET KEY PF1  NAMED 'Help'
SET KEY PF3  NAMED 'Exit'
SET KEY PF4  NAMED 'Cnts'
*
PERFORM INITIALIZATION
*
PERFORM COLLECT-DATA
*
#POS := POS (#UI.AT-STATUS)
*
REPEAT
  PERFORM UI-MAP
*
  INPUT TEXT #TEXT MARK #POS USING MAP 'C1003MAT'
  PERFORM GET-SELECT
*
  IF #ERRORS      /* PM2
    RESET #TEXT   /* PM2
  END-IF          /* PM2
*
  DECIDE ON FIRST VALUE OF *PF-KEY
    VALUE 'PF3'
      ESCAPE BOTTOM
*
    VALUE 'ENTR'
      IF #CGA-SCR-COMMAND NE '*'
        PERFORM CRM-SYNCH
        FETCH 'G1000PXX'
      END-IF

      IF  ( #UI.AT-STATUS = 'PU')                                    /* bz-MIB  PU users start
          AND (      #CGA-CLERK <> 'CEB'
          AND  #CGA-CLERK <> 'EH'
          AND  #CGA-CLERK <> 'EAC'
          AND  #CGA-CLERK <> 'GME'
          AND  #CGA-CLERK <> 'AJT'
          AND  #CGA-CLERK <> 'AJK'
          AND  #CGA-CLERK <> 'AXS'
          and  #cga-clerk ne 'ALS'                         /* vt18
          AND  #CGA-CLERK <> 'GMS'                         /* yf1
          AND  #CGA-CLERK <> 'NG'
          AND  #CGA-CLERK <> 'BZ'
          and #cga-clerk ne 'VXT' )                        /* vt19  
        REINPUT 'Only designated users can issue status PU and UU)'
      END-IF                                                         /* bz-MIB  PU users end
      IF  ( #UI.AT-STATUS = 'UU')                                    /* bz-MIB  UU users start
          AND (      #CGA-CLERK <> 'CEB'
          AND  #CGA-CLERK <> 'AJK'
          AND  #CGA-CLERK <> 'AXS'
          and  #cga-clerk ne 'ALS'                         /* vt18
          and #cga-clerk ne 'VXT'                          /* vt19  
          AND  #CGA-CLERK <> 'BZ')
        REINPUT 'Only designated users can issue status PU and UU)'
      END-IF                                                          /* bz-MIB  UU users end
      IF  AT-V.AT-STATUS = 'SD'                                       /* bz-MIB  SD rules start
*        AND                                               /* vt19  \/
*        (     #UI.AT-STATUS <> 'S7'
*        AND #UI.AT-STATUS <> ' '
*        AND #UI.AT-STATUS <> MASK ('W'))
*      REINPUT 'SD must follow by S7 or W* only'
*      END-IF                                                          /* bz-MIB  SD rules end
        if  #ui.at-status ne ' ' and #ui.at-status ne 'S7'
          if at-v.plan eq GroupTerm
            reinput 'SD must follow by S7 only'
          else
            if #ui.at-status ne MASK ('W')
              reinput 'SD must follow by S7 or W* only'
            end-if
          end-if
        end-if                                            /* vt19  /\
      END-IF
      IF  AT-V.AT-STATUS = 'S7'                                       /* bz-MIB  S7 rules start
*           AND                                           /* vt19  \/                                                   
*           (#UI.AT-STATUS <> 'PR'
*           AND #UI.AT-STATUS <> 'PU'
*           AND #UI.AT-STATUS <> 'SD'
*           AND #UI.AT-STATUS <> ' '
*           AND #UI.AT-STATUS <> MASK ('W'))
*         REINPUT 'S7 must follow by PU or PR or SD or W* only'
*      END-IF                                                          /* bz-MIB  S7 rules end
        if not( #ui.at-status eq 'PR' or = 'PU' or = 'SD' or = ' ')     
          if at-v.plan eq GroupTerm
            reinput 'S7 must follow by PU or PR or SD only'
          else
            if #ui.at-status ne MASK ('W')
              REINPUT 'S7 must follow by PU or PR or SD or W* only'
            end-if
          end-if
        end-if                                           /* vt19  /\
      END-IF
      IF  AT-V.AT-STATUS = 'PR'                                       /* bz-MIB  PR rules start
*           AND
*           (#UI.AT-STATUS <> 'PU'
*           AND #UI.AT-STATUS <> ' '
*           AND #UI.AT-STATUS <> MASK ('W'))
*         REINPUT 'PR must follow by PU or W* only'
*       END-IF                                                          /* bz-MIB  PR rules end
        if  #ui.at-status ne ' ' and #ui.at-status ne 'PU'        /* vt19  \/
          if at-v.plan eq  GroupTerm
            REINPUT 'PR must follow only by PU'
          else
            if #ui.at-status ne MASK ('W')
              REINPUT 'PR must follow by PU or W* only'
            end-if
          end-if
        end-if                                                   /* vt19  /\
      END-IF
      #EMAIL.EMAIL-ADDRESS := *TRANSLATE(#EMAIL.EMAIL-ADDRESS,LOWER)
      IF #CV-ADDR-S MODIFIED
        RESET #ADDR-REL #ADDR-POOL
        #ADDR-REL.CONTACT-ID := #AT.CONTACT-ID
        #ADDR-REL.ADDR-TYPE-CD := 'S'
        CALLNAT 'GOADN002' #ADDR-POOL #ADDR-REL #CLERK-ID #MSG
          #ADDRESS-UI
        IF #ADDR-REL.ADDR-TYPE-CD NE 'S'
          RESET #ADDR-POOL.ADDRESS-POOL-ID
        END-IF
        CALLNAT 'ADRN0002' #AT.CONTACT-ID #ADDR-POOL.ADDRESS-POOL-ID
        PERFORM COLLECT-DATA
        ESCAPE TOP
      END-IF
*
      IF #SCR-DLT-FLAG = 'D' OR = 'Y'    /* Delete AT - don't do edits
        ESCAPE BOTTOM
      ELSE
        if ( substr(#UI.AT-STATUS,1,1) = 'S' and substr(at-v.at-status,1,1) = 'S') or                /* vt9  \/
            (substr(at-v.AT-STATUS,1,1) = 'S' and substr(#UI.AT-STATUS,1,1) = 'SD' )
          move #ui.AT-status to #at.at-status
          move true to #special-status
        else
          reset #special-status                                                                     /* vt9   /\
          PERFORM APPLICATION-UI
          PERFORM INPUT-VALIDATION
          IF #ERRORS
            ESCAPE TOP
          END-IF
          IF #UI.AT-STATUS = 'W4'                   /* bz-4116
            CALLNAT 'C1W40NAT' #CGA-ISN             /* bz-4116
            CALLNAT 'C1SUSNAT' A-STAT.ID-NUMBER '5' /* bz-4190
          END-IF                                    /* bz-4116
          PERFORM PLAN-EDITS
          IF #ERRORS                           /* vt15 \/
            ESCAPE TOP
          END-IF                               /* vt15 /\
        END-IF
      end-if                                                                                       /* vt9
*
    VALUE 'PF4'
      PERFORM PF4-DETAILS
      ESCAPE TOP
*
    NONE VALUE IGNORE
  END-DECIDE
*
  IF NOT #ERRORS
    ESCAPE BOTTOM
  END-IF
END-REPEAT
*
IF *PF-KEY = 'PF3'
  BACKOUT TRANSACTION
  #TEXT := 'No updates are applied'
ELSE
  PERFORM DB-UPDATE
  END TRANSACTION
*
  IF #CGA-SCR-SUFFIX NE 'FBR'                            /* vt4
*     ASSIGN #CRM-REQUEST = 2   /* CRM SYNC PROCESS  Start
*     CALLNAT 'MBRDATA'
*       #STATUS-ISN
*       #XML
*       #LINE
*       #RESPONSE-2
*       #CRM-REQUEST
*       #CONTACT.CONTACT-ID
    #CRM-REQUEST := 1
    CALLNAT 'C1011NAT'    /* NG2
      AT-V.ID-NUMBER
      #P-SERVICE-IND
      #CRM-REQUEST        /* 1 GET, 2 UPDATE
      #MSG
      #ERRORS
      #SVC-M-RATE
      #CRM-SERVICE-ID
    PERFORM CRM-SYNCH
  END-IF                                                /* vt4
END-IF
*
PERFORM SYNCH-STATUS-FILE
*
MOVE (AD=P) TO #CONTROL-VARS (*)
#CGA-SCR-COMMAND := 'AT'
RESET #CGA-SCR-SUFFIX
*
INPUT WITH TEXT #TEXT USING MAP 'C1003MAT'
*
FETCH 'G1000PXX'
*                         *** PROGRAM END ***
************************************************************************
DEFINE UI-MAP
************************************************************************
*
IF   (NOT #CGA-CLERK = 'DRW' OR = 'LGM' OR = 'TJH' OR = 'ALB' OR = 'PNP' or = 'VXT')
*    AND (AT-V.USER-SOURCE NE 'WEB')
  MOVE (AD=P) TO #USER-CV
END-IF
*
if #at.plan eq GroupTerm             /* vt19  \/
  move (AD=P) to #CONTROL-VARS(*)
  move (ad=u) to #units-cv
    #dols-cv
    #status-cv
    #sec-cv
    #mil-cv
    #cv-addr
    #eml-cv
    #pref-cv
    #hph-cv
    #wph-cv
    #cph-cv
*    #rid-cv2   plan code
    #sdf-cv
ELSE
  move (AD=P) to #dols-cv
end-if                              /* vt19  /\
*
IF #AT.CAP-IND = ' '
  MOVE 'N' TO #AT.CAP-IND
END-IF
*
if #at.special-hand = ' '        /* vt16 \/
  #at.special-hand := 'N'
end-if                           /* vt16 /\
*
if (not #cga-clerk = 'CEB' or = 'VXT')  or  (#at.at-status eq 'A')    /* vt17 \/
  move (AD=P) to #intro-cv
end-if                                                                /* vt17 /\
*
IF #AT.CAP-TERM = 0
  MOVE 48 TO #AT.CAP-TERM
END-IF
*
IF #AT.CAP-LOAN-AMT = 0
  MOVE 4000 TO #AT.CAP-LOAN-AMT
END-IF
*
DECIDE FOR EVERY CONDITION            /* PM3
  WHEN #UI.#REFUND-TO-CAP = BLANK     /* PM3
    IF #AT.CAP-IND = 'N'              /* PM3
      #UI.#REFUND-TO-CAP  := 'N'      /* PM3
    ELSE                              /* PM3
      #UI.#REFUND-TO-CAP  := 'Y'      /* PM3
    END-IF                            /* PM3
  WHEN #AT.CONTACT-CODE = BLANK       /* PM3
    IF #AT.CAP-IND = 'N'              /* PM3
      RESET #AT.CONTACT-CODE          /* PM3
    ELSE                              /* PM3
      #AT.CONTACT-CODE    := 'Y'      /* PM3
    END-IF                            /* PM3
  WHEN #AT.ALOT-CHG-AUTH = BLANK      /* PM3
      AND #AT.CAP-IND = 'Y'              /* PM3
    IF #AT.CAP-TYPE = 'G'             /* PM3
      #AT.ALOT-CHG-AUTH   := 'D'      /* PM3
    ELSE                              /* PM3
      IF #AT.CAP-TYPE NE ' '          /* PM3
        #AT.ALOT-CHG-AUTH := 'N'      /* PM3
      END-IF                          /* PM3
    END-IF                            /* PM3
  WHEN NONE IGNORE                    /* PM3
END-DECIDE                            /* PM3
*
IF #AT.CAP-IND NE 'Y'
  RESET #AT.ALLOT-STRT-AMT #AT.CAP-LOAN-AMT #AT.CAP-TERM
END-IF
*
IF #AT.PLAN = 'GPL' OR = 'GP2'     /*TT1             /* vt8 \/ keep it
  MOVE 'N' TO #AT.SMOKER-FLAG
END-IF                                               /* vt8 /\
*
IF #UI.#SCN-RIDER = BLANK
  #UI.#SCN-RIDER := 'N'
END-IF
#HOLD-RIDER := #UI.#SCN-RIDER
*
#RETURN-FLAG := TRUE       /* UNUSUAL HELP ROUTINE
*
MOVE EDITED #AT.FACE-AMT-DOLS (EM=999) TO #FACE-AMT-DOLS    /* NG1
IF #CRM-SERVICE-ID = BLANK
  MOVE (AD=P) TO #SERVICE-CV
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE APPLICATION-UI
************************************************************************
*
IF #UI.AT-STATUS NE BLANK
  RESET #TEXT
  CALLNAT 'GATSTSXX'   /* AT Status (old Action Flag) Edit
    #UI.AT-STATUS
    #ST-DESC
    #INVALID
    #ERR-MSG
*
  IF #INVALID
    REINPUT USING HELP
      MARK *#UI.AT-STATUS
  END-IF
*
  MOVE #UI.AT-STATUS TO #AT.ACTION-FLAG    /* 1st char
  MOVE #UI.AT-STATUS TO #AT.AT-STATUS
  MOVE #ST-DESC TO #TEXT-LST-35
END-IF
*
IF NOT #UI.#SCN-RIDER = 'Y' OR = 'N'
  REINPUT 'Please select "Y" or "N" to indicate if a RIDER exists for this application'
    MARK *#UI.#SCN-RIDER
END-IF
*
IF NOT #P-SERVICE-IND = 'Y' OR = 'N'      /* NG2
  REINPUT 'Please select "Y" or "N" to indicate Premier Services'
    MARK *#P-SERVICE-IND
END-IF
*
IF #UI.#SCN-RIDER NE #HOLD-RIDER
  PERFORM RIDER-PROCESS
END-IF
*
IF #ONLY-RIDER
  ESCAPE ROUTINE
END-IF
*
IF NOT #AT.CONTACT-CODE = BLANK OR = 'Y' OR = 'N'
  REINPUT USING HELP
    MARK *#AT.CONTACT-CODE
END-IF
*
IF #DISCLOSURE  AND #AT.DISCLOSURE-IND = BLANK
  REINPUT USING HELP
    MARK *#AT.DISCLOSURE-IND
END-IF
*
if #cv-sh modified and not (#cga-clerk = 'CEB' or = 'AJK' OR = 'AJT' OR = 'EAC' OR = 'EH' OR = 'GME' OR = 'VXT' or = 'ALS' OR = 'GMS')     /* vt16 \/ /* vt18 \/ /* yf1
  reinput ' You are not authorized to modify the special handling flag'
    mark*#AT.special-hand
end-if                                                                                                                          /* vt16 /\
*
* * IF NOT #AT.POLICY-TYPE = BLANK OR = 'T' OR = 'I' OR = 'S' OR = 'N' OR = 'M'               /* vt11 \/
*   if not #at.policy-type = 'T' or ='I' or = 'S' or = 'N' or = 'M'                             /* vt11
*     REINPUT USING HELP
*      MARK *#AT.POLICY-TYPE
*   END-IF                                                                                      /* vt11 /\
*
IF NOT #AT.CAP-IND = 'Y' OR = 'N'
  REINPUT USING HELP
    MARK *#AT.CAP-IND
END-IF
*
IF #AT.INTRO-FLAG = 'M' RESET #AT.INTRO-FLAG END-IF
if #intro-cv modified                                                                  /* vt17 \/
  reset #invalid
end-if
if #at.intro-flag ne 'U'  and #at.intro-flag ne 'u'
  CALLNAT 'GIFLGSXX' #AT.INTRO-FLAG #INVALID #ERR-MSG /* INSURED-FLAG
end-if                                                                                 /* vt17 /\
IF #INVALID
  REINPUT USING HELP
    MARK *#AT.INTRO-FLAG
END-IF
*
IF #AT.CAP-IND = 'Y'
  IF #AT.CAP-TERM = 0
    MOVE 48 TO #AT.CAP-TERM
  END-IF
*
  IF #AT.CAP-LOAN-AMT = 0
    MOVE 4000 TO #AT.CAP-LOAN-AMT
  END-IF
*
  IF #AT.ALOT-CHG-AUTH = ' '         /* PM99
    IF #AT.CAP-TYPE = 'G'            /* PM99
      #AT.ALOT-CHG-AUTH := 'D'       /* PM99
    ELSE                             /* PM99
      #AT.ALOT-CHG-AUTH := 'N'       /* PM99
    END-IF                           /* PM99
  END-IF                             /* PM99
*
  IF NOT #AT.CAP-TERM = 36 OR = 48
    REINPUT USING HELP
      MARK *#AT.CAP-TERM
  END-IF
ELSE
  RESET #AT.ALLOT-STRT-AMT #AT.CAP-LOAN-AMT #AT.CAP-TERM #AT.CAP-TYPE
END-IF
*
IF NOT #AT.MODE = 'G' OR = 'A' OR = 'S' OR = 'Q' OR = 'E' OR = BLANK
    OR = 'M' OR = '0' OR = '1' OR = '2' OR = '4'
    or = 'B'                                                                   /* vt19 
  REINPUT USING HELP
    MARK *#AT.MODE
END-IF
*
IF  #AUTO-ISSUE-KEY-FOUND-1100
    AND NOT #AT.YES-ON-MED = 'Y' OR = 'N' OR = 'y' OR = 'n'
  REINPUT USING HELP
    MARK *#AT.YES-ON-MED
END-IF
*
IF NOT #UI.#REFUND-TO-CAP = 'Y' OR = 'N'
  REINPUT USING HELP
    MARK *#UI.#REFUND-TO-CAP
END-IF
*
IF NOT #AT.PAYER = 'M' OR = 'I' OR = 'O' OR = BLANK
  REINPUT USING HELP
    MARK *#AT.PAYER
END-IF
*
IF NOT #AT.RATING-CODE = #CLASS-1 OR = #CLASS-2
    OR = #CLASS-3 OR = BLANK
  REINPUT USING HELP
    MARK *#AT.RATING-CODE
END-IF
*
IF NOT #AT.ALOT-CHG-AUTH = 'Y' OR = 'N' OR = 'D'
    AND NOT #AT.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
  REINPUT USING HELP
    MARK *#AT.ALOT-CHG-AUTH
END-IF
*
IF #CONTACT.SSN = 0
  REINPUT 'Please enter an SSN'
    MARK *#CONTACT.SSN
END-IF
*
if #ui.#mil-service = ' '                                 /* vt13 \/
  reinput 'Please enter a Branch'
    mark *#ui.#mil-service
end-if
*
if #ui.#rank-abbr = ' '
  reinput 'Please enter a Rank'
    mark *#ui.#rank-abbr
end-if
*
if #ui.#mil-status = ' '
  reinput 'Please enter a Status'
    mark  *#ui.#mil-status
end-if                                                     /* vt13 /\
*
if #ph.#h_ph1 = 0 and  #ph.#w_ph1 = 0 and #ph.#C_ph1 = 0
  ignore
else
  if #prefered eq ' '                                     /* vt14 \/
    reinput 'Please select preferred phone'
      mark  *#prefered
  end-if
  move #prefered to #PH.#preff
  if not(#prefered eq  'W' or eq 'C' or  eq  'H')
    reinput 'Invalid value. Valid values are W , H or C'
      mark *#prefered
  end-if
  if #ph.#h_ph1 = 0
      and #prefered = 'H'
    reinput 'Incorrect choice. There is no Home phone number specified'
      mark *#prefered
  end-if
*
  if #ph.#w_ph1 = 0
      and #prefered = 'W'
    reinput 'Incorrect choice. There is no Work phone number specified'
      mark *#prefered
  end-if
*
  if #ph.#C_ph1 = 0
      and #prefered = 'C'
    reinput 'Incorrect choice. There is no Cell phone number specified'
      mark  *#prefered
  end-if
end-if
*                                                         /* vt14 /\
IF #CONTACT.PREFIX-TITLE NE BLANK
  #PREFIX-TITLE-DESC := FUNCTION-PREFIX-DESC (< #CONTACT.PREFIX-TITLE >)
*
  IF #PREFIX-TITLE-DESC = BLANK
    REINPUT FULL USING HELP
      MARK *#CONTACT.PREFIX-TITLE
  END-IF
END-IF
*
RESET #ERR-MSG                                  /* PM2
IF #AT.PLAN NE GroupTerm
  IF NOT #AT.INTRO-FLAG = 'S' OR = 'K' OR = 'G'   /* PM2
    CALLNAT 'GCKSTSXX'                            /* PM2
      #ADDR-POOL.STATE-CODE                       /* PM2
      #UI.#MIL-STATUS                             /* PM2
      #UI.#MIL-SERVICE                            /* PM2
      #INVALID                                    /* PM2
      #ERR-MSG                                    /* PM2
*                                               /* PM2
    IF #ERR-MSG NE ' '                            /* PM2
      #TEXT := #ERR-MSG                           /* PM2
    END-IF                                        /* PM2
  END-IF
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE DB-UPDATE
************************************************************************
#CONTROL-VARS (*) := #CV-SAVE (*)
*
IF #SCR-DLT-FLAG = 'D' OR = 'Y'  /* Delete AT
  CALLNAT 'C1010NAT' #CGA-ISN
    #TEXT
    #UPDATED
ELSE                             /* Update/Add AT

  IF #ONLY-RIDER AND #AT.ID-NUMBER = 0
    CALLNAT 'C1014SAT'        /* Rider only - reserve and store application
      #AT.ID-NUMBER
*
    #AT.DATE-RECEIVED := *DATN
    #AT.AT-STATUS     := #UI.AT-STATUS
    #AT.ACTION-FLAG   := #UI.AT-STATUS
    #AT.USER-SOURCE   := #CGA-CLERK
    MOVE BY NAME #AT TO AT-V
*
    if #special-status                        /* vt8 \/
      move #ui.at-status to at-v.at-status
    end-if                                    /* vt8 /\
*
    move #at.intro-flag to at-v.intro-flag                  /* vt17
*
    CALLNAT 'GADDNSXX'                         /* add a status note
      #CGA-CLERK
      #UI.AT-STATUS
      AT-V.ST-NOTE-DATE   (1:50)
      AT-V.ST-NOTE-USER   (1:50)
      AT-V.ST-NOTE-STATUS (1:50)
      AT-V.ACTION-DATE
*
    STORE AT-V
    move *isn(0913) to #cga-isn                 /* vt6
  ELSE
    MOVE #UI.#SCN-DOB TO #WMMDDYYYY-A
    PERFORM FLIP-DATE-TO-YYYYMMDD
    MOVE #WYYYYMMDD-N TO #CONTACT.DATE-OF-BIRTH
*
    #MIL.RANK-ABBR       := #UI.#RANK-ABBR
    #MIL.MILITARY-ID     := #UI.#MIL-SERVICE
    #MIL.MILITARY-STATUS := #UI.#MIL-STATUS
    #MIL.RANK-ID         := #CONTACT.RANK-ID
*
    CALLNAT 'C1020NAT'             /* Update Contact related data
      #ADDR-POOL
      #ADDR-REL
      #CLERK-ID
      #MSG
      #EMAIL
      #CONTACT
      #MIL
      #PH
      #CONTROL-VARS (*)
      #UPDATED
*
    #AT.CONTACT-ID := #CONTACT.CONTACT-ID
    CALLNAT 'C1007NAT'
      #AT
      #UI
      #CGA-ISN
      #PROSP
      #STAT-FOUND
      #WILL-BE-PENDING
      #UI.AT-STATUS
      #DEP-RCVD
      #CGA-CLERK
      #TEXT
    IF #TEXT = 'Med Exem order completed' ESCAPE ROUTINE END-IF  /* bz OI-3876
    CALLNAT 'C1005SAT' USING      /* Test name
      #CGA-SCR-COMMAND
      #CGA-SCR-ID
      #CGA-SCR-SUFFIX
      #CONTACT.LAST-NAME
      #CONTACT.FIRST-NAME
      #CONTACT.DATE-OF-BIRTH
      #ADDR-POOL.ZIP-CODE
      #AT.MEMBER-CN
*
    IF #CONTACT.SSN NE #HOLD-SSN
      CALLNAT 'C1008SAT'          /* Test SSN
        #CGA-SCR-COMMAND
        #CGA-SCR-ID
        #CGA-SCR-SUFFIX
        #CGA-ORIG-COMMAND
        #AT.CONTACT-ID
    END-IF
  END-IF
  CALLNAT 'C1097NAT' #CGA-ISN     /* Synch on-fly Status record
END-IF
*
#CRM-REQUEST := 3  /* CHANGE STATUS  NG2
CALLNAT 'C1011NAT'
  AT-V.ID-NUMBER
  #P-SERVICE-IND
  #CRM-REQUEST
  #MSG
  #ERRORS
*
PERFORM RECOMMEND-MSG
*
IF #SCR-DLT-FLAG = 'D' OR = 'Y'
  MOVE 'AT record DELETED' TO #TEXT
ELSE
  IF #TEXT-1ST-42 = ' '                                     /* NG1
    #TEXT-1ST-42 := 'Transaction Complete'                  /* NG1
  ELSE                                                      /* NG1
    COMPRESS #TEXT-1ST-42 'Transaction Complete' INTO #TEXT WITH DELIMITER '-' /* NG1
  END-IF
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE INPUT-VALIDATION
************************************************************************
RESET #MSG #ERRORS
#CONTROL-VARS (*) := #CV-SAVE (*)
*
IF #CV-ADDR MODIFIED
  IF #ADDR-POOL.COUNTRY-CODE = BLANK
    #ADDR-POOL.COUNTRY-CODE := 'US'
  END-IF
  #ADDR-REL.ADDRESS-SOURCE := 'A'
  #ADDR-REL.ADDR-TYPE-CD   := 'P'
  CALLNAT 'GOADN003' #ADDR-POOL #ADDR-REL #CLERK-ID #MSG
    #ADDRESS-UI
END-IF
*
if #cv-in modified                            /* vt1 \/
  compute #save-height-in = #at.height-ft * 12 + #at.height-in
  divide 12 into #save-height-in giving #new-Height-ft remainder #new-height-in
  move #new-height-in to #at.height-in
  move #new-height-ft to #at.height-ft
end-if                                        /* vt1 /\
*
if #cv-sh modified                                                                 /* vt16 \/
    and not(#cga-clerk  eq 'VXT' or = 'AJK' or = 'AJT' or = 'CEB' or = 'EAC' or = 'EH' or = 'GME' or = 'ALS' or = 'GMS')    /* vt18 \/ /* yf1
  #text :=  'You are not authorized to modify the special handling flag'
end-if                                                                             /* vt16 /\
*
if #intro-cv modified and
    ( #at.intro-flag = 'U' or #at.intro-flag = 'u')
    and (#cga-clerk = 'CEB' or = 'VXT') and at-v.at-status ne 'A'                      /* vt17 \/
  callnat 'C1013NAT' #code
  #at.intro-flag := #code
end-if                                                                                 /* vt17 /\
*
IF NOT #ERRORS
  CALLNAT 'C1006NAT'      /* All edits
    #AT
    #UI
    #CONTACT
    #MIL
    #SWITCHES
    #POS
    #TEXT
*    #cga-clerk                       /* vt7  /* vt10
  #ERRORS := #ERROR
ELSE
  #TEXT := #MSG
END-IF
*
IF NOT #ERRORS
  PERFORM POP-UP-SERVICE    /* NG3
  IF #SERVICE-CV MODIFIED   /* NG2
    #CRM-REQUEST := 2
    CALLNAT 'C1011NAT'
      AT-V.ID-NUMBER
      #P-SERVICE-IND
      #CRM-REQUEST       /* 1 GET, 2 UPDATE
      #MSG
      #ERRORS
    #TEXT := #MSG
  END-IF
END-IF
*
END-SUBROUTINE
*
*****************************    NG3   *********************************
DEFINE POP-UP-SERVICE
************************************************************************
*
IF #P-SERVICE-IND EQ YES
  IF F-SERV-EXIST (< AT-V.ID-NUMBER >) = 'D'
    SET WINDOW 'SERVICE'
    RESET #TEXT
    MOVE 'N' TO #P-SERVICE-IND
    INPUT TEXT #TEXT MARK *#CONTINUE USING MAP 'C1014MAT'
    IF NOT #P-SERVICE-IND EQ YES OR = NO
      MOVE 'Please enter "Y" or "N" to continue' TO #TEXT
      REINPUT #TEXT MARK *#P-SERVICE-IND
    END-IF
    #CRM-REQUEST := 4
    CALLNAT 'C1011NAT'
      AT-V.ID-NUMBER
      #P-SERVICE-IND
      #CRM-REQUEST       /* 4 CHANGE DRAFT SERVICE
      #MSG
      #ERRORS
    #TEXT := #MSG
    SET WINDOW OFF
  END-IF
END-IF
END-SUBROUTINE
*
************************************************************************
DEFINE POP-UP-DEPOSIT
************************************************************************
*
IF #DEP-RCVD = 0
    AND #AT.CAP-IND NE 'Y'
    AND AT-V.DEP-REC-AMOUNT (1) = 0
  SET WINDOW 'NO-DEPOSIT'
  RESET #TEXT
  MOVE 'Y' TO #CONTINUE
  INPUT TEXT #TEXT MARK *#CONTINUE USING MAP 'C1013MAT'
*
  IF NOT #CONTINUE = 'Y' OR = 'N'
    MOVE 'Please enter "Y" or "N" to continue' TO #TEXT
    REINPUT #TEXT MARK *#AT.AT-STATUS
  END-IF
  SET WINDOW OFF
*
  RESET #TEXT
  IF #CONTINUE = 'N'
    MOVE 'CR' TO #CGA-SCR-COMMAND
    FETCH 'G1000PXX'
  END-IF
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CHECK-FOR-DUPS
************************************************************************
*
IF #APPL-FOUND
*
  #CONTACT.SSN := #CGA-SCR-ID
*
  CALLNAT 'C1007SAT'
    #CGA-SCR-COMMAND
    #CGA-SCR-ID
    #CGA-SCR-SUFFIX
    #CGA-ORIG-COMMAND
    #CGA-ISN
    #CONTACT.SSN
    #AT.MEMBER-CN-N
    #APPL-FOUND
    #NEW-AT
*
  IF #NEW-AT
    RESET AT-V
    IF #STAT-FOUND
      PERFORM MOVE-ST-TO-AT
    END-IF
  ELSE
    IF #AT.ID-NUMBER NE 0
      MOVE #AT.ID-NUMBER TO #CGA-SCR-ID #CGA-ID
    END-IF
  END-IF
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE MOVE-ST-TO-AT
************************************************************************
*
IF A-STAT.PROCESS-IND = 'C'         /* APPLICANT
    AND A-STAT.INTRO-FLAG = 'A'
    AND NOT #CGA-ORIG-SUFFIX = 'SPS' OR = 'GEN'
  MOVE EDITED A-STAT.ID-NUMBER(EM=999999) TO #AT.MEMBER-CN
  ESCAPE ROUTINE
END-IF
*
IF A-STAT.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
  MOVE A-STAT.LINKED-CN (1)  TO #AT.REFERING-ID-NUMBER (1)
END-IF
*
*    Old data location: STATUS file
*
IF #AT.INTRO-FLAG = BLANK
  MOVE A-STAT.INTRO-FLAG       TO #AT.INTRO-FLAG
END-IF
*
MOVE EDITED A-STAT.ID-NUMBER(EM=999999) TO #AT.MEMBER-CN
IF A-STAT.MEMBER-CONTACT-ID > 0
  #AT.CONTACT-ID := A-STAT.MEMBER-CONTACT-ID
END-IF
*
FOR #I 1 C*ACTIVE-SEGMENTS                                                   /* VT3  \/
  RESET #PAY-STAT
  IF A-STAT.STATUS(#I) = 'D'
    IF   ((A-STAT.PLAN (#I) = 'LT')
        AND (#CONTACT.DATE-OF-BIRTH LE (#EFF-DATE - 400000))) /* 40 YEARS    /* YK3
        OR  ((A-STAT.PLAN (#I) = 'RT')
        AND (A-STAT.ISSUE-AGE (#I) GT '65'))
        OR  ((A-STAT.PLAN (#I) = 'EZ')
        AND (A-STAT.PAID-UP-DATE(#I) LE #EFF-DATE))
        OR  (F-LT2-TRUE(<A-STAT.PLAN(#I)>)
        AND ((A-STAT.ISSUE-DATE(#I) + 40000) LE #EFF-DATE)) /* 4 YEARS
*     OR (A-STAT.PLAN (#I) = 'AL')     /* DW3
        OR IS-ANNUITY-LIFE (< A-STAT.PLAN (#I) >)  /* NG8
      CALLNAT 'GDROPSTM'
        A-STAT.PLAN          (#I)
        A-STAT.SMOKER-FLAG   (#I)
        #CONTACT.DATE-OF-BIRTH                                    /* YK3
        A-STAT.ISSUE-DATE    (#I)
        A-STAT.PAID-UP-DATE  (#I)
        #EFF-DATE
        A-STAT.ISSUE-AGE     (#I)
        #PAY-STAT
        A-STAT.FACE-AMOUNT   (#I)
        A-STAT.DEATH-BENEFIT (#I)
        A-STAT.CASH-VALUE    (#I)
        A-STAT.BEG-CASH-VALUE(#I)
    END-IF
    ADD A-STAT.FACE-AMOUNT (#I) TO #TOT-FACE-AMOUNT
  END-IF
END-FOR                                                                    /* VT3  /\
*
END-SUBROUTINE
*
************************************************************************
DEFINE COLLECT-DATA
************************************************************************
*
RESET #CV-SAVE (*)
#CONTACT.CONTACT-ID  := #AT.CONTACT-ID
*
CALLNAT 'C1019NAT'             /* Collect Contact related data
  #ADDR-POOL
  #ADDR-REL
  #CLERK-ID
  #MSG
  #EMAIL
  #CONTACT
  #MIL
  #PH
  #AT.CONTACT-ID
  #S-ADDR-IND
  #CGA-ISN
*
move #preff to #prefered                              /* vt14
MOVE #CONTACT.DATE-OF-BIRTH TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYYYY-A TO #UI.#SCN-DOB
*
IF #CONTACT.DATE-OF-BIRTH GE *DATN - 800000
  PERFORM CALC-ISS-AGE
END-IF
*
#UI.#RANK-ABBR   := #MIL.RANK-ABBR
#UI.#MIL-SERVICE := #MIL.MILITARY-ID
#UI.#MIL-STATUS  := #MIL.MILITARY-STATUS
#CONTACT.RANK-ID := #MIL.RANK-ID
*
IF #AT.E-DEPOSIT-IND = BLANK      /* YK3
  #AT.E-DEPOSIT-IND := 'N'        /* YK3
END-IF                            /* YK3
*
* if #AT.special-hand = BLANK       /* vt12 \/
*   #at.special-hand := 'N'
* end-if                            /* vt12 /\
*
MOVE #AT.DATE-RECEIVED TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYYYY-A TO #SCN-RECEIVED
*
MOVE ACTION-DATE TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYYYY-A TO #SCN-ACTION-DATE
*
IF #AT.RATE-DATE > 0  /* NG9
  MOVE #AT.RATE-DATE TO #WYYYYMMDD-N
  PERFORM FLIP-DATE
  MOVE #WMMDDYYYY-A TO #UI.#SCN-RATE-DATE
END-IF
*
DECIDE ON FIRST VALUE #AT.POLICY-TYPE
  VALUE 'S'
    MOVE '#MBR SPS Owner' TO #TEXT
  VALUE 'I'
    MOVE '#Ins Owner' TO #TEXT
  VALUE 'N'
    MOVE '#Non Member Owner' TO #TEXT
  NONE VALUE IGNORE
END-DECIDE
*
RESET #FLEX-POLICY
COMPUTE #FAC-AMT = (#AT.FACE-AMT-UNITS * 1000) + #AT.FACE-AMT-DOLS
COMPUTE #DIVIDEND = #FAC-AMT / 5000
*
IF (#AT.EXCH-1035 NE 0) OR (#AT.LUMP-SUM NE 0)
    OR (NOT #AT.PLAN = BLANK OR = '7P' OR = '20' OR = '30' OR = 'OL' OR = 'SP'
    OR = 'GPL' OR = 'GP2')                               /* TT1
*   OR = 'RT' OR = 'LT')                                 /* YK1
    OR (#REM NE 0)
* IF ( #AT.PLAN-A1 LT 'U') OR ( #AT.PLAN-A1 GT 'Z')      /* YK1
* Not Level term II                                      /* YK1
  IF (NOT FUNCTION-TERM-POLICY(<#AT.PLAN>))              /* YK1
    MOVE TRUE TO #FLEX-POLICY
    COMPRESS #TEXT '*FLEX*' INTO #TEXT
    MOVE '1035Amt' TO #1035-LBL
    MOVE 'LumpSum' TO #LUMP-LBL
  END-IF
END-IF
*
IF ((#CGA-ORIG-SUFFIX = 'FLX') OR #FLEX-POLICY)
    AND NOT #CGA-SCR-SUFFIX = 'BYP'
  PERFORM CALC-FLEX-PREM
END-IF
*
PERFORM DEP-LABEL
*
IF #AT.INTRO-FLAG = BLANK
  MOVE 'M' TO #AT.INTRO-FLAG
END-IF
*                              Calculate premium
IF  (#AT.PLAN NE BLANK) AND (#AT.FACE-AMT-UNITS NE 0)
    AND (NOT #AT.ACTION-FLAG = 'W' OR = 'D')
*    AND (#CONTACT.DATE-OF-BIRTH GE *DATN - 800000)
    AND (#CONTACT.DATE-OF-BIRTH GE *DATN - 810000)
  PERFORM CALC-PREMIUM
END-IF
*                              Flex premium
if #at.plan ne GroupTerm                                         /* vt19  
  PERFORM UNDERWRITING-AND-AUTO-ISSUE-TEST
*
  IF #AUTO-ISSUE-KEY-FOUND-1100
    DECIDE FOR FIRST CONDITION
      WHEN #AUTO-ISSUE = 'N'
        COMPRESS #TEXT-1ST-42 '** Auto Issue not Available' INTO #TEXT-1ST-42
      WHEN #REMAINING-AUTO-ISSUE = 0
        COMPRESS #TEXT-1ST-42 '** No Auto Issue Available'  INTO #TEXT-1ST-42
      WHEN #REMAINING-AUTO-ISSUE GT 0
        MOVE EDITED #REMAINING-AUTO-ISSUE (EM=ZZZ,ZZZ,ZZ9)  TO #DISPLAY-AUTO-ISSUE-AMT
        MOVE LEFT #DISPLAY-AUTO-ISSUE-AMT TO #DISPLAY-AUTO-ISSUE-AMT
        COMPRESS '$' #DISPLAY-AUTO-ISSUE-AMT INTO #DISPLAY-AUTO-ISSUE-AMT LEAVING NO
        COMPRESS #TEXT-1ST-42 '**' #DISPLAY-AUTO-ISSUE-AMT 'Auto Issue Available'
          INTO #TEXT-1ST-42
      WHEN NONE
        IGNORE
    END-DECIDE
  END-IF
end-if                                                             /* vt19  
*
* CALLNAT 'GKATRSXX'                                                                  /* vt12 \/
*   #ADDR-POOL.ZIP-CODE
*  #KATRINA-ZIP
*
* IF #KATRINA-ZIP
*   COMPRESS '*Resides in Katrina disaster area*' #TEXT INTO #TEXT
* END-IF                                                                            /* vt12 /\
*
IF #AT.DISCLOSURE-IND EQ BLANK AND #ADDR-POOL.STATE-CODE = 'CA'
  #TEXT := 'WARNING!!!CALIFORNIA APPLICATION. Use AT to enter disclosure doc Y/N '
  MOVE TRUE TO #DISCLOSURE
  MOVE #AT.DISCLOSURE-IND TO #DISCLOSURE-IND
END-IF
*
IF #AT.DISCLOSURE-IND EQ 'N' AND #ADDR-POOL.STATE-CODE = 'CA'
  #TEXT := 'WARNING!!!CALIFORNIA APPLICATION.Cannot issue; Notify sales rep for Disclosure'
  MOVE TRUE TO #DISCLOSURE
  MOVE #AT.DISCLOSURE-IND TO #DISCLOSURE-IND
END-IF
*
if #at.special-hand = 'Y'                                                                 /* vt16 \/
  #TEXT := 'WARNING!!!Special Handling. Cannot issue policy. Check the notes for special handling.'
  move #AT.special-hand  to #special-hand
end-if                                                                                     /* vt16 /\
*
PERFORM RECOMMEND-MSG
*
#CRM-REQUEST := 1
CALLNAT 'C1011NAT'    /* NG2
  AT-V.ID-NUMBER
  #P-SERVICE-IND
  #CRM-REQUEST       /* 1 GET, 2 UPDATE
  #MSG
  #ERRORS
  #SVC-M-RATE
  #CRM-SERVICE-ID
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE SHOW-SCREEN
************************************************************************
*
MOVE 'Y' TO #PROTECTED
MOVE (AD=P) TO #GEN-CV #CHG-CV #SDF-CV #STATUS-CV #SEC-CV
  #USER-CV #ONLY-EDS-CV #ONLY-EDS-CV-P #RID-CV2
  #AUTO-ISSUE-CV #ALOT-AUTH-CV
  #CV-ADDR
SET KEY PF2 = OFF
*
MOVE 'AT' TO #CGA-SCR-COMMAND
*
IF  (AT-V.PLAN NE BLANK) AND (#SCR-FACE-UNITS NE 0)
    AND (NOT AT-V.ACTION-FLAG = 'W' OR = 'D')
  PERFORM CALC-ISS-AGE
  PERFORM CALC-PREMIUM
END-IF
*
INPUT TEXT #TEXT MARK *#CGA-SCR-ID USING MAP 'C1003MAT'
*
FETCH 'G1000PXX'
*
END-SUBROUTINE
*
************************************************************************
DEFINE INITIALIZATION
************************************************************************
*
IF F-IS-DEV(<>)                                    /* bz-CRM-Proj
  #env := GET_DBN(<>)                             /* bz-CRM-Proj
END-IF                                             /* bz-CRM-Proj
MOVE 'APPLICATION UPDATE' TO #UI.#SCN-TITLE
#WILL-BE-PENDING := TRUE
*
RESET #CONTACT #UI #AT #PH
  #SWITCHES
MOVE (AD=U) TO #CONTROL-VARS (*)
*
IF #CGA-SCR-SUFFIX = 'AN*'
  MOVE TRUE TO #FROM-AN
END-IF
*
IF #CGA-CLERK = 'DRW' OR = 'VXT' OR = 'CEB'
  IGNORE
ELSE
  MOVE (AD=NP) TO #ONLY-EDS-CV
  MOVE (AD=P)  TO #ONLY-EDS-CV-P
END-IF
*
IF NOT #CGA-SECURITY-CODE = 6 OR = 8 OR = 12 OR = 97 OR = 98
  MOVE 'User not allowed to Update' TO #TEXT
  PERFORM SHOW-SCREEN                        /* -------------->>>  Exit
END-IF
*
MOVE *DATN TO #HOLD-TODAY-DATE
COMPRESS #HTD-MM #HTD-DD #HTD-YYYY INTO #HOLD-TODAY-MMDDYYYY
  LEAVING NO SPACE
MOVE '*' TO #CGA-SCR-COMMAND
IF NOT #CGA-SCR-SUFFIX = 'BYP' OR = 'FBR'
  RESET #CGA-SCR-SUFFIX
END-IF
*               *** CURRENT MBR ***
IF #CGA-SCR-ID LT 500000
  MOVE #CGA-SCR-ID TO #CGA-ID
  FIND (1) A-STAT WITH A-STAT.ID-NUMBER = #CGA-ID
    IF NO RECORDS FOUND
      RESET #CGA-SCR-ID
      ESCAPE BOTTOM
    END-NOREC
*
    MOVE TRUE TO #STAT-FOUND
    FIND (1) CT-V WITH CT-V.CONTACT-ID = A-STAT.MEMBER-CONTACT-ID
      #CGA-SCR-ID    := CT-V.SSN
      #AT.CONTACT-ID := CT-V.CONTACT-ID
    END-FIND
  END-FIND
*
  IF #STAT-FOUND
    PERFORM FIND-APPL
  ELSE
    IF NOT #CGA-SCR-SUFFIX = 'FBR'
      MOVE 'CN Member not found' TO #TEXT
      PERFORM SHOW-SCREEN                      /* -------------->>>  Exit
    END-IF
  END-IF
  MOVE CT-V.SSN TO #HOLD-SSN
ELSE
*              *** 5XXXXX AT NUMBER ***
  IF #CGA-SCR-ID LT 600000
    MOVE TRUE TO #AT-#-ENT
*
    FIND (1) AT-V WITH ID-NUMBER = #CGA-SCR-ID
      IF NO RECORDS FOUND
        ESCAPE BOTTOM
      END-NOREC
      ASSIGN #CGA-ISN = *ISN
      IF AT-V.APPL-SOURCE = 'GIPO'                        /* bz-GPL/GP2
        FETCH 'C100GIPO'                                 /* bz-GPL/GP2
      END-IF
      MOVE TRUE TO #APPL-FOUND
    END-FIND
*
    IF NOT #APPL-FOUND
      MOVE '"AT" record not found' TO #TEXT
      PERFORM SHOW-SCREEN                    /* -------------->>>  Exit
    END-IF
*
    FIND (1) CT-V WITH CT-V.CONTACT-ID = AT-V.CONTACT-ID
      MOVE CT-V.SSN TO #HOLD-SSN
      #AT.CONTACT-ID := CT-V.CONTACT-ID
    END-FIND
*
    IF AT-V.INTRO-FLAG = 'V'
      MOVE 'AFSC "AT" not accessable to AAFMAA users' TO #TEXT
      RESET AT-V
      PERFORM SHOW-SCREEN                    /* -------------->>>  Exit
    END-IF
*
    IF AT-V.MEMBER-CN NE BLANK
      FIND A-STAT WITH MEMBER-KEY = AT-V.MEMBER-CN
        MOVE TRUE TO #STAT-FOUND
      END-FIND
    END-IF
  ELSE
*             ***  SSN is search ID  ***
    FIND CT-V WITH CT-V.SSN = #CGA-SCR-ID
      #AT.CONTACT-ID := CT-V.CONTACT-ID
      FIND (1) A-STAT WITH A-STAT.MEMBER-CONTACT-ID = CT-V.CONTACT-ID
      END-FIND
*
      IF A-STAT.PROCESS-IND = 'C'
          AND A-STAT.INTRO-FLAG NE 'A'
        ESCAPE TOP
      END-IF
    END-FIND
*
    PERFORM FIND-APPL
    MOVE CT-V.SSN TO #HOLD-SSN
  END-IF
END-IF
*
IF NOT #APPL-FOUND AND #CGA-SCR-SUFFIX NE 'FBR'
  MOVE '"AT" record not found' TO #TEXT
  PERFORM SHOW-SCREEN                    /* -------------->>>  Exit
END-IF
*
IF NOT #APPL-FOUND
    AND #CGA-SCR-SUFFIX = 'FBR'
    AND NOT #STAT-FOUND
  MOVE 'Must be an ACTIVE member for FBR only' TO #TEXT
  PERFORM SHOW-SCREEN                    /* -------------->>>  Exit
END-IF
*
#PROSP := FALSE
*
IF #STAT-FOUND
  RESET #TOT-FACE #TOT-FACE-TERM
  IF A-STAT.BRIDGER-IND = BLANK
    #BRIDGER := 'N'
  ELSE
    #BRIDGER := A-STAT.BRIDGER-IND
  END-IF
*
  #REFUND-TO-CAP := A-STAT.REFUND-TO-CAP
*
  COMPUTE #POL# = A-STAT.LAST-SEG-USED + 1
  COMPRESS A-STAT.ID-NUMBER '-' #POL# INTO #POL-NUM LEAVING NO
*
  FOR #I1 1 TO 9
    RESET #WORK-FACE
    IF A-STAT.STATUS (#I1) = 'D'
      IF ISSUE-DATE (#I1) LT 19941201
        COMPUTE #WORK-FACE = (NUM-MBRSHIPS (#I1) * 5000)
      ELSE
        MOVE FACE-AMOUNT (#I1) TO #WORK-FACE
      END-IF
      ADD #WORK-FACE TO #TOT-FACE
      IF FUNCTION-TERM-POLICY(<A-STAT.PLAN (#I1)>) /* YK1
        ADD #WORK-FACE TO #TOT-FACE-TERM
      END-IF
    END-IF
  END-FOR
END-IF
*
IF  (NOT #FROM-AN)
    AND (NOT #CGA-ORIG-SUFFIX = 'FLX' OR = 'BYP')
    AND (AT-V.ID-NUMBER NE 0)
  MOVE 'AT*' TO #CGA-SCR-SUFFIX
  FETCH 'C1050PAN'              /* -------------->>>  Exit
END-IF
*
IF #APPL-FOUND
  GET AT-V #CGA-ISN
  if at-v.plan = GroupTerm                      /* vt19   \/
    at-v.smoker-flag   := 'N'
    at-v.mode          := 'B'
    at-v.policy-type   := 'M'
    at-v.special-hand  := 'N'
    at-v.weight        := 150
    at-v.height-ft     := 5
    at-v.height-in     := 6
    at-v.e-deposit-ind := 'N'
    at-v.alot-chg-auth := 'N'
  end-if                                        /* vt19  /\
  MOVE BY NAME AT-V TO #AT
*   if  substr(at-v.at-status,1,1)  = 'S'                        /* TT2
*       AND at-v.plan NE GroupTerm                               /* TT2
*     reset #at.smoker-flag                            /* vt8    /* TT2
*   end-if                                             /* vt8
*
*  IF AT-V.APPL-SOURCE = 'ONLINE'   /* --- Temporary for online app   YK3 comment out
*      AND AT-V.USER-SOURCE = 'LGM'
*    FETCH 'C1002PAT'
*  END-IF
END-IF
*
* IF #AT.SMOKER-FLAG = BLANK             /* vt8 \/
*   #AT.SMOKER-FLAG := 'N'
* END-IF                                 /* vt8 /\
*
/* Format Linked to Member number and Referring ID Numbers to reflect Pending Applications
CALLNAT 'C1009SAT'
  AT-V.MEMBER-CN
  AT-V.REFERING-ID-NUMBER (1)
  #LINKED-TO
  #LINKED-TO-AT
*
FOR #I1 1 TO 5
  IF AT-V.RIDER-PLAN (#I1) NE BLANK
    MOVE TRUE TO #HAS-FBR
  END-IF
END-FOR
*
RESET #NEW-POL-RIDER #ATTCH-POL-RIDER #ONLY-RIDER
IF (#CGA-ORIG-SUFFIX = 'FBR') OR #HAS-FBR
  PERFORM RIDER-PROCESS   /* Family Benefit Rider Process
*
  IF NOT #APPL-FOUND
      AND #NEW-POL-RIDER
    MOVE 'Application must exist for a FBR with policy' TO #TEXT
    PERFORM SHOW-SCREEN                    /* -------------->>>  Exit
  END-IF
END-IF
*
FOR #I1 50 TO 1 STEP -1
  IF AT-V.ST-NOTE-DATE (#I1) NE 0
    MOVE AT-V.ST-NOTE-USER (#I1) TO #CURR-USER
    ESCAPE BOTTOM
  END-IF
END-FOR
*
CALLNAT 'GATSTSXX' /* get status desc
  AT-V.AT-STATUS
  #ST-DESC
  #INVALID
  #ERR-MSG
*
DECIDE FOR FIRST CONDITION
  WHEN AT-V.RATING-CODE = #CLASS-1
    #TEXT-LST-35 := #CLASS-1-DESC
  WHEN AT-V.RATING-CODE = #CLASS-2
    #TEXT-LST-35 := #CLASS-2-DESC
  WHEN AT-V.RATING-CODE = #CLASS-3
    #TEXT-LST-35 := #CLASS-3-DESC
  WHEN NONE
    IF #ST-DESC = #CLASS-1-DESC OR = #CLASS-2 OR = #CLASS-3-DESC
      IGNORE
    ELSE
      MOVE #ST-DESC TO #TEXT-LST-35
    END-IF
END-DECIDE
*                 ***  PERFORM LOAD-DEPOSITS ***
CALLNAT 'C2011SNM'
  #HOLD-SSN
  #DEP-RCVD
  #UI.#DEP-RCVD-CREDIT
  #DEP-RCVD-CASH
*
IF NOT #AT.INTRO-FLAG = #INSURED-OPTIONS (*)
  RESET #AT.INTRO-FLAG
END-IF
*
IF #STAT-FOUND
  PERFORM MOVE-ST-TO-AT
END-IF
*
#SEC-CODE := FUNCTION-PROC-SEC(<'APPL','DEL'>)
IF NOT (FUNCTION-ACCESS(<*USER,#SEC-CODE>) = 'A' OR = 'U')
    AND (AT-V.USER-SOURCE NE #CGA-CLERK)
  MOVE (AD=P) TO #SDF-CV
END-IF
*
#SEC-CODE := FUNCTION-PROC-SEC(<'APPL','SEN'>)
IF NOT (FUNCTION-ACCESS(<*USER,#SEC-CODE>) = 'A' OR = 'U')
    AND   (AT-V.USER-SOURCE NE #CGA-CLERK)
  MOVE (AD=P) TO #SEC-CV
END-IF
*
MOVE '(D)elete?'      TO #SCR-DLT-MSG
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE FIND-APPL
************************************************************************
*
RESET #TRY-MBR
RESET #APPL-FOUND
*
FIND AT-V WITH AT-V.CONTACT-ID = #AT.CONTACT-ID
  IF  (AT-V.INTRO-FLAG = 'V')
**      OR (AT-V.AT-STATUS = 'A')
    ESCAPE TOP
  END-IF
  MOVE TRUE TO #APPL-FOUND
  ASSIGN #CGA-ISN = *ISN
  IF AT-V.MEMBER-CN NE BLANK
    MOVE TRUE TO #TRY-MBR
  END-IF
END-FIND
*
IF NOT #APPL-FOUND
  RESET AT-V
END-IF
*
IF   (NOT #APPL-FOUND)
    AND (#STAT-FOUND = FALSE)
  MOVE TRUE TO #TRY-MBR
END-IF
*
IF #TRY-MBR OR NOT #STAT-FOUND
  RESET #STAT-FOUND
  FIND A-STAT WITH A-STAT.MEMBER-CONTACT-ID = #AT.CONTACT-ID
    IF (A-STAT.PROCESS-IND = 'C' AND NOT A-STAT.INTRO-FLAG = 'A')
      ESCAPE TOP
    END-IF
    MOVE TRUE TO #STAT-FOUND
    IF A-STAT.ID-NUMBER LE 1900
      COMPRESS 'SSN' #CGA-SCR-ID 'is a sample CN' TO #TEXT
      PERFORM SHOW-SCREEN        /* -------------->>>  Exit
    END-IF
    ESCAPE BOTTOM
  END-FIND
END-IF
*
IF NOT #STAT-FOUND
  RESET A-STAT
END-IF
PERFORM CHECK-FOR-DUPS
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CALC-FLEX-PREM
************************************************************************
*
* IF (#AT.PLAN = 'RT' OR = 'LT' ) OR #LTII                     /* YK2
IF (#AT.PLAN = 'RT' OR = 'LT' OR = 'EZ' ) OR #LTII
  MOVE 'FLEX PLAN invalid with non Whole-Life plans' TO #TEXT
  ESCAPE ROUTINE
END-IF
*
COMPUTE #FAC-AMT = (#AT.FACE-AMT-UNITS * 1000) + #AT.FACE-AMT-DOLS
*
IF #AT.PLAN = 'OL'
  MOVE 99 TO #FLEX-NUM-YEARS
ELSE
**IF #AT.PLAN = 'AL'  /* DW1
  IF IS-ANNUITY-LIFE (< #AT.PLAN >)  /* NG8
    MOVE 999 TO #FLEX-NUM-YEARS
  ELSE
    IF (#AT.PLAN NE BLANK) AND (#AT.PLAN NE 'SP')
      #F-PLAN := #AT.PLAN
      IF #AT.PLAN-A2 = 'P'
        MOVE #F-PLAN-N1 TO #FLEX-NUM-YEARS
      ELSE
        MOVE #F-PLAN-N2 TO #FLEX-NUM-YEARS
      END-IF
    END-IF
  END-IF
END-IF
*
RESET #PAYS-DUES
IF #AT.MEMBER-CN = BLANK AND NOT #AT.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
  MOVE TRUE TO #PAYS-DUES
END-IF
*
#C1602SCO-NAME := FUNCTION-DISP-CT-NAME(<#CONTACT.FIRST-NAME,#CONTACT.MIDDLE-NAME,
  #CONTACT.LAST-NAME,#CONTACT.SUFFIX>)
*
IF #AT.SMOKER-FLAG = 'Y'  /* PM1
  #AT.SMOKER-FLAG := 'S'  /* PM1
END-IF                    /* PM1
*
MOVE #AT.EXCH-1035 TO #EXCH-1035
MOVE #CGA-SCR-SUFFIX TO #HOLD-SUFFIX
CALLNAT 'C1602SCO'
  #CGA-SCR-COMMAND #CGA-SCR-ID #CGA-SCR-SUFFIX #CGA-ORIG-COMMAND #CGA-CLERK
  #PAYS-DUES
  #C1602SCO-NAME
  #CONTACT.DATE-OF-BIRTH
  #AT.SMOKER-FLAG
  #CONTACT.GENDER-CD
  #AT.LUMP-SUM
  #EXCH-1035 #FAC-AMT
  #FLEX-NUM-YEARS #FLEX-ANN-PREM #FLEX-DUES-PMT #FLEX-PREM-AGE
  #FLEX-POLICY
  #AT.RATING-CODE
  #AT.PLAN
MOVE #HOLD-SUFFIX TO #CGA-SCR-SUFFIX
*
IF #AT.SMOKER-FLAG = 'S'  /* PM1
  #AT.SMOKER-FLAG := 'Y'  /* PM1
END-IF                    /* PM1
*
MOVE #CONTACT.DATE-OF-BIRTH TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYYYY-A TO #SCN-DOB
*
MOVE #FAC-AMT-UNITS TO #AT.FACE-AMT-UNITS #SCR-FACE-UNITS
MOVE #FAC-AMT-DOLS  TO #AT.FACE-AMT-DOLS
*
IF (NOT #FLEX-POLICY) AND (#FLEX-NUM-YEARS NE 0)
  RESET #FLEX-NUM-YEARS #FLEX-ANN-PREM #FLEX-PREM-AGE
    #FAC-AMT-DOLS #AT.FACE-AMT-DOLS
  ESCAPE ROUTINE
END-IF
*
MOVE #EXCH-1035 TO #AT.EXCH-1035
*
**IF #AT.PLAN = 'AL'
IF IS-ANNUITY-LIFE (< #AT.PLAN >)  /* NG8
  ESCAPE ROUTINE
END-IF
*
IF #FLEX-NUM-YEARS = 0
  MOVE 'SP' TO #AT.PLAN
ELSE
  IF #FLEX-NUM-YEARS LT 10
    COMPRESS #FLEX-NUM-YEARS 'P' INTO #AT.PLAN LEAVING NO
  ELSE
    MOVE #FLEX-NUM-YEARS TO #AT.PLAN
  END-IF
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CALC-ISS-AGE
************************************************************************
*
MOVE '00' TO #ISS-AGE-A2
RESET #ISS-AGE-MM
IF #SCN-DOB = MASK (MMDDYYYY)
  MOVE *DATN TO #YYYYMMDD
  MOVE #SCN-DOB TO #WMMDDYYYY-A
  PERFORM FLIP-DATE-TO-YYYYMMDD
  SUBTRACT #WYYYYMMDD-N FROM #YYYYMMDD
  MOVE #YYYY TO #ISS-AGE-4
*
  IF #YYYY GT 99
    MOVE 99 TO #ISS-AGE-A2
  ELSE
    MOVE #YY TO #ISS-AGE-A2
  END-IF
*
  IF #MM GT 12
    COMPUTE #ISS-AGE-MM = 12 - (100 - #MM)
  ELSE
    MOVE #MM TO #ISS-AGE-MM
  END-IF
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CALC-PREMIUM
************************************************************************
*
COMPUTE #FACE-AMT = (#AT.FACE-AMT-UNITS * 1000) + #AT.FACE-AMT-DOLS
MOVE #FACE-AMT TO #FACE-9
IF #AT.RATE-DATE > 0  /* NG9
  MOVE #AT.RATE-DATE TO #YYYYMMDD
ELSE
/* calc premium based on 1st of next month
/* since CAP eff date will be then
  MOVE *DATN TO #YYYYMMDD
  RESET #DD
  ADD 1 TO #MM
  IF #MM GT 12
    SUBTRACT 12 FROM #MM
    ADD 1 TO #YYYY
  END-IF
END-IF
*
IF #FLEX-POLICY
  MOVE #FLEX-ANN-PREM TO #APREM
ELSE
  RESET #CGA-SCR-SUFFIX
  IF #AT.RATING-CODE = #CLASS-1 MOVE 'SB1' TO #CGA-SCR-SUFFIX END-IF
  IF #AT.RATING-CODE = #CLASS-2 MOVE 'SB2' TO #CGA-SCR-SUFFIX END-IF
  IF #AT.RATING-CODE = #CLASS-3 MOVE 'SB3' TO #CGA-SCR-SUFFIX END-IF
*
  IF #AT.SMOKER-FLAG = 'Y'  /* PM1
    #AT.SMOKER-FLAG := 'S'  /* PM1
  END-IF                    /* PM1
*
  RESET #APREM
  IF #ISS-AGE = 0
    #ISS-AGE := GET-AGE-2 (< #CONTACT.DATE-OF-BIRTH >)
  END-IF
  CALLNAT 'GPREMSXX' #CGA-SCR-COMMAND #CGA-SCR-ID #CGA-SCR-SUFFIX
    #AT.PLAN #ISS-AGE #APREM #YYYYMMDD #AT.SMOKER-FLAG #FACE-9
    #CONTACT.GENDER-CD
*
  IF #AT.SMOKER-FLAG = 'S'  /* PM1
    #AT.SMOKER-FLAG := 'Y'  /* PM1
  END-IF                    /* PM1
END-IF
*
**IF NOT #AT.PLAN = 'SP' OR = 'AL'
IF #AT.PLAN EQ 'SP' OR= GroupTerm
    OR IS-ANNUITY-LIFE (< #AT.PLAN >)  /* NG8
  RESET #MON-PREM
ELSE
  COMPUTE #MON-PREM = #APREM / 12
END-IF
*
RESET #LOAN-PMT
IF #AT.CAP-IND = 'Y' AND (#AT.CAP-LOAN-AMT NE 0)
  #LOAN-PMT := FUNCTION-LOAN-PAYMENT
    (<#AT.CAP-LOAN-AMT,#AT.CAP-TERM,#AT.ALLOT-STRT-AMT>)
END-IF
*
COMPUTE #LOAN-PMT = #LOAN-PMT - #AT.ALLOT-STRT-AMT /* back out AIP-ADJ
*
IF #AT.PLAN NE GroupTerm
  COMPUTE #CALC-TOT-ALOT-AMT = #LOAN-PMT + #MON-PREM
    + #AT.ALLOT-STRT-AMT

  RESET #CALC-TOT-1ST-PMT #N-MON-PREM #NUMBER-OF-MONTHS
  IF #AT.CAP-IND NE 'Y'
    DECIDE ON FIRST VALUE #AT.MODE
      VALUE 'E'      #NUMBER-OF-MONTHS := 1
      VALUE 'Q', '4' #NUMBER-OF-MONTHS := 3
      VALUE 'S', '2' #NUMBER-OF-MONTHS := 6
      VALUE 'A', '1' #NUMBER-OF-MONTHS := 12
      NONE           #NUMBER-OF-MONTHS := 2
    END-DECIDE
    COMPUTE #N-MON-PREM = #MON-PREM * #NUMBER-OF-MONTHS
    COMPUTE #CALC-TOT-1ST-PMT = #N-MON-PREM + #AT.EXCH-1035 + #AT.LUMP-SUM
  END-IF
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE RECOMMEND-MSG
************************************************************************
*
IF  ((#AT.PLAN = 'RT') AND (#AT.SMOKER-FLAG = 'Y')               /* NG1
    AND (#CONTACT.DATE-OF-BIRTH GE #AT.DATE-RECEIVED - 370000))
    OR ((#AT.PLAN = 'RT') AND ( #AT.SMOKER-FLAG = 'N')
    AND (#CONTACT.DATE-OF-BIRTH GE #AT.DATE-RECEIVED - 470000))
  COMPRESS #TEXT-1ST-42 '*Recommend LT over RT' INTO #TEXT-1ST-42
END-IF
*
IF  (( #AT.PLAN = 'LT') AND (#AT.SMOKER-FLAG = 'Y')              /* NG1
    AND (#CONTACT.DATE-OF-BIRTH LE #AT.DATE-RECEIVED - 390000))
    OR (( #AT.PLAN = 'LT') AND ( #AT.SMOKER-FLAG = 'N')
    AND ( #CONTACT.DATE-OF-BIRTH LE #AT.DATE-RECEIVED - 490000))
  COMPRESS #TEXT-1ST-42 '*Review LT Age limitation' INTO #TEXT-1ST-42
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE UNDERWRITING-AND-AUTO-ISSUE-TEST
************************************************************************
*
#C1103LAI-ID-NUMBER      :=    #AT.REFERING-ID-NUMBER (1)
CALLNAT 'C1103SAI'
  #PDA-C1103LAI
*
#MEMBER-MILITARY-SERVICE       :=    #C1103LAI-MILITARY-SERVICE
#MEMBER-MILITARY-STATUS        :=    #C1103LAI-MILITARY-STATUS
#AGE-1100                      :=    #ISS-AGE
#POLICY-AMOUNT                 :=    #FACE-AMT
*
#MEMBER-CN-A                   :=    #AT.MEMBER-CN
#DISCLOSURE-IND                :=    #AT.DISCLOSURE-IND
#special-hand                  :=    #at.special-hand                        /* vt16
#PDA-C1002SAT.#MED-INFO (1:17) :=    #AT.MED-INFO (1:17)
*
#INTRO-FLAG                    :=    #AT.INTRO-FLAG
#PDA-AUTO-ISSUE.#INTRO-FLAG    :=    #AT.INTRO-FLAG                                            /* vt3
#intro-flag-1002               :=    #at.intro-flag                                            /* vt3
#YES-ON-MED                    :=    #AT.YES-ON-MED
#PLAN-1002                     :=    #AT.PLAN
#PDA-C1002SAT.#MIL-STATUS      :=    #UI.#MIL-STATUS
#HEIGHT-FT                     :=    #AT.HEIGHT-FT
#HEIGHT-IN                     :=    #AT.HEIGHT-IN
#WEIGHT                        :=    #AT.WEIGHT
#SEX-1002                      :=    #CONTACT.GENDER-CD
#DATE-OF-BIRTH                 :=    #CONTACT.DATE-OF-BIRTH
*
CALLNAT 'C1100SAI'
  #PDA-AUTO-ISSUE
*
MOVE #MEMBER-CN-A TO #PDA-C1002SAT.#MEMBER-CN-AA                  /* VT2
*
IF  (#PLAN-1002 = 'OL' OR = 'SPF')                                                          /* VT3 \/
    OR (#PLAN-1002 = MASK (NN.))
    OR (#PLAN-1002 = MASK (N'P'.))
  MOVE TRUE TO #WHOLE-LIFE
ELSE
  RESET #WHOLE-LIFE
END-IF
*
COMPUTE #PDA-C1002SAT.#FACE-AMOUNT  := (#AT.FACE-AMT-UNITS * 1000) + #AT.FACE-AMT-DOLS
#PDA-C1002SAT.#FACE-AMOUNT := #PDA-C1002SAT.#FACE-AMOUNT + #TOT-FACE-AMOUNT                   /* VT3  /\
*
CALLNAT 'C1102SAI'
  #PDA-AUTO-ISSUE
  #PDA-C1002SAT
*
IF #AUTO-ISSUE-KEY-FOUND-1100
  #AUTO-ISSUE-LABEL := #DISPLAY-AUTO-ISSUE-LABEL
  #YES-ON-MED-LABEL := #DISPLAY-YES-ON-MED-LABEL
ELSE
  RESET #AUTO-ISSUE-LABEL #PDA-AUTO-ISSUE.#AUTO-ISSUE
    #YES-ON-MED-LABEL #AT.YES-ON-MED
  #AUTO-ISSUE-CV    := (AD=P)
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE FLIP-DATE-TO-YYYYMMDD
************************************************************************
*
MOVE BY NAME #WMMDDYYYY TO #WYYYYMMDD
IF #WMMDDYYYY-A = BLANK
  MOVE 0 TO #WYYYYMMDD-N
END-IF
END-SUBROUTINE
*
DEFINE SUBROUTINE FLIP-DATE
/*                =========
MOVE BY NAME #WYYYYMMDD TO #WMMDDYYYY
IF #WMMDDYYYY-A = '00000000'
  MOVE BLANK TO #WMMDDYYYY-A
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE DEP-LABEL
************************************************************************
*
IF #FLEX-POLICY OR (AT-V.CAP-IND NE 'Y')
  MOVE '**** DEPOSIT ****' TO #DEP-LBL
  DECIDE ON FIRST VALUE AT-V.MODE
    VALUE 'E', '1' #NUMBER-OF-MONTHS := 1
    VALUE 'Q', '4' #NUMBER-OF-MONTHS := 3
    VALUE 'S', '2' #NUMBER-OF-MONTHS := 6
    VALUE 'A', '1' #NUMBER-OF-MONTHS := 12
    NONE           #NUMBER-OF-MONTHS := 2
  END-DECIDE
  COMPRESS #NUMBER-OF-MONTHS 'Months' TO #N-MON-LBL LEAVING NO SPACE
  MOVE 'Total'   TO #TOT-LBL
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE GET-SELECT
************************************************************************
*
DECIDE ON FIRST VALUE OF *CURS-LINE
*  value 2                                                      /* vt17
*    #select := #intro-sel                                      /* vt17
  VALUE 3,4,5
    #SELECT := #CONTACT-SEL
  VALUE 6
    #SELECT := #RANK-SEL
  VALUE 7,8,9
    #SELECT := #ADDRESS-SEL
  VALUE 10
    IF *CURS-COL > 60
      #SELECT := #ADDRESS-SEL-S
    ELSE
      #SELECT := #ADDRESS-SEL
    END-IF
  VALUE 11
    #SELECT := #EMAIL-SEL
  VALUE 12
    DECIDE FOR FIRST CONDITION
      WHEN *CURS-COL >= 60
        #SELECT := #PHONE-SEL-C
      WHEN *CURS-COL >= 35
        #SELECT := #PHONE-SEL-W
      WHEN NONE
        #SELECT := #PHONE-SEL-H
    END-DECIDE
  value 13                                        /* vt14
    #select := #prefered-sel                      /* vt14
  NONE VALUE
    RESET #SELECT
END-DECIDE
*
FOR #J 1 TO 28                                  /* vt14 was 22  /* vt16 was 23       /* vt17 was 24    /* vt19 
  IF #CONTROL-VARS ( #J ) MODIFIED
    #CV-SAVE ( #J ) := #CONTROL-VARS ( #J )
  END-IF
END-FOR
*
if at-v.plan = GroupTerm                                       /* vt19  \/
    and (#dols-cv modified or #units-cv modified )
  move   #face-amt-dols-n   to #at.face-amt-dols
end-if                                                         /* vt19  /\
*
IF #AT.PLAN = 'SP' #AT.MODE := 'G' END-IF                      /* bz-HD-5046
END-SUBROUTINE
*
************************************************************************
DEFINE CRM-SYNCH
************************************************************************
*
IF #SCR-DLT-FLAG = 'D' OR = 'Y'
  ESCAPE ROUTINE
END-IF
/*
GET AT-V #CGA-ISN
**IF SUBSTR(AT-V.AT-STATUS,1,1) = 'P' OR= 'U' OR= 'W'    NG4
*
#CRM-RESULT := 'ORDER'                   /* TT2
*
CALLNAT 'MBRNEWST'
  AT-V.ID-NUMBER
  #MEMBER-CN
  #CRM-RESULT
CALLNAT 'MBRSVCY'    /* NG2
  #MEMBER-CN
  #CRM-RESULT
**END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE PF4-DETAILS
************************************************************************
*
DECIDE ON FIRST VALUE OF #SELECT
  VALUE #CONTACT-SEL
    MOVE 'U' TO #MODE
    CALLNAT 'GUPCISXX'
      #AT.CONTACT-ID
      #AT.CONTACT-ID
      #CGA-ORIG-COMMAND
      A-STAT.ID-NUMBER
      #CGA-USER-COMPANY
      #CGA-CLERK
      #MODE
      #MSG-72
  VALUE #RANK-SEL
    IF #CGA-SCR-ID = 0
      MOVE #CLERK-ID TO #CGA-CLERK
    END-IF
    CALLNAT 'ADRN0008' #AT.CONTACT-ID A-STAT.ID-NUMBER
      #CONTACT.RANK-ID #CGA-CLERK
      #MODE
      #MSG-72
  VALUE #ADDRESS-SEL
    CALLNAT 'ADRN0002' #AT.CONTACT-ID #ADDR-POOL.ADDRESS-POOL-ID
  VALUE #ADDRESS-SEL-S
    #ADDR-TYPE-CD := 'S'
    #S-ADDRESS-POOL-ID := F-GET-ADR-POOL-ID (< #AT.CONTACT-ID, #ADDR-TYPE-CD >)
    CALLNAT 'ADRN0002' #AT.CONTACT-ID #S-ADDRESS-POOL-ID
  VALUE #PHONE-SEL-H
    #MEMBER-CN-A := AT-V.MEMBER-CN
    CALLNAT 'ADRN0011' #AT.CONTACT-ID
      #MEMBER-CN
      #H-PH-ID
  VALUE #PHONE-SEL-W
    #MEMBER-CN-A := AT-V.MEMBER-CN
    CALLNAT 'ADRN0011' #AT.CONTACT-ID
      #MEMBER-CN
      #W-PH-ID
  VALUE #PHONE-SEL-C
    #MEMBER-CN-A := AT-V.MEMBER-CN
    CALLNAT 'ADRN0011' #AT.CONTACT-ID
      #MEMBER-CN
      #C-PH-ID
  value #prefered-sel                                /* vt14 \/
    #member-cn-a := at-v.member-cn
    callnat 'ADRN0012' #at.contact-id
      #member-cn
      #prefered                                      /* vt14 /\
  VALUE #EMAIL-SEL
    #MODE := 'U'
    #MEMBER-CN-A := AT-V.MEMBER-CN
    CALLNAT 'ADRNEM01' #AT.CONTACT-ID
      #MEMBER-CN
      #EMAIL.EMAIL-ID
      #CGA-CLERK #MODE #MSG-72
  ANY VALUE
    PERFORM COLLECT-DATA
  NONE VALUE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE PLAN-EDITS
************************************************************************
*
IF #AT.MEMBER-CN NE BLANK
    AND A-STAT.NUMBER-MEMBERSHIPS GT 0
  MOVE 'A' TO #NEW-ADDL
ELSE
  MOVE 'N' TO #NEW-ADDL
END-IF
*
PERFORM CALC-ISS-AGE
*
IF #AT.PLAN NE BLANK
    AND (NOT #AT.ACTION-FLAG = 'W' OR = 'D')
  COMPUTE #FACE-AMT = (#AT.FACE-AMT-UNITS * 1000) + #AT.FACE-AMT-DOLS
  RESET #ERR-MSG
*
  IF #AT.SMOKER-FLAG = 'Y'       /* NG1
    #AT.SMOKER-FLAG := 'S'
  END-IF
  CALLNAT 'GPLANSXX'
    #AT.MEMBER-CN
    #CGA-CLERK
    #AT.PLAN
    #ISS-AGE-A2
    #ISS-AGE-MM
    #AT.INTRO-FLAG
    #AT.SMOKER-FLAG
    #FACE-AMT
    #TOT-FACE
    #TOT-FACE-TERM
    #NEW-ADDL
    #ERR-MSG
    #FLEX-POLICY
  IF #AT.SMOKER-FLAG = 'S'       /* NG1
    #AT.SMOKER-FLAG := 'Y'
  END-IF
*
  IF #ERR-MSG NE BLANK
    IF  (#ERR-MSG = MASK ('MAX additional'))
        OR (#ERR-MSG = MASK ('LT not suggested'))
        or  (#err-msg = MASK ('LTII Iss Age + Term cannot exceed 85'))  /* vt15
      COMPRESS #TEXT-1ST-42 #ERR-MSG INTO #TEXT-1ST-42
      RESET #ERR-MSG
    ELSE
      IF #ERR-MSG = 'Invalid plan'
        COMPRESS #TEXT-1ST-42 #ERR-MSG INTO #TEXT-1ST-42         /* vt17 \/
*         REINPUT USING HELP
*           MARK *#AT.PLAN                                       /* vt17 /\
      ELSE
        COMPRESS #TEXT-43 #ERR-MSG INTO #TEXT-43                 /* vt17 \/
*         REINPUT  #ERR-MSG
*           MARK *#AT.PLAN                                       /* vt17 /\
      END-IF
    END-IF
    #pos:= pos(#at.plan)                                        /* vt17 \/
    #errors := TRUE
    escape routine                                              /* vt17 /\
  END-IF
*
  IF #AT.AT-STATUS = 'UA' OR = 'UB' OR = 'UC'
      OR #AT.RATING-CODE = #CLASS-1 OR = #CLASS-2 OR = #CLASS-3
    IF  (#AT.PLAN = 'OL' OR = 'SP' OR = '20' OR = '30' OR = '7P')       /* PM4
*       OR (#AT.PLAN = MASK ('U'))                                      /* YK1
* New or Old Standard LEVEL TERM II PLAN                                /* YK1
        OR (SUBSTR(#AT.PLAN,1,1) = 'U' OR = 'S')                        /* YK1
        OR (#FLEX-POLICY)
      IGNORE
    ELSE
      #TEXT := 'Rated Premiums only valid for Flex/OL/SP and LTII Std'      /* vt17 \/
*       REINPUT 'Rated Premiums only valid for Flex/OL/SP and LTII Std'
*         MARK *#AT.PLAN
      #pos:= pos(#at.plan)
      #errors := TRUE
      escape routine                                                        /* vt17 /\
    END-IF
  END-IF
*
  if #at.plan ne GroupTerm                              /* vt19  
    PERFORM CALC-PREMIUM
  end-if                                                /* vt19  
END-IF
*
IF (#AT.EXCH-1035 NE 0) OR (#AT.LUMP-SUM NE 0) OR #FLEX-POLICY
  IF #FLEX-PREM-AGE = 0
    MOVE *DATN TO #WYYYYMMDD-N
    SUBTRACT #CONTACT.DATE-OF-BIRTH  FROM #WYYYYMMDD-N
    MOVE #WYYYY-N TO #FLEX-PREM-AGE
  END-IF
*
**IF #AT.PLAN = 'SP' OR = 'AL'
  IF #AT.PLAN EQ 'SP'
      OR IS-ANNUITY-LIFE (< #AT.PLAN >)  /* NG8
    RESET #POL-TYPE-YRS
  ELSE
    #F-PLAN := #AT.PLAN
    IF #F-PLAN = MASK (N'P')
      MOVE #F-PLAN-N1 TO #POL-TYPE-YRS
    ELSE
      IF #F-PLAN = MASK(NN)
        MOVE #F-PLAN-N2 TO #POL-TYPE-YRS
      ELSE
        REINPUT USING HELP
          MARK *#AT.PLAN
      END-IF
    END-IF
  END-IF
*                                                                       /*  NG10  Start
  IF #AT.RATE-DATE > 0
      AND #AT.RATE-DATE < 20160101  /* version 4
    #AGE-LIMIT := 100
  ELSE
    IF #F-PLAN = '99'
      #AGE-LIMIT := #FLEX-PREM-AGE + #POL-TYPE-YRS
    ELSE
      #AGE-LIMIT := 120
    END-IF
  END-IF                                                                /*  NG10 End
  IF #FLEX-PREM-AGE + #POL-TYPE-YRS GT #AGE-LIMIT
*    REINPUT 'Plan years will make Policy Paid-up after age 100'           /* vt17 \/
*      MARK *#AT.POLICY-TYPE
    COMPRESS 'Warning: Policy Paid-up after age' #AGE-LIMIT                /*  NG10
      INTO #TEXT                                                           /*  NG10
    #pos:= pos(#AT.POLICY-TYPE)
    #errors := TRUE                                                       /* vt17 /\
    escape routine
  END-IF
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE SYNCH-STATUS-FILE
************************************************************************
#MEMBER-CN-A           := AT-V.MEMBER-CN
#CN-PARMS.CN           := #MEMBER-CN
*
IF #SEC-CV MODIFIED OR #MIL-CV MODIFIED OR #MIL-CV MODIFIED
  CALLNAT 'GOSTCN01'                        /* Synch contact information
    #CN-PARMS
  END TRANSACTION
END-IF
*
* IF #CV-ADDR MODIFIED                                             /* vt5 \/
*   CALLNAT 'GOSTAN01'                        /* Synch addresses
*     #CN-PARMS
*   END TRANSACTION
* END-IF
* *
* IF #EML-CV MODIFIED
*   CALLNAT 'GOSTEN01'                        /* Synch email
*     #CN-PARMS
*   END TRANSACTION
* END-IF
* *
* IF #HPH-CV MODIFIED OR #WPH-CV MODIFIED OR #CPH-CV MODIFIED
*   CALLNAT 'GOSTPN01'                        /* Synch phone
*     #CN-PARMS
*   END TRANSACTION
* END-IF                                                         /* vt5 /\
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE RIDER-PROCESS
************************************************************************
*
CALLNAT 'C1004SAT'
  #CGA-SCR-COMMAND #CGA-SCR-ID #CGA-ID-G
  #CGA-SCR-SUFFIX #CGA-ORIG-SUFFIX
  #TEXT
  #AT.INTRO-FLAG
  #AT.REMARKS  (1:3)
  #AT.RIDER-SPS
  #AT.RIDER-PLAN    (1:5)
  #AT.RIDER-ATT-POL (1:5)
  #SCR-FACE-UNITS
  #AT.PLAN
  #AT.MEMBER-CN
  #AT.CONTACT-ID
*
RESET #HAS-FBR
*
FOR #I1 1 TO 5
  IF #AT.RIDER-PLAN (#I1) NE BLANK
    MOVE TRUE TO #HAS-FBR
    COMPRESS #TEXT '*FBR*' INTO #TEXT
    IF #AT.RIDER-ATT-POL (#I1) = 0
      MOVE TRUE TO #NEW-POL-RIDER
    ELSE
      MOVE TRUE TO #ATTCH-POL-RIDER
    END-IF
  END-IF
END-FOR
*
IF #ATTCH-POL-RIDER AND NOT #NEW-POL-RIDER
  MOVE TRUE TO #ONLY-RIDER
  MOVE 'Only FBR(s)-no new pols' TO #TEXT
*
*  MOVE (AD=P) TO
*   #GEN-CV #CHG-CV #SDF-CV #SEC-CV #USER-CV
*    #ONLY-EDS-CV #ONLY-EDS-CV-P #RID-CV2 #RID-CV3
*    #AUTO-ISSUE-CV #ALOT-AUTH-CV
*   #CV-ADDR
END-IF
*
IF #HAS-FBR
  #UI.#SCN-RIDER := 'Y'
ELSE
  #UI.#SCN-RIDER := 'N'
END-IF
*
IF #ONLY-RIDER AND NOT #APPL-FOUND
    AND #UI.AT-STATUS = BLANK
  #UI.AT-STATUS := 'M'
END-IF
*
END-SUBROUTINE
END
