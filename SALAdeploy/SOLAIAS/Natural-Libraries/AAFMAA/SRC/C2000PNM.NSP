* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 2
* <Natural Source Header
* PGM-ID: C2000PNM
******************************************************************************
*   MODIFICATION LOG
* USER DATE      REASON
* PAM  01232005  REMOVED ALL REF's to INS-ONLY - used for TR-UP
* PAM  05022005  ADDED SSN DEPOSIT PROCESSING.
* PAM  05112005  REMOVED ALL REFERENCES TO INS-ONLY-GAIN-PLANS
* PAM  05112005  ADDED CREDIT CARD PROCESSING
* DRW  06212005  ADD INFO TO TR
* PAM  06222005  ADD 1035 EXCHANGE TO AL
* DRW  06292005  CHECK FOR SCR-FACE-DOLS TO IND FLEX
* PAM  07202005  ADDED CREDIT CARD DEPOSIT FIELD
* PAM  08172005  ADDED ABORT OPTION FROM FPF PROCESS
* DRW  09082005  ADDED ENTERED DATE
* PAM  09122005  ALWAYS PROCESS DEPOSITS
* PAM  09262005  CALL C2012SNM - MOVE FPF TO BADJ FOR LTII
* DRW  03032006  USE CURR DATE FOR EZ-PAY-WAITING TO CALC FPF END DT
* DRW  05072006  REMOVE ALOT-SW LOGIC
* DRW  05102006  MOVE A TO ALOT-SW IF SPS/GEN OF A G/F MBR
* DRW  06222006  MAKE AL EXCEEDS FACE AMOUNT TEST
* DRW  12122006  EFF DT CHECK (C2000CNM
* DRW  03082007  DW1 FIX NEW POL FOR AL ABEND
* DRW  03182007  DW2 SET ALOT-SW TO "A" FOR ALL NEW NON SPS-GEN MEMBERS
* PAM  20070506  PM3   ADDED POLICY AUTO ISSUE
* YAK  20070525  YK1  Add CAP policy counter to the month of CAP-ENTRY-DATE
*                (not current month). Use different counter for policies
*                added after the month end.
* PAM  20070601  PM4  Add Military Service to auto issue criteria
* DRW  20070815  DW5  Do not make SPS/GEN ALOT-AUTH  Y
* YAK  20070910  YK2  Populate ALOT-CHG-AUTH-DATE
* PAM  20071116  PM6  Credit card deposits now on file. No open items allowed
* PAM  20080116  PM7  Changed processing for AT premium rating
* PAM  20080515  PM11 Added FPF date checks (C2000CNM)
* DRW 05/27/2008 DW12 Chg Annual Report Code default from "F" to "S"
* DRW 06/09/2008 DW13 Linked Mbr Processing of ALOT-CHG-AUTH
* DRW 07/29/2007 DW14 Allow all services as new members
* DRW 08/05/2008 DW15 Add Gen Plus Edits (C2000CNM/C2001CNM)
* YAK  20080825  YK3  Save FIRST-PLACE-FEE on AT file at the time of creating policy
*                     Send a request for a package printing when the new policy is saved
* PAM 09/10/2008 PM16 Added CAP Guard (EIL) processing
* PAM 10/08/2008 PM17 Added Term Processing (CR186)
* YAK  20080825  YK4  Save EZP-WAITING flag on AT file at the time of creating policy
* DRW 12/10/2008 DW18 Add AIP-ADJ to linkage to NMOSPADC
* PAM 02/26/2009 PM19 Use CAP-TYPE for EIL processing
* PAM 08/17/2009 PM20 EZPay only needs 1 month FPF
* RSE 10/01/2009 RE1  Change PROCESS-IND logic for Unification
* YAK 12/10/2010 YK5  Add CC-DEPOSIT parameter to call to C2010SNM
* PAM 02/03/2010 PM21 Added warning message for inactove members
* PAM 04/22/2010 PM22 Added new contact-table
* PAM 05/03/2010 PM23 User CLERK-ID instead
* PAM 05/19/2010 PM24 Make only last name required for trusts
* PAM 05/20/2010 PM25 Only reserve contact-id without a current member number
* NGG 03/26/2010 NG1  Pass updated status to CRM
* PAM 09/25/2010 PM26 Added new address storage location
* PAM 11/25/2010 PM27 Added RANK-ID to contact file
* vxt 01/07/2011 vt1  Add logic to prevent processing of CA applications without disclosure
*                     document.
* vxt 03/08/2011 vt2  Add logic to store address to a address-pool file
* NGG 03/21/2011 NG2  Avoid calling GCKSTSXX if Spuse/Gen application
* PAM 06/15/2011 PM28 CRM project - revised NM CON screen for correct layout
* VXT 06/15/2011 vt3  Add/Remove logic associated to CAP loans.
*                     Replace the old program (for policy print) with the new program.
* vxt 10/03/2011 vt4  Allow changing of the bank info for ez-pay account set up before.
* NGG 01/26/2012 NG3  Premier services changes
* NGG 06/28/2012 NG4  Ticket 924
* VXT 06/26/2012 VT5  Add #AI-CALL PARAMETER PASSED TO NMOSPADC program.
* vxt 09/25/2012 vt6 populate the alot-chg-ind on Status file /Ticket 1471/
* NGG 20121121   NG5  Ticket 1618
* YAK 09/26/2012 YK6  Use function to identify Level Term II plan
* YAK 11/13/2012 YK7  Add No Medical Term plan (EZ)
* YAK 11/23/2012 YK8  Add Statistics for LTII+ and EZ
* VXT 08/13/2013 VT7  /Ticket 2181/
* vxt 11/29/2013 vt8  /Ticket 2419/
* TMT 10/06/2013 TT1  1 MILLION DOLLAR STABILITY PROJECT
* TMT 12/18/2013 TT2  ADDING GP2 POLICY
* bz1 03/05/2014      (OI-1758) Code 'S' became 'N'
* VXT 03/18/2014 VT9  Add logic to produce a message when AT did not has status U6 /ticket 1830/
* YK9 06/17/2014 YK9  Add E-check capability
* NGG 09/17/2014 NG6  MS STATISTICS
* NGG 20141023   NG7  Annuity life products
* TMT 02/25/2015 TT3  Policy Ownership
* NGG 20160106   NG8  VAWL version
* vxt 03/16/2016 vt10 /Ticket 4258 - special handling flag/
* bz  03/28/2016   bz-4190 Update SUSPEND CODE
* YAK 04/13/2016 YK10 Bypass CC charge and pass error message when CC data not updated successfully
* vxt 07/28/2016 vt11 Allow Cliff to issue K and S-policies when the linked memebr does not exist
* vxt 01/27/2017 vt12 HD-2502 Ticket - Add Gail and Emy Cox access as Cliffs in vt11
* vxt 04/10/2017 vt13 HD-3422 Ticket - Grant access for EH and GMS as Cliffs one.(vt11)
* vxt 05/11/2017 vt14 Group Term Plan Project
* NGG 20170523   NG9  Group Term Plan Project
* bz  06/07/2017 hd-4094  Allow Jet issue for R1 R2 R3
* TMT 06/08/2017 TT4  Multiple CAP Project
* YAK 08/14/2017 YK11 Assign Bill Cycle for Credit Card when issuing the policy
* bz-4912  10/18/2017 EZ req. U6
* bz-hd-7693 2/16/2018 Status PU must be present for all APPL
* YAK 12/28/2017 YK12 Assign Bill Cycle for EZ-Pay when issuing the policy
*                     Stop using Q/P-Q/D/D combinations for EZ-Pay
* NGG 04/18/2018 NG10 SOLA Project
******************************************************************************

DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING C2000LNM
LOCAL USING C2001LNM
LOCAL USING GONERLXX
LOCAL USING C1100LAI                                          /* PM3  #pda-auto-issue
LOCAL USING C1002LAT                                          /* PM3  #PDA-C1002SAT
LOCAL USING C1103LAI                                          /* PM3  #PDA-C1103LAI
LOCAL USING C2012LNM                                          /* PM17
LOCAL USING C2012LN2                                          /* PM17
LOCAL USING OBJLCONT                                          /* PM22 Contact file
LOCAL USING OBJLCTRL                                          /* PM22 COnt-relationship
LOCAL USING OBJACONT                                          /* PM22
LOCAL USING ADDA0001                                          /* PM28
LOCAL USING POSL0002                                          /* TT3
LOCAL USING OBJLGENT                                          /* TT3
LOCAL USING OBJLUSER                                          /* TT3
LOCAL USING CAPA0001                                          /* TT4
*
LOCAL
1 #SVC-PAY-UP   (A1)                                          /* NG3
1 #PSM-FPF      (N7.2)                                        /* NG3
1 #PSM-REQUEST  (A) DYNAMIC                                   /* NG3
1 #PSM-MSG      (A) DYNAMIC  CONST <'Has Premier Services attached'>     /* NG3
1 #PROGRAM      (A8)                                          /* NG6
1 #USE-TIMX     (L) INIT <TRUE>                               /* NG6
*
1 #TOT-GPL    (N6)                                            /* DW15
1 #FREQ     (N3)
1 #PROCESS-SW (A1)
* BELOW IS LINKAGE TO GRIDCSXX
1 #ID    (N6)
1 REDEFINE #ID
  2 #ID-A (A6)
1 #AT-RID-ATTACH-FAC-AMT (N6.2)
1 #AT-RID-ATTACH-PLAN  (A3)
1 #AT-RID-PLAN         (A2/5)
1 #AT-RID-ATTACH-ISS-DT(N8/5)
* OUTPUT BELOW  (EX = EXISTING)
1 #AT-TOT-FBR-PREM     (N3.2)
1 #EX-FBR-PREM-BY-LINE (N3.2/9)
1 #EX-SPS-DB-BY-LINE   (N6/9)
1 #EX-DEP-DB-BY-LINE   (N6/9)
1 #EX-EACH-DEP-DB-BY-LINE(N6/9)
1 #NUM-ELIG-CHILDREN   (N2)
1 #NUM-ELIG-CHILDREN-UNDER-6-MON (N2)
1 #TOT-CHILD-DB (N6)
1 #AT-FIRST-PLACE-FEE (N7.2)                                  /* YK3
1 #RID-TEXT     (A78)
*
1 XX-ST VIEW OF A-STATUS
  2 PROCESS-IND
  2 ALOT-SW
*
1 POS-ST VIEW OF A-STATUS
  2 ID-NUMBER
  2 POLICY-ID (9)

1 NT-V VIEW OF A-NOTES
  2 ID-NUMBER   (N6)
  2 NOTE-DATE   (N8/1)
  2 NOTE-TEXT   (A60/40)
  2 REDEFINE NOTE-TEXT
    3 PROSPECTIVE-OCC  (85)
      4 PR-USER       (A3)
      4 PR-POLS-INIT  (N5)
      4 PR-POLS-ISSUED(N5)
      4 PR-POLS-CURR  (N5)
      4 PR-AVAIL-1    (N5)
      4 PR-AVAIL-2    (N5)
*
  2 REDEFINE NOTE-TEXT
    3 CAPS-CONV-BY-YEAR  (10)
      4 CAPS-CONV-BY-ORIGIN (13)
        5 CAPS-CONV-ORIG   (N5)
*
    3 CAPS-CONV-BY-MON  (12)
      4 CAPS-CONV-MON    (N5)
*
    3 ATS-CONV-BY-FU  (5)
      4 ATS-CONV-FU      (N5)
*
    3 CAPS-AT-M-S (N5)
    3 CAPS-AT-P1 (N5)
    3 CAPS-AT-P2 (N5)
    3 CAPS-AT-P3 (N5)
    3 CAPS-AT-P4 (N5)
    3 CAPS-AT-U  (N5)
    3 CAPS-AT-W  (N5)
    3 CAPS-AT-D  (N5)
    3 CAPS-AT-A  (N5)
    3 CAPS-AT-UNUSED-1 (N5)
    3 CAPS-AT-UNUSED-2 (N5)
    3 CAPS-AT-NCO (N5)
    3 CAPS-AT-OFF (N5)
*
    3 CAPS-IM-S  (N5)
    3 CAPS-IM-M  (N5)
    3 CAPS-IM-I  (N5)
    3 CAPS-IM-C  (N5)
    3 CAPS-IM-P  (N5)
    3 CAPS-IM-X  (N5)
    3 CAPS-IM-Y  (N5)
    3 CAPS-IM-Z  (N5)
*
    3 AT-M-S-0FU  (N5)
    3 AT-M-S-1FU  (N5)
    3 AT-M-S-2FU  (N5)
    3 AT-M-S-3FU  (N5)
    3 AT-M-S-4FU  (N5)
    3 AT-P      (N5)
    3 AT-U      (N5)
    3 AT-W      (N5)
    3 AT-A      (N5)
*
    3 AT-SPS    (N5)
    3 AT-CHILD  (N5)
    3 AT-GRANDCHILD (N5)
*
    3 CAP-MON-BY-MON-ADDL (12)
      4 CAPS-CONV-MON-A  (N5)                                    /* YK1
      4 CAPS-CONV-MON-GR (N5)                                    /* YK1
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A (A6)
  2 SSN
  2 LINKED-CN   (30)
  2 PROCESS-IND
  2 INTRO-FLAG
  2 OTHER-COMPANY-ID
  2 ALOT-AMT
  2 MILITARY-STATUS
  2 MILITARY-SERVICE                                           /* PM28
  2 NUMBER-MEMBERSHIPS                                         /* PM21
  2 STATUS     (9)
  2 PAY-STATUS (9)
  2 MODE       (9)
*
1 RR-V VIEW OF A-RANK-REFERENCE                                /* PM28
  2 RANK-ID                                                     /* PM28
  2 RANK-ABBR                                                   /* PM28
  2 RANK-IN-SAS                                                 /* PM28
  2 MILITARY-ID                                                 /* NG1
*
1 #AT-SSN   (N9)
1 #AT-CN    (N6)
1 #NEW-AT   (L)
1 #GL-X        (I2)
1 #EDS-ONLY-CV (C)
1 #ORIGIN    (A4)
1 REDEFINE #ORIGIN
  2 #ORIGIN-FST-2 (A2)
  2 #ORIGIN-LST-2 (A2)
1 #ALOT-AMT (N5.2)
1 #E-DUES   (P5.2)
1 #G-DUES   (P5.2)
1 #A-DUES   (P5.2)
1 #S-DUES   (P5.2)
1 #Q-DUES   (P5.2)
1 #INT      (I2)
1 #NOTE-TEXT (A60/10)
1 #SCR-DEPN-CV  (C/5)
1 #HOME-TELE-N  (N10)
1 REDEFINE #HOME-TELE-N
  2 #SCR-TEL-HOME-1  (A3)
  2 #SCR-TEL-HOME-2  (A3)
  2 #SCR-TEL-HOME-3  (A4)
*
1 #WORK-TELE-N      (N10)
1 REDEFINE #WORK-TELE-N
  2 #SCR-TEL-WORK-1  (A3)
  2 #SCR-TEL-WORK-2  (A3)
  2 #SCR-TEL-WORK-3  (A4)
*
1 #SCR-LIN-22     (A75)
1 #SCR-LIN-23     (A75)
1 #SCR-CV         (C)
1 #FPF-CV         (C)
1 #MODE-CV        (C)           /* NG9
1 #STORE-FIRS     (L)
*
1 #NAME-LAST      (A25)         /* PM22
1 #NAME-FIRST     (A25)         /* PM22
1 #NAME-MIDDLE    (A25)         /* PM22
1 #NAME-SUFFIX    (A10)         /* PM22
1 #NAME-EXTRA     (A25)
*
1 #REAL-TRIP-NUM    (N3)
1 #REAL-TRIP-YY     (N2)
1 #HOLD-SOURCE-CODE (A6)
1 REDEFINE #HOLD-SOURCE-CODE
  2 #HSC-T      (A1)
  2 #HSC-999    (N3)
  2 #HSC-YY     (N2)
*
1 #SOURCE-CODE-FOUND   (L)
1 #NOTE-REC-NOT-FOUND  (L)
1 #NOTE-ISN   (P8)
1 #INVALID    (L)
1 #ERR-MSG    (A60)
1 #APPL-FOUND (L)
1 #STATS-FOUND(L)
1 #CALC-CHECK (L)
1 #HOLD-APPL-ISN (P8)
1 #INTRO-ISN     (P8)
1 #IS   (I2)
1 #RANK-DISPL   (P2)
1 #RANK-LIT     (A23)
1 #RANK-DISPLAY (A5)
1 #NEW-MSSG     (A60)
1 #CHECK-FPF (A38) INIT <'CHECK FPF DATES, HIT ENTER TO CONTINUE'>
1 #DATE      (N24) INIT <312831303130313130313031>
1 REDEFINE #DATE
  2 #DAYS   (N2/1:12)
1 #DX    (I2)
1 #APPL-INDX  (I2)
*
1 #HOLD-CODE   (A6)
1 REDEFINE #HOLD-CODE
  2 #HOLD-CODE1  (A3)
  2 #HOLD-CODE2  (A1)
1 #HOLD-ISN   (N8)
*
1  NM-T01 VIEW OF A-TERMINALS
  2 TERMINAL-ID  (A8)
  2 COMMENTS     (A20)
  2 REDEFINE COMMENTS
    3 LAST-CN     (N6)
*
1 FI-V VIEW OF A-INVESTMENTS
  2 ID-NUMBER
*
1 #I1    (I2)
1 #I2    (I2)
1 #ACTIVE-SEG   (I2) INIT <1>                            /* NG3
*
1 #YYYYMMDD
  2 #YYYY  (N4)
  2 #MM    (N2)
  2 #DD    (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYYMMDD-N       (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM (N6)
  2 #DD-2   (N2)
*
** BELOW USED FOR GDATESXX
1 #PASS-DATE    (N8)
1 REDEFINE #PASS-DATE
  2 #PASS-DATE-A (A8)
1 #EXTRA-DATE   (N8)
1 #RECEIVE-DATE (N8)
1 REDEFINE #RECEIVE-DATE
  2 #RECEIVE-DATE-A (A8)
1 #REQUEST      (A1)
** ABOVE USED FOR GDATESXX
*
1 #TOT-FACE    (N7.2)
1 #TOT-FACE-TERM (N7.2)
1 #COMMA   (A1) INIT <','>
1 #PENDING-MEMBER (L)
1 #MSG            (A60)
1 #CAP-ENTRY-MM   (N2)                                        /* YK1
1 #FORCE-A        (L)                                         /* DW13
1 #ZIP-CODE       (N9)                                        /* PM28
1 REDEFINE #ZIP-CODE                                          /* PM28
  2 #ZIP-CODE-5    (N5)                                        /* PM28
  2 #ZIP-CODE-4    (N4)                                        /* PM28
1 #POLICY-NUMBER  (A16)                                       /* YK3
1 #CRM-RESULT     (A) DYNAMIC                                 /* NG1
*
1 #RANK-ABBR               (A25)    /* PM27
1 #SPECIAL-PAY-IND         (A1)     /* PM27
1 #MESSAGE-NBR             (N3)     /* PM27
*
1 #DOB-DISP                (N8)     /* PM28
1 REDEFINE #DOB-DISP                /* PM28
  2 #DOB-DISP-CC            (A2)     /* PM28
  2 #DOB-DISP-YY            (A2)     /* PM28
  2 #DOB-DISP-MM            (A2)     /* PM28
  2 #DOB-DISP-DD            (A2)     /* PM28
*
1 #AIL-IND         (A1)             /* vt3
1 #AIL-DATE        (N8)             /* vt3
1 #PROCESS-NAME    (A) DYNAMIC             /* vt3
1 #ID-NUMBER       (A) DYNAMIC             /* vt3
1 #ORDER-LIST      (A) DYNAMIC             /* vt3
1 #RESPONSE-CODE   (A1)                    /* vt3
1 #CAP-AMOUNT      (N5.2)                  /* vt3
1 #CAP-TERM        (N2.0)                  /* vt3
1 #STRT-AMOUNT     (N3.2)                  /* vt3
1 #X-ALT-LP-AMT    (P5.2)                  /* vt3
*
1 #AI-CALL         (L)                     /* VT5
1 #SET             (I2) CONST <1>          /* NG5
1 GroupTerm        (A3) CONST <'GT1'>
1 #OLD-TERM        (L)                     /* YK6
1 #NEW-TERM        (L)                     /* YK6
1 #GEN             (L)                     /* YK6
1 #POL-SEG         (N1)                    /* YK9
1 #ERROR-CODE      (A3)                    /* YK9
1 #PLAN-CV         (C)                     /* VT7
1 #IDX1            (I2)                    /* VT9 \/
1 A-STAT VIEW OF A-STATUS
  2 ID-NUMBER
  2 STATUS (9)
  2 FACE-AMOUNT  (9)
1 #NEW-CN-A         (A6)
1 REDEFINE #NEW-CN-A
  2 #NEW-CN           (N6)
1 #I                (I2)
* 1 #TOT-FACE-AMOUNT   (N7.2)
  /* vt9 /\
1 #MEMBER        (N2) CONSTANT <3>
1 #LINKED-MEMBER (N2) CONSTANT <9>
1 #CLERK-KEY     (A7) INIT <'WEBU'>
1 #ADD       (I4) CONST <1>                    /* TT4
1 #CC-MODE       (A1/4) CONST <'0','4','2','1'>     /* YK11
1 #EZ-MODE       (A1)   CONST <'E'>                 /* YK12
1 #NEW-POLICY    (A) DYNAMIC CONST <'NM'>           /* YK12
END-DEFINE
******************************************************************************
*
INCLUDE GONERCXX
*
DEFINE WINDOW EFF-DT-TST                                      /* DW
  SIZE QUARTER
  BASE BOTTOM RIGHT
  FRAMED ON POSITION SYMBOL AUTO
*
IF #CGA-USER-COMPANY = 'S'
  FETCH 'S2000PNM'
END-IF
*
MOVE (AD=U) TO #SCR-CV #FLEX-CV #FPF-CV                              /* PM22
*
MOVE *DATN TO #HOLD-TODAY-YYYYMMDD
MOVE '*' TO #CGA-SCR-COMMAND
IF #CGA-SCR-SUFFIX = 'CON'                                           /* PM28
  FETCH 'C2001PNM'                                                   /* PM28
END-IF                                                               /* PM28
*
IF #CGA-SCR-SUFFIX = 'FLX'
  WRITE '"FLX" is invalid as suffix on "NM"'
  WRITE 'Press enter to do a "PO XXXXX FLX"'
  MOVE 'PO' TO #CGA-SCR-COMMAND
  MOVE 'FLX' TO #CGA-SCR-SUFFIX
  FETCH 'G1000PXX'
END-IF
*
IF (NOT #CGA-CLERK = 'DRW')
  MOVE (AD=P) TO #EDS-ONLY-CV
END-IF
*
IF   (#CGA-SCR-SUFFIX = 'LET')
    AND (#CGA-SCR-ID NE 0)
  FETCH 'ATHP330A'
END-IF
*
MOVE *DATN TO #CURR-DATE
MOVE *DATN TO #CAP-ISS-DATE
*
* IF #CID-DD GT 25        /* vt3
*   ADD 1 TO #CID-MM      /* vt3
*   IF #CID-MM GT 12      /* vt3
*     MOVE 01 TO #CID-MM  /* vt3
*     ADD 1 TO #CID-YYYY  /* vt3
*   END-IF                /* vt3
* END-IF                  /* vt3
* MOVE 1 TO #CID-DD       /* vt3
*
IF   (#CGA-SCR-ID = 0)
    AND (#CGA-SCR-SUFFIX NE 'OVR')
  INPUT TEXT 'SSN or INTRO-MBR # required' USING MAP 'G1000MXX'
  FETCH 'G1000PXX'
END-IF
*
IF #CGA-SCR-ID > 0
  IF #CGA-SCR-ID > 999999 /* SSN
    PERFORM TRY-APPL
  ELSE
    IF #CGA-SCR-SUFFIX = 'LTR' OR = 'LTI' OR = 'EZP' OR = 'CHK'
        OR = 'OLD' OR = 'FPF'
      if appl-track-v.plan ne 'GT1'                            /* vt14
        PERFORM DUES-LETTER-PROCESS-ONLY
      end-if                                                   /* vt14
*
      IF *DEVICE = 'BATCH'
        ESCAPE ROUTINE
      END-IF
    ELSE
      IF   (#CGA-SCR-ID GE 500000) /* AT #
          AND (#CGA-SCR-ID LE 599999)
        PERFORM TRY-APPL
      ELSE
        INPUT TEXT 'SSN or AT # required' USING MAP 'G1000MXX'
        FETCH 'G1000PXX'
      END-IF
    END-IF
  END-IF
END-IF
*
PERFORM FIND-SSN
IF #PENDING-MEMBER
  GET NEW-V #HOLD-ISN
  RESET NEW-V.LINKED-CN (1)
END-IF
*
IF #APPL-FOUND
  MOVE APPL-TRACK-V.MODE            TO #MODE
  MOVE APPL-TRACK-V.CAP-LOAN-AMT    TO #CAP-AMOUNT         /* vt3 \/
  MOVE APPL-TRACK-V.CAP-TERM        TO #CAP-TERM
  MOVE APPL-TRACK-V.ALLOT-STRT-AMT  TO #STRT-AMOUNT        /* vt3 /\
  if appl-track-v.alot-chg-auth = 'Y' or = 'D'                /* vt6
    move 'Y'                        to #alot-chg-auth         /* vt6
  end-if                                                      /* vt6
  #PSM-REQUEST := 'GET-FPF'
  CALLNAT 'C2012NNM'                      /* NG3 Premier service
    #PSM-REQUEST                          /* Get First Placement Fee
    #CGA-CLERK
    APPL-TRACK-V.ID-NUMBER
    #ACTIVE-SEG
    #SVC-PAY-UP
    #PSM-FPF
    #CRM-RESULT
END-IF
*
IF #CAP-IND = 'Y'
* IF APPL-TRACK-V.CAP-TYPE NE 'E'                                 /* vt3                        /* PM19
*   COMPRESS #CID-MMDD-A #CID-YYYY-A INTO #EFF-DT-A LEAVING NO    /* vt3
* END-IF                                                          /* vt3
  DECIDE FOR FIRST CONDITION                           /* PM19
    WHEN APPL-TRACK-V.CAP-TYPE = 'G'                   /* PM19
      MOVE 'L' TO #AIL-IND                                                       /* vt3
      MOVE *DATN TO #AIL-DATE                                                    /* vt3
      MOVE 'G' TO #MODE
      #X-ALT-LP-AMT := FUNCTION-LOAN-PAYMENT(<#CAP-AMOUNT, #CAP-TERM, #STRT-AMOUNT>)    /* vt3
*     COMPRESS #CID-MMDD-A #CID-YYYY-A INTO #EFF-DT-A LEAVING NO
    WHEN APPL-TRACK-V.CAP-TYPE = 'E'                   /* PM19
      MOVE 'E' TO #MODE                                /* PM19
      MOVE 'E' TO #AIL-IND                                                       /* vt3
      MOVE *DATN TO #AIL-DATE                                                    /* vt3
      #X-ALT-LP-AMT := FUNCTION-LOAN-PAYMENT(<#CAP-AMOUNT, #CAP-TERM, #STRT-AMOUNT>)  /* vt3
    WHEN APPL-TRACK-V.CAP-TYPE = 'C'                   /* PM19
      MOVE '0' TO #MODE                                /* PM19
      COMPRESS #CID-MMDD-A #CID-YYYY-A INTO #EFF-DT-A LEAVING NO
    WHEN NONE                                          /* PM19
      IGNORE                                           /* PM19
  END-DECIDE                                           /* PM19
END-IF
*
MOVE 'N' TO #SCN-ALOT-PARAGR-IND
*
IF #SMOKER = ' '
  MOVE 'N' TO #SMOKER
END-IF
*
IF #MODE = ' '
  MOVE 'G' TO #MODE
END-IF
*
MOVE #HOLD-TODAY-MM TO #APPL-INDX
MOVE 0 TO #CGA-ORIG-ID
*
IF #CGA-SCR-SUFFIX NE  'OVR'
  RESET #CGA-SCR-SUFFIX
END-IF
*
IF #CGA-SCR-SUFFIX = 'OVR'
  MOVE '*** WHAT IF NM CALC SCREEN ***' TO #SCN-TITLE
  MOVE (AD=I) TO #SCN-TITLE-ATTR
ELSE
  MOVE '     AAFMAA -- NEW MEMBER' TO #SCN-TITLE
END-IF
*
IF #CAP-IND = 'Y'
  COMPRESS #NEW-MSSG 'CAP MBR' INTO #NEW-MSSG
END-IF
*
MOVE 'S' TO #PROCESS-SW  /* GET SPS/GEN INFO
PERFORM AT-LINKAGE
*
IF #PREM-RATING NE ' '
  COMPRESS #NEW-MSSG 'Rated Policy =' #PREM-RATING INTO #NEW-MSSG
END-IF
*
MOVE (AD=N) TO #OVER-CV
*
IF #PLAN = GroupTerm /* NG9
  MOVE (AD=P) TO #MODE-CV
ELSE
  MOVE (AD=U) TO #MODE-CV
END-IF

IF #PSM-FPF > 0                 /* NG3
    AND #NEW-MSSG NE #PSM-MSG
  COMPRESS #NEW-MSSG '-' #PSM-MSG INTO #NEW-MSSG
END-IF
IF  #CGA-CLERK = 'CEB' OR = 'VXT'                    /* VT7   \/
    or = 'GME'  or = 'EAC'                                                           /* vt8
  MOVE (AD=U) TO #PLAN-CV
  INPUT  TEXT #NEW-MSSG MARK *#PLAN USING MAP 'C2000MNM'
ELSE
  MOVE (AD=P) TO #PLAN-CV
  INPUT TEXT #NEW-MSSG MARK *#EFF-DT-A USING MAP 'C2000MNM'    /* PM22 PM28 vt 07292013
END-IF
* INPUT TEXT #NEW-MSSG MARK *#EFF-DT-A USING MAP 'C2000MNM'    /* PM22 PM28
*
IF #CGA-SCR-COMMAND = '*'
  IGNORE
ELSE
  IF #CGA-SCR-COMMAND NE #CGA-ORIG-COMMAND
      OR #CGA-SCR-ID NE #CGA-ORIG-ID
    END TRANSACTION
    FETCH 'G1000PXX'
  END-IF
END-IF
*
RESET #TOT-FACE
*
* IF  ((#MODE = 'E')
*     AND (#PAD-CODE NE 'E')
*     AND (NOT #PLAN = 'SP' OR = 'AL'))
*     OR #EZ-PAY-WAITING
* YK12 >
* IF  #MODE = 'E'
*     AND #PAD-CODE NE 'E'
*     AND #PLAN NE 'SP'
*     AND NOT IS-ANNUITY-LIFE (< #PLAN >)  /*NG7
*     OR #EZ-PAY-WAITING
*   MOVE TRUE TO #EZ-PAY-WAITING
*   MOVE 'Q' TO #MODE
* ELSE
RESET #EZ-PAY-WAITING
* END-IF
* < YK12
PERFORM STANDARD-EDITS
PERFORM FBR-EDITS
*
INCLUDE C2000CNM
*
PERFORM SPECIAL-EDITS
*
MOVE 'E' TO #PROCESS-SW
PERFORM AT-LINKAGE
*
IF  (#INSURED = 'T') /* TRUST OWNER
    AND (#CAP-IND = 'Y')
  REINPUT 'Orig TRUST Owner invalid with "CAP"'
    MARK *#APPL-SRC
END-IF
*
RESET #CALC-CHECK
IF #FPF-START = 0
  PERFORM CALCULATE-START-DT
  ASSIGN #CALC-CHECK = TRUE
END-IF
*
IF #FPF-END = 0
  PERFORM CALCULATE-END-DT
  ASSIGN #CALC-CHECK = TRUE
END-IF
*
PERFORM CALCULATE-FIELDS                                      /* PM17
*
IF #CALC-CHECK
  MOVE (AD=P) TO #SCR-CV #FLEX-CV
  INPUT TEXT #CHECK-FPF MARK *#FPF-START USING MAP 'C2000MNM'
  MOVE 'OVER' TO #OVER-RIDE-MAXIMUM
  IF #CGA-SCR-COMMAND NE '*'
    IF #CGA-SCR-COMMAND NE #CGA-ORIG-COMMAND
        OR #CGA-SCR-ID NE #CGA-ORIG-ID
      END TRANSACTION
      FETCH 'G1000PXX'
    END-IF
  END-IF
END-IF
*
PERFORM STANDARD-EDITS
PERFORM FBR-EDITS
PERFORM SPECIAL-EDITS
*
COMPUTE #FACE-AMT = (#SCR-FACE * 1000) + #SCR-FACE-DOLS
PERFORM CALCULATE-FIELDS
*
* IF APPL-TRACK-V.CAP-GUARD-IND = 'Y'                         /* PM16 PM19
** IF APPL-TRACK-V.CAP-IND = 'Y'                                 /* PM19    vt4
**    AND APPL-TRACK-V.CAP-TYPE = 'E'                            /* PM19    vt4
IF (APPL-TRACK-V.MODE = 'E'                                              /* vt4
    AND #CGA-SCR-SUFFIX NE 'OVR')                             /* PM16
    OR APPL-TRACK-V.E-DEPOSIT-IND = 'E'                       /* YK9
  PERFORM GET-PAD-ACCOUNT-DETAILS                             /* PM16
END-IF                                                        /* PM16
*
PERFORM UPDATE-RECORD
*
MOVE (AD=P) TO #FPF-CV
IF #PSM-FPF > 0                    /* NG3
  MOVE #PSM-FPF TO #FPF-DUES
END-IF
IF #CGA-SCR-SUFFIX = 'OVR'
  MOVE 'NO CHANGE MADE' TO #TCM-FILL
  IF #PSM-FPF > 0                 /* NG3
      AND #TXN-COMPLETE-MSG NE #PSM-MSG
    COMPRESS #TXN-COMPLETE-MSG '-' #PSM-MSG INTO #TXN-COMPLETE-MSG
  END-IF
  MOVE 'NM' TO #CGA-SCR-COMMAND
  INPUT WITH TEXT #TXN-COMPLETE-MSG MARK *#CGA-SCR-COMMAND
    USING MAP 'C2003MNM'
  if #plan ne 'GT1'                                       /* vt14
    PERFORM DUES-LETTER
  end-if                                                  /* vt14
  RESET #CGA-SCR-COMMAND
ELSE
  COMPRESS #CN1 '-1' INTO #POL-NUMBER LEAVING NO
*
  PERFORM WRITE-TRLOG
  PERFORM WRITE-STATS
  PERFORM WRITE-APPL-SOURCE
*
  MOVE 'U' TO #PROCESS-SW
  CALLNAT 'C2003SNM'
    #PROCESS-SW
    NEW-V.ID-NUMBER
    NEW-V.MILITARY-STATUS
    NEW-V.MILITARY-SERVICE
    INTRO-FLAG
    #ERR-MSG
    #I1
  END TRANSACTION
*
  IF #PSM-FPF > 0                 /* NG3
      AND #TXN-COMPLETE-MSG NE #PSM-MSG
    COMPRESS #TXN-COMPLETE-MSG '-' #PSM-MSG INTO #TXN-COMPLETE-MSG
  END-IF
  INPUT WITH TEXT #TXN-COMPLETE-MSG MARK*#CGA-SCR-COMMAND
    USING MAP 'C2003MNM'
  if #plan ne 'GT1'                                         /* vt14
    PERFORM DUES-LETTER
  end-if
*
  CALLNAT 'C2009SNM' #INDEX NEW-V.ID-NUMBER #CGA-CLERK /* MEC?
*
  IF  ((NEW-V.MODE (1) = 'G')
      OR  ((NEW-V.MODE (1) = 'A' OR = 'S' OR = 'Q')
      AND (NEW-V.MILITARY-STATUS = 'A')
      AND (NEW-V.MILITARY-SERVICE = 'A' OR = 'F')))
      AND (#CAP-IND NE 'Y')
      AND (NEW-V.PAY-STATUS (1) NE '47')
      AND (NEW-V.PLAN (1) NE 'FSO')
    MOVE 'FA' TO #CGA-SCR-COMMAND
    MOVE #CN1 TO #CGA-SCR-ID
  ELSE
    MOVE 'ST' TO #CGA-SCR-COMMAND
    MOVE #CN1 TO #CGA-SCR-ID
  END-IF
END-IF
FETCH 'G1000PXX'
*
******************************************************************************
DEFINE SUBROUTINE SPECIAL-EDITS
******************************************************************************
*
RESET #ERR-MSG                                           /* DW14
*
IF NOT #INSURED = 'S' OR = 'K' OR = 'G'                  /* NG2   PM28
    AND #PLAN NE GroupTerm
  CALLNAT 'GCKSTSXX'    /* Check Mil ID
    #ADD-STATE
    #MIL-ST
    #MIL-ID
    #INVALID
    #ERR-MSG
*
  IF #ERR-MSG NE ' '
    REINPUT #ERR-MSG MARK *#EFF-DT-A                     /* PM28
  END-IF                                              /* END DW14
END-IF
*
IF  (NOT #INSURED = 'S' OR = 'K' OR = 'G')
    OR (#RANK NE ' ')
  RESET #RANK-DISPL
  CALLNAT 'GRANKSXX' #CGA-ORIG-COMMAND #RANK #MIL-ID #INVALID
    #RANK-DISPL #RANK-LIT #RANK-DISPLAY
END-IF
*
RESET #NCO
IF (#RANK-DISPL GE 20) AND (#RANK-DISPL LE 30)
  MOVE TRUE TO #NCO
END-IF
*
IF #CGA-SCR-SUFFIX NE 'OVR'
  IF NOT #SCN-ALOT-PARAGR-IND = 'N' OR = 'O'
    REINPUT 'ALOT PARAGRAPH INDICATOR MUST BE N OR O'
      MARK *#SCN-ALOT-PARAGR-IND
  END-IF
*
  IF  (NOT #INSURED = 'S' OR = 'K' OR = 'G')
    IF (#CAP-IND = 'Y') AND (#MIL-ID = 'AR' OR = 'FR')
      REINPUT 'C.A.P. Mbrs cannot be AR/FR'
        MARK *#CAP-IND                                /* PM28
    END-IF
*                Below removed 7/29/2008 as per Lyne
*   IF #MIL-ID = 'N' OR = 'NR' OR = 'M' OR = 'MR' OR = 'CG' OR = 'CGR' /* DW14
*     REINPUT 'NAVY/MARINES/COAST GUARD NOT ALLOWED AS NEW MEMBERS'
*     MARK *#MIL-ID
*   END-IF
  END-IF
*
  MOVE #APPL-SRC TO #HOLD-SOURCE-CODE
  MOVE FALSE TO #SOURCE-CODE-FOUND
*
  FIND APPL-SRC-EDIT WITH SOURCE-CODE = #APPL-SRC
    IF APPL-SRC-EDIT.SOURCE-CODE-GROUP = MASK (A)
      MOVE TRUE TO #SOURCE-CODE-FOUND
      ESCAPE BOTTOM
    ELSE
      ESCAPE TOP
    END-IF
  END-FIND
*
  IF NOT #SOURCE-CODE-FOUND
    IF #HSC-999 = MASK (NNN)         /* MUST BE A TRIP SOURCE
      COMPUTE #REAL-TRIP-NUM = 999 - #HSC-999
      MOVE #REAL-TRIP-NUM TO #HSC-999
      IF #HSC-YY GE 50
        COMPUTE #REAL-TRIP-YY = 149 - #HSC-YY
      ELSE
        COMPUTE #REAL-TRIP-YY = 49 - #HSC-YY
      END-IF
      MOVE #REAL-TRIP-YY  TO #HSC-YY
      ESCAPE ROUTINE
    ELSE
      REINPUT 'INVALID SOURCE CODE'
        MARK *#APPL-SRC
    END-IF
  ELSE
    IF SOURCE-NEW-MBR-FLAG = 9
      REINPUT 'This Source Code not allowed for new members'
        MARK *#APPL-SRC
    END-IF
  END-IF
*
  IF #APPL-SRC NE #HOLD-SOURCE-CODE
    MOVE FALSE TO #SOURCE-CODE-FOUND
    FIND APPL-SRC-EDIT WITH SOURCE-CODE = #HOLD-SOURCE-CODE
      IF APPL-SRC-EDIT.SOURCE-CODE-GROUP = MASK (A)
        MOVE TRUE TO #SOURCE-CODE-FOUND
        ESCAPE BOTTOM
      ELSE
        ESCAPE TOP
      END-IF
    END-FIND
*
    IF NOT #SOURCE-CODE-FOUND
      REINPUT 'INVALID SOURCE CODE'
        MARK *#APPL-SRC
    END-IF
  END-IF
END-IF
*
END-SUBROUTINE /* (0768)
*
******************************************************************************
DEFINE SUBROUTINE CALCULATE-START-DT
******************************************************************************
*
MOVE #EFF-YYYYMMDD TO #WORK-DATE-YYYYMMDD
*
IF #CAP-IND = 'Y'
    AND APPL-TRACK-V.CAP-TYPE NE 'E'                                      /* PM19
  MOVE #EFF-DT TO #FPF-START
* SUBTRACT 1 FROM #FPFS-MM               /* vt3
*
  if #plan = GroupTerm                                     /* vt14  \/
    move #eff-dt to #fpf-start
  end-if                                                   /* vt14  /\
*
  IF #FPFS-MM LT 1
    MOVE 12 TO #FPFS-MM
    SUBTRACT 1 FROM #FPFS-YYYY-MDY
  END-IF
  MOVE #WORK-DATE-YYYYMMDD TO #FPFS-YYYYMMDD
ELSE
  MOVE #EFF-DT TO #FPF-START
  MOVE #WORK-DATE-YYYYMMDD TO #FPFS-YYYYMMDD
END-IF
*
END-SUBROUTINE
*
******************************************************************************
DEFINE SUBROUTINE CALCULATE-END-DT
******************************************************************************
*
IF   (#EFF-YYYYMM LT #HOLD-TODAY-YYYYMM)
* YK12 >
*   AND ((NOT #MODE = 'A' OR = 'S' OR = 'Q' OR = '0' OR = '1' OR = '2' OR = '4')
*   OR #EZ-PAY-WAITING)
    AND (#MODE = 'G' OR #MODE = 'E' OR #MODE = 'M')
* < YK12
  MOVE #HOLD-TODAY-YYYYMMDD TO #WORK-DATE-YYYYMMDD
  MOVE #EFF-DD TO #WD-DD
END-IF
*
IF #MODE = 'E' OR #EZ-PAY-WAITING                                     /* PM20
    OR #WD-DD = 1
  ADD 1 TO #WD-MM
ELSE
  ADD 2 TO #WD-MM
END-IF
*
IF #WD-MM GT 12
  SUBTRACT 12 FROM #WD-MM
  ADD 1 TO #WD-YYYY
END-IF
*
IF   (#MODE = 'A' OR = 'S' OR = 'Q' OR = '0' OR = '1' OR = '2' OR = '4')
*    AND (NOT #PLAN = 'SP' OR = 'AL')
    AND #PLAN NE 'SP'
    AND NOT IS-ANNUITY-LIFE (< #PLAN >)  /* NG7
*   AND (NOT #EZ-PAY-WAITING)            /* YK12 - Commented out - always true
  MOVE #EFF-YYYYMMDD TO #YYYYMMDD-N
  IF #MODE = 'A' OR = '1' MOVE 12 TO #FREQ END-IF
  IF #MODE = 'S' OR = '2' MOVE 6  TO #FREQ END-IF
  IF #MODE = 'Q' OR = '4' MOVE 3  TO #FREQ END-IF
  IF #MODE = '0'          MOVE 1  TO #FREQ END-IF
  IF #DD = 1 SUBTRACT 1 FROM #FREQ END-IF
  ADD #FREQ TO #YYYYMMDD.#MM
  IF #YYYYMMDD.#MM GT 12
    SUBTRACT 12 FROM #YYYYMMDD.#MM
    ADD 1 TO #YYYYMMDD.#YYYY
  END-IF
*
  IF #YYYYMM LE #HOLD-TODAY-YYYYMM
    ADD #FREQ TO #YYYYMMDD.#MM
    IF #YYYYMMDD.#MM GT 12
      SUBTRACT 12 FROM #YYYYMMDD.#MM
      ADD 1 TO #YYYYMMDD.#YYYY
    END-IF
  END-IF
*
  MOVE #YYYYMMDD-N TO #WORK-DATE-YYYYMMDD
END-IF
*
IF #WD-DD = 1
  MOVE 31 TO #WD-DD
  IF #WD-MM = 4 OR = 6 OR = 9 OR = 11
    MOVE 30 TO #WD-DD
  END-IF
*
  IF #WD-MM = 2
    MOVE 28 TO #WD-DD
  END-IF
ELSE
  IF (#WD-MM = 2) AND (#WD-DD GT 28)
    MOVE 28 TO #WD-DD
  ELSE
    SUBTRACT 1 FROM #WD-DD
  END-IF
END-IF
*
IF #HAS-FBR
  COMPRESS #WD-MM-A #WD-DD-A #WD-YYYY-A INTO #FPF-END-FBR-A LEAVING NO
END-IF
*
**IF (#PLAN = 'SP' OR = 'AL') OR (#CAP-IND = 'Y' AND APPL-TRACK-V.CAP-TYPE EQ 'C')    /* vt3
IF #PLAN = 'SP' or = GroupTerm OR IS-ANNUITY-LIFE (< #PLAN >)  /* NG7
    OR (#CAP-IND = 'Y' AND APPL-TRACK-V.CAP-TYPE EQ 'C')
  MOVE #FPF-START TO #FPF-END    /* SINCE THERE IS NO FPF
  ESCAPE ROUTINE
END-IF
*
COMPRESS #WD-MM-A #WD-DD-A #WD-YYYY-A INTO #FPF-END-A LEAVING NO SPACE
*
END-SUBROUTINE
*
INCLUDE C2001CNM
*
******************************************************************************
DEFINE SUBROUTINE UPDATE-RECORD
******************************************************************************
*
#NAME := FUNCTION-DISP-CT-NAME(<#NAME-FIRST,#NAME-MIDDLE,#NAME-LAST,#NAME-SUFFIX>) /* PM22
*
MOVE 'Y' TO NEW-V.MEMBER-FLAG
RESET NEW-V.MEMBERSHIP-DRIVE
*
RESET NEW-V.FIRS-LOCATION-CODE (1) /* INIT TO MBR OWNER
IF #INSURED = 'S' OR = 'K' OR = 'G'
  MOVE 'X' TO NEW-V.FIRS-LOCATION-CODE (1) /* INIT TO LINKED MBR OWNER
  IF POLICY-TYPE = 'N' OR = 'T' OR = 'I'
    MOVE '8' TO NEW-V.FIRS-LOCATION-CODE (1) /* NON-MBR OWNER
  END-IF        /* N SO 2ND ADDRESS GETS BILLED IF MODE = A/S/Q/M
ELSE
  IF POLICY-TYPE = 'S'
    MOVE '2' TO NEW-V.FIRS-LOCATION-CODE (1) /* NON-MBR OWNER
  END-IF
END-IF
*
CALLNAT 'C2007SNM'
  #VAR-TERM-CAT
  POLICY-TYPE
  #APPL-FOUND
  CONV-DURATION (1)
*
IF (#ALOT-CHG-AUTH = 'Y' or = 'D' )      /* vt6
    AND (NOT #INSURED = 'S' OR = 'K' OR = 'G')    /* DW5
  MOVE #ALOT-CHG-AUTH TO NEW-V.ALOT-CHG-AUTH
  MOVE #HOLD-TODAY-YYYYMMDD TO NEW-V.ALOT-CHG-AUTH-DATE   /* YK2
END-IF
*
MOVE 'I' TO NEW-V.PROCESS-IND
*
IF #INSURED = 'S' OR = 'K' OR = 'G'
  MOVE #INSURED TO NEW-V.INTRO-FLAG
  MOVE #LINKED-CN TO NEW-V.LINKED-CN (1)
ELSE
  IF #CAP-IND = 'Y'
    MOVE 'P' TO NEW-V.INTRO-FLAG
  ELSE
    MOVE 'O' TO NEW-V.INTRO-FLAG
  END-IF
END-IF
*
MOVE NEW-V.INTRO-FLAG TO #INSURED
*
MOVE *DATN TO DATE-ENTERED (1)
IF #CAP-IND = 'Y'
  MOVE #EFF-YYYYMMDD TO #YYYYMMDD-N
  SUBTRACT 1 FROM #YYYYMMDD.#MM
  IF #YYYYMMDD.#MM LT 1
    MOVE 12 TO #YYYYMMDD.#MM
    SUBTRACT 1 FROM #YYYYMMDD.#YYYY
  END-IF
*
  MOVE #YYYYMM TO CAP-ENTRY-DATE
  MOVE #YYYYMMDD.#MM TO #CAP-ENTRY-MM        /* YK1
  CALLNAT 'GCAPN001' NEW-V.ID-NUMBER #SET    /* NG5
  MOVE 999 TO CONV-DURATION (1)
END-IF
*
MOVE #HOLD-TODAY-YYYYMMDD TO NEW-V.DATE-ACCT-UPDATE
MOVE #HOLD-TODAY-YYYYMMDD TO NEW-V.DATE-OTHER-UPDATE
MOVE #HOLD-TODAY-YYYYMMDD TO #WORK-DATE-YYYYMMDD
MOVE #HOLD-TODAY-YYYYMM   TO NEW-V.MBR-SINCE
MOVE 'N'  TO NEW-V.PROXY
*
IF NOT NEW-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'    /* DW2
  MOVE 'A' TO NEW-V.ALOT-SW
END-IF
*
MOVE 'N'  TO NEW-V.ANNUAL-RPT-FLAG  /* Was "F"        /* DW12   /* Was 'S'    bz1
MOVE '2' TO NEW-V.ONLINE-ACTION-GN
MOVE 1   TO NEW-V.NUMBER-MEMBERSHIPS /* 1 MEANS AT LEAST 1
MOVE 1   TO NEW-V.LAST-SEG-USED
MOVE 1   TO NEW-V.NUM-MBRSHIPS (1)
MOVE 'D' TO NEW-V.STATUS (1)
*
IF #FPF = 0 /* MUST PRECEDE PERFORM PROCESS-PUSP
  if #plan eq GroupTerm                                                     /* vt14  \/
    move '42' to new-v.pay-status (1)
  else
    MOVE '21' TO NEW-V.PAY-STATUS (1)
  end-if                                                                    /* vt14  \/
ELSE
  MOVE '12' TO NEW-V.PAY-STATUS (1)
END-IF
*
MOVE #PREM-RATING TO PREM-RATING (1)
*
MOVE #AGE          TO NEW-V.ISSUE-AGE-N (1)
MOVE #EFF-YYYYMMDD TO NEW-V.ISSUE-DATE  (1)
MOVE #AIL-DATE     TO NEW-V.X-ALT-LP-DATE (1)                      /* vt3
MOVE #AIL-IND      TO NEW-V.X-ALT-LP-IND (1)                       /* vt3
MOVE #X-ALT-LP-AMT TO NEW-V.X-ALT-LP-AMT (1)                       /* vt3
COMPRESS NEW-V.ID-NUMBER '-1' INTO NEW-V.POLICY-ID(1) LEAVING NO
* move #alot-chg-auth to new-v.alot-chg-auth                          /* vt6
*
* YK11 YK12 >
DECIDE FOR FIRST CONDITION
  WHEN #MODE = #CC-MODE(*) OR #MODE = #EZ-MODE
    NEW-V.BILL-CYCLE(1) := F-BILL-CYCLE(<#EFF-DD,#NEW-POLICY>)
  WHEN NONE
    NEW-V.BILL-CYCLE(1) := '3'
END-DECIDE
* < YK11 YK12
*
IF #PLAN = 'LT'    /* SO THAT IN CASES OF DUP ISS-DATES
  MOVE 5 TO NEW-V.SPLIT-IND (1)   /* THE BD CAN TELL THEM APART
END-IF
*
IF #PLAN = 'RT'
  MOVE 6 TO NEW-V.SPLIT-IND (1)
END-IF
*
* IF (#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z') /* VAR TERM /* YK6
IF F-LT2-TRUE(<#PLAN>)                               /* YK6
  MOVE 7 TO NEW-V.SPLIT-IND (1)
END-IF
*
IF #PLAN = 'EZ'                                          /* YK7
  MOVE 8 TO NEW-V.SPLIT-IND (1)                          /* YK7
END-IF                                                   /* YK7
*
MOVE #HOLD-PDUP    TO NEW-V.PAID-UP-DATE    (1)
MOVE #HOLD-PD-THRU TO NEW-V.PAID-TO-DATE    (1)
MOVE #HOLD-PD-THRU TO NEW-V.BILL-TO-DATE    (1)
MOVE #FACE-AMT     TO NEW-V.FACE-AMOUNT     (1)
MOVE #MODE         TO NEW-V.MODE            (1)
MOVE 'N'           TO NEW-V.CONVERSION-FLAG (1)
*
IF #SMOKER = 'N'
  MOVE 'N' TO NEW-V.SMOKER-FLAG (1)
ELSE
  MOVE 'S' TO NEW-V.SMOKER-FLAG (1)
END-IF
*
MOVE #APPL-SRC TO NEW-V.APPL-SOURCE
*
MOVE '*' TO NEW-V.TRIGGER-FLAG
*
**IF #PLAN = 'SP' OR 'AL'
IF #PLAN = 'SP' OR IS-ANNUITY-LIFE (< #PLAN >)  /* NG7
  RESET #APREM #MPREM
ELSE
  MOVE #APREM TO NEW-V.ANNUAL-PREM (1)
END-IF
MOVE #PLAN  TO #PLAN-COMBINE
*
MOVE 1 TO #INDEX
IF #FLEX-PLAN
*    AND (#PLAN NE 'AL')
    AND NOT IS-ANNUITY-LIFE (< #PLAN >)  /* NG7
  PERFORM PROCESS-FLEX-PLAN
*
  MOVE 'F' TO #PLAN-SUFFIX
  MOVE #PLAN-COMBINE TO NEW-V.PLAN (1)
ELSE
* IF #PLAN = 'SP' OR = 'AL'
  IF #PLAN = 'SP' OR IS-ANNUITY-LIFE (< #PLAN >)  /* NG7
    PERFORM PROCESS-PUSP
  ELSE
    IF #PLAN = '20' OR = '30'
      MOVE 'P' TO #PLAN-SUFFIX
    END-IF
*
    MOVE #PLAN-COMBINE TO NEW-V.PLAN (1)
  END-IF
END-IF
*
MOVE #FPF TO NEW-V.X-FIRST-PLACE-FEE (1)
MOVE #FPF-DUES TO NEW-V.DUES-FPF
*
IF #HAS-FBR
  MOVE #SCR-FBR-PLAN (1) TO NEW-V.RID-PLAN (1)
  MOVE #EFF-YYYYMMDD     TO NEW-V.RID-EFF-DT (1)
  MOVE #HOLD-PD-THRU-FBR TO NEW-V.RID-PD-TO  (1)
  MOVE #SCR-FBR-SPS      TO NEW-V.RID-SPS
  MOVE #FPF-FBR          TO NEW-V.X-RID-FPF (1)
END-IF
*
#AT-FIRST-PLACE-FEE := NEW-V.X-FIRST-PLACE-FEE (1)     /* YK3
  + NEW-V.X-RID-FPF (1)         /* YK3
*
PERFORM LOAD-PARAMETERS                                                /* PM3
CALLNAT 'C1100SAI'                                                     /* PM3
  #PDA-AUTO-ISSUE
*
CALLNAT 'C1102SAI'                                                     /* PM3
  #PDA-AUTO-ISSUE
  #PDA-C1002SAT
*
IF #AUTO-ISSUE-KEY-FOUND-1100                                          /* PM3
  NEW-V.AUTO-ISSUE (1) := #AUTO-ISSUE                                  /* PM3
END-IF                                                                 /* PM3
*
IF #CGA-SCR-SUFFIX = 'OVR'
  ESCAPE ROUTINE
END-IF
*
IF #PENDING-MEMBER
  MOVE NEW-V.ID-NUMBER TO #CN1
  MOVE #CN1 TO #CGA-SCR-ID
ELSE
  FIND (1) NM-T01 WITH TERMINAL-ID = 'CNMASTER'
    MOVE LAST-CN TO #CN1
    ADD 1 TO LAST-CN
    UPDATE RECORD (1192)
    MOVE #CN1 TO NEW-V.ID-NUMBER
    MOVE #CN1 TO #CGA-SCR-ID
  END-FIND
END-IF
*
FIND ST-V WITH SSN = NEW-V.SSN /* IN CASE AN AFSC REC EXISTS
*  IF (ST-V.PROCESS-IND = 'S') AND NOT #CONTACT                RE1
  IF AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)                     /* RE1 PM28
    MOVE ST-V.ID-NUMBER TO NEW-V.OTHER-COMPANY-ID
    MOVE NEW-V.ID-NUMBER TO ST-V.OTHER-COMPANY-ID
*
    UPDATE (1201)
    ESCAPE BOTTOM
  END-IF
END-FIND
*
MOVE *DATN TO NEW-V.DTS-DATN
MOVE *TIMN TO NEW-V.DTS-TIMN

IF ( APPL-TRACK-V.PLAN = MASK('S') AND APPL-TRACK-V.PLAN <> MASK('SP') )  /* bz-4190
    OR ( APPL-TRACK-V.RATING-CODE = '1' OR = '2' OR = '3')                /* bz-4190
  CALLNAT 'C1SUSNAT' NEW-V.ID-NUMBER '6'                                  /* bz-4190
END-IF                                                                    /* bz-4190
*
IF #PENDING-MEMBER
*          NG8         \/\/\/
  CALLNAT 'RTEN0006'
    #HOLD-APPL-ISN
    #POLICY-NUMBER
    NEW-V.ISSUE-DATE (1)
    NEW-V.PLAN       (1)
    NEW-V.VERSION    (1)
  UPDATE (0512)
**ELSE                                  /* NG4 No Status record creation
*  STORE NEW-V
*  MOVE *ISN (1230) TO #HOLD-ISN
END-IF
*
#PSM-REQUEST := 'SET-FPF'
CALLNAT 'C2012NNM'                      /* NG3 Premier service
  #PSM-REQUEST                          /* Get First Placement Fee
  #CGA-CLERK
  APPL-TRACK-V.ID-NUMBER
  #ACTIVE-SEG
  #SVC-PAY-UP
  #PSM-FPF
  #CRM-RESULT
*
CALLNAT 'C2010SNM'
  NEW-V.ID-NUMBER
  #ACTIVE-SEG
  #HAS-FBR-ONLY-ATT-POL
  #CGA-CLERK
  #DEP-RCVD
  APPL-TRACK-V.E-DEPOSIT-IND                           /* YK9
  #ABORT
  #PSM-FPF                                             /* YK9
*
IF #CAP-IND = 'Y'         /* TT1
  COMPRESS NEW-V.ID-NUMBER '-1' INTO #LOAN.LOAN-POLICY-NUMBER LEAVING NO
  #LOAN.LOAN-INITIAL-AMOUNT   := APPL-TRACK-V.CAP-LOAN-AMT
  #LOAN.LOAN-INTEREST-RATE    := 1.5
  #LOAN.LOAN-NUMBER           := 1
  #LOAN.LOAN-STATUS           := 'P'
  #LOAN.LOAN-TYPE             := 'C'
  #LOAN.CONTACT-ID            := NEW-V.MEMBER-CONTACT-ID
  #LOAN.ID-NUMBER             := NEW-V.ID-NUMBER
  CALLNAT 'CAPN0001'
    #ADD
    #LOAN
    #RETURN-MSG
END-IF
*
IF #ABORT = 'Y'
  BACKOUT TRANSACTION
  MOVE 'CR' TO #CGA-SCR-COMMAND
  FETCH 'G1000PXX'
END-IF
*
* CALLNAT 'C2012SNM' NEW-V.ID-NUMBER #I3 #EZ-PAY-WAITING /* PM17
*                    APPL-TRACK-V.DEP-REC-AMOUNT (1)     /* PM17
*
END TRANSACTION
*
IF   (NOT #INSURED = 'S' OR = 'K' OR = 'G')              /* DW13
    AND (NEW-V.MODE (1) = 'G')
  MOVE TRUE TO #FORCE-A
  CALLNAT 'GAUTHSXX' NEW-V.ID-NUMBER #CGA-CLERK #FORCE-A
END-IF
*
MOVE 'P' TO #PROCESS-SW  /* PROCESS LINKAGE
PERFORM AT-LINKAGE
*
IF   (NEW-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G' OR = 'F')
    AND (#LINKED-CN NE 0)     /* OPTIONAL FOR "F"
  FIND (1) ST-V WITH MEMBER-KEY = #LINKED-CN-A
    IF NO RECORDS FOUND
      FIND (1) ST-V WITH WIDOW-KEY = #LINKED-CN-A
        PERFORM SETUP-LINKAGE
        UPDATE (1293)
      END-FIND
      ESCAPE BOTTOM
    END-NOREC
*
    PERFORM SETUP-LINKAGE
    UPDATE (1291)
  END-FIND
END-IF
*
END TRANSACTION
*
* Following must follow END transaction above
IF   (NEW-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G')           /* DW13
    AND (#LINKED-CN NE 0)
  FIND (1) ST-V WITH MEMBER-KEY = #LINKED-CN-A  /* Set ALOT AUTH to A on Mbr
    IF NO RECORDS FOUND
      FIND (1) ST-V WITH WIDOW-KEY = #LINKED-CN-A
        PERFORM SET-MBR-ALOT-AUTH
      END-FIND
      ESCAPE BOTTOM
    END-NOREC
*
    PERFORM SET-MBR-ALOT-AUTH
  END-FIND
END-IF                                                   /* END DW13

FOR #I1 3 TO 1 STEP -1
*  IF APPL-TRACK-V.REM-LST-10 (#I1) NE ' '
  IF SUBSTR(APPL-TRACK-V.REMARKS(#I1),61,10) NE ' '
    COMPRESS #TXN-COMPLETE-MSG
      '- AT remarks dropped last 10 characters' INTO #TXN-COMPLETE-MSG
  END-IF
*
  IF   (APPL-TRACK-V.REMARKS (#I1) NE ' ')
      AND (APPL-TRACK-V.REMARKS (#I1) NE MASK ('THIS "SPOUS'))
      AND (APPL-TRACK-V.REMARKS (#I1) NE MASK ('THIS "CHILD'))
      AND (APPL-TRACK-V.REMARKS (#I1) NE MASK ('THIS "GRAND'))
      AND (APPL-TRACK-V.REMARKS (#I1) NE MASK ('THIS "GENER'))
      AND (APPL-TRACK-V.REMARKS (#I1) NE MASK ('SPOUSE Pol'))
      AND (APPL-TRACK-V.REMARKS (#I1) NE MASK ('CHILD Pol'))
      AND (APPL-TRACK-V.REMARKS (#I1) NE MASK ('GRANDCHILD Pol'))
      AND (APPL-TRACK-V.REMARKS (#I1) NE
      '*Child not covered by rider:') /* NAME NOT ENTERED
      AND (APPL-TRACK-V.REMARKS (#I1) NE
      '*CHILD NOT COVERED BY RIDER:') /* NAME NOT ENTERED
    ADD 1 TO #INT
    MOVE APPL-TRACK-V.REMARKS (#I1) TO #NOTE-TEXT (#INT)
  END-IF
END-FOR
*
IF    #FLEX-PLAN
    AND ((#LUMP-SUM NE 0) OR (#EXCH-1035 NE 0))
  IF (#LUMP-SUM NE 0) AND (#EXCH-1035 = 0)
*     AND (#PLAN NE 'AL')
      AND NOT IS-ANNUITY-LIFE (< #PLAN >)  /* NG7
    ADD 1 TO #INT
    MOVE EDITED #LUMP-SUM (EM=ZZZ,ZZ9.99) TO #AMT-DISP
    COMPRESS '$' #AMT-DISP INTO #AMT-DISP LEAVING NO
    COMPRESS '*FLEX AMT ' #AMT-DISP 'ON POL' #EFF-MM-A
      INTO #NOTE-TEXT (#INT)
    COMPRESS #NOTE-TEXT (#INT) '/' #EFF-DD-A '/' #EFF-YYYY-A
      INTO #NOTE-TEXT (#INT) LEAVING NO
  ELSE
    IF #EXCH-1035 NE 0
      ADD 1 TO #INT
      MOVE EDITED #EXCH-1035 (EM=ZZZ,ZZ9.99) TO #AMT-DISP
      COMPRESS '$' #AMT-DISP INTO #AMT-DISP LEAVING NO
      COMPRESS '*1035 EXCH' #AMT-DISP 'ON POL' #EFF-MM-A
        INTO #NOTE-TEXT (#INT)
      COMPRESS #NOTE-TEXT (#INT) '/' #EFF-DD-A '/' #EFF-YYYY-A
        INTO #NOTE-TEXT (#INT) LEAVING NO
*
      IF #LUMP-SUM NE 0
        MOVE EDITED #LUMP-SUM (EM=ZZZ,ZZ9.99) TO #AMT-DISP
        COMPRESS '$' #AMT-DISP INTO #AMT-DISP LEAVING NO
        COMPRESS #NOTE-TEXT (#INT) 'PLUS' #AMT-DISP 'PRMS'
          INTO #NOTE-TEXT (#INT)
      END-IF
    END-IF
  END-IF
END-IF
*
MOVE #CGA-CLERK TO #CLERK
*
IF #INT NE 0
  CALLNAT 'E4205SDM' NEW-V.ID-NUMBER
    #INT
    #CLERK
    #NOTE-TEXT (1:10)
END-IF
*
END TRANSACTION
*
RESET MBRSHIP-MTD-DET-V
COMPUTE MBRSHIP-MTD-DET-V.ENTRY-DATE =
  99999999 - #HOLD-TODAY-YYYYMMDD
MOVE #HOLD-ISN              TO MBRSHIP-MTD-DET-V.REC-ISN
MOVE 'N'                    TO MBRSHIP-MTD-DET-V.CODE
MOVE NEW-V.ISSUE-DATE   (1) TO MBRSHIP-MTD-DET-V.ISSUE-DATE
MOVE NEW-V.ID-NUMBER        TO MBRSHIP-MTD-DET-V.ID-NUMBER
COMPUTE MBRSHIP-MTD-DET-V.NUM-MBRSHIPS = #SCR-FACE / 5
STORE MBRSHIP-MTD-DET-V
*
MOVE *PROGRAM TO #PROGRAM
CALLNAT 'MSSNL003'           /* NG99
  MBRSHIP-MTD-DET-V.ID-NUMBER
  MBRSHIP-MTD-DET-V.CODE
  #CGA-USER-COMPANY
  MBRSHIP-MTD-DET-V.ISSUE-DATE
  #PROGRAM
  #USE-TIMX
*
END TRANSACTION
*
IF #HAS-FBR
  RESET MBRSHIP-MTD-DET-V
  COMPUTE MBRSHIP-MTD-DET-V.ENTRY-DATE =
    99999999 - #HOLD-TODAY-YYYYMMDD
  MOVE #HOLD-ISN              TO MBRSHIP-MTD-DET-V.REC-ISN
  MOVE 'Y'                    TO MBRSHIP-MTD-DET-V.CODE
  MOVE NEW-V.ISSUE-DATE (1)   TO MBRSHIP-MTD-DET-V.ISSUE-DATE
  MOVE NEW-V.ID-NUMBER        TO MBRSHIP-MTD-DET-V.ID-NUMBER
  COMPUTE MBRSHIP-MTD-DET-V.NUM-MBRSHIPS = #SCR-FACE / 5
  STORE MBRSHIP-MTD-DET-V
END-IF
*
END TRANSACTION
*
IF #APPL-FOUND
  GET A-UPDATE-APPL #HOLD-APPL-ISN
  MOVE NEW-V.ID-NUMBER TO A-UPDATE-APPL.MEMBER-CN
  MOVE 'A'   TO A-UPDATE-APPL.ACTION-FLAG
  MOVE 'A '  TO A-UPDATE-APPL.AT-STATUS
  MOVE #DEP-RCVD TO A-UPDATE-APPL.DEP-RCVD
  MOVE #AT-FIRST-PLACE-FEE TO A-UPDATE-APPL.FIRST-PLACE-FEE  /* YK3
  IF #EZ-PAY-WAITING                                         /* YK4
    A-UPDATE-APPL.EZP-WAITING := 'Y'                         /* YK4
  END-IF                                                     /* YK4
  CALLNAT 'GADDNSXX' /* ADD A STATUS NOTE
    #CGA-CLERK
    A-UPDATE-APPL.AT-STATUS
    A-UPDATE-APPL.ST-NOTE-DATE   (1:50)
    A-UPDATE-APPL.ST-NOTE-USER   (1:50)
    A-UPDATE-APPL.ST-NOTE-STATUS (1:50)
    A-UPDATE-APPL.ACTION-DATE
  UPDATE (1425)
*****************************************

END-IF
*
END TRANSACTION
*
IF #APPL-FOUND
  FIND (1) NT-V WITH ID-NUMBER = 800106   /* UPDATE "CAP" 800106 REC
    IF #CAP-IND = 'Y'
      ADD 1 TO CAPS-CONV-ORIG (1, 13) /* ALL UNKNOWN A/O 9/2002
*     ADD 1 TO CAPS-CONV-MON (#CURR-MM-N)                /* YK1
      ADD 1 TO CAPS-CONV-MON-A (#CAP-ENTRY-MM)           /* YK1
      IF #APPL-FOUND
        SUBTRACT 1 FROM CAPS-AT-P4
        ADD      1 TO   CAPS-AT-A
      END-IF
    END-IF
*
    UPDATE (1449)
  END-FIND
END-IF
*
IF #APPL-FOUND
  FIND (1) NT-V WITH ID-NUMBER = 800108  /* PROSPECTIVE POLS
    FOR #I1 1 TO 85
      IF (USER-SOURCE = PR-USER (#I1)) AND (USER-SOURCE NE ' ')
        ADD      1   TO PR-POLS-ISSUED (#I1)
        SUBTRACT 1 FROM PR-POLS-CURR (#I1)
        ESCAPE BOTTOM
      END-IF
    END-FOR
    UPDATE (1465)
  END-FIND
END-IF
*
*
* Send a request for a package printing                     YK3
*
* IF NOT #CONTACT                                          /* YK3 PM28
COMPRESS NEW-V.ID-NUMBER '-1' INTO #POLICY-NUMBER
  LEAVING NO
* FIND POS-ST WITH ID-NUMBER = NEW-V.ID-NUMBER
*
* END-FIND
* NEW-V.POLICY-ID(1) := #POLICY-NUMBER                       /* TT3
*

PERFORM CREATE-ROLES

* UPDATE                                                     /* TT3
* END TRANSACTION                                            /* TT3
*
if appl-track-v.plan ne GroupTerm                                          /* vt14
  #PROCESS-NAME         := 'POLPRINT'                                      /* vt3 \/
  #ID-NUMBER            := #POLICY-NUMBER
  #ORDER-LIST           := 'Policy'
  CALLNAT 'GPRN0001' #PROCESS-NAME #ID-NUMBER #ORDER-LIST #RESPONSE-CODE
end-if                                                                    /* vt14
* YK9 <
* Process Credit Card  / E-check payment if requested
*
IF #APPL-FOUND AND (APPL-TRACK-V.E-DEPOSIT-IND = 'E' OR APPL-TRACK-V.E-DEPOSIT-IND = 'C')  /* YK10
  #POL-SEG := 1
  CALLNAT 'WEPN0001' APPL-TRACK-V.ID-NUMBER
    #POL-SEG
    APPL-TRACK-V.E-DEPOSIT-IND
    #ERROR-CODE
*
  IF #ERROR-CODE <> ' '
*   COMPRESS #TXN-COMPLETE-MSG F-ERROR-DESCRIPTION(<#ERROR-CODE>) INTO #TXN-COMPLETE-MSG
    #TXN-COMPLETE-MSG := 'Error charging FPF. Please, correct data and use WebCharge'
  END-IF
ELSE
* YK10 >
  IF APPL-TRACK-V.E-DEPOSIT-IND = 'F'
    #TXN-COMPLETE-MSG := 'FPF has not been charged. Please, correct data and use WebCharge'
  END-IF
* < YK10
END-IF
* > YK9
*
* ng11: Change synch point - after policy roles are created
*
* IF #APPL-FOUND               /* NG1 PM28
*   CALLNAT 'MBRNEWST'
*     APPL-TRACK-V.ID-NUMBER
*     NEW-V.ID-NUMBER
*     #CRM-RESULT
* END-IF

END-SUBROUTINE /* (0987)
*
******************************************************************************
DEFINE SUBROUTINE SETUP-LINKAGE
******************************************************************************
*
* IF  (ST-V.PROCESS-IND = 'G') /* SPS/GEN LINKED TO G/F SHOULD BE SYNCED      RE1
IF  (ST-V.PROCESS-IND = 'G' OR = 'S') /*SPS/GEN LINKED TO G/F SHOULD BE SYNCED /*RE1
    OR (ST-V.OTHER-COMPANY-ID NE 0)    /* OR COMBO MEMBER
  FIND (1) XX-ST WITH MEMBER-KEY = NEW-V.ID-NUMBER-A
    MOVE 'A' TO XX-ST.ALOT-SW
    UPDATE (1541)
  END-FIND
END-IF
*
MOVE ST-V.ALOT-AMT TO #ALOT-AMT
FOR #I1 1 TO 30
  IF ST-V.LINKED-CN (#I1) = APPL-TRACK-V.ID-NUMBER
    RESET ST-V.LINKED-CN (#I1)
    ESCAPE BOTTOM
  END-IF
END-FOR
*
FOR #I1 1 TO 30
  IF ST-V.LINKED-CN (#I1) = 0
    MOVE NEW-V.ID-NUMBER TO ST-V.LINKED-CN (#I1)
    ESCAPE BOTTOM
  END-IF
END-FOR
*
END-SUBROUTINE
*
******************************************************************************
DEFINE SUBROUTINE SET-MBR-ALOT-AUTH                      /* DW13
******************************************************************************
*

MOVE TRUE TO #FORCE-A
CALLNAT 'GAUTHSXX' ST-V.ID-NUMBER  /*Set Mbr's ALOT-CHG-AUTH to A
  #CGA-CLERK #FORCE-A  /* This will update linked member
*
END-SUBROUTINE
*
******************************************************************************
DEFINE SUBROUTINE WRITE-TRLOG
******************************************************************************
*
MOVE #NAME         TO A-TRANSACTION-REGISTER-VIEW.NAME
MOVE NEW-V.PROCESS-IND TO A-TRANSACTION-REGISTER-VIEW.PROCESS-IND
MOVE #CN1          TO A-TRANSACTION-REGISTER-VIEW.ID-NUMBER
MOVE *DATN         TO A-TRANSACTION-REGISTER-VIEW.DATE-LAST-UPDATE
MOVE #CGA-CLERK    TO A-TRANSACTION-REGISTER-VIEW.CLERK-ID
MOVE *INIT-ID      TO A-TRANSACTION-REGISTER-VIEW.TERMINAL-ID
MOVE *DATN         TO A-TRANSACTION-REGISTER-VIEW.TRANSACTION-DATN
MOVE *TIMN         TO A-TRANSACTION-REGISTER-VIEW.TRANSACTION-TIMN
MOVE 'NM-NU MBR'   TO A-TRANSACTION-REGISTER-VIEW.NEW-DESCRIPTION(1)
MOVE #NAME         TO A-TRANSACTION-REGISTER-VIEW.NEW-NAME(1)
* MOVE ' SPS'    TO NEW-SPS-MSG (1)      /* PM22
* MOVE NEW-V.NAME-SP TO NEW-SPS (1)      /* PM22
* MOVE #SCR-SPS-DOB  TO NEW-SPS-DOB (1)  /* PM22
MOVE #ADD-LINE-1   TO NEW-ADDR1(2)       /* PM28
MOVE #ADD-LINE-2   TO NEW-ADDR2(2)       /* PM28
MOVE #ADD-LINE-3   TO NEW-ADDR3(2)       /* PM28
MOVE EDITED #ZIP-CODE-5(EM=99999) TO NEW-ZIP1(2)  /* PM28
MOVE EDITED #ZIP-CODE-4(EM=9999)  TO NEW-ZIP2(2)  /* PM28
MOVE 'NEW BUSINESS ISSUED ' TO NEW-LIT1(3)
MOVE #EFF-YYYYMMDD   TO NEW-EFF-DT(3)
MOVE ' PLAN '      TO NEW-LIT2(3)
MOVE #PLAN-COMBINE TO NEW-PLAN(3)
MOVE EDITED #FACE-AMT (EM=Z,ZZ9,999) TO NEW-FACE(3)     /*TT1
MOVE 'SMOK FLAG' TO NEW-SMOKER-MSG(3)
MOVE #SMOKER       TO NEW-SMOKER(3)
**IF #PLAN = 'SP' OR = 'AL'
IF #PLAN = 'SP' OR IS-ANNUITY-LIFE (< #PLAN >)  /* NG7
  MOVE 'SP '      TO NEW-PLAN(3)
  MOVE 'SINGLE PREM=' TO NEW-SINGL-PREM-MSG(3)
  MOVE #SPM-AMT   TO NEW-SINGL-PREM(3)
END-IF
*
MOVE ' TEL' TO NEW-TEL-MSG (3)
COMPRESS #SCR-TEL-HOME-1 #SCR-TEL-HOME-2 #SCR-TEL-HOME-3
  INTO NEW-TEL-HOME (3) LEAVING NO
COMPRESS #SCR-TEL-WORK-1 #SCR-TEL-WORK-2 #SCR-TEL-WORK-3
  INTO NEW-TEL-WORK (3) LEAVING NO
*
ASSIGN NEW-MODE-LBL(4) = ' MOD'
* YK12 >
* IF #EZ-PAY-WAITING
*   MOVE 'E' TO NEW-MODE (4)
* ELSE
MOVE #MODE TO NEW-MODE (4)
* END-IF
* < YK12
ASSIGN NEW-FPF-LBL(4) = ' FPF'
MOVE EDITED #FPF (EM=ZZZ,ZZZ.99) TO NEW-FPF(4)
ASSIGN NEW-PD-TO-LBL(4) = ' PDTO'
MOVE NEW-V.PAID-TO-DATE (1) TO NEW-PD-TO(4)
*
MOVE ' INTRO-FLG'     TO NEW-INTRO-FLAG-MSG (4)
MOVE NEW-V.INTRO-FLAG TO NEW-INTRO-FLAG (4)
*
IF #INSURED = 'D'
  MOVE ' TRUST-OWNER' TO NEW-TRUST-OWNER (4)
END-IF
*
IF #HAS-FBR
  MOVE 'FBR:'       TO NEW-FBR-LBL (4)
  MOVE RID-PLAN (1) TO NEW-FBR-PLAN (4)
END-IF
*
STORE A-TRANSACTION-REGISTER-VIEW
END TRANSACTION
*
END-SUBROUTINE
*
******************************************************************************
DEFINE SUBROUTINE DUES-LETTER
******************************************************************************
*
MOVE '*' TO #CGA-SCR-COMMAND
COMPRESS NEW-V.ID-NUMBER '-1' INTO #INSURED-POL LEAVING NO
*
CALLNAT 'CDUELSNM' #CGA-SCR-ID #CGA-SCR-SUFFIX #CGA-SCR-COMMAND
  #CGA-CLERK NEW-V.SSN #INSURED #NAME
  #CN1-A #APREM #MPREM #EFF-DT #FPF-START
  #FPF-END #MODE #FPF #MIL-ST #MIL-ID
  #FPF-DUES #PLAN #ALOT-AMT #CGA-ORIG-COMMAND
  #E-DUES #G-DUES #A-DUES #S-DUES #Q-DUES
  #FLEX-PLAN #FLEX-YEARS #CAP-IND #INSURED-POL
  NEW-V.LINKED-CN (1:1) #PAYS-DUES
  #HAS-FBR #FPF-FBR #FBR-MON-PREM
  CONV-DURATION (1) #FACE-AMT #SMOKER #AGE NEW-V.PREM-RATING (1)
  #NO-FPF #DB-CR-AMT #WORK-PREM-HOLD #PAD-LAST-MON-AMT #XTRA-AMT-DUE
  #INDEX #DEP-RCVD DATE-ENTERED (1) #EZ-PAY-WAITING                   /* PM17
*
END-SUBROUTINE
*
******************************************************************************
DEFINE SUBROUTINE FIND-SSN
******************************************************************************
*
RESET #PENDING-MEMBER
IF APPL-TRACK-V.MEMBER-CN NE ' '
  FIND ST-V WITH MEMBER-KEY = APPL-TRACK-V.MEMBER-CN
    IF NO RECORDS FOUND
      ESCAPE BOTTOM
    END-NOREC
*
    IF ST-V.PROCESS-IND = 'C'
        AND ( ST-V.INTRO-FLAG = 'A' OR= 'O' )    /* NG4
      MOVE TRUE TO #PENDING-MEMBER
      MOVE *ISN (1675) TO #HOLD-ISN
    END-IF
  END-FIND
END-IF
*
FIND ST-V WITH SSN = #SSN
*  IF (ST-V.PROCESS-IND NE 'S') AND NOT #CONTACT                       RE1
  IF NOT AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)                         /* RE1 PM28
      AND (ST-V.ID-NUMBER GE 1900)
      AND ((ST-V.ID-NUMBER-A NE APPL-TRACK-V.MEMBER-CN)
      OR  ((ST-V.ID-NUMBER-A = APPL-TRACK-V.MEMBER-CN)
      AND (NOT #PENDING-MEMBER)))
*
    IF ST-V.PROCESS-IND = 'C'
        AND ST-V.INTRO-FLAG NE 'A'
      ESCAPE TOP
    END-IF
*
    IF APPL-TRACK-V.ID-NUMBER = 578466 OR = 578467 OR = 578468
      ESCAPE BOTTOM
    END-IF
    MOVE 'SSN already on file' TO #MSG
    IF APPL-TRACK-V.MEMBER-CN NE ' '
      COMPRESS #MSG '- please press enter to use AI' INTO #MSG
      MOVE 'AI' TO #CGA-SCR-COMMAND
    END-IF
    INPUT TEXT #MSG USING MAP 'G1000MXX'
    FETCH 'G1000PXX'
  END-IF
END-FIND
*
END-SUBROUTINE /* (1670)
*
******************************************************************************
DEFINE SUBROUTINE WRITE-STATS
******************************************************************************
*
MOVE TRUE TO #STATS-FOUND
FIND (1) STATS-V WITH MONTH-KEY = #HOLD-TODAY-YYYYMM
  IF NO RECORDS FOUND
    MOVE FALSE TO #STATS-FOUND
  END-NOREC
*
  IF #HAS-FBR
    IF #SCR-FBR-PLAN-1 (1) = 'F'
      ADD #SCR-FBR-PLAN-2 (1) TO FBR-PLAN-GAINS (1)
    END-IF
*
    IF #SCR-FBR-PLAN-1 (1) = 'T'
      ADD #SCR-FBR-PLAN-2 (1) TO FBR-PLAN-GAINS (2)
    END-IF
*
    IF #SCR-FBR-PLAN-1 (1) = 'C'
      ADD #SCR-FBR-PLAN-2 (1) TO FBR-PLAN-GAINS (3)
    END-IF
*
*  IF NEW-V.PLAN (1) = 'RT' OR = 'LT'
    IF FUNCTION-TERM-POLICY(<NEW-V.PLAN(1)>)         /* YK6
      ADD #SCR-FBR-PLAN-2 (1) TO FBR-CAT-GAINS (2)  /* TERM
    ELSE
      ADD #SCR-FBR-PLAN-2 (1) TO FBR-CAT-GAINS (1)  /* WHOLE LIFE
    END-IF
  END-IF
*
  DECIDE ON FIRST #PLAN
    VALUE 'SP'  MOVE 1  TO #IS
    VALUE 'OL'  MOVE 1  TO #IS
    VALUE 'GPL' MOVE 20 TO #IS                           /* DW15
    VALUE 'GP2' MOVE 20 TO #IS                           /* TT2
    VALUE '30'  MOVE 2  TO #IS
    VALUE '30P' MOVE 2  TO #IS
    VALUE '20'  MOVE 3  TO #IS
    VALUE '20P' MOVE 3  TO #IS
    VALUE '7P'  MOVE 4  TO #IS
    VALUE 'RT'  MOVE 5  TO #IS
    VALUE 'LT'  MOVE 6  TO #IS
    value GroupTerm move 6  to #is                             /* vt14
* YK8 Include statistics EZ
    VALUE 'EZ'
      IF NEW-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
        MOVE 22 TO #IS                /* new for EZ
      ELSE
        MOVE 24 TO #IS                /* new for EZ
      END-IF
* YK8
    NONE       IGNORE
  END-DECIDE
*
*
*  IF #PLAN = 'AL'
  IF IS-ANNUITY-LIFE (< #PLAN >)  /* NG7
    IF NEW-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
      MOVE 18 TO #IS
    ELSE
      MOVE 7 TO #IS
    END-IF
  END-IF
*
  IF #FLEX-PLAN
*      AND (#PLAN NE 'AL')
      AND NOT IS-ANNUITY-LIFE (< #PLAN >)  /* NG7
    IF NEW-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
      MOVE 14 TO #IS
    ELSE
      MOVE 8 TO #IS
    END-IF
  END-IF
* YK8 Start - Include statistics for LTII+
*   IF #VAR-TERM
*     IF NEW-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
*       MOVE 16 TO #IS
*     ELSE
*       MOVE 22 TO #IS
*     END-IF
*   END-IF
  IF #VAR-TERM
    IF F-LT2PLUS-TRUE(<#PLAN>)
      #NEW-TERM := TRUE
    ELSE
      #OLD-TERM := TRUE
    END-IF
  END-IF
  IF NEW-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
    #GEN := TRUE
  END-IF
  DECIDE FOR FIRST CONDITION
    WHEN #NEW-TERM AND #GEN
      MOVE 24 TO #IS                /* new for LTII+
    WHEN #NEW-TERM
      MOVE 26 TO #IS                /* new for LTII+
    WHEN #OLD-TERM AND #GEN
      MOVE 16 TO #IS
    WHEN #OLD-TERM
      MOVE 22 TO #IS
    WHEN NONE
      IGNORE
  END-DECIDE
* YK8 End
**display #STATS-FOUND  #PLAN #var-term #new-term #is NEW-V.INTRO-FLAG
  IF #STATS-FOUND
    MOVE #HOLD-TODAY-DD TO LAST-NU-POL-ADDED-DAY
    IF NEW-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
      ADD 1      TO SPS-GEN-GAIN-PLANS (#IS)
      ADD NEW-V.FACE-AMOUNT (1) TO SPS-GEN-GAIN-FAC-AMT (#IS)
    ELSE
      ADD 1 TO GAIN-MBRS (#IS)
      ADD NEW-V.FACE-AMOUNT (1) TO GAIN-FAC-AMT (#IS)
*
      IF NEW-V.MILITARY-SERVICE = MASK ('A')
        ADD 1 TO TOT-GAIN-ARMY-NEW-MBRS
*
        IF #NCO
          ADD 1 TO TOT-GAIN-ARMY-NEW-MBRS-NCO
        END-IF
      ELSE
        IF NEW-V.MILITARY-SERVICE = MASK('F')
          ADD 1 TO TOT-GAIN-AIRF-NEW-MBRS
*
          IF #NCO
            ADD 1 TO TOT-GAIN-AIRF-NEW-MBRS-NCO
          END-IF
        END-IF
      END-IF
*
      IF NEW-V.RESTRICT-MBR-SW = 'Y'
        ADD 1 TO RESTRICTED-NEW-MBRS
      END-IF
    END-IF
* YK Start
    DECIDE FOR FIRST CONDITION
      WHEN #OLD-TERM
        MOVE 6 TO #GL-X
      WHEN #NEW-TERM
        MOVE 9 TO #GL-X                /* new for LTII+
      WHEN #PLAN = 'LT'
        MOVE 2 TO #GL-X
      WHEN #PLAN = 'RT'
        MOVE 3 TO #GL-X
      WHEN #PLAN= 'EZ'
        MOVE 8 TO #GL-X                /* new for EZ
*      WHEN #PLAN = 'AL'
      WHEN IS-ANNUITY-LIFE (< #PLAN >)  /* NG7
        MOVE 4 TO #GL-X
      WHEN #PLAN = 'GPL' OR = 'GP' OR = 'GP2'       /* TT2     /* DW15
        MOVE 7 TO #GL-X
      WHEN NONE
        MOVE 1 TO #GL-X
    END-DECIDE
* YK8 End
    ADD 1                     TO GAINS-BY-PLAN    (#GL-X)
    ADD NEW-V.FACE-AMOUNT (1) TO GAINS-BY-PLAN-DB (#GL-X)
*
    IF NEW-V.INTRO-FLAG = 'S'
      MOVE 2 TO #CAT-X
    ELSE
      IF NEW-V.INTRO-FLAG = 'K'
        MOVE 3 TO #CAT-X
      ELSE
        IF NEW-V.INTRO-FLAG = 'G'
          MOVE 4 TO #CAT-X
        ELSE
          MOVE 1 TO #CAT-X
        END-IF
      END-IF
    END-IF
*
    ADD 1 TO GAINS-LIVES-BY-CAT (#CAT-X)
*
    UPDATE
  END-IF
*
  END TRANSACTION
END-FIND
*
END-SUBROUTINE
*
******************************************************************************
DEFINE SUBROUTINE DUES-LETTER-PROCESS-ONLY
******************************************************************************
MOVE #CGA-SCR-ID TO #CGA-ID
*
FIND (1) NEW-V WITH MEMBER-KEY = #CGA-ID-G
  IF NO RECORDS FOUND
    INPUT TEXT 'NO ID FOUND' USING MAP 'G1000MXX'
    FETCH 'G1000PXX'
  END-NOREC
*
  MOVE NEW-V.ID-NUMBER TO #ID
  CALLNAT 'GRIDCSXX' USING
    #ID
    #AT-RID-ATTACH-FAC-AMT
    #AT-RID-ATTACH-PLAN
    #AT-RID-PLAN            (1:5)
    #AT-RID-ATTACH-ISS-DT   (1:5)
    #AT-TOT-FBR-PREM
    #EX-FBR-PREM-BY-LINE    (1:9)
    #EX-SPS-DB-BY-LINE      (1:9)
    #EX-DEP-DB-BY-LINE      (1:9)
    #EX-EACH-DEP-DB-BY-LINE (1:9)
    #NUM-ELIG-CHILDREN
    #NUM-ELIG-CHILDREN-UNDER-6-MON
    #TOT-CHILD-DB
    #RID-TEXT
*
  IF #RID-TEXT NE ' '
    WRITE 'FBR ERROR MESSAGE' #RID-TEXT
  END-IF
*
  IF RID-PLAN (1) NE ' '
    MOVE TRUE TO #HAS-FBR
    ADD #EX-FBR-PREM-BY-LINE (1) TO #FBR-MON-PREM
  END-IF
*
  MOVE X-RID-FPF (1) TO #FPF-FBR
  MOVE INTRO-FLAG TO #INSURED
*
  IF INTRO-FLAG = 'S' OR = 'K' OR = 'G'
    FIND (1) ST-V WITH MEMBER-KEY = NEW-V.LINKED-CN-A (1)
      MOVE ST-V.ALOT-AMT TO #ALOT-AMT
    END-FIND
  END-IF
*
  FIND (1) CT-V WITH CT-V.CONTACT-ID = APPL-TRACK-V.CONTACT-ID  /* PM28
    #NAME := FUNCTION-DISP-CT-NAME(<CT-V.FIRST-NAME,CT-V.MIDDLE-NAME,CT-V.LAST-NAME,CT-V.SUFFIX>) /* PM28
  END-FIND                                                      /* PM28
*
  MOVE APPL-SOURCE TO #APPL-SRC
  ASSIGN #MIL-ST = NEW-V.MILITARY-STATUS
  ASSIGN #APREM = ANNUAL-PREM(1)
  ASSIGN #PLAN  = PLAN(1)
  IF PLAN(1) = 'OL ' AND PAY-STATUS (1) = '47'
    MOVE 'SP ' TO #PLAN
  END-IF
  ASSIGN #MODE = MODE(1)
  ASSIGN #SMOKER = SMOKER-FLAG (1)
  ASSIGN #FACE-AMT = FACE-AMOUNT (1)
  ASSIGN #AGE     = ISSUE-AGE-N (1)
*
  IF #MODE = 'G' OR = 'M' OR = '0'  /* PM5
    COMPUTE #MPREM = #APREM / 12
  ELSE
    IF #MODE = 'S' OR = '2'         /* PM5
      COMPUTE #MPREM= #APREM / 2
    ELSE
      IF #MODE = 'Q' OR = '4'       /* PM5
        COMPUTE #MPREM = #APREM / 4
      ELSE
        ASSIGN #MPREM = #APREM
      END-IF
    END-IF
  END-IF
*
  MOVE X-FIRST-PLACE-FEE (1) TO #FPF
  MOVE DUES-FPF TO #FPF-DUES
*
  ASSIGN #CN1 = NEW-V.ID-NUMBER
  ASSIGN #WORK-DATE-YYYYMMDD = ISSUE-DATE(1)
  COMPRESS #WD-MM-A #WD-DD-A #WD-YYYY-A INTO #EFF-DT-A LEAVING NO SPACE
  MOVE #EFF-DT-A TO #FPF-START-A
  MOVE #WORK-DATE-YYYYMMDD TO #EFF-YYYYMMDD
  MOVE PAID-TO-DATE (1) TO #WORK-DATE-YYYYMMDD /* ADDED 10/21/2004 CEB
  COMPRESS #WD-MM-A #WD-DD-A #WD-YYYY-A INTO #FPF-END-A LEAVING NO SPACE
  PERFORM DUES-LETTER
*
  IF *DEVICE = 'BATCH'
    ESCAPE ROUTINE
  END-IF
*
  FETCH 'G1000PXX'
END-FIND
*
END-SUBROUTINE
*
******************************************************************************
DEFINE SUBROUTINE TRY-APPL
******************************************************************************
*
RESET #HOLD-APPL-ISN
MOVE #CGA-SCR-ID TO #AT-SSN
IF (#CGA-SCR-ID GE 500000) AND (#CGA-SCR-ID LT 599999)
  FIND (1) APPL-TRACK-V WITH ID-NUMBER = #CGA-SCR-ID
    IF NO RECORD FOUND
      ESCAPE BOTTOM
    END-NOREC
*
    MOVE *ISN TO #HOLD-APPL-ISN
    MOVE TRUE TO #APPL-FOUND
  END-FIND
ELSE
  CALLNAT 'C1007SAT'
    #CGA-SCR-COMMAND
    #CGA-SCR-ID
    #CGA-SCR-SUFFIX
    #CGA-ORIG-COMMAND
    #HOLD-APPL-ISN
    #AT-SSN
    #AT-CN
    #APPL-FOUND
    #NEW-AT
END-IF
*
IF NOT #APPL-FOUND
  INPUT TEXT 'SSN or AT # not on APPL TRACKING FILE'
    USING MAP 'G1000MXX'
  FETCH 'G1000PXX'
END-IF
*
GET APPL-TRACK-V #HOLD-APPL-ISN
IF NOT ( ST-NOTE-STATUS(*) = 'PU' )                             /* bz-hd-7693
  INPUT TEXT 'APPL PU status is mandatory' USING MAP 'G1000MXX' /* bz-hd-7693
  FETCH 'G1000PXX'                                              /* bz-hd-7693
END-IF

IF APPL-TRACK-V.INTRO-FLAG = 'V'
  ESCAPE TOP
END-IF
*
#ADD-OLD-FORMAT := 'Y'                          /* PM28
#ADD-CONTACT-ID := APPL-TRACK-V.CONTACT-ID      /* PM28
#ADD-TYPE       := 'P'                          /* PM28
CALLNAT 'ADDN0001'                              /* PM28
  #PDA-ADDRESS                                  /* PM28
*
#ZIP-CODE      := #ADD-ZIP-CODE                 /* PM28
*                                                                 /* vt1 \/
IF APPL-TRACK-V.DISCLOSURE-IND NE 'Y' AND #ADD-STATE = 'CA'                    /* PM28
  INPUT TEXT 'WARNING!!! CALIFORNIA APPLICATION. Please use AT to enter the disclosure doc'
    USING MAP 'G1000MXX'
  FETCH 'G1000Pxx'
END-IF                                                              /* vt1 /\
*
if appl-track-v.special-hand eq 'Y'                                 /* vt10 \/
  input text 'WARNING!!! Special Handling. Please use AT to remove it'
    USING MAP 'G1000MXX'
  FETCH 'G1000Pxx'
END-IF                                                              /* vt10 /\
*
IF  ((NOT APPL-TRACK-V.ACTION-FLAG = 'P' OR = 'U' OR = 'R')        /* hd-4094
    OR  (APPL-TRACK-V.AT-STATUS = 'PI' OR = 'PC')) /* NOT REALY PEND
  INPUT TEXT 'APPL must be in Pending or Underwriting status'
    USING MAP 'G1000MXX'
  FETCH 'G1000PXX'
END-IF
*
move appl-track-v.member-cn to #new-cn-a                         /* vt9 \/
** =====================================================
* ??????????? Unused code. What we are counting here? This is the first policy... YK00
* find a-stat with a-stat.id-number = #new-cn
*   for #i 1 9
*     if a-stat.status(#i) = 'D'
*       add a-stat.face-amount (#i) to #tot-face-amount
*     end-if
*   end-for
* end-find
** =======================================================
IF  (appl-track-v.plan = 'OL' OR = 'SPF')
    OR (appl-track-v.plan = MASK (NN.))
    OR (appl-track-v.plan = MASK (N'P'.))
  move true to #whole-life
else
  reset #whole-life
end-if
*
COMPUTE #face-amount  := (appl-track-v.FACE-AMT-UNITS * 1000) + appl-track-v.FACE-AMT-DOLS
* #face-amount := #face-amount + #tot-face-amount      /* YK00
*
EXAMINE APPL-TRACK-V.ST-NOTE-STATUS (*) for 'U6'    giving #IDX1
*
if #idx1 lt 1
  if  f-lt2-true(<appl-track-v.plan>) OR APPL-TRACK-V.PLAN = 'EZ'            /* bz-4912
    INPUT TEXT  'Underwriting has not been completed for this application'
      USING MAP 'G1000MXX'
    FETCH 'G1000PXX'
  end-if
*
  if appl-track-v.plan = 'LT'
      and (#face-amount gt 400001.00) and ( #idx1 lt 1)
    INPUT TEXT  'Underwriting has not been completed for this application'
      USING MAP 'G1000MXX'
    FETCH 'G1000PXX'
  end-if
*
  if   #whole-life
    if  APPL-TRACK-V.intro-flag   =  'S'
      if  #face-amount gt 300001.00 and #idx1 lt 1
        INPUT TEXT  'Underwriting has not been completed for this application'
          USING MAP 'G1000MXX'
        FETCH 'G1000PXX'
      end-if
    else
      if  APPL-TRACK-V.intro-flag    = 'K' or = 'G'
        if #FACE-AMOUNT GT 100001.00 and #idx1 lt 1
          INPUT TEXT  'Underwriting has not been completed for this application'
            USING MAP 'G1000MXX'
          FETCH 'G1000PXX'
        END-IF
      else
        if #FACE-AMOUNT GT 400001.00 and #idx1 lt 1
          INPUT TEXT  'Underwriting has not been completed for this application'
            USING MAP 'G1000MXX'
          FETCH 'G1000PXX'
        END-IF
      end-if
    end-if
  end-if
end-if
*                                                                 /* VT9 /\
*
#PREM-RATING := APPL-TRACK-V.RATING-CODE       /* PM5
*
ASSIGN #APPL-FOUND = TRUE
*
FIND (1) CT-V WITH CT-V.CONTACT-ID = APPL-TRACK-V.CONTACT-ID  /* PM28
  #NAME-LAST    := CT-V.LAST-NAME                             /* PM28
  #NAME-FIRST   := CT-V.FIRST-NAME                            /* PM28
  #NAME-MIDDLE  := CT-V.MIDDLE-NAME                           /* PM28
  #NAME-SUFFIX  := CT-V.SUFFIX                                /* PM28
  #NAME := FUNCTION-DISP-CT-NAME(<#NAME-FIRST,#NAME-MIDDLE,#NAME-LAST,#NAME-SUFFIX>) /* PM28
  #SEX          := CT-V.GENDER-CD                             /* PM28
  #DOB-DISP     := CT-V.DATE-OF-BIRTH                         /* PM28
  #MIL-ST       := CT-V.MILITARY-STATUS                       /* PM28
  #DOB-YYYYMMDD := #DOB-DISP                                  /* PM28
  #DOB-CENT     := #DOB-DISP-CC                               /* PM28
  #DOB-YY       := #DOB-DISP-YY                               /* PM28
  #DOB-MM       := #DOB-DISP-MM                               /* PM28
  #DOB-DD       := #DOB-DISP-DD                               /* PM28
*
  FIND (1) RR-V WITH RR-V.RANK-ID = CT-V.RANK-ID              /* PM28
    #RANK-ABBR  := RR-V.RANK-ABBR                             /* PM28
    #RANK       := RR-V.RANK-IN-SAS                           /* PM28
    #MIL-ID     := RR-V.MILITARY-ID                           /* PM28
  END-FIND                                                    /* PM28
END-FIND                                                      /* PM28
*
#MEMBER-CN-A := APPL-TRACK-V.MEMBER-CN                        /* PM28
FIND (1) ST-V WITH ST-V.ID-NUMBER = #MEMBER-CN                /* PM28
  #SSN    := ST-V.SSN                                         /* PM28
END-FIND                                                      /* PM28
*
MOVE APPL-TRACK-V.ALOT-CHG-AUTH  TO #ALOT-CHG-AUTH
MOVE APPL-TRACK-V.CAP-IND        TO #CAP-IND
MOVE APPL-TRACK-V.PLAN           TO #PLAN
MOVE APPL-TRACK-V.FACE-AMT-UNITS TO #SCR-FACE
MOVE APPL-TRACK-V.FACE-AMT-DOLS  TO #SCR-FACE-DOLS
MOVE APPL-TRACK-V.EXCH-1035      TO #EXCH-1035
MOVE APPL-TRACK-V.LUMP-SUM       TO #LUMP-SUM
*
CALLNAT 'C2011SNM'
  APPL-TRACK-V.SSN
  #DEP-RCVD
  #DEP-RCVD-CREDIT                     /* PM6
  #DEP-RCVD-CASH                       /* PM6
* #CGA-ORIG-COMMAND                   /* PM6
* APPL-TRACK-V.DEP-REC-AMOUNT (1)     /* PM6
* APPL-TRACK-V.DEP-RCVD               /* PM6
*
MOVE APPL-TRACK-V.INTRO-FLAG TO #INSURED
*
IF (#INSURED = 'S' OR = 'K' OR = 'G')
  MOVE REFERING-ID-NUMBER (1) TO #LINKED-CN
  FIND (1) ST-V WITH MEMBER-KEY = #LINKED-CN-A
    IF NO RECORDS FOUND
      FIND (1) ST-V WITH WIDOW-KEY = #LINKED-CN-A
        IF NO RECORDS FOUND
          INPUT TEXT 'Must be linked to CN' USING MAP 'G1000MXX'
          FETCH 'G1000PXX'
        END-NOREC
      END-FIND
    END-NOREC
*
    if #cga-clerk = 'VXT' or = 'CEB'  or = 'GME' or = 'EAC'  or = 'EH' or = 'GMS'         /*   vt11  vt12  vt13
        or= 'NG'
      ignore
    else                                                      /*   vt11
      IF ST-V.PROCESS-IND = 'C'
        INPUT TEXT 'Member in pending status' USING MAP 'G1000MXX'
        FETCH 'G1000PXX'
      ELSE                                                /* PM21
        IF ST-V.NUMBER-MEMBERSHIPS = 0                    /* PM21
          #NEW-MSSG := '*** SPONSOR MEMBER INACTIVE ***'  /* PM21
        END-IF                                            /* PM21
      END-IF
    end-if                                                     /*  vt11
  END-FIND
*
  FOR #I1 9 TO 1 STEP -1
    IF   (ST-V.STATUS (#I1) = 'D')
        AND (ST-V.PAY-STATUS (#I1) LT '40')
        AND (ST-V.MODE       (#I1) NE 'E')
        AND (#INSURED = 'S' OR = 'K' OR = 'G')
      MOVE ST-V.MODE (#I1) TO #MODE
    END-IF
  END-FOR
END-IF
*
IF SMOKER-FLAG = 'Y'
  MOVE 'S' TO #SMOKER
ELSE
  MOVE 'N' TO #SMOKER
END-IF
*
MOVE APPL-TRACK-V.ORIGIN TO #ORIGIN
ASSIGN #APPL-SRC = APPL-TRACK-V.APPL-SOURCE
*
IF APPL-TRACK-V.POLICY-TYPE = 'T'
  MOVE 'TRUST-OWNER' TO #POL-TYPE
  COMPRESS #NEW-MSSG '## Original TRUST Owner ##' INTO #NEW-MSSG
END-IF
*
IF APPL-TRACK-V.POLICY-TYPE = 'I'
  MOVE 'INSURED-OWNR' TO #POL-TYPE
  COMPRESS #NEW-MSSG '## Original INSURED-Owner ##' INTO #NEW-MSSG
END-IF
*
IF APPL-TRACK-V.POLICY-TYPE = 'S'
  MOVE 'SPOUSE-OWNR' TO #POL-TYPE
  COMPRESS #NEW-MSSG '## ORIGINAL SPOUSE-OWNER ##' INTO #NEW-MSSG
END-IF
*
IF APPL-TRACK-V.POLICY-TYPE = 'N'
  MOVE 'NON-MBR OWNR' TO #POL-TYPE
  COMPRESS #NEW-MSSG '## ORIGINAL Non-Mbr-OWNER ##' INTO #NEW-MSSG
END-IF
*
COMPUTE #DIVIDEND = (#SCR-FACE * 1000) / 5000
IF  (EXCH-1035 NE 0) OR (LUMP-SUM NE 0)
    OR (NOT #PLAN = '7P' OR = '20'  OR = '30'  OR = 'OL' OR = 'SP'
    OR = 'GPL' OR = 'GP2'    /* TT2        /* Gen Plus                              /* DW15
    OR = '20P' OR = '30P')   /* OR = 'LT' OR = 'RT')             /* YK6
    OR (#REM NE 0)  OR (#SCR-FACE-DOLS NE 0)
*  MOVE TRUE TO #FLEX-POLICY
* IF (#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z')                   /* YK6
*    IGNORE                                                    /* YK6
*  ELSE                                                        /* YK6
  IF (NOT FUNCTION-TERM-POLICY (<#PLAN>))                      /* YK6
    MOVE TRUE TO #FLEX-POLICY
    PERFORM CALC-FLEX-PREM
  END-IF                                                       /* YK6
END-IF
*
* IF (#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z')                   /* YK6
IF F-LT2-TRUE(<#PLAN>)                                         /* YK6
  MOVE 'RG' TO #VAR-TERM-CAT
END-IF
*
IF RIDER-PLAN (1) NE ' '
  COMPRESS #NEW-MSSG 'has FBR units' INTO #NEW-MSSG
  MOVE TRUE TO #HAS-FBR
  MOVE RIDER-PLAN (1) TO #SCR-FBR-PLAN (1)
  MOVE RIDER-SPS      TO #SCR-FBR-SPS
END-IF
*
END-SUBROUTINE
*
******************************************************************************
DEFINE SUBROUTINE WRITE-APPL-SOURCE
******************************************************************************
*
IF #INSURED = 'S' OR = 'K' OR = 'G'
  ESCAPE ROUTINE
END-IF
*
MOVE FALSE TO #SOURCE-CODE-FOUND
FIND APPL-SRC-EDIT WITH SOURCE-CODE = #HOLD-SOURCE-CODE
  IF SOURCE-CODE-GROUP = MASK (A)
    MOVE TRUE TO #SOURCE-CODE-FOUND
  ELSE
    ESCAPE TOP
  END-IF
*
  ADD 1 TO SOURCE-CUR-NEW-MBR(#APPL-INDX)
  UPDATE
  MOVE 'EDS' TO #HOLD-CODE1
*
  IF SOURCE-CODE-GROUP = 'N' OR = 'Y' OR = 'A'
    MOVE 'P' TO #HOLD-CODE2
  ELSE
    MOVE SOURCE-CODE-GROUP TO #HOLD-CODE2
  END-IF
*
  ESCAPE BOTTOM
END-FIND
*
IF NOT #SOURCE-CODE-FOUND
  MOVE 'CALL EDS/SRC ERROR' TO #TCM-SRC-MSG
  ESCAPE ROUTINE
END-IF
*
FIND(1) APPL-SRC-EDIT WITH SOURCE-CODE = #HOLD-CODE
  IF NO RECORDS FOUND
*   MOVE 'CALL EDS/SUM ERROR' TO #TCM-SRC-MSG /* REMOVED 3/2005 CEB
    ESCAPE ROUTINE
  END-NOREC
  ADD 1 TO SOURCE-CUR-NEW-MBR(#APPL-INDX)
  UPDATE
END-FIND
*
FIND(1) APPL-SRC-EDIT WITH SOURCE-CODE = 'EDSMAP'
  IF NO RECORDS FOUND
    MOVE 'CALL EDS/MAP ERROR' TO #TCM-SRC-MSG
    ESCAPE ROUTINE
  END-NOREC
*
  ADD 1 TO SOURCE-CUR-ADDL-MBR(#APPL-INDX)
  UPDATE
END-FIND
*
END TRANSACTION
*
END-SUBROUTINE
*
******************************************************************************
DEFINE SUBROUTINE CALL-GDATESXX
******************************************************************************
*
CALLNAT 'GDATESXX'
  #PASS-DATE
  #EXTRA-DATE
  #RECEIVE-DATE
  #REQUEST
*
END-SUBROUTINE
*
******************************************************************************
DEFINE SUBROUTINE CALC-FLEX-PREM
******************************************************************************
*
MOVE (AD=P) TO #FLEX-CV
COMPUTE #FAC-AMT = (APPL-TRACK-V.FACE-AMT-UNITS * 1000)
  + APPL-TRACK-V.FACE-AMT-DOLS
MOVE #FAC-AMT TO #FACE-AMT
*
IF   (APPL-TRACK-V.PLAN NE ' ')
*    AND (NOT APPL-TRACK-V.PLAN = 'SP' OR = 'AL')   /* DW1
    AND APPL-TRACK-V.PLAN NE 'SP'
    AND NOT IS-ANNUITY-LIFE (< #PLAN >)  /* NG7
  IF PLAN-A2 = 'P'
    MOVE PLAN-N1 TO #FLEX-YEARS
  ELSE
    MOVE PLAN-N2 TO #FLEX-YEARS
  END-IF
END-IF
*
**IF APPL-TRACK-V.PLAN = 'AL'
IF IS-ANNUITY-LIFE (< APPL-TRACK-V.PLAN >)  /* NG7
  MOVE 999 TO #FLEX-YEARS
END-IF
*
MOVE #DOB-YYYYMMDD TO #FLEX-DOB                    /* PM28
*
IF NOT #INSURED = 'S' OR = 'K' OR = 'G'
  MOVE TRUE TO #PAYS-DUES
END-IF
*
CALLNAT 'C1602SCO'
  #CGA-SCR-COMMAND #CGA-SCR-ID #CGA-SCR-SUFFIX
  #CGA-ORIG-COMMAND #CGA-CLERK
  #PAYS-DUES APPL-TRACK-V.NAME #FLEX-DOB #SMOKER #SEX
  #LUMP-SUM #EXCH-1035 #FAC-AMT
  #FLEX-YEARS #FLEX-ANN-PREM #FLEX-DUES-PMT #FLEX-PREM-AGE
  #FLEX-POLICY #PREM-RATING
  APPL-TRACK-V.PLAN
*
IF #FLEX-YEARS = 0  /* IF PUSP REMOVE DUES FROM PMT
  SUBTRACT #FLEX-DUES-PMT FROM #FLEX-ANN-PREM
END-IF
*
MOVE #FAC-AMT-3 TO #SCR-FACE
MOVE #FAC-AMT-DOLS TO #SCR-FACE-DOLS
*
**IF #PLAN = 'AL'
IF IS-ANNUITY-LIFE (< #PLAN >)  /* NG7
  ESCAPE ROUTINE
END-IF
*
IF #FLEX-YEARS = 0
  MOVE 'SP' TO #PLAN
ELSE
  IF #FLEX-YEARS LT 10
    COMPRESS #FLEX-YEARS 'P' INTO #PLAN LEAVING NO
  ELSE
    MOVE #FLEX-YEARS TO #PLAN
  END-IF
END-IF
*
COMPRESS #NEW-MSSG 'FLEX PLAN Policy' INTO #NEW-MSSG
*
END-SUBROUTINE
*
******************************************************************************
DEFINE SUBROUTINE AT-LINKAGE
******************************************************************************
*
CALLNAT 'C2006SNM' USING
  #PROCESS-SW
  #CGA-SCR-SUFFIX
  APPL-TRACK-V.ID-NUMBER
  APPL-TRACK-V.INTRO-FLAG
  APPL-TRACK-V.REFERING-ID-NUMBER (1:9)
  APPL-TRACK-V.MEMBER-CN
  NEW-V.ID-NUMBER
  APPL-TRACK-V.SSN
  #ERR-MSG
  NEW-V.LINKED-CN (1:30)
*
END-SUBROUTINE
*
********************************************************************************
DEFINE SUBROUTINE LOAD-PARAMETERS                                        /* PM3
********************************************************************************
*
#C1103LAI-ID-NUMBER      :=    APPL-TRACK-V.REFERING-ID-NUMBER (1)
CALLNAT 'C1103SAI'
  #PDA-C1103LAI
*
#MEMBER-MILITARY-SERVICE :=    #C1103LAI-MILITARY-SERVICE                /* PM4
#MEMBER-MILITARY-STATUS  :=    #C1103LAI-MILITARY-STATUS
#MEMBER-CN-A             :=    APPL-TRACK-V.MEMBER-CN
#INTRO-FLAG              :=    APPL-TRACK-V.INTRO-FLAG
#AGE-1100                :=    #AGE
#YES-ON-MED              :=    APPL-TRACK-V.YES-ON-MED
#POLICY-AMOUNT           :=    #FACE-AMT
#PLAN-1002               :=    APPL-TRACK-V.PLAN
#MED-INFO (1:17)         :=    APPL-TRACK-V.MED-INFO (1:17)
#DATE-OF-BIRTH           :=    #DOB-YYYYMMDD                             /* PM28
#MIL-STATUS              :=    APPL-TRACK-V.MIL-STATUS
#HEIGHT-FT               :=    APPL-TRACK-V.HEIGHT-FT
#HEIGHT-IN               :=    APPL-TRACK-V.HEIGHT-IN
#WEIGHT                  :=    APPL-TRACK-V.WEIGHT
#SEX-1002                :=    #SEX                                      /* PM28
*
END-SUBROUTINE
*
********************************************************************************
DEFINE SUBROUTINE GET-PAD-ACCOUNT-DETAILS                                /* PM16
********************************************************************************
*
RESET #AI-CALL                                  /* vt5
CALLNAT 'GPXNEC01'
  NEW-V.ID-NUMBER
  NEW-V.PAD-ABA-NBR
  NEW-V.PAD-ACCT-NUM
  NEW-V.PAD-CHECK-SAV
  NEW-V.PAD-CODE
  NEW-V.X-ALT-LP-IND (1)
  NEW-V.X-ALT-LP-AMT (1)
  APPL-TRACK-V.CAP-LOAN-AMT
  APPL-TRACK-V.CAP-TERM
* APPL-TRACK-V.NAME
  NEW-V.MEMBER-CONTACT-ID
  #CGA-CLERK
  #EZ-PAY-WAITING
  APPL-TRACK-V.ALLOT-STRT-AMT         /* DW18
  #AI-CALL                                      /* vt5
  APPL-TRACK-V.MODE                   /* YK9
*
END-SUBROUTINE
*
/* ng10: New code to create policy roles based on application roles
/*
DEFINE SUBROUTINE CREATE-ROLES
* -------------------------
CALLNAT 'ORDNROLE'
  APPL-TRACK-V.ID-NUMBER
  #POLICY-NUMBER
  NEW-V.MEMBER-CONTACT-ID
  #CGA-CLERK
  #CURR-DATE           /*TT Changed from NEW-V.ISSUE-DATE
  NEW-V.ID-NUMBER

IF #APPL-FOUND   
  #CRM-RESULT := 'FAMILY'
  CALLNAT 'MBRCRC'
    NEW-V.MEMBER-CONTACT-ID
    #CRM-RESULT
END-IF
* RESET PC-V
* RESET INITIAL #CLERK-KEY
* COMPRESS #CLERK-KEY #CGA-CLERK INTO #CLERK-KEY LEAVING NO
* *
* FIND(1) GEN-TABLE-V WITH SEC-KEY = #CLERK-KEY
*   FIND(1) USER-V WITH CLERK-ID = GEN-SUB-KEY
*     PC-V.ADD-USER := PC-V.LAST-UPD-USER := USER-V.TERMINAL-ID
*   END-FIND
* END-FIND
* PC-V.ADD-DATE := PC-V.LAST-UPD-DATE := NEW-V.ISSUE-DATE (1) /* ttt
* PC-V.ADD-TIME := PC-V.LAST-UPD-TIME := *TIMN
* PC-V.POLICY-NUMBER := #POLICY-NUMBER
* PC-V.REFERENCE-NUMBER   := NEW-V.ID-NUMBER
* PC-V.CONTACT-ID := NEW-V.MEMBER-CONTACT-ID
* PC-V.RELATION := 1
* STORE PC-V
* *
* * RESET PC-V
* * PC-V.POLICY-NUMBER := #POLICY-NUMBER
* IF NEW-V.INTRO-FLAG = 'S' OR ='K' OR = 'G'
*   PC-V.REFERENCE-NUMBER   := NEW-V.LINKED-CN(1)
*   PC-V.CONTACT-ID := F-GET-CONTACT-ID(<NEW-V.LINKED-CN(1)>)
*   PC-V.RELATION := #LINKED-MEMBER
* ELSE
*   PC-V.REFERENCE-NUMBER   := NEW-V.ID-NUMBER
*   PC-V.CONTACT-ID := NEW-V.MEMBER-CONTACT-ID
*   PC-V.RELATION := #MEMBER
* END-IF
* *
* STORE PC-V
* *
* END TRANSACTION
*
END-SUBROUTINE
/*
END
