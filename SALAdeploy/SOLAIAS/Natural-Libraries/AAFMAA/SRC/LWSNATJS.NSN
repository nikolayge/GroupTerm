* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* <Natural Source Header
/** New Subprogram LWSNATJS.
/**
/** :author nguentchev
/* Generate JSon based on Natural PDA and name contract
/* 
/* NAME     DATE   TAG   DESCRIPTION
/* ====     ====   ===   ===========
/* NGG   20180208  NG1   SOLA Project
/*
DEFINE DATA
PARAMETER USING LWSAAT  /* specific data structure
PARAMETER
1 jSonString (A) DYNAMIC
LOCAL
1 BLANK    (A1) CONST <' '>
1 #TAGS    (I2) CONST <30>
1 JVALUES  (A/#TAGS) DYNAMIC
1 JTAGS    (A/#TAGS) DYNAMIC 

1 #D       (N8) 1 REDEFINE #D
  2 #YYYY  (A4)
  2 #MM    (A2)
  2 #DD    (A2)
1 J        (I2)
1 I        (I2)
1 AIND (A1/#TAGS)
1 D1       (A1) CONST <''''>
1 D2       (A2) CONST <''','>
1 #Height   (A5) 1 redefine #Height
  2 #Heightfeet   (A2)
  2 #X1           (A1)
  2 #Heightinches (A2)
1 #update   (L)
END-DEFINE
/* 
RESET J JVALUES (*)
  JTAGS (*)
  #Height
/* set value names. Replace new_1 with the real name based on name contract
/* new_actiondate

* JTAGS (1) :=  '''new_atnumber'':';     AIND(1) := 'Y'  /* guid
* JTAGS (2) :=  '''new_applicationtrackingid'':'; AIND(2) := 'Y'  /* "106eee2d-9c0d-e711-80cb-005056a21fa2"
* JTAGS (3) :=  '''new_iascontactid'':';  AIND(3) := 'Y'  /* guid
* JTAGS (4) :=  '''new_faceamount'':';    AIND(4) := 'N'  /* 112.6
* JTAGS (5) :=  '''new_caploanamount'':'; AIND(5) := 'N'  /* 1123.3
* JTAGS (6) :=  '''new_membercn'':';      AIND(6) := 'N'  /* CN
* JTAGS (7) :=  '''new_height'':';        AIND(7) := 'N'  /* 5.11
* JTAGS (8) :=  '''new_depositmax'':';    AIND(8) := 'N'  /* 15.11
* JTAGS (9) :=  '''new_capindicator'':';  AIND(9) := 'Y'  /* YES/NO
* JTAGS (10):=  '''new_actiondate'':';    AIND(10) := 'Y'  /* date "2017-01-01"
* JTAGS (11):=  '''new_applicationsource'':'; AIND(11) := 'Y'  /* APPL
* JTAGS (12):=  '''new_lumpsum'':';       AIND(12) := 'N'  /* 590.00
* JTAGS (13):=  '''new_exchange1035'':';  AIND(13) := 'N'  /* 1030.00
* JTAGS (14):=  '''new_depositamount'':'; AIND(14) := 'N'  /* 590.00
* JTAGS (15):=  '''new_ratingcode'':';    AIND(15) := 'N'  /* 1
* JTAGS (16):=  '''new_plan'':';          AIND(16) := 'Y'  /* AL
* JTAGS (17):=  '''new_weight'':';        AIND(17) := 'N'  /* 210
* JTAGS (18):=  '''new_datereceived'':';  AIND(18) := 'Y'  /* date "2017-01-01"
* JTAGS (19):=  '''new_smoker'':';        AIND(19) := 'Y'  /* YES/NO
* JTAGS (20):=  '''new_atstatus'':';      AIND(20) := 'Y'  /* PR

/* Populate values. If there is no value the name:vulue will be not generated
IF AT-DATA.height NE 0
  MOVE EDITED AT-DATA.height (EM=Z9.99) TO #Height
  IF SUBSTR(#Height,4,1) = '0'
    MOVE BLANK TO SUBSTR(#Height,4,1)
  END-IF
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_applicationtrackingid'':'; 
AIND  (J) := 'Y'  /* "106eee2d-9c0d-e711-80cb-005056a21fa2"
IF AT-DATA.applicationtrackingid EQ BLANK OR= 'Not Found' 
  IGNORE   /* only create
ELSE       /* only update or delete
  JVALUES (J) := AT-DATA.applicationtrackingid
  #update := true
END-IF 

* ADD 1 TO J
* JTAGS (J) :=  '''new_quote'':'; 
* AIND  (J) := 'Y' /* QUOTE GUID
* IF AT-DATA.Quote-GUID NE BLANK /* only update or delete
*   JVALUES (J) := AT-DATA.Quote-GUID
* END-IF 

if #update
  ignore
else
  ADD 1 TO J
  JTAGS   (J) :=  '''new_atnumber'':';
  AIND    (J) := 'Y'  /* IAS AT number
  JVALUES (J) := AT-DATA.atnumber

  ADD 1 TO J
  JTAGS (J) :=  '''new_iascontactid'':';
  AIND  (J) := 'Y'  /* Contact GUID
  JVALUES (J) := AT-DATA.ContactGUID

  ADD 1 TO J
  JTAGS (J) :=  '''new_membercn'':';
  AIND  (J) := 'Y'  /* CN
  IF AT-DATA.membercn NE 0
    JVALUES (J) := AT-DATA.membercn
  END-IF
end-if

ADD 1 TO J
JTAGS (J) :=  '''new_heightfeet'':';        
AIND  (J) := 'N'  /* 5
IF #Heightfeet NE BLANK
  JVALUES (J) := #Heightfeet
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_heightinches'':';        
AIND  (J) := 'N'  /* 5
IF #Heightinches NE BLANK
  JVALUES (J) := #Heightinches
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_depositamount'':';    
AIND  (J) := 'N'  /* 15.11
IF AT-DATA.depositmax NE 0
  MOVE EDITED AT-DATA.depositmax (EM=Z(6)9.99) TO JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_capindicator'':';  
AIND  (J) := 'Y'  /* YES/NO
JVALUES (J) := AT-DATA.capindicator

ADD 1 TO J
JTAGS (J) :=  '''new_faceamount'':';    
AIND  (J) := 'N'  /* 112.6
IF AT-DATA.faceamount NE 0
  MOVE EDITED AT-DATA.faceamount (EM=Z(6)9.99) TO JVALUES (J)
END-IF 

ADD 1 TO J
JTAGS (J) :=  '''new_premiumclass'':';    
AIND  (J) := 'Y'  
IF AT-DATA.ratingcode NE BLANK
  DECIDE ON FIRST VALUE OF AT-DATA.ratingcode
    VALUE '1'
      JVALUES (J) := 'Standard'
    VALUE '2'
      JVALUES (J) := 'Select'
    VALUE '3'
      JVALUES (J) := 'Super Select'
    NONE VALUE RESET JVALUES (J)
  END-DECIDE
END-IF 

ADD 1 TO J
JTAGS (J) :=  '''new_caploanamount'':'; 
AIND  (J) := 'N'  /* 1123.3
IF AT-DATA.caploanamount > 0
  MOVE EDITED AT-DATA.caploanamount (EM=Z(6)9.99) TO JVALUES (J)
END-IF
IF AT-DATA.capindicator NE 'Y'
  RESET JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J):=  '''new_actiondate'':';    
AIND  (J) := 'Y'  /* date "2017-01-01"
IF AT-DATA.actiondate > 0
  #D := AT-DATA.actiondate
  COMPRESS #YYYY #MM #DD INTO JVALUES (J)
    WITH DELIMITER '-'
END-IF 
*                Removed until business rule is clear
* ADD 1 TO J
* JTAGS (J):=  '''new_applicationsource'':'; 
* AIND  (J) := 'Y'  /* APPL
* IF AT-DATA.applicationsource NE BLANK
*   JVALUES (J) := AT-DATA.applicationsource
* END-IF

* new_premium
ADD 1 TO J
JTAGS (J):=  '''new_premium'':';       
AIND  (J) := 'N'  /* 590.00
IF AT-DATA.premium NE 0
  MOVE EDITED AT-DATA.premium (EM=Z(6)9.99) TO JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J):=  '''new_exchange1035'':';  
AIND  (J) := 'N'  /* 1030.00
IF AT-DATA.exchange1035 NE 0
  MOVE EDITED AT-DATA.exchange1035 (EM=Z(6)9.99) TO JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J):=  '''new_depositamount'':'; 
AIND  (J) := 'N'  /* 590.00
IF AT-DATA.depositamount NE 0
  MOVE EDITED AT-DATA.depositamount (EM=Z(6)9.99) TO JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J):=  '''new_plan'':';          
AIND  (J) := 'Y'  /* AL
JVALUES (J) := AT-DATA.plan

ADD 1 TO J
JTAGS (J):=  '''new_weight'':';        
AIND  (J) := 'N'  /* 210
IF AT-DATA.weight NE 0
  MOVE EDITED AT-DATA.weight (EM=999) TO JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J):=  '''new_datereceived'':';  
AIND  (J) := 'Y'  /* date "2017-01-01"
IF AT-DATA.datereceived > 0
  #D := AT-DATA.datereceived
  COMPRESS #YYYY #MM #DD INTO JVALUES (J)
    WITH DELIMITER '-'
END-IF

ADD 1 TO J
JTAGS (J):=  '''new_smoker'':';        
AIND  (J) := 'Y'  /* YES/NO
IF AT-DATA.smoker NE BLANK
  JVALUES (J) := AT-DATA.smoker
END-IF

ADD 1 TO J
JTAGS (J):=  '''new_atstatus'':';      
AIND  (J) := 'Y'  /* PR
IF AT-DATA.atstatus NE BLANK
  JVALUES (J) := AT-DATA.atstatus
END-IF

/* Final steps formating JSon
FOR I 1 J
  MOVE *TRIM(JVALUES (I), LEADING) TO JVALUES (I)
END-FOR

FOR J 1 TO #TAGS
  IF JVALUES (J) NE BLANK
    IF AIND (J) = 'Y'
      COMPRESS D1 JVALUES (J) D2 INTO JVALUES (J) LEAVING NO
    ELSE
      COMPRESS JVALUES (J) ',' INTO JVALUES (J) LEAVING NO
    END-IF
  END-IF
END-FOR
COMPRESS '={'
  JTAGS (1) JVALUES (1)
  INTO jSonString leaving no
FOR J 2 TO #TAGS
  IF JVALUES (J) NE BLANK
    COMPRESS jSonString
      JTAGS (J) JVALUES (J)
      INTO jSonString leaving no
  END-IF
END-FOR
COMPRESS jSonString '}' INTO jSonString LEAVING NO
EXAMINE jSonString FOR ',}' REPLACE WITH '}'
PRINT jSonString
END
