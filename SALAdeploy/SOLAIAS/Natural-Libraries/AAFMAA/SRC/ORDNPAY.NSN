* >Natural Source Header 000000
* :Mode S
* :CP
* :LineIncrement 10
* <Natural Source Header
/** New Subprogram ORDNPAY.
/**
/** :author nguentchev
/*  At this point AT, STATUS and Contacts are created
/*  The Contact ID abd ID-NUMBER are required to create payor information
/*  For all applications there is one insured and one payer
/*
DEFINE DATA
PARAMETER
  USING ORDPDA
/* 2 #PARM-ID-NUMBER (N6.0) /* Payer CN
/* 2 CRM-CONTACT-ID (A36)   /* Payer CRM Contact GUID
/* 2 CC-GUID (A32)          /* CC Sage GUID
LOCAL USING OBJACC01
LOCAL
1 BLANK            (A1) CONST <' '>
1 #CRM-ADD-REQUEST (A) DYNAMIC CONST <'CRM-ADD-REQUEST'>
1 #GET-BY-ID       (A) DYNAMIC CONST <'GET-BY-GUID'>
1 #ADD             (A) DYNAMIC CONST <'ADD'>
1 j   (i4)
1 cnt-v view of a-contacts
  2 contact-id (n8)
  2 id-number  (n6)
END-DEFINE
/* 
RESET PARM-CC-DATA
  PARM-CC-INFO

if IASOrder.CCNumber = BLANK  /* No credit card info
  escape routine
end-if

/* get insured/payor CN and Contact ID
for j 1 to C@ApplicationRoles (1)
  if IASOrder.Name(1,j) = 'Insured'
    PARM-CC-INFO.CRM-CONTACT-ID := IASOrder.CRMContactID (1,j)
    find (1) cnt-v with CRM-CONTACT-GUI = IASOrder.CRMContactID (1,j)
      PARM-CC-DATA.#PARM-ID-NUMBER := cnt-v.id-number
    end-find
  end-if
/* The payer has to have a CN Number
  if IASOrder.Name(1,j) = 'Payer'
      and PARM-CC-INFO.CRM-CONTACT-ID NE IASOrder.CRMContactID (1,j)
    PARM-CC-INFO.CRM-CONTACT-ID := IASOrder.CRMContactID (1,j)
    find (1) cnt-v with CRM-CONTACT-GUI = IASOrder.CRMContactID (1,j)
      if cnt-v.id-number > 0
        PARM-CC-DATA.#PARM-ID-NUMBER := cnt-v.id-number
      end-if
    end-find
  end-if
end-for

PARM-CC-DATA.#ACTION := #GET-BY-ID
PARM-CC-INFO.CC-GUID := IASOrder.CCSageGuid
CALLNAT 'OBJNCC01' PARM-CC-DATA PARM-CC-INFO

if PARM-CC-DATA.#NUMBER-OF-RECORDS = 0
  PARM-CC-DATA.#ACTION := #ADD
/* Populate Payment information
  PARM-CC-INFO.ID-NUMBER := PARM-CC-DATA.#PARM-ID-NUMBER
  PARM-CC-INFO.CC-NUMBER := IASOrder.CCNumber
/*  PARM-CC-INFO.CC-GUID := IASOrder.CCSageGuid
  IF *LENGTH(IASOrder.CCExpMonth) = 1
  COMPRESS '0' IASOrder.CCExpMonth INTO PARM-CC-INFO.CC-EXPIRATION-MONTH
      LEAVING NO
  ELSE
    PARM-CC-INFO.CC-EXPIRATION-MONTH := IASOrder.CCExpMonth
  END-IF

  PARM-CC-INFO.CC-EXPIRATION-YEAR := IASOrder.CCExpYear
  PARM-CC-INFO.CCHOLDER-NAME := IASOrder.CardHolder
  PARM-CC-INFO.CCHOLDER-STREET-ADDR := IASOrder.Street
  PARM-CC-INFO.CCHOLDER-ADDL-ADDR := IASOrder.Unit
  PARM-CC-INFO.CCHOLDER-CITY     := *TRANSLATE(IASOrder.City,UPPER)
  PARM-CC-INFO.CCHOLDER-STATE-CD := *TRANSLATE(IASOrder.State,UPPER)
  PARM-CC-INFO.CCHOLDER-COUNTRY  := *TRANSLATE(IASorder.CountryCode,UPPER)
  PARM-CC-INFO.CC-DEFAULT-IND := 'Y'
  PARM-CC-INFO.LAST-TIME-UPDATE := *TIMN 
  PARM-CC-INFO.LAST-USER-UPDATE := FUNCTION-WEB-USER(<IASOrder.UserCode>)(2) 
  PARM-CC-INFO.LAST-DATE-UPDATE := *DATN
/* Only US address
  IF PARM-CC-INFO.CCHOLDER-COUNTRY ='US' OR = 'USA' OR = BLANK 
    PARM-CC-INFO.CCHOLDER-ZIP-CODE := val(IASOrder.Zip)
    PARM-CC-INFO.CC-ADDR-FORMAT-CODE := '1'
  ELSE
    PARM-CC-INFO.CCHOLDER-POSTAL-CODE := "Postal"
    PARM-CC-INFO.CC-ADDR-FORMAT-CODE := '2'
  END-IF

  CALLNAT 'OBJNCC01' PARM-CC-DATA PARM-CC-INFO
  if PARM-CC-DATA.#RESULT-CODE NE BLANK
    IASOrder.ErrorDescription := F-ERROR-DESCRIPTION(<#RESULT-CODE>)
  end-if
end-if
END
