* >Natural Source Header 000000
* :Mode S
* :CP
* :LineIncrement 10
* <Natural Source Header
/** New Subprogram ORDNAPPS.
/**
/** :author nguentchev
/*
DEFINE DATA
PARAMETER
  USING ORDPDA
LOCAL USING POSLROLE
LOCAL
1 #ERROR-LOG     (I4) CONST <3>
1 #AT   /* USING C1008AAT
  2 MEMBER-CN (A6)
  2 REDEFINE MEMBER-CN
    3 MEMBER-CN-N (N6)
  2 CONTACT-ID (N8)
  2 AT-STATUS (A2)
  2 CAP-IND (A1)
  2 E-DEPOSIT-IND (A1)
  2 E-DEP-MAX-AMT (N7.2)
  2 ID-NUMBER (N6.0)
  2 SMOKER-FLAG (A1)
  2 INTRO-FLAG (A1)
  2 APPL-SOURCE (A7)
  2 ACTION-FLAG (A1)
  2 DISCLOSURE-IND (A1)
  2 SPECIAL-HAND (A1)
  2 PLAN (A3)
  2 REDEFINE PLAN
    3 PLAN-A1 (A1)
    3 PLAN-A2 (A1)
    3 PLAN-A3 (A1)
  2 REFERING-ID-NUMBER (N6.0/1:9)
  2 REDEFINE REFERING-ID-NUMBER
    3 REF-ID-OCC (1:9)
      4 REFERING-ID-NUMBER-A (A6)
  2 REMARKS (A70/1:3)
  2 REDEFINE REMARKS
    3 REM-OCC (1:3)
      4 REM-1ST-60 (A60)
      4 REM-LST-10 (A10)
  2 ALOT-CHG-AUTH (A1)
  2 CONTACT-CODE (A1)
  2 CAP-TYPE (A1)
  2 RATING-CODE (A1)
  2 PAYER (A1)
  2 MODE (A1)
  2 LUMP-SUM (N7.2)
  2 CAP-TERM (N2.0)
  2 CAP-LOAN-AMT (N5.2)
  2 YES-ON-MED (A1)
  2 EXCH-1035 (N7.2)
  2 WEIGHT (N3.0)
  2 HEIGHT-IN (N2.0)
  2 HEIGHT-FT (N2.0)
  2 ALLOT-STRT-AMT (N3.2)  /* Not used
  2 POLICY-TYPE (A1)       /* Who is the owner M,I,O
  2 FACE-AMT-DOLS (N3.0)
  2 FACE-AMT-UNITS (N4.0)
  2 USER-SOURCE (A3)       /* Clerk ID
  2 DATE-RECEIVED (N8.0) 2 redefine DATE-RECEIVED
    3 DATE-RECEIVED-A (A8)
  2 MED-INFO (A1/1:17)
  2 RIDER-SPS (A25)
  2 RIDER-PLAN (A2/1:5)
  2 RIDER-ATT-POL (N8/1:5)
  2 POLICY-VERSION (A1)    /* internal
  2 RATE-DATE (N8)         /* for rating input UI

1 AP-Tracking view of A-APPL-TRACKING
  2 ID-NUMBER      (N6)
  2 CONTACT-ID     (N8)
  2 DATE-RECEIVED  (N8)
  2 USER-SOURCE    (A3)
  2 AT-STATUS      (A2)
  2 INTRO-FLAG     (A1)
  2 SMOKER-FLAG    (A1)
  2 INS-ONLY       (A1)
  2 POLICY-TYPE    (A1)
  2 MIL-SERVICE    (A3)
  2 MIL-STATUS     (A1)
  2 NAME           (A25)
  2 RANK           (A3)
  2 SSN            (N9)
  2 DATE-OF-BIRTH  (N8)
  2 SEX            (A1)
  2 MEMBER-CN      (A6) 2 REDEFINE MEMBER-CN
    3 MEMBER-CN-N  (N6)
  2 REFERING-ID-NUMBER (N6/1:9)
  2 NOTES          (A75/40) 2 REDEFINE NOTES
    3 NOTES-A (I1/3000)
  2 ST-NOTE-USER   (A3/1)
  2 ST-NOTE-STATUS (A2/1)
  2 ST-NOTE-DATE (N8/1) 2 redefine ST-NOTE-DATE
    3 ST-NOTE-DATE-A (A8)

  2 PLAN           (A3)
  2 FACE-AMT-DOLS  (N3.0)
  2 FACE-AMT-UNITS (N4.0)
  2 RATING-CODE    (A1)
  2 RATE-DATE      (N8)
  2 WEIGHT         (N3.0)
  2 HEIGHT-IN      (N2.0)
  2 HEIGHT-FT      (N2.0)
  2 MODE           (A1)
  2 PAYER          (A1)
  2 YES-ON-MED     (A1)

  2 APPL-SOURCE    (A7)
  2 CAP-IND        (A1)
  2 E-DEPOSIT-IND  (A1)
  2 CRM-APPL-ID    (A50)  /* Quote ID = Obsolete
  2 AT-GUID        (A50)  /* IASOrder.CrmApplicationID
  2 DRIVERS-LICENSE-NUM (A20)
  2 STATE-ISSUED   (A2)

1 #AT-ROLES
  2 AT-GUID           (A50)
  2 CONTACT-GUID      (A50)
  2 CC-GUID           (A50)
  2 CONTACT-ID        (N8)
  2 RELATION          (N2)
  2 RelationToInsured (A20)
  2 BenePercent       (A10)
  2 IsBeneRestricted  (A1)
  2 SettlementType    (A1)
  2 AllChildren       (A1)
  2 BeneType          (A1)  /* PRIMARY=
/*
1 APR-V VIEW OF A-APPL-ROLES
  2 ADD-USER         (A8)
  2 ADD-DATE         (N8.0)
  2 ADD-TIME         (N7.0)
  2 LAST-UPD-USER    (A8)
  2 LAST-UPD-DATE    (N8.0)
  2 LAST-UPD-TIME    (N7.0)
  2 AT-GUID          (A50)
  2 CONTACT-GUID     (A50)
  2 CC-GUID          (A50)
  2 RELATION-ROLE    (N2.0)
  2 BENE-RESTRICTED  (A1)
  2 BENE-PERCENT     (A10)
  2 BENE-SETTLEMENT  (A1)
  2 SETTLEMENT-TYPE  (A1)
  2 ALL-CHILDREN     (A1)
  2 CONTACT-ID       (N8)
  2 RELATION-INSURED (A20)

1 CR-V VIEW OF A-CONTACT-RELATIONSHIPS
  2 ROLE-1-CD  (A1)
  2 ROLE-2-CD  (A1)
1 AT-V VIEW OF A-APPL-TRACKING
  2 ID-NUMBER  (N6)
  2 AT-GUID    (A50)
  2 AT-STATUS  (A2)
1 #GEN-KEY   (A4)
1 GEN-TABLE-V VIEW OF A-GEN-TABLE
  2 GEN-KEY (A4)
  2 GEN-SUB-KEY (A3)
  2 GEN-ALPHA-VALUE (A50)
1 ST-V VIEW OF A-STATUS
  2 LINKED-CN      (N6/30)
1 cnt-v view of a-contacts
  2 contact-id (n8)
  2 id-number  (n6)

1 BLANK   (A1) CONST <' '>
1 YES     (A1) CONST <'Y'>
1 NO      (A1) CONST <'N'>
1 AN    (I4)  /* Application Number
1 K     (I4)
1 #MSG  (A) DYNAMIC
1 #term (N3)
1 #date (D)
1 #face (N7) 1 redefine #face
  2 #Units   (n4)
  2 #Dollars (n3)
1 #AT-ISN    (N8)
1 #CLERK-ID       (A3)
1 FROM-ONLINE-APP (A1)


1 PaymentOptions (A/10) DYNAMIC INIT <
  'MonthlyMilitaryAllotment',
  'MonthlyBankAccountWithdrawal',
  'QuarterlyBill',
  'SemiannualBill',
  'AnnualBill',
  'MonthlyBill',
  'CreditCardMonthly',
  'CreditCardQuarterly',
  'CreditCardSemiAnnually',
  'CreditCardAnnually'
  >
1 PaymentOptionCode (A1/10) INIT <'G','E','Q','S','A','M','0','4','2','1'>
1 InsuredGuid     (A36)
1 MemberGUID      (A36)
1 MemberGUIDupper (A36)
1 MemberCI        (N8)
1 CrmMemberRole   (L)
1 InsuredCI       (N8)
1 PayerGUID       (A36)
END-DEFINE
/*

IASOrder.UserCode := *TRIM (IASOrder.UserCode)
MOVE *TRANSLATE(IASOrder.UserCode, UPPER) TO IASOrder.UserCode
#GEN-KEY := 'WEBU'
FIND GEN-TABLE-V WITH GEN-KEY = #GEN-KEY
  ACCEPT IF *TRANSLATE(GEN-ALPHA-VALUE,UPPER)= IASOrder.UserCode
  #CLERK-ID := GEN-SUB-KEY
  ESCAPE BOTTOM
END-FIND

FOR AN 1 TO IASOrder.C@Application
  F1.
  FIND (1) AT-V WITH AT-GUID = IASOrder.CrmApplicationID (AN)
    IF NO RECORDS FOUND
      PERFORM CREATE-APPLICATION
      ESCAPE BOTTOM
    END-NOREC
    IF AT-V.AT-STATUS = 'SD'
      DELETE (F1.)
      PERFORM CREATE-APPLICATION
    ELSE
      IASOrder.ATNumber(AN) := AT-V.ID-NUMBER
    END-IF
  END-FIND
END-FOR

DEFINE CREATE-APPLICATION-ROLES
/*     ------------------------
*
* Application roles are [CrmApplicationID, Role, CRMContactID]
*
FIND APR-V WITH AT-GUID = IASOrder.CrmApplicationID (AN)
  DELETE
END-FIND
/*

RESET CrmMemberRole
MemberGUID := IASOrder.CRMMemberID
PayerGUID  := IASOrder.CRMMemberID
FIND (1) CNT-V WITH CRM-CONTACT-GUI = MemberGUID
  if no records found
    MemberGUIDupper := *translate(MemberGUID,UPPER)
    FIND (1) CNT-V WITH CRM-CONTACT-GUI = MemberGUIDupper
      MemberCI := CNT-V.contact-id
    END-FIND
  end-norec
  MemberCI := CNT-V.contact-id
END-FIND

FOR K 1 TO C@ApplicationRoles (AN)
  RESET #AT-ROLES
  #AT-ROLES.AT-GUID      := IASOrder.CrmApplicationID (AN)
  #AT-ROLES.CONTACT-GUID := IASOrder.CRMContactID     (AN,K)
  #AT-ROLES.CC-GUID      := IASOrder.CCSageGuid
  #AT-ROLES.CONTACT-ID   := IASOrder.IASContactID     (AN,K)
  IF #AT-ROLES.CONTACT-ID = 0
    find (1) cnt-v with CRM-CONTACT-GUI = IASOrder.CRMContactID (AN,K)
      if no records found
        #AT-ROLES.CONTACT-ID := MemberCI
      end-norec
      #AT-ROLES.CONTACT-ID := cnt-v.contact-id
    end-find
  END-IF
  #AT-ROLES.RELATION := GET-RELATION-ID (< IASOrder.Name (AN,K) >)
  #AT-ROLES.RelationToInsured := IASOrder.InsuredRelation (AN,K)

  DECIDE ON FIRST VALUE OF #AT-ROLES.RELATION
    VALUE InsuredRole
      InsuredGuid := IASOrder.CRMContactID (AN,K)
      InsuredCI   := #AT-ROLES.CONTACT-ID
    VALUE MemberRole
      MemberGUID := IASOrder.CRMContactID (AN,K)
      CrmMemberRole := TRUE
    VALUE PayorRole
      PayerGUID := IASOrder.CRMContactID (AN,K)
    NONE VALUE IGNORE
  END-DECIDE

  IF IASOrder.IsBeneRestricted (AN,K)
    #AT-ROLES.IsBeneRestricted := YES
  ELSE
    #AT-ROLES.IsBeneRestricted := NO
  END-IF
  IF IASOrder.AllChildren (AN,K)
    #AT-ROLES.AllChildren := YES
  ELSE
    #AT-ROLES.AllChildren := NO
  END-IF
  MOVE EDITED IASOrder.BenePercent (AN,K) (EM=999.99)
    TO  #AT-ROLES.BenePercent
  #AT-ROLES.SettlementType :=
    GET-SETTLEMENT-ID (< IASOrder.SettlementType (AN,K) >)
/*
  MOVE BY NAME #AT-ROLES TO APR-V
  APR-V.ADD-USER := *USER
  APR-V.ADD-DATE := *DATN
  APR-V.ADD-TIME := *TIMN
  APR-V.LAST-UPD-USER := *USER
  APR-V.LAST-UPD-DATE := *DATN
  APR-V.LAST-UPD-TIME := *TIMN
  APR-V.SETTLEMENT-TYPE := #AT-ROLES.SettlementType
  APR-V.BENE-RESTRICTED := #AT-ROLES.IsBeneRestricted
  APR-V.RELATION-ROLE   := #AT-ROLES.RELATION
  APR-V.RELATION-INSURED := #AT-ROLES.RelationToInsured
  APR-V.BENE-RESTRICTED := #AT-ROLES.IsBeneRestricted
  APR-V.ALL-CHILDREN    := #AT-ROLES.AllChildren
  APR-V.BENE-PERCENT    := #AT-ROLES.BenePercent
  APR-V.BENE-SETTLEMENT := 'B'

  STORE APR-V

END-FOR
*                   Create Member role if it is not passed from CRM
IF NOT CrmMemberRole
  RESET APR-V
  APR-V.ADD-USER := *USER
  APR-V.ADD-DATE := *DATN
  APR-V.ADD-TIME := *TIMN
  APR-V.LAST-UPD-USER := *USER
  APR-V.LAST-UPD-DATE := *DATN
  APR-V.LAST-UPD-TIME := *TIMN

  APR-V.AT-GUID       := IASOrder.CrmApplicationID (AN)
  APR-V.CONTACT-GUID  := MemberGUID
  APR-V.CONTACT-ID    := MemberCI
  APR-V.RELATION-ROLE := MemberRole
  APR-V.RELATION-INSURED  := 'Self'

  FIND CR-V WITH CONTACT-1-ID = InsuredCI
      and CONTACT-2-ID = MemberCI
    decide on first value of ROLE-1-CD
      value 'K', 'D', 'B'
        apr-v.RELATION-INSURED := 'Parent'
      value 'G'
        apr-v.RELATION-INSURED := 'Grandparent'
      none value
        apr-v.RELATION-INSURED  := 'Spouse'
    end-decide
  END-FIND

  STORE APR-V
END-IF
END-SUBROUTINE

DEFINE CREATE-APPLICATION
/*     ------------------
RESET #AT
  #AT-ROLES
  IASOrder.ErrorDescription_003 (AN)

CALLNAT 'C1014SAT' #AT.ID-NUMBER  /* Get AT Number
IF #AT.ID-NUMBER = 0
    IASOrder.ErrorDescription_003 (AN)
    := 'There is no AT record tracking number available'
  ESCAPE ROUTINE
ELSE
  IASOrder.ATNumber (AN) := #AT.ID-NUMBER
END-IF

#AT.WEIGHT      := IASOrder.Weight
#AT.HEIGHT-FT   := IASOrder.HeightFeet
#AT.HEIGHT-IN   := IASOrder.HeightInches
IF IASOrder.Nicotine
  #AT.SMOKER-FLAG := 'Y'
ELSE
  #AT.SMOKER-FLAG := 'N'
END-IF

/*  Populate CRM GUID of insured to be used in Application roles
PERFORM CREATE-APPLICATION-ROLES

*                      Not decided
*     <Premium>12.50</Premium>  Calculated in AT FIRST-PLACE-FEE ??
*     <HasOnlineApp>true</HasOnlineApp>  ??

#AT.AT-STATUS   := IASOrder.ATStatus (AN)
#AT.PLAN        := IASOrder.PlanCode (AN)  /* Get IAS plan code
DECIDE ON FIRST VALUE OF #AT.PLAN-A1
  VALUE 'U'
    #AT.PLAN-A1 := 'S'
  VALUE 'V'
    #AT.PLAN-A1 := 'R'
  VALUE 'W'
    #AT.PLAN-A1 := 'Q'
  ANY VALUE
    IF #AT.PLAN-A3 = BLANK
      #AT.PLAN-A3 := #AT.PLAN-A2
      #AT.PLAN-A2 := '0'
    END-IF
  NONE VALUE
    IGNORE
END-DECIDE
IF #AT.PLAN-A1 = 'L' and #AT.PLAN-A2 = 'T'
  RESET  #AT.PLAN-A3
END-IF
IF #AT.PLAN-A3 = 'P'
  RESET #AT.PLAN-A3
END-IF
#term := IASOrder.Term (AN)
#face := IASOrder.FaceAmount  (AN)

#AT.RATING-CODE    := IASOrder.PremiumClass (AN)
IF #AT.RATING-CODE = '1' OR= '2' OR= '3'
  IGNORE
ELSE
  RESET #AT.RATING-CODE
END-IF

IF InsuredGUID = MemberGUID
  #AT.POLICY-TYPE := 'M'
ELSE
  #AT.POLICY-TYPE := 'M' /* Logic for I,T,S,N,C

  IF MemberCI > 0
    FIND (1) CNT-V WITH CONTACT-ID = MemberCI
    END-FIND
  ELSE
    FIND (1) CNT-V WITH CRM-CONTACT-GUI = MemberGUID
    END-FIND
  END-IF

  IF CNT-V.contact-id > 0 /* Create payer CN
      AND CNT-V.ID-NUMBER = 0
    CALLNAT 'C2002NNM'
      CNT-V.contact-id
      CNT-V.id-number
      #MSG
  END-IF
  #AT.REFERING-ID-NUMBER (1) := CNT-V.id-number

  /*             Check contact relation
  FIND CR-V WITH CONTACT-1-ID = InsuredCI
      and CONTACT-2-ID = MemberCI
    decide on first value of ROLE-1-CD
      value 'K', 'D', 'B'
        #AT.INTRO-FLAG  := 'K'
      value 'G'
        #AT.INTRO-FLAG  := 'G'
      none value
        #AT.INTRO-FLAG  := 'S'
    end-decide
  END-FIND
END-IF

DECIDE FOR FIRST CONDITION
  WHEN PayerGUID = MemberGUID
    #AT.PAYER := 'M'  /* Logic for I,O
  WHEN PayerGUID = InsuredGUID
    #AT.PAYER := 'I'
  WHEN NONE
    #AT.PAYER := 'O'
END-DECIDE

#AT.FACE-AMT-DOLS  := #Dollars
#AT.FACE-AMT-UNITS := #Units
IF IASOrder.CapIndicator (AN)
  #AT.CAP-IND := 'Y'
ELSE
  #AT.CAP-IND := 'N'
END-IF
**#AT.APPL-SOURCE    := IASOrder.ApplSource (AN);
if #AT.APPL-SOURCE = BLANK
  #AT.APPL-SOURCE := 'QUOTE'
end-if
#AT.DATE-RECEIVED-A := IASOrder.CreatedOn (AN)
IF #AT.DATE-RECEIVED-A = MASK(YYYYMMDD)
  IGNORE
ELSE
*  RESET  #AT.DATE-RECEIVED
  #AT.DATE-RECEIVED := *DATN 
END-IF
**move edited IASOrder.CreatedOn (J) to #date (em=MM'/'DD'/'YYYY)
**move edited #date (EM=YYYYMMDD) to #AT.DATE-RECEIVED-A
#AT.AT-STATUS    := IASOrder.ATStatus (AN)
* #AT.RANK         :=

MOVE BY NAME #AT TO AP-Tracking
*
IF C@Contact  > 0
  IF IASOrder.BranchOfService(1) <> BLANK
    AP-Tracking.MIL-SERVICE  := IASOrder.BranchOfService(1) /* TT1
    AP-Tracking.MIL-STATUS   := IASOrder.MilitaryStatus(1)  /* TT1
  END-IF
END-IF
*
AP-Tracking.CONTACT-ID := InsuredCI
AP-Tracking.USER-SOURCE := #CLERK-ID
AP-Tracking.ST-NOTE-STATUS (1) := #AT.AT-STATUS
AP-Tracking.ST-NOTE-USER   (1) := #CLERK-ID
AP-Tracking.YES-ON-MED := 'Y'
AP-Tracking.AT-GUID := IASOrder.CrmApplicationID (AN)


EXAMINE FULL PaymentOptions (*) FOR FULL IASOrder.PaymentOption INDEX K
if K > 0
  AP-Tracking.MODE := PaymentOptionCode (K)
end-if

MOVE EDITED *DATX (EM=YYYYMMDD) TO ST-NOTE-DATE-A
FOR K 1 TO 3000
  IF AP-Tracking.NOTES-A (K) < 32 OR AP-Tracking.NOTES-A (K) > 127
    ASSIGN NOTES-A (K) = 32
  END-IF
END-FOR

IF AP-Tracking.MEMBER-CN NE BLANK   /* Member CN doesn't exist
  FIND ST-V WITH ID-NUMBER = AP-Tracking.MEMBER-CN-N
    IF NO RECORDS FOUND
      RESET AP-Tracking.MEMBER-CN
    END-NOREC
  END-FIND
END-IF

IF AP-Tracking.REFERING-ID-NUMBER (1) NE 0  /* Linked CN = Obsolete
  FIND ST-V WITH ID-NUMBER = AP-Tracking.REFERING-ID-NUMBER (1)
    IF NO RECORDS FOUND
      RESET AP-Tracking.REFERING-ID-NUMBER (1)
      ESCAPE BOTTOM
    END-NOREC
    IF AP-Tracking.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
      FOR K 1 TO 30
        IF ST-V.LINKED-CN ( K ) = 0
          ST-V.LINKED-CN ( K ) := AP-Tracking.ID-NUMBER
          UPDATE (0523)
          ESCAPE BOTTOM
        END-IF
      END-FOR
    END-IF
  END-FIND
END-IF

AP-Tracking.DRIVERS-LICENSE-NUM := IASOrder.Drivers-License-Num
AP-Tracking.STATE-ISSUED := IASOrder.State-Issued

STORE-AT.
STORE AP-Tracking
#AT-ISN := *ISN ( STORE-AT. )

CALLNAT 'GOATN003'
  AP-Tracking.CONTACT-ID
  AP-Tracking.ID-NUMBER
  IASOrder.ErrorDescription_003 (AN)

END-SUBROUTINE
/*

END
