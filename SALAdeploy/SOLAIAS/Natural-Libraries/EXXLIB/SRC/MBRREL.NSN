* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* CRM Admin interface : Pass Member data to Sales CRM
************************************************************************
* NAME         : MBRREL                                                *
* AUTHOR       : Copyright: MetrostarSystems AAFMAA                    *
* DESCRIPTION  : Return Quotes for Given Product/AmountsBenefits       *
************************************************************************
*        MODIFICATION LOG                                              *
************************************************************************
* USER   DATE      TAG  REASON
* NGG    20100128      Initial Creation
*********************************************************

* <Relationships>
* <Relationship>
*    <Delete>Yes</Delete>                       New tag
*    <MemberContactID>123456</MemberContactID >
*    <MemberRole>Parent</MemberRole>
*    <PartnerContactID>123456</PartnerContactID >
*    <PartnerRole>Child</PartnerRole>
*   </Relationship>
* </Relationships>

DEFINE DATA
PARAMETER
1 #MEMBER-CONTACT-ID  (N8)
1 XML_SERIALZE_OUTPUT (A) DYNAMIC
1 #CSV-LINE           (A) DYNAMIC
1 #CRM-Result         (A) DYNAMIC
1 #CRM-Request        (I4)
*
LOCAL
* Search S-ADDRESS-CODE
1 BLANK             (A1) CONST <' '>
1 #COMMA            (A1) CONST <','>
1 #DASH             (A1) CONST <'-'>
1 #TAB              (A1) CONST <H'09'>
1 #Timeout          (A2) CONST <'-2'>
1 #Natural-error    (A2) CONST <'-3'>
1 #YES              (A3) CONST <'Yes'>
1 #NO               (A3) CONST <'No'>
*
1 CNT-REL VIEW OF A-CONTACT-RELATIONSHIPS
  2 CONTACT-1-ID                      (N8.0) /* Descriptor
  2 ROLE-1-CD                         (A1)
  2 CONTACT-2-ID                      (N8.0) /* Descriptor
  2 ROLE-2-CD                         (A1)
  2 LAST-USER-UPD                     (A8)
  2 ACCESS-AUTH-SVC                   (A1)   /* Insurance IAS database
  2 ACCESS-AUTH-INS                   (A1)   /* Services  SAS database
*
1 MEMBER VIEW OF A-STATUS
  2 ID-NUMBER
*
1 #PARTNER-ROLE   (A30)
1 #MEMBER-ROLE    (A30)
1 #ERROR-CODE             (A2)
1 J                       (I4)
1 #SKIP                   (L)
1 MEMBER_CONTACT_ID       (N8)
1 PARTNER_CONTACT_ID      (N8)
1 #Delete                 (A3)
1 #TABLE-CODE             (A3) CONST <'041'>
1 #UNKNOWN                (A7) CONST <'Unknown'>
1 #ERROR-LOG              (I4) CONST <3>
*
END-DEFINE

* ASSIGN XML_SERIALZE_OUTPUT = '<?xml version="1.0"?>'
RESET XML_SERIALZE_OUTPUT #Delete
IF #MEMBER-CONTACT-ID > 0
*  FIND MEMBER WITH MEMBER-CONTACT-ID = #MEMBER-CONTACT-ID
*    WRITE NOTITLE 'Member ID:' #MEMBER-CONTACT-ID MEMBER.ID-NUMBER
*  END-FIND
  FIND CNT-REL WITH CONTACT-2-ID = #MEMBER-CONTACT-ID /* Reverse relation
    IF NO RECORDS
      ESCAPE BOTTOM
    END-NOREC
    PERFORM SET-DELETE
    ASSIGN MEMBER_CONTACT_ID = #MEMBER-CONTACT-ID
    ASSIGN PARTNER_CONTACT_ID = CNT-REL.CONTACT-1-ID
    PERFORM FORMAT-RULES-REVERSE
    IF NOT #SKIP
      PERFORM GENERATE-XML
    END-IF
  END-FIND

  FIND CNT-REL WITH CONTACT-1-ID = #MEMBER-CONTACT-ID /* Left to right relation
    IF NO RECORDS
      ESCAPE BOTTOM
    END-NOREC
    PERFORM SET-DELETE
    ASSIGN MEMBER_CONTACT_ID = #MEMBER-CONTACT-ID
    ASSIGN PARTNER_CONTACT_ID = CNT-REL.CONTACT-2-ID
    PERFORM FORMAT-RULES
    IF NOT #SKIP
      PERFORM GENERATE-XML
    END-IF
  END-FIND
END-IF

DEFINE FORMAT-RULES
/*     ============
RESET #MEMBER-ROLE #PARTNER-ROLE #SKIP
#MEMBER-ROLE := FUNCTION-CODE-1-DESC (< #TABLE-CODE, ROLE-1-CD >)
#PARTNER-ROLE := FUNCTION-CODE-1-DESC (< #TABLE-CODE, ROLE-2-CD >)
IF #MEMBER-ROLE = BLANK
  ASSIGN #MEMBER-ROLE = #UNKNOWN
END-IF
IF #PARTNER-ROLE = BLANK
  ASSIGN #PARTNER-ROLE = #UNKNOWN
END-IF
IF CNT-REL.CONTACT-1-ID = 0
    OR CNT-REL.CONTACT-2-ID = 0
  ASSIGN #SKIP = TRUE
END-IF
IF CNT-REL.CONTACT-1-ID = CNT-REL.CONTACT-2-ID
  ASSIGN #SKIP = TRUE
END-IF
END-SUBROUTINE

DEFINE FORMAT-RULES-REVERSE
/*     ====================
RESET #MEMBER-ROLE #PARTNER-ROLE #SKIP
#MEMBER-ROLE := FUNCTION-CODE-1-DESC (< #TABLE-CODE, ROLE-2-CD >)
#PARTNER-ROLE := FUNCTION-CODE-1-DESC (< #TABLE-CODE, ROLE-1-CD >)
IF #MEMBER-ROLE = BLANK
  ASSIGN #MEMBER-ROLE = #UNKNOWN
END-IF
IF #PARTNER-ROLE = BLANK
  ASSIGN #PARTNER-ROLE = #UNKNOWN
END-IF
IF CNT-REL.CONTACT-1-ID = 0
    OR CNT-REL.CONTACT-2-ID = 0
  ASSIGN #SKIP = TRUE
END-IF
IF CNT-REL.CONTACT-1-ID = CNT-REL.CONTACT-2-ID
  ASSIGN #SKIP = TRUE
END-IF
END-SUBROUTINE

DEFINE GENERATE-XML
/*     ============
COMPRESS NUMERIC '<Relationships>' INTO XML_SERIALZE_OUTPUT LEAVING NO
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Relationship'
  '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Delete>' #Delete  '</Delete>'
  INTO XML_SERIALZE_OUTPUT LEAVING NO
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<MemberContactID>' MEMBER_CONTACT_ID
  '</MemberContactID>'
  INTO XML_SERIALZE_OUTPUT LEAVING NO
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<MemberRole>' #MEMBER-ROLE '</MemberRole>'
  INTO XML_SERIALZE_OUTPUT LEAVING NO
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<PartnerContactID>' PARTNER_CONTACT_ID
  '</PartnerContactID>'
  INTO XML_SERIALZE_OUTPUT LEAVING NO
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<PartnerRole>' #PARTNER-ROLE '</PartnerRole>'
  INTO XML_SERIALZE_OUTPUT LEAVING NO
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '</Relationship'
  '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '</Relationships'
  '>' INTO XML_SERIALZE_OUTPUT LEAVING NO

IF #CRM-Request > 0
  IF *DEVICE = "BATCH" THEN
    IGNORE
  ELSE
*    PRINT XML_SERIALZE_OUTPUT
    ignore
  END-IF
  CALLNAT 'CRMSYNC' XML_SERIALZE_OUTPUT (AD=O) #CRM-Request (AD=O) #CRM-Result (AD=M)
END-IF

END-SUBROUTINE

DEFINE CSV-LINE
/*     ========
IF #CRM-Request = 0
  COMPRESS FULL
    CONTACT-1-ID
    #MEMBER-ROLE
    CONTACT-2-ID
    #PARTNER-ROLE
    INTO #CSV-LINE WITH DELIMITERS #TAB
END-IF
END-SUBROUTINE

DEFINE SET-DELETE
/*     ==========
IF #CSV-LINE = 'Import'
  ASSIGN #Delete = #NO
END-IF
DECIDE ON FIRST VALUE OF #Delete
  VALUE BLANK
    ASSIGN #Delete = #YES
  VALUE #YES
    ASSIGN #Delete = #NO
  NONE VALUE IGNORE
END-DECIDE
END-SUBROUTINE

ON ERROR
/*
  RESET #ERROR-CODE
  CALLNAT 'CRMLOG' #ERROR-CODE #CRM-Result
    #ERROR-LOG
  ESCAPE ROUTINE
END-ERROR

END
