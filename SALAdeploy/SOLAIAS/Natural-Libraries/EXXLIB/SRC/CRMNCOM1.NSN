* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*
************************************************************************
* NAME         : CRMNCOM1                                              *
* AUTHOR       : Copyright: MetrostarSystems AAFMAA                    *
* DESCRIPTION  : CRM CreateContact requests                            *
************************************************************************
*        MODIFICATION LOG                                              *
************************************************************************
* USER   DATE      TAG  REASON
* NGG  20100128         Initial Creation
* bz   03/10/2017       HD-3056: added Create Dummy WEB Account
* NGG  12/28/2017  NG1  Project SOLA
*
DEFINE DATA
PARAMETER USING CRMACO01
**LOCAL USING GOCOA001
**LOCAL USING GOPHA001
**LOCAL USING GOEMA001
**LOCAL USING GOADA001
LOCAL USING MBR00PDA
LOCAL USING GOSTMA01
LOCAL USING GOCOA001               /* YK1 - Change CONTACT structure to use PDA 
LOCAL
1 BLANK     (A1) CONST  <' '>
1 #ADDR-POOL
  2 ADDRESS-POOL-ID (N8)
  2 STREET (A50)
  2 UNIT (A25)
  2 CITY (A50)
  2 STATE-CODE (A2)
  2 ZIP-CODE (N9)
  2 REDEFINE ZIP-CODE /* BEGIN REDEFINE: ZIP-CODE
    3 ZIP-5 (N5)
    3 ZIP-4 (N4)
  2 COUNTRY-CODE (A2)
  2 INTL-REGION (A50)
  2 POSTAL-CODE (A25)
  2 URBANIZATION (A50)
  2 ADDR-VALID-IND (A1)
1 #ADDR-REL
  2 CONTACT-ID (N8)
  2 ADDRESS-POOL-ID (N8)
  2 ADDR-TYPE-CD (A1)      /* Primary, Secondary
  2 ADDR-LOCATION (A1)
  2 ATTENTION-LINE (A50)
  2 RETURNED-MAIL-IND (A1)
  2 PREVENT-OVER-IND (A1)
  2 ADDRESS-SOURCE (A1)
  2 STATUS (A1)
  2 STATUS-DATE (N8)
1 #CLERK-ID (A3)
1 #MSG (A) DYNAMIC
* YK1 >
* 1 #CONTACT
*   2 CONTACT-ID (N8.0)
*   2 ID-NUMBER (N6)
*   2 CONTACT-TYPE (A1)
*   2 RANK-ID (N6)
*   2 MILITARY-STATUS (A1)
*   2 PREFIX-TITLE (A25)
*   2 FULL-NAME
*     3 FIRST-NAME (A25)
*     3 MIDDLE-NAME (A25)
*     3 LAST-NAME (A25)
*     3 SUFFIX (A10)
*   2 GENDER-CD (A1)
*   2 DATE-OF-BIRTH (N8.0)
*   2 SSN (N9.0)
*   2 FIRM-ORGANIZATION-NAME (A75)
*   2 WEBSITE-URL (A70)
*   2 CRM-CONTACT-GUI (A50)         
*   2 #FORCE-NEW (L)
* < YK1
1 #PHONE
  2 PHONE-ID (N8.0)
  2 CONTACT-ID (N8.0)
  2 PHONE-TYPE-CODE (A1)
  2 INTL-ACCESS-CODE (N3.0)
  2 INTL-DIAL-NUMBER-A (A20)
  2 REDEFINE INTL-DIAL-NUMBER-A /* BEGIN REDEFINE: INTL-DIAL-NUM
    3 INTL-DIAL-NUMBER (N20)
  2 AREA-CODE (N3.0)
  2 DIAL-NUMBER (N7.0)
  2 EXT (N6.0)
  2 PREFERRED-PHONE-IND (A1)
  2 PHONE-SOURCE (A1)
  2 REMARKS (A70/3)
1 #EMAIL
  2 EMAIL-ID (N8)
  2 CONTACT-ID (N8)
  2 EMAIL-TYPE (A1)
  2 EMAIL-ADDRESS (A70)
  2 EMAIL-PROTECTION-IND (A1)
  2 EMAIL-UNDELIV (A1)
  2 EMAIL-PREFERRED-IND (A1)
  2 EMAIL-SOURCE (A1)
  2 STATUS (A1)
  2 STATUS-DATE (N8)
  2 REMARKS (A70/3)
1 #CONTACT-EXIST       (L)
1 #UPDATED             (L/9)
1 #CNT-IDS-N                   (I4)
1 #CNT-IDS                     (A/64) DYNAMIC
1 #ADMIN-CI                    (N8/64)
*
1 p_GOST0N01
  2 p_CN       (N6)
  2 p_Err      (N4)
  2 p_Err_Dscr (A78)
  2 p_Mod      (A1)
*
1 #CN-PARMS
  2 CN                   (N6)
  2 ERR                  (N4)
  2 ERR-DESC             (A78)
  2 MOD                  (A1)
*
1 CNT-V VIEW OF A-CONTACTS
  2 ID-NUMBER       (N6)
  2 MILITARY-STATUS (A1)
  2 RANK-ID         (N6)
  2 FIRST-NAME      (A25)
  2 MIDDLE-NAME     (A25)
  2 LAST-NAME       (A25)
  2 SUFFIX          (A10)
  2 SSN             (N9.0)
  2 GENDER-CD       (A1)
  2 DATE-OF-BIRTH   (N8.0)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
*
1 RR VIEW OF A-RANK-REFERENCE
  2 RANK-IN-SAS
  2 MILITARY-ID
*
END-DEFINE
*
Contact.ErrorDescription := BLANK
RESET #ADDR-POOL #ADDR-REL
  #CONTACT
  #PHONE
  #EMAIL
  #EMAIL-SP
  #EMAIL-IDS (*)
  #PHONE-SP
  #PHONE-IDS (*)
  #ADDRESS-SP
  #ADDRESS-IDS (*)
  #UPDATED   (*)
*
#CONTACT.DATE-OF-BIRTH := Contact.DateOfBirth
#CONTACT.FIRST-NAME := Contact.FirstName
#CONTACT.MIDDLE-NAME := Contact.MiddleName
#CONTACT.LAST-NAME := Contact.LastName
#CONTACT.PREFIX-TITLE := Contact.Prefix
#CONTACT.SUFFIX := Contact.Suffix
#CONTACT.CONTACT-TYPE := Contact.ContactType
#CONTACT.RANK-ID := Contact.MilitaryRankId
#CONTACT.MILITARY-STATUS := Contact.MilitaryStatus
#CONTACT.GENDER-CD := Contact.Gender
#CONTACT.SSN := Contact.GovtID
#CONTACT.CRM-CONTACT-GUI := Contact.Id    /* NG1
*
IF Contact.ContactID = 0
  PERFORM CREATE-CONTACT
  Contact.ContactID := #CONTACT.CONTACT-ID
*
  #ADDR-POOL.STREET     := Contact.Street
  #ADDR-POOL.UNIT       := Contact.Unit
  #ADDR-POOL.CITY       := Contact.City
  #ADDR-POOL.ZIP-CODE   := Contact.Zip
  IF Contact.Certified
    #ADDR-POOL.ADDR-VALID-IND   := 'Y'
  END-IF
  #ADDR-POOL.COUNTRY-CODE   := Contact.CountryCode
  #ADDR-POOL.STATE-CODE := Contact.State
  #ADDR-REL.ADDR-TYPE-CD := 'P'
  #ADDR-REL.RETURNED-MAIL-IND := Contact.Undeliverable
  PERFORM CREATE-ADDRESS
*
  #PHONE.INTL-DIAL-NUMBER-A := Contact.PhoneNumber
  #PHONE.REMARKS (1) := Contact.Remarks
  #PHONE.PHONE-TYPE-CODE := Contact.Type
  IF Contact.Preferred
    #PHONE.PREFERRED-PHONE-IND := 'Y'
  END-IF
  IF Contact.Extension IS (N6)
    #PHONE.EXT := VAL (Contact.Extension)
  END-IF
  PERFORM CREATE-PHONE
*
  #EMAIL.EMAIL-ADDRESS := Contact.EmailAddress
  #EMAIL.EMAIL-TYPE := Contact.Type_003
  PERFORM CREATE-EMAIL
END-IF
*
PERFORM CREATE-CN
*
IF #UPDATED (*)
  END TRANSACTION
END-IF
/*
DEFINE CREATE-CN
/*     ---------
FIND CNT-V WITH CONTACT-ID = Contact.ContactID
  IF CNT-V.ID-NUMBER > 0
    ESCAPE ROUTINE
  END-IF
END-FIND
*
FIND ST-V WITH MEMBER-CONTACT-ID = Contact.ContactID
  IF NO RECORDS FOUND
    CALLNAT 'GOST0N01' p_GOST0N01     /* Get New CN, Create DUMMY STATUS*
    CALLNAT 'GOWEB001'  p_CN Err #UPDATED(5) /*  bz HD-3056  Create DUMMY WEB
    #STATUS.ID-NUMBER := p_CN
    IF #STATUS.ID-NUMBER > 0
      FIND CNT-V WITH CONTACT-ID = Contact.ContactID
        CNT-V.ID-NUMBER := #STATUS.ID-NUMBER
        UPDATE  (0223)
      END-FIND
    END-IF
    #STATUS.MEMBER-CONTACT-ID       := Contact.ContactID
    #STATUS.MEMBER-FLAG             := 'Y'
    #STATUS.INTRO-FLAG              := 'O'
    #STATUS.PROCESS-IND             := 'S'
    FIND RR WITH RANK-ID = CNT-V.RANK-ID
      #STATUS.RANK   := RR.RANK-IN-SAS
      #STATUS.MILITARY-SERVICE        := RR.MILITARY-ID
    END-FIND
    #STATUS.MILITARY-STATUS         := CNT-V.MILITARY-STATUS
    #STATUS.APPL-SOURCE             := 'SAS'
*
    CALLNAT 'GOSTMN01' #STATUS p_Err  p_Err_Dscr p_Mod
/*         Synch contact information with Status
    #CN-PARMS.CN := p_CN
    CALLNAT 'GOSTCN01'
      #CN-PARMS
*     CALLNAT 'GOSTPN01'                        /* Synch phone
*       #CN-PARMS
*     CALLNAT 'GOSTEN01'                        /* Synch email
*       #CN-PARMS
*
* RESET p_GOST0N01
* p_CN := #STATUS.ID-NUMBER                 /* Create FIR
* CALLNAT 'S0FIRN01' p_GOST0N01
    #UPDATED (3) := TRUE
    Contact.CN := #STATUS.ID-NUMBER
    ESCAPE BOTTOM
  END-NOREC
  FIND (1) CNT-V WITH CONTACT-ID = Contact.ContactID
    CNT-V.ID-NUMBER := ST-V.ID-NUMBER
    UPDATE
    #UPDATED (3) := TRUE
    Contact.CN := #STATUS.ID-NUMBER
  END-FIND
END-FIND
*
END-SUBROUTINE
*
DEFINE CREATE-EMAIL
/*     ==============
IF #CONTACT-EXIST
  ESCAPE ROUTINE
END-IF
IF #EMAIL.EMAIL-ADDRESS NE BLANK
  RESET #MSG
  #EMAIL.CONTACT-ID := #CONTACT.CONTACT-ID
  IF #EMAIL.EMAIL-TYPE = BLANK      /* Default is P NG1
    #EMAIL.EMAIL-TYPE := 'P'
  END-IF
  CALLNAT 'GOEMN001' #EMAIL #CLERK-ID #MSG
    #UPDATED (7)
  IF #MSG = BLANK
    ADD 1 TO #EMAIL-SP
    #EMAIL-IDS ( #EMAIL-SP ) := #EMAIL.EMAIL-ID
  ELSE
    COMPRESS Contact.ErrorDescription #MSG INTO Contact.ErrorDescription
  END-IF
END-IF
END-SUBROUTINE
/*
DEFINE CREATE-PHONE
/*     ==============
IF #CONTACT-EXIST
  ESCAPE ROUTINE
END-IF
IF #PHONE.INTL-DIAL-NUMBER NE 0
  #MSG := 'ZERO ACCEPTED'
  #PHONE.CONTACT-ID := #CONTACT.CONTACT-ID
  CALLNAT 'GOPHN001' #PHONE #CLERK-ID #MSG
    #UPDATED (4)
  IF #MSG = BLANK
    ADD 1 TO #PHONE-SP
    #PHONE-IDS ( #PHONE-SP ) := #PHONE.PHONE-ID
  ELSE
    COMPRESS Contact.ErrorDescription #MSG INTO Contact.ErrorDescription
  END-IF
END-IF
END-SUBROUTINE
/*
DEFINE CREATE-ADDRESS
/*     ==============
IF #CONTACT-EXIST
  ESCAPE ROUTINE
END-IF
IF #ADDR-POOL.STREET NE BLANK
  RESET #MSG
  #ADDR-REL.CONTACT-ID := #CONTACT.CONTACT-ID
  IF #ADDR-REL.ADDRESS-SOURCE = BLANK
    #ADDR-REL.ADDRESS-SOURCE := 'A'
  END-IF
  IF #ADDR-POOL.COUNTRY-CODE = BLANK   /* Default is US NG1
    #ADDR-POOL.COUNTRY-CODE := 'US'
  END-IF
  IF #ADDR-POOL.COUNTRY-CODE = 'US' OR= 'PR'
    RESET #ADDR-POOL.POSTAL-CODE
  ELSE
    RESET #ADDR-POOL.ZIP-CODE
  END-IF
  CALLNAT 'GOADN001' #ADDR-POOL #ADDR-REL #CLERK-ID #MSG
    #UPDATED (2)
  IF #MSG = BLANK
    ADD 1 TO #ADDRESS-SP
    #ADDRESS-IDS ( #ADDRESS-SP ) := #ADDR-POOL.ADDRESS-POOL-ID
  ELSE
    COMPRESS Contact.ErrorDescription #MSG INTO Contact.ErrorDescription
  END-IF
END-IF
END-SUBROUTINE
/*
DEFINE CREATE-CONTACT
/*     ==============
* PRINT 'CREATE CONTACT' * ESCAPE ROUTINE
IF #CONTACT.CONTACT-TYPE = BLANK
  #CONTACT.CONTACT-TYPE := 'I'
END-IF

CALLNAT 'GOCON001' #CONTACT #CLERK-ID #MSG
  #UPDATED (1)
IF *LENGTH ( #MSG ) > 0
  COMPRESS Contact.ErrorDescription #MSG INTO Contact.ErrorDescription
END-IF
*
IF #CONTACT.CONTACT-ID > 0
    AND #UPDATED (1)   /* New Contact
  RESET #CONTACT-EXIST
ELSE
  #CONTACT-EXIST := TRUE
END-IF
END-SUBROUTINE
/*
ON ERROR
  Contact.ErrorDescription := 'Internal error'
  RESET #UPDATED (*)
  BACKOUT TRANSACTION
  ESCAPE ROUTINE
END-ERROR
*
END
