* >Natural Source Header 000000
* :Mode S
* :CP
* <Natural Source Header
/** New Program ADHSOLA7.
/**
/** :author nguentchev
/* TODO Enter your code here
define data
local
1 J     (I4)
1 #ISN  (P8)
1 CC-INFO-V VIEW OF A-CC-INFO
  2 ID-NUMBER (N6.0)
  2 POLICY-NUMBER (A16)
  2 CC-NUMBER (A16)
  2 CC-EXPIRATION-MONTH (A2)
  2 CC-EXPIRATION-YEAR (A4)
  2 CC-GUID (A32)
  2 CRM-CONTACT-ID (A36)
  2 CC-DEFAULT-IND (A1)
  2 CCHOLDER-NAME (A50)
  2 CCHOLDER-STREET-ADDR (A50)
  2 CCHOLDER-ADDL-ADDR (A50)
  2 CCHOLDER-CITY (A50)
  2 CCHOLDER-STATE-CD (A2)
  2 CCHOLDER-COUNTRY (A50)
  2 CCHOLDER-ZIP-CODE (N5.0)
  2 CCHOLDER-POSTAL-CODE (A10)
  2 CC-ADDR-FORMAT-CODE (A1)
  2 CC-ADDR-VALIDATION-CODE (A1)
  2 LAST-USER-UPDATE (A8)
  2 LAST-DATE-UPDATE (N8.0)
  2 LAST-TIME-UPDATE (N7)
1 #Default (L)
end-define

input 'Customer number:' ID-NUMBER

/* Check if there are more than 3 CC. Prevent abend in CA CC
FNL.
FIND NUMBER CC-INFO-V WITH ID-NUMBER = CC-INFO-V.ID-NUMBER

J := *NUMBER (FNL.)
IF J > 3
  PERFORM DELETE-BY-EXPIRATION
END-IF

DEFINE DELETE-BY-EXPIRATION
/*     --------------------
J := J - 1  /* SKIP DEFAULT
FIND CC-INFO-V WITH ID-NUMBER = CC-INFO-V.ID-NUMBER
    WHERE CC-DEFAULT-IND NE 'Y'
  #ISN := *ISN
END-ALL
  AND
SORT BY 
    CC-INFO-V.CC-EXPIRATION-YEAR
    CC-INFO-V.CC-EXPIRATION-MONTH
    USING #ISN CC-DEFAULT-IND
  IF J > 2
    GET CC-INFO-V #ISN
    DELETE
    J := J - 1
  ELSE
    ESCAPE BOTTOM
  END-IF
END-SORT
END-SUBROUTINE

print 'Number of credit cards:' J
reset J
find CC-INFO-V with id-number = CC-INFO-V.ID-NUMBER
  add 1 to J
  print J '========================='
    / '=' ID-NUMBER
    / '=' POLICY-NUMBER
    / '=' CC-NUMBER
    / '=' CC-EXPIRATION-MONTH
    / '=' CC-EXPIRATION-YEAR
    / '=' CC-GUID
    / '=' CRM-CONTACT-ID
    / '=' CC-DEFAULT-IND
    / '=' CCHOLDER-NAME
    / '=' CCHOLDER-STREET-ADDR
    / '=' CCHOLDER-ADDL-ADDR
    / '=' CCHOLDER-CITY
    / '=' CCHOLDER-STATE-CD
    / '=' CCHOLDER-COUNTRY
    / '=' CCHOLDER-ZIP-CODE
    / '=' CCHOLDER-POSTAL-CODE
    / '=' CC-ADDR-FORMAT-CODE
    / '=' CC-ADDR-VALIDATION-CODE
    / '=' LAST-USER-UPDATE
    / '=' LAST-DATE-UPDATE
**    / '=' LAST-TIME-UPDATE
  if CC-DEFAULT-IND NE ' '
    #Default := true
  end-if
end-find

if NOT #Default
  find (1) cc-info-v with ID-NUMBER = CC-INFO-V.ID-NUMBER
    CC-DEFAULT-IND := 'Y'
    update
    end transaction
  end-find
end-if
END
