* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
/** New Program MANPHSTF.
/** Show withdravals history
/** :author nguentchev
/*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL
*
1 AHIST-V VIEW OF A-ANNU-HISTORY
  2 POLICY-NUMBER (A16)
  2 CONTACT-ID (N8.0)
  2 ANNUITANT-STATUS (A1)
  2 SETTLEMENT-OPTION (A2)
  2 MONTHLY-PENSION (N7.2)
  2 PRINCIPAL       (N7.2)
  2 ANNUAL-PAYMENT  (N7.2)
  2 RESERVE-AMOUNT  (N7.2)
  2 WITHDRAWALS     (N7.2)
  2 WITHDRAWAL-DATE (N8)
  2 ONE-MONTH-PENSION (N7.2)
  2 ONE-MP-DATE       (N8.0)
  2 REFERENCE-CN (N6.0)
  2 START-DATE (N8.0) 2 REDEFINE START-DATE
    3 YYYY (A4)
    3 MM   (A2)
    3 DD   (A2)
  2 ADD-USER (A8)
  2 ADD-DATE (N8.0)
  2 ADD-TIME (N7.0)
  2 LAST-UPD-USER (A8)
  2 LAST-UPD-DATE (N8.0)
  2 LAST-UPD-TIME (N7.0)
  2 CHECK-NUMBER  (A10)
*
1 AU-V VIEW OF A-ANNUITANTS
  2 CONTACT-ID        (N8)
  2 REFERENCE-CN      (N6)
  2 POLICY-NUMBER     (A16)
  2 ANNUITANT-STATUS  (A1)
  2 SETTLEMENT-OPTION (A2)
  2 PRINCIPAL         (N7.2)
  2 WITHDRAWALS       (N7.2)
  2 RESERVE-AMOUNT    (N7.2)
  2 MONTHLY-PENSION   (N7.2)
  2 TAXABLE           (N7.2)
  2 WITHDRAWAL-DATE   (N8)
  2 ONE-MONTH-PENSION (N7.2)
  2 ONE-MP-DATE       (N8.0)
  2 LAST-UPD-USER     (A8)
  2 LAST-UPD-DATE     (N8.0)
  2 CHECK-NUMBER      (A10)
*
1 CONTACT-V VIEW OF A-CONTACTS
  2 ID-NUMBER  (N6)
  2 CONTACT-TYPE (A1)
  2 CONTACT-ID (N8)
  2 GENDER-CD  (A1)
  2 SSN        (N9)
  2 DATE-OF-BIRTH (N8)
  2 REDEFINE DATE-OF-BIRTH
    3 YYYY (N4)
    3 MM   (N2)
    3 DD   (N2)
1 #CONTACT-ID  (N8)
*
1 #LINE-FIELDS
  2 POLICY-NUMBER     (A16)
  2 ANNUITANT-STATUS  (A1)
  2 SETTLEMENT-OPTION (A2)
  2 WITHDRAWALS       (N7.2)
  2 RESERVE-AMOUNT    (N7.2)
  2 LAST-UPD-USER     (A8)
  2 WITHDRAWAL-DATE   (N8.0)
  2 REDEFINE WITHDRAWAL-DATE
    3 #YYYY (A4)
    3 #MM   (A2)
    3 #DD   (A2)
  2 CHECK-NUMBER (A10)
1 #MAX-H-L     (I2) CONST <99>
1 #SCR-DATA
  2 POLICY-NBR        (A16)
  2 ISSUE-DATE        (N8)
  2 REDEFINE ISSUE-DATE
    3 #YYYY  (N4)
    3 #MM    (N2)
    3 #DD    (N2)
  2 #HIST-LINES    (I2)
  2 #FIELD         (A10/#MAX-H-L,7)
  2 #FIELD-VALUE   (N7.2/#MAX-H-L,7)
  2 #UPDATE-DATE   (A10/#MAX-H-L)
  2 #WD-ISN        (P8/#MAX-H-L)
  2 #CONTROL-VARS  (C/#MAX-H-L,7)
  2 #CV-SAVE       (C/#MAX-H-L,7)

1 #TITLES (A10/2,7) CONST
  (1,1) <'Annuity'>
  (1,2) <'Policy'>
  (1,3) <'Withdrawal'>
  (1,4) <'Withdrawal'>
  (1,5) <'Update'>
  (1,6) <'Check'>
  (1,7) <'Available'>

  (2,1)  <'TypeStatus'>
  (2,2)  <'Number'>
  (2,3)  <'Amount'>
  (2,4)  <'Date'>
  (2,5)  <'User'>
  (2,6)  <'Number'>
  (2,7)  <'Amount'>
1 #ANNUITY    (I2) CONST <1>
1 #POLICY     (I2) CONST <2>
1 #WDAMT      (I2) CONST <3>
1 #WDDATE     (I2) CONST <4>
1 #UPDUSR     (I2) CONST <5>
1 #CHECK      (I2) CONST <6>
1 #AVLAMT     (I2) CONST <7>
1 #DAYS-IN-MONTH (N2)   CONST <30>
1 #VALID-STATUS  (A1/3) CONST <'A','D','P'>
1 BLANK          (A1)   CONST    <' '>
1 #MSG-LIST      (A/4)  DYNAMIC INIT <
  'Maximum 2 withdrawals per year',
  'Invalid Amount.. Field must be numeric',
  'Withdrawal amount is bigger than amount available',
  'Withdrawal date invalid format MM/DD/YYYY'
  >
1 #INTEREST-ONLY      (A2) CONST <'IO'>
1 #LINES-PER-PAGE     (N7) CONST <10>

1 #ADDRESS            (A43/4)
1 #AGE                (N03.0)
1 #TODAY-A            (A10)
1 #SCR-TERMID         (A12)
*
1 #TODAY              (N8)
1 REDEFINE #TODAY
  2 #YYYY  (N4)
  2 #MM    (N2)
  2 #DD    (N2)
1 REDEFINE #TODAY
  2 #YYYY-A (A4)
*
1 #MSG                (A60)
1 #13TH-CHECK         (N7.2)
1 #DEPOSIT            (N7.2)
1 #DOB                (A10)
1 #AU-V-LUD           (A10)
1 #ANN-LUD            (A10)
1 #SD                 (A10)
1 #ID                 (A10)
1 #JDate              (A5) 1 REDEFINE #JDATE
  2 YY       (A2)
  2 #DDD     (N3)
1 #PR                 (N0.5)
1 #PAID               (N7.2)
1 #CODE-DESCRIPTION   (A24)
1 J    (I2)
1 N    (I2)
1 L    (I2)
*
1 #WITHDRAWAL-DATE (N8) 1 REDEFINE #WITHDRAWAL-DATE
  2 #WD-YYYY (A4)
  2 #WD-MM   (A2) 2 REDEFINE #WD-MM
    3 #WD-MM-N (N2)
  2 #WD-DD   (A2)
1 #MAX-A-P        (I2) CONST <99>
1 #AU-NUM         (I2)
1 #AU-ISN         (P8  /#MAX-A-P)
1 #AU-WD-AMT      (N7.2/#MAX-A-P)
1 #AU-WD-DATE     (A10/#MAX-A-P)
1 #AU-POL         (A16 /#MAX-A-P)
1 #AU-AVAIL-AMT   (N7.2/#MAX-A-P)
1 #AU-TYPE-STAT   (A4  /#MAX-A-P)
1 #GENERATION-NBR (N7  /#MAX-A-P)

1 #AU-WD-AMT-IN   (A10/#MAX-A-P)
1 #CV-MULT-WD       (C/#MAX-A-P)
1 #CV-SAVE-WD       (C/#MAX-A-P)
*
1 TOTAL-WD        (N7.2)
1 NUMBER-WD       (I4)
1 LAST-WITHDRAWAL (N7.2)
1 TOTAL-POL-WD    (N7.2)
1 RESIDUAL        (N7.2)
1 TOTAL-PAID      (N7.2)
1 #NUM-POL-WD     (I4)
1 #TOTAL-PAID     (N7.2)
1 #GROSS          (N7.2)
1 #GROSS-TAXABLE  (N7.2)
1 #LAST-POL-WD    (N7.2)
1 #PRO-RATE-MP    (N7.2)
1 #UPDATED        (L)
1 #CHECK-NUMBER   (A10)
*
1 #POS              (I4)
1 #ERRORS           (L)
1 #ERROR-NBR        (I4)
1 #NV               (A10) 1 REDEFINE #NV
  2 #NV-A (A1/10)

1 #MAX-PAGE#          (N7)
1 #FL                 (N7)
1 #PAGE#              (N7)
END-DEFINE
*
SET KEY PF3 NAMED "Exit"
SET KEY PF4 NAMED "Wdrw"
SET KEY PF7 NAMED 'Up'
SET KEY PF8 NAMED 'Down'
*
MOVE *DAT4U TO #TODAY-A
COMPRESS *INIT-USER '-' #CGA-CLERK INTO #SCR-TERMID LEAVING NO

MOVE *DATN TO #TODAY
MOVE '*' TO #CGA-SCR-COMMAND
*
CONTACT-V.CONTACT-ID := #CGA-SCR-ID
#CGA-SCR-ID := #CGA-ORIG-ID     /* PASSED CN
#SCR-DATA.ISSUE-DATE := #CGA-MF-SCR-PARM-1-N
MOVE LEFT JUSTIFIED #CGA-SCR-COMMAND TO #CGA-SCR-COMMAND
CALLNAT 'ADRN0016' CONTACT-V.CONTACT-ID
  #ADDRESS (*)
*
FIND (1) CONTACT-V WITH CONTACT-ID = CONTACT-V.CONTACT-ID
  IF NO RECORDS FOUND
    COMPRESS 'No contact record found for CN' #CGA-SCR-ID
      INTO #MSG
    FETCH 'G1000PXX'
  END-NOREC
  IF CONTACT-V.CONTACT-TYPE NE 'O'
    #AGE := #TODAY.#YYYY - CONTACT-V.YYYY
    IF #TODAY.#MM < CONTACT-V.MM
      #AGE := #AGE - 1
    ELSE IF #TODAY.#MM = CONTACT-V.MM AND #TODAY.#DD < CONTACT-V.DD
        #AGE := #AGE - 1
      END-IF
    END-IF
  END-IF
END-FIND
*
COMPRESS CONTACT-V.MM CONTACT-V.DD CONTACT-V.YYYY INTO #DOB WITH DELIMITER '/'
#CONTACT-ID := CONTACT-V.CONTACT-ID
IF #CGA-POLICY-NUMBER NE BLANK
  GET AU-V #CGA-ISN  /* CURRENT RECORD
  IF AU-V.SETTLEMENT-OPTION NE #INTEREST-ONLY
    FETCH 'G1000PXX'
  END-IF
END-IF
*
PERFORM WITHDRAWAL-HIST
IF #HIST-LINES = 0  /* No withdrawals
  /* Multiple withdrawals + End transaction
  PERFORM NEW-WITHDRAWAL
  PERFORM WITHDRAWAL-HIST
END-IF
IF #HIST-LINES = 0  /* No withdrawals
  #CGA-SCR-ID := CONTACT-V.CONTACT-ID
  FETCH 'MANPDTL'
END-IF
/*  Paging
#MAX-PAGE# := #HIST-LINES / #LINES-PER-PAGE
#FL := #MAX-PAGE# * #LINES-PER-PAGE
IF #FL < #HIST-LINES
  ADD 1 TO #MAX-PAGE#
END-IF
#PAGE# := 1
#FL := 1
/*
RPT.
REPEAT
  INPUT TEXT #MSG USING MAP 'MANMHST2'
  DECIDE ON FIRST VALUE OF *PF-KEY
    VALUE 'PF3'
      ESCAPE BOTTOM(RPT.)
    VALUE 'PF4'
      IF #AU-NUM >= 1
        /* Multiple withdrawals + End transaction
        PERFORM NEW-WITHDRAWAL
        PERFORM WITHDRAWAL-HIST
      END-IF
    VALUE 'PF7'
      IF #PAGE# > 1
        SUBTRACT 1 FROM #PAGE#
        #FL :=  #PAGE#  * #LINES-PER-PAGE - 9
      END-IF
    VALUE 'PF8'
      IF #PAGE# < #MAX-PAGE#
        #FL := #PAGE# * #LINES-PER-PAGE + 1
        ADD 1 TO #PAGE#
      END-IF
    VALUE 'ENTR'
      IF #CGA-SCR-COMMAND NE '*'
        FETCH 'G1000PXX'
      END-IF
      /* Withdrawals update + End transaction
      PERFORM WITHDRAWAL-UPDATE
      PERFORM WITHDRAWAL-HIST
      #PAGE# := 1
      #FL := 1
    NONE VALUE
      IGNORE
  END-DECIDE
END-REPEAT
#CGA-SCR-ID := CONTACT-V.CONTACT-ID
FETCH 'MANPDTL'
/*            End of withdrawals >>>>>>
/*
DEFINE NEW-WITHDRAWAL
/*     --------------
RESET #FIELD(*,*)
  #UPDATED
  #AU-WD-AMT (*)
  #AU-WD-AMT-IN (*)
  #AU-WD-DATE (*)
MOVE (AD=DP) TO  #CV-SAVE-WD (*)
FOR N 1 TO #AU-NUM
  IF SUBSTR(#AU-TYPE-STAT (N),4,1) EQ 'A'
    MOVE (AD=U) TO #CV-SAVE-WD (N)
  END-IF
END-FOR
#CV-MULT-WD (*) := #CV-SAVE-WD (*)
/*              Paging
#MAX-PAGE# := #AU-NUM / #LINES-PER-PAGE
#FL := #MAX-PAGE# * #LINES-PER-PAGE
IF #FL < #AU-NUM
  ADD 1 TO #MAX-PAGE#
END-IF
#PAGE# := 1
#FL := 1
/*
RPT1.
REPEAT
  INPUT TEXT #MSG USING MAP 'MANMHST4'
  DECIDE ON FIRST VALUE OF *PF-KEY
    VALUE 'PF3','PF4'
      ESCAPE BOTTOM(RPT1.)
    VALUE 'PF7'
      IF #PAGE# > 1
        SUBTRACT 1 FROM #PAGE#
        #FL :=  #PAGE#  * #LINES-PER-PAGE - 9
      END-IF
    VALUE 'PF8'
      IF #PAGE# < #MAX-PAGE#
        #FL := #PAGE# * #LINES-PER-PAGE + 1
        ADD 1 TO #PAGE#
      END-IF
    VALUE 'ENTR'
      IF #CGA-SCR-COMMAND NE '*'
        FETCH 'G1000PXX'
      END-IF
      PERFORM MULTI-WITHDRAWALS-VAL
      IF #UPDATED
        END TRANSACTION
        ESCAPE BOTTOM(RPT1.)
      ELSE
        BACKOUT TRANSACTION
      END-IF
    NONE VALUE
      IGNORE
  END-DECIDE
END-REPEAT
END-SUBROUTINE
/*
DEFINE WITHDRAWAL-HIST
/*     ---------------
RESET J
  #FIELD(*,*)
  #AU-POL  (*)
  #AU-NUM
CALLNAT 'MANNHWD'
  CONTACT-V.CONTACT-ID
  #TODAY
  TOTAL-WD
  NUMBER-WD
  LAST-WITHDRAWAL

MOVE (AD=DP) TO #CONTROL-VARS (*,*)
IF #CGA-POLICY-NUMBER NE BLANK
  GET AU-V #CGA-ISN  /* CURRENT RECORD

  #AU-NUM := 1
  #AU-ISN   (1) := #CGA-ISN
  #AU-POL   (1) := AU-V.POLICY-NUMBER

  CALLNAT 'MANNHWDP'
    #AU-ISN  (#AU-NUM)
    #TODAY
    TOTAL-POL-WD
    #LAST-POL-WD
    #NUM-POL-WD

  #AU-AVAIL-AMT (1) := AU-V.PRINCIPAL - TOTAL-POL-WD

  COMPRESS AU-V.SETTLEMENT-OPTION AU-V.ANNUITANT-STATUS
    INTO #AU-TYPE-STAT (1)
  PERFORM GET-WITHDRAWAL-HIST
END-IF
/*
FIND AU-V WITH CONTACT-ID = #CONTACT-ID
  IF AU-V.SETTLEMENT-OPTION NE #INTEREST-ONLY
    ESCAPE TOP
  END-IF
  IF AU-V.POLICY-NUMBER NE #AU-POL  (1)
    ADD 1 TO #AU-NUM
    #AU-ISN  (#AU-NUM) := *ISN (0404)
    #AU-POL  (#AU-NUM) := AU-V.POLICY-NUMBER
    CALLNAT 'MANNHWDP'
      #AU-ISN  (#AU-NUM)
      #TODAY
      TOTAL-POL-WD
      #LAST-POL-WD
      #NUM-POL-WD
    #AU-AVAIL-AMT (#AU-NUM) := AU-V.PRINCIPAL - TOTAL-POL-WD
    COMPRESS AU-V.SETTLEMENT-OPTION AU-V.ANNUITANT-STATUS
      INTO #AU-TYPE-STAT (#AU-NUM)
    PERFORM GET-WITHDRAWAL-HIST
  END-IF
END-FIND
#CV-SAVE (*,*) := #CONTROL-VARS (*,*)
#HIST-LINES := J
END-SUBROUTINE
/*
DEFINE GET-WITHDRAWAL-HIST
/*     ------------------
/*     HISTORY OF WITHDRAWALS
FIND AHIST-V WITH POLICY-NUMBER = AU-V.POLICY-NUMBER
    SORTED BY GENERATION
  IF AHIST-V.CONTACT-ID NE #CONTACT-ID
    ESCAPE TOP
  END-IF
  IF AHIST-V.WITHDRAWALS > 0
    ADD 1 TO J
    IF J <= 10
      #WD-ISN (J) := *ISN
*       MOVE (AD=U) TO #CONTROL-VARS (J,#WDAMT)
*       MOVE (AD=U) TO #CONTROL-VARS (J,#WDDATE)
      MOVE BY NAME AHIST-V TO #LINE-FIELDS
      IF #LINE-FIELDS.WITHDRAWAL-DATE = 0
        #LINE-FIELDS.WITHDRAWAL-DATE := AHIST-V.ADD-DATE
      END-IF
      PERFORM GET-WITHDRAWAL-LINE
    END-IF
  END-IF
END-FIND
IF AU-V.WITHDRAWALS > 0 /* OR AU-V.WITHDRAWALS < 0
  ADD 1 TO J
  #WD-ISN (J) := #AU-ISN  (#AU-NUM)  /* Current record
  MOVE (AD=U) TO #CONTROL-VARS (J,#WDAMT)
**  MOVE (AD=U) TO #CONTROL-VARS (J,#WDDATE)
  MOVE BY NAME AU-V TO #LINE-FIELDS
  PERFORM GET-WITHDRAWAL-LINE
END-IF
/*
END-SUBROUTINE
/*
DEFINE GET-WITHDRAWAL-LINE
/*     -------------------
COMPRESS #LINE-FIELDS.#MM #LINE-FIELDS.#DD #LINE-FIELDS.#YYYY
  INTO #FIELD (J,#WDDATE) WITH DELIMITER '/'

#FIELD (J,#POLICY) := #LINE-FIELDS.POLICY-NUMBER

COMPRESS #LINE-FIELDS.SETTLEMENT-OPTION #LINE-FIELDS.ANNUITANT-STATUS
  INTO #FIELD(J,#ANNUITY)
MOVE EDITED #LINE-FIELDS.WITHDRAWALS (EM=Z(6)9.99) TO #FIELD(J,#WDAMT)

#FIELD (J,#UPDUSR) := #LINE-FIELDS.LAST-UPD-USER

MOVE EDITED #AU-AVAIL-AMT(#AU-NUM) (EM=Z(6)9.99) TO #FIELD(J,#AVLAMT)

#FIELD(J,#CHECK) := #LINE-FIELDS.CHECK-NUMBER

END-SUBROUTINE
/*
DEFINE MULTI-WITHDRAWALS-VAL
/*     ---------------------
RESET #MSG #ERRORS
  #UPDATED
  #WITHDRAWAL-DATE
FOR J 1 TO #AU-NUM
  IF #CV-MULT-WD ( J ) MODIFIED
    #CV-SAVE-WD ( J ) := #CV-MULT-WD ( J )
  END-IF
END-FOR
#CV-MULT-WD (*) := #CV-SAVE-WD (*)
/*
FOR J 1 TO  #AU-NUM
  DECIDE FOR EVERY CONDITION
    WHEN #CV-MULT-WD (J) MODIFIED
      IF NUMBER-WD >= 2
        IF CAN-OVERRIDE-LIMITS (<>)
          IGNORE
        ELSE
          #POS := POS (#AU-WD-AMT (J))
          #ERRORS := TRUE
          #ERROR-NBR := 1
          #MSG  := #MSG-LIST ( #ERROR-NBR )
          ESCAPE BOTTOM
        END-IF
      END-IF
      #NV := #AU-WD-AMT-IN (J)
      PERFORM REMOVE-COMMAS
      IF #NV IS (N7.2)
        #AU-WD-AMT (J) := VAL (#NV)
        IF #AU-WD-AMT (J) > 0
            AND #AU-WD-AMT (J) <= #AU-AVAIL-AMT(J)
          IGNORE
        ELSE
          #POS := POS (#AU-WD-AMT-IN (J))
          #ERRORS := TRUE
          #ERROR-NBR := 3
          #MSG  := #MSG-LIST ( #ERROR-NBR )
          ESCAPE BOTTOM
        END-IF
      ELSE
        #POS := POS (#AU-WD-AMT-IN (J))
        #ERRORS := TRUE
        #ERROR-NBR := 2
        #MSG  := #MSG-LIST ( #ERROR-NBR )
        ESCAPE BOTTOM
      END-IF
      IF #WITHDRAWAL-DATE = 0
        IF #AU-WD-DATE (J) EQ MASK(MM'/'DD'/'YYYY)
          #WD-YYYY := SUBSTR(#AU-WD-DATE (J),7,4)
          #WD-MM   := SUBSTR(#AU-WD-DATE (J),1,2)
          #WD-DD   := SUBSTR(#AU-WD-DATE (J),4,2)
        ELSE
          #POS := POS (#AU-WD-DATE (J))
          #ERRORS := TRUE
          #ERROR-NBR := 4
          #MSG  := #MSG-LIST ( #ERROR-NBR )
          ESCAPE BOTTOM
        END-IF
      END-IF
    WHEN NONE IGNORE
  END-DECIDE
END-FOR
IF NOT #ERRORS
  PERFORM MULTI-WITHDRAWALS
END-IF
END-SUBROUTINE
/*
DEFINE MULTI-WITHDRAWALS
/*     -----------------
RESET #UPDATED
#CHECK-NUMBER := GET-NEXT-CH-NUM (<>)
FOR J = 1 TO #AU-NUM
  IF #AU-WD-AMT (J) > 0
      AND #AU-WD-AMT (J) <= #AU-AVAIL-AMT(J)
    IF #GENERATION-NBR (J) = 0  /* First edit
      CALLNAT 'MANNHST' #AU-ISN (J) #GENERATION-NBR (J) #TODAY
    END-IF
/*
    GET AU-V #AU-ISN (J)
    AU-V.WITHDRAWALS     := #AU-WD-AMT (J)
    AU-V.RESERVE-AMOUNT  := #AU-AVAIL-AMT(J) - #AU-WD-AMT (J)
    AU-V.CHECK-NUMBER    := #CHECK-NUMBER
    AU-V.WITHDRAWAL-DATE := #WITHDRAWAL-DATE
    AU-V.LAST-UPD-DATE   := *DATN
    AU-V.LAST-UPD-USER   := *USER
    IF AU-V.WITHDRAWAL-DATE = 0
      AU-V.WITHDRAWAL-DATE := *DATN
    ELSE
      #TODAY := #WITHDRAWAL-DATE
    END-IF
*
    #PRO-RATE-MP := ( #TODAY.#DD * AU-V.MONTHLY-PENSION )
      / #DAYS-IN-MONTH
*
    RESET AU-V.MONTHLY-PENSION AU-V.TAXABLE
    CALLNAT 'MANNBPA'
      AU-V.REFERENCE-CN
      AU-V.POLICY-NUMBER
      AU-V.SETTLEMENT-OPTION
      AU-V.RESERVE-AMOUNT
      GENDER-CD
      #AGE
      AU-V.MONTHLY-PENSION
      AU-V.TAXABLE
      #MSG
*
    IF #MSG = BLANK
      #PRO-RATE-MP := #PRO-RATE-MP
        + ( (#DAYS-IN-MONTH - #TODAY.#DD) * AU-V.MONTHLY-PENSION )
        / #DAYS-IN-MONTH
      AU-V.TAXABLE := #PRO-RATE-MP
      AU-V.ONE-MONTH-PENSION := #PRO-RATE-MP
      AU-V.ONE-MP-DATE := #TODAY
*
      UPDATE (0559)
      #UPDATED := TRUE
    END-IF
  END-IF
END-FOR
END-SUBROUTINE
/*
DEFINE WITHDRAWAL-UPDATE
/*     -----------------
RESET #MSG
  #ERRORS
  #UPDATED
*
FOR J 1 TO #HIST-LINES
  IF #CONTROL-VARS ( J,#WDAMT ) MODIFIED
    #CV-SAVE ( J,#WDAMT ) := #CONTROL-VARS ( J,#WDAMT)
  END-IF
END-FOR
#CONTROL-VARS (*,*) := #CV-SAVE (*,*)

FOR J 1 TO #HIST-LINES
  DECIDE FOR EVERY CONDITION
    WHEN #CONTROL-VARS (J,#WDAMT) MODIFIED
      #NV := #SCR-DATA.#FIELD (J,#WDAMT)
      PERFORM REMOVE-COMMAS
      IF #NV IS (N7.2)
        #FIELD-VALUE (J,#WDAMT) := VAL (#NV)
        IF #FIELD-VALUE (J,#WDAMT) >= 0
            AND #FIELD-VALUE (J,#WDAMT) <= #AU-AVAIL-AMT(J)
          IGNORE
        ELSE
          #POS := POS (#SCR-DATA.#FIELD (J,#WDAMT))
          #ERRORS := TRUE
          #ERROR-NBR := 3
          #MSG  := #MSG-LIST ( #ERROR-NBR )
          ESCAPE BOTTOM
        END-IF
      ELSE
        #POS := POS (#SCR-DATA.#FIELD (J,#WDAMT))
        #ERRORS := TRUE
        #ERROR-NBR := 2
        #MSG  := #MSG-LIST ( #ERROR-NBR )
        ESCAPE BOTTOM
      END-IF
      PERFORM WITHDRAWAL-EDITS
    WHEN NONE IGNORE
  END-DECIDE
END-FOR
IF #UPDATED
  END TRANSACTION
ELSE
  BACKOUT TRANSACTION
END-IF
END-SUBROUTINE
/*
DEFINE WITHDRAWAL-EDITS
/*     ----------------
GET AU-V #WD-ISN (J)
/* Old Reserve Amount
AU-V.RESERVE-AMOUNT := AU-V.RESERVE-AMOUNT + AU-V.WITHDRAWALS

AU-V.WITHDRAWALS     := #FIELD-VALUE (J,#WDAMT)
AU-V.RESERVE-AMOUNT  := AU-V.RESERVE-AMOUNT - AU-V.WITHDRAWALS
AU-V.WITHDRAWAL-DATE := *DATN
AU-V.LAST-UPD-DATE   := *DATN
AU-V.LAST-UPD-USER   := *USER
IF AU-V.WITHDRAWALS = 0
  RESET AU-V.CHECK-NUMBER
ELSE
  #PRO-RATE-MP := ( #TODAY.#DD * AU-V.MONTHLY-PENSION )
    / #DAYS-IN-MONTH
END-IF
/*
RESET AU-V.MONTHLY-PENSION AU-V.TAXABLE
  AU-V.TAXABLE
  AU-V.ONE-MONTH-PENSION
  AU-V.ONE-MP-DATE
CALLNAT 'MANNBPA'
  AU-V.REFERENCE-CN
  AU-V.POLICY-NUMBER
  AU-V.SETTLEMENT-OPTION
  AU-V.RESERVE-AMOUNT
  GENDER-CD
  #AGE
  AU-V.MONTHLY-PENSION
  AU-V.TAXABLE
  #MSG
/* Pro rate amount => One Month Pension,Taxable
IF #MSG = BLANK
  IF AU-V.WITHDRAWALS > 0
    #PRO-RATE-MP := #PRO-RATE-MP
      + ( (#DAYS-IN-MONTH - #TODAY.#DD) * AU-V.MONTHLY-PENSION )
      / #DAYS-IN-MONTH
    AU-V.TAXABLE := #PRO-RATE-MP
    AU-V.ONE-MONTH-PENSION := #PRO-RATE-MP
    AU-V.ONE-MP-DATE := *DATN
  END-IF
*
  UPDATE (0652)
  #UPDATED := TRUE
END-IF
END-SUBROUTINE
/*
DEFINE REMOVE-COMMAS
/*     -------------
RESET L
FOR N 1 TO 10
  IF #NV-A (N) = BLANK OR= ','
    ESCAPE TOP
  END-IF
  ADD 1 TO L
  #NV-A (L) := #NV-A (N)
  IF N > L
    RESET #NV-A (N)
  END-IF
END-FOR
END-SUBROUTINE
/*
END
