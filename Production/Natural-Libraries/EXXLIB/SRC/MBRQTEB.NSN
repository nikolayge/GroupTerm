* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* CRM Admin interface : Quote Response Generator
************************************************************************
* NAME         : MBRQTEB                                               *
* AUTHOR       : Copyright: MetrostarSystems AAFMAA                    *
* DESCRIPTION  : Return Quotes for Given Product/AmountsBenefits       *
************************************************************************
*        MODIFICATION LOG                                              *
************************************************************************
* USER   DATE      TAG  REASON
* NGG    20100128      Initial Creation
* NGG    20121114  NG1 Changes for LTII re-newable and EZ Term
* NGG    20151021  NG2 CRM Products description
************************************************************************
*
* <Products>
*  <Product>
*    <Name>Level Term II 5 years term* Age 69 for</Name>
*    <Code>OL</Code>
*    <Succeeded>true</Succeeded>
*    <ErrorDesc>if succeeded is false the error code will be here</ErrorDesc>
*    <Packages>
*      <Package>
*        <Quantity>100</Quantity>
*        <Premium>25.5</Premium>
*      </Package>
*      ...
*      <Package>
*        <Quantity>800</Quantity>
*        <Premium>160.87</Premium>
*      </Package>
*    </Packages>
*  </Product>
*  <Product> ... </Product>
*
* </Products>
*
DEFINE DATA
PARAMETER
1 XML_SERIALZE_OUTPUT (A) DYNAMIC        /* Out
1 #NICOTINE          (A1)
1 #DOB               (N8) 1 REDEFINE #DOB
  2 #DOB-A           (A8)
1 #GENDER            (A1)
1 #RATING-CODE       (A1) /* '1','2' or '3'
1 #State             (A2)
1 #MilitaryStatus    (A1)
1 #MilitaryService   (A1)
1 #RELATION          (A1)
1 #RequestorCN       (N6)
1 #RequestedProds    (A3/1:V)
1 #FaceAmounts       (P7.2/1:V)     /* NG99
LOCAL
1 RESPONSE-DATA      (A) DYNAMIC
*
1 #Natural-error     (A2)   CONST <'-3'>
1 #Timeout           (A2)   CONST <'-2'>
1 #MaxProds          (I2)   CONST <64>
1 BLANK              (A1)   CONST <' '>
1 #DEL               (A1)   CONST <':'>
1 #NEError           (A32)  CONST <'Not Eligible'>
1 #EStates           (A2/4) CONST <'VA','MD','NC','SC'>
1 #ArmyAir           (A1/2) CONST <'A','F'>
1 #Veteran           (A1)   CONST <'V'>
1 #WHOLE             (A3/6) CONST <'OL','30P','20P','7P','SP','SI'>
1 #WHOLE-GPL         (N5)   CONST <10000>
1 #LEVEL-TERM        (N5)   CONST <50000>
1 #GPL-FACE-AMT      (P7.2/5) CONST <10,15,20,25,30>
1 #GP2-FACE-AMT      (P7.2/7) CONST <10,15,20,25,30,40,50>   /* NG99
1 #EZ-FACE-AMT       (P7.2/5) CONST <10,25,50,75,100>        /* NG1 Start
1 #TermError1        (A80)  CONST
  <'Maximum Term for Standard LTII+  is 65'>
1 #FaceAMTError_5    (A80)  CONST
  <'We''re sorry, this policy is only available for 10,25,50,75,and 100 thousand.'>
1 #PremiumError1     (A80)  CONST
  <'We''re sorry, this policy is only available for 10 thousand or more.'>
1 #PremiumError2     (A80)  CONST
  <'We''re sorry, this policy is only available for 50 thousand or more.'>
1 #PremiumError3     (A80)  CONST
  <'We''re sorry, this policy exceeds maximum.'>
1 #SuperSelectError  (A80) CONST
  <'We''re sorry, this product is not available.'>
1 #RelationError     (A60) CONST
  <'Kids and grandkids are not eligible.'>
1 #TermError2         (A80)  CONST                          /* NG1 End
  <'Maximum Term for Select or Super Select LTII+  is 30'>
1 #AgedTermError      (A80)  CONST
  <'Term for LTII+ expires after age 85'>
1 #AgedError          (A80)  CONST
  <'No products are available for age'>
1 #AgedError_1        (A80)  CONST
  <'We''re sorry, this policy is not available to %age% year old applicants.'>
1 #FaceAMTError_4     (A80)  CONST
  <'We''re sorry, this policy is only available for 10,15,20,25,and 30 thousand.'>
1 #FaceAMTError_6     (A) DYNAMIC CONST
  <'We''re sorry, this policy is only available for 10,15,20,25,30,40 and 50 thousand.'>
1 #AgedError_2        (A70) CONST
  <'Please re-apply when your baby is 6 months old.'>
1 #AgedError_3        (A70) CONST
  <'Please re-apply when your baby is 15 days old.'>
1 #AgedError_4        (A) DYNAMIC CONST
  <'We''re sorry, this policy is available to applicants 15 days to 14 years of age.'>
1 #NicotineError     (A80) CONST
  <'We''re sorry, this product is not available to nicotine users.'>
*
1 #MAX-FACE-TOTAL           (P7.2)
1 #MAX-FACE-TERM            (P7.2)
1 #OVERRIDE-MAX-FACE-TOTAL  (P7.2)
1 #OVERRIDE-MAX-FACE-TERM   (P7.2)
*
1 #INSURED           (A1)
1 #PLAN              (A3) 1 REDEFINE #PLAN
  2 #PLAN-1          (A1)
1 #PLAN-A            (A3) 1 REDEFINE #PLAN-A
  2 FILLER 1X
  2 #TERM  (N2)
1 #PLAN-CODE         (A) DYNAMIC
1 #PRODUCT           (A) DYNAMIC
1 #FACE-AMT          (N7.2)
1 #1035-EXCHANGE     (N6.2)
1 #LUMP-SUM          (N6.2)
1 #CALC-DATE         (N8) 1 REDEFINE #CALC-DATE
  2 #CALC-DATE-A     (A8)
1 #J                 (I4)   /* Products
1 #K                 (I4)   /* Amounts
1 #Eligible          (L)
1 #EligibilityError  (A) DYNAMIC
1 #CC-AMT            (N7.2)
1 #QUOTE             (A9)
1 #CGA-SCR-COMMAND   (A2) /* Not Used
1 #CGA-SCR-ID        (N9) /* Not Used
1 #CGA-SCR-SUFFIX    (A3)
1 #AGE               (N2) 1 REDEFINE #AGE
  2 #AGE-A           (A2)
1 #AGE-MIN-E         (N3.2)
1 #AGE-MAX-E         (N3.2)
1 #AGE-8             (N8) 1 REDEFINE #AGE-8
  2 #YYYY            (N4)
  2 #DAYS            (N4)
1 #AGE-DAYS          (N3.2)
1 #EXPIRE            (N3.2)
1 #DOB-D             (D)
1 #CALC-D            (D)
*
1 STATUS VIEW OF A-STATUS
  2 PROCESS-IND    /* C - Not Insured
  2 INTRO-FLAG
*
END-DEFINE
*
MOVE EDITED *DATX (EM=YYYYMMDD) TO #CALC-DATE-A
*
IF #RequestorCN > 0
  FIND STATUS WITH ID-NUMBER = #RequestorCN
    IF STATUS.PROCESS-IND NE 'C'
      ASSIGN #INSURED = 'Y'
    ELSE
      RESET #INSURED
    END-IF
  END-FIND
END-IF
*
DECIDE FOR FIRST CONDITION
  WHEN #RATING-CODE = '1'
    #CGA-SCR-SUFFIX := 'SB1'
  WHEN #RATING-CODE = '2'
    #CGA-SCR-SUFFIX := 'SB2'
  WHEN #RATING-CODE = '3'
    #CGA-SCR-SUFFIX := 'SB3'
  WHEN NONE
    RESET #CGA-SCR-SUFFIX
END-DECIDE
IF #DOB < #CALC-DATE
  #AGE-8 := #CALC-DATE - #DOB
  IF #YYYY GT 99
    #AGE := 99
  ELSE
    #AGE := #YYYY
  END-IF
  IF #AGE = 0
    MOVE EDITED #DOB-A       TO #DOB-D  (EM=YYYYMMDD)
    MOVE EDITED #CALC-DATE-A TO #CALC-D (EM=YYYYMMDD)
    #DAYS := #CALC-D - #DOB-D
    #AGE-DAYS := #DAYS / 365
  ELSE
    #AGE-DAYS := #AGE
  END-IF
ELSE
  #AGE-8 := #DOB - #CALC-DATE
  #AGE := -1
END-IF
*
IF #Nicotine = 'N' IGNORE
ELSE
  #Nicotine := 'S'
END-IF
*
CALLNAT 'GMAXSXX'
  #CGA-SCR-COMMAND
  #MAX-FACE-TOTAL
  #MAX-FACE-TERM
  #OVERRIDE-MAX-FACE-TOTAL
  #OVERRIDE-MAX-FACE-TERM
  STATUS.INTRO-FLAG
  #DOB
*
ASSIGN XML_SERIALZE_OUTPUT = '<?xml version="1.0"?>'
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Products'
  '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
*
FOR #J 1 TO #MaxProds
  #PLAN := #RequestedProds ( #J )
  IF #PLAN = BLANK
    ESCAPE BOTTOM
  END-IF
  #PRODUCT := FUNCTION-PRODUCT-CRM (<#PLAN>)  /* NG2
  IF #PRODUCT = BLANK
    ESCAPE TOP
  END-IF
  IF #PLAN = 'LT' AND #Nicotine ='S'
    EXAMINE #PRODUCT FOR '50' REPLACE WITH '40'
    COMPRESS #PLAN 'Nicotine' INTO #PLAN-CODE WITH DELIMITER '-'
  ELSE
    ASSIGN #PLAN-CODE = #PLAN
  END-IF
  COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Product'
    '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
*
  COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Name>' #PRODUCT '</Name>'
    INTO XML_SERIALZE_OUTPUT LEAVING NO
  COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Code>' #PLAN-CODE '</Code>'
    INTO XML_SERIALZE_OUTPUT LEAVING NO
  COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Succeeded'
    '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
*
  PERFORM CheckEligibility
*
  IF #Eligible
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT 'true' INTO XML_SERIALZE_OUTPUT LEAVING NO
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT '</Succeeded>' INTO XML_SERIALZE_OUTPUT LEAVING NO
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<ErrorDesc></ErrorDesc>'
      INTO XML_SERIALZE_OUTPUT LEAVING NO
    PERFORM GET-QUOTES
  ELSE
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT 'false' INTO XML_SERIALZE_OUTPUT LEAVING NO
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT '</Succeeded>' INTO XML_SERIALZE_OUTPUT LEAVING NO
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<ErrorDesc>' #EligibilityError '</ErrorDesc>'
      INTO XML_SERIALZE_OUTPUT LEAVING NO
    PERFORM BLANK-QUOTES
  END-IF
*
  COMPRESS NUMERIC XML_SERIALZE_OUTPUT '</Product'
    '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
END-FOR
*
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '</Products'
  '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
*
DEFINE CheckEligibility
/*     ================
ASSIGN #Eligible = TRUE
DECIDE FOR FIRST CONDITION
  WHEN #AGE < 0
    COMPRESS #AgedError '-' #YYYY ' years.' INTO #EligibilityError LEAVING NO
  WHEN #PLAN-1 = 'W' OR= 'Q' AND #Nicotine = 'S'    /* LTII+  NG1
    ASSIGN #EligibilityError = #NicotineError
  WHEN ANY
    RESET #Eligible
    ESCAPE ROUTINE
  WHEN NONE IGNORE
END-DECIDE
*
IF #PLAN = 'GPL'
  FOR #K 1 TO 5
    IF #FaceAmounts (#K) NE 0
      IF not #FaceAmounts ( #K ) = #GPL-FACE-AMT (*)
        ASSIGN #EligibilityError = #FaceAMTError_4
        RESET #Eligible
        ESCAPE ROUTINE
      END-IF
    END-IF
  END-FOR
END-IF
*
IF #PLAN = 'GP2'
  FOR #K 1 TO 7
    IF #FaceAmounts (#K) NE 0
      IF not #FaceAmounts ( #K ) = #GP2-FACE-AMT (*)
        ASSIGN #EligibilityError = #FaceAMTError_6
        RESET #Eligible
        ESCAPE ROUTINE
      END-IF
    END-IF
  END-FOR
END-IF
*
IF #PLAN = 'EZ'                        /* NG1   Start
  FOR #K 1 TO 5
    IF #FaceAmounts (#K) NE 0
      IF not #FaceAmounts ( #K ) = #EZ-FACE-AMT (*)
        ASSIGN #EligibilityError = #FaceAMTError_5
        RESET #Eligible
        ESCAPE ROUTINE
      END-IF
    END-IF
  END-FOR
  IF #RELATION = 'K' OR= 'G'
    ASSIGN #EligibilityError = #RelationError
    RESET #Eligible
    ESCAPE ROUTINE
  END-IF
END-IF
*
* Old Level Term II plans start with: 'U' 'V' 'W'
* New Level Term II plans start with: 'S'=Standard 'R'=Select 'Q'=SuperSelect
* Translation for new LTII+ re-newable NG1 - temporary until CRM passes correct codes
DECIDE ON FIRST VALUE OF #PLAN-1
  VALUE 'U' #PLAN-1 := 'S'
  VALUE 'V' #PLAN-1 := 'R'
  VALUE 'W' #PLAN-1 := 'Q'
  NONE VALUE IGNORE
END-DECIDE
*
DECIDE ON FIRST VALUE OF #PLAN
  VALUE 'R5'
    ASSIGN #PLAN-A := 'R05'
  VALUE 'R6'
    ASSIGN #PLAN-A := 'R06'
  VALUE 'R7'
    ASSIGN #PLAN-A := 'R07'
  VALUE 'R8'
    ASSIGN #PLAN-A := 'R08'
  VALUE 'R9'
    ASSIGN #PLAN-A := 'R09'
  VALUE 'S5'
    ASSIGN #PLAN-A := 'S05'
  VALUE 'S6'
    ASSIGN #PLAN-A := 'S06'
  VALUE 'S7'
    ASSIGN #PLAN-A := 'S07'
  VALUE 'S8'
    ASSIGN #PLAN-A := 'S08'
  VALUE 'S9'
    ASSIGN #PLAN-A := 'S09'
  VALUE 'Q5'
    ASSIGN #PLAN-A := 'Q05'
  VALUE 'Q6'
    ASSIGN #PLAN-A := 'Q06'
  VALUE 'Q7'
    ASSIGN #PLAN-A := 'Q07'
  VALUE 'Q8'
    ASSIGN #PLAN-A := 'Q08'
  VALUE 'Q9'
    ASSIGN #PLAN-A := 'Q09'
  VALUE 'SP'
    ASSIGN #PLAN-A := 'SI'
  NONE VALUE
    ASSIGN #PLAN-A := #PLAN
END-DECIDE
*
#AGE-MIN-E := F-POLICY-AGE-MIN (<#PLAN-A, #INSURED, #RELATION, #NICOTINE>)
#AGE-MAX-E := F-POLICY-AGE-MAX (<#PLAN-A, #INSURED, #RELATION, #NICOTINE>)
*
IF #AGE-DAYS < #AGE-MIN-E OR #AGE-DAYS > #AGE-MAX-E
  RESET #Eligible
  DECIDE FOR FIRST CONDITION
    WHEN #PLAN = 'GPL'
      IF #AGE-DAYS < #AGE-MIN-E
        ASSIGN #EligibilityError = #AgedError_3
      ELSE
        ASSIGN #EligibilityError = #AgedError_1
        EXAMINE #EligibilityError FOR '%age%' REPLACE WITH #AGE-A
      END-IF
    WHEN #PLAN = 'GP2'
      ASSIGN #EligibilityError = #AgedError_4
    WHEN #PLAN = #WHOLE (*)
      IF #AGE-DAYS < #AGE-MIN-E
        ASSIGN #EligibilityError = #AgedError_2
      ELSE
        ASSIGN #EligibilityError = #AgedError_1
        EXAMINE #EligibilityError FOR '%age%' REPLACE WITH #AGE-A
      END-IF
    WHEN NONE
      ASSIGN #EligibilityError = #AgedError_1
      EXAMINE #EligibilityError FOR '%age%' REPLACE WITH #AGE-A
  END-DECIDE
ELSE
  IF #PLAN-1 = 'S' OR= 'R' OR= 'Q'
      AND #PLAN-A = MASK (.NN)
    #EXPIRE := #AGE-DAYS + #TERM
*   No term over 85 yeasr age
    IF #EXPIRE > 85
      RESET #Eligible
      ASSIGN #EligibilityError = #AgedTermError
    END-IF
*   If plan is (M:ST:N) or (M:ST:Y) or (F:ST:N) or (F:ST:Y) Term can be up to 65
*   else Term can be up to 30
    IF #PLAN-1 = 'S'  /* Standard
      IF #TERM > 65
        RESET #Eligible
        ASSIGN #EligibilityError = #TermError1
      end-if
    ELSE
      IF #TERM > 30
        RESET #Eligible
        ASSIGN #EligibilityError = #TermError2
      END-IF
    END-IF
  END-IF
END-IF
*                                   /* NG1 End
END-SUBROUTINE
*
DEFINE BLANK-QUOTES
/*     ============
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Packages'
  '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
FOR #K 1 TO 5
  IF #FaceAmounts ( #K ) > 0
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Package'
      '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
    #FACE-AMT := #FaceAmounts ( #K ) * 1000
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Quantity>' #FaceAmounts ( #K )
      '</Quantity>' INTO XML_SERIALZE_OUTPUT LEAVING NO
    RESET #CC-AMT
    MOVE EDITED #CC-AMT (EM=ZZZZZ9.99) TO #QUOTE
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Premium>' #QUOTE
      '</Premium>' INTO XML_SERIALZE_OUTPUT LEAVING NO
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT '</Package'
      '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
  END-IF
END-FOR
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '</Packages'
  '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
END-SUBROUTINE
*
DEFINE GET-QUOTES
/*     ==========
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Packages'
  '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
FOR #K 1 TO 7
  IF #FaceAmounts ( #K ) > 0
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Package'
      '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
    #FACE-AMT := #FaceAmounts ( #K ) * 1000
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Quantity>' #FaceAmounts ( #K )
      '</Quantity>' INTO XML_SERIALZE_OUTPUT LEAVING NO
*
    PERFORM CALL-QE
*
    MOVE EDITED #CC-AMT (EM=ZZZZZ9.99) TO #QUOTE
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT '<Premium>' #QUOTE
      '</Premium>' INTO XML_SERIALZE_OUTPUT LEAVING NO
    COMPRESS NUMERIC XML_SERIALZE_OUTPUT '</Package'
      '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
  END-IF
END-FOR
COMPRESS NUMERIC XML_SERIALZE_OUTPUT '</Packages'
  '>' INTO XML_SERIALZE_OUTPUT LEAVING NO
END-SUBROUTINE
*
DEFINE CALL-QE
/*     =======
RESET #CC-AMT #EligibilityError
#Eligible := TRUE
IF #PLAN = #WHOLE (*) OR= 'GPL' OR= 'EZ' OR= 'GP2'
  IF #FACE-AMT < #WHOLE-GPL
    RESET #Eligible
    ASSIGN #EligibilityError = #PremiumError1
  END-IF
ELSE
  IF #FACE-AMT < #LEVEL-TERM
    RESET #Eligible
    ASSIGN #EligibilityError = #PremiumError2
  END-IF
END-IF
CALLNAT 'GMAXSXX'
  #CGA-SCR-COMMAND
  #MAX-FACE-TOTAL
  #MAX-FACE-TERM
  #OVERRIDE-MAX-FACE-TOTAL
  #OVERRIDE-MAX-FACE-TERM
  STATUS.INTRO-FLAG
  #DOB
  #PLAN
IF #FACE-AMT > #MAX-FACE-TOTAL
  RESET #Eligible
  ASSIGN #EligibilityError = #PremiumError3
END-IF
*
IF #Eligible
  CALLNAT 'GPREMSXX'
    #CGA-SCR-COMMAND
    #CGA-SCR-ID
    #CGA-SCR-SUFFIX
    #PLAN-A
    #AGE
    #CC-AMT
    #CALC-DATE
    #NICOTINE
    #FACE-AMT
    #GENDER
  IF #PLAN-A NE 'SI'
    COMPUTE ROUNDED #CC-AMT = #CC-AMT / 12
  END-IF
END-IF
END-SUBROUTINE
*
ON ERROR
  IF *ERROR-NR = 3009
    COMPRESS #Timeout *ERROR-NR *ERROR-LINE *PROGRAM *DATN *TIME INTO XML_SERIALZE_OUTPUT
      WITH DELIMITER ':'
  ELSE
    COMPRESS #Natural-error *ERROR-NR *ERROR-LINE *PROGRAM *DATN *TIME INTO XML_SERIALZE_OUTPUT
      WITH DELIMITER ':'
  END-IF
  ESCAPE ROUTINE
END-ERROR
*
END

