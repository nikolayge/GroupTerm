* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCNSIP1'
*
* DESCRIPTION
*   XML Parser implementationfor file:
*   I:\git\MSS\MembershipStatistics\Natural-Libraries\MS\SearchInd.xsd
*   using PARSE XML statement and datastructure 'AUCASI02'
*
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
*
LOCAL USING AUCASIND
LOCAL USING AUCAPIND
LOCAL USING PARSER-X
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
*
LOCAL
1 #LEN              (I4)
1 #PARSE-ERROR      (I4) CONST <-7>
1 #NATURAL-ERROR    (I4) CONST <-3>
1 #ERROR-LOG        (I4) CONST <3>
1 #TRUE             (A4)  CONST <'TRUE'>
1 #FALSE            (A5)  CONST <'FALSE'>
*
1 #CX                          (I4)
1 #CY                          (I4)
1 #CZ                          (I4)
1 #XML_NAMESPACE               (A/1:1) DYNAMIC INIT <
  'http://www.w3.org/2001/XMLSchema-instance' >
1 #XML_PREFIX                  (A/1:1) DYNAMIC INIT <
  'xsi:' >
1 SEARCH-ISNS                  (P10/1:*)
1 ADDRESS-FLAGS                (A1/1:*)
1 EMAIL-FLAGS                  (N8/1:*)
1 PHONE-FLAGS                  (N8/1:*)
*
END-DEFINE
*
ASSIGN #LEN := *LENGTH (#XML_INPUT)
IF #LEN <= 0
  PageIndividual.ErrorCode := #Parse-error
  PageIndividual.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNSIS2' #XML_OUTPUT PageIndividual
  ESCAPE ROUTINE
END-IF
RESET SearchIndividual
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
PageIndividual.ErrorCode := #PARSE-ERROR
PageIndividual.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNSIS2' #XML_OUTPUT PageIndividual
END-SUBROUTINE
*
DEFINE SUBROUTINE CALLBACK
/*                ========
IF XML_PARSER_CONTENT_IS_EMPTY THEN
  IGNORE
ELSE
  #XML_VALUE := *TRIM (#XML_VALUE)
  MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
  PERFORM PARSE-DOCUMENT
END-IF
END-SUBROUTINE
*
CALLNAT 'AUCNSIG1' SearchIndividual SEARCH-ISNS(*) ADDRESS-FLAGS(*) EMAIL-FLAGS(*) PHONE-FLAGS(*)/* Search logic
IF SearchIndividual.GenerateReport = TRUE
  PageIndividual.TotalFound  := SearchIndividual.TotalFound
  RESIZE ARRAY PageIndividual.Individual TO (1:1)
*   EXPAND ARRAY SEARCH-ISNS to (1:PageIndividual.TotalFound)
  CALLNAT 'AUCNSIR2' PageIndividual SEARCH-ISNS(*) SearchIndividual.FileName
ELSE
  IF SearchIndividual.TotalFound > 99
    C@Individual := 99
  ELSE
    C@Individual := SearchIndividual.TotalFound
  END-IF
  PageIndividual.LinesPerPage := C@Individual
  PageIndividual.TotalFound := SearchIndividual.TotalFound
  IF C@Individual > 0
    EXPAND ARRAY Individual TO (1 : C@Individual)
    CALLNAT 'AUCNSIR1' PageIndividual SEARCH-ISNS(*) ADDRESS-FLAGS(*) EMAIL-FLAGS(*) PHONE-FLAGS(*)
  END-IF
END-IF
CALLNAT 'AUCNSIS2' #XML_OUTPUT PageIndividual     /* Send back search result
*
* ------------------------------------------------- CALL THE PARSER
DEFINE PARSE-DOCUMENT
/*     ==============
**PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE #XML_VALUE
**  NORMALIZE NAMESPACE #XML_NAMESPACE(*) PREFIX #XML_PREFIX(*)
*
DECIDE ON FIRST #XML_PATH
  VALUE 'SearchIndividual//'
    IGNORE
  VALUE 'SearchIndividual'
    RESET INITIAL SearchIndividual
  VALUE 'SearchIndividual/ErrorCode//'
    IGNORE
  VALUE 'SearchIndividual/ErrorCode'
    IGNORE
  VALUE 'SearchIndividual/ErrorCode/$'
    SearchIndividual.ErrorCode := VAL(#XML_VALUE)
  VALUE 'SearchIndividual/ErrorDescription//'
    IGNORE
  VALUE 'SearchIndividual/ErrorDescription'
    IGNORE
  VALUE 'SearchIndividual/ErrorDescription/$'
    SearchIndividual.ErrorDescription := #XML_VALUE
  VALUE 'SearchIndividual/ActionType//'
    IGNORE
  VALUE 'SearchIndividual/ActionType'
    IGNORE
  VALUE 'SearchIndividual/ActionType/$'
    SearchIndividual.ActionType := VAL(#XML_VALUE)
  VALUE 'SearchIndividual/SearchId//'
    IGNORE
  VALUE 'SearchIndividual/SearchId'
    IGNORE
  VALUE 'SearchIndividual/SearchId/$'
    SearchIndividual.SearchId := #XML_VALUE
  VALUE 'SearchIndividual/TotalFound//'
    IGNORE
  VALUE 'SearchIndividual/TotalFound'
    IGNORE
  VALUE 'SearchIndividual/TotalFound/$'
    SearchIndividual.TotalFound := VAL(#XML_VALUE)
  VALUE 'SearchIndividual/FirstName//'
    IGNORE
  VALUE 'SearchIndividual/FirstName'
    IGNORE
  VALUE 'SearchIndividual/FirstName/$'
    SearchIndividual.FirstName := #XML_VALUE
  VALUE 'SearchIndividual/LastName//'
    IGNORE
  VALUE 'SearchIndividual/LastName'
    IGNORE
  VALUE 'SearchIndividual/LastName/$'
    SearchIndividual.LastName := #XML_VALUE
  VALUE 'SearchIndividual/DateOfBirth//'
    IGNORE
  VALUE 'SearchIndividual/DateOfBirth'
    IGNORE
  VALUE 'SearchIndividual/DateOfBirth/$'
    SearchIndividual.DateOfBirth := VAL(#XML_VALUE)
  VALUE 'SearchIndividual/DateOfDeath//'
    IGNORE
  VALUE 'SearchIndividual/DateOfDeath'
    IGNORE
  VALUE 'SearchIndividual/DateOfDeath/$'
    SearchIndividual.DateOfDeath := VAL(#XML_VALUE)
  VALUE 'SearchIndividual/SSN//'
    IGNORE
  VALUE 'SearchIndividual/SSN'
    IGNORE
  VALUE 'SearchIndividual/SSN/$'
    SearchIndividual.SSN := #XML_VALUE
  VALUE 'SearchIndividual/Phone//'
    IGNORE
  VALUE 'SearchIndividual/Phone'
    IGNORE
  VALUE 'SearchIndividual/Phone/$'
    SearchIndividual.Phone := VAL(#XML_VALUE)
  VALUE 'SearchIndividual/PhoneType//'
    IGNORE
  VALUE 'SearchIndividual/PhoneType'
    IGNORE
  VALUE 'SearchIndividual/PhoneType/$'
    SearchIndividual.PhoneType := #XML_VALUE
  VALUE 'SearchIndividual/Email//'
    IGNORE
  VALUE 'SearchIndividual/Email'
    IGNORE
  VALUE 'SearchIndividual/Email/$'
    SearchIndividual.Email := #XML_VALUE
  VALUE 'SearchIndividual/City//'
    IGNORE
  VALUE 'SearchIndividual/City'
    IGNORE
  VALUE 'SearchIndividual/City/$'
    SearchIndividual.City := #XML_VALUE
  VALUE 'SearchIndividual/State//'
    IGNORE
  VALUE 'SearchIndividual/State'
    IGNORE
  VALUE 'SearchIndividual/State/$'
    SearchIndividual.State := #XML_VALUE
  VALUE 'SearchIndividual/ZIP//'
    IGNORE
  VALUE 'SearchIndividual/ZIP'
    IGNORE
  VALUE 'SearchIndividual/ZIP/$'
    SearchIndividual.ZIP := VAL(#XML_VALUE)
  VALUE 'SearchIndividual/MembersOnly/$'
    IF #XML_VALUE = #TRUE
      SearchIndividual.MembersOnly := TRUE
    END-IF
    IF #XML_VALUE = #FALSE
      SearchIndividual.MembersOnly := FALSE
    END-IF
  VALUE 'SearchIndividual/GenerateReport/$'
    IF #XML_VALUE = #TRUE
      SearchIndividual.GenerateReport := TRUE
    END-IF
    IF #XML_VALUE = #FALSE
      SearchIndividual.GenerateReport := FALSE
    END-IF
  VALUE 'SearchIndividual/FileName//'
    IGNORE
  VALUE 'SearchIndividual/FileName'
    IGNORE
  VALUE 'SearchIndividual/FileName/$'
    SearchIndividual.FileName := #XML_VALUE
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END
