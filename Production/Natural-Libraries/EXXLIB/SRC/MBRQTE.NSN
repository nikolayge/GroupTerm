* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* CRM Admin interface : Quote Request Parse
************************************************************************
* NAME         : MBRQTE                                                *
* AUTHOR       : Copyright: MetrostarSystems AAFMAA                    *
* DESCRIPTION  : Return Quotes for Given Product/AmountsBenefits       *
************************************************************************
*        MODIFICATION LOG                                              *
************************************************************************
* USER   DATE      TAG  REASON
* NGG    20100128      Initial Creation
*********************************************************

* '<Query><Customer>' -
* '<And><And>' -
* '<Equal><Relation>M</Relation></Equal>' -
* '<And><And><And>' -
* '<In><ProductCode>LT,V5,V6,V7,V8,U5,U6,U7,U8,OL,20P</ProductCode></In>' -
* '<In><Quantity>100,250,500,600,800</Quantity></In>' -
* '</And>' -
* '<And>' -
* '<Equal><BirthDate>19600210</BirthDate></Equal>' -
* '<Equal><Gender>M</Gender></Equal>' -
* '</And></And>' -
* '<And><And>' -
* '<Equal><MilitaryService>F</MilitaryService></Equal>' -
* '<Equal><MilitaryStatus>A</MilitaryStatus></Equal>' -
* '</And>' -
* '<And>' -
* '<Equal><Nicotine>N</Nicotine></Equal>' -
* '<Equal><Rank>MSG</Rank></Equal>' -
* '</And></And></And>' -
* '</And>' -
* '<Equal><State>va</State></Equal>' -
* '</And>' -
* '</Customer></Query>'


DEFINE DATA PARAMETER
1 XML_PARSER_INPUT    (A) DYNAMIC        /* In
1 XML_SERIALZE_OUTPUT (A) DYNAMIC        /* Out
local
1 BLANK             (A1)  CONST <' '>
1 #DEL              (A1)  CONST <':'>
*
1 XML_PARSER_ERROR_TEXT        (A253)
1 XML_PARSER_RESPONSE          (I4)
LOCAL USING PARSER-X           /* parser internal data - do not change
LOCAL
1 XML_PARSER_XPATH             (A) DYNAMIC
1 XML_PARSER_XPATH_TYPE        (A1)
1 XML_PARSER_CONTENT           (A) DYNAMIC
1 XML_PARSER_CONTENT_IS_EMPTY  (L)
1 #VALUE       (A64)
1 #FULL-PATH   (A126) 1 REDEFINE #FULL-PATH
  2 #PREFIX    (A23)
  2 #NODE      (A64)
*
1 #Timeout          (A2) CONST <'-2'>
1 #Natural-error    (A2) CONST <'-3'>
1 #Duplicate-AT     (A2) CONST <'-4'>
1 #No-AT#-available (A2) CONST <'-5'>
1 #No-AT#-found     (A2) CONST <'-6'>
1 #Parse-error      (A2) CONST <'-7'>
*
1 #SSNV      (A9) 1 REDEFINE #SSNV
  2 #SSN-N   (N9)
1 #LNAME     (A25)
1 #LEN       (I2)
1 #J         (I2)
1 #L         (I2)

1 #RELATION-CODE     (A1)
1 #NICOTINE-CODE     (A1)
1 #GENDER-CODE       (A1)
1 #RATING-CODE       (A1) /* '1','2' or '3'
1 #STATE-CODE        (A2)
1 #RANK-CODE         (A3)
1 #MSTATUS           (A1)
1 #MSERVICE          (A1)
1 #DOB               (N8)
1 #RequestorCN       (N6) 1 redefine #RequestorCN
  2 #RequestorCN-A   (A6)
1 #REQUESTEDPLANS    (A3/64)
1 #FACEAMOUNTS       (P7.2/7)   /* NG99
1 #FACE              (A10/7)    /* NG99
1 #DATE      (A8) 1 REDEFINE #DATE
  2 #DATE-N  (N8)
1 RESPONSE-DATA      (A) DYNAMIC

1 #Nodes
  2 #MilitaryService (A15) CONST <'MilitaryService'>
  2 #MilitaryStatus  (A14) CONST <'MilitaryStatus'>
  2 #PremiumClass    (A12) CONST <'PremiumClass'>
  2 #ProductCode     (A11) CONST <'ProductCode'>
  2 #BirthDate       (A9)  CONST <'BirthDate'>
  2 #InsuredCN       (A9)  CONST <'InsuredCN'>
  2 #Relation        (A8)  CONST <'Relation'>
  2 #Nicotine        (A8)  CONST <'Nicotine'>
  2 #Quantity        (A8)  CONST <'Quantity'>
  2 #Gender          (A6)  CONST <'Gender'>
  2 #State           (A5)  CONST <'State'>
  2 #Rank            (A4)  CONST <'Rank'>
END-DEFINE

RESET #SSNV #LNAME #LEN
ASSIGN #LEN := *LENGTH (XML_PARSER_INPUT)
IF #LEN <= 0
  COMPRESS #Parse-error 'Empty search data XML' INTO XML_SERIALZE_OUTPUT
    WITH DELIMITERS #DEL
  ESCAPE ROUTINE
END-IF

INCLUDE PARSER_X 'XML_PARSER_INPUT' /* XML file to be parsed
  'XML_PARSER_XPATH'                /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  'XML_PARSER_CONTENT'              /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE CALLBACK
IF XML_PARSER_CONTENT_IS_EMPTY THEN
  IGNORE
ELSE
  ASSIGN #FULL-PATH = XML_PARSER_XPATH
  PERFORM PARSE-DOCUMENT
  #VALUE      := XML_PARSER_CONTENT
END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE PARSER_ERROR
COMPRESS #Parse-error XML_PARSER_ERROR_TEXT INTO XML_SERIALZE_OUTPUT
  WITH DELIMITERS #DEL
ESCAPE ROUTINE
END-SUBROUTINE
*
DEFINE PARSE-DOCUMENT
XML_PARSER_CONTENT := *TRIM (XML_PARSER_CONTENT)
MOVE *TRANSLATE(XML_PARSER_CONTENT, UPPER) TO XML_PARSER_CONTENT

EXAMINE #NODE FOR #MilitaryService GIVING POSITION #J
IF #J > 0
  #MSERVICE := XML_PARSER_CONTENT
  ESCAPE ROUTINE
END-IF
EXAMINE #NODE FOR #MilitaryStatus GIVING POSITION #J
IF #J > 0
  #MSTATUS := XML_PARSER_CONTENT
  ESCAPE ROUTINE
END-IF
EXAMINE #NODE FOR #PremiumClass GIVING POSITION #J
IF #J > 0
  #RATING-CODE := XML_PARSER_CONTENT
  ESCAPE ROUTINE
END-IF
EXAMINE #NODE FOR #ProductCode GIVING POSITION #J
IF #J > 0
  SEPARATE XML_PARSER_CONTENT INTO #REQUESTEDPLANS (*) WITH DELIMITER ','
  ESCAPE ROUTINE
END-IF
EXAMINE #NODE FOR #BirthDate GIVING POSITION #J
IF #J > 0
  #DATE := XML_PARSER_CONTENT
  #DOB := #DATE-N
  ESCAPE ROUTINE
END-IF
EXAMINE #NODE FOR #InsuredCN GIVING POSITION #J
IF #J > 0
  #RequestorCN-A := XML_PARSER_CONTENT
  ESCAPE ROUTINE
END-IF
EXAMINE #NODE FOR #Relation GIVING POSITION #J
IF #J > 0
  #RELATION-CODE := XML_PARSER_CONTENT
  IF #RELATION-CODE = 'C'
    assign #RELATION-CODE = 'K'
  END-IF
  ESCAPE ROUTINE
END-IF
EXAMINE #NODE FOR #Nicotine GIVING POSITION #J
IF #J > 0
  #NICOTINE-CODE := XML_PARSER_CONTENT
  ESCAPE ROUTINE
END-IF
EXAMINE #NODE FOR #Quantity GIVING POSITION #J
IF #J > 0
  SEPARATE XML_PARSER_CONTENT INTO #FACE   (*) WITH DELIMITER ','
  RESET #L
  FOR #J 1 TO 7
    IF #FACE ( #J ) NE BLANK
      ADD 1 TO #L
      #FACEAMOUNTS ( #L ) := VAL ( #FACE ( #J ) )
    END-IF
  END-FOR
  ESCAPE ROUTINE
END-IF
EXAMINE #NODE FOR #Gender GIVING POSITION #J
IF #J > 0
  #GENDER-CODE := XML_PARSER_CONTENT
  ESCAPE ROUTINE
END-IF
EXAMINE #NODE FOR #State GIVING POSITION #J
IF #J > 0
  #STATE-CODE := XML_PARSER_CONTENT
  ESCAPE ROUTINE
END-IF
EXAMINE #NODE FOR #Rank GIVING POSITION #J
IF #J > 0
  #RANK-CODE := XML_PARSER_CONTENT
  ESCAPE ROUTINE
END-IF

END-SUBROUTINE
*
CALLNAT 'MBRQTEB' XML_SERIALZE_OUTPUT
  #NICOTINE-CODE
  #DOB
  #GENDER-CODE
  #RATING-CODE
  #STATE-CODE
  #MSTATUS
  #MSERVICE
  #RELATION-CODE
  #RequestorCN
  #REQUESTEDPLANS (*)
  #FACEAMOUNTS    (*)


ON ERROR
  IF *ERROR-NR = 3009
    COMPRESS #Timeout *ERROR-NR *ERROR-LINE *PROGRAM *DATN *TIME INTO XML_SERIALZE_OUTPUT
      WITH DELIMITER ':'
  ELSE
    COMPRESS #Natural-error *ERROR-NR *ERROR-LINE *PROGRAM *DATN *TIME INTO XML_SERIALZE_OUTPUT
      WITH DELIMITER ':'
  END-IF
  ESCAPE ROUTINE
END-ERROR
*
END
