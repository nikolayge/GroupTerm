* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* Request from SSRS - Create upload_index file for the template by request from SSRS
* Object name - RQSTN004
***********************************************************************
*        MODIFICATION LOG
***********************************************************************
* USER   DATE      TAG  REASON
* YAK    12272013       Initial Creation
* YF     10252017  YF1  Added AT templates
* YF     11072017  YF2  Added GP Templates
* YAK    01032018  YK1  Add CC to Q Template
* YF     01092018  YF3  Added Paid Up Template
* YAK    01032018  YK2  Add CC expiration Template
* YF     04172018  YF4  Add Webcharge Success Template
***********************************************************************
*
DEFINE DATA PARAMETER
*
1 REQUEST-DATA      (A) DYNAMIC
1 RESPONSE-DATA     (A) DYNAMIC         /* Out
*
LOCAL USING PARSER-X
LOCAL USING OBJLLETT
*
LOCAL
1 #WINDOWS-DIR            (A) DYNAMIC INIT <'Ftp/EDS/Downloads/dale/'>
1 #WINDOWS-TEST-DIR       (A) DYNAMIC INIT <'Ftp/EDS/Downloads/Test/'>
1 #WINDOWS-SUBDIR         (A) DYNAMIC
1 #DAL-INDEX-FILE         (A) DYNAMIC CONST <'upload_index.xml'>
1 #UNIX-DIR               (A) DYNAMIC CONST <'/usr/SAG/AAFMAA/batch/workfiles/PERMDA/COM/'>
1 #FTP-SCRIPT-NAME        (A) DYNAMIC CONST <'/usr/SAG/cronus/.scripts/ftpAafmaaLocal'>
1 #FTP-MAKEDIR-NAME       (A) DYNAMIC CONST <'/usr/SAG/cronus/.scripts/ftpMakeDir'>
1 #WIN-FILE-NAME          (A) DYNAMIC
1 #UNIX-FILE-NAME         (A) DYNAMIC
1 #FILENAME               (A) DYNAMIC
1 #OUTPUT                 (A32000)
*
1 RECORD-VARIABLES
  2 #DESCRIPTION            (A) DYNAMIC
  2 #DOCTITLE               (A) DYNAMIC
  2 #S_N                    (A) DYNAMIC
  2 #PLAN                   (A) DYNAMIC
  2 #AGE-A                  (A2)
  2 #MONTH                  (A1)
  2 #WORK-FIELD             (A) DYNAMIC
*
1 CONSTANTS
  2 #CLERK-ID               (A3)  CONST <'EDS'>
  2 #SMOKER                 (A)   DYNAMIC CONST <'Smoker'>
  2 #NON-SMOKER             (A)   DYNAMIC CONST <'Non Smoker'>
  2 #END-LINE               (A1)  CONST <H'0A'>
  2 #LTI                    (A)   DYNAMIC CONST <'LTI'>
  2 #LTII                   (A)   DYNAMIC CONST <'LTII'>
  2 #LTII-PLUS              (A)   DYNAMIC CONST <'LTII+'>
  2 #AR                     (A)   DYNAMIC CONST <'AR'>
  2 #EZ                     (A)   DYNAMIC CONST <'EZ'>
  2 #RT                     (A)   DYNAMIC CONST <'RT'>
  2 #DOCTITLE-LETTER        (A)   DYNAMIC CONST <'COMM'>
  2 #DOCTITLE-E-POLICY      (A)   DYNAMIC CONST <'EPKG'>
  2 #DOCTITLE-E-COMM        (A)   DYNAMIC CONST <'ECOMM'>
  2 #DOCTITLE-GIPO          (A)   DYNAMIC CONST <'GPP'>
  2 #NO-RECORDS-FOR-REQUEST (A)   DYNAMIC CONST <'999'>
  2 #EMAIL-WITH-PDF         (A/8) DYNAMIC CONST
    <'LTI_EML_38Y_3M_S','LTI_EML_38Y_5M_S','LTI_EML_48Y_5M_N','RT_EML_REN_5M','RT_EML_REN_3M','LTII_PLUS_EML_1M_','LTII_PLUS_EML_3M_','LTII_PLUS_EML_5M_'>
  2 #GEN-DESCRIPTION-LAPS   (A)   DYNAMIC CONST <'Laps Letter'>
  2 #GEN-DESCRIPTION-LAPO   (A)   DYNAMIC CONST <'Lapo Letter'>
  2 #GEN-DESCRIPTION-LTI          (A) DYNAMIC CONST <'Plan Age 99 S_N Term Policies Let_Eml - X Month'>
  2 #GEN-DESCRIPTION-EXP-LTI      (A) DYNAMIC CONST <'Plan Age 99 S_N Term Policies - Policy Termination Letter'>
  2 #GEN-DESCRIPTION-LTII         (A) DYNAMIC CONST <'LTII Term Policies Let_Eml - X Month'>
  2 #GEN-DESCRIPTION-EXP-LTII     (A) DYNAMIC CONST <'LTII Term Policies - Policy Termination Letter'>
  2 #GEN-DESCRIPTION-LTIIPLUS     (A) DYNAMIC CONST <'LTII+ Term Policies Let_Eml - X Month'>
  2 #GEN-DESCRIPTION-EXP-LTIIPLUS (A) DYNAMIC CONST <'LTII+ Term Policies - Policy Termination Letter'>
  2 #GEN-DESCRIPTION-EXP-FBR      (A) DYNAMIC CONST <'Family Benefit Rider Let_Eml - Benefit Termination'>
  2 #GEN-DESCRIPTION-REN-EZ       (A) DYNAMIC CONST <'EZ Term Policies Let_Eml - Premium Increase - X Month'>
  2 #GEN-DESCRIPTION-EXP-EZ       (A) DYNAMIC CONST <'EZ Term Policies Let_Eml - Policy Termination'>
  2 #GEN-DESCRIPTION-REN-RT       (A) DYNAMIC CONST <'RT Term Policies Let_Eml - Policy Renewal - X Month'>
  2 #GEN-DESCRIPTION-EXP-RT       (A) DYNAMIC CONST <'RT Term Policies - Policy Termination Letter'>
  2 #GEN-DESCRIPTION-E-DEL-LET    (A) DYNAMIC CONST <'Policy Package Electronic Delivery Letter'>
  2 #GEN-DESCRIPTION-E-DEL-EML    (A) DYNAMIC CONST <'Policy Package Electronic Delivery Email'>
  2 #GEN-DESCRIPTION-PP-PAPER     (A) DYNAMIC CONST <'Policy Approval'>
  2 #GEN-DESCRIPTION-BILL-CYCLE   (A) DYNAMIC CONST <'Bill Cycle Change'>
  2 #GEN-DESCRIPTION-CC-CONV      (A) DYNAMIC CONST <'CC to Q Conversion'>         /* YK1
  2 #GEN-DESCRIPTION-CC-EXP       (A) DYNAMIC CONST <'Credit Card Expiration Warning Let_Eml'> /* YK2
  2 #GEN-DESCRIPTION-AT-U2-10DAY  (A) DYNAMIC CONST <'U2 10-Day Reminder Email'>   /* YF1
  2 #GEN-DESCRIPTION-AT-U2        (A) DYNAMIC CONST <'U2 Weekly Reminder Email'>
  2 #GEN-DESCRIPTION-AT-U3        (A) DYNAMIC CONST <'U3 Weekly Reminder Email'>
  2 #GEN-DESCRIPTION-AT-U5        (A) DYNAMIC CONST <'U5 Biweekly Reminder Email'>
  2 #GEN-DESCRIPTION-AT-S7-P      (A) DYNAMIC CONST <'S7 to P* Update Notification Email'>
  2 #GEN-DESCRIPTION-AT-P-U       (A) DYNAMIC CONST <'P* to U* Update Notification Email'>
  2 #GEN-DESCRIPTION-GIPO         (A) DYNAMIC CONST <'GP Policy GIPO'>
  2 #GEN-DESCRIPTION-PAID-UP      (A) DYNAMIC CONST <'Paid Up Notice'>             /* YF3
  2 #GEN-DESCRIPTION-WCS          (A) DYNAMIC CONST <'AAFMAA Insurance - Credit Card Payment'> /* YF4
*
* Letter & Email Templates
1 #TEMPLATES-TABLE
* LAPS Templates
  2 #TEMPLATE-LAPS (A20) CONST <'LAPS_LET'>
  2 #TEMPLATE-LAPO (A20) CONST <'LAPO_LET'>
* LTI Templates
  2 #LET-38-6        (A20) CONST <'LTI_LET_38Y_6M_S'>
  2 #EML-38-5        (A20) CONST <'LTI_EML_38Y_5M_S'>
  2 #LET-38-4        (A20) CONST <'LTI_LET_38Y_4M_S'>
  2 #EML-38-3        (A20) CONST <'LTI_EML_38Y_3M_S'>
  2 #LET-40-6        (A20) CONST <'LTI_LET_40Y_6M_S'>
  2 #EML-40-5        (A20) CONST <'LTI_EML_40Y_5M_S'>
  2 #LET-40-4        (A20) CONST <'LTI_LET_40Y_4M_S'>
  2 #EML-40-3        (A20) CONST <'LTI_EML_40Y_3M_S'>
  2 #LET-40-1        (A20) CONST <'LTI_LET_40Y_1M_S'>
  2 #EML-40-1        (A20) CONST <'LTI_EML_40Y_1M_S'>
  2 #LET-45-4        (A20) CONST <'LTI_LET_45Y_4M_S'>
  2 #EML-45-3        (A20) CONST <'LTI_EML_45Y_3M_S'>
  2 #LET-45-1        (A20) CONST <'LTI_LET_45Y_1M_S'>
  2 #EML-45-1        (A20) CONST <'LTI_EML_45Y_1M_S'>
  2 #LET-48-6        (A20) CONST <'LTI_LET_48Y_6M_N'>
  2 #EML-48-5        (A20) CONST <'LTI_EML_48Y_5M_N'>
  2 #LET-48-4        (A20) CONST <'LTI_LET_48Y_4M_N'>
  2 #LET-50-6N       (A20) CONST <'LTI_LET_50Y_6M_N'>
  2 #EML-50-5N       (A20) CONST <'LTI_EML_50Y_5M_N'>
  2 #LET-50-4N       (A20) CONST <'LTI_LET_50Y_4M_N'>
  2 #LET-50-1N       (A20) CONST <'LTI_LET_50Y_1M_N'>
  2 #EML-50-1N       (A20) CONST <'LTI_EML_50Y_1M_N'>
  2 #LET-50-6S       (A20) CONST <'LTI_LET_50Y_6M_S'>
  2 #EML-50-5S       (A20) CONST <'LTI_EML_50Y_5M_S'>
  2 #LET-50-4S       (A20) CONST <'LTI_LET_50Y_4M_S'>
  2 #EML-50-3S       (A20) CONST <'LTI_EML_50Y_3M_S'>
  2 #LET-50-EXP      (A20) CONST <'LTI_LET_50Y_EXP'>
  2 #LET-55-4        (A20) CONST <'LTI_LET_55Y_4M_N'>
  2 #EML-55-3        (A20) CONST <'LTI_EML_55Y_3M_N'>
  2 #LET-55-1        (A20) CONST <'LTI_LET_55Y_1M_N'>
  2 #EML-55-1        (A20) CONST <'LTI_EML_55Y_1M_N'>
  2 #LET-60-6        (A20) CONST <'LTI_LET_60Y_6M_N'>
  2 #EML-60-5        (A20) CONST <'LTI_EML_60Y_5M_N'>
  2 #LET-60-4        (A20) CONST <'LTI_LET_60Y_4M_N'>
  2 #EML-60-3        (A20) CONST <'LTI_EML_60Y_3M_N'>
  2 #LET-60-EXP      (A20) CONST <'LTI_LET_60Y_EXP'>
* LTII Templates
  2 #LET-LTII-4      (A20) CONST <'LTII_LET_4M_'>
  2 #EML-LTII-3      (A20) CONST <'LTII_EML_3M_'>
  2 #LET-LTII-1      (A20) CONST <'LTII_LET_1M_'>
  2 #EML-LTII-1      (A20) CONST <'LTII_EML_1M_'>
  2 #LET-LTII-EXP    (A20) CONST <'LTII_LET_EXP'>
* LTII Plus Templates
  2 #LET-LTII-PLUS-6 (A20) CONST <'LTII_PLUS_LET_6M_'>
  2 #EML-LTII-PLUS-5 (A20) CONST <'LTII_PLUS_EML_5M_'>
  2 #LET-LTII-PLUS-4 (A20) CONST <'LTII_PLUS_LET_4M_'>
  2 #EML-LTII-PLUS-3 (A20) CONST <'LTII_PLUS_EML_3M_'>
  2 #LET-LTII-PLUS-1 (A20) CONST <'LTII_PLUS_LET_1M_'>
  2 #LET-LTII-PLUS-REN  (A20) CONST <'LTII_PLUS_LET_REN'>
  2 #LET-LTII-PLUS-EXP  (A20) CONST <'LTII_PLUS_LET_EXP'>
* EZ Term Templates
  2 #LET-EZ-INCREASE (A20) CONST <'EZ_LET_INC_2M'>
  2 #EML-EZ-INCREASE (A20) CONST <'EZ_EML_INC_2M'>
  2 #LET-EZ-EXP      (A20) CONST <'EZ_LET_EXP'>
  2 #EML-EZ-EXP      (A20) CONST <'EZ_EML_EXP'>
* 5 Years Renewal Term Templates
  2 #LET-RT-REN-6    (A20) CONST <'RT_LET_REN_6M'>
  2 #EML-RT-REN-5    (A20) CONST <'RT_EML_REN_5M'>
  2 #LET-RT-REN-4    (A20) CONST <'RT_LET_REN_4M'>
  2 #EML-RT-REN-3    (A20) CONST <'RT_EML_REN_3M'>
  2 #LET-RT-EXP      (A20) CONST <'RT_LET_EXP'>
* FBR Templates
  2 #LET-LTI-RIDER   (A20) CONST <'LTI_RIDER_LET'>
  2 #EML-LTI-RIDER   (A20) CONST <'LTI_RIDER_EML'>
  2 #LET-FBR         (A20) CONST <'FBR_LET'>
  2 #EML-FBR         (A20) CONST <'FBR_EML'>
* Policy Print
  2 #PP_E_DEL_NEW_LET (A20) CONST <'PP_E_DEL_ALL_EML'>
  2 #PP_E_DEL_ALL_LET (A20) CONST <'PP_E_DEL_NEW_LET'>
  2 #PP_E_DEL_EXT_LET (A20) CONST <'PP_E_DEL_EXT_LET'>
  2 #PP_PAPER_EML     (A20) CONST <'PP_PAPER_EML'>
  2 #PP_SAT_ALL_EML   (A20) CONST <'PP_SAT_ALL_EML'>
* Payment Information
  2 #CC-EXP-LET         (A20) CONST <'CC_EXP_LET'>               /* YK2
  2 #CC-EXP-EML         (A20) CONST <'CC_EXP_EML'>               /* YK2
  2 #BILL_CYCLE_CHG_EML (A20) CONST <'BILL_CYCLE_CHG_EML'>
  2 #CC_Q_CONV_LET      (A20) CONST <'CC_Q_CONV_LET'>            /* YK1
* AT Templates                                                   /* YF1
  2 #TEMPLATE-AT-U2-10   (A20) CONST <'AT_U2_10DAY_EML'>
  2 #TEMPLATE-AT-U2      (A20) CONST <'AT_U2_EML'>
  2 #TEMPLATE-AT-U3      (A20) CONST <'AT_U3_EML'>
  2 #TEMPLATE-AT-U5      (A20) CONST <'AT_U5_EML'>
  2 #TEMPLATE-AT-S7-P    (A20) CONST <'AT_S7_P_EML'>
  2 #TEMPLATE-AT-P-U     (A20) CONST <'AT_P_U_EML'>
* GP Email Templates                                             /* YF2
  2 #GP2-DB-EML          (A20) CONST <'GP2_DB_EML'>
  2 #GPL-DB-EML          (A20) CONST <'GPL_DB_EML'>
  2 #GP2-DB-EML-30       (A20) CONST <'GP2_DB_EML_30'>
  2 #GPL-DB-EML-30       (A20) CONST <'GPL_DB_EML_30'>
  2 #GP2-GIPO-60-30      (A20) CONST <'GP2_GIPO_EML_60_30'>
  2 #GPL-GIPO-60-30      (A20) CONST <'GPL_GIPO_EML_60_30'>
  2 #GP2-OWN-EML-30      (A20) CONST <'GP2_OWN_EML_30'>
* GP Letter Templates
  2 #GP2-GIPO-60         (A20) CONST <'GP2_GIPO_LET_60'>
  2 #GPL-GIPO-60         (A20) CONST <'GPL_GIPO_LET_60'>
  2 #GP2-DB-LET          (A20) CONST <'GP2_DB_LET'>
  2 #GPL-DB-LET          (A20) CONST <'GPL_DB_LET'>
  2 #GP2-DB-LET-30       (A20) CONST <'GP2_DB_LET_30'>
  2 #GPL-DB-LET-30       (A20) CONST <'GPL_DB_LET_30'>
  2 #GP2-OWN-LET-30      (A20) CONST <'GP2_OWN_LET_30'>
  2 #GP2-OWN-LET         (A20) CONST <'GP2_OWN_LET'>
* Paid Up Letter Template                                        /* YF3
  2 #PAID-UP-LET         (A20) CONST <'PAID_UP_LET'>
* Webcharge Success Template                                     /* YF4
  2 #WCS-EML             (A20) CONST <'WCS_EML'>
* Work variables
1 #COUNTERS
  2 #I                 (I2)
  2 #II                (I2)
  2 #TEMPLATE-NAME     (A20)

LOCAL
1 XML_PARSER_XPATH             (A) DYNAMIC
1 XML_PARSER_XPATH_TYPE        (A1)
1 XML_PARSER_CONTENT           (A) DYNAMIC
1 XML_PARSER_CONTENT_IS_EMPTY  (L)
1 XML_PARSER_INPUT   (A) DYNAMIC
1 XML_PARSER_ERROR_TEXT        (A253)
1 XML_PARSER_RESPONSE          (I2)
1 XML                          (A) DYNAMIC
*
1 #ErrorCode        (A3) INIT <'0'>
1 #ErrorDescription (A) DYNAMIC
1 #value            (A) DYNAMIC
1 #SUBMIT-DATE      (A10)
1 #NO-RECORDS       (L) INIT <TRUE>
1 #XML              (A) DYNAMIC
1 #DATN             (N8)
1 #DELAYED          (A) DYNAMIC INIT <'PP_E_DEL_ALL_EML'>
*
END-DEFINE
*
XML_PARSER_INPUT := REQUEST-DATA
INCLUDE PARSER_X 'XML_PARSER_INPUT' /* XML file to be parsed
  'XML_PARSER_XPATH'                /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  'XML_PARSER_CONTENT'              /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
* Check on which server process is running (Test/Prod)
IF F-IS-DEV(<>)
  #WINDOWS-DIR := #WINDOWS-TEST-DIR
END-IF
*
#DATN := *DATN
* Call Business Logic
COMPRESS #UNIX-DIR #DAL-INDEX-FILE INTO #UNIX-FILE-NAME LEAVING NO
DEFINE WORK FILE 15 #UNIX-FILE-NAME
RESET #XML
COMPRESS #XML '<DOCUMENTS>' #END-LINE INTO #XML LEAVING NO
RESET INITIAL #NO-RECORDS
FIND LT-V WITH TEMPLATE-NAME = #TEMPLATE-NAME
*     SORTED BY LAST-LOAD-DATE DESCENDING
* Skip "Satisfaction emails"
  IF #TEMPLATE-NAME = #PP_SAT_ALL_EML
    ESCAPE BOTTOM
  END-IF
* Skip already processed records
  IF DATE-SENT <> 0
    ESCAPE TOP
  END-IF
* Skip "do not send" items
  IF LT-V.IS-SENT = 'N' OR LT-V.IS-SENT = 'F' OR LT-V.IS-SENT = 'E'
    ESCAPE TOP
  END-IF
  IF #TEMPLATE-NAME = #DELAYED
    EXAMINE POLICY-CHANGE-DATE FOR '-' DELETE
    IF #DATN < VAL(POLICY-CHANGE-DATE)
      ESCAPE TOP
    END-IF
  END-IF
  RESET RECORD-VARIABLES
  #NO-RECORDS := FALSE
  #SUBMIT-DATE := FUNCTION-CALENDAR(<LT-V.LAST-LOAD-DATE,'D'>)
* Assign file name
  COMPRESS LT-V.POLICY-NUMBER '.pdf' INTO #FILENAME LEAVING NO
  IF LT-V.TEMPLATE-NAME = SCAN 'EML'
    IF LT-V.TEMPLATE-NAME = #EMAIL-WITH-PDF(*)
      IGNORE
    ELSE
      COMPRESS LT-V.POLICY-NUMBER '.html' INTO #FILENAME LEAVING NO
    END-IF
  END-IF
* Assign Smoker/Non-smoker
  DECIDE FOR FIRST CONDITION
    WHEN LT-V.TEMPLATE-NAME = SCAN '_S'
      #S_N := #SMOKER
    WHEN LT-V.TEMPLATE-NAME = SCAN '_N'
      #S_N := #NON-SMOKER
    WHEN NONE
      IGNORE
  END-DECIDE
* Determine Age/Month
  RESET #II
  EXAMINE LT-V.TEMPLATE-NAME FOR 'Y_' POSITION #II
  IF #II <> 0
    #II := #II - 2
    #AGE-A := SUBSTR(LT-V.TEMPLATE-NAME,#II,2)
  END-IF
  RESET #II
  EXAMINE LT-V.TEMPLATE-NAME FOR 'M_' POSITION #II
  IF #II <> 0
    #II := #II - 1
    #MONTH := SUBSTR(LT-V.TEMPLATE-NAME,#II,1)
  END-IF
* Assign description
  #PLAN  := LT-V.PLAN
  #DOCTITLE := #DOCTITLE-LETTER
  DECIDE FOR FIRST CONDITION
    WHEN LT-V.TEMPLATE-NAME = #TEMPLATE-LAPS
      #DESCRIPTION := #GEN-DESCRIPTION-LAPS
    WHEN LT-V.TEMPLATE-NAME = #TEMPLATE-LAPO
      #DESCRIPTION := #GEN-DESCRIPTION-LAPO
    WHEN #PLAN = #LTI AND (LT-V.TEMPLATE-NAME = #LET-50-EXP OR = #LET-60-EXP)
      #DESCRIPTION := #GEN-DESCRIPTION-EXP-LTI
    WHEN #PLAN = #LTI
      #DESCRIPTION := #GEN-DESCRIPTION-LTI
    WHEN #PLAN = #LTII AND LT-V.TEMPLATE-NAME = #LET-LTII-EXP
      #DESCRIPTION := #GEN-DESCRIPTION-EXP-LTII
    WHEN #PLAN = #LTII
      #DESCRIPTION := #GEN-DESCRIPTION-LTII
    WHEN #PLAN = #LTII-PLUS AND LT-V.TEMPLATE-NAME = #LET-LTII-PLUS-EXP
      #DESCRIPTION := #GEN-DESCRIPTION-EXP-LTIIPLUS
    WHEN #PLAN = #LTII-PLUS
      #DESCRIPTION := #GEN-DESCRIPTION-LTIIPLUS
    WHEN #PLAN = #EZ AND LT-V.TEMPLATE-NAME = SCAN('EXP')
      #DESCRIPTION := #GEN-DESCRIPTION-EXP-EZ
    WHEN #PLAN = #EZ
      #DESCRIPTION := #GEN-DESCRIPTION-REN-EZ
      #MONTH       := 2
    WHEN #PLAN = #RT AND LT-V.TEMPLATE-NAME = #LET-RT-EXP
      #DESCRIPTION := #GEN-DESCRIPTION-EXP-RT
    WHEN #PLAN = #RT
      #DESCRIPTION := #GEN-DESCRIPTION-REN-RT
      #WORK-FIELD  := LT-V.TEMPLATE-NAME
      #WORK-FIELD  := *TRIM(#WORK-FIELD)
      #I := *LENGTH(#WORK-FIELD)
      #I := #I - 1
      #MONTH := SUBSTR(#WORK-FIELD,#I,1)
    WHEN LT-V.TEMPLATE-NAME = SCAN('FBR')
      #DESCRIPTION := #GEN-DESCRIPTION-EXP-FBR
    WHEN LT-V.TEMPLATE-NAME = SCAN('PP_PAPER_EML')
      #DESCRIPTION := #GEN-DESCRIPTION-PP-PAPER
      #DOCTITLE    := #DOCTITLE-E-COMM
    WHEN LT-V.TEMPLATE-NAME = SCAN('PP_E_DEL_ALL_EML')
      #DESCRIPTION := #GEN-DESCRIPTION-E-DEL-EML
      #DOCTITLE    := #DOCTITLE-E-COMM
      #SUBMIT-DATE := FUNCTION-CALENDAR(<#DATN,'D'>)
    WHEN LT-V.TEMPLATE-NAME = SCAN('PP_E_DEL')
      #DESCRIPTION := #GEN-DESCRIPTION-E-DEL-LET
      #DOCTITLE    := #DOCTITLE-E-POLICY
    WHEN LT-V.TEMPLATE-NAME = #BILL_CYCLE_CHG_EML
      #DESCRIPTION := #GEN-DESCRIPTION-BILL-CYCLE
      #DOCTITLE    := #DOCTITLE-E-COMM
    WHEN LT-V.TEMPLATE-NAME = #CC_Q_CONV_LET            /* YK1
      #DESCRIPTION := #GEN-DESCRIPTION-CC-CONV
    WHEN LT-V.TEMPLATE-NAME = #CC-EXP-LET               /* YK2
      #DESCRIPTION := #GEN-DESCRIPTION-CC-EXP
    WHEN LT-V.TEMPLATE-NAME = #CC-EXP-EML               /* YK2
      #DESCRIPTION := #GEN-DESCRIPTION-CC-EXP
      #DOCTITLE    := #DOCTITLE-E-COMM
    WHEN LT-V.TEMPLATE-NAME = #TEMPLATE-AT-U2-10    /* YF1 START
      #DESCRIPTION := #GEN-DESCRIPTION-AT-U2-10DAY
      #DOCTITLE    := #DOCTITLE-E-COMM
    WHEN LT-V.TEMPLATE-NAME = #TEMPLATE-AT-U2
      #DESCRIPTION := #GEN-DESCRIPTION-AT-U2
      #DOCTITLE    := #DOCTITLE-E-COMM
    WHEN LT-V.TEMPLATE-NAME = #TEMPLATE-AT-U3
      #DESCRIPTION := #GEN-DESCRIPTION-AT-U3
      #DOCTITLE    := #DOCTITLE-E-COMM
    WHEN LT-V.TEMPLATE-NAME = #TEMPLATE-AT-U5
      #DESCRIPTION := #GEN-DESCRIPTION-AT-U5
      #DOCTITLE    := #DOCTITLE-E-COMM
    WHEN LT-V.TEMPLATE-NAME = #TEMPLATE-AT-S7-P
      #DESCRIPTION := #GEN-DESCRIPTION-AT-S7-P
      #DOCTITLE    := #DOCTITLE-E-COMM
    WHEN LT-V.TEMPLATE-NAME = #TEMPLATE-AT-P-U
      #DESCRIPTION := #GEN-DESCRIPTION-AT-P-U
      #DOCTITLE    := #DOCTITLE-E-COMM              /* YF1 END
    WHEN LT-V.TEMPLATE-NAME = SCAN('GP')            /* YF2
      #DESCRIPTION := #GEN-DESCRIPTION-GIPO
      #DOCTITLE    := #DOCTITLE-GIPO
    WHEN LT-V.TEMPLATE-NAME = #PAID-UP-LET          /* YF3
      #DESCRIPTION := #GEN-DESCRIPTION-PAID-UP
    WHEN LT-V.TEMPLATE-NAME = #WCS-EML              /* YF4
      #DESCRIPTION := #GEN-DESCRIPTION-WCS
      #DOCTITLE    := #DOCTITLE-E-COMM             
    WHEN NONE
      IGNORE
  END-DECIDE
*
  EXAMINE #DESCRIPTION FOR 'Plan' REPLACE #PLAN
  EXAMINE #DESCRIPTION FOR 'X' REPLACE #MONTH
  EXAMINE #DESCRIPTION FOR '99' REPLACE #AGE-A
  EXAMINE #DESCRIPTION FOR 'S_N' REPLACE #S_N
*
  IF LT-V.TEMPLATE-NAME = SCAN 'EML'
    EXAMINE #DESCRIPTION FOR 'Let_Eml' REPLACE 'Email'
  ELSE
    EXAMINE #DESCRIPTION FOR 'Let_Eml' REPLACE 'Letter'
  END-IF
*
  COMPRESS #XML '<DOCUMENT>'
    '<DOCTITLE>' #DOCTITLE '</DOCTITLE>'
    '<CN>' LT-V.INSURED-CN '</CN>'
    '<POL-NUM>' LT-V.POLICY-NUMBER '</POL-NUM>'
    '<SUBMITDATE>' #SUBMIT-DATE '</SUBMITDATE>'
    '<TEMPLATENAME>' LT-V.TEMPLATE-NAME '</TEMPLATENAME>'
    '<FILENAME>' #FILENAME '</FILENAME>'
    '<DESCRIPTION>' #DESCRIPTION '</DESCRIPTION>'
    '<ORGANIZATION>AAFMAA</ORGANIZATION>'
    '<MEMBERACCESSIBLE>false</MEMBERACCESSIBLE>'
    '<CUSTOM id="OwnerCN">' LT-V.OWNER-CN '</CUSTOM>'
    '<CUSTOM id="DocDate">' #SUBMIT-DATE '</CUSTOM>'
    INTO #XML LEAVING NO
  COMPRESS #XML '</DOCUMENT>' #END-LINE INTO #XML LEAVING NO
  IF *LENGTH(#XML) > 31500
    #OUTPUT := #XML
    WRITE WORK FILE 15 VARIABLE #OUTPUT
    RESET #XML
  END-IF
END-FIND
IF #NO-RECORDS
  IGNORE
ELSE
  COMPRESS #XML '</DOCUMENTS>' INTO #XML LEAVING NO
  #OUTPUT := #XML
  WRITE WORK FILE 15 VARIABLE #OUTPUT
  CLOSE WORK FILE 15
*
  #WINDOWS-SUBDIR := LT-V.TEMPLATE-NAME
  CALLNAT 'GPRN0002' #FTP-MAKEDIR-NAME #WINDOWS-DIR #WINDOWS-SUBDIR
*
  COMPRESS #UNIX-DIR #DAL-INDEX-FILE INTO #UNIX-FILE-NAME LEAVING NO
  COMPRESS #WINDOWS-DIR '/' #WINDOWS-SUBDIR '/' #DAL-INDEX-FILE INTO #WIN-FILE-NAME LEAVING NO
  CALLNAT 'GPRN0002' #FTP-SCRIPT-NAME #UNIX-FILE-NAME #WIN-FILE-NAME
END-IF
*
PERFORM COMPOSE-XML
*
************************** CALLBACK HANDLER
DEFINE SUBROUTINE CALLBACK
**************************
*
DECIDE ON FIRST XML_PARSER_XPATH
  VALUE 'IndexFile/TemplateName/$'
    #TEMPLATE-NAME := *TRIM(XML_PARSER_CONTENT)
  NONE VALUE
    IGNORE
END-DECIDE
END-SUBROUTINE
*
*****************************
DEFINE SUBROUTINE COMPOSE-XML
*****************************
*
IF #NO-RECORDS
  #ErrorCode        := #NO-RECORDS-FOR-REQUEST
  #ErrorDescription := 'No un-sent records found for this template'
END-IF
COMPRESS '<IndexFile>' -
  '<ErrorCode>' #ErrorCode '</ErrorCode>' -
  '<ErrorDescription>' #ErrorDescription '</ErrorDescription>' -
  '</IndexFile>'
  INTO RESPONSE-DATA LEAVING NO
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE PARSER_ERROR
******************************
COMPRESS XML_PARSER_RESPONSE XML_PARSER_ERROR_TEXT INTO RESPONSE-DATA
ESCAPE ROUTINE
END-SUBROUTINE
*
END
