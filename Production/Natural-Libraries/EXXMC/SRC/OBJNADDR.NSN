* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* A-ADDRESS-POOL - Object Module
* OBJNADDR - Subprogram to perform A-ADDRESS-POOL
* access functions.
* * * * * * * * * * * * * * * * * * * * * * * *
***********************************************
* MODIFICATION LOG
***********************************************
* USER   DATE      TAG  REASON
* YAK    09152010  YAK  Initial Creation
* * * * * * * * * * * * * * * * * * * * * * * *
*
DEFINE DATA
PARAMETER USING OBJAADDR
*
LOCAL USING OBJLADDR
LOCAL USING ERROR_L
LOCAL
1 #ADDRPOOL            (A) DYNAMIC CONST <'ADDRPOOL'>
END-DEFINE
*
* Main processing
*
DECIDE ON FIRST VALUE #ACTION
 VALUE 'ADD'
   PERFORM ADD-RECORD
 VALUE 'UPDATE'
   PERFORM UPDATE-RECORD
 VALUE 'DELETE'
   PERFORM DELETE-RECORD
 VALUE 'GET'
   PERFORM GET-RECORD
 VALUE 'HIST-KEY'                        /* Histogram - check existence
   PERFORM HIST-KEY                      /* get *number
 NONE
   IGNORE
END-DECIDE
*
****************************
DEFINE SUBROUTINE ADD-RECORD
****************************
*
MOVE BY NAME PARM-ADDRESS-POOL TO ADDR-POOL-V
* Get next pool id
ADDR-POOL-V.ADDRESS-POOL-ID := F-GET-NEXT-ID(<#ADDRPOOL>)
WRITE WORK FILE 1 VARIABLE 'ADD POOL ID = ' ADDR-POOL-V.ADDRESS-POOL-ID
 STORE ADDR-POOL-V
PARM-ADDRESS-POOL.ADDRESS-POOL-ID := ADDR-POOL-V.ADDRESS-POOL-ID
*
END-SUBROUTINE
*
*******************************
DEFINE SUBROUTINE DELETE-RECORD
*******************************
*
FIND-D.
FIND(1) ADDR-POOL-V WITH ADDRESS-POOL-ID = PARM-ADDRESS-POOL.ADDRESS-POOL-ID
 IF NO RECORDS FOUND
   PARM-ADDRESS-POOL.#RETURN-CODE := #ADDR-POOL-NOT-FOUND
 END-NOREC
 DELETE (FIND-D.)
 WRITE WORK FILE 1 VARIABLE 'DELETE POOL ID = ' ADDR-POOL-V.ADDRESS-POOL-ID
END-FIND
*
END-SUBROUTINE
*
*******************************
DEFINE SUBROUTINE UPDATE-RECORD
*******************************
*
FIND-U.
FIND(1) ADDR-POOL-V WITH ADDRESS-POOL-ID = PARM-ADDRESS-POOL.ADDRESS-POOL-ID
 IF NO RECORDS FOUND
   PARM-ADDRESS-POOL.#RETURN-CODE := #ADDR-POOL-NOT-FOUND
 END-NOREC
 MOVE BY NAME PARM-ADDRESS-POOL TO ADDR-POOL-V
 UPDATE (FIND-U.)
 WRITE WORK FILE 1 VARIABLE 'UPDATE POOL ID = ' ADDR-POOL-V.ADDRESS-POOL-ID
END-FIND
*
END-SUBROUTINE
*
**************************
DEFINE SUBROUTINE HIST-KEY
**************************
*
FIND NUMBER ADDR-POOL-V WITH ADDRESS-POOL-ID = PARM-ADDRESS-POOL.ADDRESS-POOL-ID
*
END-SUBROUTINE
*
****************************
DEFINE SUBROUTINE GET-RECORD
****************************
*
FIND(1) ADDR-POOL-V WITH ADDRESS-POOL-ID = PARM-ADDRESS-POOL.ADDRESS-POOL-ID
  IF NO RECORDS FOUND
    PARM-ADDRESS-POOL.#RETURN-CODE := #ADDR-POOL-NOT-FOUND
  END-NOREC
  ISN    := *ISN
  MOVE BY NAME ADDR-POOL-V TO PARM-ADDRESS-POOL
  IF ADDR-POOL-V.ADDR-FORMAT-TYPE-CD = ' '
    IF ADDR-POOL-V.STATE-CODE = ' ' AND ADDR-POOL-V.ZIP-CODE = 0
      PARM-ADDRESS-POOL.ADDR-FORMAT-TYPE-CD := 'I'
    ELSE
      PARM-ADDRESS-POOL.ADDR-FORMAT-TYPE-CD := 'D'
    END-IF    
  END-IF
  ESCAPE ROUTINE
END-FIND
END-SUBROUTINE
*
END
