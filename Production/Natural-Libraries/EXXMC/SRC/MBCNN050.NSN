* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* Member Center Online / MCII
* Email Information
* Main program: MBCNN050
********************************************************
*        MODIFICATION LOG
********************************************************
* USER   DATE      TAG  REASON
* YAK    09072010       Initial Creation for MCII
*                       (cloned & changed from MBCN0050)
********************************************************
*
DEFINE DATA PARAMETER
*
1 REQUEST-DATA      (A) DYNAMIC
1 RESPONSE-DATA     (A) DYNAMIC         /* Out
*
LOCAL USING PARSER-X
LOCAL USING MBCA0005
LOCAL USING OBJACEML
LOCAL USING ERROR_L
LOCAL
*
1 XML_PARSER_XPATH             (A) DYNAMIC
1 XML_PARSER_XPATH_TYPE        (A1)
1 XML_PARSER_CONTENT           (A) DYNAMIC
1 XML_PARSER_CONTENT_IS_EMPTY  (L)
1 XML_PARSER_INPUT   (A) DYNAMIC
1 XML_PARSER_ERROR_TEXT        (A253)
1 XML_PARSER_RESPONSE          (I2)
1 XML                          (A) DYNAMIC
*
1 #MC               (A) DYNAMIC INIT <'MC'>
1 #TRUE             (A) DYNAMIC CONST <'true'>
1 #FALSE            (A) DYNAMIC CONST <'false'>
1 FUNCTION_CODE     (A) DYNAMIC CONST <'EMAIL'>
1 #GET              (A) DYNAMIC CONST <'0'>
1 #UserName         (A) DYNAMIC
1 #TAB              (A1) CONST <H'09'>
1 #NO               (A1) CONST <'N'>
1 #YES              (A1) CONST <'Y'>
1 #FIR-REQUEST      (A50)
1 #DATN             (N8)
1 #TIMN             (N7)
1 #I                (I2)
*
END-DEFINE
*
XML_PARSER_INPUT := REQUEST-DATA
INCLUDE PARSER_X 'XML_PARSER_INPUT' /* XML file to be parsed
  'XML_PARSER_XPATH'                /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  'XML_PARSER_CONTENT'              /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
* Call Business Logic
*
#DATN := *DATN
#TIMN := *TIMN
*
DECIDE FOR EVERY CONDITION
  WHEN Email.SystemSource = ' '
    Email.SystemSource := #MC
  WHEN Email.ActionType = '0'
    PERFORM PROCESS-GET-REQUEST
  WHEN Email.ActionType <> '0'
    PERFORM PROCESS-UPDATE-REQUEST
  WHEN NONE
    IGNORE
END-DECIDE
*
PERFORM COMPOSE-XML
*
**************************
DEFINE PROCESS-GET-REQUEST
**************************
*
Email.ErrorCode := '0'
CALLNAT 'MBCN0051' Email
IF Email.ErrorCode = '0'
  PERFORM COMPOSE-GET-XML
END-IF
*
END-SUBROUTINE
*
*****************************
DEFINE PROCESS-UPDATE-REQUEST
*****************************
*
EXPAND ARRAY EmailInfo TO (1:*)
Email.ActionType_s(1) := Email.ActionType
Email.ErrorCode := '0'
CALLNAT 'MBCN0052' Email
IF Email.ErrorCode = '0'
  END TRANSACTION
ELSE
  BACKOUT TRANSACTION
END-IF
END-SUBROUTINE
*
************************** CALLBACK HANDLER
DEFINE SUBROUTINE CALLBACK
**************************
*
DECIDE ON FIRST XML_PARSER_XPATH
  VALUE 'MemberEmails/CN/$'
    Email.CN := VAL(XML_PARSER_CONTENT)
  VALUE 'MemberEmails/UserID/$'
    Email.UserID := *TRIM(XML_PARSER_CONTENT)
  VALUE 'MemberEmails/SystemSource/$'
    Email.SystemSource := *TRIM(XML_PARSER_CONTENT)
  VALUE 'MemberEmails/ActionType/$'
    Email.ActionType := *TRIM(XML_PARSER_CONTENT)
  VALUE 'MemberEmails/Emails'
    ADD 1 TO Email.C@EmailInfo
    EXPAND ARRAY Email.EmailInfo TO (1:Email.C@EmailInfo)
  VALUE 'MemberEmails/Emails/Email/EmailID/$'
    Email.EmailID(C@EmailInfo) := VAL(XML_PARSER_CONTENT)
  VALUE 'MemberEmails/Emails/Email/EmailAddress/$'
    Email.EmailAddress(C@EmailInfo) := *TRIM(XML_PARSER_CONTENT)
  VALUE 'MemberEmails/Emails/Email/EmailPreferred/$'
    Email.EmailPreferredInd(C@EmailInfo) := *TRIM(XML_PARSER_CONTENT)
    IF Email.EmailPreferredInd(C@EmailInfo) = #TRUE
      Email.EmailPreferredInd(C@EmailInfo) := #YES
    ELSE
      Email.EmailPreferredInd(C@EmailInfo) := #NO
    END-IF  
  VALUE 'MemberEmails/Emails/Email/EmailUndeliverable/$'
    Email.EmailUndeliverableInd(C@EmailInfo) := #NO
  NONE
    IGNORE
END-DECIDE
END-SUBROUTINE
*
*********************************
DEFINE SUBROUTINE COMPOSE-GET-XML
*********************************
*
RESET XML
IF C@EmailInfo <> 0 
  EXAMINE Email.EmailPreferredInd(*) FOR #YES INDEX #I
  IF #I = 0
    Email.EmailPreferredInd(1) := #YES    
  END-IF
END-IF  
FOR #I = 1 TO C@EmailInfo
  IF Email.EmailPreferredInd(#I) = 'Y'
    Email.EmailPreferredInd(#I) := #TRUE
  ELSE
    Email.EmailPreferredInd(#I) := #FALSE
  END-IF
  IF Email.EmailUndeliverableInd(#I) = 'Y'
    Email.EmailUndeliverableInd(#I) := #TRUE
  ELSE
    Email.EmailUndeliverableInd(#I) := #FALSE
  END-IF
  COMPRESS  XML
    '<Email>'
    '<EmailID>' Email.EmailID(#I) '</EmailID>'
    '<EmailAddress><![CDATA[' Email.EmailAddress(#I) ']]></EmailAddress>'
    '<EmailPreferred>' Email.EmailPreferredInd(#I) '</EmailPreferred>'
    '<EmailUndeliverable>' Email.EmailUndeliverableInd(#I) '</EmailUndeliverable>'
    '</Email>' INTO XML LEAVING NO
END-FOR
COMPRESS '<Emails>' XML '</Emails>' INTO XML LEAVING NO
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE PARSER_ERROR
******************************
COMPRESS XML_PARSER_RESPONSE XML_PARSER_ERROR_TEXT INTO RESPONSE-DATA
ESCAPE ROUTINE
END-SUBROUTINE
*
*****************************
DEFINE SUBROUTINE COMPOSE-XML
*****************************
DECIDE FOR FIRST CONDITION
  WHEN Email.ErrorCode <> '0'
    Email.ErrorDescription := F-ERROR-DESCRIPTION(<Email.ErrorCode>)
  WHEN Email.ActionType <> #GET
    PERFORM LOG-REQUESTS
  WHEN NONE
    IGNORE
END-DECIDE
*
DECIDE FOR FIRST CONDITION
  WHEN Email.ActionType = '0'
    COMPRESS '<MemberEmails>'
      '<SystemSource>' Email.SystemSource '</SystemSource>'
      '<CN>' Email.CN '</CN>'
      XML
      '<ErrorCode>' Email.ErrorCode '</ErrorCode>'
      '<ErrorDescription>' Email.ErrorDescription '</ErrorDescription>'
      '</MemberEmails>'
      INTO RESPONSE-DATA LEAVING NO
  WHEN Email.ActionType = '1' OR  = '2' OR = '3'
    COMPRESS '<MemberEmails>'
      '<SystemSource>' Email.SystemSource '</SystemSource>'
      '<CN>' Email.CN '</CN>'
      '<ErrorCode>' Email.ErrorCode '</ErrorCode>'
      '<ErrorDescription>' Email.ErrorDescription '</ErrorDescription>'
      '</MemberEmails>'
      INTO RESPONSE-DATA LEAVING NO
  WHEN NONE
    IGNORE
END-DECIDE
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE LOG-REQUESTS
******************************
* save FIR request
WRITE WORK FILE 2 Email.CN
CLOSE WORK FILE 2
* Update "Profile Update Date" on Web User File
F-PROFILE-UPDATE-DATE(<Email.CN>)
* Log CRM request
CALLNAT 'MBRCRC' Email.ContactID FUNCTION_CODE
END-SUBROUTINE
*
END
