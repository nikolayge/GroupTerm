* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* T-W4A Withdrow Reports
* 01-04-2016 BZ Ver 2.0 1/30/2018 
*
DEFINE DATA  
 PARAMETER
1 p_ATMC-W4 
  2 p_Mode (A2)
  2 p_From (N8)
  2 p_To   (N8)
  2 p_Out  (A/*) DYNAMIC 
  
LOCAL 
1 AT-V VIEW OF A-APPL-TRACKING
  2 ID-NUMBER 
  2 USER-SOURCE
  2 APPL-SOURCE 
  2 ACTION-DATE
  2 REDEFINE ACTION-DATE
    3 AD_YYYY   (N4)
    3 AD_MM     (N2)
    3 AD_DD     (N2)    
  2 AT-STATUS
  2 FACE-AMT-UNITS
  2 C*ST-NOTE-TBL
  2 ST-NOTE-TBL(50)
   3 ST-NOTE-USER          (A3)
   3 ST-NOTE-DATE          (N8)
   3 REDEFINE ST-NOTE-DATE
     4 ST-NOTE-DATE_A      (A8)
   3 ST-NOTE-STATUS        (A2)  
  2 W4-OPTIONS
    3 W4-REASON
    3 W4-DISCLOSE
    3 W4-EXAM-BASED
    3 W4-MIB
    3 W4-NOTE
1 v_User (A3)    
1 dm         (A1)  INIT   <H'09'> 
1 v_Q        (N1)
1 A10    (A10)
1 A05    (A5)

1 c_W1        (N4) (EM=ZZZZ9)
1 c_W2        (N4) (EM=ZZZZ9)
1 c_W3        (N4) (EM=ZZZZ9)
1 c_W4        (N4) (EM=ZZZZ9)
1 c_W5        (N4) (EM=ZZZZ9)
1 c_WR        (N4) (EM=ZZZZ9)
1 c_WU        (N4) (EM=ZZZZ9)
1 c_Det       (N4) (EM=ZZZZ9)  
*
1 c_WQ(4)
   2 c_w1Q     (I4) (EM=ZZ9)
   2 c_w2Q     (I4) (EM=ZZ9)
   2 c_w3Q     (I4) (EM=ZZ9) 
   2 c_w4Q     (I4) (EM=ZZ9) 
   2 c_w5Q     (I4) (EM=ZZ9) 
   2 c_wRQ     (I4) (EM=ZZ9)      
   2 c_wUQ     (I4) (EM=ZZ9)
1 c_1234U   (N4.2/7)  (EM=Z9.99)
*
1 c_WQ_Amnt(5) 
  2 c_w1Q_Amnt (N9)   (EM=ZZZ,ZZZ,ZZ9)
  2 c_w2Q_Amnt (N9)   (EM=ZZZ,ZZZ,ZZ9)
  2 c_w3Q_Amnt (N9)   (EM=ZZZ,ZZZ,ZZ9)
  2 c_w4Q_Amnt (N9)   (EM=ZZZ,ZZZ,ZZ9)
  2 c_w5Q_Amnt (N9) (EM=ZZZ,ZZZ,ZZ9) 
  2 c_wRQ_Amnt (N9) (EM=ZZZ,ZZZ,ZZ9)  
  2 c_wUQ_Amnt (N9)   (EM=ZZZ,ZZZ,ZZ9)
1 c_Q_Amnt     (N9/5) (EM=ZZZ,ZZZ,ZZ9) 
1 c_w1234U     (I4)   (EM=ZZZ9)
1 c_Q          (N3/4) (EM=ZZ9)   
*
1  w4_Det(0:15)
  2 w4_Reason (A21) INIT<   '* No entry',
                            'Abnormal Labs',
                            'Alcohol/Drug Abuse',
                            'Auto-immune Syndrome',
                            'Blood Pressure',
                            'Brain (Tumor/CVA/TBI)',
                            'Build',
                            'Cancer',
                            'Cardiac',
                            'Diabetes',
                            'Mental/Mood/Cognitive',
                            'Pending Surgery/Tests',
                            'PTSD',
                            'Respiratory',
                            'HIV',
                            'Other' >
  2 w4_cnt    (I2/5)  (EM=ZZ9)     
*  
1  w4_Sales_Rep    (0:30) 
 2 w4_Rep    (A10)
 2 w4_Rep#   (I2/5)  (EM=ZZ9)
1 w4_Rep@    (I2)

1 w4_Mib           (I2) (EM=ZZ9)
1 w4_Exam          (I2) (EM=ZZ9)
1 w4_Disclose      (I2) (EM=ZZ9)

1 w4_Mib_Amnt      (N9) (EM=ZZZ,ZZZ,ZZ9)
1 w4_Exam_Amnt     (N9) (EM=ZZZ,ZZZ,ZZ9)
1 w4_Disclose_Amnt (N9) (EM=ZZZ,ZZZ,ZZ9)

1 #i         (I4)
1 #j         (I4)
1 #x         (I4)
1 v_A        (A)  DYNAMIC
1 v_A3       (A3)
1 c_Err      (I2)
1 A3         (A3) INIT <'---'>
1 rem           (N1)
END-DEFINE
*
 FORMAT(2) LS = 140 PS = 240
 IF p_Mode = '**'
       PERFORM sbr_Summary
 ELSE  
       PERFORM sbr_Details
 END-IF
* ===============================================================================
DEFINE sbr_Summary
*      -----------
 FIND AT-V WITH ACTION-DATE >= p_From AND ACTION-DATE <= p_To
   WHERE AT-STATUS = 'W1' OR = 'W2' OR = 'W3' OR = 'W4' 
                          OR = 'W5' OR = 'WR' OR = 'WU'
   DIVIDE 3 INTO ad_MM GIVING v_Q REMAINDER rem
   IF REM <> 0
     v_Q :=  v_Q + 1
   END-IF
   DECIDE ON FIRST VALUE OF AT-STATUS
     VALUE 'W1'
         c_W1 := c_W1 + 1
         c_w1Q(v_Q) := c_w1Q(v_Q) + 1
         c_w1Q_Amnt(v_Q) := c_w1Q_Amnt(v_Q) + FACE-AMT-UNITS * 1000
     VALUE 'W2'    
         c_W2 := c_W2 + 1    
         c_w2Q(v_Q) := c_w2Q(v_Q) + 1
         c_w2Q_Amnt(v_Q) := c_w2Q_Amnt(v_Q) + FACE-AMT-UNITS * 1000         
     VALUE 'W3'
         c_W3 := c_W3 + 1    
         c_w3Q(v_Q) := c_w3Q(v_Q) + 1
         c_w3Q_Amnt(v_Q) := c_w3Q_Amnt(v_Q) + FACE-AMT-UNITS * 1000         
     VALUE 'W4'
         c_W4 := c_W4 + 1
         c_w4Q(v_Q) := c_w4Q(v_Q) + 1
         c_w4Q_Amnt(v_Q) := c_w4Q_Amnt(v_Q) + FACE-AMT-UNITS * 1000
         PERFORM sbr_W4
     VALUE 'W5'
         c_W5 := c_W5 + 1    
         c_w5Q(v_Q) := c_w5Q(v_Q) + 1
         c_w5Q_Amnt(v_Q) := c_w5Q_Amnt(v_Q) + FACE-AMT-UNITS * 1000    
     VALUE 'WR'
         c_WR := c_WR + 1    
         c_wRQ(v_Q) := c_wRQ(v_Q) + 1
         c_wRQ_Amnt(v_Q) := c_wRQ_Amnt(v_Q) + FACE-AMT-UNITS * 1000              
     VALUE 'WU'
         c_WU := c_WU + 1    
         c_wUQ(v_Q) := c_wUQ(v_Q) + 1
         c_wUQ_Amnt(v_Q) := c_wUQ_Amnt(v_Q) + FACE-AMT-UNITS * 1000         
     ANY  c_w1234U := c_w1234U + 1            
     NONE IGNORE
   END-DECIDE 
 END-FIND

 FOR #i = 1 TO 4
   c_w1Q_Amnt(5)  :=  c_w1Q_Amnt(5) + c_w1Q_Amnt(#i)
   c_w2Q_Amnt(5)  :=  c_w2Q_Amnt(5) + c_w2Q_Amnt(#i)
   c_w3Q_Amnt(5)  :=  c_w3Q_Amnt(5) + c_w3Q_Amnt(#i)
   c_w4Q_Amnt(5)  :=  c_w4Q_Amnt(5) + c_w4Q_Amnt(#i) 
   c_w5Q_Amnt(5)  :=  c_w5Q_Amnt(5) + c_w5Q_Amnt(#i)
   c_wRQ_Amnt(5)  :=  c_wRQ_Amnt(5) + c_wRQ_Amnt(#i)             
   c_wUQ_Amnt(5)  :=  c_wUQ_Amnt(5) + c_wUQ_Amnt(#i)
 END-FOR
 
 WRITE(2) NOTITLE '<h4>' ' Withdraw Face Amount by quarters' 'as of' p_To(EM=9999-99-99) '</h4>'
 WRITE(2) 'Type' dm 'Apps ' dm  10x 'Q1' dm  10x 'Q2' dm 10x 'Q3'  dm 10x 'Q4'  dm 7x 'YTD'
 WRITE(2) 'W1  ' dm  c_W1(EM=Z,ZZ9) dm c_w1Q_Amnt(1) dm c_w1Q_Amnt(2) dm c_w1Q_Amnt(3) dm c_w1Q_Amnt(4) dm c_w1Q_Amnt(5)
 WRITE(2) 'W2  ' dm  c_W2(EM=Z,ZZ9) dm c_w2Q_Amnt(1) dm c_w2Q_Amnt(2) dm c_w2Q_Amnt(3) dm c_w2Q_Amnt(4) dm c_w2Q_Amnt(5) 
 WRITE(2) 'W3  ' dm  c_W3(EM=Z,ZZ9) dm c_w3Q_Amnt(1) dm c_w3Q_Amnt(2) dm c_w3Q_Amnt(3) dm c_w3Q_Amnt(4) dm c_w3Q_Amnt(5) 
 WRITE(2) 'W4  ' dm  c_W4(EM=Z,ZZ9) dm c_w4Q_Amnt(1) dm c_w4Q_Amnt(2) dm c_w4Q_Amnt(3) dm c_w4Q_Amnt(4) dm c_w4Q_Amnt(5)
 WRITE(2) 'W5  ' dm  c_W5(EM=Z,ZZ9) dm c_w5Q_Amnt(1) dm c_w5Q_Amnt(2) dm c_w5Q_Amnt(3) dm c_w5Q_Amnt(4) dm c_w5Q_Amnt(5)  
 WRITE(2) 'WR  ' dm  c_WR(EM=Z,ZZ9) dm c_wRQ_Amnt(1) dm c_wRQ_Amnt(2) dm c_wRQ_Amnt(3) dm c_wRQ_Amnt(4) dm c_wRQ_Amnt(5) 
 WRITE(2) 'WU  ' dm  c_WU(EM=Z,ZZ9) dm c_wUQ_Amnt(1) dm c_wUQ_Amnt(2) dm c_wUQ_Amnt(3) dm c_wUQ_Amnt(4) dm c_wUQ_Amnt(5) 
 c_Q_Amnt(1) := c_w1Q_Amnt(1) + c_w2Q_Amnt(1) + c_w3Q_Amnt(1) + c_w4Q_Amnt(1) + c_w4Q_Amnt(1) + c_wRQ_Amnt(1) + c_wUQ_Amnt(1)
 c_Q_Amnt(2) := c_w1Q_Amnt(2) + c_w2Q_Amnt(2) + c_w3Q_Amnt(2) + c_w4Q_Amnt(2) + c_w4Q_Amnt(2) + c_wRQ_Amnt(2) + c_wUQ_Amnt(2)
 c_Q_Amnt(3) := c_w1Q_Amnt(3) + c_w2Q_Amnt(3) + c_w3Q_Amnt(3) + c_w4Q_Amnt(3) + c_w4Q_Amnt(3) + c_wRQ_Amnt(3) + c_wUQ_Amnt(3)
 c_Q_Amnt(4) := c_w1Q_Amnt(4) + c_w2Q_Amnt(4) + c_w3Q_Amnt(4) + c_w4Q_Amnt(4) + c_w4Q_Amnt(4) + c_wRQ_Amnt(4) + c_wUQ_Amnt(4)
 c_Q_Amnt(5) := c_w1Q_Amnt(5) + c_w2Q_Amnt(5) + c_w3Q_Amnt(5) + c_w4Q_Amnt(5) + c_w4Q_Amnt(5) + c_wRQ_Amnt(5) + c_wUQ_Amnt(5)
 WRITE(2) 'Tot ' dm  c_w1234U(EM=Z,ZZ9) dm c_Q_Amnt(1) dm c_Q_Amnt(2) dm c_Q_Amnt(3) dm c_Q_Amnt(4) dm c_Q_Amnt(5)
 
  WRITE(2) NOTITLE  '<h4>' ' W4 by Primary reason quarterly' 'as of' p_To(EM=9999-99-99) '</h4>'
  WRITE(2) 'Primary reason       ' dm ' Q1' dm ' Q2' dm ' Q3' dm ' Q4' dm 'YTD'
 FOR #i = 0 TO 15
   FOR #j = 1 TO 4  c_Q(#j) := c_Q(#j) + w4_cnt(#i,#j)   END-FOR
   WRITE(2) w4_Reason(#i) dm w4_cnt(#i,1) dm w4_cnt(#i,2) dm w4_cnt(#i,3) dm w4_cnt(#i,4) dm w4_cnt(#i,5)
 END-FOR
 WRITE(2) 'Total ---------------'  dm c_Q(1) dm c_Q(2) dm c_Q(3) dm c_Q(4) dm c_W4(EM=ZZ9)
* --------------------------------------------------------------------------------------------------------
 RESET c_Q(*)
 WRITE(2) NOTITLE '<h4>' ' W4 by Sales Rep quarterly' 'as of' p_To(EM=9999-99-99) '</h4>'
 WRITE(2) 'Sales Rep ' dm ' Q1' dm ' Q2' dm ' Q3' dm ' Q4' dm 'YTD '
 FOR #i = 1 TO w4_Rep@ 
   FOR #j = 1 TO 4  c_Q(#j) := c_Q(#j) + w4_Rep#(#i,#j)   END-FOR
   WRITE(2) w4_Rep(#i) dm w4_Rep#(#i,1) dm w4_Rep#(#i,2) dm w4_Rep#(#i,3) dm w4_Rep#(#i,4) dm w4_Rep#(#i,5)
 END-FOR
  WRITE(2) 'Total ----' dm c_Q(1) dm c_Q(2) dm c_Q(3) dm c_Q(4) dm c_W4(EM=ZZ9)
  WRITE(2) ' '  
* --------------------------------------------------------------------------------------------------------
 WRITE(2) NOTITLE '<h4>' ' W4 Face amount for special conditions' 'as of' p_To (EM=9999-99-99) '</h4>'
 WRITE(2) 'Type of condition                 ' dm 'Apps' dm  'Face amount'
 WRITE(2) 'W4 has a MIB                      ' dm w4_Mib (EM=ZZ9)  2x   dm  w4_Mib_Amnt
 WRITE(2) 'W4 based on med exam              ' dm w4_Exam          2x   dm  w4_Exam_Amnt
 WRITE(2) 'W4 based on med exam not disclosed' dm w4_Disclose      2x   dm  w4_Disclose_Amnt
* -------------------------------------------------------------------------------------------------------
 COMPUTE ROUNDED c_1234U(1) :=  c_W1 * 100.000 / c_w1234U
 COMPUTE ROUNDED c_1234U(2) :=  c_W2 * 100.000 / c_w1234U
 COMPUTE ROUNDED c_1234U(3) :=  c_W3 * 100.000 / c_w1234U
 COMPUTE ROUNDED c_1234U(4) :=  c_W4 * 100.000 / c_w1234U
 COMPUTE ROUNDED c_1234U(5) :=  c_W5 * 100.000 / c_w1234U
 COMPUTE ROUNDED c_1234U(6) :=  c_WR * 100.000 / c_w1234U
 COMPUTE ROUNDED c_1234U(7) :=  c_WU * 100.000 / c_w1234U
* -------------------------------------------------------------------------------------------------------
 WRITE(2) NOTITLE '<h4>' ' Withdraw quarterly' 'as of' p_To (EM=9999-99-99) '</h4>'
 WRITE(2) 'Type ' dm  ' Q1' dm ' Q2' dm ' Q3' dm ' Q4' dm ' YTD' dm  '  %'
 WRITE(2) 'W1   ' dm c_w1Q(1) dm c_w1Q(2) dm c_w1Q(3) dm c_w1Q(4) dm c_W1 dm c_1234U(1)(EM=ZZ.99'%')
 WRITE(2) 'W2   ' dm c_w2Q(1) dm c_w2Q(2) dm c_w2Q(3) dm c_w2Q(4) dm c_W2 dm c_1234U(2)(EM=ZZ.99'%')
 WRITE(2) 'W3   ' dm c_w3Q(1) dm c_w3Q(2) dm c_w3Q(3) dm c_w3Q(4) dm c_W3 dm c_1234U(3)(EM=ZZ.99'%')
 WRITE(2) 'W4   ' dm c_w4Q(1) dm c_w4Q(2) dm c_w4Q(3) dm c_w4Q(4) dm c_W4 dm c_1234U(4)(EM=ZZ.99'%')
 WRITE(2) 'W5   ' dm c_w5Q(1) dm c_w5Q(2) dm c_w5Q(3) dm c_w5Q(4) dm c_W5 dm c_1234U(5)(EM=ZZ.99'%')
 WRITE(2) 'WR   ' dm c_wRQ(1) dm c_wRQ(2) dm c_wRQ(3) dm c_wRQ(4) dm c_WR dm c_1234U(6)(EM=ZZ.99'%')
 WRITE(2) 'WU   ' dm c_wUQ(1) dm c_wUQ(2) dm c_wUQ(3) dm c_wUQ(4) dm c_WU dm c_1234U(7)(EM=ZZ.99'%')
 c_Q(1) := c_w1Q(1) + c_w2Q(1) + c_w3Q(1) + c_w4Q(1) + c_w5Q(1) + c_wRQ(1) + c_wUQ(1)
 c_Q(2) := c_w1Q(2) + c_w2Q(2) + c_w3Q(2) + c_w4Q(2) + c_w5Q(2) + c_wRQ(2) + c_wUQ(2)
 c_Q(3) := c_w1Q(3) + c_w2Q(3) + c_w3Q(3) + c_w4Q(3) + c_w5Q(3) + c_wRQ(3) + c_wUQ(3)
 c_Q(4) := c_w1Q(4) + c_w2Q(4) + c_w3Q(4) + c_w4Q(4) + c_w5Q(4) + c_wRQ(4) + c_wUQ(4)
 WRITE(2) 'Total' dm c_Q(1) dm c_Q(2) dm c_Q(3) dm c_Q(4) dm c_w1234U

 v_A := '   ' PERFORM sbr_ADD

END-SUBROUTINE
* ==========================================================================
DEFINE sbr_W4
*      ------
  v_User := USER-SOURCE
  IF W4-MIB = 'Y'  
     w4_Mib := w4_Mib + 1
     w4_Mib_Amnt := w4_Mib_Amnt + FACE-AMT-UNITS * 1000
  END-IF      
  IF W4-EXAM-BASED = 'Y'  
     w4_Exam := w4_Exam + 1
     w4_Exam_Amnt := w4_Exam_Amnt + FACE-AMT-UNITS * 1000
     IF W4-DISCLOSE = 'Y'
        w4_Disclose := w4_Disclose + 1
        w4_Disclose_Amnt := w4_Disclose_Amnt + FACE-AMT-UNITS * 1000
     END-IF
  END-IF
  w4_cnt(W4-REASON,v_Q) := w4_cnt(W4-REASON,v_Q) + 1
  w4_cnt(W4-REASON,5) := w4_cnt(W4-REASON,5) + 1
  EXAMINE w4_Rep(*) FOR v_User GIVING INDEX #i
  IF #i = 0 
     w4_Rep@ := w4_Rep@ + 1
     w4_Rep(w4_Rep@) := v_User
     w4_Rep#(w4_Rep@,v_Q) := w4_Rep#(w4_Rep@,v_Q) + 1 
     w4_Rep#(w4_Rep@,5) := w4_Rep#(w4_Rep@,5) + 1 
  ELSE
     w4_Rep#(#i,v_Q) := w4_Rep#(#i,v_Q) + 1
     w4_Rep#(#i,5)   := w4_Rep#(#i,5)   + 1 
  END-IF      
END-SUBROUTINE
* ==========================================================================
DEFINE sbr_Details
*      -----------
 PRINT(2) NOTITLE 'All' p_Mode 'from:' p_From(EM=9999-99-99)  'to:' p_To (EM=9999-99-99)
 FIND AT-V WITH ACTION-DATE >= p_From AND ACTION-DATE <= p_To
           WHERE AT-STATUS = p_Mode
    c_det := c_det + 1
    v_User := USER-SOURCE
    DIVIDE 3 INTO ad_MM GIVING v_Q REMAINDER rem
    IF REM <> 0
      v_Q :=  v_Q + 1
    END-IF

    IF c_Det = 1
       IF p_Mode = 'W4'
         PRINT(2) dm 'AT' dm 'Sales Rep' dm 'Quote' dm 'Date of W/D' dm 'Quater' dm
                   'Primary reason' dm 'Note' dm 'Amount' dm
                   'Disclosed on App' dm 'Decision based on exam' dm 'MIB Discovery'
       ELSE 
          PRINT(2) dm 'AT' dm 'Sales Rep' dm 'Quote' dm 'Date of W/D' dm 'Quater' dm 'Amount' 
       END-IF 
    END-IF                
  
    COMPRESS ad_MM '/' ad_DD '/' ad_YYYY INTO A10 LEAVING NO SPACE 
    IF p_Mode = 'W4'
         PRINT(2) c_det(EM=Z,ZZ9')') dm ID-NUMBER dm v_User dm APPL-SOURCE(EM=XXXXXX) dm A10 dm v_Q dm
                    w4_Reason(W4-REASON) dm  W4-NOTE dm FACE-AMT-UNITS (EM=ZZZ9',000')
                dm W4-DISCLOSE dm  W4-EXAM-BASED dm W4-MIB
    ELSE
         PRINT(2) c_det(EM=Z,ZZ9')') dm ID-NUMBER dm v_User dm APPL-SOURCE(EM=XXXXXX) dm A10 dm v_Q dm
                  FACE-AMT-UNITS (EM=ZZZ9',000')
   END-IF                   
 END-FIND
END-SUBROUTINE
* ==========================================================================
DEFINE sbr_ADD
  #x:= #x + 1 
  EXPAND ARRAY p_Out TO (1:#x) 
  COMPRESS v_A INTO p_Out(#x)                        
END-SUBROUTINE
* ATMC-W4  Line:  1550 Err:     1316
*  599999           9               
END       
