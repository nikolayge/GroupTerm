* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* Member Center/Paperless page
* Object name - MBCNN014
* Called to update mail preferencies
* 'W' - web only 'M' - mail
********************************************************
*        MODIFICATION LOG
********************************************************
* USER   DATE      TAG  REASON
* YAK    11142013       Initial Creation
* YAK    04132015       Add Annual report option. Change
*                       to be called
********************************************************
*
DEFINE DATA PARAMETER
*
1 REQUEST-DATA      (A) DYNAMIC
1 RESPONSE-DATA     (A) DYNAMIC         /* Out
*
LOCAL USING OBJAWEBU
LOCAL USING MBCLN010
LOCAL USING GPRATR03           /* Transaction Log
LOCAL USING PARSER-X
LOCAL USING ERROR_L
LOCAL
1 XML_PARSER_XPATH             (A) DYNAMIC
1 XML_PARSER_XPATH_TYPE        (A1)
1 XML_PARSER_CONTENT           (A) DYNAMIC
1 XML_PARSER_CONTENT_IS_EMPTY  (L)
1 XML_PARSER_INPUT   (A) DYNAMIC
1 XML_PARSER_ERROR_TEXT        (A253)
1 XML_PARSER_RESPONSE          (I2)
*
1 #I                   (I2)
1 #II                  (I2)
1 #K                   (I2)
1 #value               (A)  DYNAMIC
1 #ErrorCode           (A3) INIT <'0'>
1 #ErrorDescription    (A)  DYNAMIC
1 #MC                  (A)  DYNAMIC CONST <'MC'>
1 #AUC                 (A)  DYNAMIC CONST <'AUC'>
1 FUNCTION_CODE        (A)  DYNAMIC CONST <'PaperlessOptions'>
1 #MEMBER-CENTER-CLERK (A)  DYNAMIC INIT  <'MBR'>
1 #MEMBER              (A)  DYNAMIC INIT  <'MEMBER'>
1 #SOURCE-WEBSITE      (A)  DYNAMIC CONST <'W'>
1 #GET                 (A)  DYNAMIC CONST <'GET'>
1 #UPDATE-PO           (A)  DYNAMIC CONST <'UpdatePO'>
1 #ContactID           (N8)
1 #Name                (A)  DYNAMIC
1 #DATN                (N8)
1 #TIMN                (N7)
1 #UPDATE              (L)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 DI-BA-MAIL-CD
  2 ANNUAL-RPT-FLAG
*
END-DEFINE
*
#DATN := *DATN
XML_PARSER_INPUT := REQUEST-DATA
INCLUDE PARSER_X 'XML_PARSER_INPUT' /* XML file to be parsed
  'XML_PARSER_XPATH'                /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  'XML_PARSER_CONTENT'              /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
IF MemberLogin.UserName <> ' '
  #MEMBER-CENTER-CLERK := FUNCTION-WEB-USER(<MemberLogin.UserName>)(1)
  #MEMBER              := FUNCTION-WEB-USER(<MemberLogin.UserName>)(2)
END-IF
*
PERFORM UPDATE-PAPERLESS-OPTIONS
IF #ErrorCode = '0'
  END TRANSACTION
ELSE
  BACKOUT TRANSACTION
END-IF
*
PERFORM COMPOSE-XML
*
************************** CALLBACK HANDLER
DEFINE SUBROUTINE CALLBACK
**************************
*
DECIDE ON FIRST XML_PARSER_XPATH
  VALUE 'MemberLogin/CN/$'
    #value := *TRIM(XML_PARSER_CONTENT)
    IF #value IS (N6) THEN
      MemberLogin.CN := VAL(#value)
    END-IF
  VALUE 'MemberLogin/UserID/$'
    MemberLogin.UserName := *TRIM(XML_PARSER_CONTENT)
  VALUE 'MemberLogin/PaperlessOptions/AnnsDeliveryFlag/$'
    MemberLogin.AnnsDeliveryFlag := *TRIM(XML_PARSER_CONTENT)
  VALUE 'MemberLogin/PaperlessOptions/BillDeliveryFlag/$'
    MemberLogin.BillDeliveryFlag := *TRIM(XML_PARSER_CONTENT)
  VALUE 'MemberLogin/PaperlessOptions/FIRDeliveryFlag/$'
    MemberLogin.FIRDeliveryFlag := *TRIM(XML_PARSER_CONTENT)
  VALUE 'MemberLogin/PaperlessOptions/AnnRepDeliveryFlag/$'
    MemberLogin.AnnRepDeliveryFlag := *TRIM(XML_PARSER_CONTENT)
  NONE VALUE
    IGNORE
END-DECIDE
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE PARSER_ERROR
******************************
COMPRESS XML_PARSER_RESPONSE XML_PARSER_ERROR_TEXT INTO RESPONSE-DATA
ESCAPE ROUTINE
END-SUBROUTINE
*
*****************************
DEFINE SUBROUTINE COMPOSE-XML
*****************************
IF #ErrorCode <> '0'
  #ErrorDescription := F-ERROR-DESCRIPTION(<#ErrorCode>)
END-IF
COMPRESS '<MemberLogin>' '<CN>' MemberLogin.CN '</CN>' -
  '<ErrorCode>' #ErrorCode '</ErrorCode>' -
  '<ErrorDescription>' #ErrorDescription '</ErrorDescription>' -
  '</MemberLogin>'
  INTO RESPONSE-DATA LEAVING NO
END-SUBROUTINE
*
******************************************
DEFINE SUBROUTINE UPDATE-PAPERLESS-OPTIONS
******************************************
*
PARM-WEB-ACCOUNT-INFO.MEMBER-CN := MemberLogin.CN
PARM-WEB-ACCOUNT-INFO.#ACTION   := #GET
CALLNAT 'OBJNWEBU' PARM-WEB-ACCOUNT-INFO
IF PARM-WEB-ACCOUNT-INFO.#RETURN-CODE NE ' '
  #ErrorCode := PARM-WEB-ACCOUNT-INFO.#RETURN-CODE
  PERFORM COMPOSE-XML
  ESCAPE MODULE
END-IF
MOVE BY NAME PARM-WEB-ACCOUNT-INFO TO BEFORE_IMAGE
PARM-WEB-ACCOUNT-INFO.ANNS-DELIVERY-FLAG := MemberLogin.AnnsDeliveryFlag
PARM-WEB-ACCOUNT-INFO.BILL-DELIVERY-FLAG := MemberLogin.BillDeliveryFlag
AFTER_IMAGE.ANNS-DELIVERY-FLAG := MemberLogin.AnnsDeliveryFlag
AFTER_IMAGE.BILL-DELIVERY-FLAG := MemberLogin.BillDeliveryFlag
*
PARM-WEB-ACCOUNT-INFO.#ACTION   := #UPDATE-PO
CALLNAT 'OBJNWEBU' PARM-WEB-ACCOUNT-INFO
IF PARM-WEB-ACCOUNT-INFO.#RETURN-CODE NE ' '
  #ErrorCode := PARM-WEB-ACCOUNT-INFO.#RETURN-CODE
  PERFORM COMPOSE-XML
  ESCAPE MODULE
END-IF
DECIDE FOR EVERY CONDITION
  WHEN MemberLogin.FIRDeliveryFlag = 'W'
    AFTER_IMAGE.FIRMBA-DELIVERY-FLAG := 'D'
  WHEN MemberLogin.FIRDeliveryFlag = 'M'
    AFTER_IMAGE.FIRMBA-DELIVERY-FLAG := 'N'
  WHEN MemberLogin.AnnRepDeliveryFlag = 'W'
    AFTER_IMAGE.ANNUAL-RPT-FLAG := 'N'
  WHEN MemberLogin.AnnRepDeliveryFlag = 'M'
    AFTER_IMAGE.ANNUAL-RPT-FLAG := 'F'
  WHEN NONE IGNORE
END-DECIDE
*
FIND(1) ST-V WITH ID-NUMBER = MemberLogin.CN
  IF AFTER_IMAGE.FIRMBA-DELIVERY-FLAG <> ' '
    BEFORE_IMAGE.FIRMBA-DELIVERY-FLAG := ST-V.DI-BA-MAIL-CD
    ST-V.DI-BA-MAIL-CD := AFTER_IMAGE.FIRMBA-DELIVERY-FLAG
  END-IF
  BEFORE_IMAGE.ANNUAL-RPT-FLAG := ST-V.ANNUAL-RPT-FLAG
  ST-V.ANNUAL-RPT-FLAG := AFTER_IMAGE.ANNUAL-RPT-FLAG
  UPDATE
END-FIND
PERFORM WRITE-TRANSACTION-LOG
END-SUBROUTINE
*
***************************************
DEFINE SUBROUTINE WRITE-TRANSACTION-LOG
***************************************
*
#ContactID    := F-GET-CONTACT-ID(<MemberLogin.CN>)
TR_ID_NUMBER  := MemberLogin.CN
TR_NAME       := FUNCTION-CONTACT-NAME(<#ContactID>)
TR_CLERK      := #MEMBER-CENTER-CLERK
CALLNAT 'GPRNTR03' FUNCTION_CODE TRAN_LOG_HEADER BEFORE_IMAGE AFTER_IMAGE
END-SUBROUTINE
*
END
