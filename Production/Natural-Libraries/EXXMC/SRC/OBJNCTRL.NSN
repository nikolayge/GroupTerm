* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* A-CONTACT-RELATIONSHIPS - Object Module
* OBJNCTRL - Subprogram to perform A-CONTACT-RELATIONSHIP
* access functions.
***********************************************
* MODIFICATION LOG
***********************************************
* USER   DATE      TAG  REASON
* YAK    09152010  YAK  Initial Creation
***********************************************
*
DEFINE DATA
PARAMETER USING OBJACTRL
PARAMETER
1 #FAMILY-MEMBERS (*)
  2 CONTACT-ID (N8) OPTIONAL
  2 ROLE-CODE (A1) OPTIONAL
*
LOCAL USING OBJLCTRL
LOCAL USING ERROR_L
LOCAL
1 #FAMILY-MEMBER-CODES (A1/8) CONST <'S','K','G','D','X','P','H','B'>
END-DEFINE
*
* Main processing
*
DECIDE ON FIRST VALUE #ACTION
 VALUE 'ADD'
   PERFORM ADD-RECORD
 VALUE 'UPDATE'
   IF PARM-CONTACT-REL.ISN <> 0
     PERFORM UPDATE-RECORD-BY-ISN
   ELSE
     PERFORM UPDATE-RECORD
   END-IF
 VALUE 'DELETE'
   PERFORM DELETE-ALL-1
 VALUE 'DELETE-DEP'
   PERFORM DELETE-ALL-2
 VALUE 'DELETE-REL'
   PERFORM DELETE-RELATION-RECORD
 VALUE 'DELETE-ROLE'
   PERFORM DELETE-CONTACT-ROLE
 VALUE 'GET'
   PERFORM GET-RECORD
 VALUE 'GET-CONT-ROLE'
   PERFORM GET-CONTACT-ROLE
 VALUE 'GET-ROLE'
   PERFORM GET-ROLE
 VALUE 'HIST-KEY1'                        /* Histogram - check existence
   PERFORM HIST-KEY1                      /* get *number
 VALUE 'HIST-KEY2'                        /* Histogram - check existence
   PERFORM HIST-KEY2                      /* get *number
 VALUE 'GET-FAMILY'  
   PERFORM GET-FAMILY
 NONE
   IGNORE
END-DECIDE
*
****************************
DEFINE SUBROUTINE ADD-RECORD
****************************
* Add new relation record
MOVE BY NAME PARM-CONTACT-REL.MBC_UPDATE TO CR-V
WRITE WORK FILE 1 VARIABLE 'ADD Rel FOR CONTACT ID ' CR-V.CONTACT-1-ID ' Role ' CR-V.ROLE-2-CD
 STORE CR-V
*
END-SUBROUTINE
*
*******************************
DEFINE SUBROUTINE UPDATE-RECORD
*******************************
* Update Role
FIND-U.
FIND CR-V WITH CONTACT-1-ID = PARM-CONTACT-REL.CONTACT-1-ID
 ACCEPT IF CR-V.CONTACT-2-ID = PARM-CONTACT-REL.CONTACT-2-ID
 AND CR-V.ROLE-2-CD = #CURRENT-ROLE-CD
 MOVE BY NAME PARM-CONTACT-REL.MBC_UPDATE TO CR-V
* remember ISN to check later if the record was found
 ISN    := *ISN
 UPDATE (FIND-U.)
 WRITE WORK FILE 1 VARIABLE 'UPDATE Rel FOR CONTACT ID ' CR-V.CONTACT-1-ID ' To ' CR-V.CONTACT-2-ID
 ESCAPE BOTTOM
END-FIND
IF ISN = 0
  PARM-CONTACT-REL.#RETURN-CODE := #CONTACT-REL-NOT-FOUND
END-IF
*
END-SUBROUTINE
*
**************************************
DEFINE SUBROUTINE UPDATE-RECORD-BY-ISN
**************************************
* Update Role
GET-U.
GET CR-V PARM-CONTACT-REL.ISN
 MOVE BY NAME PARM-CONTACT-REL.MBC_UPDATE TO CR-V
 UPDATE (GET-U.)
 WRITE WORK FILE 1 VARIABLE 'UPDATE Rel FOR CONTACT ID ' CR-V.CONTACT-1-ID ' To ' CR-V.CONTACT-2-ID
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE DELETE-ALL-1
******************************
* Delete all records for the ContactID 1 (when Contact ID is deleted)
FIND-D1.
FIND CR-V WITH CONTACT-1-ID = PARM-CONTACT-REL.CONTACT-1-ID
 DELETE (FIND-D1.)
 WRITE WORK FILE 1 VARIABLE 'DELETE All Rel FOR CONTACT ID ' CR-V.CONTACT-1-ID
END-FIND
*
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE DELETE-ALL-2
******************************
* Delete all records for the ContactID 2 (when Contact ID is deleted)
FIND-D2.
FIND CR-V WITH CONTACT-2-ID = PARM-CONTACT-REL.CONTACT-2-ID
 DELETE (FIND-D2.)
 WRITE WORK FILE 1 VARIABLE 'DELETE All Rel FOR CONTACT ID ' CR-V.CONTACT-2-ID
END-FIND
*
END-SUBROUTINE
*
****************************************
DEFINE SUBROUTINE DELETE-RELATION-RECORD
****************************************
* Delete/Unlink relations between 2 contacts
CR_DR.
FIND CR-V WITH CONTACT-1-ID = PARM-CONTACT-REL.CONTACT-1-ID
 ACCEPT IF CR-V.CONTACT-2-ID = PARM-CONTACT-REL.CONTACT-2-ID
 DELETE (CR_DR.)
 WRITE WORK FILE 1 VARIABLE 'DELETE Rel FOR CONTACT ID ' CR-V.CONTACT-1-ID 
  ' To ' CR-V.CONTACT-2-ID ' with role' CR-V.ROLE-2-CD
END-FIND
*
END-SUBROUTINE
*
*************************************
DEFINE SUBROUTINE DELETE-CONTACT-ROLE
*************************************
* Delete relation/role record between 2 contatcs
CR_DCR.
FIND CR-V WITH CONTACT-1-ID = PARM-CONTACT-REL.CONTACT-1-ID
  ACCEPT IF CR-V.CONTACT-2-ID = PARM-CONTACT-REL.CONTACT-2-ID
           AND CR-V.ROLE-2-CD = PARM-CONTACT-REL.ROLE-2-CD
   DELETE (CR_DCR.)
   WRITE WORK FILE 1 VARIABLE 'DELETE Rel FOR CONTACT ID ' CR-V.CONTACT-1-ID ' To ' CR-V.ROLE-2-CD
END-FIND
END-SUBROUTINE
*
***************************
DEFINE SUBROUTINE HIST-KEY1
***************************
*
FIND NUMBER CR-V WITH CONTACT-1-ID = PARM-CONTACT-REL.CONTACT-1-ID
#NUMBER-OF-RECORDS := *NUMBER
*
END-SUBROUTINE
*
***************************
DEFINE SUBROUTINE HIST-KEY2
***************************
*
FIND NUMBER CR-V WITH CONTACT-2-ID = PARM-CONTACT-REL.CONTACT-2-ID
#NUMBER-OF-RECORDS := *NUMBER
*
END-SUBROUTINE
*
****************************
DEFINE SUBROUTINE GET-FAMILY
****************************
* Check if Family Information exists
FIND CR-V WITH CONTACT-1-ID = PARM-CONTACT-REL.CONTACT-1-ID
  ACCEPT IF CR-V.ROLE-2-CD = #FAMILY-MEMBER-CODES(*)
  #NUMBER-OF-RECORDS := #NUMBER-OF-RECORDS + 1
  EXPAND ARRAY #FAMILY-MEMBERS TO (*:#NUMBER-OF-RECORDS)
  #FAMILY-MEMBERS.CONTACT-ID(#NUMBER-OF-RECORDS) := CR-V.CONTACT-2-ID
  #FAMILY-MEMBERS.ROLE-CODE(#NUMBER-OF-RECORDS) := CR-V.ROLE-2-CD
END-FIND
END-SUBROUTINE
*
****************************
DEFINE SUBROUTINE GET-RECORD
****************************
* Get relationships between 2 contacts (1st match)
FIND CR-V WITH CONTACT-1-ID = PARM-CONTACT-REL.CONTACT-1-ID
  ACCEPT IF CR-V.CONTACT-2-ID = PARM-CONTACT-REL.CONTACT-2-ID
  ISN := *ISN
  PARM-CONTACT-REL.ROLE-1-CD := CR-V.ROLE-1-CD
  PARM-CONTACT-REL.ROLE-2-CD := CR-V.ROLE-2-CD
  ESCAPE BOTTOM
END-FIND
IF ISN = 0
  PARM-CONTACT-REL.#RETURN-CODE := #CONTACT-REL-NOT-FOUND
END-IF
END-SUBROUTINE
*
**********************************
DEFINE SUBROUTINE GET-CONTACT-ROLE
**********************************
* Check if this relation exists between 2 contacts
FIND CR-V WITH CONTACT-1-ID = PARM-CONTACT-REL.CONTACT-1-ID
  ACCEPT IF CR-V.CONTACT-2-ID = PARM-CONTACT-REL.CONTACT-2-ID
        AND CR-V.ROLE-2-CD = PARM-CONTACT-REL.ROLE-2-CD
  ISN := *ISN
  PARM-CONTACT-REL.ROLE-1-CD := CR-V.ROLE-1-CD
  ESCAPE BOTTOM
END-FIND
IF ISN = 0
  PARM-CONTACT-REL.#RETURN-CODE := #CONTACT-ROLE-NOT-FOUND
END-IF
END-SUBROUTINE
*
**************************
DEFINE SUBROUTINE GET-ROLE
**************************
* Check if the role (i.e. spouse) exists for this contact
FIND CR-V WITH CONTACT-1-ID = PARM-CONTACT-REL.CONTACT-1-ID
  ACCEPT IF CR-V.ROLE-2-CD = PARM-CONTACT-REL.ROLE-2-CD
  ISN := *ISN
  PARM-CONTACT-REL.ROLE-1-CD    := CR-V.ROLE-1-CD
  PARM-CONTACT-REL.CONTACT-2-ID := CR-V.CONTACT-2-ID
  ESCAPE BOTTOM
END-FIND
IF ISN <> 0
  PARM-CONTACT-REL.#RETURN-CODE := #UNIQUE-ROLE-EXIST
END-IF
END-SUBROUTINE
*
END
