* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* Member Center Online
* Member Loan Details Information - MBCNNL00
********************************************************
*        MODIFICATION LOG
********************************************************
* USER   DATE      TAG  REASON
* YAK    11192014       Initial Creation
********************************************************
*
DEFINE DATA PARAMETER
*
1 REQUEST-DATA      (A) DYNAMIC
1 RESPONSE-DATA     (A) DYNAMIC
*
LOCAL USING MBCANL00
LOCAL USING PARSER-X
LOCAL USING ERROR_L
LOCAL
1 XML_PARSER_XPATH             (A) DYNAMIC
1 XML_PARSER_XPATH_TYPE        (A1)
1 XML_PARSER_CONTENT           (A) DYNAMIC
1 XML_PARSER_CONTENT_IS_EMPTY  (L)
1 XML_PARSER_INPUT   (A) DYNAMIC
1 XML_PARSER_ERROR_TEXT        (A253)
1 XML_PARSER_RESPONSE          (I2)
1 XML          (A) DYNAMIC
1 #I           (I2)
1 #II          (I2)
1 #ErrorCode   (A3) INIT <'0'>
1 #ErrorDescription (A) DYNAMIC
1 #value       (A) DYNAMIC
1 #test        (a70)
*
END-DEFINE
*
XML_PARSER_INPUT := REQUEST-DATA
INCLUDE PARSER_X 'XML_PARSER_INPUT' /* XML file to be parsed
  'XML_PARSER_XPATH'                /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  'XML_PARSER_CONTENT'              /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
* Call Business Logic
*
CALLNAT 'MBCNNL01' LoanDetails #ErrorCode
*
PERFORM COMPOSE-XML
RESPONSE-DATA := XML
*
************************** CALLBACK HANDLER
DEFINE SUBROUTINE CALLBACK
**************************
*
DECIDE ON FIRST XML_PARSER_XPATH
  VALUE 'LoanDetails'
    Ignore
  VALUE 'LoanDetails/LoanCN/$'
    #value := *TRIM(XML_PARSER_CONTENT)
    IF #value IS (N6)
      LoanDetails.LoanCN := VAL(#value)
    END-IF
  VALUE 'LoanDetails/LoanAttachSegment/$'
    #value := *TRIM(XML_PARSER_CONTENT)
    IF #value IS (N2)
      LoanDetails.LoanAttachSegment := VAL(#value)
    END-IF
  VALUE 'LoanDetails/LoanType/$'
    LoanDetails.LoanType := *TRIM(XML_PARSER_CONTENT)
  NONE VALUE
    IGNORE
END-DECIDE
END-SUBROUTINE
*
*****************************
DEFINE SUBROUTINE COMPOSE-XML
*****************************
*
IF #ErrorCode <> '0'
  #ErrorDescription := F-ERROR-DESCRIPTION(<#ErrorCode>)
END-IF
*
COMPRESS
  '<LoanDetails>' '<LoanCN>' LoanDetails.LoanCN '</LoanCN>'
  '<LoanType>' LoanDetails.LoanType '</LoanType>'
  '<LoanName>' LoanDetails.LoanName '</LoanName>'
  '<LoanDescription>' LoanDetails.LoanDescription '</LoanDescription>'
  '<LoanAttachSegment>' LoanDetails.LoanAttachSegment '</LoanAttachSegment>'
  '<LoanIssueDate>' LoanDetails.LoanIssueDate '</LoanIssueDate>'
  '<LoanPrincipal>' LoanDetails.LoanPrincipal '</LoanPrincipal>'
  '<InterestRate>' LoanDetails.InterestRate '</InterestRate>'
  '<AccruedInterest>' LoanDetails.AccruedInterest '</AccruedInterest>'
  '<LoanBalance>' LoanDetails.LoanBalance '</LoanBalance>'
  '<LoanPaymentInfo>'
  '<LoanPaymentMethod>' LoanDetails.LoanPaymentMethod '</LoanPaymentMethod>'  
  '<LoanDueAmount>' LoanDetails.LoanDueAmount '</LoanDueAmount>'
  '<LoanDueDate>' LoanDetails.LoanDueDate '</LoanDueDate>'
  '<LoanOverdue>' LoanDetails.LoanOverdue '</LoanOverdue>'
  '<LoanAutopayment>' LoanDetails.LoanAutopayment '</LoanAutopayment>'
  '</LoanPaymentInfo>' INTO XML LEAVING NO
  COMPRESS XML '<ErrorCode>' #ErrorCode '</ErrorCode>'
  '<ErrorDescription>' #ErrorDescription '</ErrorDescription>'
  '</LoanDetails>'
  INTO XML LEAVING NO
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE PARSER_ERROR
******************************
COMPRESS XML_PARSER_RESPONSE XML_PARSER_ERROR_TEXT INTO RESPONSE-DATA
ESCAPE ROUTINE
END-SUBROUTINE
*
END
