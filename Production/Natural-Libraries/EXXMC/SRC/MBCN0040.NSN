* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* Member Center Online/AUC
* Phone Information
* Main program: MBCN0040
********************************************************
*        MODIFICATION LOG
********************************************************
* USER   DATE      TAG  REASON
* YAK    09072010       Initial Creation
* YAK    04182012       Restructured to be used from AUC
* YAK    06282012  YK1  Sync with CRM using ContactID
* YAK    04102015  YK2  SystemSource not populates when from Online Application
*                       if SystemSource = ' ' - using old MC structure
*                       correct International Numbers logic
* YAK    09252015  YK3  Correct formatting phone numbers with leading zeros (OI-3887)
********************************************************
*
DEFINE DATA PARAMETER
*
1 REQUEST-DATA      (A) DYNAMIC
1 RESPONSE-DATA     (A) DYNAMIC         /* Out
*
LOCAL USING PARSER-X
LOCAL USING MBCA0004
LOCAL USING OBJACPHN
LOCAL USING ERROR_L
LOCAL
*
1 XML_PARSER_XPATH             (A) DYNAMIC
1 XML_PARSER_XPATH_TYPE        (A1)
1 XML_PARSER_CONTENT           (A) DYNAMIC
1 XML_PARSER_CONTENT_IS_EMPTY  (L)
1 XML_PARSER_INPUT   (A) DYNAMIC
1 XML_PARSER_ERROR_TEXT        (A253)
1 XML_PARSER_RESPONSE          (I2)
1 XML                          (A) DYNAMIC
*
1 #MC               (A) DYNAMIC INIT <'MC'>
1 #AUC              (A) DYNAMIC INIT <'AUC'>
1 #TRUE             (A) DYNAMIC CONST <'true'>
1 #FALSE            (A) DYNAMIC CONST <'false'>
1 FUNCTION_CODE     (A) DYNAMIC CONST <'PHONE'>
1 #GET              (A) DYNAMIC CONST <'0'>
1 #UserName         (A) DYNAMIC
1 #TAB              (A1) CONST <H'09'>
1 #NO               (A1) CONST <'N'>
1 #YES              (A1) CONST <'Y'>
1 #FIR-REQUEST      (A50)
1 #DATN             (N8)
1 #TIMN             (N7)
1 #I                (I2)
1 #GET-ALL          (L)
1 #AREA-CODE        (A3)
1 #DIAL-NUMBER      (A) DYNAMIC    /* YK3
1 #value            (A) DYNAMIC
*
END-DEFINE
*
XML_PARSER_INPUT := REQUEST-DATA
INCLUDE PARSER_X 'XML_PARSER_INPUT' /* XML file to be parsed
  'XML_PARSER_XPATH'                /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  'XML_PARSER_CONTENT'              /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
* Call Business Logic
*
#DATN := *DATN
#TIMN := *TIMN
*
DECIDE FOR EVERY CONDITION
*   WHEN Phone.SystemSource = ' '     /* YK2
*     Phone.SystemSource := #MC       /* YK2
  WHEN Phone.SystemSource = #AUC
    IGNORE
  WHEN Phone.SystemSource = #AUC AND Phone.ActionType = '0'
    PERFORM PROCESS-GET-REQUEST
  WHEN Phone.ActionType <> '0'
    PERFORM PROCESS-UPDATE-REQUEST
  WHEN NONE
    IGNORE
END-DECIDE
*
PERFORM COMPOSE-XML
*
**************************
DEFINE PROCESS-GET-REQUEST
**************************
*
Phone.ErrorCode := '0'
CALLNAT 'MBCN0041' Phone
IF Phone.ErrorCode = '0'
  PERFORM COMPOSE-GET-XML
END-IF
*
END-SUBROUTINE
*
*****************************
DEFINE PROCESS-UPDATE-REQUEST
*****************************
* Temporary fix for International Phones from Online Application  YK2
IF Phone.SystemSource = ' '
  FOR #I = 1 TO Phone.C@PhoneInfo
    RESET #value
    IF Phone.Type(#I) = 'I' AND Phone.AreaCode(#I) <> 011
      COMPRESS Phone.AreaCode(#I) Phone.DialNumber(#I) INTO #value LEAVING NO
      Phone.AreaCode(#I)  := 011
      Phone.DialNumber(#I):= val(#value)
    END-IF
  END-FOR
END-IF
*
Phone.ErrorCode := '0'
CALLNAT 'MBCN0042' Phone
IF Phone.ErrorCode = '0'
  END TRANSACTION
ELSE
  BACKOUT TRANSACTION
END-IF
END-SUBROUTINE
*
*
************************** CALLBACK HANDLER
DEFINE SUBROUTINE CALLBACK
**************************
*
DECIDE ON FIRST XML_PARSER_XPATH
  VALUE 'MemberPhones/CN/$'
    Phone.CN := VAL(XML_PARSER_CONTENT)
  VALUE 'MemberPhones/UserID/$'
    Phone.UserID := *TRIM(XML_PARSER_CONTENT)
  VALUE 'MemberPhones/PhoneInfo'
    ADD 1 TO Phone.C@PhoneInfo
    EXPAND ARRAY Phone.PhoneInfo TO (1:Phone.C@PhoneInfo)
    IGNORE
  VALUE 'MemberPhones/PhoneInfo/ActionType/$'
    Phone.ActionType_s(C@PhoneInfo) := *TRIM(XML_PARSER_CONTENT)
  VALUE 'MemberPhones/PhoneInfo/PhoneID/$'
    Phone.PhoneID(C@PhoneInfo) := VAL(XML_PARSER_CONTENT)
  VALUE 'MemberPhones/PhoneInfo/PhoneType/$'
    Phone.PhoneType(C@PhoneInfo) := *TRIM(XML_PARSER_CONTENT)
  VALUE 'MemberPhones/PhoneInfo/Type/$'
    Phone.Type(C@PhoneInfo) := *TRIM(XML_PARSER_CONTENT)
  VALUE 'MemberPhones/PhoneInfo/AreaCode/$'
    #value := *TRIM(XML_PARSER_CONTENT)
    IF #value IS (N3) THEN
      Phone.AreaCode(C@PhoneInfo) := VAL(#value)
    END-IF
  VALUE 'MemberPhones/PhoneInfo/DialNumber/$'
    #value := *TRIM(XML_PARSER_CONTENT)
    IF #value IS (N20) THEN
      Phone.DialNumber(C@PhoneInfo) := VAL(#value)
    END-IF
  VALUE 'MemberPhones/PhoneInfo/Extension/$'
    #value := *TRIM(XML_PARSER_CONTENT)
    IF #value IS (N6) THEN
      Phone.Extension(C@PhoneInfo) := VAL(#value)
    END-IF
  VALUE 'MemberPhones/PhoneInfo/Preferred/$'
    Phone.PreferredInd(C@PhoneInfo) := *TRIM(XML_PARSER_CONTENT)
  VALUE 'Phones/ActionType/$'
    Phone.ActionType := *TRIM(XML_PARSER_CONTENT)
    #GET-ALL := TRUE
  VALUE 'Phones/SystemSource/$'
    Phone.SystemSource := *TRIM(XML_PARSER_CONTENT)
  VALUE 'Phones/ContactID/$'
    Phone.ContactID := VAL(XML_PARSER_CONTENT)
  VALUE 'Phone'
    RESET INITIAL Phone
    Phone.C@PhoneInfo := 1
    EXPAND ARRAY Phone.PhoneInfo TO (1:Phone.C@PhoneInfo)
  VALUE 'Phone/ActionType/$'
    Phone.ActionType := Phone.ActionType_s(C@PhoneInfo) := *TRIM(XML_PARSER_CONTENT)
  VALUE 'Phone/ContactID/$'
    Phone.ContactID := VAL(XML_PARSER_CONTENT)
  VALUE 'Phone/CN/$'
    Phone.CN := VAL(XML_PARSER_CONTENT)
  VALUE 'Phone/SystemSource/$'
    Phone.SystemSource := *TRIM(XML_PARSER_CONTENT)
  VALUE 'Phone/LastUpdatedDate/$'
    Phone.LastUpdatedDate(C@PhoneInfo) := VAL(XML_PARSER_CONTENT)
  VALUE 'Phone/LastUpdatedTime/$'
    Phone.LastUpdatedTime(C@PhoneInfo) := VAL(XML_PARSER_CONTENT)
  VALUE 'Phone/User/$'
    Phone.UserID := *TRIM(XML_PARSER_CONTENT)
  VALUE 'Phone/PhoneID/$'
    Phone.PhoneID(C@PhoneInfo) := VAL(XML_PARSER_CONTENT)
  VALUE 'Phone/PhoneType/$'
    Phone.PhoneType(C@PhoneInfo) := *TRIM(XML_PARSER_CONTENT)
  VALUE 'Phone/Type/$'
    Phone.Type(C@PhoneInfo) := *TRIM(XML_PARSER_CONTENT)
  VALUE 'Phone/AreaCode/$'
    #value := *TRIM(XML_PARSER_CONTENT)
    IF #value IS (N3) THEN
      Phone.AreaCode(C@PhoneInfo) := VAL(XML_PARSER_CONTENT)
    END-IF
  VALUE 'Phone/DialNumber/$'
    #value := *TRIM(XML_PARSER_CONTENT)
    IF #value IS (N20) THEN
      Phone.DialNumber(C@PhoneInfo) := VAL(XML_PARSER_CONTENT)
    END-IF
  VALUE 'Phone/Extension/$'
    #value := *TRIM(XML_PARSER_CONTENT)
    IF #value IS (N6) THEN
      Phone.Extension(C@PhoneInfo) := VAL(XML_PARSER_CONTENT)
    END-IF
  VALUE 'Phone/BestCallTime/$'
    Phone.BestCallTime(C@PhoneInfo) := *TRIM(XML_PARSER_CONTENT)
  VALUE 'Phone/Remarks/$'
    Phone.Remarks(C@PhoneInfo) := *TRIM(XML_PARSER_CONTENT)
  VALUE 'Phone/Preferred/$'
    Phone.PreferredInd(C@PhoneInfo) := *TRIM(XML_PARSER_CONTENT)
    IF Phone.PreferredInd(C@PhoneInfo) = #TRUE
      Phone.PreferredInd(C@PhoneInfo) := #YES
    ELSE
      Phone.PreferredInd(C@PhoneInfo) := #NO
    END-IF
  VALUE 'Phone/InvalidInd/$'
    Phone.InvalidInd(C@PhoneInfo) := *TRIM(XML_PARSER_CONTENT)
    IF Phone.InvalidInd(C@PhoneInfo) = #TRUE
      Phone.InvalidInd(C@PhoneInfo) := #YES
    ELSE
      Phone.InvalidInd(C@PhoneInfo) := #NO
    END-IF
  NONE
    IGNORE
END-DECIDE
END-SUBROUTINE
*
*********************************
DEFINE SUBROUTINE COMPOSE-GET-XML
*********************************
*
RESET XML
FOR #I = 1 TO C@PhoneInfo
  DECIDE ON FIRST VALUE Phone.LastUpdatedUser(#I)
    VALUE 'MBR'
      #UserName := 'Member Center'
    VALUE 'AUC'
      #UserName := 'User Center'
    NONE VALUE
      #UserName := FUNCTION-NAME (<*TRANSLATE(Phone.LastUpdatedUser(#I),UPPER)>)
  END-DECIDE
  COMPRESS  XML
    '<Phone>'
    '<SystemSource>' Phone.SystemSource '</SystemSource>'
    '<CN>' Phone.CN '</CN>'
    '<ContactID>' Phone.ContactID '</ContactID>'
    '<ActionType>' Phone.ActionType '</ActionType>'
    '<LastUpdatedDate>' Phone.LastUpdatedDate(#I) '</LastUpdatedDate>'
    '<LastUpdatedTime>' Phone.LastUpdatedTime(#I) '</LastUpdatedTime>'
    '<LastUpdatedUser>' #UserName '</LastUpdatedUser>'
    '<PhoneID>' Phone.PhoneID(#I) '</PhoneID>'
    '<PhoneType>' Phone.PhoneType(#I) '</PhoneType>'
    '<Type>' Phone.Type(#I) '</Type>' INTO XML LEAVING NO
  MOVE EDITED Phone.AreaCode(#I) (EM=999) TO #AREA-CODE
* YK3 >  
  IF Phone.Type(#I) = 'I'
    #DIAL-NUMBER := Phone.DialNumber(#I)
    #DIAL-NUMBER := *TRIM(#DIAL-NUMBER)
  ELSE
    MOVE EDITED Phone.DialNumber(#I) (EM=9999999) TO #DIAL-NUMBER
  END-IF  
* < YK3  
  COMPRESS XML
    '<AreaCode>' #AREA-CODE '</AreaCode>'
    '<DialNumber>' #DIAL-NUMBER '</DialNumber>'
    '<Extension>' Phone.Extension(#I) '</Extension>'
    '<BestCallTime>' Phone.BestCallTime(#I) '</BestCallTime>'
    '<Remarks>' Phone.Remarks(#I) '</Remarks>'
    '<Preferred>' INTO XML LEAVING NO
  IF Phone.PreferredInd(#I) = 'Y'
    COMPRESS  XML #TRUE INTO XML LEAVING NO
  ELSE
    COMPRESS  XML #FALSE INTO XML LEAVING NO
  END-IF
  COMPRESS XML '</Preferred>' '<InvalidInd>' INTO XML LEAVING NO
  IF Phone.InvalidInd(#I) = 'Y'
    COMPRESS  XML #TRUE INTO XML LEAVING NO
  ELSE
    COMPRESS  XML #FALSE INTO XML LEAVING NO
  END-IF
  COMPRESS  XML '</InvalidInd>' '</Phone>' INTO XML LEAVING NO
END-FOR
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE PARSER_ERROR
******************************
COMPRESS XML_PARSER_RESPONSE XML_PARSER_ERROR_TEXT INTO RESPONSE-DATA
ESCAPE ROUTINE
END-SUBROUTINE
*
*****************************
DEFINE SUBROUTINE COMPOSE-XML
*****************************
*
DECIDE FOR FIRST CONDITION
  WHEN Phone.ErrorCode <> '0'
    Phone.ErrorDescription := F-ERROR-DESCRIPTION(<Phone.ErrorCode>)
  WHEN Phone.ActionType <> #GET
    PERFORM LOG-REQUESTS
  WHEN NONE
    IGNORE
END-DECIDE
*
DECIDE FOR FIRST CONDITION
  WHEN #GET-ALL
    COMPRESS
      '<Phones>'
      XML
      '<ErrorCode>' Phone.ErrorCode '</ErrorCode>'
      '<ErrorDescription>' Phone.ErrorDescription '</ErrorDescription>'
      '</Phones>'
      INTO RESPONSE-DATA LEAVING NO
  WHEN Phone.SystemSource = #AUC AND Phone.ActionType = '0'
    RESPONSE-DATA := XML
  WHEN Phone.SystemSource = #AUC AND Phone.ActionType <> '0'
    COMPRESS
      '<Phones>'
      '<SystemSource>' Phone.SystemSource '</SystemSource>'
      '<ContactID>' Phone.ContactID '</ContactID>'
      '<ErrorCode>' Phone.ErrorCode '</ErrorCode>'
      '<ErrorDescription>' Phone.ErrorDescription '</ErrorDescription>'
      '</Phones>'
      INTO RESPONSE-DATA LEAVING NO
  WHEN Phone.SystemSource = #MC OR = ' '          /* YK2
    COMPRESS '<MemberPhones>'
      '<SystemSource>' Phone.SystemSource '</SystemSource>'
      '<CN>' Phone.CN '</CN>'
      '<ContactID>' Phone.ContactID '</ContactID>'
      '<ErrorCode>' Phone.ErrorCode '</ErrorCode>'
      '<ErrorDescription>' Phone.ErrorDescription '</ErrorDescription>'
      '</MemberPhones>'
      INTO RESPONSE-DATA LEAVING NO
  WHEN NONE
    IGNORE
END-DECIDE
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE LOG-REQUESTS
******************************
* save FIR request
IF Phone.SystemSource = #MC
  WRITE WORK FILE 2 Phone.CN
  CLOSE WORK FILE 2
END-IF
* Log CRM request
* CALLNAT 'MBRCRC' Phone.CN FUNCTION_CODE             /* YK1
CALLNAT 'MBRCRC' Phone.ContactID FUNCTION_CODE        /* YK1
IF Phone.SystemSource = #AUC
* Do GetPhones
  Phone.ActionType := '0'
  #GET-ALL := TRUE
  RESET Phone.PhoneInfo(*)
  PERFORM PROCESS-GET-REQUEST
END-IF
END-SUBROUTINE
*
END
