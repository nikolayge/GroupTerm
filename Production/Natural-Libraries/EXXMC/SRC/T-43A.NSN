* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PRINT SCRIPT
* ______________________________________________________________________________

DEFINE DATA
PARAMETER

 1 p_T-43A  
  2 p_USER (A8)   
  2 p_NAME (A8)  
  2 p_Out (A/*) DYNAMIC
 LOCAL
 1 ESP-SCL VIEW OF ESP-SCL
   2 SCL-USER         (A8)  /* D
   2 SCL-NAME         (A8)  /* D
   2 SCL-TYPE         (A8)
   2 SCL-DESCRIPTION  (A50)
   2 JOB-CLASS        (A1)
   2 JOB-DISP         (A1)
   2 COND-CODE        (N4.0)
   2 COND-CODE-TEST   (A2)
   2 C*JOB-PARMS                 /*   */
   2 JOB-PARMS
     3 PARM-NAME      (A8/1:20)
     3 PARM-FUNCTION  (A20/1:20)
   2 ISR-NO           (N16.0)
   2 UPDATE-ON        (A1)
   2 PROF-PARMS (2)
   2 EXEC-DATE        (N8.0)
   2 EXEC-TIME        (N4.0)
   2 AUDIT-USER-ID    (A8)
   2 AUDIT-TIMESTAMP  (T)
   2 USER-NAME-TYPE
*
 1 ESP-SCL-DET VIEW OF ESP-SCL-DET
  2 SCL-USER                          (A8)
  2 SCL-NAME                          (A8)
  2 SCL-TYPE                          (A8)
  2 SCL-STEP-NO                       (N4.0)
  2 STEP-NAME                         (A8)
  2 LIBRARY                           (A8)
  2 PROGRAM                           (A8)
  2 ETID                              (A8)
  2 USER-ID                           (A8)
  2 PASSWORD                          (A8)
  2 EXECUTE-STEP                      (A1)
  2 C*STEP-DESC 
  2 STEP-DESC                         (A78/1:100)
  2 C*PARAMETERS
  2 PARAMETERS                        (A80/180)
  2 DBID                              (N3.0)
  2 COND-CODE                         (N4.0)
  2 COND-CODE-TEST                    (A2)
  2 COND-CODE-STEP                    (N4.0)
  2 C*PROF-PARMS
  2 PROF-PARMS                        (A30/1:20)
  2 C*DYN-PARMS
  2 DYN-PARMS                         (1:40)             
    3 DYN-NAME                          (A8)
    3 DYN-VALUE                         (A20)
  2 C*EXEC-LOGIC  
  2 EXEC-LOGIC                          (1:10)          
    3 EXEC-TEST                         (A3)
    3 EXEC-LEFT-BRACKET                 (A10)
    3 EXEC-STEP-NAME                    (A8)
    3 EXEC-OPERATOR                     (A2)
    3 EXEC-COND-CODE                    (A4)
    3 EXEC-RIGHT-BRACKET                (A10)
  2 USER-NAME-TYPE                      (A24)
*
 1 TEXT-V  VIEW OF ESP-SCL-DET-TEXT
  2 SCL-USER                      (A8)
  2 SCL-NAME                      (A8)
  2 SCL-TYPE                      (A8)
  2 SCL-STEP-NO                   (N4.0)
  2 WF-NO                         (N2.0)
  2 WF-NAME                       (A50)
  2 WF-SUB-SYSTEM                 (A10)
  2 WF-DISP                       (A1)
  2 WF-DISP-COMP                  (A1)
  2 WF-DISP-ABORT                 (A1)
  2 WF-LABEL                      (A8)
  2 WF-GDG                        (N4.0)
  2 WF-TYPE                       (A20)
  2 WF-MODE-OWNER                 (A1)
  2 WF-MODE-GROUP                 (A1)
  2 WF-MODE-OTHER                 (A1)
  2 WF-TEXT                       (A70/30)
  2 REP-NO                        (N2.0)
  2 REPORTS(1)                        
   3 PRINTER-NAME                 (A8)
   3 REPORT-NAME                  (A50)
   3 REPORT-COPIES                (N2.0)
   3 PRINTER-CLASS                (A1)
   3 PRINTER-DISP                 (A1)
   3 PRINTER-FORM                 (A8)
   3 PRINTER-PAGE                 (A8)
   3 PRINTER-FCB                  (A8)
   3 PRINTER-LABEL                (A8)
   3 PRINTER-PRMODE               (A8)
   3 PRINTER-LC                   (N4.0)
   3 EMAIL-ADDRESS                (A50)
   3 PRINTER-USER                 (A8)
   3 PRINTER-CHARS                (A8)
   3 PRINTER-UDEF                 (A200)
   3 ARCHIVE-DAYS                 (N4.0)
   3 RETAIN-NO-PRINT              (N4.0)
   3 RETAIN-PRINT                 (N4.0)
   2 USER-NAME-TYPE-STEP   
*
1 SCH-CODE VIEW OF SCH-CODE
  2 CODE-VALUE
  2 CODE-TYPE
  2 CODE-DESC (1:2)
*
1 #CODE-KEY(A60) INIT <"SUBSYSTEM TEMP">
1 REDEFINE #CODE-KEY
  2 #CODE-TYPE(A10)
  2 #CODE-VALUE(A50)
*
1 key-A1-STEP   (A28)
1 REDEFINE key-A1-STEP
  2 key-A1(A24)
1 REDEFINE key-A1-STEP
  2 key-U(A8)
  2 key-N(A8)
  2 key-T(A8)
  2 key-S(N4)
*
1 #I-SCL-NAME (A8) INIT <" ">
1 #I-SCL-USER (A8) INIT <" ">
1 #i        (N4)
1 #J        (N4)
1 #K        (N4)
1 #Temp_N2    (N2)
1 #Temp_L     (L)
1 #Temp_A10   (A10)
1 v_Line     (A) DYNAMIC 


1 #SPoD-PFKEY (A1) INIT<"N">
1 #Cycle (N4)
1 #Scripts-for-user (N4)

1 v_A        (A)   DYNAMIC
1 v_A1       (A)   DYNAMIC
1 #x         (I2)
1 v_WF       (A60)
1 v_REP      (A40)

END-DEFINE
* ON ERROR
*    WRITE NOTITLE  *PROGRAM "Ln:" *ERROR-LINE "Err:" *ERROR-NR /
* END-ERROR

* _________________________________________________________________________
p_USER := *TRANSLATE(p_USER, UPPER)
p_NAME := *TRANSLATE(p_NAME, UPPER)

key-U := p_USER
key-N := p_NAME
key-T := "SCL"

F1. FIND (1) ESP-SCL WITH USER-NAME-TYPE = key-A1
  IF NO RECORDS FOUND
     COMPRESS  "SCL script"  key-N "not found" INTO v_A
     PERFORM sbr_ADD
     ESCAPE ROUTINE
  END-NOREC
*
  COMPRESS "<pre>"  INTO v_A
  PERFORM sbr_ADD                       /* 0
 COMPRESS "<small>" *USER *DATV *TIME "</small>" INTO  v_Line
 COMPRESS v_Line INTO v_A
 PERFORM sbr_ADD              /* 1
 MOVE EDITED AUDIT-TIMESTAMP (EM=MM/DD/YYYY) TO v_A1                     
 COMPRESS
    "<b>" "[" SCL-USER "-" SCL-NAME "]"   '{' PROF-PARMS(1) '}'
    "Jclass:" JOB-CLASS "Hold:" JOB-DISP " CC:" COND-CODE "CC Test:" COND-CODE-TEST 
    "Exec:" EXEC-DATE EXEC-TIME "Modified:"  AUDIT-USER-ID v_A1 '<br>'  ETID
     " " SCL-DESCRIPTION "</b>"   INTO v_A
 PERFORM sbr_ADD                       /* 3
 IF PARM-NAME (1) <> " " 
   COMPRESS "  - Parms -"   INTO v_A
            PERFORM sbr_ADD            /* 4
 END-IF
FOR #J = 1 TO C*JOB-PARMS
   IF PARM-NAME (#J) <> " "
      COMPRESS "    Name: " PARM-NAME(#J) " Function: " PARM-FUNCTION(#J)  INTO v_A
      PERFORM sbr_ADD                  /* 5
   END-IF
END-FOR
END-FIND
* END F1 --------------------------------------------------------------------
F2.
  FIND  ESP-SCL-DET WITH USER-NAME-TYPE = key-A1
       SORTED BY USER-NAME-TYPE-STEP-NO
      v_A1 := ' ' 
      FOR #j = 1 TO C*PROF-PARMS
        IF PROF-PARMS(#j) = SCAN('UPDATE-DB=OFF')
           v_A1 := 'OFF'
           ESCAPE BOTTOM
        ELSE
           IF PROF-PARMS(#j) = SCAN('UPDATE-DB=ON')
              v_A1 := 'ON'
           ESCAPE BOTTOM   
           END-IF
        END-IF   
      END-FOR  
    #Temp_N2 := SCL-STEP-NO
    COMPRESS NUMERIC "CC:" ESP-SCL-DET.COND-CODE '-' ESP-SCL-DET.COND-CODE-TEST '-' ESP-SCL-DET.COND-CODE-STEP '!' INTO v_A
    COMPRESS  "<br /><b style='color:#f00'><u> Step:" #Temp_N2 "</b></u>  " STEP-NAME "  " " Lib:" LIBRARY
    " Pgm:" "<b><u>" PROGRAM "</u></b>" "Exec:" "<b>" EXECUTE-STEP "</b>" " DB#:" DBID 
    "DB-Upd:" "<b>" v_A1 "</b>" INTO v_A
    PERFORM sbr_ADD                                                         /* 6-1
*     COMPRESS  EXEC-DATE EXEC-TIME  AUDIT-USER-ID AUDIT-TIMESTAMP INTO v_A
*     PERFORM sbr_ADD                                                         /* 6-2
    FOR #J = 1 TO C*STEP-DESC
       IF STEP-DESC(#J) <> " "
         COMPRESS "<i>" STEP-DESC(#J)"</i>" INTO v_A
         PERFORM sbr_ADD                         /* 7
       END-IF
    END-FOR
* - parameters ---------------------------------------------
  IF C*PARAMETERS <> 0 THEN
     COMPRESS "<b style='color:#804E00'> -- Parameters --</b>"  INTO v_A
     PERFORM sbr_ADD                            /* 8
  END-IF
  FOR #J = 1 TO C*PARAMETERS
    COMPRESS FULL "    " PARAMETERS(#J) INTO v_Line
    COMPRESS  v_Line   INTO v_A
    PERFORM sbr_ADD                             /* 9
  END-FOR
* - workfiles ---------------------------------------------
 key-S := SCL-STEP-NO
 #i := 0
 FIND TEXT-V WITH USER-NAME-TYPE-STEP = key-A1-STEP
   IF WF-NAME = " "  ESCAPE TOP  END-IF
     #i := #i + 1
     IF #i = 1
       COMPRESS  "<b style='color: #00F'> -- Workfiles --</b>"  INTO v_A
       PERFORM sbr_ADD                           /* 10
     END-IF      
     COMPRESS WF-NAME '<i>' WF-TYPE '</i>' INTO v_WF
     COMPRESS   FULL WF-NO v_WF WF-SUB-SYSTEM "Disp" WF-DISP INTO v_Line
     IF WF-GDG  <> 0
       COMPRESS FULL  v_Line "gdg"  WF-GDG INTO v_Line
     END-IF
     COMPRESS   FULL v_Line WF-LABEL INTO v_Line
*     COMPRESS "  " "<span  style='color=black; font-family: Courier New'>"  v_Line "</span>"  INTO v_A
      COMPRESS "  " "<span>"  v_Line "</span>"  INTO v_A
     PERFORM sbr_ADD                             /* 11
 END-FIND
*  - reports ---------------------------------------------
#i := 0
 FIND TEXT-V WITH USER-NAME-TYPE-STEP = key-A1-STEP
   IF PRINTER-NAME(1) = " " ESCAPE TOP END-IF
     #i := #i + 1
     IF #i = 1
       COMPRESS  "<b style='color:#228b22'> -- Reports --</b>"    INTO v_A
       PERFORM sbr_ADD                                /* 12
     END-IF
     v_REP := REPORT-NAME(1)
    COMPRESS  FULL " " REP-NO 
                       PRINTER-NAME (1)
                       v_REP
                       PRINTER-DISP (1) INTO v_Line
*    COMPRESS "<span style='color=black; font-family: Courier New'>"  v_Line "</span>"   INTO v_A
    COMPRESS "<span>"  v_Line "</span>"   INTO v_A
    PERFORM sbr_ADD                             /* 13
 END-FIND /*  TEXT by Step
END-FIND
* End F2 ---------------------------------------------
  COMPRESS "<pre>"    INTO v_A           /* 14
  PERFORM sbr_ADD

DEFINE sbr_ADD
  #x:= #x + 1
  EXPAND ARRAY p_Out TO (1:#x)
  COMPRESS v_A INTO p_Out(#x)                       
END-SUBROUTINE

END
