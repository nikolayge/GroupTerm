* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* Member Center Online/AUC
* Pesonal/Military Information
* Main program
********************************************************
*        MODIFICATION LOG
********************************************************
* USER   DATE      TAG  REASON
* YAK    09012010       Initial Creation
* YAK    04122012       Restructured to be used for AUC
* YAK    06152012  YK1  Add logic for Contacts only
********************************************************
*
DEFINE DATA
PARAMETER USING MBCA0002
LOCAL USING PARSER-X
LOCAL USING OBJAMINF
LOCAL USING OBJACONT
LOCAL USING OBJLRANK
LOCAL USING GPRATR00
LOCAL USING GPRAMINF
LOCAL USING ERROR_L
LOCAL
1 #DATN             (N8)
1 #TIMN             (N7)
1 #MC               (A) DYNAMIC INIT <'MC'>
1 #AUC              (A) DYNAMIC INIT <'AUC'>
1 #USER             (A) DYNAMIC INIT <'MEMBER'>
1 #CLERK            (A) DYNAMIC INIT <'MBR'>
1 #UPDATE           (A) DYNAMIC CONST <'UPDATE'>
1 #GET              (A) DYNAMIC CONST <'GET'>
1 #GET-MIL          (A) DYNAMIC CONST <'GET-MIL'>
1 #UPDATE-MIL-AUC   (A) DYNAMIC CONST <'UPDATE-MIL-AUC'>
1 #UPDATE-MIL-MC    (A) DYNAMIC CONST <'UPDATE-MIL-MC'>
1 FUNCTION_CODE     (A) DYNAMIC CONST <'MILITARY'>
1 #DEL              (A) DYNAMIC CONST <';'>
1 #InvalidRequest   (A) DYNAMIC CONST <'-1'>
1 #FIR-REQUEST      (A50)
1 #TAB              (A1) CONST <H'09'>
1 #I                (I2)
* 1 #ErrorCode        (A3) INIT <'0'>
1 #ErrorDescription (A) DYNAMIC
1 #TR-DATE-LAST-UPDATE (N8)
1 #MIL-INFO-CHANGE  (L)
1 #ContactID        (N8)
*
END-DEFINE
*
#DATN := *DATN
#TIMN := *TIMN
*
IF MilitaryInfo.UserID <> ' '
  #CLERK := FUNCTION-WEB-USER(<MilitaryInfo.UserID>)(1)
  #USER  := FUNCTION-WEB-USER(<MilitaryInfo.UserID>)(2)
END-IF
*
* Call Business Logic
*
DECIDE FOR FIRST CONDITION
  WHEN MilitaryInfo.CN <> 0 AND MilitaryInfo.ContactID <> 0
    IGNORE
  WHEN MilitaryInfo.CN <> 0 AND MilitaryInfo.ContactID = 0
    MilitaryInfo.ContactID := F-GET-CONTACT-ID(<MilitaryInfo.CN>)
  WHEN MilitaryInfo.ContactID NE 0 AND MilitaryInfo.CN = 0
    MilitaryInfo.CN := F-GET-CN(<MilitaryInfo.ContactID>)
  WHEN NONE
    MilitaryInfo.ErrorCode := #InvalidRequest
    ESCAPE ROUTINE
END-DECIDE
* YK1 Start
* IF MilitaryInfo.ContactID = 0 OR MilitaryInfo.CN = 0
*   MilitaryInfo.ErrorCode := #CN-INVALID
*   ESCAPE ROUTINE
* END-IF
* YK1 End
PARM-MEMBER-INFO.MEMBER-CONTACT-ID := #MILITARY-INFO.CONTACT-ID := PARM-CONTACT.CONTACT-ID := MilitaryInfo.ContactID
PARM-MEMBER-INFO.ID-NUMBER := #MILITARY-INFO.ID-NUMBER := PARM-CONTACT.ID-NUMBER := MilitaryInfo.CN
*
PERFORM GET-BEFORE-IMAGE
*
PARM-MEMBER-INFO.RANK-ID          := #MILITARY-INFO.RANK-ID   := MilitaryInfo.MilitaryRankID
PARM-MEMBER-INFO.MILITARY-STATUS  := #MILITARY-INFO.MILITARY-STATUS
  := MilitaryInfo.MilitaryStatus
PARM-MEMBER-INFO.MILITARY-SERVICE := #MILITARY-INFO.MILITARY-SERVICE
  := MilitaryInfo.MilitaryBranch
PARM-MEMBER-INFO.BASE-PAY-EF-DATE := #MILITARY-INFO.BASE-PAY-EF-DATE := MilitaryInfo.PEBDate
PARM-MEMBER-INFO.ACTIVE-DUTY-BASE-DATE := #MILITARY-INFO.ACTIVE-DUTY-BASE-DATE
  := MilitaryInfo.BASDDate
PARM-MEMBER-INFO.DATE-OF-RANK       := #MILITARY-INFO.DATE-OF-RANK
  := MilitaryInfo.CurrentPromotionDate
PARM-MEMBER-INFO.SERVICE-DATE-1405  := #MILITARY-INFO.SERVICE-DATE-1405
  := MilitaryInfo.RES1405Date
PARM-MEMBER-INFO.PRIOR-DATE-OF-RANK := #MILITARY-INFO.PRIOR-DATE-OF-RANK
  := MilitaryInfo.PreviousPromotionDate
PARM-MEMBER-INFO.DATE-RETIRED := #MILITARY-INFO.DATE-RETIRED := MilitaryInfo.DateOfRetirement
PARM-MEMBER-INFO.DATE-INIT-ENTRY-MIL-SVC := #MILITARY-INFO.DATE-INIT-ENTRY-MIL-SVC
  := MilitaryInfo.DateInitEntryMilService
PARM-MEMBER-INFO.RSV-NG-20-YR-CERT-LTR-DATE := #MILITARY-INFO.RSV-NG-20-YR-CERT-LTR-DATE
  := MilitaryInfo.RNGDate20YearLetter
PARM-MEMBER-INFO.RSV-NG-RETIRE-PTS  := #MILITARY-INFO.RSV-NG-RETIRE-PTS
  := MilitaryInfo.RSVRetPoints
PARM-MEMBER-INFO.RET-RSV-DATE := #MILITARY-INFO.RET-RSV-DATE := MilitaryInfo.RSVRetDate
*
* Call Business logic program for validation
EXPAND ARRAY #ERROR-CODE TO (*:50)
EXPAND ARRAY #VALIDATE-FLAG TO (*:50)
RESET #VALIDATE-FLAG(*)
FOR #I = 1 TO 9
  #VALIDATE-FLAG (#I) := 'Y'
END-FOR
#VALIDATE-FLAG (13) := 'Y'
#VALIDATE-FLAG (14) := 'Y'
#VALIDATE-FLAG (20) := 'Y'
#SYSTEM := 'MemberCenter'
CALLNAT 'GPRNMINF' #MILITARY-INFO #OTHERS
IF #ERROR-CODE(1) <> ' '
  PERFORM COMPOSE-VALIDATION-ERROR-XML
  ESCAPE MODULE
END-IF
*
PARM-CONTACT.RANK-ID           := MilitaryInfo.MilitaryRankID
PARM-CONTACT.PREV-RANK-ID      := MilitaryInfo.PreviousMilitaryRankID
PARM-CONTACT.MILITARY-STATUS   := MilitaryInfo.MilitaryStatus
PARM-CONTACT.SPECIAL-PAY-IND   := MilitaryInfo.SpecialPay
PARM-CONTACT.RANK-PROTECT      := MilitaryInfo.RankProtection
PARM-CONTACT.RANK-PROTECT-DATE := MilitaryInfo.RankProtectionDate
DECIDE FOR FIRST CONDITION
  WHEN PARM-CONTACT.RANK-PROTECT = 'Y' AND PARM-CONTACT.RANK-PROTECT-DATE = 0
    PARM-CONTACT.RANK-PROTECT-DATE := #DATN
  WHEN PARM-CONTACT.RANK-PROTECT = 'N' AND PARM-CONTACT.RANK-PROTECT-DATE <> 0
    RESET PARM-CONTACT.RANK-PROTECT-DATE
  WHEN NONE
    IGNORE
END-DECIDE
PARM-CONTACT.LAST-DATE-UPD     := #DATN
PARM-CONTACT.LAST-TIME-UPD     := #TIMN
PARM-CONTACT.LAST-USER-UPD     := #USER
*
DECIDE ON FIRST VALUE MilitaryInfo.SystemSource
  VALUE #AUC
    PARM-MEMBER-INFO.#ACTION := PARM-CONTACT.#ACTION := #UPDATE-MIL-AUC
  VALUE #MC
    PARM-MEMBER-INFO.#ACTION := PARM-CONTACT.#ACTION := #UPDATE-MIL-MC
  NONE
    IGNORE
END-DECIDE
*
CALLNAT 'OBJNCONT' PARM-CONTACT
IF PARM-CONTACT.#RETURN-CODE NE ' '
  MilitaryInfo.ErrorCode := PARM-CONTACT.#RETURN-CODE
  ESCAPE ROUTINE
END-IF
*
* Update RANK & RANK-ID on A-STATUS file (Temporary code)
FIND(1) RANK-REF-V WITH RANK-ID = PARM-MEMBER-INFO.RANK-ID
  PARM-MEMBER-INFO.RANK := RANK-REF-V.RANK-IN-SAS
END-FIND
*
IF MilitaryInfo.CN NE 0                                            /* YK1
  CALLNAT 'OBJNMINF' PARM-MEMBER-INFO
  IF PARM-MEMBER-INFO.#RETURN-CODE NE ' '
    MilitaryInfo.ErrorCode := PARM-MEMBER-INFO.#RETURN-CODE
    ESCAPE ROUTINE
  END-IF
END-IF                                                             /* YK1
*
PERFORM GET-AFTER-IMAGE
PERFORM WRITE-TRANSACTION-LOG
*
**********************************************
DEFINE SUBROUTINE COMPOSE-VALIDATION-ERROR-XML
**********************************************
MilitaryInfo.ErrorCode := '1'
* COMPRESS '<MilitaryInfo>' '<CN>' CN '</CN>'
*   '<ErrorCode>' MilitaryInfo.ErrorCode '</ErrorCode>' '<ErrorDescription>' INTO RESPONSE-DATA LEAVING NO
FOR #I = 1 TO *OCCURRENCE(#ERROR-CODE)
  #ErrorDescription := F-ERROR-DESCRIPTION(<#ERROR-CODE(#I)>)
  COMPRESS MilitaryInfo.ErrorDescription #DEL #ErrorDescription
    INTO MilitaryInfo.ErrorDescription LEAVING NO
END-FOR
* COMPRESS RESPONSE-DATA '</ErrorDescription>' '</MilitaryInfo>' INTO RESPONSE-DATA LEAVING NO
END-SUBROUTINE
*
**********************************
DEFINE SUBROUTINE GET-BEFORE-IMAGE
**********************************
*
PARM-CONTACT.#ACTION     := #GET-MIL
CALLNAT 'OBJNCONT' PARM-CONTACT
IF PARM-CONTACT.#RETURN-CODE NE ' '
  ErrorCode := PARM-CONTACT.#RETURN-CODE
  ESCAPE ROUTINE
END-IF
*
IF MilitaryInfo.SystemSource = #AUC
  IF MilitaryInfo.ActionType = '2'    /* Update
* Compare date/time of the last update
    DECIDE FOR FIRST CONDITION
      WHEN PARM-CONTACT.LAST-DATE-UPD > MilitaryInfo.LastUpdatedDate
        MilitaryInfo.ErrorCode := #NOT-LATEST-INFO
      WHEN PARM-CONTACT.LAST-DATE-UPD = MilitaryInfo.LastUpdatedDate AND
          PARM-CONTACT.LAST-TIME-UPD > MilitaryInfo.LastUpdatedTime
        MilitaryInfo.ErrorCode := #NOT-LATEST-INFO
      WHEN ANY
        ESCAPE MODULE
      WHEN NONE
        IGNORE
    END-DECIDE
  END-IF
END-IF
*
* Date of Birth is not on Military Information page, but is needed for validation
#MILITARY-INFO.DATE-OF-BIRTH         := PARM-CONTACT.DATE-OF-BIRTH
*
BEFORE_IMAGE.DATE-LAST-UPDATE        := PARM-CONTACT.LAST-DATE-UPD
BEFORE_IMAGE.RANK                    := PARM-CONTACT.RANK-ID
* BEFORE_IMAGE.PREV-RANK-ID          := PARM-CONTACT.PREV-RANK-ID
BEFORE_IMAGE.MILITARY-STATUS         := PARM-CONTACT.MILITARY-STATUS
* BEFORE_IMAGE.SPECIAL-PAY-IND       := PARM-CONTACT.SPECIAL-PAY-IND
* BEFORE_IMAGE.RANK-PROTECT          := PARM-CONTACT.RANK-PROTECT
* BEFORE_IMAGE.RANK-PROTECT-DATE     := PARM-CONTACT.RANK-PROTECT-DATE
*
IF MilitaryInfo.CN NE 0                                                           /* YK1
  PARM-MEMBER-INFO.#ACTION := #GET
  CALLNAT 'OBJNMINF' PARM-MEMBER-INFO
  IF PARM-MEMBER-INFO.#RETURN-CODE NE ' '
    MilitaryInfo.ErrorCode := PARM-MEMBER-INFO.#RETURN-CODE
    ESCAPE ROUTINE
  END-IF
ELSE                                                                              /* YK1
  PARM-MEMBER-INFO.MILITARY-SERVICE := F-GET-RANK-MILID(<PARM-CONTACT.RANK-ID>)   /* YK1
END-IF                                                                            /* YK1
BEFORE_IMAGE.MILITARY-BRANCH            := PARM-MEMBER-INFO.MILITARY-SERVICE
BEFORE_IMAGE.DATE-INIT-ENTRY-MIL-SVC    := PARM-MEMBER-INFO.DATE-INIT-ENTRY-MIL-SVC
BEFORE_IMAGE.BASE-PAY-EF-DATE           := PARM-MEMBER-INFO.BASE-PAY-EF-DATE
BEFORE_IMAGE.ACTIVE-DUTY-BASE-DATE      := PARM-MEMBER-INFO.ACTIVE-DUTY-BASE-DATE
BEFORE_IMAGE.DATE-OF-RANK               := PARM-MEMBER-INFO.DATE-OF-RANK
BEFORE_IMAGE.SERVICE-DATE-1405          := PARM-MEMBER-INFO.SERVICE-DATE-1405
BEFORE_IMAGE.PRIOR-DATE-OF-RANK         := PARM-MEMBER-INFO.PRIOR-DATE-OF-RANK
BEFORE_IMAGE.DATE-RETIRED               := PARM-MEMBER-INFO.DATE-RETIRED
BEFORE_IMAGE.RSV-NG-20-YR-CERT-LTR-DATE := PARM-MEMBER-INFO.RSV-NG-20-YR-CERT-LTR-DATE
BEFORE_IMAGE.RSV-NG-RETIRE-PTS          := PARM-MEMBER-INFO.RSV-NG-RETIRE-PTS
BEFORE_IMAGE.RET-RSV-DATE               := PARM-MEMBER-INFO.RET-RSV-DATE
END-SUBROUTINE
*
*********************************
DEFINE SUBROUTINE GET-AFTER-IMAGE
*********************************
*
AFTER_IMAGE.RANK                       := PARM-CONTACT.RANK-ID
* AFTER_IMAGE.PREV-RANK-ID               := PARM-CONTACT.PREV-RANK-ID
AFTER_IMAGE.MILITARY-STATUS            := PARM-CONTACT.MILITARY-STATUS
* AFTER_IMAGE.SPECIAL-PAY-IND            := PARM-CONTACT.SPECIAL-PAY-IND
* AFTER_IMAGE.RANK-PROTECT               := PARM-CONTACT.RANK-PROTECT
* AFTER_IMAGE.RANK-PROTECT-DATE          := PARM-CONTACT.RANK-PROTECT-DATE
*
AFTER_IMAGE.MILITARY-BRANCH            := PARM-MEMBER-INFO.MILITARY-SERVICE
AFTER_IMAGE.DATE-INIT-ENTRY-MIL-SVC    := PARM-MEMBER-INFO.DATE-INIT-ENTRY-MIL-SVC
AFTER_IMAGE.BASE-PAY-EF-DATE           := PARM-MEMBER-INFO.BASE-PAY-EF-DATE
AFTER_IMAGE.ACTIVE-DUTY-BASE-DATE      := PARM-MEMBER-INFO.ACTIVE-DUTY-BASE-DATE
AFTER_IMAGE.DATE-OF-RANK               := PARM-MEMBER-INFO.DATE-OF-RANK
AFTER_IMAGE.SERVICE-DATE-1405          := PARM-MEMBER-INFO.SERVICE-DATE-1405
AFTER_IMAGE.PRIOR-DATE-OF-RANK         := PARM-MEMBER-INFO.PRIOR-DATE-OF-RANK
AFTER_IMAGE.DATE-RETIRED               := PARM-MEMBER-INFO.DATE-RETIRED
AFTER_IMAGE.RSV-NG-20-YR-CERT-LTR-DATE := PARM-MEMBER-INFO.RSV-NG-20-YR-CERT-LTR-DATE
AFTER_IMAGE.RSV-NG-RETIRE-PTS          := PARM-MEMBER-INFO.RSV-NG-RETIRE-PTS
AFTER_IMAGE.RET-RSV-DATE               := PARM-MEMBER-INFO.RET-RSV-DATE
END-SUBROUTINE
*
***************************************
DEFINE SUBROUTINE WRITE-TRANSACTION-LOG
***************************************
* Transaction Log for Rank/MilStatus/MilService/Ret Date/Rank Dates - CG
* All other dates - DM
TR_NAME       := FUNCTION-CONTACT-NAME(<MilitaryInfo.ContactID>)
IF MilitaryInfo.CN <> 0                                            /* YK1 Start
  TR_ID_NUMBER := MilitaryInfo.CN
ELSE
  TR_ID_NUMBER     := F-GET-PARENT-CN(<MilitaryInfo.ContactID>)
  TR_CONTACT_ID    := F-GET-CONTACT-ID(<TR_ID_NUMBER>)
END-IF                                                             /* YK1 End
TR_CLERK      := #CLERK
CALLNAT 'GPRNTR00' FUNCTION_CODE TRAN_LOG_HEADER BEFORE_IMAGE AFTER_IMAGE
END-SUBROUTINE
*
END
