* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* A-ADDRESS-RELATIONSHIP - Object Module
* OBJNADRL - Subprogram to perform A-ADDRESS-RELATIONSHIP
* access functions.
* * * * * * * * * * * * * * * * * * * * * * * *
***********************************************
* MODIFICATION LOG
***********************************************
* USER   DATE      TAG  REASON
* YAK    09152010  YAK  Initial Creation
* YAK    02152011  YK1  Exclude deleted addresses
* YAK    06292012  YK2  Populate RETURNED-MAIL-DATE when RETURNED-MAIL-IND is changed
* * * * * * * * * * * * * * * * * * * * * * * *
*
DEFINE DATA
PARAMETER USING OBJAADRL
PARAMETER
1 #ADDRESS-POOL-ID     (N8) OPTIONAL
1 #ADDRESS-TYPE-CD     (A1) OPTIONAL
1 #HM-CONTACT-ID       (N8/*) OPTIONAL   /* Household members Contact ID's
1 #ADDR-POOL-ARRAY     (N8/*) OPTIONAL   /* Returns all Address Pool IDs for the Contact
*
LOCAL USING OBJLADRL
LOCAL USING ERROR_L
LOCAL
1 #ISN_1      (P9)
1 #ISN_2      (P9)
1 #I          (I2)
1 #LOCATION       (A) DYNAMIC
1 #ATTENTION-LINE (A) DYNAMIC
1 #DELETED        (A) DYNAMIC INIT <'D'>
END-DEFINE
*
* Main processing
*
DECIDE ON FIRST VALUE #ACTION
  VALUE 'ADD'
    PERFORM ADD-RECORD
  VALUE 'UPDATE'
    IF ISN NE 0
      PERFORM UPDATE-RECORD-BY-ISN
    ELSE
      PERFORM UPDATE-RECORD
    END-IF
  VALUE 'UPDATE-SWAP'
    PERFORM UPDATE-SWAP-TYPES
  VALUE 'DELETE'
    PERFORM DELETE-RECORD
  VALUE 'DELETE-REL'
    PERFORM DELETE-DEP-REL
  VALUE 'GET-BY-ISN'
    PERFORM GET-BY-ISN
  VALUE 'GET-CONT-TYPE'
    PERFORM GET-REC1
  VALUE 'GET-CONT-POOL'
    PERFORM GET-REC2
  VALUE 'GET-CONT-POOL-TYPE'
    PERFORM GET-REC3
  VALUE 'GET-POOL-ID-ARRAY'
    PERFORM GET-POOL-ID-ARRAY
  VALUE 'HIST-KEY'                        /* Histogram - check existence
    PERFORM HIST-KEY                      /* get *number
  VALUE 'NEW-TYPE'
    PERFORM ASSIGN-NEW-TYPE
  NONE
    IGNORE
END-DECIDE
*
****************************
DEFINE SUBROUTINE ADD-RECORD
****************************
*
MOVE BY NAME PARM-ADDRESS-REL TO ADDR-REL-V
STORE ADDR-REL-V
*
END-SUBROUTINE
*
*******************************
DEFINE SUBROUTINE DELETE-RECORD
*******************************
*
FIND-D.
FIND ADDR-REL-V WITH CONTACT-ID = PARM-ADDRESS-REL.CONTACT-ID
  ACCEPT IF ADDR-REL-V.ADDRESS-POOL-ID = PARM-ADDRESS-REL.ADDRESS-POOL-ID
    AND ADDR-REL-V.ADDR-TYPE-CD = PARM-ADDRESS-REL.ADDR-TYPE-CD
  DELETE (FIND-D.)
  ESCAPE BOTTOM
END-FIND
*
END-SUBROUTINE
*
********************************
DEFINE SUBROUTINE DELETE-DEP-REL
********************************
*
D_DEP.
FIND ADDR-REL-V WITH CONTACT-ID = PARM-ADDRESS-REL.CONTACT-ID
  DELETE (D_DEP.)
END-FIND
*
END-SUBROUTINE
*
*******************************
DEFINE SUBROUTINE UPDATE-RECORD
*******************************
*
FIND-U.
FIND ADDR-REL-V WITH CONTACT-ID = PARM-ADDRESS-REL.CONTACT-ID
  ACCEPT IF ADDR-REL-V.ADDRESS-POOL-ID = PARM-ADDRESS-REL.ADDRESS-POOL-ID
  IF ADDR-REL-V.RETURNED-MAIL-IND <> PARM-ADDRESS-REL.RETURNED-MAIL-IND     /* YK2
    PARM-ADDRESS-REL.RETURNED-MAIL-DATE := *DATN                            /* YK2
  ELSE
    PARM-ADDRESS-REL.RETURNED-MAIL-DATE := ADDR-REL-V.RETURNED-MAIL-DATE    /* YK2
  END-IF
  MOVE BY NAME PARM-ADDRESS-REL TO ADDR-REL-V
  UPDATE (FIND-U.)
  ESCAPE BOTTOM
END-FIND
*
END-SUBROUTINE
*
**************************************
DEFINE SUBROUTINE UPDATE-RECORD-BY-ISN
**************************************
*
GT-U.
GET ADDR-REL-V PARM-ADDRESS-REL.ISN
IF ADDR-REL-V.RETURNED-MAIL-IND <> PARM-ADDRESS-REL.RETURNED-MAIL-IND      /* YK2
  PARM-ADDRESS-REL.RETURNED-MAIL-DATE := *DATN                             /* YK2
ELSE
  PARM-ADDRESS-REL.RETURNED-MAIL-DATE := ADDR-REL-V.RETURNED-MAIL-DATE     /* YK2
END-IF
MOVE BY NAME PARM-ADDRESS-REL TO ADDR-REL-V
UPDATE (GT-U.)
*
END-SUBROUTINE
*
***********************************
DEFINE SUBROUTINE UPDATE-SWAP-TYPES
***********************************
*
IF (#ADDRESS-TYPE-CD NOT SPECIFIED OR #ADDRESS-POOL-ID NOT SPECIFIED)
  #RETURN-CODE := #UPDATE-TYPE-PARMS-NOT-FOUND
  ESCAPE MODULE
END-IF
FIND-S.
FIND ADDR-REL-V WITH CONTACT-ID = PARM-ADDRESS-REL.CONTACT-ID
  IF ADDR-REL-V.ADDR-TYPE-CD = #ADDRESS-TYPE-CD AND
      ADDR-REL-V.ADDRESS-POOL-ID = PARM-ADDRESS-REL.ADDRESS-POOL-ID AND
      ADDR-REL-V.STATUS <> #DELETED                                          /* YK1
    #ISN_1 := *ISN
  END-IF
  IF ADDR-REL-V.ADDR-TYPE-CD = PARM-ADDRESS-REL.ADDR-TYPE-CD AND
      ADDR-REL-V.ADDRESS-POOL-ID = #ADDRESS-POOL-ID AND
      ADDR-REL-V.STATUS <> #DELETED                                          /* YK1
    #ISN_2 := *ISN
    #LOCATION        := ADDR-REL-V.ADDR-LOCATION
    #ATTENTION-LINE  := ADDR-REL-V.ATTENTION-LINE
  END-IF
END-FIND
*
* Assign New type to the existing record
GT_1.
GET ADDR-REL-V #ISN_1
ADDR-REL-V.ADDR-TYPE-CD          := PARM-ADDRESS-REL.ADDR-TYPE-CD
ADDR-REL-V.ADDR-LOCATION         := PARM-ADDRESS-REL.ADDR-LOCATION
ADDR-REL-V.ATTENTION-LINE        := PARM-ADDRESS-REL.ATTENTION-LINE
ADDR-REL-V.LAST-DATE-UPD         := PARM-ADDRESS-REL.LAST-DATE-UPD
ADDR-REL-V.LAST-TIME-UPD         := PARM-ADDRESS-REL.LAST-TIME-UPD
ADDR-REL-V.LAST-USER-UPD         := PARM-ADDRESS-REL.LAST-USER-UPD
UPDATE (GT_1.)
*
* Assign
GT_2.
GET ADDR-REL-V #ISN_2
ADDR-REL-V.ADDR-TYPE-CD          := #ADDRESS-TYPE-CD
ADDR-REL-V.ADDR-LOCATION         := #LOCATION
ADDR-REL-V.ATTENTION-LINE        := #ATTENTION-LINE
ADDR-REL-V.LAST-DATE-UPD         := PARM-ADDRESS-REL.LAST-DATE-UPD
ADDR-REL-V.LAST-TIME-UPD         := PARM-ADDRESS-REL.LAST-TIME-UPD
ADDR-REL-V.LAST-USER-UPD         := PARM-ADDRESS-REL.LAST-USER-UPD
UPDATE (GT_2.)
*
END-SUBROUTINE
*
**************************
DEFINE SUBROUTINE HIST-KEY
**************************
*
FIND NUMBER ADDR-REL-V WITH ADDRESS-POOL-ID = PARM-ADDRESS-REL.ADDRESS-POOL-ID
IF *NUMBER = 0
  #RETURN-CODE := #ADDR-REL-POOL-NOT-FOUND
  ESCAPE ROUTINE
ELSE
  #NUMBER-OF-RECORDS := *NUMBER
  EXPAND ARRAY #HM-CONTACT-ID TO (*:#NUMBER-OF-RECORDS)
END-IF
FIND ADDR-REL-V WITH ADDRESS-POOL-ID = PARM-ADDRESS-REL.ADDRESS-POOL-ID
  #I := *COUNTER
  #HM-CONTACT-ID(#I) := ADDR-REL-V.CONTACT-ID
END-FIND
END-SUBROUTINE
*
****************************
DEFINE SUBROUTINE GET-BY-ISN
****************************
*
GT.
GET ADDR-REL-V PARM-ADDRESS-REL.ISN
MOVE BY NAME ADDR-REL-V TO PARM-ADDRESS-REL
END-SUBROUTINE
*
**************************
DEFINE SUBROUTINE GET-REC1
**************************
*
FIND ADDR-REL-V WITH CONTACT-ID = PARM-ADDRESS-REL.CONTACT-ID
  IF NO RECORDS FOUND
    PARM-ADDRESS-REL.#RETURN-CODE := #ADDR-REL-CONT-NOT-FOUND
    ESCAPE MODULE
  END-NOREC
  ACCEPT IF ADDR-REL-V.ADDR-TYPE-CD = PARM-ADDRESS-REL.ADDR-TYPE-CD AND
    ADDR-REL-V.STATUS <> #DELETED                                   /* YK1
  ISN    := *ISN
  MOVE BY NAME ADDR-REL-V TO PARM-ADDRESS-REL
  ESCAPE MODULE
END-FIND
PARM-ADDRESS-REL.#RETURN-CODE := #ADDR-REL-CONT-TYPE-NOT-FOUND
END-SUBROUTINE
*
**************************
DEFINE SUBROUTINE GET-REC2
**************************
*
FIND ADDR-REL-V WITH CONTACT-ID = PARM-ADDRESS-REL.CONTACT-ID
  IF NO RECORDS FOUND
    PARM-ADDRESS-REL.#RETURN-CODE := #ADDR-REL-CONT-NOT-FOUND
    ESCAPE MODULE
  END-NOREC
  ACCEPT IF ADDR-REL-V.ADDRESS-POOL-ID = PARM-ADDRESS-REL.ADDRESS-POOL-ID
  ISN    := *ISN
  #NUMBER-OF-RECORDS := *NUMBER
  MOVE BY NAME ADDR-REL-V TO PARM-ADDRESS-REL
  ESCAPE MODULE
END-FIND
PARM-ADDRESS-REL.#RETURN-CODE := #ADDR-REL-CONT-POOL-NOT-FOUND
END-SUBROUTINE
*
**************************
DEFINE SUBROUTINE GET-REC3
**************************
*
FIND ADDR-REL-V WITH CONTACT-ID = PARM-ADDRESS-REL.CONTACT-ID
  IF NO RECORDS FOUND
    PARM-ADDRESS-REL.#RETURN-CODE := #ADDR-REL-CONT-NOT-FOUND
    ESCAPE MODULE
  END-NOREC
  ACCEPT IF ADDR-REL-V.ADDRESS-POOL-ID = PARM-ADDRESS-REL.ADDRESS-POOL-ID
    AND ADDR-REL-V.ADDR-TYPE-CD    = PARM-ADDRESS-REL.ADDR-TYPE-CD
    AND ADDR-REL-V.STATUS <> #DELETED                                  /* YK1
  ISN    := *ISN
  MOVE BY NAME ADDR-REL-V TO PARM-ADDRESS-REL
  ESCAPE MODULE
END-FIND
PARM-ADDRESS-REL.#RETURN-CODE := #ADDR-REL-CONT-POOL-NOT-FOUND
END-SUBROUTINE
*
***********************************
DEFINE SUBROUTINE GET-POOL-ID-ARRAY
***********************************
*
FIND ADDR-REL-V WITH CONTACT-ID = PARM-ADDRESS-REL.CONTACT-ID
  ACCEPT IF ADDR-REL-V.STATUS NE 'D'
  #I := #I + 1
  EXPAND ARRAY #ADDR-POOL-ARRAY TO (*:#I)
  #ADDR-POOL-ARRAY(#I) := ADDR-REL-V.ADDRESS-POOL-ID
END-FIND
END-SUBROUTINE
*
*********************************
DEFINE SUBROUTINE ASSIGN-NEW-TYPE
*********************************
*
F1.
FIND ADDR-REL-V WITH CONTACT-ID = PARM-ADDRESS-REL.CONTACT-ID
  IF NO RECORDS FOUND
    PARM-ADDRESS-REL.#RETURN-CODE := #ADDR-REL-CONT-NOT-FOUND
    ESCAPE MODULE
  END-NOREC
  ACCEPT IF ADDR-REL-V.ADDRESS-POOL-ID = PARM-ADDRESS-REL.ADDRESS-POOL-ID
  ADDR-REL-V.ADDR-TYPE-CD := PARM-ADDRESS-REL.ADDR-TYPE-CD
  UPDATE (F1.)
END-FIND
END-SUBROUTINE
*
END
