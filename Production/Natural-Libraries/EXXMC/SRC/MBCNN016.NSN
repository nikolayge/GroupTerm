* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* Member Center Online - MC II
* Get Bank Name by Routing Number
* XML Request Parser/Serializer
********************************************************************
*        MODIFICATION LOG
********************************************************************
* USER   DATE      TAG  REASON
* YAK    03042015       Initial Creation
*********************************************************************
*
DEFINE DATA PARAMETER
*
1 REQUEST-DATA      (A) DYNAMIC
1 RESPONSE-DATA     (A) DYNAMIC         /* Out
*
LOCAL USING PARSER-X
LOCAL USING ERROR_LN
LOCAL
1 XML_PARSER_XPATH             (A) DYNAMIC
1 XML_PARSER_XPATH_TYPE        (A1)
1 XML_PARSER_CONTENT           (A) DYNAMIC
1 XML_PARSER_CONTENT_IS_EMPTY  (L)
1 XML_PARSER_INPUT   (A) DYNAMIC
1 XML_PARSER_ERROR_TEXT        (A253)
1 XML_PARSER_RESPONSE          (I2)
1 XML                          (A) DYNAMIC
*
1 #BankName         (A) DYNAMIC
1 #RoutingNumber    (A) DYNAMIC
*
1 Parms 
  2 p_RN   (A9) 
  2 p_Name (A)  DYNAMIC 
  2 p_RC   (I4)  
*  
1 #ErrorCode        (A3) INIT <'0'>
1 #ErrorDescription (A) DYNAMIC
*
END-DEFINE
*
XML_PARSER_INPUT := REQUEST-DATA
INCLUDE PARSER_X 'XML_PARSER_INPUT' /* XML file to be parsed
  'XML_PARSER_XPATH'                /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  'XML_PARSER_CONTENT'              /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
p_RN := #RoutingNumber
CALLNAT 'GPRN0ABA' Parms
#BankName := p_Name
*
IF p_RC <> 0
  #ErrorCode := #INVALID-ROUTING-NUMBER
END-IF  
*
PERFORM COMPOSE-XML
*
************************** CALLBACK HANDLER
DEFINE SUBROUTINE CALLBACK
**************************
*
DECIDE ON FIRST XML_PARSER_XPATH
  VALUE 'Bank/RoutingNumber/$'
    #RoutingNumber := *TRIM(XML_PARSER_CONTENT)
  NONE VALUE
    IGNORE
END-DECIDE
END-SUBROUTINE
*
*****************************
DEFINE SUBROUTINE COMPOSE-XML
*****************************
*
IF #ErrorCode <> '0'
  #ErrorDescription := F-ERROR-DESCRIPTION(<#ErrorCode>)
END-IF
*
COMPRESS
  '<Bank>'
  '<RoutingNumber>' #RoutingNumber '</RoutingNumber>'
  '<BankName><![CDATA[' #BankName ']]></BankName>' 
  '<ErrorCode>' #ErrorCode '</ErrorCode>'
  '<ErrorDescription>' #ErrorDescription '</ErrorDescription>'
  '</Bank>' INTO XML LEAVING NO
RESPONSE-DATA := XML
*
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE PARSER_ERROR
******************************
COMPRESS XML_PARSER_RESPONSE XML_PARSER_ERROR_TEXT INTO RESPONSE-DATA
ESCAPE ROUTINE
END-SUBROUTINE
*
END
