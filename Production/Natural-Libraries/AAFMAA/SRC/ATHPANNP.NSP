* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 2
* <Natural Source Header
* PROGRAM-ID: ATHPANNP - Annual statement of V/A values   (Print Time)
* <<<<<<<<<<<  remove DW8 changes for 2005 ann stmts <<<<<<<<<<<<<<<<<
* <<<<<<<<<<<  remove DW29 changes for 2007 ann stmts <<<<<<<<<<<<<<<<<
* DOCTYPE Must chg every year (DW99)
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE      TAG     REASON                                      *
* DRW    11072004  DW1     add beneficiary info to annual stmts        *
* DRW    11232004  DW2     separate TERM from WL                       *
* DRW    12162004  DW3     create file of missing beneficiaries        *
* DRW    01032005  DW4     add curr yrs DB growth                      *
* DRW    01052005  DW5     remove all '$'                              *
* DRW    01122005  DW6     separate 1st pol from subsequent pols       *
* DRW    01122005  DW7     make fixed # of bene columns                *
* DRW    01192005  DW8     correct ADMIN calc for nxt (only in 1/2005) *
* DRW    01252005  DW9     chg MEC/POC etc ind to "Y" or nothing.      *
* DRW    01282005  DW10    Force 'the Owner's Estate' to missing benes *
* DRW    01282005  DW11    Clear P & I on CAP Members in Bankruptcy    *
* DRW    01282005  DW12    Print "Has become Terminated' Report        *
* DRW    01282005  DW13    Force Given P & I to selected Members       *
* DRW    01302005  DW14    remove P-I from AVL-CSV & DB on cap pols    *
*    ** do above in ATHPANNS next year   (DONE on 11/2005)
* DRW    01312005  DW15    ONLY GIVE TERM IN PLAN IN LTII NOT U/V/W/ETC*
* DRW    02092005  DW16    show init DB as beginning DB on new pols    *
*    ** do above in ATHPANNS next year   (DONE on 2005)
* DRW    02092005  DW17    Chg TTEE in 2nd line of addt to "TRUSTEE"   *
* DRW    11072005  DW18 Make Chgs for 2005 statements
* SAG  12012005 RH1  SS - Replaced the HEX constant '05' (Tab position)
*                    EBCDIC to HEX code '09' ASCII
* DRW    12282005  DW19 Standardize labels & add cap-loan
* DRW    12292005  DW20 reverse signs on 5 credit fields fot keith
* DRW    01102006  DW21 remove beneficiary ~ processing
* DRW    01122006  DW22 Put actual plan into 1st column of output
* DRW    10312006  DW23 Get RP Orig issue-age from ATHPANNS
* DRW    10312006  DW24 split apart Active Duty Alot PP Alot-Auth "N"
* DRW    11062006  DW25 Use Actual Plan except for LTII (only Term)
* DRW    11122006  DW26 Stop splitting out AL & OPT OUT (later only AL)
* DRW    11302006  DW27 Add SVS/LVS/OO-CREDIT (SVC-FEE Breakout)
* SAG  10272006 YK   updated for 2006
* DRW    01112007  DW28 Use 90% of Face as Init-Death-Bene for all AL
* DRW    01122007  DW29 Use best of 3 amts for AL DB beg of CURR year
* DRW    01232007  DW30 Add Retired Alot PP to ALOT Auth "N" file
* DRW    02022007  DW31 Calc new AL DB growth if beg of yr db chged
* DRW    10152007  DW32 Uncomment out SVC-FEE Breakout (REFER TO DW27)
* DRW  01/05/2008  DW33 Extract selected Members for Testing (File 10/11)
* DRW  01/07/2008  DW34 Remove No ALOT AUTH Separation (OLD Wk File 12/13) remove DW24
* DRW  01/07/2008  DW35 Remove Misc File Separation (OLD Wk File 10/11
* DRW  02/07/2008  DW36 Remove POC indicator if RPU ind is on
* DRW  02/10/2008  DW37 Add XML File
* DRW  02/15/2008  DW38 Remove '<' from XML file and fix iss-date-mon-year
* DRW  02/21/2008  DW39 Fix reversed Equity and Ins-chg (COI) on the XML file
* DRW  11/06/2008  DW40 chg file labels
* DRW  11/25/2008  DW41 Modify Linkage for beneficiary processing
* DRW  12/12/2008  DW42 Remove the - (Minus) From the Cap Loan Balance output
* DRW  01/27/2009  DW43 Add #POLICY-PRINT to Linkage to E4700PBD
* DRW  01/27/2009  DW44 Remove OPTED-OUT members from Selected file
* DRW  03/02/2009  DW45 Increase Notes from 60 to 500
* PAM  12/23/2009  PM46 Added OLD, NEW, NEXT indication
* PAM  11/15/2010  PM47 Changes for 2010 statements
* PAM  12/01/2011  PM48 Changes for 2011 statements
* PAM  01/30/2012  PM49 Added files for paperless Annual Statements only
*                       Added owner CN to output files
* PAM  04/16/2012  PM50 Adjust for international addresses (Ops 1113)
* YAK 10/09/2012   YK1  Use function to identify Level Term II plans
* YAK 11/08/2012   YK2  Add No Medical Term plan (EZ)
* vxt  12/29/2012  vt1  Changes for 2012 statements
* NGG    20130204  NG1  Add Nursing Home Pay Status
* JNT  09/16/2013  JT1  Address normalization
* vxt  10/17/2013  vt2  Changes for 2013 statements
* TMT  06/13/2014  TT1  Contact Normalization - DOB
* vxt  11/05/2014  vt3  Changes for 2014 statements
* TMT  11/18/2014  TT2  ANNUITY LIFE 2
************************************************************************
DEFINE DATA   /* SEE LINE 4020 re ins-mail-code = 'T'
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING G3500AAD
LOCAL
1 #CURR-YEAR            (N4)   INIT <2015>  /* DW18  2002 at end of 2001 /* SAG-YK chg for 2006  /* vt1  was 2012 /* vt2 was 2013  /* vt3 was 2014
1 REDEFINE #CURR-YEAR                       /* YK CNG FOR 2006
  2 #CURR-YEAR-A   (A4)
1 #MISSING-BENES    (A40)   /* DW3
1 #LAST-CN          (N6)    /* DW4
*
1 #SELECT-CASES  /* Cnls to put on Separate File for testing  /* DW33
  2 #CN-1  (A56) INIT <'033395-143613-023941-050446-087971-055177-037153-096842-'>
  2 #CN-9  (A56) INIT <'094010-110157-078903-052573-044107-141093-093787-081883-'>
  2 #CN-17 (A56) INIT <'067009-079960-104885-105279-104884-104908-087683-090555-'>
  2 #CN-25 (A56) INIT <'140466-013691-035750-116166-044747-049317-143613-033395-'>
  2 #CN-33 (A56) INIT <'062200-116944-112555-090363-125577-125576-101968-117895-'>
  2 #CN-41 (A56) INIT <'133933-136056-135321-097048-085468-139957-150200-093802-'>
  2 #CN-49 (A56) INIT <'087941-161765-161766-161767-161768-161769-036189-044305-'>  /* PM47
  2 #CN-57 (A21)  INIT <'061899-073336-196334-'>                                                   /* PM47  vt4
1 REDEFINE #SELECT-CASES
  2 #SELECT-CNS  (59)                                                               /* PM47  vt4 was 57
    3 #SELECT-CN    (A6)
    3 #DASH         (A1)
1 #NUM-SEL   (N3)  INIT <59>                                                       /* PM47  vt4 was 57
1 #FOUND-SEL   (L)
*
1 #NUM-XML-WL    (N7)    /* DW37
1 #NUM-XML-TM    (N7)
1 #DOC-TOT       (A7)
1 #DATN-DISP   (A10)
*
1 #HOLD-XML-REC (A100)
1 REDEFINE #HOLD-XML-REC
  2 #HOLD-XML-REC-X (A1/100)
*
1 #XML-ZIP-CODE     (A13)
1 #XML-ISS-MON-YYYY (A13)
1 #XML-CURR-DB      (A13)
1 #XML-ANN-PREM     (A13)
1 #XML-CAP-P-I      (A13)
1 #XML-INITIAL-DB   (A13)
1 #XML-DB-GROWTH    (A13)
1 #XML-TPP          (A13)
1 #XML-CSV-GROWTH   (A13)
1 #XML-CURR-CSV     (A13)
1 #XML-PRIOR-YE-CSV (A13)
1 #XML-BEG-OF-YR-DB (A13)
1 #XML-YTD-PREMS    (A13)
1 #XML-YTD-EQU      (A13)
1 #XML-YTD-COI      (A13)
1 #XML-YTD-INT      (A13)
1 #XML-P-I          (A13)
1 #XML-AVL-CSV      (A13)
1 #XML-AVL-DB       (A13)
1 #XML-SVC-FEE      (A13)
1 #XML-COI          (A13)
1 #XML-ADMIN        (A13)
1 #XML-CURR-DB-GROWTH (A13)
1 #XML-ACQ-COST     (A13)
1 #XML-DUES-PAID    (A13)
1 #XML-LVS          (A13)
1 #XML-SAS          (A13)
1 #XML-OO-CR        (A13)
1 #XML-BENES        (A80/25)    /* WAS 18
*
1 #STMT-XML-LBLS                /* DW37
  2 #PLAN-LBL        (A15) INIT <'PLAN'>       /* 1 a    /* Whole Life Labels
  2 #CN-LBL          (A15) INIT <'CN'>         /* 2 b
  2 #POL-#-LBL       (A15) INIT <'POL-#'>      /* 3 c
  2 #OWNER-CN-LBL    (A15) INIT <'OWNER CN'>   /*       PM49
  2 #OWNER-LBL       (A15) INIT <'OWNER'>      /* 4 d
  2 #STR-LBL         (A15) INIT <'STR'>        /* 5 e
  2 #STR-2-LBL       (A15) INIT <'STR-2'>      /* 6 f
  2 #CITY-LBL        (A15) INIT <'CITY'>       /* 7 g
  2 #ST-LBL          (A15) INIT <'ST'>         /* 8 h
  2 #ZIP-LBL         (A15) INIT <'ZIP'>        /* 9 i
  2 #ISS-DAY-LBL     (A15) INIT <'ISS-DAY'>    /* 10 j
  2 #ISS-MON-YR-LBL  (A15) INIT <'ISS-MON-YR'> /* 11 k
  2 #ISS-AGE-LBL     (A15) INIT <'ISS-AGE'>    /* 12 l
  2 #INSURED-LBL     (A15) INIT <'INSURED'>    /* 13 m
  2 #DB-CURR-LBL     (A15) INIT <'DB-CURR'>    /* 14 n
* below is for Whole life
  2 #DB-INIT-LBL     (A15) INIT <'DB-INIT'>    /* 15 o
  2 #DB-TOT-GROW-LBL (A15) INIT <'DB-TOT-GROW'> /* 16 p
  2 #TOT-PREM-LBL    (A15) INIT <'TOT-PREM'>    /* 17 q
  2 #CV-TOT-GROW-LBL (A15) INIT <'CV-TOT-GROW'> /* 18 r
  2 #CV-CURR-LBL     (A15) INIT <'CV-CURR'>     /* 19 s
  2 #CV-PRIOR-LBL    (A15) INIT <'CV-PRIOR'>    /* 20 t
  2 #DB-PRIOR-LBL    (A15) INIT <'DB-PRIOR'>    /* 21 u
  2 #YTD-PREM-LBL    (A15) INIT <'YTD-PREM'>    /* 22 v
  2 #YTD-INS-CHG-LBL (A15) INIT <'YTD-INS-CHG'> /* 23 w
  2 #YTD-EQUITY-LBL  (A15) INIT <'YTD-EQUITY'>  /* 24 x
  2 #YTD-INT-LBL     (A15) INIT <'YTD-INT'>     /* 25 y
  2 #LOAN-POL-LBL    (A15) INIT <'LOAN-POL'>    /* 26 z
  2 #CV-NET-LBL      (A15) INIT <'CV-NET'>      /* 27 aa
  2 #DB-NET-LBL      (A15) INIT <'DB-NET'>      /* 28 ab
  2 #RPU-LBL         (A15) INIT <'RPU'>         /* 29 ac
  2 #POC-LBL         (A15) INIT <'POC'>         /* 30 ad
  2 #UPP-LBL         (A15) INIT <'UPP'>         /* 31 ae
  2 #NIO-LBL         (A15) INIT <'NIO'>         /* 32 af
  2 #MEC-LBL         (A15) INIT <'MEC'>         /* 33 ag
  2 #CAP-LBL         (A15) INIT <'CAP'>         /* 34 ah
  2 #YTD-SVC-LBL     (A15) INIT <'YTD-SVC'>     /* 35 ai
  2 #YTD-MORT-LBL    (A15) INIT <'YTD-MORT'>    /* 36 aj
  2 #YTD-ADMIN-LBL   (A15) INIT <'YTD-ADMIN'>   /* 37 ak
  2 #DB-YTD-GROW-LBL (A15) INIT <'DB-YTD-GROW'> /* 38 al
  2 #YTD-AQUIS-LBL   (A15) INIT <'YTD-AQUIS'>   /* 39 AM
  2 #YTD-DUES-LBL    (A15) INIT <'YTD-DUES'>    /* 40 an
  2 #OPT-OUT-LBL     (A15) INIT <'OPT-OUT'>     /* 41 ao
  2 #LOAN-CAP-LBL    (A15) INIT <'LOAN-CAP'>    /* 42 ap
  2 #LVS-LBL         (A15) INIT <'LVS'>         /* 43 aq     /* Was LVL /* DW40
  2 #SAS-LBL         (A15) INIT <'SAS'>         /* 44 ar
  2 #OO-CR-LBL       (A15) INIT <'OOCR'>        /* 45 as     /* Was 00-CR /* DW40
  2 #B1-LBL          (A15) INIT <'B1'>          /* 46 bene line 1
  2 #B2-LBL          (A15) INIT <'B2'>          /* 47 bene line 2
  2 #B3-LBL          (A15) INIT <'B3'>          /* 48 bene line 3
  2 #B4-LBL          (A15) INIT <'B4'>          /* 49 bene line 4
  2 #B5-LBL          (A15) INIT <'B5'>          /* 50 bene line 5
  2 #B6-LBL          (A15) INIT <'B6'>          /* 51 bene line 6
  2 #B7-LBL          (A15) INIT <'B7'>          /* 52 bene line 7
  2 #B8-LBL          (A15) INIT <'B8'>          /* 53 bene line 8
  2 #B9-LBL          (A15) INIT <'B9'>          /* 54 bene line 9
  2 #B10-LBL         (A15) INIT <'B10'>         /* 55 bene line 10
  2 #B11-LBL         (A15) INIT <'B11'>         /* 56 bene line 11
  2 #B12-LBL         (A15) INIT <'B12'>         /* 57 bene line 12
  2 #B13-LBL         (A15) INIT <'B13'>         /* 58 bene line 13
  2 #B14-LBL         (A15) INIT <'B14'>         /* 59 bene line 14
  2 #B15-LBL         (A15) INIT <'B15'>         /* 60 bene line 15
  2 #B16-LBL         (A15) INIT <'B16'>         /* 61 bene line 16
  2 #B17-LBL         (A15) INIT <'B17'>         /* 62 bene line 17
  2 #B18-LBL         (A15) INIT <'B18'>         /* 63 bene line 18
  2 #ANN-PREM-LBL    (A15) INIT <'ANN-PREM'>    /* 64 Only used for TERM ANN STMTS
  2 #POL-TYPE-LBL    (A15) INIT <'POL-TYPE'>    /* 65 Determines OLD/NEW/NEXT  /* PM45
  2 #exp-date-lbl      (a15) init <'EXP-DATE'>                                               /* vt2 \/
  2 #bene-last-upd-lbl (a15) init <'B-LAST-UPD-DATE'>
  2 #plan-type-lbl     (a15) init <'PLAN-TYPE'>
  2 #select-lbl        (a15) init <'?SELECT'>
  2 #undel-lbl         (a15) init <'?UNDEL'>
  2 #no-paper-lbl      (a15) init <'?PAPERLESS'>                                            /* vt2 /\
1 REDEFINE #STMT-XML-LBLS
  2 #XML-LBL  (A15/66)                                                         /* PM49
*
1 #XML-REC        (A110)  /* To handle multiple &'s WAS a100              /* DW37
1 REDEFINE #XML-REC
  2 #XML-REC-X  (A1/110)
*
1 #NUM-RECS          (P6)
*
1 #OUT             (A2500)           /* PM48
*
1 #PLAN-A3   (A3)    /* DW25
1 REDEFINE #PLAN-A3
  2 #PLAN-N1   (N1)
1 REDEFINE #PLAN-A3
  2 #PLAN-N2   (N2)
*
1 #STREET-TO-USE  (A70) /* DW17 PM47
1 REDEFINE #STREET-TO-USE
  2 #TTEE-X         (A1/70)   /* DW17 PM47
1 #INFO-TO-RIGHT    (L)      /* DW17
1 #NUM-BENE-COLS    (N3) /* DW7
1 #BANKRUPT         (L)  /* DW11
1 #NUM-BANKRUPT     (P5) /* DW11
1 #NUM-TERMINATED   (P5) /* DW12
1 #X                (L)  /* DW13
1 #WL     (L)
1 #TERM   (L)        /* DW2
1 #LT     (L)        /* DW2
1 #RT     (L)        /* DW2
1 #LT2    (L)        /* DW2
1 #EZ     (L)        /* YK2
1 #POL-NUM         (A16)
* 1 #TAB     (A1) INIT <H'05'>     /* SAG RH1 12012005 SS
1 #TAB       (A1) INIT <H'09'>     /* SAG RH1 12012005 SS
1 #BYPASS-2006    (N5)  /* DW18   CHG    /* SAG-YK chg for 2006
*
1 #AMT-13         (A13)
1 #AMT-13-XML     (A13)     /* DW37
1 REDEFINE #AMT-13-XML
  2 #AMT-13-XML-X   (A1/13)
*
1 #ST-ISN   (P8)
1 #FOUND-1ST-LINE  (L)
1 #FACE          (P7.2)
1 #DB            (P7.2)
1 #PAY-STAT      (A4)
*
1 #OLD-ADDR-1    (A25)      /* PM47
1 #OLD-ADDR-2    (A25)      /* PM47
1 #OLD-ADDR-3    (A25)      /* PM47
**1 #RECS-OUT         (P5)  /* SAG increased due to error on baseline
1 #RECS-OUT         (P6)    /* supplied by YK 10272006
1 #RPU-OUT          (P5)
1 #POC-OUT          (P5)
1 #MEC-OUT          (P5)
1 #CAP-OUT          (P5)
1 #NIO-OUT          (P5)
1 #OPT-OUT          (P5)
1 #UNDL-WL-OUT      (P5)
1 #UNDL-TM-OUT      (P5)
1 #MISC-WL-OUT      (P5)
1 #MISC-TM-OUT      (P5)
1 #WL-1ST-OUT       (P9)                                  /* vt2   \/
1 #WL-1ST-OUT-ALOT  (P9)
1 #WL-OTH-OUT       (P9)
1 #TM-1ST-OUT       (P9)
1 #TM-1ST-OUT-ALOT  (P9)
1 #TM-OTH-OUT       (P9)
1 #UNCERT-OUT       (P9)                                  /* vt2 was p5
1 #NUM-SVC-FEE-GT-COI (P9)                                /* vt2 was p5
1 #MISS-BENES       (P9)    /* PM47                       /* vt2 was p7
1 #SEL-TM-OUT       (P9)    /* DW33                       /* vt2 was p5
1 #SEL-WL-OUT       (P9)                                  /* vt2 was p5  /\
*
*    INPUT file layout
1 #DATA-INFO    /* length  3 + 6 + 8 + 1 + (8 * 6) + (9 * 4) + 14 = 116
  2 #DATA-POL-TYPE     (A3)  /*
  2 #DATA-CN           (N6)  /*                48        36
  2 REDEFINE #DATA-CN        /*   below added 12/2002
    3 #DATA-CN-A        (A6)  /*    + (9 * 6)     + 13          = 183
  2 #DATA-ISS-DT       (N8)  /*   below added 12/2003
  2 REDEFINE #DATA-ISS-DT    /*    + 5 + 8 + 8 = 21            = 204
    3 #DATA-ISS-DT-YYYY (N4)  /* below added 11/2004
    3 redefine #data-iss-dt-yyyy                                                   /* vt2 \/
      4 #data-iss-dt-cc   (a2)
      4 #data-iss-dt-yy   (a2)                                                     /* vt2 /\
    3 #DATA-ISS-DT-MM   (n2)  /*    + 3 + 3 + 7 = 13            = 217
    3 redefine #data-iss-dt-mm                                                     /* vt2
      4 #data-iss-dt-mm-a  (a2)                                                    /* vt2
    3 #DATA-ISS-DT-DD   (n2)  /*   below added 10/2005
    3 redefine #data-iss-dt-dd                                                    /* vt2
      4 #data-iss-dt-dd-a  (a2)                                                   /* vt2
  2 #DATA-SPL-IND      (N1)  /*    + 8 + 5 + 3     = 16        = 233
  2 #DATA-P-I          (N6.2) /*   below added 12/2005
  2 #DATA-TPP          (N6.2) /*  + 8              = 8         = 241
  2 #DATA-YTD-PREMS    (N6.2) /*  + 2              = 2         = 243
  2 #DATA-YTD-COI      (N6.2) /*   below added 12/2006
  2 #DATA-YTD-EQU      (N7.2) /*  + 5  + 5  + 5  = 15    PM47          = 258
  2 #DATA-YTD-INT      (N6.2)
  2 #DATA-BEG-CSV      (N7.2)
  2 #DATA-CURR-CSV     (N7.2)
  2 #DATA-BEG-DB       (N7.2)   /* NOT USED
  2 #DATA-CURR-DB      (N7.2)
  2 #DATA-CURR-RPU     (A1)   /* rpu'd last year
  2 #DATA-CSV-DIFF     (N7.2)                            /* PM47
  2 #DATA-PLAN         (A3)
  2 REDEFINE #DATA-PLAN
    3 #DATA-PLAN-A1   (A1)
    3 #DATA-PLAN-N2   (N2)
  2 #DATA-PAY-STATUS   (A2)
*   added 12/2002           (9 * 6) + 13
  2 #DATA-DB-GROWTH    (N7.2)
  2 #DATA-CSV-GROWTH   (N7.2)
  2 #DATA-PRIOR-YE-CSV (N7.2)
  2 #DATA-BEG-OF-YR-DB (N7.2)
  2 #DATA-AVL-CSV      (N7.2)
  2 #DATA-AVL-DB       (N7.2)
  2 #DATA-TPP-EXC-CSV  (A1)        /* PM47 - was L
  2 #DATA-RPU-IND      (A3)
  2 #DATA-POC-IND      (A3)
  2 #DATA-UPP-IND      (A3)
  2 #DATA-NIO-IND      (A3)
*   ADDED 11/2004            3 + 3 + 7 = 13
  2 #DATA-MEC-IND      (A3)
  2 #DATA-CAP-IND      (A3)
  2 #DATA-ANN-PREM     (N5.2)
*   added 12/2003            5 + 8 + 8 = 21
  2 #DATA-SVC-FEE      (N3.2)
  2 #DATA-COI          (N6.2)
  2 #DATA-ADMIN        (N6.2)
*   added 10/2005                    8 + 5 = 13
  2 #DATA-ACQ-COST     (N6.2)   /* DW18
  2 #DATA-DUES-PAID    (N3.2)   /* DW18
  2 #DATA-OPT-IND      (A3)     /* DW18
*   added 12/2005                    8     = 8
  2 #DATA-CAP-P-I      (N6.2)   /* DW19
*   added 10/2006                    2 = 2
  2 #DATA-RT-ORIG-ISS-AGE (A2)                    /*  DW23
*   added 11/2006                   5 + 5 + 5 = 15
  2 #DATA-LVS             (N3.2)                  /*  DW27
  2 #DATA-SAS             (N3.2)                  /*  DW27
  2 #DATA-OO-CR           (N3.2)                  /*  DW27
  2 #DATA-OLD-NEW-NEXT    (A10)                   /*  PM46
  2 #data-pup-dt          (n8)                                        /* vt2 \/
  2 redefine #data-pup-dt
    3 #data-pup-dt-yyyy     (n4)
    3 #data-pup-dt-mm       (n2)
    3 #data-pup-dt-dd       (n2)                                      /* vt2 /\
*
1 #JCL-PARM       (A17)
1 REDEFINE #JCL-PARM
  2 #JCL-FIL-1        (A13)    /* 'PROCESS-YEAR='
  2 #JCL-PROCESS-YYYY (N4)     /* '1988'
*                              /* N - do not move it/ location each year
*
1 #PARM-BENEFICIARY-INFORMATION                          /* DW41
  2 ##CGA-ISN               (P8)
  2 ##CGA-SCR-COMMAND       (A2)
  2 ##CGA-SCR-ID            (N9)
  2 ##CGA-ID                (N6)
  2 ##CGA-SCR-SUFFIX        (A3)
  2 ##POLICY-PRINT           (L)      /* DW99
*
1 #BENEFICIARY-INFORMATION
  2 ID-NUMBER          (N6)
  2 NOTE-DATE          (N8/60) /* LET P/A = PRIMARY/ALTERNATE DESING
  2 NOTE-TEXT-BI          (A60/60)
  2 REDEFINE NOTE-TEXT-BI /* below layout must match E4750SBD
    3 NT-CN     (N6)
    3 NT-ISS-DT (N8)
    3 NT-PLAN   (A3)
    3 NT-TYPE   (A1)     /* bene-type of primary bene
    3 NT-NEW-LAYOUT (A1) /* new layout indicator of primar
    3 NT-NUM-LINES (N3)  /* # of lines entered below
    3 NT-BENE-SHO  (A79/40)
    3 REDEFINE NT-BENE-SHO
      4 NT-BENE-SHO-OCC  (40)
        5 NT-BENE-SHO-1ST-1    (A1) /* "~" indicates raw new format
        5 NT-BENE-SHO-AFTER-1  (A78)      /* bene data
*                                                         END DW41
1 BENE-FINAL VIEW OF A-BENE-FINAL                                            /* VT2 \/
  2 ID-NUMBER
  2 note-date  (N8/60)  /* P/A = PRIN/ALT DESIG
  2 REDEFINE note-date
    3 BENE-DATES-6-POLS (6)
      4 BENE-ISS-DT       (N6/7) /* (D, L)
      4 redefine bene-iss-dt
        5 #bene-iss-dt      (a6/7)
      4 BENE-SPLIT-IND    (N1/7) /* (D, L)
      4 BENE-LST-UPD      (N8)   /* (D)
      4 BENE-STRT-PEND    (N8)   /* (D)
      4 BENE-FOL-UP-IND   (N1)   /* (D)
      4 BENE-OWN-TRNSF-DT (N8)   /* (D)
      4 BENE-SUC-OWN      (N1)   /* (d)
      4 BENE-NEW-LAYOUT   (N1)   /* (D)/* was -setl-opt
      4 BENE-COM-DIS      (N2)   /* (D)/* Common disaster
      4 BENE-PER-STR      (N1)   /* (D)/* Per Stirpes
      4 BENE-FIL1         (A1)                                               /* VT2 /\
*
1 NT-V VIEW OF A-NOTES  /* rec 800117 was used prior to 11/2008 (DW41)
  2 C*NOTE-TABLE                                /* DW45
  2 NOTE-TEXT          (A60/500)    /* Now replaced by above    DW45
*
1 #BENE-TEXT     (A78/60)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A   (A6)
  2 WIDOW-FLAG
  2 LINKED-CN     (1)
  2 REDEFINE LINKED-CN
    3 LINKED-CN-A   (A6/1)
  2 INTRO-FLAG
  2 ALOT-AMT
  2 ALOT-CHG-AUTH
  2 INS-MAIL-CODE
  2 TITLE-SP
  2 CHIEF-OF-STAFF-IND
*   2 DATE-OF-BIRTH             /* TT1
  2 DEBIT-CREDIT-AMT
  2 PROCESS-IND
  2 MILITARY-SERVICE
  2 MILITARY-STATUS
  2 MEMBER-CONTACT-ID                                    /* JT1
*  2 ADDRESS-CHG-CODE                                   /* JT1
  2 X-LOAN-AMOUNT      (9)
  2 X-LOAN-AMOUNT-2    (9)
  2 NUM-MBRSHIPS       (9)
  2 STATUS             (9)
  2 FACE-AMOUNT        (9)
  2 ANNUAL-PREM        (9)
  2 PAY-STATUS         (9)
  2 EXPIRY-DAY         (9)
  2 TOT-PREMIUMS-PAID  (9)
  2 PAID-TO-DATE       (9)
  2 MODE               (9)
  2 PLAN               (9)
  2 REDEFINE PLAN
    3 PLAN-OCC          (9)
      4 PLAN-A1     (A1)
      4 PLAN-N2     (N2)
  2 CONV-DURATION         (9)
  2 ISSUE-AGE             (9)
  2 ISSUE-DATE            (9)
  2 REDEFINE ISSUE-DATE
    3 ISSUE-DATE-OCC       (9)
      4 ISSUE-DATE-YYYYMMDD (N8)
      4 REDEFINE ISSUE-DATE-YYYYMMDD
        5 ISSUE-DATE-YYYYMM (N6)
        5 REDEFINE ISSUE-DATE-YYYYMM
          6 ISSUE-DATE-YYYY   (N4)
          6 ISSUE-DATE-MM     (N2)
        5 ISSUE-DATE-DD     (N2)
      4 REDEFINE ISSUE-DATE-YYYYMMDD
        5 ISSUE-DATE-CENT   (N2)
        5 ISSUE-DATE-YYMMDD (N6)
  2 SPLIT-IND             (9)
  2 MONTH-ALLOC-AMT       (9)
  2 DEATH-BENEFIT         (9)
  2 SMOKER-FLAG           (9)
  2 PAID-UP-DATE          (9)
  2 CASH-VALUE            (9)
  2 BEG-CASH-VALUE        (9)
*
1 WEB-V VIEW OF A-WEB-ACCOUNT-INFO     /* PM49
  2 MEMBER-CN                           /* PM49
  2 ANNS-DELIVERY-FLAG                  /* PM49
*
1 AR-V VIEW OF A-ADDRESS-RELATIONSHIP  /* JT1 start
  2 CONTACT-ID
  2 ADDRESS-POOL-ID
  2 ADDR-TYPE-CD                        /* JT1 end
*
1 #POL-NUM-A             (A) DYNAMIC   /* PM49
1 #ID-NUMBER-A           (A) DYNAMIC   /* PM49
1 #OWNER-CN-A            (A) DYNAMIC   /* PM49
1 #OWNER-CN              (N6)          /* PM49
1 #PAPERLESS             (L)           /* PM49
1 #PAPERLESS-TM          (N5)          /* PM49
1 #PAPERLESS-WL          (N5)          /* PM49
*
1 #TODAY-YYYYMMDD   (N8)
1 REDEFINE #TODAY-YYYYMMDD
  2 #TODAY-YYYYMMDD-A   (A8)
*
1 #ZIP         (N9)
1 REDEFINE #ZIP
  2 #ZIP-CODE-5-A  (A5)
  2 #ZIP-CODE-4-A  (A4)
1 REDEFINE #ZIP
  2 #ZIP-CODE-5    (N5)
  2 #ZIP-CODE-4    (N4)
1 #DEAR-NAME     (A28)
1 #EXTRACTS       (P6)
*
1 #TEXT-FILE    (A80)   /* contains all bene variable text descriptions
*
1 #DISP-6          (A6)
*
1 #NEG-EQU    (P5)
* 1 #NON-MBR-OWNER    (L)
1 #FOUND-POL        (L)
* 1 #BD-ID           (N6)
* 1 #FOUND-BENE      (L)
* 1 #BD-OWNER        (A35)
1 #INITIAL-DB      (P7.2)
1 #CURR-DB-GROWTH  (P7.2) /* DW4
1 #ISS-AGE   (A2)      /* DW23
1 #OWNER    (A70)        /* PM47
1 #INSURED  (A70)        /* PM47
1 #DIFF     (P7.2)
1 #TOT-CAP-DIFF (P9.2)
1 #TOT-NON-CAP-DIFF (P9.2)
*
1 #MONTHS (A36) INIT <'JanFebMarAprMayJunJulAugSepOctNovDec'>
1 REDEFINE #MONTHS
  2 #MON  (A3/12)
*
1 #COUNTERS
  2 #POLS-PROCESSED   (P5)
  2 #RECS-READ        (P6)
  2 #RECS-WRITTEN     (P6)
  2 #CNT              (P6)
  2 #CNT-2            (P6)
  2 #CNT-3            (P6)
  2 #CNT-4            (P6)
  2 #CNT-5            (P6)
  2 #CNT-6            (P6)
  2 #CNT-7            (P6)
  2 #CNT-8            (P6)
  2 #CNT-9            (P6)
  2 #CNT-10           (P6)
  2 #I1               (I2)
  2 #I2               (I2)
  2 #I3               (I2)
  2 #I4               (I2)
  2 #I5               (I2)
  2 #I6               (I2)
  2 #I7               (I2)
  2 #I8               (I2)
  2 #I9               (I2)
1 #I10              (I2)
1 #I11              (I2)
1 #I12              (I2)
1 #I13              (I2)
1 #I                (I2)                             /* VT
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A        (A4)
  2 #MM-A          (A2)
  2 #DD-A          (A2)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM        (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY         (N4)
    3 #MM           (N2)
  2 #DD            (N2)
*
1 #ADJUST        (N5.2)
1 #UNDL          (L)
1 #CALC-X       (L)
1 #TOT-TERM     (N5)
1 #TOT-LT       (N5)
1 #TOT-RT       (N5)
1 #TOT-EZ       (N5)             /* YK2
1 #TOT-LT2      (N5)
1 #TOT-OLD      (N5)
1 #TOT-NEW      (N5)
1 #TOT-NXT      (N5)
1 #OLD      (L)
1 #NEW      (L)
1 #NXT      (L)
1 #TYP-X    (P5)
1 #TYP-O    (P5)
1 #TPP-GTR-CSV     (P5)
1 #OWN-DIFF-INS    (P5)
1 #BAD-ADDR-POLS   (P5)
*
1 #DAILY-INT   (P3.7)
1 #DAILY-INT-2 (P3.7)
1 #ACC-INT     (P5.2)
1 #ACC-INT-2   (P5.2)
*
1 #FND-ZIP   (L)
1 #RANK-CONV    (A23)
1 REDEFINE #RANK-CONV
  2 #RANK-CONV-X  (A1/23)
*
1 #LETTER-TABLE
  2 #1T (A26) INIT <'AaBbCcDdEeFfGgHhIiJjKkLlMm'>
  2 #2T (A26) INIT <'NnOoPpQqRrSsTtUuVvWwXxYyZz'>
1 REDEFINE #LETTER-TABLE
  2 #LETTER-OCC  (26)
    3 #UPPER     (A1)
    3 #LOWER     (A1)
*
1 #exp-date        (a15)                     /* vt2 \/
1 #bene-last-upd   (a10)
1 redefine #bene-last-upd
  2 #bene-last-upd-yyyy (n4)
  2 #bene-last-upd-mm   (n2)
  2 #bene-last-upd-dd   (n2)
1 #bene-last-upd-a  (a15)
1 #plan-type       (a1)
1 #select          (a1)
1 #undel           (a1)
1 #no-paper        (a1)
1 #out1            (a2500)
1 #i-month         (n2)
1 #issue-date-a      (a6)
1 #j                (i2)
1 #k                 (i2)           /* vt2 /\
*
END-DEFINE
* * * * * * * REPORT HEADER * * * * * *
* DEFINE WORK FILE 1 '/usr/SAG/AAFMAA/batch/workfiles/PERMDA/ATH/test1.txt'  TYPE 'ASCII'
* DEFINE WORK FILE 2 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f2.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 3 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f3.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 4 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f4.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 5 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f5.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 6 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f6.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 7 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f7.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 8 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f8.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 9 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f9.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 10 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f10.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 11 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f11.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 12 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f12.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 13 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f13.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 14 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f14.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 15 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f15.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 16 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f16.TXT' TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 17 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f17.TXT'TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 18 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/f18.NEW.TXT' TYPE 'ASCII-COMPRESSED'
*
FORMAT  LS=133 PS=76
WRITE  TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'V/A Annual Statement Printing Exceptions'
  5X 'DATE: '*DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (3) LS=133 PS=76
WRITE (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X 'Unused'
  5X 'DATE: '*DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (4) LS=133 PS=76
WRITE (4) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X 'Owner Not Insured'
  5X 'DATE: '*DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (5) LS=133 PS=76
WRITE (5) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X 'TPP exceeds CSV'
  5X 'DATE: '*DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (6) LS=133 PS=76
WRITE (6) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X 'EQU ADJUST'
  5X 'DATE: '*DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (7) LS=133 PS=76
WRITE (7) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X 'bypassed due to "T"'
  5X 'DATE: '*DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (8) LS=133 PS=76                 /* DW12
WRITE (8) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X 'Has become inactive'
  5X 'DATE: '*DAT4U 5X 'TIME: ' *TIMX
*
* FORMAT (9) LS=133 PS=76       /* DW8   removed 11/2005
* WRITE (9) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
*         'SVC-FEE Recalculation and AVL CSB/DB reset (for 1/2005 only)'
*              5X 'DATE: '*DAT4U 5X 'TIME: ' *TIMX
*
DEFINE WORK FILE 2  TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 3  TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 4  TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 5  TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 6  TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 7  TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 8  TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 9  TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 10 TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 11 TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 12 TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 13 TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 14 TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 15 TYPE 'ASCII-COMPRESSED'          /* PM48
DEFINE WORK FILE 16 TYPE 'ASCII-COMPRESSED'          /* PM49
DEFINE WORK FILE 17 TYPE 'ASCII-COMPRESSED'          /* PM49
define work file 18 type 'ASCII-COMPRESSED'                             /*vt2
*
INPUT #JCL-PARM            /* FROM STACK TO ENTER PROCESS YEAR
*
* #JCL-PARM := 'PROCESS-YEAR=2013'

*
COMPRESS #PLAN-LBL  /* 1 a    /* Combined file layout
  #TAB #CN-LBL        /* 2 b
  #TAB #POL-#-LBL     /* 3 c
  #TAB #OWNER-CN-LBL            /* PM49
  #TAB #OWNER-LBL     /* 4 d
  #TAB #STR-LBL       /* 5 e
  #TAB #STR-2-LBL     /* 6 f
  #TAB #CITY-LBL      /* 7 g
  #TAB #ST-LBL        /* 8 h
  #TAB #ZIP-LBL       /* 9 i
  #TAB #ISS-DAY-LBL   /* 10 j
  #TAB #ISS-MON-YR-LBL /* 11 k
  #TAB #ISS-AGE-LBL    /* 12 l
  #TAB #INSURED-LBL   /* 13 m
  #TAB #DB-CURR-LBL   /* 14 n
  #TAB #DB-INIT-LBL   /* 15 o
  #TAB #DB-TOT-GROW-LBL /* 16 p
  #TAB #TOT-PREM-LBL  /* 17 q
  #TAB #CV-TOT-GROW-LBL /* 18 r
  #TAB #CV-CURR-LBL   /* 19 s = t + v - w + x + y
  #TAB #CV-PRIOR-LBL  /* 20 t
  #TAB #DB-PRIOR-LBL  /* 21 u
  #TAB #YTD-PREM-LBL  /* 22 v
  #TAB #YTD-INS-CHG-LBL /* 23 w = ag + ah + ai
  #TAB #YTD-EQUITY-LBL/* 24 x
  #TAB #YTD-INT-LBL   /* 25 y
  #TAB #LOAN-POL-LBL  /* 26 z
  #TAB #CV-NET-LBL    /* 27 aa = q + r - z
  #TAB #DB-NET-LBL    /* 28 ab = n + o - z
  #TAB #RPU-LBL       /* 29 ac
  #TAB #POC-LBL       /* 30 ad
  #TAB #UPP-LBL       /* 31 ae
  #TAB #NIO-LBL       /* 32 af
  #TAB #MEC-LBL       /* 33 ag
  #tab #ann-prem-lbl  /* 33' coming from term layout                  /* vt2
  #TAB #CAP-LBL       /* 34 ah
  #TAB #YTD-SVC-LBL   /* 35 ai
  #TAB #YTD-MORT-LBL  /* 36 aj
  #TAB #YTD-ADMIN-LBL /* 37 ak
  #TAB #DB-YTD-GROW-LBL /* 38 al     /* DW4
  #TAB #YTD-AQUIS-LBL  /* 39 AM     /* DW18
  #TAB #YTD-DUES-LBL   /* 40 an     /* DW18
  #TAB #OPT-OUT-LBL    /* 41 ao     /* DW18
  #TAB #LOAN-CAP-LBL   /* 42 ap     /* DW19
  #TAB #LVS-LBL        /* 43 aq     /* DW27/DW32
  #TAB #SAS-LBL        /* 44 ar     /* DW27/DW32
  #TAB #OO-CR-LBL      /* 45 as     /* DW27/DW32
  #TAB #POL-TYPE-LBL                /* PM45
  #tab #exp-date-lbl                                                           /* vt2 \/
  #tab #bene-last-upd-lbl
  #tab #plan-type-lbl
  #tab #select-lbl
  #tab #undel-lbl
  #tab #no-paper-lbl                                                           /* vt2 /\
  #TAB #B1-LBL  /* 46 bene line 1    highest we use now is 17
  #TAB #B2-LBL  /* 47 bene line 2
  #TAB #B3-LBL  /* 48 bene line 3
  #TAB #B4-LBL  /* 49 bene line 4
  #TAB #B5-LBL  /* 50 bene line 5
  #TAB #B6-LBL  /* 51 bene line 6
  #TAB #B7-LBL  /* 52 bene line 7
  #TAB #B8-LBL  /* 53 bene line 8
  #TAB #B9-LBL  /* 54 bene line 9
  #TAB #B10-LBL /* 55 bene line 10
  #TAB #B11-LBL /* 56 bene line 11
  #TAB #B12-LBL /* 57 bene line 12
  #TAB #B13-LBL /* 58 bene line 13
  #TAB #B14-LBL /* 59 bene line 14
  #TAB #B15-LBL /* 60 bene line 15
  #TAB #B16-LBL /* 61 bene line 16
  #TAB #B17-LBL /* 62 bene line 17
  #TAB #B18-LBL /* 63 bene line 18   /* If # of bene columns chg check DW7
  INTO #OUT1 LEAVING NO                                                        /* vt2 /\
*
COMPRESS #PLAN-LBL  /* 1 a    /* Whole Life Labels
  #TAB #CN-LBL        /* 2 b
  #TAB #POL-#-LBL     /* 3 c
  #TAB #OWNER-CN-LBL            /* PM49
  #TAB #OWNER-LBL     /* 4 d
  #TAB #STR-LBL       /* 5 e
  #TAB #STR-2-LBL     /* 6 f
  #TAB #CITY-LBL      /* 7 g
  #TAB #ST-LBL        /* 8 h
  #TAB #ZIP-LBL       /* 9 i
  #TAB #ISS-DAY-LBL   /* 10 j
  #TAB #ISS-MON-YR-LBL /* 11 k
  #TAB #ISS-AGE-LBL    /* 12 l
  #TAB #INSURED-LBL   /* 13 m
  #TAB #DB-CURR-LBL   /* 14 n
* below is for Whole life
  #TAB #DB-INIT-LBL   /* 15 o
  #TAB #DB-TOT-GROW-LBL /* 16 p
  #TAB #TOT-PREM-LBL  /* 17 q
  #TAB #CV-TOT-GROW-LBL /* 18 r
  #TAB #CV-CURR-LBL   /* 19 s = t + v - w + x + y
  #TAB #CV-PRIOR-LBL  /* 20 t
  #TAB #DB-PRIOR-LBL  /* 21 u
  #TAB #YTD-PREM-LBL  /* 22 v
  #TAB #YTD-INS-CHG-LBL /* 23 w = ag + ah + ai
  #TAB #YTD-EQUITY-LBL/* 24 x
  #TAB #YTD-INT-LBL   /* 25 y
  #TAB #LOAN-POL-LBL  /* 26 z
  #TAB #CV-NET-LBL    /* 27 aa = q + r - z
  #TAB #DB-NET-LBL    /* 28 ab = n + o - z
  #TAB #RPU-LBL       /* 29 ac
  #TAB #POC-LBL       /* 30 ad
  #TAB #UPP-LBL       /* 31 ae
  #TAB #NIO-LBL       /* 32 af
  #TAB #MEC-LBL       /* 33 ag
  #TAB #CAP-LBL       /* 34 ah
  #TAB #YTD-SVC-LBL   /* 35 ai
  #TAB #YTD-MORT-LBL  /* 36 aj
  #TAB #YTD-ADMIN-LBL /* 37 ak
  #TAB #DB-YTD-GROW-LBL /* 38 al     /* DW4
  #TAB #YTD-AQUIS-LBL  /* 39 AM     /* DW18
  #TAB #YTD-DUES-LBL   /* 40 an     /* DW18
  #TAB #OPT-OUT-LBL    /* 41 ao     /* DW18
  #TAB #LOAN-CAP-LBL   /* 42 ap     /* DW19
  #TAB #LVS-LBL        /* 43 aq     /* DW27/DW32
  #TAB #SAS-LBL        /* 44 ar     /* DW27/DW32
  #TAB #OO-CR-LBL      /* 45 as     /* DW27/DW32
  #TAB #POL-TYPE-LBL                /* PM45
  #tab #exp-date-lbl                                                           /* vt2 \/
  #tab #bene-last-upd-lbl
  #tab #plan-type-lbl
  #tab #select-lbl
  #tab #undel-lbl
  #tab #no-paper-lbl                                                           /* vt2 /\
* below is for beneficiary info
  #TAB #B1-LBL  /* 46 bene line 1    highest we use now is 17
  #TAB #B2-LBL  /* 47 bene line 2
  #TAB #B3-LBL  /* 48 bene line 3
  #TAB #B4-LBL  /* 49 bene line 4
  #TAB #B5-LBL  /* 50 bene line 5
  #TAB #B6-LBL  /* 51 bene line 6
  #TAB #B7-LBL  /* 52 bene line 7
  #TAB #B8-LBL  /* 53 bene line 8
  #TAB #B9-LBL  /* 54 bene line 9
  #TAB #B10-LBL /* 55 bene line 10
  #TAB #B11-LBL /* 56 bene line 11
  #TAB #B12-LBL /* 57 bene line 12
  #TAB #B13-LBL /* 58 bene line 13
  #TAB #B14-LBL /* 59 bene line 14
  #TAB #B15-LBL /* 60 bene line 15
  #TAB #B16-LBL /* 61 bene line 16
  #TAB #B17-LBL /* 62 bene line 17
  #TAB #B18-LBL /* 63 bene line 18   /* If # of bene columns chg check DW7
  INTO #OUT LEAVING NO                                     /* PM48
*
WRITE WORK FILE 2 VARIABLE #OUT   /* W/L UNDELIVERABLES       /* PM48
WRITE WORK FILE 4 VARIABLE #OUT   /* W/L 1st pols             /* PM48
WRITE WORK FILE 6 VARIABLE #OUT   /* W/L subsequent pols      /* PM48
* WRITE WORK FILE 10 #EXTRACT  /* W/L MISC OUT       /* DW30/DW35/PM48
* WRITE WORK FILE 12 #EXTRACT  /* W/L Alot N OUT     /* DW24/DW34/PM48
WRITE WORK FILE 10 VARIABLE #OUT  /* W/L Selected CN's        /* DW33/PM48
WRITE WORK FILE 16 VARIABLE #OUT  /* W/L Paperless            /* PM49
write work file 18 variable #out1                                                       /* vt2
*
RESET #OUT                                                    /* PM48
reset #out1                                                                               /* vt2
*
COMPRESS 'CN'     /* DW3
  #TAB    'Iss-dt'
  #TAB    'Name'
  INTO #MISSING-BENES LEAVING NO
WRITE WORK FILE 9 #MISSING-BENES    /* DW#
*
COMPRESS #PLAN-LBL  /* 1 a    /* Term Lables     /* DW2
  #TAB #CN-LBL        /* 2 b
  #TAB #POL-#-LBL     /* 3 c
  #TAB #OWNER-CN-LBL            /* PM49
  #TAB #OWNER-LBL     /* 4 d
  #TAB #STR-LBL       /* 5 e
  #TAB #STR-2-LBL     /* 6 f
  #TAB #CITY-LBL      /* 7 g
  #TAB #ST-LBL        /* 8 h
  #TAB #ZIP-LBL       /* 9 i
  #TAB #ISS-DAY-LBL   /* 10 j
  #TAB #ISS-MON-YR-LBL /* 11 k
  #TAB #ISS-AGE-LBL   /* 12 l
  #TAB #INSURED-LBL   /* 13 m
  #TAB #DB-CURR-LBL   /* 14 n
  #TAB #NIO-LBL       /* 15 o
  #TAB #CAP-LBL       /* 16 p
  #TAB #ANN-PREM-LBL  /* 17 q
  #TAB #YTD-DUES-LBL  /* 18 r   /* DW18
  #TAB #OPT-OUT-LBL   /* 19 s   /* DW18
  #TAB #LOAN-CAP-LBL  /* 20 t   /* DW19
* below is for beneficiary info
  #TAB #B1-LBL  /* 21 bene line 1    highest is 17
  #TAB #B2-LBL  /* 22 bene line 2
  #TAB #B3-LBL  /* 23 bene line 3
  #TAB #B4-LBL  /* 24 bene line 4
  #TAB #B5-LBL  /* 25 bene line 5
  #TAB #B6-LBL  /* 26 bene line 6
  #TAB #B7-LBL  /* 27 bene line 7
  #TAB #B8-LBL  /* 28 bene line 8
  #TAB #B9-LBL  /* 19 bene line 9
  #TAB #B10-LBL /* 30 bene line 10
  #TAB #B11-LBL /* 31 bene line 11
  #TAB #B12-LBL /* 32 bene line 12
  #TAB #B13-LBL /* 33 bene line 13
  #TAB #B14-LBL /* 34 bene line 14
  #TAB #B15-LBL /* 35 bene line 15
  #TAB #B16-LBL /* 36 bene line 16
  #TAB #B17-LBL /* 37 bene line 17
  #TAB #B18-LBL /* 38 bene line 18
  INTO #OUT LEAVING NO                                       /* PM48

*
WRITE WORK FILE 3 VARIABLE #OUT   /* term UNDELIVERABLES    DW2 /* PM48
WRITE WORK FILE 5 VARIABLE #OUT   /* term 1st policies          /* PM48
WRITE WORK FILE 7 VARIABLE #OUT   /* term subsequent pols       /* PM48
* WRITE WORK FILE 11 #EXTRACT     /* term MISC/OUT              /* DW30/DW35
* WRITE WORK FILE 13 #EXTRACT     /* Term Alot N OUT            /* DW24/DW34
WRITE WORK FILE 11 VARIABLE #OUT  /* Term Selected CN's         /* DW33 PM48
WRITE WORK FILE 17 VARIABLE #OUT  /* Term Paperless             /* PM49
RESET #OUT                                                      /* PM48
reset #out1                                                                 /* vt2
*
COMPRESS 'Num'
  #TAB   'text'
  INTO #TEXT-FILE  LEAVING NO
WRITE WORK FILE 8 #TEXT-FILE    /* bene text file
*
READ WORK 1 RECORD #DATA-INFO
* WRITE 'just read data-plan' #DATA-PLAN #data-cn
*  IF #WL-1ST-OUT GE  300   /* 3000 to get a term policy
*    ESCAPE BOTTOM
*  END-IF
*
  IF (#DATA-RPU-IND = 'RPU') AND (#DATA-POC-IND = 'POC') /* Remove POC if RPU /* DW36
    RESET #DATA-POC-IND
  END-IF
*
  IF #DATA-RPU-IND = 'RPU' MOVE 'Y' TO #DATA-RPU-IND END-IF   /* DW9
  IF #DATA-POC-IND = 'POC' MOVE 'Y' TO #DATA-POC-IND END-IF   /* DW9
  IF #DATA-UPP-IND = 'UPP' MOVE 'Y' TO #DATA-UPP-IND END-IF   /* DW9
  IF #DATA-NIO-IND = 'NIO' MOVE 'Y' TO #DATA-NIO-IND END-IF   /* DW9
  IF #DATA-MEC-IND = 'MEC' MOVE 'Y' TO #DATA-MEC-IND END-IF   /* DW9
  IF #DATA-OPT-IND = 'OPT' MOVE 'Y' TO #DATA-OPT-IND END-IF   /* DW18
  IF (#DATA-CAP-IND = 'CAP') AND (#DATA-CAP-P-I NE 0)       /* DW9 DW19
    MOVE 'Y' TO #DATA-CAP-IND
  ELSE
    RESET #DATA-CAP-IND
  END-IF   /* DW9
*
  RESET #TERM #WL #LT #RT #LT2                  /* DW2
  reset #plan-type  #exp-date                                                     /* vt2
* IF  (#DATA-PLAN = 'LT' OR = 'RT')                             /* YK1
*  OR ((#DATA-PLAN-A1 GE 'U') AND (#DATA-PLAN-A1 LE 'Z'))       /* YK1
  IF FUNCTION-TERM-POLICY(<#DATA-PLAN>)                         /* YK1
    MOVE TRUE TO #TERM                                          /* YK2 start
    move 'T' to #plan-type                                                   /* vt2
    move #data-pup-dt-mm to #I-month
    compress #data-pup-dt-dd '-' #mon(#i-month) '-' #data-pup-dt-yyyy into #exp-date leaving no
*    move #data-pup-dt to #exp-date                                           /* vt2
*     IF #DATA-PLAN = 'LT'
*       MOVE TRUE TO #LT
*     ELSE
*       IF #DATA-PLAN = 'RT'
*         MOVE TRUE TO #RT
*       ELSE
*         MOVE TRUE TO #LT2
*       END-IF
*     END-IF
    DECIDE ON FIRST VALUE #DATA-PLAN
      VALUE 'LT'
        MOVE TRUE TO #LT
      VALUE 'RT'
        MOVE TRUE TO #RT
      VALUE 'EZ'
        MOVE TRUE TO #EZ
      NONE VALUE
        MOVE TRUE TO #LT2
    END-DECIDE                                                 /* YK2 end
  ELSE
    MOVE TRUE TO #WL
    reset #term
    move 'W' to #plan-type                                              /* vt2  \/
    if IS-ANNUITY-LIFE(<#data-plan>)                                 /* vt3 \/           /* TT2
      move 'A' to #plan-type
    else
      if #data-plan = 'GPL' or = 'GP2'
        move 'G' to #plan-type
      end-if
    end-if                                                /* vt3 /\
*     move #data-pup-dt-mm to #I-month
*     write '=' #i-month
*     compress #data-pup-dt-dd '-' #mon(#i-month) '-' #data-pup-dt-yyyy into #exp-date leaving no
    reset #exp-date
*    move #data-pup-dt to #exp-date                                      /* vt2 /\
  END-IF
*
  ADD 1 TO #RECS-READ
*
*  IF #DATA-ISS-DT GE 20061201 /* Do Not include caps on 12/1/2005 CHG    /* SAG-YK chg for 2006
*    ADD 1 TO #BYPASS-2006                                                /* SAG-YK chg for 2006
*    WRITE #DATA-CN #DATA-ISS-DT
*    ESCAPE TOP
*  END-IF
*
  RESET #FOUND-POL
  FIND (1) ST-V WITH MEMBER-KEY = #DATA-CN-A
    IF NO RECORD FOUND
      WRITE #DATA-CN #DATA-ISS-DT 'CN record not found'
      ESCAPE BOTTOM
    END-NOREC
*
    FOR #I1 1 TO 9
      IF   (ST-V.ISSUE-DATE (#I1) = #DATA-ISS-DT)
          AND (ST-V.SPLIT-IND  (#I1) = #DATA-SPL-IND)
        MOVE TRUE TO #FOUND-POL
        ESCAPE BOTTOM
      END-IF
    END-FOR
    MOVE *ISN TO #ST-ISN
  END-FIND
*
*  write '=' #found-pol
  IF NOT #FOUND-POL
    WRITE #DATA-CN #DATA-ISS-DT 'Iss-date not found on database'
    ESCAPE TOP
  END-IF
*
  IF CONV-DURATION (#I1) = 999      /* DW11
    RESET #BANKRUPT                 /* DW11
    FIND (1) NT-V WITH ID-NUMBER = ST-V.ID-NUMBER        /* DW11
      FOR #I2 1 TO C*NOTE-TABLE                        /* DW45
        IF NOTE-TEXT (#I2) = MASK ('*Mbr in bnkrptcy')   /* DW11
          MOVE TRUE TO #BANKRUPT
          ESCAPE BOTTOM
        END-IF
      END-FOR
    END-FIND
*
    IF #BANKRUPT                 /* DW11
        AND (#DATA-CAP-P-I NE 0)     /* DW11   DW19
      ADD 1 TO #NUM-BANKRUPT
      WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1)
        'CAP Member"s P & I of' #DATA-CAP-P-I 'cleared due to bankruptcy'
      RESET #DATA-CAP-P-I            /*
    END-IF
  END-IF
*
  IF   (#DATA-CAP-IND = 'Y')
      AND (X-LOAN-AMOUNT   (#I1) NE 0)
      AND (X-LOAN-AMOUNT-2 (#I1) NE 0)
    WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'CAP pol with 2 loans'
  END-IF
*
  IF INS-MAIL-CODE = 'A' OR = 'T'    /* do not send annual statements
    WRITE ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1)'Annual Stmt bypassed'
      'code=' INS-MAIL-CODE
    IF INS-MAIL-CODE = 'T'
      ADD 1 TO #CNT-7
      DISPLAY (7) #CNT-7 ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1)
    END-IF
    ESCAPE TOP
  END-IF
*
  IF PAY-STATUS (#I1) = '43'  /* PULT
    WRITE ST-V.ID-NUMBER 'BYPASSED - IS A PULT (LONG TERM CARE)'
    ESCAPE TOP
  END-IF
*
  IF PAY-STATUS (#I1) = '73'  /* NH   NG1
    WRITE ST-V.ID-NUMBER 'BYPASSED - IS A NH (NURSING HOME)'
    ESCAPE TOP
  END-IF
*
  IF #DATA-YTD-EQU LT 0   /* this will only NEED be done 1/2004 <<<< **
    ADD 1 TO #NEG-EQU
*   WRITE #DATA-CN #DATA-ISS-DT 'Neg Equity' #DATA-YTD-EQU
*      'Pay-stat' PAY-STATUS (#I1)
*   RESET #DATA-YTD-EQU
  END-IF
*
  IF #DATA-SVC-FEE GT #DATA-YTD-COI
    WRITE #DATA-CN #DATA-ISS-DT 'SVC-FEE exceeds COI' #DATA-YTD-COI
      #DATA-SVC-FEE
    ADD 1 TO #NUM-SVC-FEE-GT-COI
  END-IF
*
  IF STATUS (#I1) NE 'D'
    ADD 1 TO #NUM-TERMINATED   /* DW12
    ADD 1 TO #CNT-8
    DISPLAY (8) #CNT-8 ST-V.ID-NUMBER ISSUE-DATE (#I1) PLAN(#I1) /* DW12
      'Widow/Flag' WIDOW-FLAG
    ESCAPE TOP
  END-IF
*
* IF   (#DATA-PAY-STATUS = '45')
*  AND (FACE-AMOUNT (#I1) = 0)
*   WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'RPU policy w no face'
* END-IF
*
  RESET #NXT #NEW #OLD #CALC-X
*
  IF #TERM                                     /* DW2
    ADD 1 TO #TOT-TERM
* YK2 Start
*     IF #LT
*       ADD 1 TO #TOT-LT
*     ELSE
*       IF #RT
*         ADD 1 TO #TOT-RT
*       ELSE
*         ADD 1 TO #TOT-LT2
*       END-IF
*     END-IF
    DECIDE FOR FIRST CONDITION
      WHEN #LT
        ADD 1 TO #TOT-LT
      WHEN #RT
        ADD 1 TO #TOT-RT
      WHEN #EZ
        ADD 1 TO #TOT-EZ
      WHEN NONE
        ADD 1 TO #TOT-LT2
    END-DECIDE
* YK2 End
  ELSE
    IF   (ST-V.ISSUE-DATE (#I1) GE 19970101)
        AND (ST-V.MONTH-ALLOC-AMT (#I1) NE 999.99)
      MOVE TRUE TO #NXT
      ADD 1 TO #TOT-NXT
      MOVE TRUE TO #CALC-X
    ELSE
      IF ST-V.ISSUE-DATE (#I1) GE 19860701
        MOVE TRUE TO #NEW
        ADD 1 TO #TOT-NEW
      ELSE
        MOVE TRUE TO #OLD
        ADD 1 TO #TOT-OLD
      END-IF
    END-IF
  END-IF
*
  RESET #INITIAL-DB
  IF   (ISSUE-DATE (#I1) GE 19870401)
      AND (PAY-STATUS (#I1) NE '45')
    MOVE FACE-AMOUNT (#I1) TO #INITIAL-DB
  ELSE
    IF PAY-STATUS (#I1) = '45'
      IF  ISSUE-DATE (#I1) LT 19941201
        IF ISSUE-DATE (#I1) GE 19870401
          COMPUTE #INITIAL-DB = NUM-MBRSHIPS (#I1) * 5000
        ELSE
          COMPUTE #INITIAL-DB = NUM-MBRSHIPS (#I1) * 3000
        END-IF
      ELSE
        COMPUTE #INITIAL-DB = EXPIRY-DAY (#I1) * 5000
      END-IF
    ELSE
      COMPUTE #INITIAL-DB = (FACE-AMOUNT (#I1) / 5000) * 3000
    END-IF
  END-IF
*
  IF IS-ANNUITY-LIFE(<PLAN (#I1)>)                               /* TT2
    COMPUTE #INITIAL-DB = FACE-AMOUNT (#I1) * .90  /* KEEP DW28
*
    IF (ISSUE-DATE (#I1) LT 20060101)
        AND (#DATA-BEG-OF-YR-DB NE 0)
        AND (FACE-AMOUNT (#I1) * .90) GT #DATA-BEG-OF-YR-DB
      COMPUTE #DATA-BEG-OF-YR-DB = FACE-AMOUNT (#I1) * .90
    END-IF
*
    COMPUTE #CURR-DB-GROWTH =                              /*DW31
      #DATA-CURR-DB - #DATA-BEG-OF-YR-DB
*    WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'AL YTD CHG chged to'                     /* vt2
*      #CURR-DB-GROWTH                                                               /* vt2
    COMPUTE #DATA-DB-GROWTH =
      #DATA-CURR-DB - #INITIAL-DB                /* DW31
*    WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'AL PTD CHG chged to'                     /* vt2
*      #DATA-DB-GROWTH                                                               /* vt2
  END-IF

*
* IF PLAN (#I1) = 'AL' /* Removed 1/11/2007   /* DW6
*   MOVE FACE-AMOUNT (#I1) TO #FACE
*   RESET #DB
*   CALLNAT 'GDROPSTM' USING
*     PLAN          (#I1)
*     SMOKER-FLAG   (#I1)
*     DATE-OF-BIRTH
*     ISSUE-DATE    (#I1)
*     PAID-UP-DATE  (#I1)
*     ISSUE-DATE (#I1)    /* Calc DB as of issue-date
*     ISSUE-AGE     (#I1)
*     #PAY-STAT
*     #FACE
*     #DB
*     CASH-VALUE (#I1)
*     BEG-CASH-VALUE (#I1)
*
*     MOVE #DB TO #INITIAL-DB
* END-IF
*
  IF #DATA-POC-IND = 'Y'
    ADD 1 TO #TPP-GTR-CSV
  END-IF
*
  IF #DATA-OPT-IND = 'Y'   /* DW18
    ADD 1 TO #OPT-OUT
  END-IF
*
  IF #DATA-TPP-EXC-CSV = 'X'   /* PM47
    ADD 1 TO #CNT-5
    DISPLAY (5) #CNT-5 ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1)
      #DATA-TPP #DATA-CURR-CSV
  END-IF
*
  PERFORM BUILD-ANN-STMT-INFO
*
  IF #INSURED NE #OWNER
    ADD 1 TO #CNT-4
    DISPLAY (4) #CNT-4
      'CN' ST-V.ID-NUMBER
      'INT/FLG'  ST-V.INTRO-FLAG
      'POL/TYP'  #DATA-POL-TYPE
      'ISS/DATE' ISSUE-DATE (#I1)
      'Insured'  #INSURED (EM=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX)
      'Owner'    #OWNER   (EM=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX)
  END-IF
END-WORK
*
PERFORM XML-HEADER-RECORDS                            /* DW37
PERFORM XML-DETAIL-RECORDS-FINAL
PERFORM XML-FOOTER-RECORDS                            /* DW37
*
WRITE (2) 'Recs Read         ' #RECS-READ
WRITE (2) 'Num Statements out' #RECS-OUT
WRITE (2)  #UNDL-WL-OUT '+' #UNDL-TM-OUT
  '+' #MISC-WL-OUT '+' #MISC-TM-OUT
  '+' #WL-1ST-OUT '+' #WL-OTH-OUT
  '+' #PAPERLESS-TM '+' #PAPERLESS-WL
*       '+' #WL-1ST-OUT-ALOT                  /* DW24/DW34
  '+' #TM-1ST-OUT '+' #TM-OTH-OUT
*       '+' #TM-1ST-OUT-ALOT                  /* DW24/DW34
  ' = ' #RECS-OUT
WRITE (2) 'UNDL WL STMTS pols OT =' #UNDL-WL-OUT
WRITE (2) 'UNDL TM STMTS pols OT =' #UNDL-TM-OUT
WRITE (2) 'MISC WL Stmt  pols OT =' #MISC-WL-OUT
WRITE (2) 'MISC TM Stmt  pols OT =' #MISC-TM-OUT
WRITE (2) 'Paperless WL Stmt pol =' #PAPERLESS-WL        /* PM49
WRITE (2) 'WL 1st pols        OUT=' #WL-1ST-OUT
* WRITE (2) 'WL 1st pols-alot   OUT=' #WL-1ST-OUT-ALOT   /* DW24/DW34
WRITE (2) 'WL subsequent pols OUT=' #WL-OTH-OUT
WRITE (2) 'Paperless TM Stmt pol =' #PAPERLESS-TM        /* PM49
WRITE (2) 'TM 1st pols        OUT=' #TM-1ST-OUT
* WRITE (2) 'TM 1st pols-alot   OUT=' #TM-1ST-OUT-ALOT   /* DW24/DW34
WRITE (2) 'TM subsequent pols OUT=' #TM-OTH-OUT
WRITE (2) 'W/L Selected pols  OUT=' #SEL-WL-OUT     /* DW33
WRITE (2) 'TM Selected pols   OUT=' #SEL-TM-OUT
*
WRITE (2) 'Num TERM pols = ' #TOT-TERM
WRITE (2) 'Num LT   pols = ' #TOT-LT
WRITE (2) 'Num RT   pols = ' #TOT-RT
WRITE (2) 'Num EZ   pols = ' #TOT-EZ             /* YK2
WRITE (2) 'Num LT2  pols = ' #TOT-LT2
WRITE (2) 'Num OLD pols  = ' #TOT-OLD
WRITE (2) 'Num NEW pols  = ' #TOT-NEW
WRITE (2) 'Num NXT pols  = ' #TOT-NXT
WRITE (2) 'Num typ-O-pols= ' #TYP-O
WRITE (2) 'Num typ-X-pols= ' #TYP-X
WRITE (2) 'Nxt TPP gtr csv   = ' #TPP-GTR-CSV
WRITE (2) 'Owner not Insured = ' #OWN-DIFF-INS
WRITE (2) 'Negative Equity   = ' #NEG-EQU
WRITE (2) 'Bypassed iss 2006 = ' #BYPASS-2006   /* SAG-YK chg for 2006
WRITE (2) 'RPU Statement recs OUT=' #RPU-OUT
WRITE (2) 'POC Statement recs OUT=' #POC-OUT
WRITE (2) 'MEC Statement recs OUT=' #MEC-OUT
WRITE (2) 'CAP Statement recs OUT=' #CAP-OUT
WRITE (2) 'NIO Statement recs OUT=' #NIO-OUT
WRITE (2) 'OPT-OUT Stmts recs OUT=' #OPT-OUT    /* DW18
WRITE (2) 'UNCERTIFIABLE  recs OUT         =' #UNCERT-OUT
WRITE (2) 'Total CAP diff of tpp & CSV     = ' #TOT-CAP-DIFF
WRITE (2) 'Total non-cap diff of tpp & CSV = ' #TOT-NON-CAP-DIFF
WRITE (2) 'Bypassed No addr or undl pols   = ' #BAD-ADDR-POLS
WRITE (2) 'CAP Bypassed due to bankruptcy  = ' #NUM-BANKRUPT    /* DW11
WRITE (2) 'Bypassed due to Terminated      = ' #NUM-TERMINATED  /* DW12
WRITE (2) 'Num svc-fee exceeds COI         = ' #NUM-SVC-FEE-GT-COI
WRITE (2) 'POLS with missing benes         = ' #MISS-BENES
*
WRITE 'Bene Text Table'
FOR #I7 1 TO 60
  IF #BENE-TEXT (#I7) = ' '
    ESCAPE TOP
  END-IF
*
  WRITE  #I7 #BENE-TEXT (#I7)
*
  COMPRESS #I7
    #TAB   #BENE-TEXT (#I7)
    INTO #TEXT-FILE  LEAVING NO
  WRITE WORK FILE 8 #TEXT-FILE    /* bene text file
END-FOR
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-ANN-STMT-INFO
* * * * * * * * * * * * * * * *
*
MOVE ST-V.ID-NUMBER TO #CGA-SCR-ID
MOVE #I1 TO #CONTACT-SEG  /* get owner of this policy
CALLNAT 'G3500SAD' #CGA-MASTER #PDA-AREA-G3500AAD
MOVE #EXT-FORMATED-NAME TO #OWNER /* PM47
*
IF #SPS-GEN-NAME = ' '   /* also used for insured name if non-mbr owner
  MOVE #EXT-FORMATED-NAME TO #INSURED  /* PM47
ELSE
  MOVE #EXT-SPS-GEN-NAME TO #INSURED   /* PM47
END-IF
*
* separate city/state
* MOVE 'S' TO #SPLIT
* RESET #STREET #STREET-2 #CITY #STATE
* CALLNAT 'GCTSTSXX'  /* split city/state
*  #SPLIT
*  #OLD-ADDR-1        /* PM47
*  #OLD-ADDR-2        /* PM47
*  #OLD-ADDR-3        /* PM47
* #FIRST-ADDRESS    /* PM47
* #ADDR-2           /* PM47
* #ADDR-3           /* PM47
*  #STREET
*  #STREET-2
*  #CITY
*  #STATE
*  #ERR-MSG
*
* WRITE ST-V.ID-NUMBER #SECOND-ADDRESS #THIRD-ADDRESS #STREET #STREET-2
*       #CITY #STATE
MOVE #ZIP-CODE TO #ZIP
MOVE #FULL-RANK TO #RANK-CONV
PERFORM LOWER-UPPER
COMPRESS #RANK-CONV #LAST-NAME INTO #DEAR-NAME
COMPRESS #DEAR-NAME ':' INTO #DEAR-NAME LEAVING NO
*
IF #OWNER = ' '
  MOVE #EXT-FORMATED-NAME TO #OWNER    /* PM47
END-IF
*
RESET #UNDL #undel                                                    /* vt2
IF #UNDEL-ADDR   /* G3500SAD determines this
  ADD 1 TO #BAD-ADDR-POLS
  MOVE TRUE TO #UNDL
  move 'Y' to #undel                                                  /* vt2 \/
  /* vt2  /\
END-IF
*
PERFORM CALC-POL-NUM
*
IF #WL
  IF #CALC-X
    ADD 1 TO #TYP-X
  ELSE
    ADD 1 TO #TYP-O
  END-IF
END-IF
*
RESET #PLAN-A3                                         /* DW15/DW25
* IF (#DATA-PLAN-A1 GE 'U') AND (#DATA-PLAN-A1 LE 'Z')     /* YK1
IF F-LT2-TRUE(<#DATA-PLAN>)                            /* YK1
  IF #DATA-PLAN-N2 LT 10
    MOVE #DATA-PLAN-N2 TO #PLAN-N1
  ELSE
    MOVE #DATA-PLAN-N2 TO #PLAN-N2
  END-IF
ELSE
  MOVE #DATA-PLAN TO #PLAN-A3                              /* DW25
END-IF                                                     /* DW15
*
COMPRESS     /* beginning of output data file
*  #PLAN-A3  /* "WL" or PLAN (X) if term        /* (1)     /* DW15
  #PLAN-A3  /* Actual Plan or TERM YRS if LTII /* (1)     /* DW25
*  #DATA-PLAN                                   /* (1)     /* DW22
  #TAB ST-V.ID-NUMBER                          /* (2)
  #TAB #POL-NUM                                /* (3)
  INTO #OUT LEAVING NO          /* PM48
*                                                           /* vt2 \/
COMPRESS     /* beginning of output data file
  #PLAN-A3  /* Actual Plan or TERM YRS if LTII /* (1)
  #TAB ST-V.ID-NUMBER                          /* (2)
  #TAB #POL-NUM                                /* (3)
  INTO #OUT1 LEAVING NO                                     /* vt2 /\
*
* write 'line 2703' #out1 (al=78)                                                /* vt write
*
#POL-NUM-A   := #POL-NUM                                   /* PM49
#ID-NUMBER-A := ST-V.ID-NUMBER                             /* PM49
#OWNER-CN-A  := F-OWNER-CN(<#POL-NUM-A,#ID-NUMBER-A>)      /* PM49
#OWNER-CN    := VAL(#OWNER-CN-A)                           /* PM49
RESET #PAPERLESS #no-paper                                 /* PM49                   /* vt2
FIND (1) WEB-V WITH WEB-V.MEMBER-CN = #OWNER-CN            /* PM49
  IF WEB-V.ANNS-DELIVERY-FLAG = 'W'                        /* PM49
    #PAPERLESS := TRUE                                     /* PM49
    #no-paper := 'Y'                                                                 /* vt2

  END-IF                                                   /* PM49
END-FIND                                                   /* PM49
*
perform get-bene-date                                                               /* vt2
*
PERFORM BUILD-DATA
*

PERFORM BUILD-BENES
*
PERFORM XML-DETAIL-RECORDS                     /* DW37
*
* IF #EXTRACT-125-A NE ' '                                 /* PM48
*                                                          /* PM48
*   ADD 1 TO #I6                                           /* PM48
*   IF #I6 GT 11                                           /* PM48
*     WRITE #DATA-CN 'big benes over 11 X 125"s' #I6       /* PM48
*   END-IF                                                 /* PM48
*   IF #I6 GT 14                                           /* PM48
*     WRITE #DATA-CN 'Exceeds 14 segments will abend' #I6  /* PM48
*   END-IF                                                 /* PM48
*   MOVE #EXTRACT-125-A TO #EXTRACT-125-X (#I6)            /* PM48
*                                                          /* PM48
*   IF #EXTRACT-125-B NE ' '                               /* PM48
*     ADD 1 TO #I6                                         /* PM48
*     MOVE #EXTRACT-125-B TO #EXTRACT-125-X (#I6)          /* PM48
*   END-IF                                                 /* PM48
*   RESET #EXTRACT-250                                     /* PM48
* END-IF                                                   /* PM48
*
IF #DATA-MEC-IND = 'Y'
  ADD 1 TO #MEC-OUT
END-IF
*
IF #DATA-NIO-IND = 'Y'
  ADD 1 TO #NIO-OUT
END-IF
*
IF #DATA-CAP-IND = 'Y'
  ADD 1 TO #CAP-OUT
END-IF
*
IF #DATA-RPU-IND = 'Y'
  ADD 1 TO #RPU-OUT
END-IF
*
IF #DATA-POC-IND = 'Y'
  ADD 1 TO #POC-OUT
END-IF
*
* IF ADDRESS-CHG-CODE = 'W'                                  /* JT1
FIND AR-V WITH CONTACT-ID = ST-V.MEMBER-CONTACT-ID           /* JT1
  ACCEPT IF ADDR-TYPE-CD = 'P'                         /* JT1
  IF NOT(ADDRESS-IS-CERTIFIED (< AR-V.ADDRESS-POOL-ID >))        /* JT1  /* vt2
    ADD 1 TO #UNCERT-OUT
  END-IF
  ESCAPE BOTTOM                                              /* JT1
END-FIND                                                     /* JT1
*
ADD 1 TO #RECS-OUT
*
IF #TERM
*   RESET #FOUND-SEL                     /* DW33                 /* vt2 \/
*     #select
*   FOR #I2 1 TO #NUM-SEL
*     IF ST-V.ID-NUMBER-A = #SELECT-CN (#I2)
*       MOVE TRUE TO #FOUND-SEL
*       move 'Y' to #select
*       ESCAPE BOTTOM
*     END-IF
*   END-FOR
* *
*   if st-v.military-service = 'EMP'
*     move 'Y' to #select
*   end-if                                                       /* vt2 /\
*
  IF  (ST-V.MILITARY-SERVICE = 'EMP')   /* DW33
*   OR (ST-V.PROCESS-IND = 'O')         /* Removed 1/27/2009      DW44
      OR #FOUND-SEL
    WRITE WORK FILE 11 VARIABLE #OUT    /* Selected Term          PM48
*    write work 18 variable #out1                                                      /* vt2 removed becouse of duplicate extarction
    ADD 1 TO #SEL-TM-OUT
  END-IF
*
* IF  (#DATA-OPT-IND = 'Y')    /* DW26
*  IF  (#DATA-PLAN    = 'AL')
*    WRITE WORK FILE 11 #EXTRACT        /* MISC/Out term
*    ADD 1 TO #MISC-TM-OUT
*  ELSE
  IF #PAPERLESS                         /* PM49
    WRITE WORK FILE 17 VARIABLE #OUT    /* PM49
    write work 18 variable #out1                                                      /* vt2
    ADD +1 TO #PAPERLESS-TM             /* PM49
  ELSE                                  /* PM49
    IF #UNDL
      WRITE WORK FILE 3 VARIABLE #OUT   /* undeliverable term     PM48
      write work 18 variable #out1                                                      /* vt2
      ADD 1 TO #UNDL-TM-OUT
    ELSE
      IF #DATA-CN NE #LAST-CN
*        IF   (MILITARY-STATUS = 'A' OR = 'R')   /* DW24/DW30/DW34
*          AND ((MILITARY-SERVICE = MASK ('A'))             /* DW30
*          OR  (MILITARY-SERVICE = MASK ('F')))             /* DW30
*         AND (ALOT-AMT GT 0)
*         AND (ALOT-CHG-AUTH NE 'Y')
*          WRITE WORK FILE 13 #EXTRACT     /* term 1st pol (Alot Auth = 'N')
*          ADD 1 TO #TM-1ST-OUT-ALOT
*        ELSE
        WRITE WORK FILE 5 VARIABLE #OUT  /* term 1st pol          PM48

        write work 18 variable #out1                                                      /* vt2
        ADD 1 TO #TM-1ST-OUT
*        END-IF
      ELSE
        WRITE WORK FILE 7 VARIABLE #OUT    /* term subsequent pols  PM48

        write work 18 variable #out1                                                      /* vt2
        ADD 1 TO #TM-OTH-OUT
      END-IF
    END-IF
  END-IF                                /* PM49
ELSE
*   RESET #FOUND-SEL                      /* DW33                   /* vt2 \/
*     #select
*   FOR #I2 1 TO #NUM-SEL
*     IF ST-V.ID-NUMBER-A = #SELECT-CN (#I2)
*       MOVE TRUE TO #FOUND-SEL
*       move 'Y'  to #select
*       ESCAPE BOTTOM
*     END-IF
*   END-FOR
* *
*   if (ST-V.MILITARY-SERVICE = 'EMP')
*     move 'Y' to #select
*   end-if                                                           /* vt2 /\
*

  IF  (ST-V.MILITARY-SERVICE = 'EMP')                 /* DW33
*   OR (ST-V.PROCESS-IND = 'O')         /* Removed 1/27/2009        DW44
      OR #FOUND-SEL
    WRITE WORK FILE 10 VARIABLE #OUT    /* Selected W/L  PM48
*     write work 18 variable #out1                                                /* vt2 removed as it is duplicated
    ADD 1 TO #SEL-WL-OUT
  END-IF
*
* IF  (#DATA-OPT-IND = 'Y')    /* DW26
*  IF  (#DATA-PLAN    = 'AL')
*    WRITE WORK FILE 10 #EXTRACT        /* MISC/Out W/L
*    ADD 1 TO #MISC-WL-OUT
*  ELSE
  IF #PAPERLESS                         /* PM49
    WRITE WORK FILE 16 VARIABLE #OUT    /* PM49
    write work 18 variable #out1                                                      /* vt2
    ADD +1 TO #PAPERLESS-WL             /* PM49
  ELSE                                  /* PM49
    IF #UNDL
      WRITE WORK FILE 2 VARIABLE #OUT   /* undeliverable W/L
      write work 18 variable #out1                                                      /* vt2
      ADD 1 TO #UNDL-WL-OUT
    ELSE
      IF #DATA-CN NE #LAST-CN
*        IF   (MILITARY-STATUS = 'A' OR = 'R')   /* DW24/DW30/DW34
*         AND ((MILITARY-SERVICE = MASK ('A'))             /* DW30
*          OR  (MILITARY-SERVICE = MASK ('F')))            /* DW30
*         AND (ALOT-AMT GT 0)
*         AND (ALOT-CHG-AUTH NE 'Y')
*          WRITE WORK FILE 12 #EXTRACT      /* W/L 1st pol (Alot Auth = 'N')
*          ADD 1 TO #WL-1ST-OUT-ALOT
*        ELSE
        WRITE WORK FILE 4 VARIABLE #OUT   /* W/L 1st pol         PM48
        write work 18 variable #out1                                                      /* vt2
        ADD 1 TO #WL-1ST-OUT
*       END-IF
      ELSE
        WRITE WORK FILE 6 VARIABLE #OUT     /* W/L subsequent pol  PM48
        write work 18 variable #out1                                                      /* vt2
        ADD 1 TO #WL-OTH-OUT
      END-IF
    END-IF
  END-IF                                    /* PM49
END-IF

*
RESET #OUT  /* PM48
reset #out1                                    /* vt2
*
MOVE #DATA-CN TO #LAST-CN
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-DATA
* * * * * * * * * * * * * * * *
*
RESET #FOUND-SEL                                                /* VT2 \/
  #SELECT
FOR #I2 1 TO #NUM-SEL
  IF ST-V.ID-NUMBER-A = #SELECT-CN (#I2)
    MOVE TRUE TO #FOUND-SEL
    MOVE 'Y' TO #SELECT
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF ST-V.MILITARY-SERVICE = 'EMP'
  MOVE 'Y' TO #SELECT
END-IF                                                          /* VT2 /\
*
MOVE #EXT-STREET TO #STREET-TO-USE    /* DW17 PM47
RESET #INFO-TO-RIGHT #I7
* FOR #I2 22 TO 8 STEP -1             /* DW17
FOR #I2 62 TO 8 STEP -1               /* PM47
  IF   (#TTEE-X (#I2 + 0) = 'T')
      AND (#TTEE-X (#I2 + 1) = 'T')
      AND (#TTEE-X (#I2 + 2) = 'E')
      AND (#TTEE-X (#I2 + 3) = 'E')
      AND ((#I2 = 22)
      OR  ((#TTEE-X (#I2 + 4) = ' ' OR = '/')
      AND  (#TTEE-X (#I2 - 1) = ' ' OR = ',')))
    IF #INFO-TO-RIGHT
      WRITE ST-V.ID-NUMBER 'A Info to right of TTEE=' #STREET-TO-USE
      COMPUTE #I4 = #I2 + 4   /* Shift from pos
      FOR #I3 1 TO 70                  /* PM47
        IF #I7 LT #I4
          ESCAPE BOTTOM
        END-IF
*
        MOVE #TTEE-X (#I7) TO #TTEE-X (#I7 + 5)
        RESET #TTEE-X (#I7)
        SUBTRACT 1 FROM #I7
      END-FOR
    END-IF
*
    IF #TTEE-X (#I2 - 1) NE ' '
      RESET #TTEE-X (#I2)
      ADD 1 TO #I2
    END-IF
*
    MOVE 'T' TO #TTEE-X (#I2 + 0)    /* DW17
    MOVE 'R' TO #TTEE-X (#I2 + 1)
    MOVE 'U' TO #TTEE-X (#I2 + 2)
    MOVE 'S' TO #TTEE-X (#I2 + 3)
    MOVE 'T' TO #TTEE-X (#I2 + 4)
    MOVE 'E' TO #TTEE-X (#I2 + 5)
    MOVE 'E' TO #TTEE-X (#I2 + 6)
    IF #INFO-TO-RIGHT
      WRITE ST-V.ID-NUMBER 'B Info to right of TTEE=' #STREET-TO-USE
    END-IF
    ESCAPE BOTTOM
  END-IF
*
  IF #TTEE-X (#I2 + 4) NE ' '
    MOVE TRUE TO #INFO-TO-RIGHT
    IF #I7 = 0
      COMPUTE #I7 = #I2 + 4  /* Rightmost pos
    END-IF
  END-IF
END-FOR
*
IF #COUNTRY-CODE NE 'US'                                     /* PM50
  RESET #EXT-CITY #EXT-STATE #ZIP-CODE-5-A #ZIP-CODE-4-A     /* PM50
*
  COMPRESS #OUT                                              /* PM50
    #TAB #OWNER-CN                                            /* PM50
    #TAB #OWNER    /* owner (usually insured)                 /* PM50
    #TAB #STREET-TO-USE #TAB #EXT-STREET-2                    /* PM50
    #TAB #EXT-CITY #TAB #THIRD-ADDRESS #TAB #ZIP-CODE-5-A     /* PM50
    INTO #OUT LEAVING NO            /* PM50
*
  COMPRESS #OUT1                                                                  /* vt2  \/
    #TAB #OWNER-CN
    #TAB #OWNER    /* owner (usually insured)
    #TAB #STREET-TO-USE #TAB #EXT-STREET-2
    #TAB #EXT-CITY #TAB #THIRD-ADDRESS #TAB #ZIP-CODE-5-A
    INTO #OUT1 LEAVING NO                                                         /* vt2  /\
ELSE                                                         /* PM50
  COMPRESS #OUT                                              /* PM48
    #TAB #OWNER-CN                                          /* PM49
    #TAB #OWNER    /* owner (usually insured)               /* (4)
    #TAB #STREET-TO-USE #TAB #EXT-STREET-2                  /* (5/6)   /* DW17  PM47
    #TAB #EXT-CITY #TAB #EXT-STATE #TAB #ZIP-CODE-5-A       /* (7/8/9)      PM47
    INTO #OUT LEAVING NO            /* PM48
*                                                                              /* vt2   \/
  COMPRESS #OUT1
    #TAB #OWNER-CN
    #TAB #OWNER    /* owner (usually insured)
    #TAB #STREET-TO-USE #TAB #EXT-STREET-2
    #TAB #EXT-CITY #TAB #EXT-STATE #TAB #ZIP-CODE-5-A
    INTO #OUT1 LEAVING NO                                                       /* vt2  /\

  MOVE #ZIP-CODE-5-A  TO #XML-ZIP-CODE                       /* DW37
  IF #ZIP-CODE-4 NE 0
    COMPRESS #OUT '-' #ZIP-CODE-4-A                          /*(9b) PM48
      INTO #OUT LEAVING NO         /* PM48
*                                                                            /* vt2 \/
    compress #out1 '-' #zip-code-4-a
      into #out1 leaving no                                                  /* vt2 /\
    COMPRESS #XML-ZIP-CODE '-' #ZIP-CODE-4-A INTO #XML-ZIP-CODE LEAVING NO  /* DW37
  END-IF
END-IF                                                       /* PM50

* PERFORM CHECK-OVERFLOW                                     /* PM48
*
MOVE ST-V.ISSUE-DATE-MM (#I1)  TO #I3
*
IF PLAN (#I1) = 'RT'             /* DW23
  MOVE #DATA-RT-ORIG-ISS-AGE TO #ISS-AGE
ELSE
  MOVE ISSUE-AGE (#I1) TO #ISS-AGE
END-IF
*
COMPRESS #OUT                                                /* PM48
  #TAB ST-V.ISSUE-DATE-DD (#I1)  /* to make day accessable  /* (10)
  #TAB #MON (#I3) '-' ST-V.ISSUE-DATE-YYYY (#I1)            /* (11)
  #TAB #ISS-AGE                                             /* (12)  /* DW23
  INTO #OUT LEAVING NO            /* PM48
*
COMPRESS #OUT1                                                      /* vt2
  #TAB ST-V.ISSUE-DATE-DD (#I1)  /* to make day accessable  /* (10)
  #TAB #MON (#I3) '-' ST-V.ISSUE-DATE-YYYY (#I1)            /* (11)
  #TAB #ISS-AGE                                             /* (12)  /* DW23
  INTO #OUT1 LEAVING NO                                                /* vt2
*
COMPRESS #MON(#I3) ST-V.ISSUE-DATE-YYYY(#I1) INTO #XML-ISS-MON-YYYY WITH '-' /*DW38
*
IF #OWNER NE #INSURED
  ADD 1 TO #OWN-DIFF-INS
END-IF
*
COMPRESS #OUT                                                /* PM48
  #TAB #INSURED INTO #OUT LEAVING NO                         /* (13) PM48
compress #out1 #tab #insured  into #out1 leaving no                         /* vt2
*
* PERFORM CHECK-OVERFLOW                                     /* PM48
*
MOVE EDITED #DATA-CURR-DB (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-CURR-DB                             /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* curr-db (14)
  INTO #OUT LEAVING NO            /* PM48
compress #out1                                                 /* vt2 \/
  #tab #amt-13
  into #out1 leaving no                                        /* vt2  /\
*
IF #TERM                /* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<     /* DW2
  COMPRESS #OUT                                              /* PM48
    #TAB #DATA-NIO-IND                                       /* (15)
    #TAB #DATA-CAP-IND                                       /* (16)
    INTO #OUT LEAVING NO           /* PM48
*                                                                                           /* vt2 \/
  compress #out1 #TAB #tab #tab #tab #tab #tab #tab #tab #tab into #out1 leaving no /* for 15 - 23
  compress #out1 #TAB #tab #tab #tab #tab #tab #tab #tab   into #out1 leaving no /* for 24 -32
  compress #out1
    #tab #DATA-NIO-IND into #out1 leaving no
  compress #out1 #tab #data-mec-ind  into #out1 leaving no                                  /*  vt2 /\ eqvivalent to (32)from whole life

*

  MOVE EDITED #DATA-ANN-PREM (EM=ZZZ,ZZ9.99) TO #AMT-13
  PERFORM AMT-SET
  MOVE #AMT-13-XML TO #XML-ANN-PREM                          /* DW37
  COMPRESS #OUT                                              /* PM48
    #TAB #AMT-13                                            /* ann-prem (17)
    INTO #OUT LEAVING NO            /* PM48
  compress #out1                                                      /* vt2 \/
    #tab #amt-13
    into #out1 leaving no                                              /* vt2 /\
*
  compress #out1                                                       /* vt2 \/
    #tab #DATA-CAP-IND
    into #out1 leaving no
  compress #out1 #tab #tab #tab #tab #tab into #out1 leaving no     /* vt2 /\
*
  MOVE EDITED #DATA-DUES-PAID (EM=-ZZ,ZZ9.99) TO #AMT-13     /* DW10
  PERFORM AMT-SET
  MOVE #AMT-13-XML TO #XML-DUES-PAID                         /* DW37
  COMPRESS #OUT                                              /* PM48
    #TAB #AMT-13                                            /* dues-paid (18)
    #TAB #DATA-OPT-IND                                      /* OPT-OUT IND (19)
    INTO #OUT LEAVING NO            /* PM48
  compress #out1                                                     /* vt2 \/
    #tab #amt-13
    #tab #data-opt-ind into #out1 leaving no                         /* vt2 /\
* COMPUTE #DATA-CAP-P-I = #DATA-CAP-P-I * -1  /* Sign chg removed 12/2008 DW42
  MOVE EDITED #DATA-CAP-P-I (EM=Z,ZZZ,ZZ9.99) TO #AMT-13     /* - removed /* DW42
  PERFORM AMT-SET
  MOVE #AMT-13-XML TO #XML-CAP-P-I                           /* DW37
  COMPRESS #OUT                                              /* PM48
    #TAB #AMT-13                                            /* Total Prin/Int (20)
    INTO #OUT LEAVING NO          /* PM48
  compress #out1                                                    /* vt2 \/
    #tab #amt-13
    into #out1 leaving no
  compress #out1
    #tab #data-lvs
    #tab #data-sas
    #tab #data-oo-cr
    #tab #data-old-new-next
    into #out1 leaving no
*
*  PERFORM GET-BENE-DATE
*
  compress #out1 #tab
    #exp-date        #tab   /* (45-2)
    #bene-last-upd-a #tab   /* (45-3)
    #plan-type       #tab   /* (45-4)
    #select          #tab   /* (45-5)
    #undel           #tab   /* (45-6)
    #no-paper             /* (45-7)
    into #out1 leaving no                                            /* vt2 /\
*
* PERFORM CHECK-OVERFLOW                                     /* PM48
  ESCAPE ROUTINE
END-IF
*
MOVE EDITED #INITIAL-DB (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-INITIAL-DB                          /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* initial-db (15)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
*
MOVE EDITED #DATA-DB-GROWTH (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-DB-GROWTH                           /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* db-growth (16)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
MOVE EDITED #DATA-TPP (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-TPP                                 /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* prems-paid (17)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13 into #out1 leaving no                         /* vt2
*
MOVE EDITED #DATA-CSV-GROWTH (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-CSV-GROWTH                          /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* csv-growth (18)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13 into #out1 leaving no                         /* vt2
*
MOVE EDITED #DATA-CURR-CSV (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-CURR-CSV                            /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* curr-csv (19)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
*
* PERFORM CHECK-OVERFLOW                                     /* PM48
*
MOVE EDITED #DATA-PRIOR-YE-CSV (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-PRIOR-YE-CSV                        /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* beg-of-yr-csv (20)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
*
MOVE EDITED #DATA-BEG-OF-YR-DB (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-BEG-OF-YR-DB                        /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* beg-of-yr-db (21)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
*
MOVE EDITED #DATA-YTD-PREMS (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-YTD-PREMS                           /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* ytd-prems-paid (22)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13 into #out1 leaving no                         /* vt2
MOVE EDITED #DATA-YTD-COI (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-YTD-COI                             /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* ytd-coi-acq-mnt paid (23)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
*
MOVE EDITED #DATA-YTD-EQU (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-YTD-EQU                             /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* YTD Equity (24)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
*
MOVE EDITED #DATA-YTD-INT (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-YTD-INT                             /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* ytd-interest-paid (25)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
*
* below added 12/2001   kec
* PERFORM CHECK-OVERFLOW                                     /* PM48
COMPUTE #DATA-P-I = #DATA-P-I * -1                           /* DW20
MOVE EDITED #DATA-P-I (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-P-I                                 /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* Total POL Prin/Int (26)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
*
MOVE EDITED #DATA-AVL-CSV  (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-AVL-CSV                             /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* CSV - P/I (27)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13 into #out1 leaving no                         /* vt2
*
MOVE EDITED #DATA-AVL-DB (EM=-Z,ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-AVL-DB                              /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* DB - P/I (28)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
COMPRESS #OUT                                                /* PM48
  #TAB #DATA-RPU-IND                                        /* (29)
  #TAB #DATA-POC-IND                                        /* (30)
  #TAB #DATA-UPP-IND                                        /* (31)
  #TAB #DATA-NIO-IND                                        /* (32)
  #TAB #DATA-MEC-IND                                        /* (33)
  #TAB #DATA-CAP-IND                                        /* (34)
  INTO #OUT LEAVING NO            /* PM48
*                                                                     /* vt2 \/
COMPRESS #OUT1
  #TAB #DATA-RPU-IND
  #TAB #DATA-POC-IND
  #TAB #DATA-UPP-IND
  #TAB #DATA-NIO-IND
  #TAB #DATA-MEC-IND
  INTO #OUT1 LEAVING NO
compress #OUT1 #tab INTO #OUT1 LEAVING NO                      /* for #ann-prem-lbl
COMPRESS #OUT1 #TAB #DATA-CAP-IND
  INTO #OUT1 LEAVING NO                                                /* vt2 /\
*
*
* PERFORM CHECK-OVERFLOW                                     /* PM48
*
IF #DATA-SVC-FEE = 0
  RESET #XML-SVC-FEE                                         /* DW37
  COMPRESS #OUT                                              /* PM48
    #TAB                                                      /* svc-fee (35)
    INTO #OUT LEAVING NO             /* PM48
  compress #out1 #tab  into #out1 leaving no                         /* vt2
ELSE
  COMPUTE #DATA-SVC-FEE = #DATA-SVC-FEE * -1                 /* DW20
  MOVE EDITED #DATA-SVC-FEE (EM=-ZZ9.99) TO #AMT-13
  PERFORM AMT-SET
  MOVE #AMT-13-XML TO #XML-SVC-FEE                           /* DW37
  COMPRESS #OUT                                              /* PM48
    #TAB #AMT-13                                            /* svc-fee (35)
    INTO #OUT LEAVING NO          /* PM48
  compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
END-IF
*
COMPUTE #DATA-COI = #DATA-COI * -1                           /* DW20
MOVE EDITED #DATA-COI (EM=-ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-COI                                 /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* COI portion (36)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13 into #out1 leaving no                         /* vt2
COMPUTE #DATA-ADMIN = #DATA-ADMIN * -1                       /* DW20
MOVE EDITED #DATA-ADMIN (EM=-ZZZ,ZZ9.99) TO #AMT-13
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-ADMIN                               /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* admin portion (37)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
IF #DATA-BEG-OF-YR-DB = 0     /* Must be current policy      /*DW16
  COMPUTE #CURR-DB-GROWTH = #DATA-CURR-DB - #INITIAL-DB      /*DW16
ELSE                                                         /*DW16
  COMPUTE #CURR-DB-GROWTH = #DATA-CURR-DB - #DATA-BEG-OF-YR-DB /*DW4
END-IF
*
IF   (#CURR-DB-GROWTH LT 0)
    AND (#DATA-RPU-IND NE 'Y')
  WRITE #DATA-CN #DATA-ISS-DT #DATA-PLAN 'Negative Curr DB growth'
END-IF
*
MOVE EDITED #CURR-DB-GROWTH (EM=-ZZZ,ZZ9.99) TO #AMT-13      /* DW4
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-CURR-DB-GROWTH                      /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* CURR DB GROWTH (38)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13 into #out1 leaving no                         /* vt2
*
* PERFORM CHECK-OVERFLOW                                     /* PM48
*
COMPUTE #DATA-ACQ-COST = #DATA-ACQ-COST * -1                 /* DW20
MOVE EDITED #DATA-ACQ-COST (EM=-ZZZ,ZZ9.99) TO #AMT-13       /* DW10
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-ACQ-COST                            /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* ACQUITION COST (39)
  INTO #OUT LEAVING NO            /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
*
MOVE EDITED #DATA-DUES-PAID (EM=-ZZ,ZZ9.99) TO #AMT-13       /* DW10
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-DUES-PAID                           /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* dues-paid   (40)
  #TAB #DATA-OPT-IND                                        /* OPT-OUT IND (41)
  INTO #OUT LEAVING NO                                    /* PM48
*
compress #out1 #tab #amt-13                                                /* vt2 \/
  #tab #data-opt-ind
  into #out1 leaving no                                                    /* vt2 /\
*
* COMPUTE #DATA-CAP-P-I = #DATA-CAP-P-I * -1                 /* Sign chg removed 12/2008 DW42
MOVE EDITED #DATA-CAP-P-I (EM=Z,ZZZ,ZZ9.99) TO #AMT-13       /* - removed DW42
PERFORM AMT-SET
MOVE #AMT-13-XML TO #XML-CAP-P-I                             /* DW37
COMPRESS #OUT                                                /* PM48
  #TAB #AMT-13                                              /* Total CAP Prin/Int (42)
  INTO #OUT LEAVING NO                                    /* PM48
compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
*
IF #DATA-LVS = 0
  RESET #XML-LVS                                             /* DW37
  COMPRESS #OUT                                              /* PM48
    #TAB                                                      /* SAS (43)
    INTO #OUT LEAVING NO             /* PM48
  compress #out1 #tab   into #out1 leaving no                         /* vt2
ELSE
  COMPUTE #DATA-LVS = #DATA-LVS * -1                         /* DW32
  MOVE EDITED #DATA-LVS (EM=-ZZ9.99) TO #AMT-13              /* DW27
  PERFORM AMT-SET
  MOVE #AMT-13-XML TO #XML-LVS                               /* DW37
  COMPRESS #OUT                                              /* PM48
    #TAB #AMT-13                                              /* Living Services (43)
    INTO #OUT LEAVING NO                                   /* PM48
  compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
END-IF
*
IF #DATA-SAS = 0
  RESET #XML-SAS                                             /* DW37
  /* DW32
  COMPRESS #OUT                                              /* PM48
    #TAB                                                      /* SAS (44)
    INTO #OUT LEAVING NO             /* PM48
  compress #out1 #tab   into #out1 leaving no                         /* vt2
ELSE
  COMPUTE #DATA-SAS = #DATA-SAS * -1                         /* DW32
  MOVE EDITED #DATA-SAS (EM=-ZZ9.99) TO #AMT-13              /* DW27/DW32
  PERFORM AMT-SET
  MOVE #AMT-13-XML TO #XML-SAS                               /* DW37
  COMPRESS #OUT                                              /* PM48
    #TAB #AMT-13                                            /* Survivor Services (44)
    INTO #OUT LEAVING NO                                 /* PM48
  compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
END-IF
*
IF #DATA-OO-CR = 0
  RESET #XML-OO-CR                                           /* DW37
  COMPRESS #OUT                                              /* PM48
    #TAB                                                      /* OO-CR (45)
    INTO #OUT LEAVING NO             /* PM48
  compress #out1 #tab   into #out1 leaving no                         /* vt2
ELSE
  COMPUTE #DATA-OO-CR = #DATA-OO-CR * -1                     /* DW32
  MOVE EDITED #DATA-OO-CR (EM=-ZZ9.99) TO #AMT-13            /* DW27
  PERFORM AMT-SET
  MOVE #AMT-13-XML TO #XML-OO-CR                             /* DW37
  COMPRESS #OUT                                              /* PM48
    #TAB #AMT-13                                            /* Opt-Out-Credit (45)
    INTO #OUT LEAVING NO                                 /* PM48
  compress #out1 #tab #amt-13  into #out1 leaving no                         /* vt2
END-IF
*
COMPRESS #OUT #TAB #DATA-OLD-NEW-NEXT INTO #OUT LEAVING NO   /* PM45 PM48  (45-1)
* compress #out #tab
*   #exp-date      #tab                                                                 /* vt2 \/
* *                        #bene-last-upd #tab
*   #plan-type     #tab
*   #select        #tab
*   #undel         #tab
*   #no-paper
*   into #OUT  LEAVING no                                                                /* vt2 /\
* PERFORM GET-BENE-DATE                                                                  /* VT2
* WRITE '=' #bene-last-upd
compress #out1 #TAB #DATA-OLD-NEW-NEXT into #out1 leaving no                           /* vt2
compress #out1 #tab
  #exp-date        #tab   /* (45-2)                                                      /* vt2 \/
  #bene-last-upd-a #tab   /* (45-3)
  #plan-type       #tab   /* (45-4)
  #select          #tab   /* (45-5)
  #undel           #tab   /* (45-6)
  #no-paper             /* (45-7)
  into #OUT1 LEAVING no                                                                 /* vt2 /\
*
* PERFORM CHECK-OVERFLOW                                     /* PM48
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-BENES
* * * * * * * * * * * * * * *
*
##CGA-ISN := #ST-ISN                                         /* DW41
##CGA-SCR-COMMAND := 'BD'
##CGA-SCR-ID := ##CGA-ID := ST-V.ID-NUMBER
COMPRESS 'SH' #I1 INTO ##CGA-SCR-SUFFIX LEAVING NO         
##POLICY-PRINT := FALSE                                      /* DW43
STACK TOP DATA #PARM-BENEFICIARY-INFORMATION
FETCH RETURN 'E4700PBD'
*
IF *DATA NE 0
  INPUT #BENEFICIARY-INFORMATION
  RELEASE STACK
END-IF
*                                                            /* DW41
*
* Below replaced by above 11/2008
* MOVE #ST-ISN TO #CGA-ISN                                   /* DW1
* MOVE 'BD'           TO #CGA-SCR-COMMAND                    /* DW1
* MOVE ST-V.ID-NUMBER TO #CGA-SCR-ID #CGA-ID
* MOVE ST-V.ID-NUMBER-A TO #CGA-ID-G
* COMPRESS 'SH' #I1 INTO #CGA-SCR-SUFFIX LEAVING NO
* FETCH RETURN 'E4700PBD'
*
RESET #NUM-BENE-COLS                                         /* DW7
RESET #XML-BENES (*)                                         /* DW37
* FIND NT-V WITH ID-NUMBER = 800117                          /* DW1
*  write 'just read' st-v.id-number nt-cn nt-iss-dt nt-plan 'datacn=' #data-cn
IF   (NT-CN       NE #DATA-CN)
    OR  (NT-ISS-DT   NE #DATA-ISS-DT)
    OR  (NT-PLAN     NE #DATA-PLAN)
  RESET NT-BENE-SHO (*)                                    /* DW10
  COMPRESS 'Upon the death of the named insured, I direct that the'
    'benefit be paid to' INTO NT-BENE-SHO (1)       /* DW10
  MOVE 'the Owner"s ESTATE' TO NT-BENE-SHO (2)             /* DW10
  MOVE 2 TO NT-NUM-LINES                                   /* DW10
*   WRITE #DATA-CN #DATA-ISS-DT #DATA-PLAN
*       'NT 800117 no match pol- Finalized Bene Missing'
  COMPRESS #DATA-CN                                        /* DW3
    #TAB #DATA-ISS-DT
*     #TAB NAME                                              /* PM47
    #TAB #EXT-FORMATED-NAME                                /* PM47
    INTO #MISSING-BENES LEAVING NO
  WRITE WORK FILE 9 #MISSING-BENES                         /* DW3
  ADD 1 TO #MISS-BENES
END-IF
*
RESET #FOUND-1ST-LINE                                             /* vt2
FOR #I5 1 TO NT-NUM-LINES       /* WL=43 thru 60 TM=21 thru 38
  IF NT-BENE-SHO (#I5) = MASK('Upon the death of the named insured')
    MOVE TRUE TO #FOUND-1ST-LINE
  END-IF
*
  IF NOT #FOUND-1ST-LINE
    ESCAPE TOP
  END-IF
*
  IF   (NT-BENE-SHO (#I5) = ' ')
      AND (#I5 LT 40)
      AND (NT-BENE-SHO (#I5 + 1) = ' ')
    ESCAPE BOTTOM
  END-IF
*
*                     compress #out1 #tab #bene-lst-upd-a into #out1 leaving no
*
  PERFORM BUILD-BENE-TEXT-LINES
END-FOR
* END-FIND
*
COMPUTE #I5 = #NUM-BENE-COLS + 1                             /* DW7
FOR #I7 #I5 TO 18   /* FILL up the 18 slots                  /* DW7
  COMPRESS #OUT #TAB INTO #OUT LEAVING NO                    /* PM48
  compress #out1 #tab into #out1 leaving no                                /* vt2
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-BENE-TEXT-LINES
* * * * * * * * * * * * * * * * * *
*
IF  (NT-BENE-SHO-1ST-1 (#I5) = '~')           /* raw new format bene data  DW21
    OR (NT-BENE-SHO      (#I5) = MASK ('      ')) /* raw regular bene data
  COMPRESS #OUT #TAB NT-BENE-SHO-AFTER-1 (#I5)                 /* DW41 PM48
    INTO #OUT LEAVING NO                                     /* PM48
  compress #out1 #tab nt-bene-sho-after-1 (#i5)                       /* vt2
    into #out1 leaving no                                              /* vt2
  ADD 1 TO #NUM-BENE-COLS                                      /* DW7
  IF #NUM-BENE-COLS GT 18
    WRITE #DATA-CN 'num bene lines=' #NUM-BENE-COLS
  END-IF                                                        /*DW37
  MOVE NT-BENE-SHO-AFTER-1 (#I5) TO #XML-BENES (#NUM-BENE-COLS) /* DW37 DW41
* PERFORM CHECK-OVERFLOW                                        /* PM48
ELSE
  COMPRESS #OUT #TAB NT-BENE-SHO (#I5)                          /* DW21 DW41 PM48
    INTO #OUT LEAVING NO                                      /* PM48
*
  COMPRESS #OUT1 #TAB NT-BENE-SHO (#I5)                          /* vt2 \/
    INTO #OUT1 LEAVING NO
  ADD 1 TO #NUM-BENE-COLS                                       /* vt2 /\
*
  IF #NUM-BENE-COLS GT 18
    WRITE #DATA-CN 'num bene lines=' #NUM-BENE-COLS
  END-IF                                                        /*DW37
  MOVE NT-BENE-SHO (#I5) TO #XML-BENES (#NUM-BENE-COLS)         /* DW37 DW41
*   PERFORM CHECK-OVERFLOW                                      /* DW21 PM48
*   FOR #I7 1 TO 60                                             /* DW21
*     IF  (NT-BENE-SHO (#I5) = #BENE-TEXT (#I7))
*      OR (#BENE-TEXT (#I7) = ' ')
*       MOVE NT-BENE-SHO (#I5) TO #BENE-TEXT (#I7)
*       COMPRESS #EXTRACT-250 #TAB '~' #I7
*           INTO #EXTRACT-250 LEAVING NO
*       ADD 1 TO #NUM-BENE-COLS         /* DW7
*       ESCAPE BOTTOM
*     END-IF
*   END-FOR
END-IF
*
* IF #I7 GT 60    /* DW21
*   WRITE #DATA-CN #I7 'exceeds bene text tbl of 60' NT-BENE-SHO (#I5)
* END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-POL-NUM
* * * * * * * * * * * * * * * *
*
CALLNAT 'GPLNMSXX' #POL-NUM ST-V.ID-NUMBER #I1 /* build POL-#
*
END-SUBROUTINE
*
* * * * * * * * * * *
DEFINE LOWER-UPPER
* * * * * * * * *
*
FOR #I2 1 TO 23
  FOR #I3 1 TO 26
    IF #RANK-CONV-X (#I2) = #LOWER (#I3)
      MOVE #UPPER (#I3) TO #RANK-CONV-X (#I2)
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * *
DEFINE SUBROUTINE AMT-SET
* * * * * * * * * * * * *
*
MOVE LEFT #AMT-13 TO #AMT-13
*
IF #AMT-13 = '0.00'
  RESET #AMT-13
END-IF
*
MOVE #AMT-13 TO #AMT-13-XML            /* DW38
FOR #I12 1 TO 12     /* Clear , from field
  IF #AMT-13-XML-X (#I12) = ','
    FOR #I13 #I12 TO 12
      MOVE #AMT-13-XML-X (#I13 + 1) TO #AMT-13-XML-X (#I13)
    END-FOR
    RESET #AMT-13-XML-X (#I13)   /* Clear last Char
  END-IF
END-FOR                               /* END DW38
* COMPRESS '$' #AMT-13 INTO #AMT-13 LEAVING NO  /* DW5
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE XML-HEADER-RECORDS     /* DW37
* * * * * * * * * * * * * *
*
* Create XML Header Records
*
MOVE *DATN TO #YYYYMMDD
COMPRESS #MM-A #DD-A #YYYY-A INTO #DATN-DISP WITH '/'
MOVE '<ns0:DALTransfer xmlns:ns0="http://DALSchema.Request">' TO #XML-REC
MOVE TRUE TO #WL
PERFORM WRITE-XML-FINAL
RESET #WL
PERFORM WRITE-XML-FINAL
*
COMPRESS '<TRANSFERDATE>' #DATN-DISP '</TRANSFERDATE>'
  INTO #XML-REC LEAVING NO
MOVE TRUE TO #WL
PERFORM WRITE-XML-FINAL
RESET #WL
PERFORM WRITE-XML-FINAL
*
MOVE EDITED #NUM-XML-WL (EM=ZZ,ZZZ) TO #DOC-TOT
MOVE LEFT #DOC-TOT TO #DOC-TOT
COMPRESS '<TOTALDOCUMENTS>' #DOC-TOT '</TOTALDOCUMENTS>'
  INTO #XML-REC LEAVING NO
MOVE TRUE TO #WL
PERFORM WRITE-XML-FINAL
*
MOVE EDITED #NUM-XML-TM (EM=ZZ,ZZZ) TO #DOC-TOT
MOVE LEFT #DOC-TOT TO #DOC-TOT
COMPRESS '<TOTALDOCUMENTS>' #DOC-TOT '</TOTALDOCUMENTS>'
  INTO #XML-REC LEAVING NO
RESET #WL
PERFORM WRITE-XML-FINAL
*
COMPRESS '<BATCHID>' '??' '</BATCHID>'
  INTO #XML-REC LEAVING NO
MOVE TRUE TO #WL
PERFORM WRITE-XML-FINAL
RESET #WL
PERFORM WRITE-XML-FINAL
*
MOVE '<DOCTYPE>AS07WL</DOCTYPE>' TO #XML-REC   /* DW38
MOVE TRUE TO #WL
PERFORM WRITE-XML-FINAL
MOVE '<DOCTYPE>AS07TM</DOCTYPE>' TO #XML-REC  /* DW38
RESET #WL
PERFORM WRITE-XML-FINAL
*
MOVE '<DOCUMENTS>' TO #XML-REC
MOVE TRUE TO #WL
PERFORM WRITE-XML-FINAL
RESET #WL
PERFORM WRITE-XML-FINAL
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE XML-DETAIL-RECORDS
* * * * * * * * * * * * * * * *
*
MOVE '<DOCUMENT>' TO #XML-REC
PERFORM WRITE-XML
COMPRESS '<' #XML-LBL (1) '>' #PLAN-A3 '</' #XML-LBL (1) '>' INTO #XML-REC LEAVING NO
PERFORM WRITE-XML
COMPRESS '<' #XML-LBL (2) '>' ST-V.ID-NUMBER '</' #XML-LBL (2) '>' INTO #XML-REC LEAVING NO
PERFORM WRITE-XML
COMPRESS '<POL-NUM>' #POL-NUM '</POL-NUM>' INTO #XML-REC LEAVING NO /* NOT POL-#
PERFORM WRITE-XML
MOVE #OWNER TO #XML-REC  /* Remove '&' from #owner
PERFORM RESET-XML-CHARS
COMPRESS '<' #XML-LBL (4) '>' #XML-REC '</' #XML-LBL (4) '>' INTO #XML-REC LEAVING NO
PERFORM WRITE-XML
MOVE #STREET-TO-USE TO #XML-REC  /* Remove '&' from #street-to-use
PERFORM RESET-XML-CHARS
COMPRESS '<' #XML-LBL (5) '>' #XML-REC '</' #XML-LBL (5) '>' INTO #XML-REC LEAVING NO
PERFORM WRITE-XML
*
IF #EXT-STREET-2 NE ' '            /* PM47
  MOVE #EXT-STREET-2 TO #XML-REC   /* Remove '&' from #street-2 PM47
  PERFORM RESET-XML-CHARS
  COMPRESS '<' #XML-LBL (6) '>' #XML-REC '</' #XML-LBL (6) '>' INTO #XML-REC LEAVING NO
  PERFORM WRITE-XML
END-IF
*
MOVE #EXT-CITY TO #XML-REC  /* Remove '&' from #city PM47
PERFORM RESET-XML-CHARS
COMPRESS '<' #XML-LBL (7) '>' #XML-REC '</' #XML-LBL (7) '>' INTO #XML-REC LEAVING NO
PERFORM WRITE-XML
COMPRESS '<' #XML-LBL (8) '>' #EXT-STATE '</' #XML-LBL (8) '>' INTO #XML-REC LEAVING NO    /* PM47
PERFORM WRITE-XML
COMPRESS '<' #XML-LBL (9) '>' #XML-ZIP-CODE '</' #XML-LBL (9) '>' INTO #XML-REC LEAVING NO
PERFORM WRITE-XML
COMPRESS '<' #XML-LBL (10) '>' ST-V.ISSUE-DATE-DD (#I1) '</' #XML-LBL (10) '>' INTO #XML-REC LEAVING NO
PERFORM WRITE-XML
COMPRESS '<' #XML-LBL (11) '>' #XML-ISS-MON-YYYY '</' #XML-LBL (11) '>' INTO #XML-REC LEAVING NO
PERFORM WRITE-XML
COMPRESS '<' #XML-LBL (12) '>' ST-V.ISSUE-AGE (#I1) '</' #XML-LBL (12) '>' INTO #XML-REC LEAVING NO
PERFORM WRITE-XML
COMPRESS '<' #XML-LBL (13) '>' #INSURED '</' #XML-LBL (13) '>' INTO #XML-REC LEAVING NO
PERFORM WRITE-XML
COMPRESS '<' #XML-LBL (14) '>' #XML-CURR-DB '</' #XML-LBL (14) '>' INTO #XML-REC LEAVING NO
PERFORM WRITE-XML
*
IF #WL
  ADD 1 TO #NUM-XML-WL
  COMPRESS '<' #XML-LBL (15) '>' #XML-INITIAL-DB '</' #XML-LBL (15) '>' INTO #XML-REC LEAVING NO
  PERFORM WRITE-XML
  COMPRESS '<' #XML-LBL (16) '>' #XML-DB-GROWTH '</' #XML-LBL (16) '>' INTO #XML-REC LEAVING NO
  PERFORM WRITE-XML
  COMPRESS '<' #XML-LBL (17) '>' #XML-TPP '</' #XML-LBL (17) '>' INTO #XML-REC LEAVING NO
  PERFORM WRITE-XML
  COMPRESS '<' #XML-LBL (18) '>' #XML-CSV-GROWTH '</' #XML-LBL (18) '>' INTO #XML-REC LEAVING NO
  PERFORM WRITE-XML
  COMPRESS '<' #XML-LBL (19) '>' #XML-CURR-CSV '</' #XML-LBL (19) '>' INTO #XML-REC LEAVING NO
  PERFORM WRITE-XML
  COMPRESS '<' #XML-LBL (20) '>' #XML-PRIOR-YE-CSV '</' #XML-LBL (20) '>' INTO #XML-REC LEAVING NO
  PERFORM WRITE-XML
  COMPRESS '<' #XML-LBL (21) '>' #XML-BEG-OF-YR-DB '</' #XML-LBL (21) '>' INTO #XML-REC LEAVING NO
  PERFORM WRITE-XML
*
  IF #XML-YTD-PREMS NE ' '
    COMPRESS '<' #XML-LBL (22) '>' #XML-YTD-PREMS '</' #XML-LBL (22) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-YTD-COI NE ' '    /* DW39
    COMPRESS '<' #XML-LBL (23) '>' #XML-YTD-COI '</' #XML-LBL (23) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-YTD-EQU NE ' '  /* DW39
    COMPRESS '<' #XML-LBL (24) '>' #XML-YTD-EQU '</' #XML-LBL (24) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-YTD-INT NE ' '
    COMPRESS '<' #XML-LBL (25) '>' #XML-YTD-INT '</' #XML-LBL (25) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-P-I NE ' '
    COMPRESS '<' #XML-LBL (26) '>' #XML-P-I '</' #XML-LBL (26) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  COMPRESS '<' #XML-LBL (27) '>' #XML-AVL-CSV '</' #XML-LBL (27) '>' INTO #XML-REC LEAVING NO
  PERFORM WRITE-XML
  COMPRESS '<' #XML-LBL (28) '>' #XML-AVL-DB '</' #XML-LBL (28) '>' INTO #XML-REC LEAVING NO
  PERFORM WRITE-XML
*
  IF #DATA-RPU-IND NE ' '
    COMPRESS '<' #XML-LBL (29) '>' #DATA-RPU-IND '</' #XML-LBL (29) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #DATA-POC-IND NE ' '
    COMPRESS '<' #XML-LBL (30) '>' #DATA-POC-IND '</' #XML-LBL (30) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #DATA-UPP-IND NE ' '
    COMPRESS '<' #XML-LBL (31) '>' #DATA-UPP-IND '</' #XML-LBL (31) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #DATA-NIO-IND NE ' '
    COMPRESS '<' #XML-LBL (32) '>' #DATA-NIO-IND '</' #XML-LBL (32) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #DATA-MEC-IND NE ' '
    COMPRESS '<' #XML-LBL (33) '>' #DATA-MEC-IND '</' #XML-LBL (33) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #DATA-CAP-IND NE ' '
    COMPRESS '<' #XML-LBL (34) '>' #DATA-CAP-IND '</' #XML-LBL (34) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-SVC-FEE NE ' '
    COMPRESS '<' #XML-LBL (35) '>' #XML-SVC-FEE '</' #XML-LBL (35) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-COI NE ' '
    COMPRESS '<' #XML-LBL (36) '>' #XML-COI '</' #XML-LBL (36) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-ADMIN NE ' '
    COMPRESS '<' #XML-LBL (37) '>' #XML-ADMIN '</' #XML-LBL (37) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  COMPRESS '<' #XML-LBL (38) '>' #XML-CURR-DB-GROWTH '</' #XML-LBL (38) '>' INTO #XML-REC LEAVING NO
  PERFORM WRITE-XML
*
  IF #XML-ACQ-COST NE ' '
    COMPRESS '<' #XML-LBL (39) '>' #XML-ACQ-COST '</' #XML-LBL (39) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-DUES-PAID NE ' '
    COMPRESS '<' #XML-LBL (40) '>' #XML-DUES-PAID '</' #XML-LBL (40) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #DATA-OPT-IND NE ' '
    COMPRESS '<' #XML-LBL (41) '>' #DATA-OPT-IND '</' #XML-LBL (41) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-CAP-P-I NE ' '
    COMPRESS '<' #XML-LBL (42) '>' #XML-CAP-P-I '</' #XML-LBL (42) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-LVS NE ' '
    COMPRESS '<' #XML-LBL (43) '>' #XML-LVS '</' #XML-LBL (43) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-SAS NE ' '
    COMPRESS '<' #XML-LBL (44) '>' #XML-SAS '</' #XML-LBL (44) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-OO-CR NE ' '
    COMPRESS '<' #XML-LBL (45) '>' #XML-OO-CR '</' #XML-LBL (45) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
ELSE   /* Must be TERM
  ADD 1 TO #NUM-XML-TM
*
  IF #DATA-NIO-IND NE ' '
    COMPRESS '<' #XML-LBL (32) '>' #DATA-NIO-IND '</' #XML-LBL (32) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #DATA-CAP-IND NE ' '
    COMPRESS '<' #XML-LBL (34) '>' #DATA-CAP-IND '</' #XML-LBL (34) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  COMPRESS '<' #XML-LBL (64) '>' #XML-ANN-PREM '</' #XML-LBL (64) '>' INTO #XML-REC LEAVING NO
  PERFORM WRITE-XML
*
  IF #XML-DUES-PAID NE ' '
    COMPRESS '<' #XML-LBL (40) '>' #XML-DUES-PAID '</' #XML-LBL (40) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #DATA-OPT-IND NE ' '
    COMPRESS '<' #XML-LBL (41) '>' #DATA-OPT-IND '</' #XML-LBL (41) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
*
  IF #XML-CAP-P-I NE ' '
    COMPRESS '<' #XML-LBL (42) '>' #XML-CAP-P-I '</' #XML-LBL (42) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
END-IF
*
MOVE 45 TO #I8  /* Beginning of Bene labels (-1)
FOR #I9 1 TO 18
  IF #XML-BENES (#I9) NE ' '
    MOVE #XML-BENES (#I9) TO #XML-REC
    PERFORM RESET-XML-CHARS
*
    ADD 1 TO #I8
    COMPRESS '<' #XML-LBL (#I8) '>' #XML-REC '</' #XML-LBL (#I8) '>' INTO #XML-REC LEAVING NO
    PERFORM WRITE-XML
  END-IF
END-FOR
*
COMPRESS '</DOCUMENT>' TO #XML-REC
PERFORM WRITE-XML

END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE XML-DETAIL-RECORDS-FINAL      /* DW37
* * * * * * * * * * * * * *
*
CLOSE WORK FILE 12
CLOSE WORK FILE 13
*
MOVE TRUE TO #WL
READ WORK 12 #XML-REC
  PERFORM WRITE-XML-FINAL
END-WORK
*
RESET #WL
READ WORK 13 #XML-REC
  PERFORM WRITE-XML-FINAL
END-WORK
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE XML-FOOTER-RECORDS     /* DW37
* * * * * * * * * * * * * *
*
MOVE '</DOCUMENTS>' TO #XML-REC
MOVE TRUE TO #WL
PERFORM WRITE-XML-FINAL
RESET #WL
PERFORM WRITE-XML-FINAL
*
MOVE '</ns0:DALTransfer>' TO #XML-REC
MOVE TRUE TO #WL
PERFORM WRITE-XML-FINAL
RESET #WL
PERFORM WRITE-XML-FINAL
*
END-SUBROUTINE

* * * * * * * * * * * * * *
DEFINE SUBROUTINE WRITE-XML      /* DW37
* * * * * * * * * * * * * *
*
IF #WL
  WRITE WORK FILE 12 #XML-REC
ELSE
  WRITE WORK FILE 13 #XML-REC
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE WRITE-XML-FINAL      /* DW37
* * * * * * * * * * * * * *
*
IF #WL
  WRITE WORK FILE 14 #XML-REC
ELSE
  WRITE WORK FILE 15 #XML-REC
END-IF

*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE RESET-XML-CHARS     /* DW37
* * * * * * * * * * * * * * * * *
*
MOVE #XML-REC TO #HOLD-XML-REC
RESET #XML-REC #I11
*
FOR #I10 1 TO 95
  IF #HOLD-XML-REC-X (#I10) = '&'
    ADD 1 TO #I11
    MOVE '&' TO #XML-REC-X (#I11)
    MOVE 'a' TO #XML-REC-X (#I11 + 1)
    MOVE 'm' TO #XML-REC-X (#I11 + 2)
    MOVE 'p' TO #XML-REC-X (#I11 + 3)
    MOVE ';' TO #XML-REC-X (#I11 + 4)
    ADD 4 TO #I11
*
*    write #data-cn
*    WRITE 'Parse=' #hold-xml-rec (EM=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX)
*                   #xml-rec (EM=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX)
  ELSE
    ADD 1 TO #I11
*   if #i11 ge 100 write #data-cn 'over 100' end-if
    MOVE #HOLD-XML-REC-X (#I10) TO #XML-REC-X (#I11)
  END-IF
END-FOR
*
END-SUBROUTINE
*
*****************
DEFINE SUBROUTINE GET-BENE-DATE
*****************
*
reset #bene-last-upd #issue-date-a
compress #data-iss-dt-yy #data-iss-dt-mm-a #data-iss-dt-dd-a into #issue-date-a leaving no
F1. FIND BENE-FINAL WITH BENE-FINAL.ID-NUMBER = #data-cn    /* ST-V.ID-NUMBER
  if no
    escape bottom (f1.)
  end-norec

  for.  FOR #J 1 6
    for #k 1 7
*     write '=' #j '=' #k   '=' st-v.id-number '=' #issue-date-a  /
*     '=' #bene-iss-dt(#j,#k) '=' bene-final.bene-lst-upd(#j)
*     write '=' #bene-iss-dt(#J,#K)
      IF bene-final.#bene-iss-dt(#j,#k) = #issue-date-a
*         write '=' #j '=' #k   '=' st-v.id-number '=' #issue-date-a  /
*           '=' #bene-iss-dt(#j,#k) '=' bene-final.bene-lst-upd(#j)
        if bene-final.bene-lst-upd(#j) ne 0
          MOVE BENE-FINAL.BENE-LST-UPD(#j) TO #bene-last-upd
          if #bene-last-upd-mm ge 1 and #bene-last-upd-mm le 12
*          write '=' #bene-last-upd-mm
            move #bene-last-upd-mm to #i-month
            compress #bene-last-upd-dd '-' #mon(#i-month) '-' #bene-last-upd-yyyy into #bene-last-upd-a leaving no
          else
            write ' last bene-date is zero'   '=' #bene-last-upd-mm '=' #data-cn
          end-if
        END-IF
        ESCAPE BOTTOM (for.)
      end-if
    END-FOR
  end-for
END-FIND
*
END-SUBROUTINE
*
END
