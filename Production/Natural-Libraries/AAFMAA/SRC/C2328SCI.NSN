* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: C2328SCI   ** FORMAT CI DEAD/RE WORK MAPS
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE      TAG     REASON                                      *
*                                                                      *
* PAM    05142004  PM1    Added Date and Time Stamp to RE screen per   *
*                         Kathie.                                      *
* DRW    06242005  DW2    Remove DATE-Claim-Settled logic (already in  *
*                         C2321SCI)                                    *
* DRW    08222005  DW3    SYNC UP FIRS With STATUS when Inactive Pol   *
* DRW    09092005  DW4    FIX INDEX PROBLEM WITH MATCHING DP & ST      *
* DRW    12072005  DW5    USE SPLIT-IND TO FIND POLICY                 *
* DRW    12212005  DW6    FIX AGGREGATE LBL ON CASE OF TERMINATED POLS *
* DRW    03032006  DW7    FIX MATCHUP OF FIR & STATUS                  *
* DRW    11222006  DW8    SHOW SETTLED DATE ON SCREEN AS INT CALCED TO *
* DRW  11/17/2007  DW9    On Aggregate show tot of individual Earned   *
*                         Interest                                     *
* DRW  05/22/2008  DW10   Check for DEATH Contestability               *
* DRW  07/18/2008  DW11   Add No Longer Contestable Linkage to GCONTSXX*
* DRW  11/25/2008  DW12   Add Linkage to GCONTSXX for #CONTESTABLE-BUT *
*                         -PAID                                        *
* PAM  07/29/2009  PM13   Include policy segment in PDF linkage        *
* PAM  02/25/2010  PM14   Added plan lingage to RE screen              *
* PAM  08/16/2010  PM15   Added date parameter to death benefit calc   *
* BZ   09/16/2010  bz1    Print Death claims
* vxt  03/19/2015  vt1    fix 1305 error /Ticket 3418/                 *
* vxt  12/05/2016  vt2    /Ticket 2007/ - show the projection date     *
* vxt  06/01/2017  vt3    Group Term Project
* bz-Name-C 07/07/2017     Fine Names. Keep all capital
* vxt  12/11/2017  vt4    /Ticket 6750/ Fix bene-more 5                * 
************************************************************************
*
DEFINE DATA
PARAMETER
1 #CGA-SCR-COMMAND   (A2)
1 #CGA-SCR-ID        (N9)
1 #CGA-SCR-SUFFIX    (A3)
1 #CGA-CLERK         (A3)
1 #NAME              (A25)
1 #CN                (A6)
1 REDEFINE #CN
  2 #CN-N             (N6)
1 #SEG-I             (I2)
1 #DATE-OF-DEATH     (N8)
1 #NET-DEATH-BENEFIT (P7.2)
1 #TOTAL-EARNED-INT  (N7.2)       /* DW9
1 #DATE              (N8)         /* PM15
1 v_Pri              (N2)  OPTIONAL       /* bz1
*
LOCAL USING POSLROLE
LOCAL
*
1 FR-V VIEW OF A-FIRS
  2 POL-NAME        (9)
  2 POL-DATE        (9)
  2 POL-AMT-PAID    (9)
  2 POL-TYPE        (9)            /* PM14
  2 DEAD-GROSS-DB   (9)
  2 DEAD-LOAN-PRIN  (9)
  2 DEAD-LOAN-INT   (9)
  2 DEAD-PREM-ADJ   (9)
  2 DEAD-DB-CR      (9)
  2 DEAD-CAP-INT    (9)
  2 POL-DATE-CLM-SETTLED   (9)    /* WAS *   DW8
  2 REDEFINE POL-DATE-CLM-SETTLED
    3 POL-DATE-CLM-SETTLED-OCC  (9)
      4 POL-DATE-CLM-SETTLED-YYYY    (N4)
      4 POL-DATE-CLM-SETTLED-MM      (N2)
      4 POL-DATE-CLM-SETTLED-DD      (N2)
*
1 ST-V VIEW OF A-STATUS   /* used for owner & insured
  2 NAME
  2 TERM-DEBIT-CREDIT
  2 TERM-PREM-REF-DUE
  2 TERM-LOAN-PRIN
  2 TERM-ACC-INT
  2 TERM-CAP-INT
  2 ISSUE-DATE      (9)    /* DW3
  2 SPLIT-IND       (9)    /* DW5
  2 PLAN            (9)    /* PM14
  2 POLICY-ID       (9)    /* NG1
*
1 PC-V VIEW OF A-POLICY-CONTACTS   /* NG1  START
  2 CONTACT-ID (N8.0)
  2 RELATION (N2.0)
  2 DESIGNATION-ID
  2 VERSION     (N8)
1 DS-V VIEW OF A-DESIGNATION
  2 PRIMARY-BD (5)
  2 INSTRUCTIONS (A70/1:15)                                     /* vt4 was 5 occ
*                                     NG1 END
*  below is linkage to GOWNRSXX
1 #MULTIPLE-OWNER   (L)
1 #NON-INS-OWNER    (L)
1 #OWNER-OCC-9 (9)
  2 #OWNER-FLAG (A1)
  2 #OWNER-CN   (N6/10)
  2 REDEFINE #OWNER-CN
    3 #OWNER-CN-A (A6/10)
  2 #OWNER-CN-BY-POL (N6)
  2 #OWNER-CN-SEG    (I2/9)
  2 #ISS-DATE        (N8/9)
  2 #ISS-DATE-DISP   (A10/9)
*    beneficiary info output
  2 #BENE-TYPE       (A1/2)
  2 #BENE-TEXT       (A60/10)
  2 REDEFINE #BENE-TEXT
    3 #BENE-TEXT-OCC   (10)
      4 #BN-NAME        (A25)
      4 #BN-SSN         (N9)
      4 #BN-REL         (A1)
      4 #BN-SHARE       (A10)
      4 #BN-SET-OPT     (A1)
      4 #BN-RESTRICTION (A1)
      4 #BN-DOB         (A8)
      4 #BN-FILL-1      (A5)
*
1 #SETT-TEXT1    (A40)   /* DW8
1 #SETT-TEXT2    (A21)         /* vt was 40
1 #SETT-DAT      (N8)
1 #FOUND-MATCH    (L)
1 #OWNER-NAME    (A25)
1 #SCN-POLICY-NUMBER   (A16)
1 #ERR-MSG      (A60)
1 #FULL-NAME (A25)
1 #LAST      (A25)
1 #FIRST-20  (A20)
1 #MI        (A1)
1 #DEATH-BENEFIT    (P9.2)
1 #DEATH-BENEFIT-X    (P9.2)
1 #DB-BY-POL     (P9.2/9)
1 #CSV-BY-POL    (P9.2/9)
1 #ISS-DT-BY-POL (N8/9)
1 #ALREADY-USED (L/9)
*
1 #HAS-BEEN-SPLIT  (L)
1 #NUM-POLS   (P3)
1 #TEXT      (A65)
1 #ISS-DT        (A10)
1 #PREM-LBL      (A14) INIT <'PREMS OVERPAID'>
1 #PREM-2-LBL    (A13) INIT <'PLUS PREMIUMS'>
1 #PREM-REFUND   (P5.2)
1 #PREM-DUE      (P5.2)
1 #PREM-DUE--    (A1)
1 #NET-PREM-CALC (P5.2)
1 #NET-PREM      (P5.2)
1 #NET-PREM--    (A1)
1 #NET-PREM-2    (P5.2)
1 #NET-PREM-2--  (A1)
1 #NET-PREM-W-O-DB-CR  (P5.2)
1 #DB-CR          (P7.2)
1 #DB-CR--        (A1)
1 #LOAN-PRIN        (P7.2)
1 #LOAN-PRIN-5     (P7.2)             /* vt1 was p5.2
1 #LOAN-PRIN--     (A1)
1 #ACC-INT          (P5.2)
1 #ACC-INT--         (A1)
1 #ACC-INT-TO-DEATH  (P5.2)
1 #ACC-INT-TO-DEATH-- (A1)
1 #TOTAL-DEATH-BENEFIT (P9.2)
1 #TOTAL-DEATH-BENE-2  (P9.2)
1 #TOTAL-INTEREST      (P5.2)
1 #NET-DB     (P9.2)
1 #EARNED-INT (P9.2)
1 #FINAL-DB   (P9.2)
1 #CAP-INT       (P5.2)
1 #SCR-BENE     (A60/15)                                     /* vt4 was 5
1 #SCR-BENE-LIMIT     (A60/5)                                /* vt4 was 5

1 #SCR-BENIFIC  (A60) INIT <'________________________________________'>
1 #SCR-YES-NO-1 (A14) INIT <'YES ( ) NO ( )'>
1 #SCR-CHK-NO   (A15) INIT <'#______________'>
1 #SCR-DT-PD    (A11) INIT <'___________'>
*
1 #I1                (I2)
1 #I2                (I2)
1 #I3                (I2)
1 #I9                (I2)
1 #ST-X              (I2)
1 #SEG-X             (I2)        /* DW10
1 #HAS-CONTESTABILITY (L)
1 #NO-LONGER-CONTESTABLE   (L)   /* DW11
1 #CONTESTABLE-BUT-PAID    (L)   /* DW12
*
1 #DOD-YYYYMMDD  (N8)
1 REDEFINE #DOD-YYYYMMDD
  2 #DOD-YYYY     (N4)
  2 #DOD-MM       (N2)
  2 #DOD-DD       (N2)
1 REDEFINE #DOD-YYYYMMDD
  2 #DOD-YYYYMM    (N6)
  2 #DOD-FILL      (N2)
*
1 #YYYYMMDD   (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM      (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY       (N4)
    3 #MM         (N2)
  2 #DD          (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A      (A4)
  2 #MM-A        (A2)
  2 #DD-A        (A2)
*
1 #DAT4U        (A10)                                             /* PM1
1 #TIME         (A8)                                              /* PM1
1 #date-a       (a8)           /* vt2  \/
1 redefine #date-a
  2 #date-a-yyyy  (a4)
  2 #date-a-mm    (a2)
  2 #date-a-dd    (a2)
*
1 #date-a-formated (a10)       /* vt2  /\
1 #idx             (i2)        /* vt3
END-DEFINE
* * * * * * * * * * *
*
* WRITE 'TOP OF C2328SCI SEGI=' #SEG-I 'suff=' #CGA-SCR-SUFFIX   /* --db

MOVE *DAT4U TO #DAT4U                                             /* PM1
if #date = 0                  /* vt2
  reset #date-a-formated                       /* vt2  \/
else
  move #date to #date-a
  compress #date-a-mm '/' #date-a-dd '/' #date-a-yyyy into #date-a-formated leaving no
end-if                        /* vt2  /\
*
MOVE *TIME TO #TIME                                               /* PM1
*
FIND (1) FR-V WITH WIDOW-KEY = #CN
  IF NO RECORDS FOUND
    WRITE 'No Deceased Mbr Record found - CALL EDS'
    ESCAPE BOTTOM
  END-NOREC
*
  FIND (1) ST-V WITH WIDOW-KEY = #CN   /* DW3
  END-FIND
*
  MOVE TRUE TO #HAS-BEEN-SPLIT
  IF DEAD-GROSS-DB (1) = 0
*   FIND (1) ST-V WITH WIDOW-KEY = #CN     /* DW3
    MOVE TERM-DEBIT-CREDIT TO FR-V.DEAD-DB-CR     (1)
    MOVE TERM-PREM-REF-DUE TO FR-V.DEAD-PREM-ADJ  (1)
    MOVE TERM-LOAN-PRIN    TO FR-V.DEAD-LOAN-PRIN (1)
    MOVE TERM-ACC-INT      TO FR-V.DEAD-LOAN-INT  (1)
    MOVE TERM-CAP-INT      TO FR-V.DEAD-CAP-INT   (1)
*   END-FIND
    RESET #HAS-BEEN-SPLIT    /* setup occ 1 in firs to have agregate
*
    RESET FR-V.DEAD-GROSS-DB (1)
    FOR #I1 1 TO 9
      IF POL-NAME (#I1) = 'AAFMAA' OR = 'AMAA'
        ADD POL-AMT-PAID (#I1) TO FR-V.DEAD-GROSS-DB (1)
        ADD 1 TO #NUM-POLS
      END-IF
    END-FOR
*
    IF (#NUM-POLS GT 1)
        AND ((TERM-DEBIT-CREDIT NE 0)
        OR  (TERM-PREM-REF-DUE NE 0)
        OR  (TERM-LOAN-PRIN    NE 0)
        OR  (TERM-ACC-INT      NE 0))
      WRITE 'Death Info by policy is not available - aggregate data used'
        //  'Death must have been entered prior to March 25/2004'
        //  'Gross benefit is separated by policy however'
        /   'Any Premium adjustments/Loan principal/Loan Interest or'
        /   'Earned Interest will be prorated to each policy by'
        /   'Cash value. To break out the adjustments properly'
        /   'they must be entered manually on the "CA" screen.'
        //  'All death"s entered on and after 3/25/2004 will'
        /   'be broken out by policy.'
    END-IF
  END-IF
*
  RESET #NUM-POLS
  RESET #ALREADY-USED (*)
  FOR #I1 1 TO 9   /* FIR DP INDEX    /* DW7
*   IF #CGA-CLERK = 'DRW'
*     DISPLAY #I1 #SEG-I #HAS-BEEN-SPLIT POL-DATE (#I1) POL-NAME (#I1)
*   END-IF
*
    RESET #FOUND-MATCH                                   /* DW7
    IF POL-NAME (#I1) = 'AAFMAA' OR = 'AMAA'             /* DW7
      FOR #I2 1 TO 9   /* TRY 9 POLS   STATUS INDEX      /* DW3
        IF   (#SEG-I NE 0)
            AND (ST-V.ISSUE-DATE (#I2) = POL-DATE (#SEG-I)) /* DW99
            AND (#I1 = #SEG-I)
            AND (NOT #ALREADY-USED (#I2))
            AND (ST-V.PLAN (#I2) = POL-TYPE (#SEG-I))       /* PM14
*  WRITE 'FOUND MATCH I2=' #I2 POL-DATE (#SEG-I) 'I1=' #I1 #ALREADY-USED (#I2)
          MOVE TRUE TO #FOUND-MATCH                      /* DW7
          MOVE TRUE TO #ALREADY-USED (#I2)
          #ST-X := #I2                                   /* PM13
          ESCAPE BOTTOM
        END-IF
      END-FOR
*
      IF  (#SEG-I = 0)
          OR (#FOUND-MATCH)
        IGNORE
*       WRITE 'IGNORE' #SEG-I 'FOUND MATCH=' #FOUND-MATCH
      ELSE
*       WRITE 'ESCAPE TOP' #SEG-I 'FOUND MATCH=' #FOUND-MATCH
        ESCAPE TOP
      END-IF
*
      ADD 1 TO #NUM-POLS
*
*  WRITE 'NUM-POLS=' #NUM-POLS  'seg-i =' #seg-i
      IF #NUM-POLS = 1  /* save only if only doing 1 policy
          AND (#SEG-I NE 0)   /* DW6
          AND (#HAS-BEEN-SPLIT)
        MOVE POL-DATE (#I1) TO #YYYYMMDD                   /* DW99
        COMPRESS #MM-A #DD-A #YYYY-A INTO #ISS-DT WITH '/'
        CALLNAT 'GPLNMSXX' #SCN-POLICY-NUMBER #CN-N #I2    /* DW3
        MOVE #I1 TO #SEG-X                                 /* DW10
        if plan(#seg-x) ne 'GT1'                                             /* vt3
          PERFORM CHECK-CONTESTABILITY                       /* DW10
        end-if                                                               /* vt3
      ELSE
        examine plan(*) for 'GT1'  index #idx                                /* vt3
        if (#idx ne 0 ) and (plan(#idx) ne 'GT1')
          RESET #SEG-X                                       /* DW10
          PERFORM CHECK-CONTESTABILITY                       /* DW10
        end-if                                                               /* vt3
        MOVE 'Aggregate' TO #ISS-DT #SCN-POLICY-NUMBER
      END-IF
*
*     ADD POL-AMT-PAID (#I1) TO #DEATH-BENEFIT
      ADD DEAD-GROSS-DB (#I1) TO #DEATH-BENEFIT
*
      IF DEAD-PREM-ADJ (#I1) LT 0
        ADD DEAD-PREM-ADJ (#I1) TO #PREM-DUE
      ELSE
        ADD DEAD-PREM-ADJ (#I1) TO #PREM-REFUND
      END-IF
*
      ADD DEAD-CAP-INT   (#I1) TO #CAP-INT
      ADD DEAD-DB-CR     (#I1) TO #DB-CR
      ADD DEAD-LOAN-PRIN (#I1) TO #LOAN-PRIN
      ADD DEAD-LOAN-INT  (#I1) TO #ACC-INT
      ADD DEAD-PREM-ADJ  (#I1) TO #NET-PREM
      ADD DEAD-PREM-ADJ  (#I1) TO #NET-PREM-W-O-DB-CR
      ADD DEAD-DB-CR     (#I1) TO #NET-PREM
      COMPUTE #NET-PREM-2 = DEAD-PREM-ADJ (#I1) + DEAD-DB-CR (#I1)
        + #NET-PREM-2
      MOVE 'Aggregate' TO #OWNER-NAME
      CALLNAT 'GOWNRSXX' #CN-N
        #NON-INS-OWNER
        #MULTIPLE-OWNER
        #OWNER-OCC-9 (1:9)
*
      IF #SEG-I = 0      /* DW5   DW6
        MOVE 1 TO #I9
      ELSE
        MOVE #I2 TO #I9
      END-IF
      RESET #I3
      reset #scr-bene (1:5)                                          /* vt 03/21/2016
      FIND PC-V WITH POLICY-NUMBER = ST-V.POLICY-ID ( #I9 )
        IF RELATION = PrimaryBene
          IF PC-V.CONTACT-ID > 0
            ADD 1 TO #I3
            #SCR-BENE (#I3) :=
              FUNCTION-CONTACT-NAME(< PC-V.CONTACT-ID, VERSION >)
            #SCR-BENE (#I3) := *TRANSLATE(#SCR-BENE (#I3), UPPER)  /* bz-Name
          END-IF
        END-IF
        IF RELATION = UnformatedBene
          FIND DS-V WITH DESIGNATION-ID = PC-V.DESIGNATION-ID
            IF DS-V.INSTRUCTIONS (1) NE ' '
              #SCR-BENE (1:5) := DS-V.INSTRUCTIONS (1:5)
            ELSE
              #SCR-BENE (1:5) := DS-V.PRIMARY-BD (1:5)
            END-IF
          END-FIND
        END-IF
      END-FIND

      FIND (1) ST-V WITH MEMBER-KEY = #OWNER-CN-A (#I1, 1)
        MOVE ST-V.NAME TO #OWNER-NAME
      END-FIND
*
* WRITE '#I1=' #I1 'I2=' #I2 'SEG-I=' #SEG-I 'I9=' #I9
*     IF #BN-NAME (#I2, 1) = ' '                     /* DW3
*       IF #BN-NAME (#I9, 1) = ' '                     /* DW3  DW5
*         MOVE #SCR-BENIFIC TO #SCR-BENE (1)
*       ELSE
*         FOR #I3 1 TO 5
* *         IF #BENE-TYPE (#I2, 1) = 'B' OR = 'S'     /* DW3
*           IF #BENE-TYPE (#I9, 1) = 'B' OR = 'S'     /* DW3  DW5
* *           MOVE #BN-NAME (#I2, #I3) TO #FULL-NAME
*             MOVE #BN-NAME (#I9, #I3) TO #FULL-NAME  /* DW5
*             RESET #LAST #MI #FIRST-20
*             CALLNAT 'GFMLNSXX' /* split name
*               #FULL-NAME
*               #FIRST-20
*               #MI
*               #LAST
*               #ERR-MSG
* *
*             COMPRESS #FIRST-20 #MI #LAST INTO #SCR-BENE (#I3)
*           ELSE
*             MOVE #BENE-TEXT (#I1, #I3) TO #SCR-BENE (#I3)
*           END-IF
*         END-FOR
*       END-IF
    END-IF
*   WRITE 'END OF LOAD SEG-I-'#SEG-I 'I1=' #I1 'I2=' #I2
*
    IF NOT #HAS-BEEN-SPLIT
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  COMPUTE #TOTAL-INTEREST = #CAP-INT + (#ACC-INT * -1)
  COMPUTE #TOTAL-DEATH-BENEFIT = #DEATH-BENEFIT + #NET-PREM
    + #LOAN-PRIN     + #ACC-INT
  MOVE #TOTAL-DEATH-BENEFIT TO #TOTAL-DEATH-BENE-2
  MOVE #TOTAL-DEATH-BENEFIT TO #NET-DEATH-BENEFIT
  COMPUTE #ACC-INT-TO-DEATH  = (#ACC-INT * -1)
*
  IF #HAS-BEEN-SPLIT                                /* DW8
      AND (#SEG-I NE 0)
    MOVE FR-V.POL-DATE-CLM-SETTLED (#SEG-I) TO #SETT-DAT
  ELSE
    MOVE FR-V.POL-DATE-CLM-SETTLED (1) TO #SETT-DAT
  END-IF
*
  IF #SETT-DAT NE 0
    MOVE 'CLAIM HAS BEEN SETTLED-EARNED INTEREST' TO #SETT-TEXT1
    MOVE #SETT-DAT TO #YYYYMMDD
    COMPRESS #MM #DD #YYYY INTO #SETT-TEXT2 WITH '/'
    COMPRESS 'CALCED THRU SETTLED DATE OF' #SETT-TEXT2
      INTO #SETT-TEXT2
  ELSE
    MOVE 'CLAIM NOT YET SETTLED-EARNED INTEREST' TO #SETT-TEXT1
    if (#date eq 0)                                        /* vt2
      MOVE 'CALCULATED THRU TODAY' TO #SETT-TEXT2
    else                                                   /* vt2  \/
      move 'CALCULATED AS OF:' to #sett-text2
    end-if                                                 /* vt2  /\
  END-IF
*
*   IF (#ISS-DT = 'Aggregate')    /*DW8   /* vt2 \/ 12/22/2016
*       AND #HAS-BEEN-SPLIT
*     RESET #SETT-TEXT1 #SETT-TEXT2
*   END-IF                                /* vt2 /\ 12/22/2016
*
  PERFORM CALC-DEATH-BENE-INT
*
  ADD #EARNED-INT TO #TOTAL-DEATH-BENE-2
END-FIND
*
IF #CGA-SCR-COMMAND = 'BP'
  ESCAPE ROUTINE
END-IF
*
MOVE *DATN TO #YYYYMMDD
MOVE #DATE-OF-DEATH TO #DOD-YYYYMMDD
*
MOVE 'TTL ADJUSTMENT' TO #PREM-LBL
PERFORM SET-DASHES
*
MOVE '*' TO #CGA-SCR-COMMAND
*
IF #CGA-SCR-SUFFIX = 'PDF'
  IF #SEG-I NE 0
    CALLNAT 'C232XSRE'
      #CGA-SCR-COMMAND
      #CGA-SCR-ID
      #CGA-SCR-SUFFIX
      #CGA-CLERK
      #SEG-I
      #NAME
      #OWNER-NAME
      #ST-X                 /* PM13
      #DATE                 /* PM15
  END-IF
ELSE
*   WRITE *Program *LINE  "SCR-S" #CGA-SCR-SUFFIX    /* --db
  IF #CGA-SCR-SUFFIX = 'P22'               /* bz1
    IF #SEG-I > 1 OR v_Pri > 0 NEWPAGE(22) END-IF       /* bz1
    move #SCR-BENE(1:5) to #scr-bene-limit(*)                                        /* vt 12/11/2017
    WRITE (22) NOTITLE USING MAP 'C2328FCI'
  ELSE
    move #SCR-BENE(1:5) to #scr-bene-limit(*)                                        /* vt 12/11/2017
    INPUT TEXT #TEXT USING MAP 'C2328MCI'         /* bz1
  END-IF                                   /* bz1
  PERFORM CHECK-AST
*
*  WRITE 'segi=' #SEG-I #CGA-SCR-COMMAND #CGA-SCR-ID #CGA-SCR-SUFFIX
  IF (#SEG-I = 0) AND (#CGA-SCR-SUFFIX NE 'NC') /* not at CI time
    IF #CGA-SCR-SUFFIX <> 'P22'            /* bz1
      PERFORM BENE-SPLIT
    END-IF
  END-IF
END-IF
*
* * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-CONTESTABILITY       /* DW10
* * * * * * * * * * * * * * * * * * * *
*
CALLNAT 'GCONTSXX' #CN-N #SEG-X #HAS-CONTESTABILITY
  #NO-LONGER-CONTESTABLE #CONTESTABLE-BUT-PAID       /*  DW11 DW12
IF #HAS-CONTESTABILITY
  IF #SEG-X NE 0
    MOVE 'This is a Contestable Death Policy' TO #TEXT
  ELSE
    MOVE 'Has a Contestable Death' TO #TEXT
  END-IF
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE SET-DASHES
* * * * * * * * * * * * * * *
*
IF #DB-CR LT 0
  MOVE '-' TO #DB-CR--
END-IF
*
IF #LOAN-PRIN LT 0
  MOVE '-' TO #LOAN-PRIN--
END-IF
*
IF #PREM-DUE LT 0
  MOVE '-' TO #PREM-DUE--
  MOVE 'PREMS DUE' TO #PREM-LBL
END-IF
*
IF #NET-PREM LT 0
  MOVE '-' TO #NET-PREM--
  MOVE '-' TO #NET-PREM-2--
  MOVE 'LESS PREMIUMS' TO #PREM-2-LBL
END-IF
*
IF #ACC-INT LT 0
  MOVE '-' TO #ACC-INT--
END-IF
*
IF #ACC-INT-TO-DEATH LT 0
  MOVE '-' TO #ACC-INT-TO-DEATH--
END-IF
*
* IF #TOTAL-CHECK LT 0
*   MOVE '-' TO #TOTAL-CHECK--
* END-IF
*
* IF #PREMS-PAID LT 0
*   MOVE '-' TO #PREMS-PAID--
* END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-DEATH-BENE-INT
* * * * * * * * * * * * * * * * * * *
*
MOVE #LOAN-PRIN TO #LOAN-PRIN-5
CALLNAT 'C2321SCI' #CN #SEG-I
  #DATE-OF-DEATH
  #NET-PREM-W-O-DB-CR
  #DB-CR
  #LOAN-PRIN-5
  #ACC-INT
  #DEATH-BENEFIT-X
  #NET-DB
  #EARNED-INT
  #FINAL-DB
  #DATE                               /* PM15
*
IF #SEG-I = 0                            /* DW9
  MOVE #TOTAL-EARNED-INT TO #EARNED-INT
ELSE
  ADD #EARNED-INT TO #TOTAL-EARNED-INT
END-IF
*
END-SUBROUTINE
*
* * * * * * * *
DEFINE SUBROUTINE CHECK-AST
* * * * * * * *
*
IF NOT #CGA-SCR-COMMAND = '*' OR = ' '
    AND  #CGA-SCR-SUFFIX <> 'P22'               /* bz1    ...
  FETCH 'G1000PXX'
END-IF
*
END-SUBROUTINE
*
* * * * * * * *
DEFINE SUBROUTINE BENE-SPLIT
* * * * * * * *
*
CALLNAT 'C2330SCI'
  #CGA-SCR-COMMAND
  #CGA-SCR-ID
  #CGA-SCR-SUFFIX
  #CGA-CLERK
  #NAME
  #DEATH-BENEFIT
  #NET-PREM-2
  #LOAN-PRIN
  #ACC-INT
  #EARNED-INT
  #TOTAL-DEATH-BENE-2
  #DB-BY-POL     (*)
  #ISS-DT-BY-POL (*)
  #CSV-BY-POL    (*)
  #DATE                                  /* PM15
*
END-SUBROUTINE
*
END
