* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*****************************************************************
*                                                               *
* New COPYCODE member: ATHISNEW created by ACCORD on: 02/09/05  *
*                                                               *
*****************************************************************
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* SAG  20060221 RH1  AS - Correction made to converted code.  Logic    *
*                    now matches that of original Cobol module.        *
************************************************************************
*
DEFINE SUBROUTINE CALC-INIT-VALUES
*
IF USE-X-CALCS = 'Y'
  PERFORM CALC-INIT-VALUES-X
  ESCAPE ROUTINE
END-IF
*
MOVE IS-ISS-AGE TO TE-ISS-X
SUBTRACT 13 FROM TE-ISS-X
ADD 1 TO TE-ISS-X
IF TE-ISS-X > 87
  MOVE 87 TO TE-ISS-X
END-IF
IF IS-TYPE = 'OL'
  MOVE 83 TO TE-PUP-X
ELSE
  MOVE IS-ISS-AGE TO TE-PUP-X
  SUBTRACT 13 FROM TE-PUP-X
  IF IS-TYPE = '30'
    ADD 30 TO TE-PUP-X
  ELSE
    IF IS-TYPE = '20'
      ADD 20 TO TE-PUP-X
    ELSE
      ADD 7 TO TE-PUP-X
    END-IF
  END-IF
END-IF
MOVE TE-ISS-X TO TF-ISS-X
ADD 14 TO TF-ISS-X
MOVE TE-PUP-X TO TF-PUP-X
ADD 14 TO TF-PUP-X
*
IF IS-ISS-YYYY > 1988
  COMPUTE ROUNDED IS-WORK-B = (TF-NX(TF-ISS-X) - TF-NX(TF-PUP-X)) / TF-DX(TF-ISS-X)
  COMPUTE ROUNDED IS-ADJ-PREM = ((((1000 * TF-MX(TF-ISS-X))
    / TF-DX(TF-ISS-X)) + 20) / IS-WORK-B) * ((IS-FAC-AMT / 5000) * 5)
ELSE
  COMPUTE ROUNDED IS-WORK-B = (TE-NX(TE-ISS-X) - TE-NX(TE-PUP-X)) / TE-DX(TE-ISS-X)
  COMPUTE ROUNDED IS-ADJ-PREM = ((((1000 * TE-MX(TE-ISS-X))
    / TE-DX(TE-ISS-X)) + 20) / IS-WORK-B) * ((IS-FAC-AMT / 5000) * 5)
END-IF
*
COMPUTE ROUNDED IS-WORK-C = IS-ADJ-PREM * IS-WORK-B
COMPUTE ROUNDED IS-WORK-D = IS-ANN-PREM * IS-WORK-B
COMPUTE ROUNDED IS-NET-PREM-RATIO = IS-WORK-C / IS-WORK-D
*
MOVE IS-ISS-AGE TO TE-ATT-X
SUBTRACT 13 FROM TE-ATT-X
MOVE TE-ATT-X TO TF-ATT-X
ADD 14 TO TF-ATT-X
IF IS-WORK-BEG-MIN-CSV = 0
  IF IS-ISS-YYYY > 1988
    COMPUTE ROUNDED IS-WORK-C = (IS-FAC-AMT * (TF-MX(TF-ATT-X)
      / TF-DX(TF-ATT-X))) - ((TF-NX (TF-ATT-X) - TF-NX (TF-PUP-X))
      / TF-DX(TF-ATT-X)) * IS-ANN-PREM * IS-NET-PREM-RATIO
    COMPUTE ROUNDED IS-BEG-MIN-CSV = IS-WORK-C * 1
  ELSE
    COMPUTE ROUNDED IS-WORK-C = (IS-FAC-AMT * (TE-MX(TE-ATT-X)
      / TE-DX(TE-ATT-X))) - ((TE-NX (TE-ATT-X) - TE-NX (TE-PUP-X))
      / TE-DX(TE-ATT-X)) * IS-ANN-PREM * IS-NET-PREM-RATIO
    COMPUTE ROUNDED IS-BEG-MIN-CSV = IS-WORK-C * 1
  END-IF
ELSE
  MOVE IS-WORK-BEG-MIN-CSV TO IS-BEG-MIN-CSV
END-IF
*
IF IS-ISS-YYYY > 1988
  COMPUTE ROUNDED IS-WORK-B = IS-FAC-AMT * (TF-MX(TF-ATT-X) / TF-DX(TF-ATT-X))
ELSE
  COMPUTE ROUNDED IS-WORK-B = IS-FAC-AMT * (TE-MX(TE-ATT-X) / TE-DX(TE-ATT-X))
**IF IS-BEG-MIN-CSV > IS-WORK-B                         /*SAG 20060221 RH1 AS
**  MOVE IS-WORK-B TO IS-BEG-MIN-CSV                    /*SAG 20060221 RH1 AS
**END-IF                                                /*SAG 20060221 RH1 AS
END-IF
*
IF IS-BEG-MIN-CSV > IS-WORK-B                           /*SAG 20060221 RH1 AS
  MOVE IS-WORK-B TO IS-BEG-MIN-CSV                      /*SAG 20060221 RH1 AS
END-IF                                                  /*SAG 20060221 RH1 AS
IF IS-BEG-MIN-CSV > IS-FAC-AMT
  MOVE IS-FAC-AMT TO IS-BEG-MIN-CSV
END-IF
*
ADD 1 TO TE-ATT-X
IF TE-ATT-X > 87
  MOVE 87 TO TE-ATT-X
END-IF
MOVE TE-ATT-X TO TF-ATT-X
ADD 14 TO TF-ATT-X
*
IF (IS-PAID-UP-SW = 'Y')
  OR ((IS-TYPE = '20') AND (IS-DURATION + 1 > 20))
  OR ((IS-TYPE = '30') AND (IS-DURATION + 1 > 30))
  OR ((IS-TYPE = '7')  AND (IS-DURATION + 1 > 7))
  OR ((IS-TYPE = 'OL') AND (IS-ISS-AGE + IS-DURATION + 1 > 96))
  RESET IS-WORK-PREM
ELSE
  MOVE IS-ANN-PREM TO IS-WORK-PREM
END-IF
*
IF IS-ISS-YYYY > 1988
  COMPUTE ROUNDED IS-WORK-C = ((IS-BEG-MIN-CSV + (IS-WORK-PREM *
    IS-NET-PREM-RATIO)) * (TF-DX(TF-ATT-X - 1) / TF-DX(TF-ATT-X)))
    - (((TF-MX(TF-ATT-X - 1) - TF-MX(TF-ATT-X))
    / TF-DX(TF-ATT-X)) * IS-FAC-AMT)
  COMPUTE ROUNDED IS-NXT-YR-MIN-CSV = IS-WORK-C * 1
ELSE
  COMPUTE ROUNDED IS-WORK-C = ((IS-BEG-MIN-CSV + (IS-WORK-PREM *
    IS-NET-PREM-RATIO)) * (TE-DX(TE-ATT-X - 1) / TE-DX(TE-ATT-X)))
    - (((TE-MX(TE-ATT-X - 1) - TE-MX(TE-ATT-X))
    / TE-DX(TE-ATT-X)) * IS-FAC-AMT)
  COMPUTE ROUNDED IS-NXT-YR-MIN-CSV = IS-WORK-C * 1
END-IF
*
IF IS-ISS-YYYY > 1988
  COMPUTE ROUNDED IS-WORK-B = IS-FAC-AMT * (TF-MX(TF-ATT-X) / TF-DX(TF-ATT-X))
ELSE
  COMPUTE ROUNDED IS-WORK-B = IS-FAC-AMT * (TE-MX(TE-ATT-X) / TE-DX(TE-ATT-X))
**IF (IS-NXT-YR-MIN-CSV > IS-WORK-B)                    /*SAG 20060221 RH1 AS
**  MOVE IS-WORK-B TO IS-NXT-YR-MIN-CSV                 /*SAG 20060221 RH1 AS
**END-IF                                                /*SAG 20060221 RH1 AS
END-IF
*
IF (IS-NXT-YR-MIN-CSV > IS-WORK-B)                      /*SAG 20060221 RH1 AS
  MOVE IS-WORK-B TO IS-NXT-YR-MIN-CSV                   /*SAG 20060221 RH1 AS
END-IF                                                  /*SAG 20060221 RH1 AS
IF IS-NXT-YR-MIN-CSV > IS-FAC-AMT
  MOVE IS-FAC-AMT TO IS-NXT-YR-MIN-CSV
END-IF
*
MOVE IS-NXT-YR-MIN-CSV TO IS-ORIG-NXT-MIN-CV
MOVE IS-WORK-BEG-CSV TO IS-BEG-CSV
MOVE IS-WORK-BEG-ACV TO IS-BEG-ACV
MOVE IS-FAC-AMT TO IS-BEG-MIN-DB
MOVE IS-FAC-AMT TO IS-BEG-DB
*
END-SUBROUTINE
*
********************************************************************************
*
