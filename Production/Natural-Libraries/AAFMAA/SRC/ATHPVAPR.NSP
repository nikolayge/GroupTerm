* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPVAPR - V/A PREMIUM CONVERSION
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE      TAG     REASON                                      *
* DRW    09282004  DW1     add CREDIT CARD processing                  *
************************************************************************
*
DEFINE DATA
LOCAL
*
1 ST-V   VIEW OF A-STATUS
  2 ID-NUMBER               (N6)
  2 NAME                    (A25)
  2 X-FIRST-PLACE-FEE       (P7.2/9)
  2 X-BILL-ADJUST           (P5.2/9)
  2 DEBIT-CREDIT-AMT        (P7.2)
  2 INTRO-FLAG              (A1)
  2 MTD-ACV-PREM-ADJ        (P7.2/9)
  2 PAID-TO-DATE            (N8/9)
  2 REDEFINE PAID-TO-DATE
   3 PAID-TO-DATE-OCC         (9)
    4 PTD-YYYYMM            (N6)
    4 PTD-DD                (N2)
  2 ISSUE-DATE              (N8/9)
  2 REDEFINE ISSUE-DATE
   3 ISSUE-DATE-OCC           (9)
    4 ISSUE-DATE-YYYY       (N4)
    4 ISSUE-DATE-MM         (N2)
    4 ISSUE-DATE-DD         (N2)
  2 ANNUAL-PREM             (P5.2/9)
  2 ISSUE-AGE               (A2/9)
  2 NUM-MBRSHIPS            (P1/9)
  2 ACC-CASH-VALUE          (P7.2/9)
  2 DEATH-BENEFIT           (P7.2/9)
  2 NXT-MON-DEATH-BENEFIT   (P7.2/9)
  2 MODE                    (A1/9)
  2 STATUS                  (A1/9)
  2 PAY-STATUS              (A2/9)
  2 NUMBER-MEMBERSHIPS      (N1)
  2 C*ACTIVE-SEGMENTS
*
1 #COUNTERS
  2 #MULTIPLE-UNPD    (P2)
  2 #RECS-READ        (P5)
  2 #POLS-READ        (P5)
  2 #NO-ADJ           (P5)
  2 #DAY-ONLY-ADJ     (P5)
  2 #OTHER-ADJ        (P5)
  2 #CNT              (P5)
  2 #I1               (I2)
  2 #I2               (I2)
  2 #I3               (I2)
  2 #DAYS-ADJ-AMT-4   (P5.4)
  2 #DAYS-ADJ-AMT     (P5.2)
  2 #MODES-ADJ-AMT    (P5.2)
  2 #DAYS-ADJ         (P5)
  2 #FREE-ADJ-AMT     (P5.2)
  2 #MODES-ADJ        (P5)
  2 #ACV-ADJ          (P5.2)
  2 #FREQ             (P2)
  2 #NO-UNPD          (L)
  2 #ACV-CHGED        (L)
  2 #FOUND-FIRST-POL  (L)
  2 #FOUND-ASQM       (L)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #CENT          (A2)
  2 #YY            (A2)
  2 #MM            (A2)
  2 #DD            (A2)
*
1 #WYYYYMMDD  (N8)
1 REDEFINE #WYYYYMMDD
 2 #WYYYYMM   (N6)
 2 REDEFINE #WYYYYMM
  3 #WYYYY    (N4)
  3 #WMM      (N2)
 2 #WDD       (N2)
*
1 #TODAY-YYYYMMDD  (N8)
1 REDEFINE #TODAY-YYYYMMDD
 2 #TODAY-YYYYMM   (N6)
 2 REDEFINE #TODAY-YYYYMM
  3 #TODAY-YYYY    (N4)
  3 #TODAY-MM      (N2)
 2 #TODAY-DD       (N2)
*
END-DEFINE
*
FORMAT  (2) LS=133 PS=76
WRITE   (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
                       'V/A PREMIUM CONVERSION DETAIL'
                       5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (3) LS=133 PS=76
WRITE   (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
                       'V/A PREMIUM CONVERSION DAY ONLY ADJUSTMENTS'
                       5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (4) LS=133 PS=76
WRITE   (4) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
                       'V/A PREMIUM CONVERSION EXCEPTIONS'
                       5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (5) LS=133 PS=76
WRITE   (5) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
                       'MEMBERS WITH BILL ADJUST'
                       5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (6) LS=133 PS=76
WRITE   (6) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
                       'MEMBERS WITH DEBIT CREDIT'
                       5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
* READ (1) ST-V BY MEMBER-KEY FROM '089610'
READ ST-V BY MEMBER-KEY FROM '000100'
  ADD 1 TO #RECS-READ
  MOVE C*ACTIVE-SEGMENTS TO #I1
*
  IF #I1 = 0
    MOVE 1 TO #I1
  END-IF
*
  IF DEBIT-CREDIT-AMT NE 0
    DISPLAY (6)
       'ID/NBR'       ID-NUMBER (EM=ZZZZ9)
       'DB-CR/AMT'    DEBIT-CREDIT-AMT (EM=-ZZZZZ.99)
       'LAST/SEG'     #I1
       'ISS/DATE'     ISSUE-DATE   (#I1)
       'PAY/ST'       PAY-STATUS   (#I1)
       'ANN/PREM'     ANNUAL-PREM  (#I1)
       'MD'           MODE         (#I1)
       'PD-TO/DATE'   PAID-TO-DATE (#I1)
  END-IF
*
  MOVE TRUE TO #NO-UNPD
  FOR #I1 1 TO 9
    IF PAY-STATUS (#I1) = '12' OR = '20'
      RESET #NO-UNPD
    END-IF
*
    IF X-BILL-ADJUST (#I1) NE 0
      DISPLAY (5)
         'ID/NBR'       ID-NUMBER (EM=ZZZZ9)
         'DB-CR/AMT'    DEBIT-CREDIT-AMT (EM=-ZZZZZ.99)
         'BILL/ADJ'     X-BILL-ADJUST (#I1) (EM=-ZZZZZ.99)
         'LAST/SEG'     #I1
         'ISS/DATE'     ISSUE-DATE   (#I1)
         'PAY/ST'       PAY-STATUS   (#I1)
         'ANN/PREM'     ANNUAL-PREM  (#I1)
         'MD'           MODE         (#I1)
         'PD-TO/DATE'   PAID-TO-DATE (#I1)
    END-IF
  END-FOR
*
  RESET #MULTIPLE-UNPD
  RESET #FOUND-FIRST-POL
  RESET #FOUND-ASQM
  FOR #I1 1 TO 5
    IF  (STATUS (#I1) NE 'D')
     OR ((PAY-STATUS (#I1) GE '40') AND (PAY-STATUS (#I1) NE '47'))
      ESCAPE TOP
    END-IF
*
    IF   (PAY-STATUS (#I1) = '47')
     AND (DEBIT-CREDIT-AMT LE 400.00)
      ESCAPE TOP
    END-IF
*
    ADD 1 TO #POLS-READ
*
    RESET #DAYS-ADJ
    RESET #FREE-ADJ-AMT
    RESET #DAYS-ADJ-AMT
    RESET #MODES-ADJ
    RESET #MODES-ADJ-AMT
    RESET #ACV-ADJ
    RESET #ACV-CHGED
*
    IF MODE (#I1) = 'A' OR = 'S' OR = 'Q' OR = 'M'
      MOVE TRUE TO #FOUND-ASQM
    END-IF
*
    IF  (PAY-STATUS (#I1) = '12' OR = '20')
     OR ((X-FIRST-PLACE-FEE (#I1) NE 0) AND (#NO-UNPD))
     OR (PAY-STATUS (#I1) = '47')
      IF PAY-STATUS (#I1) = '47'
        COMPUTE DEATH-BENEFIT (#I1) = NUM-MBRSHIPS (#I1) * 5000
        COMPUTE NXT-MON-DEATH-BENEFIT (#I1) = NUM-MBRSHIPS (#I1) * 5000
      END-IF
*
      IF ACC-CASH-VALUE (#I1) GE 3.00
        COMPUTE #ACV-ADJ = (ACC-CASH-VALUE (#I1) * -1)
      END-IF
*
      IF PAY-STATUS (#I1) = '47'
        WRITE (4) ID-NUMBER ISSUE-DATE (#I1) PAY-STATUS (#I1)
                 ' ACV-ADJ = ' #ACV-ADJ ' ACV & DB RESET DUE TO "PUSP"'
      ELSE
        IF  (PAY-STATUS (#I1) = '12' OR = '20')
         OR ((X-FIRST-PLACE-FEE (#I1) NE 0) AND (#NO-UNPD))
          ADD 1 TO #MULTIPLE-UNPD
          IF PAY-STATUS (#I1) = '12' OR = '20'
            WRITE (4) ID-NUMBER ISSUE-DATE (#I1) PAID-TO-DATE (#I1)
                PAY-STATUS (#I1) X-FIRST-PLACE-FEE (#I1) 'FPF NOT PAID'
          ELSE
            WRITE (4) ID-NUMBER ISSUE-DATE (#I1) PAID-TO-DATE (#I1)
              PAY-STATUS (#I1) X-FIRST-PLACE-FEE (#I1)
                   'FPF NOT PD /PA-ST = "PP"'
          END-IF
        END-IF
      END-IF
    ELSE
      IF   (ISSUE-DATE (#I1) GE 19860701)    /* DAYS ADJUSTMENT
       AND (ISSUE-DATE-DD (#I1) NE 01)
        COMPUTE #DAYS-ADJ = (30 - ISSUE-DATE-DD (#I1)) + 1
        COMPUTE ROUNDED #DAYS-ADJ-AMT-4 = (ANNUAL-PREM (#I1) / 360)
                                        * #DAYS-ADJ
        MOVE ROUNDED #DAYS-ADJ-AMT-4 TO #DAYS-ADJ-AMT
      END-IF
*
*     IF   (ISSUE-DATE (#I1) GE 19860701)    /* 1 MONTH ADJ
      IF   ((NOT INTRO-FLAG = 'I' OR = 'B' OR = 'Q') OR (#I1 NE 1))
        COMPUTE #FREE-ADJ-AMT = ANNUAL-PREM (#I1) / 12
      END-IF
*
      MOVE *DATN              TO #TODAY-YYYYMMDD
      MOVE PAID-TO-DATE (#I1) TO #WYYYYMMDD
*
      IF MODE (#I1) = 'G' OR = 'E' OR = 'M' OR = '0'   /* DW1
        MOVE 1 TO #FREQ
      ELSE
        SUBTRACT 1 FROM #TODAY-MM  /* BASED ON 1-MONTH AGO
*
        IF #TODAY-MM = 00
          MOVE 12 TO #TODAY-MM
          SUBTRACT 1 FROM #TODAY-YYYY
        END-IF
*
        IF MODE (#I1) = 'Q' OR = '4'             /* DW1
          MOVE 3 TO #FREQ
        ELSE
          IF MODE (#I1) = 'S' OR = '2'           /* DW1
            MOVE 6 TO #FREQ
          ELSE
            MOVE 12 TO #FREQ
          END-IF
        END-IF
      END-IF
*
      IF #WYYYYMM GE #TODAY-YYYYMM /* PAID INTO FUTURE
        REPEAT
          SUBTRACT #FREQ FROM #WMM
          IF #WMM LE 0
            ADD 12 TO #WMM
            SUBTRACT 1 FROM #WYYYY
          END-IF
*
          IF #WYYYYMM LT #TODAY-YYYYMM
            ESCAPE BOTTOM
          END-IF
*
          ADD 1 TO #MODES-ADJ
        END-REPEAT
*
        IF   (MODE (#I1) = 'G' OR = 'E' OR = 'M' OR = '0')   /* DW1
         AND (ISSUE-DATE-YYYY (#I1) = #TODAY-YYYY)
         AND (ISSUE-DATE-MM   (#I1) = #TODAY-MM)
          SUBTRACT 1 FROM #MODES-ADJ
        END-IF
*
        COMPUTE #MODES-ADJ-AMT = (ANNUAL-PREM (#I1) / (12 / #FREQ))
                                                         * #MODES-ADJ
      ELSE                      /* DELINQUENT
        REPEAT
          SUBTRACT 1 FROM #MODES-ADJ
          ADD #FREQ TO #WMM
*
          IF #WMM GT 12
            SUBTRACT 12 FROM #WMM
            ADD 1 TO #WYYYY
          END-IF
*
          IF #WYYYYMM GE #TODAY-YYYYMM
            ESCAPE BOTTOM
          END-IF
        END-REPEAT
*
        COMPUTE #MODES-ADJ-AMT = (ANNUAL-PREM (#I1) / (12 / #FREQ))
                                                           * #MODES-ADJ
      END-IF
*
      COMPUTE #ACV-ADJ = #MODES-ADJ-AMT + #DAYS-ADJ-AMT - #FREE-ADJ-AMT
    END-IF
*
    IF NOT #FOUND-FIRST-POL
      MOVE TRUE TO #FOUND-FIRST-POL
      SUBTRACT X-BILL-ADJUST (#I1) FROM #ACV-ADJ
    END-IF
*
    IF  (#ACV-ADJ    NE 0)
     OR (X-BILL-ADJUST (#I1) NE 0)
     OR (#FREE-ADJ-AMT NE 0)
      IF   (#MODES-ADJ  = 0)
       AND (X-BILL-ADJUST (#I1) = 0)
       AND (#FREE-ADJ-AMT = 0)
       AND (#DAYS-ADJ NE 0)
        ADD 1 TO #DAY-ONLY-ADJ
        DISPLAY (3)
           'ID/NBR'       ID-NUMBER (EM=ZZZZ9)
           'SEG'          #I1 (EM=9)
           'ISS/DATE'     ISSUE-DATE     (#I1)
           'DB-CR/AMT'    DEBIT-CREDIT-AMT (EM=-ZZZZZ.99)
           'PAY/ST'       PAY-STATUS     (#I1)
           'ANN/PREM'     ANNUAL-PREM (#I1)
           'MD'           MODE           (#I1)
           'PD-TO/DATE'   PAID-TO-DATE   (#I1)
           'DYS/TO/ADJ'   #DAYS-ADJ     (EM=-Z9)
           'DAYS/ADJ/AMT' #DAYS-ADJ-AMT (EM=-ZZ.99)
           'FREE/ADJ/AMT' #FREE-ADJ-AMT (EM=-ZZZ.99)
           'ACV/TO/ADJ'   #ACV-ADJ       (EM=-ZZZZZ.99)
      ELSE
        ADD 1 TO #OTHER-ADJ
        DISPLAY (2)
           'ID/NBR'       ID-NUMBER (EM=ZZZZ9)
           'SEG'          #I1 (EM=9)
           'ISS/DATE'     ISSUE-DATE     (#I1)
           'DB-CR/AMT'    DEBIT-CREDIT-AMT (EM=-ZZZZZ.99)
           'PAY/ST'       PAY-STATUS     (#I1)
           'ANN/PREM'     ANNUAL-PREM (#I1)
           'MD'           MODE           (#I1)
           'PD-TO/DATE'   PAID-TO-DATE   (#I1)
           'DYS/TO/ADJ'   #DAYS-ADJ     (EM=-Z9)
           'DAYS/ADJ/AMT' #DAYS-ADJ-AMT (EM=-ZZ.99)
           'MODS/TO/ADJ'  #MODES-ADJ    (EM=-Z9)
           'MD/ADJ/AMT'   #MODES-ADJ-AMT (EM=-ZZZZ.99)
           'FREE/ADJ/AMT' #FREE-ADJ-AMT (EM=-ZZZ.99)
           'BILL/ADJ'     X-BILL-ADJUST (#I1)(EM=-ZZZZZ.99)
           'ACV/TO/ADJ'   #ACV-ADJ       (EM=-ZZZZZ.99)
      END-IF
*
      IF #I1 NE 1            /* FILLUP PRECEEDING MULTIPLE FIELDS
        COMPUTE #I3 = #I1 - 1
        FOR #I2 1 TO #I3
          IF MTD-ACV-PREM-ADJ (#I2) = 0
            MOVE 9999999.99 TO MTD-ACV-PREM-ADJ (#I2)
          END-IF
        END-FOR
      END-IF
*
      IF MTD-ACV-PREM-ADJ (#I1) = 9999999.99
        RESET MTD-ACV-PREM-ADJ (#I1)
      END-IF
*
      ADD #ACV-ADJ TO MTD-ACV-PREM-ADJ (#I1)
      IF MTD-ACV-PREM-ADJ (#I1) = 0
        MOVE 9999999.99 TO MTD-ACV-PREM-ADJ (#I1)
      END-IF
*
      MOVE TRUE TO #ACV-CHGED
    ELSE
      ADD 1 TO #NO-ADJ
    END-IF
  END-FOR
*
  IF NOT #FOUND-ASQM
   AND (X-BILL-ADJUST (#I1) NE 0)
    WRITE (4) ID-NUMBER ' BILL ADJUST ZAPPED'
    RESET X-BILL-ADJUST (#I1)
  END-IF
*
  IF #MULTIPLE-UNPD GT 1
    WRITE (4) ID-NUMBER ' MULTIPLE FPF UNPAID'
  END-IF
*
  IF #ACV-CHGED
    UPDATE      /* <<<<<<<****** UPDATE RECORD
  END-IF
*
  END TRANSACTION
END-READ
*
WRITE   (2) 'TOT-RECS-READ     = ' #RECS-READ
WRITE   (2) 'TOT-POLS-READ     = ' #POLS-READ
WRITE   (2) 'NO ADJUSTMENT     = ' #NO-ADJ
WRITE   (2) 'DAY-ONLY ADJUST   = ' #DAY-ONLY-ADJ
WRITE   (2) 'ALL-OTHER ADJUST  = ' #OTHER-ADJ
END
