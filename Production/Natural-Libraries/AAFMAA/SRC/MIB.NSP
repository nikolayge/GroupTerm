* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* Test Double Ownership and change dates
* GPL/GP2 Proj
*  
* -- Request
* Check for existing
* Save results in DB file 
* Save request and response 
* Move request and response to arc ?      

DEFINE DATA
LOCAL
1 p_Parm
  2 p_AT       (N6)
  2 p_Clerk    (A3)
  2 p_Message  (A) DYNAMIC
  2 p_Mode     (A1)   
  2 p_RC       (N4)
*
1 AT-V VIEW of A-APPL-TRACKING
  2 CONTACT-ID              (N8)
  2 AT-STATUS               (A2)
  2 SSN
* 
 1 CNT-V VIEW OF A-CONTACTS
  2 FULL-NAME 
    3 FIRST-NAME            (A25)
    3 MIDDLE-NAME           (A25)  
    3 LAST-NAME             (A25)
    3 SUFFIX                (A10) 
   2 SSN                    (N9)  (EM=999-99-9999)
   2 DATE-OF-BIRTH          (N8)  (EM=9999-99-99)
*   
1  MIB-V VIEW OF A-MIB
  2  MIB-SSN       (N9)  (EM=999-99-9999)    /* SSN         /* DE
  2  MIB-DATE      (N8)  (EM=9999-99-99)     /* Date
  2  MIB-AT        (N6)  (EM=999999)         /* AT
  2  MIB-CLERK     (A3)
  2  MIB-COMM      (A1)                      /* (R)equest / (S)ubmit
  2  MIB-CODES#    (N2)                      /* 0:No info 
  2 C*MIB-RECORD
  2  MIB-RECORD    (20)                      /* PE 20 times 
     3  MIB-MATCH           (A3)             /* Hit/Try
     3  MIB-FORM      
        4  MIB-FORM-TYPE    (A4/19)          /* Type Code/Note/Disp
        4  MIB-FORM-DATE    (A10/19)         /* YYYY-MM-DD Code Date
        4  MIB-FORM-TEXT    (A120/19)        /* Code(s) / Note  
*
1 f_Report   (A) DYNAMIC  INIT  <'/usr/SAG/APPS/MIB/401/RESP-401_@@AT.TXT'>
*
1 #r        (I2) 
1 #i        (I2)
1 #j        (I2)
*
1 c_Stat
 2 c_R       (I2)
 2 c_R_0     (I2)
 2 c_R_Rec   (I2)
 2 c_R_Max   (I2)
 2 R_Max_AT  (N6)
 2 R_Max_SSN (N9)
 2 c_R_Cd    (I2)
 2 c_R_Hit   (I2)
 2 c_R_Try   (I2)
 2 c_R_Tests (I2)
 2 c_S       (I2)
 2 c_S_Cd    (I2)
*
1 Sel        (N1)  
1 v_RC       (A20)
1 tst_case   (A3)
1 v_A        (A) DYNAMIC
1 v_AT_REQ   (A) DYNAMIC
1 A80        (A80)
1 cv_Input      (C)
1 cv_Test       (C) 
1 l_Test        (L)
1 cv_MIB_Upd    (C)
1 l_MIB_Upd     (L)
1 v_Day_From    (N8) INIT <*DATN>
1 v_Day_To      (N8) INIT <*DATN>
1 l_R_only      (L)
1 l_S_only      (L)
1 l_T_only      (L)
1 l_Confirm     (L)
1 Env           (A4)
1 A79            (A79/101)
END-DEFINE
ON ERROR
    PRINT NOTITLE  'Please notify MSS' //
     *PROGRAM "Err-ln:" *ERROR-LINE "Err:" *ERROR-NR /
     'AT:' p_AT  'Selection' Sel  ///
     'Hit Enter to continue'
     ESCAPE ROUTINE
END-ERROR
* - - - - - - - - - - - - - - - - - -
    DEFINE WINDOW WIN-MIB
      SIZE 20 * 80
      BASE 5 / 1
      TITLE ' MIB Request '
      CONTROL SCREEN
      FRAMED
* - - - - - - - - - - - - - - - - - -
    DEFINE WINDOW WIN-401R
      SIZE 22 * 80
      BASE 3 / 1
      TITLE ' MIB Result '
      CONTROL SCREEN
      FRAMED
* - - - - - - - - - - - - - - - - - -        
SET KEY PF3
SET KEY PF5
SET KEY PF6
 MOVE EDITED F-IS-DEV(<>)(EM=Prod/Test) TO Env 
 l_Test := F-IS-DEV(<>)
 IF *DATA > 0
   INPUT p_AT p_Clerk
   IF p_AT <> 0
    MOVE (AD=P) TO cv_Input
   END-IF 
 ELSE
   p_Clerk := *INIT-USER
   MOVE (AD=U) TO cv_Input
 END-IF
 IF F-IS-DEV(<>) 
    MOVE (AD=P) TO cv_Test 
    l_MIB_Upd := TRUE
    MOVE (AD=I) TO cv_MIB_Upd
 ELSE 
    MOVE (AD=U) TO cv_Test
    l_MIB_Upd := FALSE
    MOVE (AD=P) TO cv_MIB_Upd
 END-IF
 
REPEAT 
  INPUT WINDOW='WIN-MIB'
        (AD=O IP=OFF) MARK *sel
   01/1     *DAT4U(AD=I)  20x   '-- MIB ver.3.5 --'   71T *TIMX(AD=I)
   03/2     'AT: ' p_AT (AD=IM EM=ZZZZZZ CV=cv_Input) 4x 'USER:' p_Clerk (AD=IO)  48x Env
   05/2 'Force Test in Production    ' l_Test(AD=MI EM=N/Y CV=cv_Test)        5x '( Applicable items 5 and 6 only )'
   06/2 'Save MIB Request/Submissions' l_MIB_Upd (AD=MI EM=N/Y CV=cv_MIB_Upd) 5x '( Applicable items 5 and 6 only )'
   08/6  '1' '- View statistic'
   09/6  '2' '- View MIB saved records for this AT'
   10/6  '3' '- View MIB saved records' 
   11/6  '4' '- Print report for this AT' p_AT
   12/6  '5' '- Request MIB (The same as PR->PU)'
   13/6  '6' '- Submit  MIB (The same as UU)'
   14/6  '9' '- Exit (The same as PF3)'
   15/6  Sel(AD=MU EM=9)  '- Select Function'
   17/1  p_Message (AD=O AL=78) 
   18/2  'PF3=Exit'        50x v_RC 
 IF *PF-KEY = 'PF3' ESCAPE ROUTINE END-IF 
 
 IF *PF-KEY = 'PF5' 
   IF  p_Clerk = 'BZ' OR = 'sag'
       PERFORM sbr_Clean_TST 
   END-IF
 END-IF   
  IF *PF-KEY = 'PF6' 
   IF  p_Clerk = 'BZ' OR = 'sag'
            CALLNAT 'MIB-TEST' tst_Case 
                       FIRST-NAME MIDDLE-NAME LAST-NAME SUFFIX '        '
                       ' '  '        ' '  '
                       p_AT 000000000
   END-IF
 END-IF   

 
 p_Message := ' '
 IF  p_AT = 0 AND ( sel <> 3 AND sel <> 1 AND sel <> 0) REINPUT 'Please enter AT' END-IF
 DECIDE ON FIRST VALUE Sel
   VALUE 1  PERFORM sbr_1   /*    Stats
   VALUE 2  PERFORM sbr_2   /*    View MIBs for this AT
   VALUE 3  PERFORM sbr_3   /*    View All MIBs starting
   VALUE 4  PERFORM sbr_4   /*    Print
   VALUE 5  PERFORM sbr_5   /*    Request
   VALUE 6  PERFORM sbr_6   /*    Submit
   VALUE 9 PRINT NOTITLE 'Good bye ...' ESCAPE ROUTINE
   NONE IGNORE
 END-DECIDE         
 
END-REPEAT

* ------------------------------------------------------------------
 DEFINE sbr_1
*       ----- 
     RESET c_Stat
     READ MIB-V
       IF MIB-COMM = 'R'
          c_R := c_R + 1
          IF MIB-CLERK = 'TST' c_R_Tests := c_R_Tests + 1 ESCAPE TOP END-IF
          IF MIB-CODES# = 0
             c_R_0 := c_R_0 + 1
          ELSE
             c_R_Cd := c_R_Cd + MIB-CODES#
             IF C*MIB-RECORD > c_R_MAX
                c_R_MAX := C*MIB-RECORD
                R_Max_AT        := MIB-AT
                R_Max_SSN       := MIB-SSN
             END-IF
             FOR #r = 1 TO C*MIB-RECORD
               DECIDE ON FIRST VALUE MIB-MATCH(#r)
                 VALUE 'TRY'
                   c_R_Try := c_R_Try + 1
                 VALUE 'HIT'
                   c_R_Hit := c_R_Hit + 1
                 ANY 
                   c_R_Rec :=  c_R_Rec + 1  
                 NONE 
                   IGNORE
               END-DECIDE  
             END-FOR 
          END-IF
       END-IF
       IF MIB-COMM = 'S'
          c_S := c_S + 1
          c_S_Cd := c_S_Cd + MIB-CODES#
       END-IF
     END-READ  
     WRITE                          /
     2x  'MIB Production Requests '(I)  c_R     3x 'MIB Test Requests:' c_R_Tests /
     2x  ' No MIB Records         '     c_R_0     /
     2x  ' Found Records          '     c_R_Rec   /
     2x  '       Hit              '     c_R_Hit   /
     2x  '       Try              '     c_R_Try   /       
     2x  'All codes found         '     c_R_Cd    /
     2x  'Max Records for 1 person'     c_R_Max   3x 'AT:' R_Max_AT 3x 'SSN:' R_Max_SSN(EM=999-99-9999) //
     2x  'MIB Submitted   '(I) c_S       /
     2x  'All codes sent  '     c_S_Cd    /
 END-SUBROUTINE
* ------------------------------------------------------------------
 DEFINE sbr_2
*       -----
      FORMAT PS=23 
      FIND(1) AT-V WITH ID-NUMBER = p_AT
         IF NO RECORD FOUND
            COMPRESS 'AT:' p_AT 'not found'  INTO p_Message
            ESCAPE BOTTOM
         END-NOREC   
         FIND MIB-V WITH MIB-SSN = SSN
         IF NO RECORD FOUND
            MOVE EDITED AT-V.SSN (EM=999-99-9999) TO p_Message
            COMPRESS 'MIB not found for AT:' p_AT p_Message INTO p_Message
            ESCAPE BOTTOM
         END-NOREC
         NEWPAGE   
         FIND(1) CNT-V WITH SSN = MIB-SSN  
           PRINT '--' FULL-NAME(AD=I) DATE-OF-BIRTH(AD=I) CNT-V.SSN(AD=I EM=999-99-999) / 
         END-FIND 
         PRINT *COUNTER (EM=Z9')')
         'SSN:' MIB-SSN MIB-DATE 'AT:' MIB-AT MIB-CLERK 'Rec:' C*MIB-RECORD 'R/S' MIB-COMM(AD=I) 'Codes' MIB-CODES# 
         FOR #r = 1 TO C*MIB-RECORD
          PRINT 'Record:' #r     MIB-MATCH(#r)
          FOR #i = 1 TO 19 
            IF MIB-FORM-TEXT (#r, #i) <> ' '
              PRINT
                MIB-FORM-TYPE(#r, #i) 
                MIB-FORM-DATE(#r, #i)
                MIB-FORM-TEXT(#r, #i)
            END-IF
          END-FOR      
        END-FOR 
         END-FIND         
      END-FIND
 END-SUBROUTINE
* -------------------------------------------------------------
 DEFINE sbr_3
*       ----- 
INPUT (IP=OFF) 
    01/1 *DAT4U  10x 'View saved MIB communications'(I) 20x *TIMX
    03/2 'Startiing Date       :' v_Day_From(AD=MU EM=9999-99-99)
    04/2 'End Date             :' v_Day_To(AD=MU EM=9999-99-99)
    06/2 'Show only Requests   :'  l_R_only(AD=M EM=N/Y)
    07/2 'Show only Submissions:'  l_S_only(AD=M EM=N/Y)
    08/2 'Show only Tests      :'  l_T_only(AD=M EM=N/Y)
    12/2 'Use PF3 to exit scrolling'
       
        IF v_Day_From <> MASK(YYYYMMDD)
          p_Message := 'Format for Date shuld be YYYY-MM-DD'
          REINPUT p_Message 
        END-IF
        #j := 0 c_R := 0 c_S := 0
        F6.
        FIND MIB-V WITH MIB-DATE >= v_Day_From AND MIB-DATE <=  v_Day_To SORTED BY MIB-DATE  DESCENDING
          IF *PF-KEY = 'PF3' ESCAPE BOTTOM END-IF
          IF l_R_only AND MIB-COMM <> 'R' ESCAPE TOP END-IF
          IF l_S_only AND MIB-COMM <> 'S' ESCAPE TOP END-IF
          IF l_T_only AND MIB-CLERK <> 'TST' ESCAPE TOP END-IF
          #j := #j + 1
          IF MIB-COMM ='S' c_S := c_S + 1 END-IF
          IF MIB-COMM ='R' c_R := c_R + 1 END-IF
          IF *COUNTER > 1 NEWPAGE END-IF
         FIND(1) CNT-V WITH SSN = MIB-SSN  
           PRINT '--' FULL-NAME(AD=I) DATE-OF-BIRTH(AD=I) CNT-V.SSN(AD=I EM=999-99-999) / 
         END-FIND
         FIND(1) AT-V WITH ID-NUMBER = MIB-AT END-FIND 
         PRINT *COUNTER(F6.) (EM=Z9')')
          'SSN:' MIB-SSN 2x 'MIB date:' MIB-DATE 2x 'User:' MIB-CLERK 2x 'AT:' MIB-AT 2x 'AT-st:' AT-Status   / 
          4x 'Records:' C*MIB-RECORD(EM=Z9) 'R/S:' MIB-COMM(AD=I) 'Codes' MIB-CODES# 
        FOR #r = 1 TO C*MIB-RECORD
          PRINT 'Record:' #r     MIB-MATCH(#r)
          FOR #i = 1 TO 19 
            IF MIB-FORM-TEXT(#r, #i) <> ' '
              IF MIB-FORM-TYPE(#r, #i) = 'Code'
                MIB-FORM-TYPE(#r, #i) := ' '
            END-IF   
              PRINT
                MIB-FORM-TYPE(#r, #i) 
                MIB-FORM-DATE(#r, #i)
                MIB-FORM-TEXT(#r, #i)
            END-IF
          END-FOR      
        END-FOR
      END-FIND
      COMPRESS *NUMBER(F6.) 'MIB saved records found,' #j 'Viewed including' 'Requests:' c_R 'Submissions:' c_S TO p_Message
 END-SUBROUTINE
* ------------------------------------------------------------------
 DEFINE sbr_4
*       ----- 
     FIND(1) AT-V WITH ID-NUMBER = p_AT  
         FIND(1) MIB-V WITH MIB-SSN = AT-V.SSN
           IF MIB-AT <> p_AT 
              p_AT := MIB-AT
           END-IF
         END-FIND
     END-FIND             
     v_AT_REQ := p_AT
     IF l_Test 
       COMPRESS v_AT_REQ '-TST' INTO v_AT_REQ LEAVING NO SPACE 
     END-IF
     v_A := f_Report
     EXAMINE v_A FOR '@@AT' REPLACE v_AT_REQ
     IF NOT FN_Exist(<v_A>)
        EXAMINE DIRECTION BACKWARD v_A FOR '/' POSITION #i
        #i := #i + 1
        COMPRESS 'Report not found' SUBSTRING(v_A,#i) INTO p_Message
        ESCAPE ROUTINE
     END-IF
     #i := 0   
     DEFINE WORK FILE 1 v_A
     #j := 1 RESET A79(*)
     READ WORK FILE 1  A79(#j)
        EXAMINE A79(#j) FOR H'0C' DELETE
        #j := #j + 1
     END-WORK
      #i := 0
      REPEAT UNTIL #j <= 0  OR (#j = 1 AND A79(01) = ' ')
      IF #j <= 20 OR (#j = 21 AND A79(21) = ' ')
          COMPRESS 'The last page. Hit ENTER to continue' INTO A80
      ELSE
          COMPRESS 'Hit ENTER for next page'  INTO A80
      END-IF    
        INPUT WINDOW='WIN-401R' (AD=O IP=OFF) WITH TEXT A80
         A79(01) / A79(02) / A79(03) / A79(04) / A79(05) / A79(06) / A79(07) / A79(08) / A79(09) / A79(10)
         A79(11) / A79(12) / A79(13) / A79(14) / A79(15) / A79(16) / A79(17) / A79(18) / A79(19) / A79(20)
         #i := #i + 20
         #j := #j - 20
         A79(1:20) := A79( #i + 1 : #i + 20)
      END-REPEAT  
      CLOSE WORK FILE 1      
 END-SUBROUTINE
* -------------------------------------------------------------
 DEFINE sbr_5
*       ----- 
      p_RC := 0
      p_Message := ' '
      IF l_Test p_Mode := 'T' END-IF
      CALLNAT 'MIB-1000' p_Parm
      IF p_RC = 0 v_RC := ' '
       COMPRESS  'Return code:' p_RC INTO  v_RC
      END-IF
      IF l_MIB_Upd
        END TRANSACTION
      ELSE
        BACKOUT TRANSACTION  
      END-IF  
 END-SUBROUTINE
* ------------------------------------------------------------------
 DEFINE sbr_6
*       -----
      p_RC := 0
      p_Message := ' '
      IF l_Test p_Mode := 'T' END-IF
      CALLNAT 'MIB-2000' p_Parm
      IF p_RC = 0 v_RC := ' '
      ELSE v_RC := p_RC
      END-IF
      IF l_MIB_Upd
         END TRANSACTION
      ELSE
        BACKOUT TRANSACTION  
      END-IF    
 END-SUBROUTINE
* -------------------------------------------------------------
DEFINE sbr_Clean_TST
*      ---------
INPUT // 3x 'Confirm - Delete test records N/Y'  l_Confirm (AD=MI EM=N/Y) 
IF NOT l_Confirm ESCAPE ROUTINE END-IF
READ MIB-V
  IF MIB-CLERK = 'TST'
    #i := #i + 1
    PRINT MIB-AT MIB-SSN MIB-CLERK(AD=I) 
    DELETE
    END TRANSACTION
  END-IF  
  END TRANSACTION
END-READ
PRINT #i 'Saved test records has been deleted'
sel := 0     
END-SUBROUTINE
* -------------------------------------------------------------

END
