* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 2
* <Natural Source Header
*********************************************************
* SUBPROGRAM-ID: NPPN0005 policy print projection program
*                (CLONED FROM C2V10PVP)
*********************************************************
*        MODIFICATION LOG
*********************************************************
* USER   DATE       TAG  REASON
* YAK    06232008        Initial Creation
* PAM    01072010  PM1  Revised issue date for applications
* NGG    20121002  NG1  CN Expansion Project -
*                        New beneficiary database file
* YAK    10032012  YK1  Use function to identify Level II Term plan
* NGG    20130419  NG2  Stability Project for $1M Policy
* YAK    20140103  YK2  Added GP2 policy
* TMT    20140623  TT1  Contact Normalization - DOB and Sex
* YAK    20140103  YK3  Replace 'AL' plan with function
*********************************************************
DEFINE DATA
PARAMETER USING NPPA0002
PARAMETER
1 #PARM-ID-NUMBER (N6)
1 #SEQ-ID    (N2)
1 #ISN       (P8)
* INCLUDE C2V10CVP
* GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL
1 #CGA-MASTER
  2 #CGA-SCR-COMMAND (A2)   INIT <'VP'>
  2 #CGA-SCR-ID (N9)
  2 #CGA-SCR-SUFFIX (A3)
  2 #CGA-ORIG-COMMAND (A2)
  2 #CGA-ORIG-ID (N6)
  2 #CGA-ORIG-SUFFIX (A3)
  2 #CGA-CLERK (A3)        INIT <'EDS'>
  2 #CGA-SECURITY-CODE (N2)INIT <99>
  2 #CGA-USER-COMPANY (A1) INIT <'B'>
  2 #CGA-ID-G (A6)
  2 REDEFINE #CGA-ID-G /* REDEF. BEGIN : #CGA-ID-G
    3 #CGA-ID (N6)
  2 #CGA-ISN (P8)
  2 #CGA-GOOD-TAS (L) /* TAS INDICATOR
  2 #CGA-GOOD-TAS-VS (L) /* 'VS' TAS INDICATOR FOR 'AD'
*
LOCAL  USING GC2V5LVP /* Same as GC2V5LXX except VIEW #PR-V not #PROJ--)
LOCAL
*
1 #CURR-VAR-INT-RATE (N2.3)
1 #OPT-FOUND     (L)
1 #PROCESS-DATE    (N6)
1 #ACQ-COST-X  (A9)
1 #ACQ-COST    (P5.2)
1 #ACQ-COST-PER-POL  (P3.2) INIT <197.65>
1 #ACQ-COSP-PER-1K   (P1.2) INIT <.99>
*
1 #FACE-9     (P9.2)
1 #PP-YEARS   (N3)
1 #LUMP-PREM-VALUE  (N7.2)
1 #PLAN       (A3)
1 REDEFINE #PLAN
  2 #PLAN-1    (N1)
1 REDEFINE #PLAN
  2 #PLAN-2    (N2)
*
1 #CONSOLIDATION (L)
1 #ERR-TEXT   (A78)
*
1 #CON-SAVE  (3)
  2 #CON-CSV   (P7)
  2 #CON-DB    (P7)
1 #AMT-A9 (A9)
1 REDEFINE #AMT-A9
  2 #AMT-DOLS  (N7)
  2 #AMT-CENTS (N2)
1 REDEFINE #AMT-A9
  2 #AMT   (N7.2)
1 REDEFINE #AMT-A9
  2 #POL-SEL  (A1/9)
*
1 #AMT-N5   (N5)
1 REDEFINE #AMT-N5
  2 #AMT-A5  (A5)
1 REDEFINE #AMT-N5
  2 #AMT-N2  (N2)
*
1 #LAST-AGE  (A3)
1 #TEXT-13   (A13)
1 #POL-#     (N2)
1 #TOT-WL-POLS (N2)
1 #1ST-TIM     (P1)
1 #OO-INFO-X   (I2)
1 #OPT-OUT-IND (A1)
1 #PREM-RATING (A1)
1 #COI-ADJ     (N3.2/9)
1 #NXT-X       (I2)
1 #NXT-PRM-ADJ (P1.2)
1 #OO-X     (I2)
1 #OO-TOT-X (I2)
1 #OO-EFF-DATE (N8)
1 #OO-MEM-AGE (P3/27)
1 #OO-CSV     (P7.2/27)
1 #OO-DB      (P7.2/27)
1 #DEGF-EFF-DATE (N8)
*
1 #OO-NUM-WL  (P2)
1 #OO-DT      (A7/5)
1 #OO-AGE     (A3/5)
1 #OO-RET-CSV (A10/5)
1 #OO-RET-DB  (A10/5)
1 #OO-OO-CSV  (A10/5)
1 #OO-OO-DB   (A10/5)
1 #OO-TOT-FND (A1/5)
1 #OO-TOT-DT  (A7/5)
1 #OO-TOT-AGE (A3/5)
1 #OO-TOT-RET-CSV (P6/5)
1 #OO-TOT-RET-DB  (P7/5)
1 #OO-TOT-OO-CSV  (P7/5)
1 #OO-TOT-OO-DB   (P7/5)
*
1 #MAX-FACE       (P7.2)
1 #MAX-FACE-TERM  (P7.2)
1 #OVERRIDE-MAX-FACE-TOTAL  (P7.2)
1 #OVERRIDE-MAX-FACE-TERM   (P7.2)
1 #INTRO-FLAG    (A1)
1 #ADDL-MON-PREM (N5.2)
1 #ADDL-LUMP-SUM (N7.2)                /* NG99
1 #FST-X   (I2)
1 #VA-CALC-TYPE   (A1)
1 #DUES-PAID      (P7.2)
1 #DUES-PD-DOLS   (P7)
* cost-index work
1 #CIX-ERROR     (A75)
1 #CIX-MODE      (P2)
1 #CIX-SCR-SC (A8/4)
1 #CIX-SCR-NP (A8/4)
1 #CAP-LOAN-MONS   (N3)
1 #CAP-CSV-MONS    (N3)
1 #CAP-REMAIN-MONS (N3)
*
1 #MAX-YRS        (N3)
1 REDEFINE #MAX-YRS
  2 #MAX-YRS-FIL1  (N1)
  2 #MAX-YRS-A2    (A2)
1 REDEFINE #MAX-YRS
  2 #MAX-YRS-FIL2  (N2)
  2 #MAX-YRS-A1    (A1)
1 #CUR-POL-AGE    (P3)
1 #CUR-PREM-PD    (P7.2)
1 #SCR-OVR-GROWTH-RATE (N2.3)
1 #SCR-SHOW-REAL (A1) INIT <'N'>
1 #SAVE-SCR-X   (I2)
1 #ONLY-1       (L)
1 #SCR-OVR-DISP-1ST-10-YRS (A1) INIT<'N'>
1 #USE-X-CALCS   (L)
1 #DIVIDEND      (N5.4)
1 REDEFINE #DIVIDEND
  2 #DIV-5        (N5)
  2 #REM          (N4)
1 #INVALID  (L)
1 #CLERK-NAME (A20)
*
1 #CALC-DATE          (N8)
1 REDEFINE #CALC-DATE
  2 #CALC-DATE-YYYY (N4)
  2 #CALC-DATE-MM   (N2)
  2 #CALC-DATE-DD   (N2)
1 #CAP-CONV-ACV    (P7.2)
1 #CSV             (P7.2)
1 #CAP-CSV         (P7.2)
1 #CURR-LOAN-AMT   (P7.2)
1 #WORK-CAP-CONV-ACV  (P9.2)
1 #CAP-LOAN-END-DATE  (N8)
*
1 #OVERRIDE           (L)
1 #FLEX-POL           (L)
1 #CAP                (A6)
1 #PRORATE-LOAN       (L)
1 #RPU-ACV            (P7.2)
1 #TOT-LOAN-AMOUNT    (P6.2) /* DW2
1 #TOT-CURR-ACCUM-INT (P5.2)
1 #NU-ANN-PREM        (N7.2)
1 #OUTPUT-PREM-DIFF   (N7.2)
1 #LUMP-SUM           (N7.2) /* PM1
1 #OLD-ANN-PREM       (N7.2)
1 #NEW-ANN-PREM       (N7.2)
1 #DUES-DIFF          (N5.2)
*
1 #LST-CSV      (P7.2)
1 #CSV-W-O-TDIV (P7)
1 #SI-PLAN     (A2)
1 #TO-PLAN     (A3)
1 #FROM-PLAN   (A2)
1 #W-AGE       (P8)
1 #HOLD-ACV    (P7.2)
1 #HOLD-CSV    (P7.2)
1 #HOLD-MCV    (P7.2)
1 #HOLD-NYMCV  (P7.2)
1 #HOLD-NMCSV  (P7.2)
1 #RATE-DISP   (A7)
1 #RATE-CALC   (N2.3)
1 REDEFINE #RATE-CALC
  2 #RATE-CALC-4    (N4)
  2 #RATE-CALC-1    (N1)
1 #LINK-604-RSV-VA-DIFF  (P7.2)
1 #OUTPUT-OLD-PDUP-AMT   (P7.2)
1 #TOT-LOAN    (P7.2)
1 #TOT-DB      (P7.2)
1 #TOT-WORK    (P7)
1 #TOT-DISP    (A9)
1 #TOT-POLS    (N1)
1 #TOT-FACE    (N7.2)
1 #TOT-FOOTERS      (N2)
1 #TOT-TXT-LINES    (P3)
1 #LINES-TO-DELETE  (P3)
1 #YRS-TO-100       (N3)
1 REDEFINE #YRS-TO-100
  2 #YRS-TO-100-1    (A1)
  2 #YRS-TO-100-2    (A2)
*
1 #MEM-AGE          (N3)
1 REDEFINE #MEM-AGE
  2 #MEM-AGE-FILL    (N2)
  2 #MEM-AGE-1       (N1)
*
1 #SHOW-LOAN-REPAID (L)
1 #SCR-TOP-LINE      (A60)
1 #SCR-PROJ-NAME     (A64)
1 #SCR-PROJ-PLAN-MSG (A9)
1 REDEFINE #SCR-PROJ-PLAN-MSG
  2 #SCR-PROJ-PLAN-MSG-LIT (A7)
  2 #SCR-PROJ-PLAN-MSG-PLAN (A2)
1 #SCR-PROJ-LINE     (A79/50)
1 #W-PLAN          (A2)
1 #SCR-AS-OF-DATE  (A11)
1 #SCR-ISSUE-DT    (A11)
1 #SCR-ISSUE-AGE   (A2)
1 REDEFINE #SCR-ISSUE-AGE
  2 #SCR-ISSUE-AGE-N (N2)
1 #SCR-PLN          (A10)
1 REDEFINE #SCR-PLN
  2 #SCR-PLN-A4     (A4)
  2 #SCR-PLN-A6     (A6)
1 #SCR-AMT-DISP    (A10)
1 #SCR-AMT-DISP-6  (A7)
1 #SCR-MODE        (A32)
1 #SCR-MODE-LBL    (A14)
1 #FLX-CV         (C)
1 #NUM-YRS-CV     (C)
1 #PLAN-CV        (C)
1 #SCR-AV-OVR-CV   (C)
1 #SCR-CV          (C/50)
1 #MODAL-PREM      (P5.2)
1 #SCR-TEXT        (A70)
1 #USE-ASSUMED-AGE (L)
1 #AV-DUES         (N5.2)
1 #AV-DUES-DISP    (A8)
1 #AV-SNG-PREM-DISP (A9)
1 #WHOLE-DOLLARS   (P9)
1 #MAX-SCN-LINES   (P3) INIT <22>
1 #MAX-PAG-LINES   (P3) INIT <50>
1 #PAGE-LENGTH     (P3) INIT <99>
1 #REC-FOUND       (L)
1 #SMOK-NON        (A10)
1 #NUM-MONTHS      (P5)
1 #PREMS-YET-TO-PAY (P7.2)
1 #WORK-LAST-DURATION (P3)
1 #PREM-DIFF          (P3.2)
1 #ACCUM-PREM-DIFF    (P5.2)
1 #AMT-TO-ADD-TO-ACV  (P5.2)
*
1 #LAST       (A25)
1 #FIRST-MID  (A25)
1 #SUFF       (A9)
1 #OVRFLO     (A25)
*
1 #W-DATE-EDITED (A11)
1 #MONTHS (A36)  INIT <'JanFebMarAprMayJunJulAugSepOctNovDec'>
1 REDEFINE #MONTHS
  2 #MON       (A3/12)
*
1 #YYYYMMDD   (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY (N4)
    3 #MM   (N2)
  2 #DD   (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A (A4)
  2 #MM-A   (A2)
  2 #DD-A   (A2)
*
1 #DOB-DT-GR
  2 #DOB-MM     (A2)
  2 #DOB-FIL-1  (A1) INIT <'/'>
  2 #DOB-DD     (A2)
  2 #DOB-FIL-2  (A1) INIT <'/'>
  2 #DOB-YYYY   (A4)
1 REDEFINE #DOB-DT-GR
  2 #DOB-DT     (A10)
*
1 #MO-IND          (P4)
1 #SNG-PREM-CURR   (P8.7)
1 #ZSPPRM-CURR     (P8.7)
1 #ZSPEXP-CURR     (P8.7)
1 #PREM-PAID-YTD   (P8.7)
1 #INT-DB          (P8.7)
1 #NAR             (P8.7)
1 #BACV-A          (N8.7)
1 #MON-DB-PROC-EXP (N8.7)
1 #RBC             (N8.7)
1 #MON-MAINT-EXP   (N7.2)
1 #CSV-BOM         (N7.2)
1 #NXT-CONT-FUND   (N7.2)
1 #CURR-ACQ        (N7.2)
1 #AVL-TDIV        (N7.2)
1 #EOM-DB          (N7.2)
*
1 #HOLD-NAME       (A25)
1 #SCN-POLICY-NUMBER (A16)
1 #SCR-NAME        (A25)
1 #SCR-TITLE       (A34) INIT<'VALUE ADDED PROJECTION MENU SCREEN'>
1 #SCR-TABLE        (9)
  2 #SCR-LFT-PAREN (A1)
  2 #SCR-SELECTION (A1)
  2 #SCR-RGT-PAREN (A1)
  2 #SCR-EFF-DATE  (A10)
  2 #SCR-SAVE-IDX  (I2)
  2 #SCR-POL-NUM   (A16)
  2 #SCR-FACE      (A11)
  2 #SCR-PLAN      (A3)
*
1 #SCR-X           (I2)
1 #I1              (I2)
1 #I2              (I2)
1 #SEL-CV          (C/9)
*
*  - C2V11MVP AND C2V12MVP FIELDS  - - -
1 #SCR-OVR-NAME       (A25)
1 #SCR-OVR-DOB         (A8)
1 REDEFINE #SCR-OVR-DOB
  2 #SCR-OVR-DOB-MMDD  (N4)
  2 #SCR-OVR-DOB-YYYY  (N4)
1 REDEFINE #SCR-OVR-DOB
  2 #SCR-OVR-DOB-MM    (N2)
  2 #SCR-OVR-DOB-DD    (N2)
  2 #SCR-OVR-DOB-CENT  (N2)
  2 #SCR-OVR-DOB-YY    (N2)
*
1 #OVR-DOB             (N8)
1 REDEFINE #OVR-DOB
  2 #OVR-DOB-CENT      (N2)
  2 #OVR-DOB-YYMMDD    (N6)
  2 REDEFINE #OVR-DOB-YYMMDD
    3 #OVR-DOB-YY      (N2)
    3 #OVR-DOB-MM      (N2)
    3 #OVR-DOB-DD      (N2)
1 REDEFINE #OVR-DOB
  2 #OVR-DOB-YYYY        (N4)
  2 #OVR-DOB-MMDD        (N4)
*
1 #SCR-OVR-UNITS       (N2) INIT<1>
1 #SCR-OVR-PLAN        (A3) INIT<'OL'>   /* YK2
1 REDEFINE #SCR-OVR-PLAN
  2 #SCR-OVR-PLAN-1     (A1)
  2 #SCR-OVR-PLAN-2     (A1)
  2 #SCR-OVR-PLAN-3     (A1)              /* YK2
1 REDEFINE #SCR-OVR-PLAN
  2 #SCR-OVR-PLAN-N    (N2)
1 #SCR-OVR-MODE        (A1) INIT<'G'>
*
1 #SCR-OVR-ISSUE-DATE  (A8)
1 REDEFINE #SCR-OVR-ISSUE-DATE
  2 #SCR-OVR-ISSUE-MM   (N2)
  2 #SCR-OVR-ISSUE-DD   (N2)
  2 #SCR-OVR-ISSUE-CENT (N2)
  2 #SCR-OVR-ISSUE-YY   (N2)
1 REDEFINE #SCR-OVR-ISSUE-DATE
  2 #SCR-OVR-ISSUE-MMDD (N4)
  2 #SCR-OVR-ISSUE-YYYY (N4)
*
1 #OVR-ISSUE-DATE      (N8)
1 REDEFINE #OVR-ISSUE-DATE
  2 #OVR-ISSUE-CENT      (N2)
  2 #OVR-ISSUE-YYMMDD    (N6)
  2 REDEFINE #OVR-ISSUE-YYMMDD
    3 #OVR-ISSUE-YY      (N2)
    3 #OVR-ISSUE-MM      (N2)
    3 #OVR-ISSUE-DD      (N2)
1 REDEFINE #OVR-ISSUE-DATE
  2 #OVR-ISSUE-YYYY      (N4)
  2 #OVR-ISSUE-MMDD      (N4)
*
1 #SCR-OVR-SMOKER-FLAG (A1) INIT<'N'>
1 #SCR-OVR-MTHLY-VAL   (A1)      INIT<'N'>
1 #SCR-OVR-START-YEAR  (N4)
1 #SCR-OVR-DISPLAY-CALCS (A1)    INIT <'N'>
1 #SCR-OVR-SHOW-LOAN-REPAID (A1) INIT <'Y'>
1 #SCR-OVR-NUM-YRS       (N2)    INIT <70>
1 #SCR-OVR-SEX         (A1)   INIT<'M'>
1 #SCR-OVR-SNG-PREM    (A1)   INIT<'N'>
1 #SCR-OVR-CERT-NO     (N6)   INIT<999999>
1 #SCR-OVR-FACE-AMT    (N7.2)
1 #SCR-OVR-CAP-INT     (A1)   INIT<'N'>
1 #SCR-OVR-LOAN-AMT    (N5.2)
1 #SCR-OVR-LOAN-AMT-2  (N6.2)  /* DW2
1 #SCR-OVR-LOAN-INT-RATE (N5.0)  INIT<12000>
*
1 #PROJ-IDX        (I2)
1 #HDR-IDX         (I2)
1 #FTR-IDX         (I2)
1 #DTL-IDX         (I2)
*
1 #IDX               (I2)
1 #ISC               (I2)
1 #MTHLY-HDR-IDX     (I2)
1 #HDR-LABEL1-IDX    (I2)
1 #HDR-LABEL2-IDX    (I2)
1 #LINES-REMAINING   (P3)
*
* -- - - - YEARLY DETAIL LINE
1 #YEARLY-DTL        (A79)
1 REDEFINE #YEARLY-DTL
  2 #YDF1            (A1)
  2 #YD-YEAR         (A7)
  2 REDEFINE #YD-YEAR
    3 #YD-YEAR-3      (A3)
    3 #YD-YEAR-4      (A4)
  2 #YDF2            (A1)  /*2
  2 #YD-MEM-AGE      (A3)
  2 #YDF3            (A3)  /*6
  2 #YD-POL-AGE      (A3)
  2 #YD-F4           (A1)  /*3
  2 #YD-MIN-CSV      (A8)
  2 #YD-F5           (A2)
  2 #YD-MIN-DB       (A7)
  2 #YD-F6           (A2)
  2 #YD-DUES-PAID    (A7)
  2 #YD-F6A          (A1)
  2 #YD-PR-CSV       (A7)
  2 #YD-F7           (A3)
  2 #YD-PR-DB        (A7)
  2 #YD-F8           (A1)
  2 #YD-PR-CSV-NL    (A7)
  2 #YD-F9           (A1)
  2 #YD-PR-DB-NL     (A7)
*
* -  - - MONTHLY DETAIL LINE
1 #MONTHLY-DTL-G
  2 #MD-BOM-ACV       (A10)
  2 #MD-F1            (A1)
  2 #MD-PREMIUM       (A7)
  2 #MD-PR-DEFIC      (A6)
* 2 #MD-F3            (A1)
  2 #MD-COI           (A7)
  2 #MD-F4            (A1)
  2 #MD-INT           (A6)
  2 #MD-EOM-ACV       (A10)
  2 #MD-F6            (A1)
  2 #MD-CRED          (A8)
  2 #MD-EOM-CSV       (A10)
  2 #MD-F8            (A1)
  2 #MD-EOM-DB        (A10)
1 REDEFINE #MONTHLY-DTL-G
  2 #MONTHLY-DTL      (A78)
*
* - - - - AV DETAIL LINE
1 #AV-DTL        (A79)
1 REDEFINE #AV-DTL
  2 #AV-YRS-AS-MBR   (A8)
  2 #AV-G-CV         (A13)
  2 #AVF1            (A6)
  2 #AV-G-DB         (A13)
  2 #AVF2            (A7)
  2 #AV-CV           (A13)
  2 #AVF3            (A6)
  2 #AV-DB           (A13)
*
1 #W-CRED            (P4.2)
*
* -  WORK   FIELDS - - - - -
1 #AGE               (N2)
1 REDEFINE #AGE
  2 #AGE-X           (A2)
1 #ANNUAL-PREM       (N7.2)
1 #ENT-ANN-PREM      (N7.2)
1 #ENT-ANN-PREM-CV   (C)
*
1 #TRAN-DATE         (N8)
1 #CURR-DATN         (N8)
1 REDEFINE #CURR-DATN
  2 #CURR-YYYY       (N4)
  2 REDEFINE #CURR-YYYY
    3 #CURR-YYYY-A   (A4)
  2 #CURR-MM         (N2)
  2 REDEFINE #CURR-MM
    3 #CURR-MM-A     (A2)
  2 #CURR-DD         (N2)
*
1 #SLASH             (A1) CONST<'/'>
1 #COMMA             (A1) CONST<','>
1 #LAST-NAME         (A24)
1 #FIRST-NAME        (A24)
1 #OVFLW-NAME        (A24)
1 #CUR-DURATION      (P3)
1 #WORK-AMT          (P5.2)
1 #HOLD-PLAN         (A2)
1 #HOLD-PAY-STATUS   (A2)
1 #NUM-MBRSHIPS      (P1)
1 #REFRESH           (L)
1 #USE-AT            (L)
*
1 #FLEX-POLICY (L)
1 #LUMP-PMT    (N7.2)                                             /* PM1
1 #EXCH-1035   (N7.2)
1 #FAC-AMT     (N7.2)                                             /* NG2
1 #NUM-YEARS   (N3)
1 #ANN-PREM    (N7.2)
1 #DUES-PMT    (N3.2)
1 #PREM-AGE    (N2)
1 REDEFINE #PREM-AGE
  2 #PREM-AGE-A  (A2)
1 #PAYS-DUES   (L)
1 #SCR-SUFFIX  (A3)
*
1 VP-S01      VIEW OF A-STATUS
  2 NAME               (A25)
  2 MEMBER-CONTACT-ID                           /* TT1
  2 INTRO-FLAG         (A1)
*  2 SEX                (A1)
  2 DEBIT-CREDIT-AMT   (P7.2)
  2 X-FIRST-PLACE-FEE  (P7.2/9)
  2 X-BILL-ADJUST      (P5.2/9)
  2 X-LOAN-DATE        (N8/9)
  2 X-LOAN-DATE-2      (N8/9)
  2 X-LOAN-AMOUNT      (P5.2/9)
  2 X-LOAN-AMOUNT-2    (P7.2/9)  /* DW2
  2 X-INTEREST-RATE    (P2.3/9)
  2 REDEFINE X-INTEREST-RATE
    3 X-INTEREST-RATE-OCC  (9)
      4 X-INTEREST-RATE-5  (P5)
  2 LAST-SEG-USED      (P1)
  2 CAP-CONV-ACV       (P5.2)
  2 SPLIT-IND          (N1/9)
  2 MTD-ACV-PREM-ADJ   (P7.2/9)
  2 MTD-ACV-INT-ADJ    (P5.2/9)
  2 MTD-ACV-COI-ADJ    (P5.2/9)
  2 C*ACTIVE-SEGMENTS
  2 PREM-RATING        (A1/9)
  2 EXPIRY-DAY         (P3/9)
  2 ORIG-COST-BASIS    (P7.2/9)
  2 COST-BASIS         (P7.2/9)
  2 TOT-PREMIUMS-PAID  (P7.2/9)
  2 PAID-TO-DATE       (N8/9)
  2 REDEFINE PAID-TO-DATE
    3 PAID-TO-DATE-TAB  (9)
      4 PAID-TO-CENT   (N2)
      4 PAID-TO-YYMMDD (N6)
      4 REDEFINE PAID-TO-YYMMDD
        5 PAID-TO-DATE-YY  (N2)
        5 PAID-TO-DATE-MM  (N2)
        5 PAID-TO-DATE-DD  (N2)
*
1 APPL-V      VIEW OF A-APPL-TRACKING
  2 ID-NUMBER
  2 SSN
  2 NAME
  2 AT-STATUS
  2 INTRO-FLAG
  2 APPL-SOURCE
  2 CAP-IND
  2 RANK
  2 DATE-RECEIVED
  2 DATE-OF-BIRTH
  2 FACE-AMT-UNITS
  2 FACE-AMT-DOLS
  2 PLAN
  2 REDEFINE PLAN
    3 PLAN-N            (N2)
  2 REDEFINE PLAN
    3 PLAN-N1           (N1)
  2 SEX
  2 SMOKER-FLAG
  2 EXCH-1035
  2 LUMP-SUM
  2 MEMBER-CN
  2 RATING-CODE        /* PM2
*
1 MR-V VIEW OF A-REQUEST
  2 RQST-TABLE   (A10)
  2 REDEFINE RQST-TABLE
    3 BEN-IND     (A1)
    3 MAL-IND     (A1)
    3 BEN-SHO-IND (A1)
    3 ACC-IND     (A1)
    3 CAP-IND     (A1)
    3 APP-IND     (A1)
    3 PIL-IND     (A1)
    3 CO-IND      (A1)
    3 VP-IND      (A1)
    3 MS-IND      (A1)
  2 ASSUM-RET-DATE   (N8)
  2 REDEFINE ASSUM-RET-DATE
    3 ASSUM-RET-DATE-X   (N2/4)
*
  2 ASSUM-RET-DATE-2 (N8)
  2 REDEFINE ASSUM-RET-DATE-2
    3 ASSUM-RET-DATE-2-2X (N2/4)
  2 REDEFINE ASSUM-RET-DATE-2
    3 ASSUM-RET-DATE-2-2X-OCC  (4)
      4 ASSUM-RET-DATE-2-2X-1A  (A1)
      4 ASSUM-RET-DATE-2-2X-2A  (A1)
*
  2 ASSUM-RET-DATE-3 (N8)
  2 REDEFINE ASSUM-RET-DATE-3
    3 ASSUM-RET-DATE-3-X (N1/8)
*
1 #MR-VP      (L)
1 #MR-VP-X    (N1)
1 #SSN-FOUND  (L)
*
* BELOW for CALC-PREMS-PAID
1 #PP-DATE-OF-BIRTH  (N8)
1 #PP-ANNUAL-PREM    (N5.2)
1 #PP-PAY-STATUS     (A2)
1 #PP-TOT-PREMIUMS-PAID (N7.2)
1 #PP-PAID-TO-DATE   (N8)
1 #PP-ISSUE-DATE     (N8)
1 #PP-MODE           (A1)
1 #PP-PLAN           (A3)
1 #PP-COST-BASIS      (N7.2)
1 #PP-MONTH-ALLOC-AMT (N7.2)             /* YK2
1 #PP-INTRO-FLAG     (A1)
1 #PP-FIRST-PLACE-FEE (N7.2)
1 #PREMS-PAID         (P7.2)
1 #SUB-PREMS-PAID     (P7.2)
1 #PP-BADJ            (P5.2)
* ABOVE for CALC-PREMS-PAID
*
1 #GENDER             (A1)                                 /* TT1 BEGIN
1 #DATE-OF-BIRTH      (N8.0)
*
1 #PRV-DATE-OF-BIRTH      (N8.0)
1 REDEFINE #PRV-DATE-OF-BIRTH /* REDEF. BEGIN : DATE-OF-BIRTH
  2 #PRV-DOB-CENT (N2)
  2 #PRV-DOB-YY (N2)
  2 #PRV-DOB-MM (N2)
  2 #PRV-DOB-DD (N2)
1 REDEFINE #PRV-DATE-OF-BIRTH /* REDEF. BEGIN : DATE-OF-BIRTH
  2 #PRV-DOB-YYYY (N4)
  2 #PRV-DOB-MMDD (N4)                                         /* TT1 END
*
END-DEFINE
*
* INCLUDE GONERCXX
*
#CGA-ISN := #ISN
#CGA-SCR-ID := #PARM-ID-NUMBER
*
* IF *DEVICE = 'BATCH'
* AND (#CGA-SCR-COMMAND NE 'VP')
*  FETCH 'C2V40PVP'
* END-IF
*
#CURR-VAR-INT-RATE := FUNCTION-INT-RATE(<'RATE5AB'>)   /* YK2
#SCR-OVR-GROWTH-RATE := FUNCTION-INT-RATE(<'RATE2AA'>) /* YK2
*
* INCLUDE C2V12CVP
FORMAT LS=133
MOVE *DATN TO #CURR-DATN
*
* IF *DEVICE = 'BATCH'
*   MOVE #MAX-PAG-LINES TO #PAGE-LENGTH
* ELSE
MOVE #MAX-SCN-LINES TO #PAGE-LENGTH
* END-IF
*
IF (#CGA-ISN = 0) AND (#CGA-SCR-ID NE 0) /* ent id/ssn not found as MBR
  IF (#CGA-SCR-ID GE 500000) AND (#CGA-SCR-ID LT 700000) /* APPL ID ENT
    FIND (1) APPL-V WITH ID-NUMBER = #CGA-SCR-ID
      IF NO RECORDS FOUND
        IF *DEVICE = 'BATCH'
          ESCAPE ROUTINE
        END-IF
*
        MOVE '"AT" ID Not found' TO #ERR-TEXT
        PERFORM SHOW-ERROR
      END-NOREC
      MOVE TRUE TO #USE-AT
      MOVE *ISN TO #CGA-ISN
    END-FIND
  ELSE
    MOVE FALSE TO #SSN-FOUND
    IF #CGA-SCR-ID GE 999999   /* ssn ENTERED
      FIND APPL-V WITH SSN = #CGA-SCR-ID
        IF APPL-V.INTRO-FLAG = 'V'
          ESCAPE TOP
        ELSE
          MOVE TRUE TO #SSN-FOUND
        END-IF
*
        MOVE TRUE TO #USE-AT
        MOVE *ISN TO #CGA-ISN
        ESCAPE BOTTOM
      END-FIND
*
      IF NOT #SSN-FOUND
        IF *DEVICE = 'BATCH'
          ESCAPE ROUTINE
        END-IF
*
        MOVE 'SSN NOT FOUND' TO #ERR-TEXT
        PERFORM SHOW-ERROR
      END-IF
    ELSE
*     IF #CGA-SCR-ID LT 200000   /* CN ENTERED
      IF #CGA-SCR-ID LT 500000   /* CN ENTERED  ng1
        FIND (1) VP-S01 WITH MEMBER-KEY = #CGA-ID-G
          IF NO RECORDS FOUND
            IF *DEVICE = 'BATCH'
              ESCAPE ROUTINE
            END-IF
*
            MOVE 'SSN NOT FOUND' TO #ERR-TEXT
            PERFORM SHOW-ERROR
          END-NOREC
          MOVE *ISN TO #CGA-ISN
        END-FIND
      ELSE
        IF *DEVICE = 'BATCH'
          ESCAPE ROUTINE
        END-IF
*
        MOVE 'ID/SSN NOT FOUND' TO #ERR-TEXT
        PERFORM SHOW-ERROR
      END-IF
    END-IF
  END-IF
END-IF
*
RESET #TOT-FACE
IF (#CGA-SCR-ID NE 0) AND (NOT #USE-AT)   /* BLANK VP OPTION
  GET VP-S01 #CGA-ISN
  GET #PR-V  #CGA-ISN
  FOR #I1 1 TO C*ACTIVE-SEGMENTS     /* YK2
    IF STATUS (#I1) NE 'D'
      ESCAPE TOP
    END-IF
*
    IF PAY-STATUS (#I1) = '44' OR = '45'
      IF ISSUE-DATE (#I1) LT 18841201
        ADD (NUM-MBRSHIPS (#I1) * 5000) TO #TOT-FACE
      ELSE
        ADD (VP-S01.EXPIRY-DAY (#I1) * 5000) TO #TOT-FACE
      END-IF
    ELSE
      ADD FACE-AMOUNT (#I1) TO #TOT-FACE
    END-IF
*
    IF VP-S01.MTD-ACV-PREM-ADJ (#I1) NE 9999999.99
      ADD VP-S01.MTD-ACV-PREM-ADJ (#I1)
        TO #PR-V.ACC-CASH-VALUE (#I1)
      ADD VP-S01.MTD-ACV-PREM-ADJ (#I1)
        TO #PR-V.CASH-VALUE (#I1)
    END-IF
*
    IF VP-S01.MTD-ACV-INT-ADJ (#I1) NE 99999.99
      ADD VP-S01.MTD-ACV-INT-ADJ (#I1)
        TO #PR-V.ACC-CASH-VALUE (#I1)
      ADD VP-S01.MTD-ACV-INT-ADJ (#I1)
        TO #PR-V.CASH-VALUE (#I1)
    END-IF
*
    IF VP-S01.MTD-ACV-COI-ADJ (#I1) NE 99999.99
      SUBTRACT VP-S01.MTD-ACV-COI-ADJ (#I1)
        FROM #PR-V.ACC-CASH-VALUE (#I1)
      SUBTRACT VP-S01.MTD-ACV-COI-ADJ (#I1)
        FROM #PR-V.CASH-VALUE (#I1)
    END-IF
*
    IF   (#PR-V.ISSUE-DATE (#I1) GT *DATN - 10000)
        AND  (VP-S01.X-FIRST-PLACE-FEE (#I1) GT 400.00)  /* pusp not yet pd
      MOVE VP-S01.TOT-PREMIUMS-PAID (#I1) TO
        #PR-V.ACC-CASH-VALUE (#I1)
        #PR-V.CASH-VALUE (#I1)
    END-IF
  END-FOR
END-IF
*
IF  (#CGA-SCR-ID = 0)
    OR (#CGA-ORIG-SUFFIX = 'ADD' OR = 'FLX')
    OR (#USE-AT)
    OR (#CGA-ORIG-COMMAND = 'AV')
  PERFORM INITIALIZE-BLANK-VP
END-IF
*
RESET #MR-VP
IF  ((*DEVICE = 'BATCH') AND (#CGA-ORIG-SUFFIX = 'MR'))
    OR  (#CGA-ORIG-SUFFIX = 'MR')  /* ONLINE MR VP
  FIND (1) MR-V WITH ID-NUMBER = #CGA-SCR-ID
    IF NO RECORDS FOUND
      WRITE 'NO "MR" REC FOUND FOR VP REQUEST FOR' #CGA-SCR-ID
      ESCAPE BOTTOM
    END-NOREC
*
    IF VP-IND NE ' '   /* A VP WAS REQUESTED
      MOVE TRUE TO #MR-VP
    ELSE
      WRITE 'NO "MR" VP INDICATOR FOUND FOR' #CGA-SCR-ID
    END-IF
  END-FIND
END-IF
*
IF #USE-AT
  PERFORM LOAD-APPL-INFO
*
  IF (LUMP-SUM NE 0) OR (EXCH-1035 NE 0)
*     OR (NOT APPL-V.PLAN = '7P' OR = '20' OR = '30' OR = 'OL'
      OR NOT(APPL-V.PLAN = '7P' OR = '20' OR = '30' OR = 'OL'   /* NG3
*     OR = 'S1' OR = 'AL')    /* DW5
      OR = 'S1' OR IS-ANNUITY-LIFE(<APPL-V.PLAN>))              /* NG3
    MOVE 'FLX' TO #CGA-ORIG-SUFFIX
  END-IF
END-IF
*
RESET #GENDER                                           /* TT1
#GENDER := GET-GENDER(<VP-S01.MEMBER-CONTACT-ID>)       /* TT1
IF #CGA-ORIG-SUFFIX = 'FLX'
  IF #CGA-ORIG-COMMAND = 'AV'
    MOVE '"AV" invalid with "FLX"' TO #ERR-TEXT
    PERFORM SHOW-ERROR
  END-IF
*
  MOVE (AD=P) TO #FLX-CV #PLAN-CV
  MOVE TRUE TO #PAYS-DUES
  IF #USE-AT
    #PREM-RATING := APPL-V.RATING-CODE              /* PM2
    MOVE LUMP-SUM  TO #LUMP-PMT
    MOVE EXCH-1035 TO #EXCH-1035
*
    IF (LUMP-SUM NE 0) OR (EXCH-1035 NE 0)
        OR (NOT APPL-V.PLAN = '7P' OR = '20' OR = '30' OR = 'OL' OR = 'S1')
      IF APPL-V.PLAN = MASK (NN)
        MOVE APPL-V.PLAN-N TO #NUM-YEARS
      ELSE
        IF APPL-V.PLAN = MASK (N.)
          MOVE APPL-V.PLAN-N1 TO #NUM-YEARS
        END-IF
      END-IF
    END-IF
*
    IF (MEMBER-CN NE ' ')  /* existing mbr
      RESET #PAYS-DUES
    END-IF
  ELSE
    IF #CGA-SCR-ID NE 0   /* existing mbr
      RESET #PAYS-DUES
    END-IF
  END-IF
*
  IF VP-S01.INTRO-FLAG = 'S' OR = 'K' OR = 'G'   /* SPS/GEN
      OR = 'O' OR = 'P' OR = 'Q'   /* INS/ONLY
    RESET #PAYS-DUES
  END-IF
*
  MOVE VP-S01.INTRO-FLAG TO #INTRO-FLAG
  MOVE FACE-AMOUNT (#IDX) TO #FAC-AMT
  MOVE PREM-RATING (#IDX) TO #PREM-RATING
*
  MOVE '*' TO #CGA-SCR-COMMAND
*
  RESET #SCR-SUFFIX
*
  CALLNAT 'C1602SCO'
    #CGA-SCR-COMMAND #CGA-SCR-ID #SCR-SUFFIX
    #CGA-ORIG-COMMAND #CGA-CLERK
    #PAYS-DUES NAME DATE-OF-BIRTH
    SMOKER-FLAG (#IDX) #GENDER #LUMP-PMT
    #EXCH-1035
    #FAC-AMT                                  /* CHANGED TO P7.2
    #NUM-YEARS #ANN-PREM #DUES-PMT #PREM-AGE
    #FLEX-POLICY #PREM-RATING
*
  IF #NUM-YEARS = 0 OR = 999    /* DW5
    IF  #NUM-YEARS = 999
      MOVE 'AL' TO PLAN (#IDX)
    ELSE
      MOVE 'SPF' TO PLAN (#IDX)
    END-IF
*
    MOVE '47'  TO PAY-STATUS (#IDX)
    RESET ANNUAL-PREM (#IDX)
    COMPUTE CASH-VALUE (#IDX) = #EXCH-1035 + #ANN-PREM - #DUES-PMT
      + #LUMP-PMT
  ELSE
    MOVE #ANN-PREM TO ANNUAL-PREM (#IDX)
    COMPRESS #NUM-YEARS 'F' INTO PLAN (#IDX) LEAVING NO
    COMPUTE CASH-VALUE (#IDX) = #LUMP-PMT + #EXCH-1035
  END-IF
*
  MOVE #PREM-RATING      TO PREM-RATING    (#IDX)
  MOVE CASH-VALUE (#IDX) TO ACC-CASH-VALUE (#IDX)
  MOVE CASH-VALUE (#IDX) TO VP-S01.TOT-PREMIUMS-PAID (#IDX)
  MOVE #FAC-AMT          TO FACE-AMOUNT       (#IDX)
  MOVE #PREM-AGE-A       TO ISSUE-AGE         (#IDX)
  RESET X-LOAN-AMOUNT (#IDX)  X-LOAN-AMOUNT-2 (#IDX)
  RESET LAST-ANN-CASH-VALUE (#IDX)
  RESET MIN-CASH-VALUE (#IDX) NXT-YR-MIN-CASH-VALUE (#IDX)
END-IF
*
MOVE VP-S01.NAME TO #SCR-NAME
SEPARATE VP-S01.NAME LEFT INTO #LAST-NAME #FIRST-NAME #OVFLW-NAME
  WITH DELIMITER #COMMA
*
COMPRESS #FIRST-NAME #LAST-NAME INTO #L-SWITCHED-NAME
*
IF #OVFLW-NAME > '   '
  COMPRESS #L-SWITCHED-NAME ',' INTO #HOLD-NAME LEAVING NO SPACE
  COMPRESS #HOLD-NAME #OVFLW-NAME INTO #L-SWITCHED-NAME
END-IF
*
RESET #PRV-DATE-OF-BIRTH
#PRV-DATE-OF-BIRTH   := GET-DATE-OF-BIRTH(<#PR-V.MEMBER-CONTACT-ID>)
PERFORM FORMAT-MENU
*
IF #MR-VP AND (VP-IND = '1' OR = '3') /* BYPASS CURRENT POLICIES
  RESET #SCR-SELECTION (*)
END-IF
*
* IF #CGA-SCR-SUFFIX = 'OPT'
*  INPUT TEXT #SCR-TEXT USING MAP 'C2V18MVP'
*  PERFORM CHECK-AST
* END-IF
*
REPEAT  /* MAJ LOOP FOR NON 'OVR' 'RF'
*
  #SCR-X := #SAVE-SCR-X := #IDX := #ISC := #SEQ-ID
*
  MOVE X-LOAN-AMOUNT  (#IDX) TO #CURR-LOAN-AMT
*
  MOVE X-LOAN-AMOUNT   (#IDX) TO #SCR-OVR-LOAN-AMT
  MOVE X-LOAN-AMOUNT-2 (#IDX) TO #SCR-OVR-LOAN-AMT-2
  MOVE X-LOAN-AMOUNT   (#IDX) TO LOAN-AMOUNT    /* to setup correct loan
*
  IF X-LOAN-AMOUNT-2 (#IDX) GT 99999.99  /* DW2
    MOVE 99999.99 TO LOAN-AMOUNT-2
  ELSE
    MOVE X-LOAN-AMOUNT-2 (#IDX) TO LOAN-AMOUNT-2
  END-IF
*
  MOVE X-INTEREST-RATE (#IDX) TO INTEREST-RATE  /* & rate
*
  IF X-LOAN-AMOUNT (#IDX) = 0
    RESET #SCR-OVR-LOAN-INT-RATE
  ELSE
    MOVE X-INTEREST-RATE-5 (#IDX) TO #SCR-OVR-LOAN-INT-RATE
  END-IF
  MOVE ACC-CASH-VALUE (#IDX) TO #HOLD-ACV
  MOVE CASH-VALUE     (#IDX) TO #HOLD-CSV
  MOVE MIN-CASH-VALUE (#IDX) TO #HOLD-MCV
  MOVE NXT-YR-MIN-CASH-VALUE (#IDX) TO #HOLD-NYMCV
  MOVE NXT-MON-CASH-VALUE (#IDX)    TO #HOLD-NMCSV
  MOVE PREM-RATING (#IDX) TO #PREM-RATING
*
  MOVE ISSUE-AGE (#IDX) TO #YRS-TO-100-2
  COMPUTE #YRS-TO-100 = 100 - (#YRS-TO-100 + LAST-DURATION (#IDX))
  IF #SCR-OVR-NUM-YRS GT #YRS-TO-100
    MOVE 99 TO #SCR-OVR-NUM-YRS
  END-IF
*
  REPEAT                  /* LOOP FOR 'OVR' 'RF' PROCESSING
    MOVE #HOLD-ACV TO ACC-CASH-VALUE (#IDX) /* reset for after paid-up
    MOVE #HOLD-CSV TO CASH-VALUE     (#IDX) /* calcs
    MOVE #HOLD-MCV TO MIN-CASH-VALUE (#IDX)
    MOVE #HOLD-NYMCV TO NXT-YR-MIN-CASH-VALUE (#IDX)
    MOVE #HOLD-NMCSV TO NXT-MON-CASH-VALUE (#IDX)
    MOVE ANNUAL-PREM(#IDX) TO #OLD-ANN-PREM /* hold 4 tot-prm paid calc
*
    RESET #OVERRIDE
*    IF  (#CGA-ORIG-SUFFIX = 'OVR' OR = 'OVP'  /* OVR EXISTING MBR
*                       OR = 'ADD' OR = 'FLX') /* ADD INS OPTION
*     OR (#CGA-ORIG-SUFFIX = MASK ('IP')) /* INT PROJ
*     OR (#CGA-ORIG-ID = 0)              /* BLANK VP OPTION
*     OR (#CGA-ORIG-COMMAND = 'AV')      /* AV COMMAND
*     OR (#USE-AT)
*      IF #CGA-ORIG-COMMAND = 'AV'
*        MOVE (AD=P) TO #SCR-AV-OVR-CV #NUM-YRS-CV #PLAN-CV
*      END-IF
*
*      MOVE TRUE TO #OVERRIDE
*      PERFORM OVERRIDE-PROCESS
*    ELSE
    MOVE PLAN (#IDX) TO #SCR-OVR-PLAN #HOLD-PLAN
*    END-IF
*
*    IF   (#CGA-ORIG-SUFFIX = 'PUR' OR = 'OVP')
*     AND (PAY-STATUS (#IDX) = '47' OR = '48')
*      MOVE 'Y' TO #SCR-OVR-SNG-PREM
*      MOVE 'PUR' TO #CGA-ORIG-SUFFIX
*      PERFORM OVERRIDE-PROCESS
*    END-IF
*
    PERFORM CALC-ACQ  /* DW2
    MOVE LEFT #ACQ-COST-X TO #ACQ-COST-X
    VALUE-PROJECTION-INFO.ACQUISITION-COST := #ACQ-COST-X
    COMPRESS '$' VALUE-PROJECTION-INFO.ACQUISITION-COST INTO
      VALUE-PROJECTION-INFO.ACQUISITION-COST LEAVING NO
*
    PERFORM SETUP-PROJECTION
    PERFORM BUILD-PAGE-1
*
    IF #REFRESH   /* IF 'RF' ENT DURING SHOW CALCS
      RESET #REFRESH
    ELSE
      MOVE '*' TO #CGA-SCR-COMMAND
*
*      IF *DEVICE = 'BATCH'
*        WRITE (8) NOTITLE USING FORM 'C2V13FVP'
*      ELSE
*        IF #CGA-SCR-SUFFIX = 'OPT'
*          RESET #CGA-SCR-SUFFIX #CGA-ORIG-SUFFIX     /* DW10
*          INPUT TEXT #TEXT-13 USING MAP 'C2V19MVP'
*          PERFORM CHECK-AST
*        ELSE
*          IF PLAN (#IDX) = 'AL'   /* DW5
*            INPUT TEXT #SCR-TEXT USING MAP 'C2V20MVP'
*          ELSE
*            IF ISSUE-DATE(#IDX) GE 19970101   /* DW2
*              INPUT TEXT #SCR-TEXT USING MAP 'C2V21MVP'
*            ELSE
*              INPUT TEXT #SCR-TEXT USING MAP 'C2V18MVP'
*            END-IF
*          END-IF
*          PERFORM CHECK-AST
*
*          IF  (#CGA-ORIG-ID = 0)
*           OR (#CGA-ORIG-SUFFIX = 'ADD' OR = 'FLX')
*            MOVE 'Press ENTER to see cost indices' TO #SCR-TEXT
*            MOVE '*' TO #CGA-SCR-COMMAND
*          END-IF
*
*          INPUT TEXT #SCR-TEXT USING MAP 'C2V13MVP'   yk begin
*          RESET #SCR-TEXT
*          PERFORM CHECK-AST
* Send lines back to calling program instead of displaying the map
      ESCAPE ROUTINE IMMEDIATE
********                                               yk end
*          IF  (#CGA-ORIG-ID = 0)
*           OR (#CGA-ORIG-SUFFIX = 'ADD' OR = 'FLX')
*            INPUT TEXT #SCR-TEXT USING MAP 'C2V14MVP'  /* COST INDICES
*            PERFORM CHECK-AST
*          END-IF
*        END-IF
*
*        IF #OVERRIDE
*          ESCAPE TOP
*        END-IF
*      END-IF
    END-IF
*
    IF  (#CGA-SCR-COMMAND = 'RF')
        AND ((#CGA-SCR-ID = #CGA-ORIG-ID)
        OR (#CGA-SCR-ID = 0))
      IF  (#CGA-ORIG-SUFFIX = 'OVR' OR = 'OVP')
          OR (#CGA-ORIG-SUFFIX = MASK ('IP')) /* INT PROJ
          OR (#CGA-ORIG-ID = 0)
        IGNORE
      ELSE
        RESET #SCR-SELECTION (*)
        ESCAPE BOTTOM
      END-IF
    ELSE
      IF  (#CGA-SCR-COMMAND NE '*')
          OR (#CGA-SCR-ID NE #CGA-ORIG-ID)
          OR (#CGA-SCR-SUFFIX NE #CGA-ORIG-SUFFIX)
          OR (#ONLY-1 AND (#CGA-SCR-COMMAND NE 'RF')
          AND (*DEVICE NE 'BATCH'))
        IF #CGA-SCR-COMMAND = '*'
          MOVE 'VP' TO #CGA-SCR-COMMAND
        END-IF
*
        FETCH 'G1000PXX'
      END-IF
*
      MOVE '*' TO #CGA-SCR-COMMAND
      RESET #SCR-SELECTION (#SAVE-SCR-X) /* flag as done
      ESCAPE BOTTOM
    END-IF
  END-REPEAT  /* (3880)  'OVR' 'RF' LOOP
END-REPEAT  /* (0553)  NON 'OVR' 'RF' LOOP
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FORMAT-MENU
*
MOVE '*' TO #CGA-SCR-COMMAND
MOVE *DATN         TO #YYYYMMDD
MOVE #YYYY         TO #SCR-OVR-START-YEAR
*
MOVE #L-SWITCHED-NAME TO #SCR-OVR-NAME
MOVE #GENDER    TO #SCR-OVR-SEX
*
IF ID-NUMBER NE 0
  MOVE ID-NUMBER     TO #SCR-OVR-CERT-NO
END-IF
*
IF #PRV-DATE-OF-BIRTH NE 0
  MOVE #PRV-DOB-MM        TO #SCR-OVR-DOB-MM       /* TT1
  MOVE #PRV-DOB-DD        TO #SCR-OVR-DOB-DD       /* TT1
  MOVE #PRV-DOB-CENT      TO #SCR-OVR-DOB-CENT     /* TT1
  MOVE #PRV-DOB-YY        TO #SCR-OVR-DOB-YY       /* TT1
END-IF
MOVE DATE-OF-BIRTH TO #OVR-DOB
*
MOVE 0 TO #SCR-X
RESET #OPT-FOUND   /* DW99
*
FOR #IDX = 1 TO C*ACTIVE-SEGMENTS   /* YK2
  IF STATUS (#IDX) = 'D'
*   IF  (PLAN (#IDX) = 'RT' OR = 'LT' OR = 'SO' OR = 'FSO')           /* YK1
*    OR ((PLAN-1A (#IDX) GE ('U')) AND  (PLAN-1A (#IDX) LE ('Z')))    /* YK1
    IF (PLAN(#IDX) = 'SO' OR = 'FSO')                                 /* YK1
        OR FUNCTION-TERM-POLICY(<PLAN(#IDX)>)                            /* YK1
      ESCAPE TOP
    END-IF
  ELSE
    IF (STATUS (#IDX) = 'E' OR = 'F' OR = 'G')
        AND (#CGA-ORIG-SUFFIX = 'PUR' OR = 'OVP')
      IGNORE
    ELSE
      ESCAPE TOP
    END-IF
  END-IF
*
  IF #IDX GT VP-S01.C*ACTIVE-SEGMENTS
    ESCAPE BOTTOM
  END-IF
*
  ADD 1 TO #SCR-X
*
  CALLNAT 'GPLNMSXX' #SCN-POLICY-NUMBER ID-NUMBER #IDX /* build POL-#
  MOVE #SCN-POLICY-NUMBER TO #SCR-POL-NUM (#SCR-X)
*
  MOVE EDITED FACE-AMOUNT (#IDX) (EM=ZZZ,ZZ9.99) TO #SCR-FACE (#SCR-X)
  COMPRESS '$' #SCR-FACE (#SCR-X) INTO #SCR-FACE (#SCR-X) LEAVING NO
  MOVE PLAN (#IDX) TO #SCR-PLAN (#SCR-X)
*
  MOVE ISSUE-DATE (#IDX) TO #YYYYMMDD
  COMPRESS #MM #DD #YYYY INTO #SCR-EFF-DATE(#SCR-X) WITH #SLASH
  MOVE '(' TO #SCR-LFT-PAREN (#SCR-X)
  MOVE ')' TO #SCR-RGT-PAREN (#SCR-X)
  MOVE #IDX TO #SCR-SAVE-IDX (#SCR-X)
*
  IF  ((*DEVICE = 'BATCH')
      OR  ((#CGA-SCR-SUFFIX = 'OPT') AND ((ISSUE-DATE (#IDX) LT 19970101)
      OR (MONTH-ALLOC-AMT (#IDX) = 999.99))))
      AND NOT #OPT-FOUND          /* DW99
    IF #CGA-SCR-SUFFIX = 'OPT'  /* Find 1st policy DW99
      MOVE TRUE TO #OPT-FOUND
    END-IF
*
    MOVE 'X' TO #SCR-SELECTION (#SCR-X)
    ADD 1 TO #TOT-WL-POLS
  END-IF
END-FOR  /* (5420)
*
IF #SCR-X = 1
  MOVE 'X' TO #SCR-SELECTION (1)
  MOVE 1   TO #IDX
  MOVE TRUE TO #ONLY-1
END-IF
*
FOR #IDX = 1 TO C*ACTIVE-SEGMENTS     /* YK2
  IF #SCR-LFT-PAREN(#IDX) NE '('
    MOVE (AD=P) TO #SEL-CV(#IDX)
  END-IF
END-FOR
*
END-SUBROUTINE  /* (5180)
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALL-AOCX2V6A
* * * * * * * * * * * * * * * * *
*
CALLNAT 'C1601SCO'
  #CGA-ORIG-COMMAND
  #CGA-ORIG-ID
  #CGA-ID
  #CGA-ORIG-SUFFIX
  #TO-PLAN
  #SCR-OVR-SEX
  #IDX
  #TRAN-DATE
  #PR-V.STATUS          (1:9)
  #PR-V.PLAN            (1:9)
  #PR-V.ONLINE-ACTION   (1:9)
  #PR-V.MODE            (1:9)
  #PR-V.CONVERSION-FLAG (1:9)
  #PR-V.SMOKER-FLAG     (1:9)
  #PR-V.ISSUE-AGE       (1:9)
  #PR-V.PAY-STATUS      (1:9)
  #PR-V.ISSUE-DATE      (1:9)
  PAID-TO-DATE                     (1:9)
  #PR-V.FACE-AMOUNT     (1:9)
  #PR-V.ANNUAL-PREM     (1:9)
  #PR-V.LAST-DURATION   (1:9)
  #PR-V.CASH-VALUE      (1:9)
  #PR-V.DEATH-BENEFIT   (1:9)
  #PR-V.NUM-MBRSHIPS    (1:9)
  #PR-V.DURATION        (1:9)
  #PR-V.MONTH-IND       (1:9)
  #PR-V.MIN-CASH-VALUE  (1:9)
  #PR-V.NXT-YR-MIN-CASH-VALUE (1:9)
  #PR-V.NXT-MON-CASH-VALUE    (1:9)
  #PR-V.NXT-MON-DEATH-BENEFIT (1:9)
  #PR-V.ACC-CASH-VALUE        (1:9)
  #PR-V.CONV-DURATION         (1:9)
  #PR-V.MONTH-ALLOC-AMT       (1:9)
  #PR-V.PREM-DEFICIENCY       (1:9)
  #PR-V.BEG-CASH-VALUE        (1:9)
  #PR-V.NET-PR-RATIO          (1:9)
  #LINK-604-RSV-VA-DIFF
  #OUTPUT-OLD-PDUP-AMT
  #PRORATE-LOAN
  #RPU-ACV
  #TOT-LOAN-AMOUNT
  #TOT-CURR-ACCUM-INT
  #NU-ANN-PREM
  #OUTPUT-PREM-DIFF
  #DUES-DIFF
  #LUMP-SUM
*
END-SUBROUTINE   /* (6040)
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE INITIALIZE-BLANK-VP
*
IF  #CGA-ID = 0
  MOVE 999999 TO ID-NUMBER
END-IF
*
IF    ((#CGA-ORIG-COMMAND NE 'AV') OR (#CGA-ID = 0))
    AND (NOT #CGA-ORIG-SUFFIX = 'ADD' OR = 'FLX' OR = 'MR')
  RESET VP-S01.NAME
  MOVE 'M' TO #GENDER                 /* TT1
  MOVE 0   TO DATE-OF-BIRTH
END-IF
*
RESET STATUS (*)
RESET LOAN-AMOUNT
RESET LOAN-AMOUNT-2
RESET INTEREST-RATE
RESET ONLINE-ACTION-GN
RESET RESTRICT-MBR-SW
MOVE 1 TO NUMBER-MEMBERSHIPS
MOVE 1 TO VP-S01.C*ACTIVE-SEGMENTS
*
MOVE 1 TO #IDX
MOVE *DATN  TO ISSUE-DATE (#IDX)
MOVE 'D'    TO STATUS     (#IDX)
MOVE 'N'    TO SMOKER-FLAG(#IDX)
MOVE 'N'    TO CONVERSION-FLAG(#IDX)
MOVE 10000  TO FACE-AMOUNT(#IDX)
MOVE '1'    TO ONLINE-ACTION(#IDX)
MOVE '22'   TO PAY-STATUS (#IDX)
MOVE 1      TO NUM-MBRSHIPS (#IDX)
MOVE 'OL'   TO PLAN (#IDX)
MOVE 'G'    TO MODE (#IDX)
*
RESET CONV-DURATION (#IDX) /* to reset 999 on vp add on capped
RESET CASH-VALUE     (#IDX)
RESET VP-S01.TOT-PREMIUMS-PAID (#IDX)
RESET ACC-CASH-VALUE (#IDX)
RESET MIN-CASH-VALUE (#IDX)
RESET MONTH-ALLOC-AMT (#IDX) /* to ind use new va calcs
RESET BEG-CASH-VALUE  (#IDX) /*    2/3/2005 RLB
*
IF   (#CGA-ORIG-SUFFIX = 'ADD' OR = 'FLX')
    AND (LAST-SEG-USED LT 9)
  COMPUTE NUM-MBRSHIPS (#IDX) = LAST-SEG-USED + 1
END-IF
*
END-SUBROUTINE   /* (6570)
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LOAD-APPL-INFO
* * * * * * * * * * * * * * * * * *
*
MOVE 1 TO #IDX
MOVE APPL-V.NAME           TO VP-S01.NAME
MOVE APPL-V.DATE-OF-BIRTH  TO DATE-OF-BIRTH
MOVE APPL-V.INTRO-FLAG     TO VP-S01.INTRO-FLAG
* MOVE APPL-V.DATE-RECEIVED  TO ISSUE-DATE (#IDX)     /* PM1
MOVE *DATN                 TO ISSUE-DATE (#IDX)       /* PM1
MOVE APPL-V.SMOKER-FLAG    TO SMOKER-FLAG(#IDX)
MOVE APPL-V.PLAN           TO PLAN (#IDX)
*
IF APPL-V.SEX NE ' '
  MOVE APPL-V.SEX TO #GENDER       /* TT1
ELSE
  MOVE 'M' TO #GENDER
END-IF
*
IF APPL-V.CAP-IND = 'Y'
  MOVE 999 TO CONV-DURATION (#IDX)
END-IF
*
IF APPL-V.PLAN = MASK (NN)
  COMPRESS PLAN (#IDX) 'P' INTO PLAN (#IDX) LEAVING NO
END-IF
*
COMPUTE FACE-AMOUNT (#IDX) = (APPL-V.FACE-AMT-UNITS * 1000)
  + APPL-V.FACE-AMT-DOLS
MOVE *DATN TO VP-S01.PAID-TO-DATE (#IDX)
*
IF APPL-V.PLAN ='SP'
  MOVE '47' TO PAY-STATUS (#IDX)
END-IF
*
END-SUBROUTINE   /* (7060)
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE SETUP-PROJECTION
* * * * * * * * * * * * * * * * * *
*
MOVE *DATN TO #YYYYMMDD
COMPRESS #MM-A #DD-A #YYYY-A
  INTO #PARM-DATE WITH '/'
MOVE #IDX                       TO #L-SEGNO
MOVE VP-S01.C*ACTIVE-SEGMENTS   TO #L-ACTIVE-SEG
MOVE PAID-TO-DATE (#IDX)        TO #L-PAID-THRU
*
FOR #SCR-X 1 TO VP-S01.C*ACTIVE-SEGMENTS
  IF STATUS (#SCR-X) = 'D'
    MOVE ISSUE-DATE (#SCR-X) TO #L-ISS-DT (#SCR-X)
  END-IF
END-FOR
*
COMPUTE #L-GROWTH-RATE = #SCR-OVR-GROWTH-RATE * 1000
*
IF #SCR-OVR-MTHLY-VAL = 'Y'
  MOVE 'M' TO #L-MONTHLY-SW
ELSE
  MOVE 'N' TO #L-MONTHLY-SW
END-IF
*
MOVE #SCR-OVR-START-YEAR  TO #L-MNTHLY-START-YR
MOVE 'PROJ'               TO #L-REIN-CODE
MOVE #SCR-OVR-NUM-YRS     TO #L-NUM-PROJ-YRS
MOVE #SCR-OVR-DISPLAY-CALCS TO #L-DISPLAY-CALCS
MOVE #SCR-OVR-SHOW-LOAN-REPAID TO #L-SHOW-LOAN-REPAID
*
IF #CGA-ORIG-COMMAND = 'AV'
  MOVE 'AV' TO #L-REIN-CODE
  MOVE 25   TO #L-NUM-PROJ-YRS
  MOVE 'N'  TO #L-SHOW-LOAN-REPAID
END-IF
*
IF #CGA-SCR-SUFFIX = MASK ('IP')
  MOVE 'N' TO #L-SHOW-LOAN-REPAID
  IF #CGA-SCR-SUFFIX = 'IPA'
    MOVE 'IPRA' TO #L-REIN-CODE
  ELSE
    IF #CGA-SCR-SUFFIX = 'IPB'
      MOVE 'IPRB' TO #L-REIN-CODE
    ELSE
      IF #CGA-SCR-SUFFIX = 'IPC'
        MOVE 'IPRC' TO #L-REIN-CODE
      ELSE
        IF #CGA-SCR-SUFFIX = 'IPD'
          MOVE 'IPRD' TO #L-REIN-CODE
        ELSE
          IF #CGA-SCR-SUFFIX = 'IPE'
            MOVE 'IPRE' TO #L-REIN-CODE
            MOVE 'Y' TO #L-SHOW-LOAN-REPAID
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
END-IF
*
IF  ((PROCESS-IND = 'O')  /* opted-out of sharing data
    OR  (#CGA-SCR-SUFFIX = 'OPT'))
    AND (NOT INTRO-FLAG = 'S' OR = 'K' OR = 'G')
  IF #CGA-SCR-SUFFIX = 'OPT'
    MOVE 'O' TO PROCESS-IND
  END-IF
END-IF
*
MOVE #PREM-RATING TO #L-PREM-RATING
*
IF #SCR-OVR-CAP-INT = 'Y'
  MOVE 'CAP' TO #L-REIN-CODE
END-IF
*
IF #CGA-SCR-SUFFIX = MASK ('LN')
  IF #CGA-SCR-SUFFIX = 'LN4'
    MOVE 'LN40' TO #L-REIN-CODE
  ELSE
    IF #CGA-SCR-SUFFIX = 'LN5'
      MOVE 'LN50' TO #L-REIN-CODE
    END-IF
  END-IF
END-IF
*
RESET #L-NUM-DTLS  #OO-DT (*)  #OO-AGE (*)
RESET #OO-RET-CSV (*) #OO-RET-DB (*) #OO-OO-CSV (*) #OO-OO-DB (*)
*
* * * *  *  *  *  *
IF  INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q'
  RESET LOAN-AMOUNT
END-IF
*
* IF *DEVICE = 'BATCH'
*   CALLNAT 'AOCX2V5B'  #PR-V  #L-MISC-INPUT  #L-OUTPUT-INFO
* ELSE
CALLNAT 'AOCX2V5A'  #PR-V  #L-MISC-INPUT  #L-OUTPUT-INFO
* END-IF
*
IF #CGA-SCR-SUFFIX = 'OPT'
  MOVE #L-PTY-MEM-AGE (*) TO #OO-MEM-AGE (*)
  MOVE #L-PTY-PR-CSV (*) TO #OO-CSV (*)
  MOVE #L-PTY-PR-DB  (*) TO #OO-DB  (*)
*
*  IF   (*DEVICE NE 'BATCH')
  MOVE 'G' TO PROCESS-IND  /* DW9
  CALLNAT 'AOCX2V5A'  #PR-V  #L-MISC-INPUT  #L-OUTPUT-INFO
*  END-IF
END-IF
END-SUBROUTINE   /* (7420)
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE SHIFT-DOB
* * * * * * * * * * * * * *
MOVE #OVR-DOB-MM TO #SCR-OVR-DOB-MM
MOVE #OVR-DOB-DD TO #SCR-OVR-DOB-DD
MOVE #OVR-DOB-CENT TO #SCR-OVR-DOB-CENT
MOVE #OVR-DOB-YY TO #SCR-OVR-DOB-YY
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE DATE-REFORMAT
* * * * * * * * * * * * * * * * *
*
IF (#MM GT 00) AND (#MM LT 13)
  MOVE #MM TO #I1
  MOVE EDITED #DD (EM=Z9) TO #DD-A
  COMPRESS #DD #MON (#I1) #YYYY-A INTO #W-DATE-EDITED WITH '-'
ELSE
  MOVE '    ?    ' TO #W-DATE-EDITED
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * *
* DEFINE SUBROUTINE DO-MR-NEW-PROJS
* * * * * * * * * *
*
* FOR #MR-VP-X 1 TO 3
*  IF ASSUM-RET-DATE-X (#MR-VP-X) NE 0
*    PERFORM INITIALIZE-BLANK-VP
*
*    IF #USE-AT
*      PERFORM LOAD-APPL-INFO
*    END-IF
*
*    PERFORM OVERRIDE-PROCESS
*    PERFORM SETUP-PROJECTION
*    PERFORM BUILD-PAGE-1
*    RESET #CGA-SCR-COMMAND
*
*    IF *DEVICE = 'BATCH'
*      WRITE (8) NOTITLE USING FORM 'C2V13FVP'
*    ELSE
*      MOVE '*' TO #CGA-SCR-COMMAND
*      INPUT TEXT #SCR-TEXT USING MAP 'C2V13MVP'
*      PERFORM CHECK-AST
*    END-IF
*  END-IF
* END-FOR
*
* END-SUBROUTINE
*
* * * * * * * *
* DEFINE SUBROUTINE SHOW-ERROR
* * * * * * * *
*
* INPUT TEXT #ERR-TEXT MARK *#CGA-SCR-ID USING MAP 'G1000MXX'
* PERFORM FETCH-G1000PXX
*
* END-SUBROUTINE
*
* * * * * * *
* DEFINE SUBROUTINE CHECK-AST
* * * * * * *
*
* IF #CGA-SCR-COMMAND NE '*'
*  PERFORM FETCH-G1000PXX
* END-IF
*
* END-SUBROUTINE
*
* * * * * * * *
* DEFINE SUBROUTINE FETCH-G1000PXX
* * * * * * * *
*
* FETCH 'G1000PXX'
*
* END-SUBROUTINE
*
* * * * * * * *
DEFINE SUBROUTINE CALC-ACQ
*
COMPUTE ROUNDED #ACQ-COST = #ACQ-COST-PER-POL + (#ACQ-COSP-PER-1K
  * FACE-AMOUNT (#IDX) / 1000)
MOVE EDITED #ACQ-COST (EM=ZZ,ZZ9.99) TO #ACQ-COST-X
COMPRESS #ACQ-COST-X '.' INTO #ACQ-COST-X LEAVING NO
*
END-SUBROUTINE
*
* INCLUDE C2V11CVP
*
* * * * * * * * * * *
DEFINE SUBROUTINE BUILD-PAGE-1
* * * * * * * * * * *
*
IF PAY-STATUS (#IDX) = '43'
  IF #CGA-CLERK = 'DRW'
    WRITE 'Only Drw can do VP on PULT' / 'Press enter'
  ELSE
    WRITE 'VP on a Long Term Care Pol Invalid' / 'Press Enter'
    FETCH 'G1000PXX'
  END-IF
END-IF
*
RESET #PREMS-PAID
MOVE DATE-OF-BIRTH     TO #PP-DATE-OF-BIRTH
MOVE #OLD-ANN-PREM     TO #PP-ANNUAL-PREM   /* DW4
MOVE PAY-STATUS (#IDX) TO #PP-PAY-STATUS
MOVE TOT-PREMIUMS-PAID (#IDX) TO #PP-TOT-PREMIUMS-PAID
MOVE PAID-TO-DATE (#IDX)  TO #PP-PAID-TO-DATE
MOVE ISSUE-DATE (#IDX)    TO #PP-ISSUE-DATE
MOVE MODE (#IDX)       TO #PP-MODE
MOVE PLAN (#IDX)       TO #PP-PLAN
MOVE COST-BASIS (#IDX) TO #PP-COST-BASIS
MOVE MONTH-ALLOC-AMT (#IDX) TO #PP-MONTH-ALLOC-AMT
MOVE INTRO-FLAG        TO #PP-INTRO-FLAG
MOVE X-FIRST-PLACE-FEE (#IDX) TO #PP-FIRST-PLACE-FEE
MOVE X-BILL-ADJUST (#IDX) TO #PP-BADJ
*
CALLNAT 'GPRPDSCO'
  #PP-DATE-OF-BIRTH
  #PP-ANNUAL-PREM
  #PP-PAY-STATUS
  #PP-TOT-PREMIUMS-PAID
  #PP-PAID-TO-DATE
  #PP-ISSUE-DATE
  #PP-MODE
  #PP-PLAN
  #PP-COST-BASIS
  #PP-MONTH-ALLOC-AMT
  #PP-INTRO-FLAG
  #PP-FIRST-PLACE-FEE
  #PREMS-PAID
  #SUB-PREMS-PAID
  #PP-BADJ
*
FOR #FST-X 1 TO C*ACTIVE-SEGMENTS     /* YK2
  IF STATUS (#FST-X) = 'D'
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF #FST-X GT 9
  MOVE 1 TO #FST-X
END-IF
*
RESET #USE-X-CALCS
IF   (#PR-V.ISSUE-DATE(#IDX) GE 19970101)
    AND (#PR-V.MONTH-ALLOC-AMT(#IDX) NE 999.99)
  MOVE TRUE TO #USE-X-CALCS
END-IF
*
RESET #SCR-PROJ-LINE (*)
*
RESET #TOT-POLS
RESET #TOT-FACE
RESET #TOT-DB
*
FOR #I1 1 TO 9
  IF   (#PR-V.STATUS (#I1) = 'D')
      AND (#PR-V.OWNERSHIP-FLAG(#I1) =
      #PR-V.OWNERSHIP-FLAG (#IDX))
    ADD 1 TO #TOT-POLS
    ADD #PR-V.FACE-AMOUNT (#I1) TO #TOT-FACE
*
    IF  (#PR-V.ONLINE-ACTION-GN    = '2')
        OR (#PR-V.ONLINE-ACTION (#I1) = '1')
      ADD #PR-V.FACE-AMOUNT (#I1) TO #TOT-DB
    ELSE
      IF #PR-V.CONVERSION-FLAG (#I1) = 'N' OR = 'C'
        ADD #PR-V.DEATH-BENEFIT (#I1) TO #TOT-DB
      ELSE
        COMPUTE #TOT-DB = #TOT-DB
          + (#PR-V.FACE-AMOUNT (#I1) * 1.8)
      END-IF
    END-IF
  END-IF
END-FOR
*
MOVE *DATN TO #YYYYMMDD
PERFORM DATE-REFORMAT
MOVE #W-DATE-EDITED TO #SCR-AS-OF-DATE
*
IF #SCR-OVR-MTHLY-VAL = 'Y'
  COMPRESS 'VALUE ADDED MONTHLY CALCS AS OF' #SCR-AS-OF-DATE
    INTO #SCR-TOP-LINE
ELSE
  IF #PR-V.PLAN (#IDX) = 'GPL' OR = 'GP2'                    /* YK2
    COMPRESS 'GENERATIONS PLUS WHOLE LIFE PROJECTION AS OF' #SCR-AS-OF-DATE
      INTO #SCR-TOP-LINE
  ELSE
    COMPRESS 'VALUE ADDED LIFE PROJECTION AS OF' #SCR-AS-OF-DATE
      INTO #SCR-TOP-LINE
  END-IF
END-IF
*
IF #PREM-RATING NE ' '
  COMPRESS #SCR-TOP-LINE 'with Rating' #PREM-RATING INTO #SCR-TOP-LINE
END-IF
*
CALLNAT 'GCKNMSXX' #CGA-CLERK #INVALID #CLERK-NAME
MOVE #L-SWITCHED-NAME TO #SCR-PROJ-NAME
MOVE 1 TO #PROJ-IDX
*
IF CONV-DURATION (#IDX) = 888
  COMPRESS 'AAFMAA/' #SCR-PROJ-NAME INTO #SCR-PROJ-NAME LEAVING NO
END-IF
*  COMPRESS '          PREPARED FOR' #SCR-PROJ-NAME
*  INTO #SCR-PROJ-LINE (#PROJ-IDX)
*
* IF (#CLERK-NAME NE ' ') AND (NOT #INVALID)
*  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) 'BY' #CLERK-NAME
*    INTO #SCR-PROJ-LINE (#PROJ-IDX)
* END-IF
* MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
*
CALLNAT 'GPLNMSXX' #SCN-POLICY-NUMBER ID-NUMBER #IDX /* build POL-#
MOVE #SCN-POLICY-NUMBER TO #SCR-POL-NUM (#ISC)
*
ADD 1 TO #PROJ-IDX
*
* IF *DEVICE = 'BATCH'
*  ADD 1 TO #PROJ-IDX
* END-IF
MOVE #PROJ-IDX TO #OO-INFO-X
ADD 1 TO #POL-#
RESET #OO-TOT-FND (*)
*
MOVE #PR-V.ISSUE-DATE (#IDX) TO #YYYYMMDD
PERFORM DATE-REFORMAT
MOVE #W-DATE-EDITED TO #SCR-ISSUE-DT
MOVE #PR-V.ISSUE-AGE (#IDX) TO #SCR-ISSUE-AGE
MOVE EDITED #PR-V.FACE-AMOUNT (#IDX) (EM=ZZZ,ZZ9.99)
  TO #SCR-AMT-DISP
* COMPRESS ' CN' #SCR-POL-NUM (#ISC) '($'
*    INTO #SCR-PROJ-LINE (#PROJ-IDX)
* COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) #SCR-AMT-DISP ' FACE AMOUNT)'
*    INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
*
* IF #CGA-ORIG-SUFFIX = 'ADD' OR = 'FLX'
*  COMPRESS  #SCR-PROJ-LINE (#PROJ-IDX) 'IF'
*   INTO #SCR-PROJ-LINE (#PROJ-IDX)
* END-IF
*
IF (NOT #USE-X-CALCS)
    AND (#SCR-OVR-SEX = 'F')
  ADD 3 TO #SCR-ISSUE-AGE-N
END-IF
*
* COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) 'ISSUED' #SCR-ISSUE-DT
*  'AT AGE' #SCR-ISSUE-AGE       INTO #SCR-PROJ-LINE (#PROJ-IDX)
*
* ADD 1 TO #PROJ-IDX
*
MOVE 12 TO #CIX-MODE
IF #PR-V.PAY-STATUS (#IDX) = '47'
  MOVE EDITED TOT-PREMIUMS-PAID (#IDX) (EM=ZZZ,ZZ9) TO #SCR-AMT-DISP
  IF #PR-V.PLAN (#IDX) = 'GPL' OR = 'GP2'     /* Gen Plus
    COMPRESS '          GENERATION PLUS    --- SINGLE PAYMENT OF $'
      #SCR-AMT-DISP INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
  ELSE
*   IF #PR-V.PLAN (#IDX) = 'AL'  /* DW5
    IF IS-ANNUITY-LIFE(<#PR-V.PLAN(#IDX)>)         /* YK3
      COMPRESS '          ANNUITY LIFE    --- SINGLE PAYMENT OF $'
        #SCR-AMT-DISP INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
    ELSE
      IF  (INTRO-FLAG = 'S' OR = 'K' OR = 'G')
          OR (#CGA-ORIG-SUFFIX = 'SPS' OR = 'GEN')
        COMPRESS '        LIFETIME COVERAGE --- SINGLE PAYMENT OF $'
          #SCR-AMT-DISP INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
      ELSE
        COMPRESS '          LIFE MEMBERSHIP --- SINGLE PAYMENT OF $'
          #SCR-AMT-DISP INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
      END-IF
    END-IF
  END-IF
ELSE
  RESET #SCR-PLN
  IF #PR-V.PLAN (#IDX) = 'OL'
    MOVE '  ORDINARY' TO #SCR-PLN
  ELSE
    IF #PR-V.PLAN (#IDX) = '20P'
      MOVE '20-PAY' TO #SCR-PLN-A6
    ELSE
      IF #PR-V.PLAN (#IDX) = '30P'
        MOVE '30-PAY' TO #SCR-PLN-A6
      ELSE
        IF #PR-V.PLAN (#IDX) = '7P'
          MOVE ' 7-PAY' TO #SCR-PLN-A6
        ELSE
*         IF #PR-V.PLAN (#IDX) = 'AL'  /* DW5
          IF IS-ANNUITY-LIFE(<#PR-V.PLAN(#IDX)>)    /* YK3
            MOVE ' ANNUITY' TO #SCR-PLN
          ELSE
            IF #PR-V.PLAN (#IDX) = 'GPL' OR = 'GP2'  /* Gen Plus          YK2
              MOVE ' GPL' TO #SCR-PLN-A6
            ELSE
              IF #PR-V.PLAN-2A (#IDX) = 'P'
                COMPRESS #PR-V.PLAN-1A (#IDX) '-PAY'
                  INTO #SCR-PLN-A6 LEAVING NO
              ELSE
                COMPRESS #PR-V.PLAN-2 (#IDX) '-PAY'
                  INTO #SCR-PLN-A6 LEAVING NO
              END-IF
            END-IF
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
*
  IF #PR-V.PAY-STATUS (#IDX) = '44'
    MOVE '(EXTENDED TERM INSURANCE)' TO #SCR-MODE
  ELSE
    IF #PR-V.PAY-STATUS (#IDX) GT '40'
      MOVE '(PAID-UP)' TO #SCR-MODE
    ELSE
      IF #PR-V.MODE (#IDX) = 'A' OR = '1'   /* DW1
        MOVE #PR-V.ANNUAL-PREM (#IDX) TO #MODAL-PREM
        MOVE 'ANNUALLY)' TO #SCR-MODE-LBL
        MOVE 1 TO #CIX-MODE
      ELSE
        IF #PR-V.MODE (#IDX) = 'S' OR = '2'    /* DW1
          COMPUTE #MODAL-PREM = #PR-V.ANNUAL-PREM (#IDX) / 2
          MOVE 'SEMI-ANNUALLY)' TO #SCR-MODE-LBL
          MOVE 2 TO #CIX-MODE
        ELSE
          IF #PR-V.MODE (#IDX) = 'Q' OR = '4'   /* DW1
            COMPUTE #MODAL-PREM = #PR-V.ANNUAL-PREM(#IDX) / 4
            MOVE 'QUARTERLY)' TO #SCR-MODE-LBL
            MOVE 4 TO #CIX-MODE
          ELSE
            COMPUTE #MODAL-PREM = #PR-V.ANNUAL-PREM(#IDX) / 12
            MOVE 'MONTHLY)' TO #SCR-MODE-LBL
          END-IF
        END-IF
      END-IF
*
      MOVE EDITED #MODAL-PREM (EM=ZZ,ZZZ.99) TO #SCR-AMT-DISP
      COMPRESS '$' #SCR-AMT-DISP INTO #SCR-AMT-DISP LEAVING NO
      COMPRESS '(PAID' #SCR-AMT-DISP INTO #SCR-MODE
      COMPRESS #SCR-MODE #SCR-MODE-LBL INTO #SCR-MODE
    END-IF
  END-IF
*
  MOVE EDITED #PR-V.ANNUAL-PREM (#IDX) (EM=ZZ,ZZZ.99)
    TO #SCR-AMT-DISP
  COMPRESS '$' #SCR-AMT-DISP INTO #SCR-AMT-DISP LEAVING NO
*
*  COMPRESS #SCR-PLN 'LIFE WITH ANNUAL PREMIUM OF' #SCR-AMT-DISP
*    #SCR-MODE  INTO #SCR-PROJ-LINE (#PROJ-IDX)
END-IF
*
IF  (#L-SHOW-LOAN-REPAID = 'N')
    OR (#L-REIN-CODE = 'NC' OR = 'AV')
    OR (#L-PTY-PR-CSV-NL (1) = 999999)
  MOVE FALSE TO #SHOW-LOAN-REPAID
ELSE
  IF ((#PR-V.LOAN-AMOUNT NE 0)
      AND ((#PR-V.INTEREST-RATE - .5) LT #SCR-OVR-GROWTH-RATE))
      OR   ((#PR-V.LOAN-AMOUNT-2 NE 0)
      AND ((#CURR-VAR-INT-RATE - .5) LT #SCR-OVR-GROWTH-RATE))
    MOVE TRUE TO #SHOW-LOAN-REPAID
  ELSE
    MOVE FALSE TO #SHOW-LOAN-REPAID
  END-IF
END-IF
*
* IF #USE-X-CALCS AND (#CGA-CLERK = 'DRW' OR = 'PAM')
*           OR = 'RLB')                                      /* DW18/DW19
*  COMPRESS '  INSURANCE CATEGORY   GUAR'
*   INTO #SCR-PROJ-LINE (#PROJ-IDX)
* ELSE
*  IF   (#PR-V.CONVERSION-FLAG (#IDX) = 'N')
*   AND (#PR-V.ISSUE-DATE (#IDX) GE 19860701)
*    COMPRESS '  INSURANCE CATEGORY    GUARANTEED'
*     INTO #SCR-PROJ-LINE (#PROJ-IDX)
*  ELSE
*    COMPRESS '                        GUARANTEED'
*      INTO #SCR-PROJ-LINE (#PROJ-IDX)
*  END-IF
* END-IF
*
COMPUTE #RATE-CALC = #L-GROWTH-RATE / 1000
IF #RATE-CALC-1 = 0
  MOVE EDITED #RATE-CALC (EM=Z9.99) TO #RATE-DISP
ELSE
  MOVE EDITED #RATE-CALC (EM=Z9.999) TO #RATE-DISP
END-IF
COMPRESS #RATE-DISP '%' INTO #RATE-DISP LEAVING NO
*
* IF #SHOW-LOAN-REPAID
*  IF #PR-V.RESTRICT-MBR-SW = 'Y'
*    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '           RESTRICTED MEMBER'
*     INTO #SCR-PROJ-LINE (#PROJ-IDX)
*  ELSE
*    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX)
*      '    ILLUSTRATED CREDITING RATE' #RATE-DISP
*     INTO #SCR-PROJ-LINE (#PROJ-IDX)
*  END-IF
* ELSE
*  IF #PR-V.RESTRICT-MBR-SW = 'Y'
*    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '              RESTRICTED'
*      INTO #SCR-PROJ-LINE (#PROJ-IDX)
*  ELSE
*    IF #USE-X-CALCS AND (#CGA-CLERK = 'DRW' OR = 'PAM')
*       OR = 'RLB')                          /* DW18/DW19
*      COMPRESS #SCR-PROJ-LINE (#PROJ-IDX)
*       '                   ILLUSTRATED CREDITING RATE' #RATE-DISP
*        INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
*    ELSE
*      COMPRESS #SCR-PROJ-LINE (#PROJ-IDX)
*       '           ILLUSTRATED CREDITING RATE' #RATE-DISP
*        INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
*    END-IF
*  END-IF
* END-IF
*
* ADD 1 TO #PROJ-IDX
* MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
*
* IF #USE-X-CALCS AND (#CGA-CLERK = 'DRW' OR = 'PAM')
*      OR = 'RLB')                                          /* DW18/DW19
*  IF #PR-V.SMOKER-FLAG (#IDX) = 'S'
*    COMPRESS '        SMOKER       MINIMUM  TERMINA-'
*      INTO #SCR-PROJ-LINE (#PROJ-IDX)
*  ELSE
*    COMPRESS '      NON-SMOKER     MINIMUM  TERMINA-'
*      INTO #SCR-PROJ-LINE (#PROJ-IDX)
*  END-IF
* ELSE
*  IF   (#PR-V.CONVERSION-FLAG (#IDX) = 'N')
*   AND (#PR-V.ISSUE-DATE (#IDX) GE 19860701)
*    IF #PR-V.SMOKER-FLAG (#IDX) = 'S'
*      COMPRESS '        SMOKER        MINIMUM AMOUNTS'
*         INTO #SCR-PROJ-LINE (#PROJ-IDX)
*    ELSE
*      COMPRESS '      NON-SMOKER      MINIMUM AMOUNTS'
*         INTO #SCR-PROJ-LINE (#PROJ-IDX)
*    END-IF
*  ELSE
*      COMPRESS '                      MINIMUM AMOUNTS'
*         INTO #SCR-PROJ-LINE (#PROJ-IDX)
*  END-IF
* END-IF
*
* IF #SHOW-LOAN-REPAID
*  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '   TOTAL   IF LOAN UNPAID   I'
*       'F LOAN REPAID'     INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
* ELSE
*  IF #PR-V.RESTRICT-MBR-SW = 'Y'
*    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '  TOTAL    MEMBER'
*      INTO #SCR-PROJ-LINE (#PROJ-IDX)
*  ELSE
*    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX)
*      '  TOTAL' INTO #SCR-PROJ-LINE (#PROJ-IDX)
*  END-IF
* END-IF
*
* ADD 1 TO #PROJ-IDX
* MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
*
* IF INTRO-FLAG = 'S' OR = 'K' OR = 'G'
*  MOVE '         INS  YRS IN   CASH'
*   TO #SCR-PROJ-LINE (#PROJ-IDX)
* ELSE
*  MOVE '         MBR  YRS IN   CASH'
*   TO #SCR-PROJ-LINE (#PROJ-IDX)
* END-IF
*
* IF #USE-X-CALCS AND (#CGA-CLERK = 'DRW' OR = 'PAM')   /* DW18/DW19
*  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '    TION'
*   TO #SCR-PROJ-LINE (#PROJ-IDX)
* ELSE
*  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '   DEATH'
*   TO #SCR-PROJ-LINE (#PROJ-IDX)
* END-IF
*
* IF #SHOW-LOAN-REPAID
*  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX)
* '    PRMS NET CASH NET DEATH   CASH   DEATH'
*     INTO #SCR-PROJ-LINE(#PROJ-IDX)
* ELSE
*  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '    PRMS    CASH    DEATH'
*   INTO #SCR-PROJ-LINE (#PROJ-IDX)
* END-IF
*
* ADD 1 TO #PROJ-IDX
* MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
* IF #USE-X-CALCS
* IF #CGA-CLERK = 'DRW' OR = 'PAM'     /* DW18/DW19
*  MOVE ' MN/YEAR AGE   FORCE   VALUE  DIVIDEND   PAID   VALUE* BENEFIT*'
*     TO #SCR-PROJ-LINE (#PROJ-IDX)
* ELSE
*    MOVE ' MN/YEAR AGE   FORCE   VALUE  BENEFIT    PAID   VALUE* BENEFIT*'
*       TO #SCR-PROJ-LINE (#PROJ-IDX)
* END-IF
* ELSE
*  MOVE ' MN/YEAR AGE   FORCE   VALUE  BENEFIT    PAID   VALUE   BENEFIT'
*     TO #SCR-PROJ-LINE (#PROJ-IDX)
* END-IF
*
* IF #SHOW-LOAN-REPAID
*  IF #USE-X-CALCS
*    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '   VALUE*  BENE*'
*      INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
*  ELSE
*    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '   VALUE BENEFIT'
*      INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
*  END-IF
* END-IF
*
RESET #TOT-FOOTERS
*
IF #TOT-POLS GT 1
  ADD 1 TO #TOT-FOOTERS
END-IF
*
IF #USE-X-CALCS
  ADD 1 TO #TOT-FOOTERS
END-IF
*
IF   (INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q') AND (#IDX = 1)
    AND (INTEREST-RATE LT 5.00) AND (LOAN-AMOUNT GT 0)
  ADD 1 TO #TOT-FOOTERS
END-IF
*
MOVE #PROJ-IDX TO #TOT-TXT-LINES
*
ADD  #L-NUM-DTLS TO #TOT-TXT-LINES
ADD #TOT-FOOTERS TO #TOT-TXT-LINES
* IF *DEVICE = 'BATCH'
*  ADD  #L-NUM-DTLS TO #TOT-TXT-LINES /* doubl spaced
*  ADD #TOT-FOOTERS TO #TOT-TXT-LINES
* END-IF
IF   (#SCR-OVR-MTHLY-VAL NE 'Y')
    AND (#TOT-TXT-LINES GT #PAGE-LENGTH)
  COMPUTE #LINES-TO-DELETE = #TOT-TXT-LINES - #PAGE-LENGTH
*
  IF #CGA-SCR-SUFFIX = 'OPT'
    ADD 1 TO #LINES-TO-DELETE
    ADD 1 TO #OO-NUM-WL
  END-IF
*
  IF #SCR-OVR-DISP-1ST-10-YRS = 'Y'
    RESET #LINES-TO-DELETE
  END-IF
*
  IF #LINES-TO-DELETE GT 0
    FOR #I1 10 TO 2 STEP -1
      MOVE #L-PTY-MEM-AGE (#I1) TO #MEM-AGE
      IF NOT (#MEM-AGE-1 = 0 OR = 5)
          AND (#L-PTY-ANN-PRM (#I1) NE 99999.99)
        MOVE 99999.99  TO #L-PTY-ANN-PRM (#I1)
        SUBTRACT 1 FROM #LINES-TO-DELETE
*
        IF #LINES-TO-DELETE = 0
          ESCAPE BOTTOM
        END-IF
      END-IF
    END-FOR
  END-IF
*
  IF #LINES-TO-DELETE GT 0
    FOR #I1 #L-NUM-DTLS TO 2 STEP -1
      MOVE #L-PTY-MEM-AGE (#I1) TO #MEM-AGE
      IF  (#MEM-AGE = 96)
          OR (#MEM-AGE-1 = 0)
          AND (#L-PTY-ANN-PRM (#I1) NE 99999.99)
        IGNORE
      ELSE
        IF #L-PTY-ANN-PRM (#I1) NE 99999.99
          MOVE 99999.99  TO #L-PTY-ANN-PRM (#I1)
          SUBTRACT 1 FROM #LINES-TO-DELETE
          IF #LINES-TO-DELETE = 0
            ESCAPE BOTTOM
          END-IF
        END-IF
      END-IF
    END-FOR
  END-IF
*
  IF #LINES-TO-DELETE GT 0
    FOR #I1 #L-NUM-DTLS TO 2 STEP -1
      IF   (#MEM-AGE NE 96)
          AND (#L-PTY-ANN-PRM (#I1) NE 99999.99)
        MOVE 99999.99  TO #L-PTY-ANN-PRM (#I1)
        SUBTRACT 1 FROM #LINES-TO-DELETE
        IF #LINES-TO-DELETE = 0
          ESCAPE BOTTOM
        END-IF
      END-IF
    END-FOR
  END-IF
END-IF
*
ADD 1 TO #PROJ-IDX
*
* IF *DEVICE = 'BATCH'
*  ADD  1 TO #PROJ-IDX
* END-IF
*
MOVE 1 TO #DTL-IDX
*
IF #CURR-YYYY = #SCR-OVR-START-YEAR
  MOVE *DATN TO #CALC-DATE
  SUBTRACT 1 FROM #CALC-DATE-MM  /* ok to be 0
ELSE
  MOVE #SCR-OVR-START-YEAR TO #CALC-DATE-YYYY
  MOVE ISSUE-DATE-MM (#IDX) TO #CALC-DATE-MM
  MOVE ISSUE-DATE-DD (#IDX) TO #CALC-DATE-DD
END-IF
*
PERFORM BUILD-PAGE-COMMON
*
END-SUBROUTINE  /* (1608)
*
* * * * * * * * * *
DEFINE SUBROUTINE FORMAT-MTHLY-DTL
* * * * * * * * * *
*
PERFORM FORMAT-YEARLY-DTL
*
* MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
*
* IF #USE-X-CALCS
* COMPRESS '   LST ACV + PRM - ACQ/MNT-COI  + INT  = EOM ACV (CF - TDV)'
*   'C-SUR-VL  TOT-DB' INTO #SCR-PROJ-LINE (#PROJ-IDX)
* ELSE
* COMPRESS '   LST ACV + PRM - PRMDF - COI  + INT  = EOM ACV  - CRED  ='
*   'EOM CSV   EOM-DB' INTO #SCR-PROJ-LINE (#PROJ-IDX)
* END-IF
*
ADD 1 TO #PROJ-IDX
MOVE 11 TO #I1
*
FOR #I2 1 TO 2                  /* DW7
  REPEAT UNTIL #PROJ-IDX GT #PAGE-LENGTH
      OR #DTL-IDX  GT #L-NUM-DTLS
      OR (#DTL-IDX GT 27)
      OR #L-DTL-MNTHLY-IND (#DTL-IDX) NE 'M'
    IF #L-PTM-BOM-ACV (#DTL-IDX) = 0 /* TO BYPASS EMPTY LINE
        OR (#L-PTM-BOM-ACV (#DTL-IDX) NE MASK(NNNNNNNN))
      ADD 1 TO #DTL-IDX
      ESCAPE TOP
    END-IF
*
    IF  (#PR-V.CONV-DURATION (#IDX) = 999)
        OR (#CGA-SCR-SUFFIX = 'CAP')
      ADD 1 TO #CALC-DATE-MM
*
      IF #CALC-DATE-MM GT 12
        MOVE 1 TO #CALC-DATE-MM
        ADD 1 TO #CALC-DATE-YYYY
      END-IF
    END-IF
*
    MOVE EDITED #L-PTM-BOM-ACV   (#DTL-IDX) (EM=-ZZZZZZ.99) TO #MD-BOM-ACV
    MOVE EDITED #L-PTM-PREMIUM   (#DTL-IDX) (EM=ZZZ9.99) TO #MD-PREMIUM
    MOVE EDITED #L-PTM-PR-DEFIC  (#DTL-IDX) (EM=ZZZ.99) TO #MD-PR-DEFIC
    MOVE EDITED #L-PTM-COI       (#DTL-IDX) (EM=-ZZZ.99) TO #MD-COI
    MOVE EDITED #L-PTM-INT       (#DTL-IDX) (EM=ZZZ.99) TO #MD-INT
    MOVE EDITED #L-PTM-EOM-ACV   (#DTL-IDX) (EM=-ZZZZZZ.99) TO #MD-EOM-ACV
    MOVE EDITED #L-PTM-EOM-CSV   (#DTL-IDX) (EM=-ZZZZZZ.99) TO #MD-EOM-CSV
    MOVE EDITED #L-PTM-EOM-DB    (#DTL-IDX) (EM=ZZZZZZ.99) TO #MD-EOM-DB
    COMPUTE #W-CRED = #L-PTM-EOM-ACV (#DTL-IDX) - #L-PTM-EOM-CSV (#DTL-IDX)
    MOVE EDITED #W-CRED (EM=-ZZZZ.99)        TO #MD-CRED
*
    MOVE #MONTHLY-DTL TO #SCR-PROJ-LINE (#PROJ-IDX)
*
    IF #SCR-OVR-DISPLAY-CALCS = 'Y'
      IF #USE-X-CALCS
        MOVE #L-CALC-MO-IND (#I1 + 5)  TO #MO-IND
        MOVE #L-CALC-AMT (#I1)     TO #SNG-PREM-CURR
        MOVE #L-CALC-AMT (#I1 + 1) TO #BACV-A
        MOVE #L-CALC-AMT (#I1 + 2) TO #INT-DB
        MOVE #L-CALC-AMT (#I1 + 3) TO #MON-DB-PROC-EXP
        MOVE #L-CALC-AMT (#I1 + 4) TO #NAR
        MOVE #L-CALC-AMT (#I1 + 5) TO #RBC
        MOVE #L-CALC-AMT2 (#I1)     TO #MON-MAINT-EXP
        MOVE #L-CALC-AMT2 (#I1 + 1) TO #CSV-BOM
        MOVE #L-CALC-AMT2 (#I1 + 2) TO #NXT-CONT-FUND
        MOVE #L-CALC-AMT2 (#I1 + 3) TO #CURR-ACQ
        MOVE #L-CALC-AMT2 (#I1 + 4) TO #AVL-TDIV
        MOVE #L-CALC-AMT2 (#I1 + 5) TO #EOM-DB
      ELSE
        MOVE #L-CALC-MO-IND (#I1 + 5)  TO #MO-IND
        MOVE #L-CALC-AMT (#I1)     TO #SNG-PREM-CURR
        MOVE #L-CALC-AMT (#I1 + 1) TO #ZSPPRM-CURR
        MOVE #L-CALC-AMT (#I1 + 2) TO #ZSPEXP-CURR
        MOVE #L-CALC-AMT (#I1 + 3) TO #PREM-PAID-YTD
        MOVE #L-CALC-AMT (#I1 + 4) TO #INT-DB
        MOVE #L-CALC-AMT (#I1 + 5) TO #NAR
      END-IF
      ADD 6 TO #I1
*
      MOVE '*' TO #CGA-SCR-COMMAND
*
*    IF #USE-X-CALCS
*      INPUT TEXT 'MONTHLY INTERNAL CALCS FOR 1ST YEAR SELECTED'
*          USING MAP 'C2V17MVP'
*    ELSE
*      IF #OVR-ISSUE-DATE GT 19860630
*        INPUT TEXT 'MONTHLY INTERNAL CALCS FOR 1ST YEAR SELECTED'
*         USING MAP 'C2V16MVP'
*      ELSE
*        INPUT TEXT 'MONTHLY INTERNAL CALCS FOR 1ST YEAR SELECTED'
*         USING MAP 'C2V15MVP'
*      END-IF
*    END-IF
*
      IF #CGA-SCR-COMMAND NE '*'
        IF #CGA-SCR-COMMAND = 'RF'
          MOVE TRUE TO #REFRESH
          ESCAPE ROUTINE
        ELSE
          FETCH 'G1000PXX'
        END-IF
      END-IF
    END-IF
*
    ADD 1 TO #DTL-IDX
    ADD 1 TO #PROJ-IDX
  END-REPEAT  /* (1550)
*
*  INPUT TEXT #SCR-TEXT USING MAP 'C2V13MVP'  /* DW7
  ESCAPE ROUTINE IMMEDIATE
  MOVE 10 TO #PROJ-IDX
  ADD 1 TO #DTL-IDX
END-FOR
MOVE 'VP' TO #CGA-SCR-COMMAND
FETCH 'G1000PXX'                      /* DW7
*
END-SUBROUTINE  /* (0029)
*
* * * * * * * * * * *
DEFINE SUBROUTINE FORMAT-YEARLY-DTL
* * * * * * * * * * *
*
RESET #LST-CSV #OO-X #OO-TOT-X #LAST-AGE
ADD 1 TO #1ST-TIM
#PROJ-IDX := 1                        /* YK
REPEAT UNTIL (#PROJ-IDX GT #PAGE-LENGTH)
    OR (#DTL-IDX  GT #L-NUM-DTLS)
    OR (#DTL-IDX GT 27)
    OR (#L-DTL-MNTHLY-IND (#DTL-IDX) = 'M')
  IF #L-PTY-ANN-PRM (#DTL-IDX) = 99999.99  /* DELETE THIS LINE
    ADD 1 TO #DTL-IDX
    ESCAPE TOP
  END-IF
*
  IF   (#DTL-IDX GT 1) /* stop proj when csv/db exceeds 9,999,999.99
      AND (((#L-PTY-PR-CSV (#DTL-IDX) LT #L-PTY-PR-CSV (#DTL-IDX - 1))
      AND   (#L-PTY-PR-DB  (#DTL-IDX) LT #L-PTY-PR-DB  (#DTL-IDX - 1))
      AND   (#L-PTY-PR-DB  (#DTL-IDX - 1) GT 9000000)) /* has overflown
      OR (#L-PTY-MIN-DB(#DTL-IDX) + #L-PTY-PR-DB(#DTL-IDX) GT 9999999))
    ESCAPE BOTTOM
  END-IF
*
  MOVE *DATN TO #YYYYMMDD
  IF  (#L-PTY-YEAR(#DTL-IDX) = 0)
      OR (#L-PTY-YEAR(#DTL-IDX) LT #YYYY)
      OR ((#L-PTY-YEAR(#DTL-IDX) = #YYYY)
      AND (ISSUE-DATE-MM(#IDX) = #MM))
    IF #USE-X-CALCS  /* CALC CURR AVL-TDIV
      IF #L-PTY-MIN-DB(#DTL-IDX) = 0
        COMPUTE #L-PTY-MIN-DB(#DTL-IDX) = BEG-CASH-VALUE (#IDX)
          - MONTH-ALLOC-AMT(#IDX)
        IF #L-PTY-MIN-DB(#DTL-IDX) LT 0
          RESET #L-PTY-MIN-DB(#DTL-IDX)
        END-IF
*
*        IF #PR-V.ID-NUMBER = 124156                               /* PM6
*         AND #PR-V.ISSUE-DATE (#IDX) = 20040413                   /* PM6
*         AND #L-PTY-PR-DB (#DTL-IDX) = 226000                     /* PM6
*          MOVE 10150.58 TO #L-PTY-MIN-DB (#DTL-IDX)               /* PM6
*        END-IF                                                    /* PM6
      END-IF
      ADD #L-PTY-MIN-DB(#DTL-IDX) TO #L-PTY-PR-DB(#DTL-IDX)
    END-IF
*
    COMPUTE #W-AGE = *DATN - #PRV-DATE-OF-BIRTH         /* TT1
    DIVIDE 10000 INTO #W-AGE
*
*    MOVE #PR-V.DATE-OF-BIRTH TO #YYYYMMDD    /* DW22   /* DW23
*    IF   (#MM  = #PR-V.ISSUE-DATE-MM (#IDX))
*     AND (#DD GT #PR-V.ISSUE-DATE-DD (#IDX))
*      ADD 1 TO #W-AGE
*    END-IF                                   /* END DW22
*
    MOVE EDITED #W-AGE (EM=ZZZ) TO #YD-MEM-AGE
*
    IF   (#SCR-OVR-MTHLY-VAL NE 'Y')
        AND ((#L-PTY-YEAR (#DTL-IDX + 1) = #CURR-YYYY)
        OR (#L-PTY-YEAR (#DTL-IDX) LT #YYYY))
      MOVE 'CURRENT' TO #YD-YEAR
    ELSE
      COMPRESS #CURR-MM-A '/' #CURR-YYYY INTO #YD-YEAR LEAVING NO
    END-IF
  ELSE
    IF #USE-X-CALCS
      IF #PR-V.ID-NUMBER = 124156                                 /* PM6
          AND #PR-V.ISSUE-DATE (#IDX) = 20040413                     /* PM6
          AND #L-PTY-PR-DB (#DTL-IDX) = 226000                       /* PM6
        MOVE 10150.58 TO #L-PTY-MIN-DB (#DTL-IDX)                 /* PM6
      END-IF                                                      /* PM6
      ADD #L-PTY-MIN-DB (#DTL-IDX) TO #L-PTY-PR-DB (#DTL-IDX)
      ADD #L-PTY-MIN-DB (#DTL-IDX) TO #OO-DB       (#DTL-IDX)
    END-IF
*
    IF ISSUE-DATE-MM (#IDX) = #MM    /* DW2
        AND (#YYYY NE #L-PTY-YEAR (1))
      ADD 1 TO #L-PTY-YEAR (#DTL-IDX)
    END-IF
    MOVE #L-PTY-YEAR (#DTL-IDX) TO #YD-YEAR
*
    COMPRESS #L-ISS-DT-MM-A (#IDX) '/' #YD-YEAR
      INTO #YD-YEAR LEAVING NO
    IF   (#GENDER = 'F')              /* TT1
        AND (NOT #USE-X-CALCS)
      ADD 3 TO #L-PTY-MEM-AGE (#DTL-IDX)
    END-IF
*
    MOVE #L-PTY-MEM-AGE (#DTL-IDX) TO #W-AGE      /* DW22
    MOVE #PRV-DATE-OF-BIRTH TO #YYYYMMDD                      /* TT1
    IF   (#MM  = #PR-V.ISSUE-DATE-MM (#IDX))
        AND (#DD GT #PR-V.ISSUE-DATE-DD (#IDX))
      ADD 1 TO #W-AGE
    END-IF                                          /* END DW22
  END-IF
*
*   MOVE RIGHT #L-PTY-MEM-AGE (#DTL-IDX) TO #YD-MEM-AGE
  MOVE RIGHT #W-AGE TO #YD-MEM-AGE
*
* IF PLAN (#IDX) = 'AL'   /* DW5
  IF IS-ANNUITY-LIFE(<#PR-V.PLAN(#IDX)>)        /* YK3
    MOVE FACE-AMOUNT(#IDX) TO #FACE-9
    IF #L-PTY-POL-AGE(#DTL-IDX) LT 1
      COMPUTE #FACE-9 = FACE-AMOUNT(#IDX) * 9 / 10
    END-IF
*
    IF #L-PTY-POL-AGE(#DTL-IDX) = 1
      COMPUTE #FACE-9 = FACE-AMOUNT(#IDX) * 9.5 / 10
    END-IF
*
    IF #FACE-9 GT #L-PTY-PR-DB(#DTL-IDX)
      MOVE #FACE-9 TO #L-PTY-PR-DB(#DTL-IDX)
    END-IF
*
    IF #L-PTY-PR-CSV(#DTL-IDX) GT #L-PTY-PR-DB(#DTL-IDX)
      MOVE #L-PTY-PR-CSV(#DTL-IDX) TO #L-PTY-PR-DB(#DTL-IDX)
    END-IF
  END-IF
*
* Below is also in C2060SNC & must be keep the same
  IF #USE-X-CALCS
      AND (VP-S01.TOT-PREMIUMS-PAID (#IDX) GT 0)
      AND (PAY-STATUS (#IDX) LT '40')
    IF  (PLAN (#IDX) = 'OL' OR = 'SP' OR = 'GPL' OR = 'GP2')    /* YK2
      MOVE ISSUE-AGE (#IDX) TO #YRS-TO-100-2
      COMPUTE #PP-YEARS = 100 - #YRS-TO-100
    ELSE
      MOVE PLAN (#IDX) TO #PLAN
      IF #PLAN = MASK (NN)
        MOVE #PLAN-2  TO #PP-YEARS
      ELSE
        MOVE #PLAN-1 TO #PP-YEARS
      END-IF
    END-IF
*
    COMPUTE ROUNDED #LUMP-PREM-VALUE = VP-S01.TOT-PREMIUMS-PAID (#IDX)
      * (1 - (#L-PTY-POL-AGE (#DTL-IDX) / #PP-YEARS))
    IF #LUMP-PREM-VALUE LT 0
      RESET #LUMP-PREM-VALUE
    END-IF
*
    IF (#LUMP-PREM-VALUE + #L-PTY-MIN-CSV (#DTL-IDX))
        GT #L-PTY-MIN-CSV (#DTL-IDX)
      COMPUTE #L-PTY-MIN-CSV (#DTL-IDX) =
        #LUMP-PREM-VALUE + #L-PTY-MIN-CSV (#DTL-IDX)
    END-IF
*
    IF VP-S01.TOT-PREMIUMS-PAID (#IDX) GT #L-PTY-MIN-CSV (#DTL-IDX)
      MOVE VP-S01.TOT-PREMIUMS-PAID (#IDX) TO #L-PTY-MIN-CSV (#DTL-IDX)
    END-IF
  END-IF
*
  MOVE RIGHT #L-PTY-POL-AGE   (#DTL-IDX) TO #YD-POL-AGE
*
  IF PLAN (#IDX) = 'OL' OR = 'GPL' OR = 'GP2'               /* YK2
    IF #USE-X-CALCS
      COMPUTE #MAX-YRS = (#PRV-DOB-YYYY + 100)          /* TT1
        - #PR-V.ISSUE-DATE-YYYY (#IDX)
    ELSE
      COMPUTE #MAX-YRS = (#PRV-DOB-YYYY + 96)           /* TT1
        - #PR-V.ISSUE-DATE-YYYY (#IDX)
    END-IF
  ELSE
    RESET #MAX-YRS
    IF PLAN (#IDX) NE 'SPF'
      IF PLAN-2A (#IDX) = 'P' OR = 'F'
        MOVE PLAN-1A (#IDX) TO #MAX-YRS-A1
      ELSE
        MOVE PLAN-2 (#IDX) TO #MAX-YRS-A2
      END-IF
    END-IF
  END-IF
*
  IF   (#LINK-604-RSV-VA-DIFF NE 0)  /* a vp conv
      AND (PAY-STATUS (#IDX) NE '47')
    IF PAY-STATUS (#IDX) = '48'
      IF #DTL-IDX = 1
        COMPUTE #DUES-PAID = #LINK-604-RSV-VA-DIFF
          + TOT-PREMIUMS-PAID (#IDX)
          + #PREMS-PAID
      END-IF
    ELSE
      IF #DTL-IDX = 1
        COMPUTE #DUES-PAID = #LINK-604-RSV-VA-DIFF
          + TOT-PREMIUMS-PAID (#IDX)
          + (#OLD-ANN-PREM * #L-PTY-POL-AGE (#DTL-IDX))
        MOVE #DUES-PAID TO #CUR-PREM-PD
        MOVE #L-PTY-POL-AGE (#DTL-IDX) TO #CUR-POL-AGE
      ELSE
        IF #L-PTY-POL-AGE (#DTL-IDX) LE #MAX-YRS
          COMPUTE #DUES-PAID = #CUR-PREM-PD +
            (ANNUAL-PREM(#IDX) * (#L-PTY-POL-AGE(#DTL-IDX) - #CUR-POL-AGE))
        END-IF
      END-IF
    END-IF
  ELSE
    IF PAY-STATUS (#IDX) = '47' OR = '48' OR = '45'
      IF   (PAY-STATUS (#IDX) = '47')
          AND ((ONLINE-ACTION-GN    = '2')
          OR (ONLINE-ACTION (#IDX) = '1'))
        IF #L-MNTHLY-START-YR NE #CURR-YYYY
          MOVE TOT-PREMIUMS-PAID (#IDX) TO #DUES-PAID
        ELSE
          MOVE #L-PTY-PR-CSV (1) TO #DUES-PAID
        END-IF
      ELSE
        IF PAY-STATUS (#IDX) = '45'
          MOVE #L-PAID-THRU-YYYY TO #YYYY
          MOVE #L-PAID-THRU-MM TO #MM
*
          COMPUTE #NUM-MONTHS =
            (((#YYYY - ISSUE-DATE-YYYY (#IDX)) * 12)
            + (#MM - ISSUE-DATE-MM (#IDX)))
          COMPUTE #DUES-PAID = #NUM-MONTHS * (ANNUAL-PREM (#IDX) / 12)
            + TOT-PREMIUMS-PAID (#IDX)
        ELSE
          MOVE TOT-PREMIUMS-PAID (#IDX) TO #DUES-PAID
        END-IF
      END-IF
    ELSE
      IF #L-PTY-POL-AGE (#DTL-IDX) GT #MAX-YRS
        COMPUTE #DUES-PAID =       /* DW4
          (#OLD-ANN-PREM * LAST-DURATION (#IDX))
          + (ANNUAL-PREM (#IDX) * (#MAX-YRS - LAST-DURATION (#IDX)))
          + TOT-PREMIUMS-PAID (#IDX)
      ELSE
        COMPUTE #DUES-PAID =       /* DW4
          (#OLD-ANN-PREM * LAST-DURATION (#IDX))
          + (ANNUAL-PREM (#IDX) *
          (#L-PTY-POL-AGE (#DTL-IDX) - LAST-DURATION (#IDX)))
          + TOT-PREMIUMS-PAID (#IDX)
      END-IF
    END-IF
  END-IF
*
  IF #PREMS-PAID GT #DUES-PAID  /* added 1/2003 by bmg to never allow
    MOVE #PREMS-PAID TO #DUES-PAID /* vp tpp tp be less than curr tpp
  END-IF
*
  MOVE ROUNDED #DUES-PAID TO #DUES-PD-DOLS
  MOVE RIGHT #DUES-PD-DOLS TO #YD-DUES-PAID
*
  IF   #SCR-SHOW-REAL = 'N' /* apply limits
    COMPUTE #CSV-W-O-TDIV = #L-PTY-PR-CSV (#DTL-IDX)
      - #L-PTY-MIN-DB (#DTL-IDX) /* tdiv
    IF PAY-STATUS (#IDX) NE '45' /* 3/2/2005
      IF #DUES-PD-DOLS GT #L-PTY-MIN-CSV (#DTL-IDX) /*remvd 12/16/03 BMg
        MOVE #DUES-PD-DOLS TO #L-PTY-MIN-CSV(#DTL-IDX) /*bac in 3/04 khb
      END-IF   /* removed again 6/2004 RLB
*
      IF #DUES-PD-DOLS GT #L-PTY-PR-CSV (#DTL-IDX)
        MOVE #DUES-PD-DOLS TO #L-PTY-PR-CSV (#DTL-IDX)
        MOVE #DUES-PD-DOLS TO #OO-CSV (#DTL-IDX)
      END-IF
*
      IF #DUES-PD-DOLS GT #L-PTY-PR-CSV-NL (#DTL-IDX)
        MOVE #DUES-PD-DOLS TO #L-PTY-PR-CSV-NL (#DTL-IDX)
      END-IF
    END-IF
*
    IF  (#L-PTY-MIN-CSV (#DTL-IDX) GT #L-PTY-PR-CSV (#DTL-IDX))
        OR ((#L-PTY-MIN-CSV (#DTL-IDX) = 0)
        AND (#PR-V.PAY-STATUS (#IDX) = '47')
        AND (#DTL-IDX = 1))
      MOVE #L-PTY-PR-CSV (#DTL-IDX) TO #L-PTY-MIN-CSV (#DTL-IDX)
    END-IF
  END-IF
*
  IF NOT #CGA-CLERK = 'DRW' OR = 'VXT'  /* DW18/DW19  vt was 'PAM'
      OR   (PLAN (#IDX) = 'GPL' OR = 'GP2')                        /* YK2
    MOVE #PR-V.FACE-AMOUNT (#IDX) TO #L-PTY-MIN-DB (#DTL-IDX)
*
    IF #PR-V.PLAN (#IDX) = 'GPL' OR = 'GP2'                  /* YK2
      MOVE #L-PTY-PR-DB (#DTL-IDX) TO #L-PTY-MIN-DB (#DTL-IDX)
    END-IF
*
*   IF #PR-V.PLAN (#IDX) = 'AL' /* pr-db-nl contains MIN DB
    IF IS-ANNUITY-LIFE(<#PR-V.PLAN(#IDX)>)                   /* YK3
      MOVE #L-PTY-PR-DB-NL (#DTL-IDX) TO #L-PTY-MIN-DB (#DTL-IDX)
*
      IF #FACE-9 GT #L-PTY-MIN-DB(#DTL-IDX)
        MOVE #FACE-9 TO #L-PTY-MIN-DB(#DTL-IDX)
      END-IF
*
      IF #L-PTY-MIN-CSV(#DTL-IDX) GT #L-PTY-MIN-DB(#DTL-IDX)
        MOVE #L-PTY-MIN-CSV(#DTL-IDX) TO #L-PTY-MIN-DB(#DTL-IDX)
      END-IF
    END-IF
  END-IF
*
  IF  (#PR-V.CONV-DURATION (#IDX) = 999)
      OR (#CGA-SCR-SUFFIX = 'CAP')
    IF   (#SCR-OVR-MTHLY-VAL NE 'Y')
        AND (#L-PTY-YEAR (#DTL-IDX) NE 0)
      MOVE #L-PTY-YEAR (#DTL-IDX) TO #CALC-DATE-YYYY
      MOVE ISSUE-DATE-MM (#IDX)   TO #CALC-DATE-MM
      MOVE ISSUE-DATE-DD (#IDX)   TO #CALC-DATE-DD
    END-IF
  END-IF
*
  IF #CGA-CLERK = 'DRW' OR = 'VXT' OR = 'RLB'     /* vt was 'PAM'
    MOVE EDITED #L-PTY-MIN-CSV (#DTL-IDX) (EM=-ZZZZZZ9) TO #YD-MIN-CSV
  ELSE
    IF #L-PTY-MIN-CSV (#DTL-IDX) LT 0
      MOVE '      0' TO #YD-MIN-CSV
    ELSE
      MOVE EDITED #L-PTY-MIN-CSV (#DTL-IDX) (EM=ZZZZZZ9) TO #YD-MIN-CSV
    END-IF
  END-IF
  MOVE RIGHT #L-PTY-MIN-DB    (#DTL-IDX) TO #YD-MIN-DB
*
  IF   (#L-PTY-PR-CSV (#DTL-IDX) LE 0)
      OR  ((#PR-V.ISSUE-DATE (#IDX) GE 19910409)
      AND NOT #USE-X-CALCS
      AND (#L-PTY-POL-AGE (#DTL-IDX) LT 2)
      AND (NOT (PAY-STATUS (#IDX) = '47' OR = '48')))
    MOVE '      0' TO #YD-PR-CSV
    RESET #L-PTY-PR-CSV (#DTL-IDX) /* for OPT
    RESET #OO-CSV       (#DTL-IDX) /* for OPT
  ELSE
    MOVE RIGHT #L-PTY-PR-CSV (#DTL-IDX) TO #YD-PR-CSV
  END-IF
*
  MOVE RIGHT #L-PTY-PR-DB (#DTL-IDX) TO #YD-PR-DB
*
  IF   (#PR-V.ISSUE-DATE (#IDX) GE 19970101)
      AND (#PR-V.MONTH-ALLOC-AMT (#IDX) NE 999.99)
      AND (LAST-ANN-CASH-VALUE (#IDX) GT
      #L-PTY-PR-DB (#DTL-IDX))
      AND (NOT #CGA-SCR-SUFFIX = 'DRW' OR = 'VXT')   /* DW18/DW19 was 'PAM'
    MOVE LAST-ANN-CASH-VALUE (#IDX) TO #TOT-WORK
    MOVE RIGHT #TOT-WORK TO #YD-PR-DB
    MOVE LAST-ANN-CASH-VALUE(#IDX) TO #L-PTY-PR-DB (#DTL-IDX) /*for OPT
    MOVE LAST-ANN-CASH-VALUE(#IDX) TO #OO-DB       (#DTL-IDX)
  END-IF
*
  MOVE #L-PTY-PR-CSV (#DTL-IDX) TO #LST-CSV
*
  IF #L-PTY-PR-CSV-NL (1) LT 999999
    IF   (#L-PTY-PR-CSV-NL (#DTL-IDX) LE 0)
        OR  ((#PR-V.ISSUE-DATE (#IDX) GE 19910409)
        AND NOT #USE-X-CALCS
        AND (#L-PTY-POL-AGE (#DTL-IDX) LT 2)
        AND (NOT (PAY-STATUS (#IDX) = '47' OR = '48')))
      IGNORE
    ELSE
      MOVE RIGHT #L-PTY-PR-CSV-NL (#DTL-IDX) TO #YD-PR-CSV-NL
      MOVE RIGHT #L-PTY-PR-DB-NL  (#DTL-IDX) TO #YD-PR-DB-NL
*
      IF   (#PR-V.ISSUE-DATE (#IDX) GE 19970101)
          AND (#PR-V.MONTH-ALLOC-AMT (#IDX) NE 999.99)
          AND (LAST-ANN-CASH-VALUE (#IDX) GT
          #L-PTY-PR-DB-NL (#DTL-IDX))
          AND (NOT #CGA-SCR-SUFFIX = 'DRW' OR = 'VXT')   /* DW18/DW19 vt was 'PAM'
        MOVE LAST-ANN-CASH-VALUE (#IDX) TO #TOT-WORK
        MOVE RIGHT #TOT-WORK TO #YD-PR-DB-NL
      END-IF
    END-IF
  END-IF
*
  IF #PR-V.RESTRICT-MBR-SW = 'Y'
    MOVE RIGHT #L-PTY-MIN-CSV (#DTL-IDX) TO #YD-PR-CSV
    MOVE #L-PTY-MIN-CSV (#DTL-IDX) TO #L-PTY-PR-CSV (#DTL-IDX)
  END-IF
*
  IF #CGA-SCR-SUFFIX = 'OPT'
      AND (#OO-X LT 5)
      AND ((#DTL-IDX = 1)
      OR (((SEX = 'M')
      AND (#L-PTY-MEM-AGE (#DTL-IDX) = 60 OR = 70 OR = 80 OR = 90))
      OR ((SEX = 'F')
      AND (#L-PTY-MEM-AGE (#DTL-IDX) = 63 OR = 73 OR = 83 OR = 93))))
    ADD 1 TO #OO-X
*
    MOVE #YD-YEAR    TO #OO-DT   (#OO-X)
    MOVE #YD-MEM-AGE TO #OO-AGE  (#OO-X)
    MOVE EDITED #L-PTY-PR-CSV (#DTL-IDX) (EM=Z,ZZZ,ZZZ)
      TO #OO-RET-CSV (#OO-X)
    COMPRESS '$' #OO-RET-CSV (#OO-X) INTO #OO-RET-CSV (#OO-X) LEAVING NO
    MOVE EDITED #L-PTY-PR-DB  (#DTL-IDX) (EM=Z,ZZZ,ZZZ)
      TO #OO-RET-DB (#OO-X)
    COMPRESS '$' #OO-RET-DB (#OO-X) INTO #OO-RET-DB (#OO-X) LEAVING NO
    MOVE EDITED #OO-CSV(#DTL-IDX)(EM=Z,ZZZ,ZZZ) TO #OO-OO-CSV(#OO-X)
    COMPRESS '$' #OO-OO-CSV (#OO-X) INTO #OO-OO-CSV (#OO-X) LEAVING NO
    MOVE EDITED #OO-DB  (#DTL-IDX)(EM=Z,ZZZ,ZZZ) TO #OO-OO-DB (#OO-X)
    COMPRESS '$' #OO-OO-DB  (#OO-X) INTO #OO-OO-DB (#OO-X) LEAVING NO
*
    IF #YD-YEAR-4 NE #CURR-YYYY-A   /* bypass 2nd line if curr year
      IF #1ST-TIM = 1
        IF #OO-TOT-X LT 14
          ADD 1 TO #OO-TOT-X
        END-IF
*
        IF #YD-YEAR = 'CURRENT'
          MOVE #YD-YEAR TO #OO-TOT-DT  (#OO-TOT-X)
        ELSE
          MOVE #YD-YEAR-4  TO #OO-TOT-DT  (#OO-TOT-X)
        END-IF
*
        MOVE #YD-MEM-AGE TO #OO-TOT-AGE (#OO-TOT-X)
        ADD #L-PTY-PR-CSV (#DTL-IDX) TO #OO-TOT-RET-CSV (#OO-TOT-X)
        ADD #L-PTY-PR-DB  (#DTL-IDX) TO #OO-TOT-RET-DB  (#OO-TOT-X)
        ADD #OO-CSV       (#DTL-IDX) TO #OO-TOT-OO-CSV  (#OO-TOT-X)
        ADD #OO-DB        (#DTL-IDX) TO #OO-TOT-OO-DB   (#OO-TOT-X)
      ELSE
        FOR #I1 1 TO 5
          IF   (#YD-MEM-AGE = #OO-TOT-AGE (#I1))
              AND (#YD-MEM-AGE NE #LAST-AGE)
            MOVE #YD-MEM-AGE TO #LAST-AGE
            ADD #L-PTY-PR-CSV (#DTL-IDX) TO #OO-TOT-RET-CSV (#I1)
            ADD #L-PTY-PR-DB  (#DTL-IDX) TO #OO-TOT-RET-DB  (#I1)
            ADD #OO-CSV       (#DTL-IDX) TO #OO-TOT-OO-CSV  (#I1)
            ADD #OO-DB        (#DTL-IDX) TO #OO-TOT-OO-DB   (#I1)
            MOVE 'X' TO #OO-TOT-FND (#I1)
            ESCAPE BOTTOM
          END-IF
        END-FOR
      END-IF
    END-IF
  END-IF
*
  IF PLAN (#IDX) = 'GPL' OR = 'GP2'                       /* YK2
    RESET #YD-PR-DB #YD-PR-CSV
  END-IF
*
  MOVE #YEARLY-DTL TO #SCR-PROJ-LINE (#PROJ-IDX)
*  WRITE #SCR-PROJ-LINE (#PROJ-IDX)
* YK START
  LINE-COUNT                        := #PROJ-IDX
  VA-DATE-VP (#PROJ-IDX)            := #YD-YEAR
  INSURED-AGE-VP (#PROJ-IDX)        := #YD-MEM-AGE
  YEARS-IN-FORCE-VP (#PROJ-IDX)     := #YD-POL-AGE
  MINIMUM-CASH-VALUE-VP (#PROJ-IDX) := #YD-MIN-CSV
  DEATH-BENEFIT-VP (#PROJ-IDX)      := #YD-MIN-DB
  TOTAL-PREMIUMS-PAID-VP (#PROJ-IDX):= #YD-DUES-PAID
  CASH-VALUE-VP (#PROJ-IDX)         := #YD-PR-CSV
  TOTAL-DEATH-BENEFIT-VP (#PROJ-IDX):= #YD-PR-DB
* YK END
*
  ADD 1 TO #DTL-IDX
  ADD 1 TO #PROJ-IDX
*
*  IF *DEVICE = 'BATCH'
*    ADD  1 TO #PROJ-IDX
*  END-IF
END-REPEAT  /* (1834)
*
IF   (#CGA-SCR-SUFFIX = 'OPT')
    AND (#1ST-TIM NE 1)
  FOR #I1 1 TO 5
    IF #OO-TOT-FND (#I1) NOT = 'X'
        AND (#OO-TOT-AGE (#I1) NOT = ' ')
      MOVE '***' TO #OO-TOT-AGE (#I1)
    END-IF
  END-FOR
END-IF
*
IF #SCR-OVR-DISPLAY-CALCS = 'Y'
  ESCAPE ROUTINE
END-IF
*
CALLNAT 'CCSTXSVP'
  #CGA-SCR-COMMAND
  #CGA-ID
  #CGA-ORIG-SUFFIX
  #CGA-CLERK
  FACE-AMOUNT (#IDX)
  ANNUAL-PREM (#IDX)
  PAY-STATUS  (#IDX)
  TOT-PREMIUMS-PAID (#IDX)
  #MAX-YRS
  #DUES-PAID
  #DUES-PD-DOLS
  #L-CALC-AMT2 (1:20)  /* 20 yrs of death bene
  #L-CALC-AMT2 (21:24) /* 10 yr min cv/proj csv/20 yr min cv/proj csv
  #CIX-MODE
  #CIX-ERROR
  #CIX-SCR-SC (1:4)
  #CIX-SCR-NP (1:4)
*
END-SUBROUTINE  /* (1991)
*
* * * * * * * *
DEFINE SUBROUTINE BUILD-PAGE-COMMON
* * * * * * * *
*
IF #SCR-OVR-MTHLY-VAL = 'Y'
  PERFORM FORMAT-MTHLY-DTL
*
  IF #REFRESH /* IF 'RF' WAS ENT DURING SHOW CALCS
    ESCAPE ROUTINE
  END-IF
*
  IF #DTL-IDX GT #L-NUM-DTLS
    MOVE 'RF' TO #CGA-SCR-COMMAND
  END-IF
  ESCAPE ROUTINE
ELSE
  PERFORM FORMAT-YEARLY-DTL
END-IF
*
* IF   (#SCR-OVR-MTHLY-VAL NE 'Y')
* AND (#TOT-FOOTERS GT 0)
*  IF #USE-X-CALCS
*    AND (NOT #PR-V.PLAN (#IDX) = 'GPL' OR = 'GP')                 /* DW21
*    MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
*    COMPRESS ' * Includes an estimated termination dividend which is'
*      'not guaranteed.'
*          INTO #SCR-PROJ-LINE (#PROJ-IDX)
*    ADD 1 TO #PROJ-IDX
*  END-IF
*
*  IF #TOT-POLS GT 1
*    MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
*    COMPRESS ' The above projection is for 1 of your' #TOT-POLS
*      'AAFMAA Certificates.' INTO #SCR-PROJ-LINE (#PROJ-IDX)
*  END-IF
*
IF (INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q') AND (#IDX = 1)
    AND (INTEREST-RATE LT 5.00) AND (LOAN-AMOUNT GT 0)
  MOVE 'C.A.P.' TO #CAP
*
  MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
  MOVE ROUNDED LOAN-AMOUNT TO #TOT-WORK
  MOVE EDITED #TOT-WORK (EM=ZZ,ZZZ) TO #TOT-DISP
  COMPRESS '$' #TOT-DISP '.' INTO #TOT-DISP LEAVING NO
*
  IF #TOT-POLS = 1
    COMPRESS ' The total' #CAP 'loan against this policy is'
      #TOT-DISP INTO #SCR-PROJ-LINE (#PROJ-IDX)
  END-IF
END-IF
* END-IF
*
IF  (#CGA-ORIG-SUFFIX = 'OVR' OR = 'OVP')
    OR (#CGA-ORIG-SUFFIX = MASK ('IP')) /* INT PROJ
    OR (#CGA-ORIG-ID = 0)
  MOVE 'RF'  TO #CGA-SCR-COMMAND
ELSE
  MOVE 'VP'  TO #CGA-SCR-COMMAND
END-IF
*
MOVE #CGA-ORIG-ID     TO #CGA-SCR-ID
MOVE #CGA-ORIG-SUFFIX TO #CGA-SCR-SUFFIX
*
END-SUBROUTINE  /* (1752)
* * * * * * * * *
DEFINE SUBROUTINE BUILD-PAGE-2
*
* RESET #SCR-CV (*)
* RESET #SCR-PROJ-LINE (1:22)
* MOVE 1 TO #PROJ-IDX
*
* MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
* MOVE '         MEMBER  YEARS IN    CASH     DEATH      CASH     DEATH'
*              TO #SCR-PROJ-LINE (#PROJ-IDX)
*
* IF #SHOW-LOAN-REPAID
*  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '    CASH   DEATH'
*              INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
* END-IF
*
* ADD 1 TO #PROJ-IDX
* MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
* MOVE ' MN/YEAR  AGE     FORCE     VALUE   BENEFIT     VALUE   BENEFIT'
*           TO #SCR-PROJ-LINE (#PROJ-IDX)
*
* IF #SHOW-LOAN-REPAID
*  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '   VALUE BENEFIT'
*           INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
* END-IF
*
* ADD 1 TO #PROJ-IDX
PERFORM BUILD-PAGE-COMMON
*
END-SUBROUTINE  /* (0029)
*
END
