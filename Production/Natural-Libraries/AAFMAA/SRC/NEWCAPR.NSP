* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
**************************************
* Program : NEWCAPR
*
* Function : Create report of CAP loans issued during the current month and defaulted CAP members for the current month
*
* vxt 11/27/2012 Initial creation
* vxt 07/03/2013 vt1 Include defaults made manually /Ticket 2086/
* vxt 10/02/2015 vt2 /Ticket 3096/
**************************************
*
define data local
1 ACCOUNT VIEW OF A-ACCOUNTING-REGISTER
  2 ACCTTX
    3 ID-NUMBER (N6)
    3 TRANSACTION-DATN (P9)
    3 TRANSACTION-TIMN (P7)
    3 TXN-CODE (A4)
    3 SEQUENCE-NUM (N1)
    3 NAME (A25)
    3 TXN-ACCT-NUMBER (N3)
    3 ACCT-DATE (N8)
    3 DATE-LAST-ACCT-UPDATE (N8)
    3 DEBIT-AMOUNT (P7.2)
    3 CREDIT-AMOUNT (P7.2)
    3 DESCRIPTION (A20)
    3 redefine DESCRIPTION                    /* vt1  \/
      4 description-7  (a7)
      4 description-13 (a13)                  /* vt1  /\
    3 MESSAGE-CODE (A1)
    3 AALP-FLAG (A1)
    3 CLERK-ID (A3)
    3 TERMINAL-ID (A8)
  2 POLICY-NUMBER  (a16)
  2 CASH-CODE (A1)
  2 PROCESS-IND (A1)
  2 USER-COMPANY (A1)
  2 c*sungard-info
  2 SUNGARD-INFO (1:15)
    3 SG-CATEGORY-1 (A2)
    3 SG-CATEGORY-2 (A2)
    3 SG-AMOUNT (N6.2)
*
1 Ar-v VIEW OF A-ACCOUNTING-REGISTER

  2 ID-NUMBER (N6)
  2 TRANSACTION-DATN (P9)
  2 TXN-CODE (A4)
  2 DEBIT-AMOUNT (P7.2)
  2 CREDIT-AMOUNT (P7.2)
  2 DESCRIPTION (A20)
  2 POLICY-NUMBER  (a16)
  2 c*sungard-info
  2 SUNGARD-INFO (1:15)
    3 SG-CATEGORY-1 (A2)
    3 SG-CATEGORY-2 (A2)
    3 SG-AMOUNT (N6.2)
*
1 STATUS view of A-status
  2 id-number
  2 member-contact-id
  2 x-loan-amount  (9)
  2 cap-entry-rank-id
  2 mode           (9)
  2 conv-duration  (9)
  2 military-service
*
1 GEN-TABLE-V VIEW OF A-GEN-TABLE
  2 GEN-KEY (A4)
  2 GEN-SUB-KEY (A3)
  2 GEN-SECURITY-CODE (N2.0)
  2 GEN-ALPHA-VALUE (A50)
  2 GEN-NUMBER-VALUE (N7.4)
  2 GEN-DESCRIPTION (A75)
  2 EFFECTIVE-DATE (N8.0)
  2 END-DATE (N8.0)
  2 OWNER-ID (A3)
  2 ALT-OWNER-ID (A3)
  2 LAST-USER-UPDATE (A8)
  2 LAST-DATE-UPDATE (N8.0)
  2 ADDL-INFO (A150)
  2 APPROVED-FLAG (A1)
  2 USER-APPROVED (A8)
  2 DATE-APPROVED (N8.0)
*
local
1 #PARM-DATE              (A10)
1 REDEFINE #PARM-DATE
  2 #PARM-MM               (A2)
  2 #PARM-/                (A1)
  2 #PARM-DD               (A2)
  2 #PARM-/-2              (A1)
  2 #PARM-YYYY             (A4)
*
1 #ME-RUN-DATE-N          (N8)
1 REDEFINE #ME-RUN-DATE-N
  2 #ME-RUN-DATE-A         (A8)
1 REDEFINE #ME-RUN-DATE-N
  2 #ME-RUN-DATE-YYYY      (N4)
  2 #ME-RUN-DATE-MM        (N2)
  2 #ME-RUN-DATE-DD        (N2)
*
1 #START-DATE             (N8)
1 #END-DATE               (N8)
*
1 #i                      (i2)
1 #pol-num                (a16)
1 #loan-bal               (a12)
1 #TAB                    (A1) INIT <H'09'>
1 #out-file               (a250)
1 #name                   (a70)
1 #rank                   (a10)
1 #default-amt-a            (a12)
1 #default-date           (a10)
1 #first-name                       (a25)
1 #middle-name                      (a25)
1 #last-name                        (a25)
1 #suffix                           (a10)
1 #cnt-extract            (p7)
1 #issue-date             (n8)
1 redefine #issue-date
  2 #issue-date-yyyy          (n4)
  2 #issue-date-mm            (n2)
  2 #issue-date-dd            (n2)
1 #issue-date-a               (a10)
1 #issue-amount-a             (a12)
1 #mode                       (a1)
1 #cap                        (l)
1 #TRANSACTION-DATN (n8)
1 redefine #transaction-datn
  2 #transaction-datn-yyyy  (n4)
  2 #transaction-datn-mm    (n2)
  2 #transaction-datn-dd    (n2)
1 #coll             (l)
1 #SEC-KEY      (A7)
1 redefine #sec-key
  2 #gen-key     (a4)
  2 #gen-sub-key  (a3)
1 #service    (a50)
end-define
*
* DEFINE WORK FILE 1 '/usr/SAG/AAFMAA/batch/workfiles/ATHLB/PARMRUND.TXT' TYPE 'ASCII'
* DEFINE WORK FILE 2 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/NEWCAPR.TXT' TYPE 'ASCII'
*
READ WORK FILE 1 ONCE #PARM-DATE

*
COMPRESS #PARM-YYYY #PARM-MM #PARM-DD INTO #ME-RUN-DATE-A LEAVING NO
#END-DATE := #ME-RUN-DATE-N
*
SUBTRACT 1 FROM #ME-RUN-DATE-MM
IF #ME-RUN-DATE-MM = 0
  #ME-RUN-DATE-MM := 12
  SUBTRACT 1 FROM #ME-RUN-DATE-YYYY
END-IF
*
#START-DATE := #ME-RUN-DATE-N
*
WRITE 'Start = ' #START-DATE
WRITE 'End   = ' #END-DATE
*
compress
  'CN'                #tab
  'Name'              #tab
  'Member Service'    #tab
  'Rank at issue'     #tab
  'Mode'              #tab
  'Loan Issue Date'   #tab
  'Loan Issue Amount' #tab
  'Default Date'      #tab
  'Default Amount'    #tab
  'Loan Balance'      #tab
  into #out-file leaving no
write work 2 #out-file
*
read account by   account.transaction-datn starting from #start-date ending at #end-date
  if account.transaction-datn = #end-date                                                       /* vt1 \/
    escape bottom
  end-if                                                                                        /* vt1 /\
*
  if (account.txn-code = 'NEWL' or ( ( account.txn-code = 'PADF' and (cash-code = 'T')
      or  account.txn-code = 'PADF' and cash-code = 'Q' and account.description-7 = 'CAP MBR' ))) /* vt1    /* vt2 was cash-code = 'A'
      and account.sg-category-1(1) = 'CP'

    find status with id-number = account.id-number
      if no
        escape bottom
      end-norec

      #name := FUNCTION-FRM-NAME(<status.member-contact-id,#FIRST-NAME,#MIDDLE-NAME,#LAST-NAME,#SUFFIX>)

      #rank := F-GET-PAY-GRADE(<status.cap-entry-rank-id>)
      perform get-mil-service

      for #i 1 9
        callnat 'gplnmsxx' #pol-num status.id-number #i
        if #pol-num = account.policy-number
          if status.conv-duration(#i) = 999
*              and status.x-loan-amount(#i) ne 0
            move true to #cap
          else
            reset #cap
          end-if
          move edited  x-loan-amount(#I)(em=Z,ZZZ,ZZ9.99) to #loan-bal
          move mode(#i)                                   to #mode
          escape bottom
        end-if
      end-for
    end-find

    #issue-date    :=  account.TRANSACTION-DATN
    if account.txn-code = 'PADF' and (cash-code = 'T' or = 'Q')   /* vt 07032013      /* vt2 was 'A'
      move true to #coll
      find ar-v with ar-v.id-number = account.id-number
          and ar-v.txn-code = 'NEWL'
        if ar-v.sg-category-1(1) = 'CP'
          move edited ar-v.debit-amount(em=Z,ZZZ,ZZ9.99) to #issue-amount-a
          move ar-v.transaction-datn to #transaction-datn
          compress #transaction-datn-mm '/' #transaction-datn-dd '/' #transaction-datn-yyyy into #issue-date-a leaving no
        end-if
      end-find
      move edited  account.credit-amount (em=Z,ZZZ,ZZ9.99) to #default-amt-a
      compress  #issue-date-mm '/' #issue-date-dd '/' #issue-date-yyyy into #default-date leaving no
    else
      reset #coll
      compress  #issue-date-mm '/' #issue-date-dd '/' #issue-date-yyyy into #issue-date-a leaving no
      reset #default-amt-a #default-date
      move edited account.DEBIT-AMOUNT(em=Z,ZZZ,ZZ9.99) to #issue-amount-a
    end-if
    if #cap
      if #loan-bal ne '0' or #coll
        compress account.id-number            #tab
          #name                               #tab
          #service                            #tab
          #rank                               #tab
          #mode                               #tab
          #issue-date-a                       #tab
          #issue-amount-a                     #tab
          #default-date                       #tab
          #default-amt-a                      #tab
          #loan-bal                           #tab
          into #out-file leaving no
        write work 2 #out-file
        add 1 to #cnt-extract
      end-if
    end-if
  end-if
*
  at end of data
    write ' records extracted : ' #cnt-extract
  end-enddata
end-read
*
*****************
define subroutine get-mil-service
*****************
*
reset #sec-key #service
#gen-key     := 'CODE'
#gen-sub-key := '024'

find  GEN-TABLE-V with SEC-KEY = #SEC-KEY
  if no
    escape bottom
  end-norec
  if gen-table-v.gen-alpha-value = status.military-service
    move gen-table-v.addl-info to #service
    escape bottom
  end-if
end-find
*
end-subroutine
end
