* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 2
* <Natural Source Header
* PGM-ID: G3500PAD
**************************************************************************************
*       MODIFICATION LOG
* USER DATE     TAG   REASON
* DRW  09282004 DW1   add CREDIT CARD processing
* DRW  11102004 DW2   reset DB with possible lowered AMOUNT
* DRW  11122004 DW3   add PNC notice for credit card notice
* PAM  11182004 PM4   adjusted PIL display for max insurance
* PAM  11192004 PM5   Do not override LT DB if file is 0.
* DRW  11292004 DW6   Allow Addl pols after SO policy
* DRW  01062005 DW7   ADD SUFFIX BLB/CLR/COB (NEW on 1/28/2005)
* TDM  01132005 TM1   Moved CRSC and Agent Orange msg to GNEWSFXX
* TDM  01132005 TM2   CHGD ID-NUMBER TO #CGA-ID IN CALL TO GOWNRSXX
* DRW  03052005 DW8   ADD AL (ANNUITY LIFE) PROCESSING
* DRW  05152005 DW9   Add face Amt & TPP linkage to CVALUSXX
* DRW  04292005 DW10  Add DOB processing to GMAXSXX
* DRW  05012005 DW11  Add Suffix AL letter
* DRW  08082005 DW12  Remove CN/MIL-STAT/MIL-SERV from Labels
* DRW  08212005 DW13  Split AAFM & AFSC Age 62 Ltrs
* PAM  09232005 PM14  Added replacement policy resignations
* DRW  10142005 DW15  SPLIT PNC INTO PN?
* DRW  08/26/2006 DW16 CHG WHO TO W/L
* DRW  10/03/2006 DW17 add VA DISAB text
* DRW  08/03/2007 DW18 Add Suffix DFF for DFAS ALLOT Chg Letter
* PAM  09/25/2007 PM19 Adjusted maximum term insurance age to from under 71
*                      to under 76 for PIL letters.
* DRW  09/27/2007 DW20 Delete AFSC Suffix's (FIR/PIF/SNG/TML/VS)
* DRW  10/03/2007 DW21 ADD Suffix MIP and CAP Loan Info to PNO/fix or/or on PN?
* YAK  11/28/2007 YK1  Pass Mode 'G' to G3510PAD program for REF letter processing
* YAK  12042007   YK2  Comment out hardcording for interest rate (not used)
* PAM  06/23/2009 PM22 Removed credit card rejection reason from letters
* PAM  08/24/2009 PM23 Escape back to calling program
* RSE  10/03/2009 RE1  Change PROCESS-IND logic for Unification
* PAM  08/20/2010 PM24 Added new expanded address location
* VXT  09/18/2010 VT1  Add function NAM.
* VXT  09/21/2010 VT2  Fix the layout of the screen for PIL function
* RSE  10/07/2010 RE2  Add FIR process for certain IAS users
* vxt  11/12/2010 vt3  use extended name fields from the G3500PAD
* vxt  02/24/2011 vt4  Eliminate usage of S-address field of status file and display for all bills
*                      (not just spouse and gen)
* PAM  04/21/2011 PM25 Added term refund bucket letter
* PAM  05/18/2011 PM26 Adjust PIL letter
* YAK  10/16/2012 YK3  Use function to identify Level Term II plans
* YAK  11/07/2012 YK4  Add No Medical Term plan (EZ)
* NGG  02/04/2013 NG1  Add Nursing Home Pay Status
* YAK  04/26/2013 YK5  Add ACDB letter
* YAK  04/28/2013 YK6  Add NHW letter
* TMT  06/23/2014 TT2  Contact Normalization - DOB and Sex
* TMT  10/13/2014 TT3  Annuity Life Normalization
* TMT  10/01/2015 TT4  Policy ownership project
* NGG  10/08/2015 NG2  Policy ownership project
* vxt  03/29/2016 vt5  /Ticket 4332/
* vxt  09/30/2016 vt6  /Ticket 4706/
* vxt  01/09/2018 vt7  /Ticket 7125/
**************************************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX
LOCAL USING G3500AAD
LOCAL USING G3500LAD
LOCAL USING ADDA0001                 /* pda for the address    vt4
LOCAL USING CONTPDA1                 /* TT1
LOCAL USING POSAGET
LOCAL
* 1 #CURR-VAR-INT-RATE (P2.3) INIT <8.10>        /* YK2
*
1 #PAYOR-CN     (A6)
1 #PAYOR-ZIP-5  (A5)
1 #PAYOR-ZIP-4  (A4)
1 #OWNER-CI     (N8)
/*
1 #LEFT   (A) DYNAMIC    /* PM24
1 #RIGHT  (A) DYNAMIC    /* PM24
1 #I      (N2)           /* PM24
1 #RESULT (A70)          /* PM24
*
1 #AD-TEXT-INDS (A10)            /* RE2
1 REDEFINE #AD-TEXT-INDS
  2 #AD-TEXT-IND   (A1/10)
1 #CAP-LOAN-DUE-DATE (A10)    /* DW2
1 #CAP-LOAN-DISP     (A10)
*
1 #FOUND-ALOT-PAYOR  (L) /* DW18
1 #PNX   (L)             /* DW15
1 #DFF-DAY       (A4)    /* DW18
1 #CC-REJ (A25)
1 #TOT-CIP (N5.2)
1 #TOT-CIP-X (A10)
*
1 #POL-NUM  (A16)   /* DW3
1 #PNC-X    (I2)   /* DW3
1 #SUFFIX     (A3)
1 #AS-OF-DT   (N8)
1 #LOAN-BAL   (N7.2/9)
1 #LOAN-BAL-2 (N7.2/9)
1 #ACC-INT    (N7.2/9)
1 #ACC-INT-2  (N7.2/9)
1 #CSV        (N7.2/9)
1 #CVALUE     (N7.2/9)
1 #LVALUE     (N7.2/9)
1 #MCSV       (N7.2/9)
1 #DB         (N7.2/9)
1 #ANN-PREMIUM (N7.2/9)
1 #FACE-AMT    (N7.2/9)  /* DW9
1 #TPP         (N7.2/9)  /* DW9
1 #CI         (N8)
1 #CURSE-LINE (N3)
*
1 #NEW-FLDS   (L)
* 1 #MULTIPLE-OWNER   (L)
1 #NON-INS-OWNER    (L)
* 1 #OWNER-OCC-9 (9)
*   2 #OWNER-FLAG (A1)
*   2 #OWNER-CN   (N6/10)
*   2 #OWNER-CN-BY-POL (N6)
*   2 #OWNER-CN-SEG    (I2/9)
*   2 #ISS-DATE        (N8/9)
*   2 #ISS-DATE-DISP   (A10/9)
*
*   2 #BENE-TYPE       (A1/2)
*   2 #BENE-TEXT       (A60/10)
1 #OWNER-OCC (9)
  2 #OWNER-SEL    (A1)
  2 #OWNER-SEL-CV (C)
  2 #OWNER-LIN1   (A75)
  2 #OWNER-LIN2   (A60)
1 #SAVE-COMMAND  (A2)
1 #PROCESS-SEG   (I4/9)
1 #PROCESS  (L)
*
* LINKAGE TO GRIDCSXX
1 #ID         (N6)
1 REDEFINE #ID
  2 #ID-A      (A6)
1 #AT-RID-ATTACH-FAC-AMT (N6.2)
1 #AT-RID-ATTACH-PLAN    (A3)
1 #AT-RID-PLAN           (A2/5)
1 #AT-RID-ATTACH-ISS-DT  (N8/5)
* output below  (ex = existing)
1 #AT-TOT-FBR-PREM        (N3.2)
1 #EX-FBR-PREM-BY-LINE    (N3.2/9)
1 #EX-SPS-DB-BY-LINE      (N6/9)
1 #EX-DEP-DB-BY-LINE      (N6/9)
1 #EX-EACH-DEP-DB-BY-LINE (N6/9)
1 #NUM-ELIG-CHILDREN      (N2)
1 #NUM-ELIG-CHILDREN-UNDER-6-MON (N2)
1 #TOT-CHILD-DB   (N6)
1 #RID-TEXT       (A78)
*
1 #WORK-78   (A78)
1 #CAP-LOAN-MONS   (N3)
1 #CAP-CSV-MONS    (N3)
1 #CAP-REMAIN-MONS (N3)
1 #PLAN-3 (A3)
1 REDEFINE #PLAN-3
  2 #PLAN-A1  (A1)
  2 #PLAN-A2  (A2)
*
1 #I4    (I2)
1 #PREV-ACV  (P7.2)
1 #NEW-ACV   (P7.2)
1 #ACV-DIFF  (P7.2)
1 #REAL-PREM (N6.2)
1 #PAY-STAT  (A4)
1 #EFF-DATE  (N8)
*
1 #HIST-KEY    (N15)
1 REDEFINE #HIST-KEY
  2 #HIST-KEY-ID  (N6)
  2 #HIST-KEY-ISS (N8)
  2 #HIST-KEY-SPL (N1)
*
1 #CAP-LOAN   (P5.2)
1 #FORM-IND   (A3)
1 #MSG-FORM-IND (A3)
1 #ACC-FORM (L)
1 #FST-X   (I2)
1 #SCR-DAILY-INT  (P3.7)
1 #SCR-ACC-INT    (P5.2)
1 #WORK-CAP-CONV-ACV (P9.2)
1 #CSV-4-CAP-CALC (P7.2)
1 #CAP-CSV  (P7.2)
1 #CAP-CONV-ACV (P7.2)
1 #CAP-LOAN-END-DATE (N8)
1 #AVL-TDIV       (P7.2)
1 #TDIV-L   (L)
1 #1ST-LINE (L)
1 #USE-2ND  (L)
1 #USE-3RD  (L)
1 #SVC-FEE-2P (N2.2) INIT <18.50>
1 #SVC-FEE-3P (N2.2) INIT <12.50>
1 #SVC-FEE-4P (N1.2) INIT <9.50>
1 #SVC-FEE-5P (N1.2) INIT <7.50>
1 #SVC-FEE-6P (N1.2) INIT <6.50>
1 #SVC-FEE-7P (N1.2) INIT <6.00>
1 #SVC-FEE-10 (N1.2) INIT <4.50>
1 #SVC-FEE-20 (N1.2) INIT <3.00>
1 #SVC-FEE-30 (N1.2) INIT <2.50>
1 #SVC-FEE-OL (N1.2) INIT <2.00>
1 #SVC-FEE-TM (N1.2) INIT <2.00>
1 #INSURED (N2) CONSTANT <1>
1 #HOLD-CI    (N8)
*
1 #ST-V-PLAN       (A3)
1 REDEFINE #ST-V-PLAN
  2 #ST-V-PLAN-A2   (A2)
  2 REDEFINE #ST-V-PLAN-A2
    3 #ST-V-PLAN-N2  (N2)
  2 REDEFINE #ST-V-PLAN-A2
    3 #ST-V-PLAN-A1  (A1)
  2 REDEFINE #ST-V-PLAN-A2
    3 #ST-V-PLAN-N1  (N1)
  2 #ST-V-PLAN-SUFF (N1)
*
1 #PROG           (A8)
1 #ST-CH          (A7)
1 #SCR-SUFFIX     (A3)
1 REDEFINE #SCR-SUFFIX
  2 #SCR-SUFFIX-2  (A2)
  2 #SCR-SUFFIX-3  (A1)
1 #MR-MSG-NOTE-NUM (N6)
*
1 #AGE-71-DT (N8)
1 REDEFINE #AGE-71-DT
  2 #AGE-71-MM-YYYY (N4)
  2 #AGE-71-MM-MM   (N2)
  2 #AGE-71-MM-DD   (N2)
1 #AD-I (I2)
1 #I1   (I2)
1 #I2   (I2)
1 #I3   (I2)
1 #SEG-I (I2)
1 #AD-FF-3  (A78) 1 #AD-FF-4  (A78)
**1 #AD-FF-5  (A78) 1 #AD-FF-6  (A78)                  /*TT1 COMMENTED OUT TO MAKE ROOM ON SCREEN
1 #AD-ADDR-MSG  (A70/3)                                /* vt3 was 30
*
1 #AD-TABLE (A78/14)
1 REDEFINE #AD-TABLE
  2 #AD-FF-12 (A78) 2 #AD-FF-13 (A78)
  2 #AD-FF-14 (A78) 2 #AD-FF-15 (A78)
  2 #AD-FF-16 (A78) 2 #AD-FF-17 (A78)
  2 #AD-FF-18 (A78) 2 #AD-FF-19 (A78)
  2 #AD-FF-20 (A78) 2 #AD-FF-21 (A78)
  2 #AD-FF-22 (A78) 2 #AD-FF-23 (A78)
  2 #AD-FF-24 (A78)
  2 #ad-ff-25 (a78)                               /* vt6
1 REDEFINE #AD-TABLE
  2 #AD-TBL-OCC    (13)
    3 #AD-LAYOUT-1
      4 #AD-1ST-30 (A30)
      4 #AD-LST-48 (A48)
1 REDEFINE #AD-TABLE
  2 #AD-TBL-OCC-2  (13)
    3 #AD-LAYOUT-2
      4 #AD-1ST-8  (A8)
      4 #AD-LST-70 (A70)
*
1 #AD-TABLE-2 (A78/9)
1 #AD-WID-TABLE (A78/30)              /* RE2
*
1 #NO-MAILOUT   (L)
1 #FOREIGN-ADDR (L)
1 #INELIGIBLE   (L)
1 #W-INELIGIBLE (L) /* PM4
1 #T-INELIGIBLE (L) /* PM4
1 #ALLOW-FIR    (L) /* RE2
*
1 NT-V VIEW OF A-NOTES
  2 ID-NUMBER
  2 NOTE-TEXT    (60)
  2 REDEFINE NOTE-TEXT
    3 NOTE-TEXT-OCC  (60)
      4 NOTE-TEXT-60           (A60)
      4 REDEFINE NOTE-TEXT-60
        5 NOTE-TEXT-FILL1        (A14)
        5 NOTE-TEXT-ALOT-PAYS-CN (A6)
        5 NOTE-TEXT-FILL2        (A40)
      4 REDEFINE NOTE-TEXT-60
        5 NOTE-TEXT-FILL3           (A17)
        5 NOTE-TEXT-ALOT-PAID-BY-CN (A6)       /* DW18
        5 NOTE-TEXT-FILL4           (A37)
*
1 MR-V VIEW OF A-REQUEST
  2 ID-NUMBER  (N6)
  2 CLERK-ID
  2 MESSAGE    (A60/8)
*
1 #HPTD-DATE     (N8)
1 REDEFINE #HPTD-DATE
  2 #H-PTD-CCYY   (N4)
  2 #H-PTD-MM     (N2)
  2 #H-PTD-DD     (N2)
*
1 #HOLD-MODE  (A25)
1 #MONS (N3)
1 #NEXT-MONTH  (N8)
1 REDEFINE #NEXT-MONTH
  2 #NEXT-MONTH-YYYY (N4)
  2 #NEXT-MONTH-MM   (N2)
1 #ISSUE-DATE (N8)
1 #MODE  (A1)
1 #PAID-TO-DATE (N8)
1 REDEFINE #PAID-TO-DATE
  2 #PT-CENT (N2)
  2 #PT-YY   (N2)
  2 #PT-MM   (N2)
  2 REDEFINE #PT-MM
    3 #PT-MM-A (A2)
1 #HOLD-PTD-DATE (A11)
1 #HOLD-PER-DATE (A17)
1 #HOLD-PREM     (N5.2)
1 #P-DIV     (N2)
1 #HOLD-EDIT-PREM (A9)
1 #HOLD-EDIT-PREMR (A9)
1 #BASD            (N8)
*  1 #DEAR-FORMATED-NAME (A70)
1 #Q (I4)
1 #X (I4)
1 #ERROR-MESSAGE  (A65)
1 #CLERK-ABB-PASS  (A3)
1 #INVALID   (L)
1 #CLERK-ABB-NAME-PASS (A20)
1 #REM-FACE         (P7)
1 #REM-FACE-DISP    (A11)
1 #REM-FACE-TM      (P7) /* PM4
1 #REM-FACE-DISP-TM (A9) /* PM4
1 #TOT-FACE     (P7.2)
1 #TOT-FACE-TERM (P7.2) /* PM4
1 #REAL-FACE-AMT (P7.2) /* PM4
1 #MAX-FACE-TOTAL           (P7.2)
1 #MAX-FACE-TERM            (P7.2)
1 #OVERRIDE-MAX-FACE-TOTAL  (P7.2)
1 #OVERRIDE-MAX-FACE-TERM   (P7.2)
1 #CORR-MSG (A50) CONST<'This correspondence has been prepared for '
  -'you by:'>
*
1 #S-X      (I2)
1 #VS-TEXT  (A78/20)
*
1 #VS-TOTAL-INSURANCE  (P6)
1 #VS-WORK-INSURANCE   (P6)
1 #POLICY-INDEX  (I4)
*
1 #VS-X    (I2)
*
1 #CURR-LOAN    (P6.2)
1 #CURR-LOAN-2  (P6.2)
1 #CURR-INT     (P5.2)
1 #CURR-INT-2   (P5.2)
1 #VS-CURR-DEATH-BEN (P7)
1 #VS-CURR-LOAN (P6)
1 #PILTEXT3 (A78) CONST<'POLICY NUMBER     FACE VALUE    CASH SUR VALU'
  -'E  LOAN VALUE      DEATH BENEFIT'>
*
1 #PILTEXT4 (A78)
1 REDEFINE #PILTEXT4
**  2 #PIL-4-FIL   (A2)
  2 #PIL-POL-NUM (A16)
  2 #PIL-4-FILA  (A1)
  2 #PIL-FACE    (A14)
  2 #PIL-4-FILB  (A1)
  2 #PIL-CV      (A14)
  2 #PIL-CV-AST  (A1)
  2 #PIL-4-FILC  (A1)
  2 #PIL-LOAN-VAL(A14)
  2 #PIL-4-FILD  (A1)
  2 #PIL-DEATH   (A14)
  2 #PIL-DB-AST  (A1)
*
1 #PILTEXT5   (A87)
1 REDEFINE #PILTEXT5
  2 #PILTEXT5-A (A34)
  2 #PIL-CUR-LOAN-CV (A14)
  2 REDEFINE #PIL-CUR-LOAN-CV
    3 #PIL-CLCV-SIGN  (A1)
  2 #PILTEXT5-B (A2)            /*TT1 REDUCED FROM 3 TO 1
  2 #PIL-CUR-LOAN-LV  (A14)
  2 REDEFINE #PIL-CUR-LOAN-LV
    3 #PIL-CLLV-SIGN  (A1)
  2 #PILTEXT5-C  (A1)           /*TT1 REDUCED FROM 3 TO 1
  2 #PIL-CUR-LOAN-DEATH (A14)
  2 REDEFINE #PIL-CUR-LOAN-DEATH
    3 #PIL-CLD-SIGN  (A1)
1 #DATX    (A10)
1 #DATX-ESTATE (A10)
1 #DATN       (N8)
1 REDEFINE #DATN
  2 #DATN-YYYY (N4)
  2 #DATN-MM   (N2)
  2 #DATN-DD   (N2)
*
1 #CURR-DATE  (N8)
1 REDEFINE #CURR-DATE
  2 #CURR-YYYY (N4)
  2 #CURR-MM   (N2)
  2 #CURR-DD   (N2)
1 REDEFINE #CURR-DATE
  2 #CURR-YYYY-A (A4)
  2 #CURR-MM-A   (A2)
  2 #CURR-DD-A   (A2)
*
1 #NEXT-MM    (N2)
1 #PREV-YY    (N2)
1 #DAY-LITERALS (A24) INIT <'312831303130313130313031'>
1 REDEFINE #DAY-LITERALS 2 #DAY-LIT (A2/12)
*
1 #MONTH-LITERALS (A48) INIT<'Jan Feb Mar Apr May Jun Jul Aug Sep '
  -'Oct Nov Dec '>
1 REDEFINE #MONTH-LITERALS   2 #MON-LIT (A4/12)
*
1 #MON-X    (I2)
1 #W-YYYYMM (N7)
1 REDEFINE #W-YYYYMM
  2 #W-0CENT  (N3)
  2 #W-YY     (N2)
  2 #W-MM     (N2)
*
1 #H-DAILY-INT   (P3.7)
1 #H-ACC-INT     (P5.2)
1 #H-ACC-INT-TOT (P5.2)
1 #H-LOAN-AMT-TOT   (P6.2)
1 #H-LOAN-AMT-2-TOT (P6.2)
1 #HOLD-AMOUNT  (P7.2)
1 #AMT-DISP  (A10)
1 #TOTAL-DEATH-BENEFIT  (P7.2)
1 #TOTAL-FACE  (P7.2)
1 #LOAN-VALUE (P7.2)
1 #TOTAL-CV  (P7.2)
1 #ACV       (P9.2)
1 #TOTAL-LOAN-VAL  (P7.2)
1 #YYYYMMDD    (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM  (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY  (N4)
    3 #MM    (N2)
  2 #DD     (N2)
*
1 #HOLD-LPO-INT  (P5.2)
1 #HOLD-EDIT-INT (A9)
1 J  (I4)
*
1 #W-PREMIUM  (N5.2)
1 #W-PREM    (A9)
1 #A-X  (I2)
1 #D-X  (I2)
*
1 #DAILY-INT  (P3.7)
1 #CURR-DB-DOL (P7)
1 #CURR-DB     (P7.2)
1 #TOT-CURR-DB (P7.2)
1 #CURR-LOAN-INT (P7.2)
1 #TOT-ANN-PREM  (P7.2)
1 #DATE-DISP     (A11)
1 #DATE-MM-YYYY  (A10)
*
1 #EDIT-INVALID (L)
1 #PASS-COMMAND (A2)   INIT <'AD'>
1 #PASSED-AMT (P5.2)
*
* BELOW for CALC-PREMS-PAID
1 #PP-DATE-OF-BIRTH  (N8)
1 #PP-ANNUAL-PREM    (N5.2)
1 #PP-PAY-STATUS     (A2)
1 #PP-TOT-PREMIUMS-PAID (N7.2)
1 #PP-PAID-TO-DATE   (N8)
1 #PP-ISSUE-DATE     (N8)
1 #PP-MODE           (A1)
1 #PP-PLAN           (A3)
1 #PP-COST-BASIS      (N7.2)
1 #PP-MONTH-ALLOC-AMT (N7.2)  /* NG99
1 #PP-INTRO-FLAG     (A1)
1 #PP-FIRST-PLACE-FEE (N7.2)
1 #PREMS-PAID         (P7.2)
1 #SUB-PREMS-PAID     (P7.2)
1 #PP-BADJ            (P5.2)
1 #S-ADDRESS-1        (A75)                /* vt4
*
1 #TERM               (L)                  /* PM26
1 #WL                 (L)                  /* PM26
1 #DATE               (A) DYNAMIC          /* YK5
1 #NEW-DB             (A) DYNAMIC          /* YK5
1 #NEW-ANN-PREM       (A) DYNAMIC          /* YK5
1 #POL-SEG            (I2)                 /* YK5
1 #Pol-Number         (A16)                /* YK5
1 #TEXT               (A45)                /* YK5
1 #Z3                 (A3) INIT <'7P '>
*
1 #DATE-OF-BIRTH      (N8.0)                                /* TT2
1 REDEFINE #DATE-OF-BIRTH /* REDEF. BEGIN : DATE-OF-BIRTH   /* TT2
  2 #DOB-YYYY (N4.0)                                        /* TT2
  2 #DOB-MM (N2.0)                                          /* TT2
  2 #DOB-DD (N2.0)                                          /* TT2
1 #DATE-OF-BIRTH-SP    (N8.0)                               /* TT2
1 #SEX-SP              (A1)                                 /* TT2
1 #POLICY-OWNER     (N6/1:*)
1 #POLICY-NUMBER (A16)
1 #PN   (A16/9)
END-DEFINE
*
* * * * * *
INCLUDE GONERCXX
*
DEFINE WINDOW USER-MESSAGE
  SIZE 5 * 50
  BASE 8 / 15
  FRAMED ON
*
IF #CGA-CLERK = 'ELB' OR = 'SKS'                     /* was "LCE' 09/20/2017
  MOVE TRUE TO #ALLOW-FIR
END-IF
*
IF #CGA-SCR-COMMAND = 'SA'
    OR #CGA-SCR-SUFFIX = 'SEC'               /* PM24
  MOVE TRUE TO #USE-SEC-ADDR
  MOVE 'AD' TO #CGA-SCR-COMMAND #CGA-ORIG-COMMAND
END-IF
*
IF (#CGA-SCR-COMMAND = 'ID') AND (#CGA-SCR-ID NE 0)
  GET AD-I01-VIEW #CGA-ISN
  MOVE *DATN TO #YYYYMMDD
  IF  (#CGA-SCR-SUFFIX = 'S')  /* force sec addr
      OR (#YYYY GT PTD-YYYY)   /* already graduated
      OR ((#YYYY = PTD-YYYY) AND (#MM GE 6))
    MOVE TRUE TO #USE-SEC-ADDR
    RESET #CGA-SCR-SUFFIX
  END-IF
END-IF
*
#CI := F-GET-CONTACT-ID(<#CGA-ORIG-ID>)
FIND ST-V WITH MEMBER-KEY = #CGA-ID-G
  IF NO RECORDS
    FIND ST-V WITH WIDOW-KEY = #CGA-ID-G
    END-FIND
  END-NOREC
END-FIND
*
IF   (#CGA-SCR-SUFFIX = 'DFF')                  /* DW18
    AND (ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G')
*  below is to switch to the payor or the linked member
  RESET #FOUND-ALOT-PAYOR
  FIND (1) NT-V WITH ID-NUMBER = ST-V.ID-NUMBER
    FOR #I1 1 TO 60                /* START WITH MAIN PAYOR
      IF NOTE-TEXT (#I1) = MASK ('*#ALOT:PAID BY')
        MOVE TRUE TO #FOUND-ALOT-PAYOR
        MOVE NOTE-TEXT-ALOT-PAID-BY-CN (#I1) TO #ID-A
        FIND (1) ST-V WITH MEMBER-KEY = #ID-A
        END-FIND
        ESCAPE BOTTOM
      END-IF
    END-FOR
  END-FIND
*
  IF NOT #FOUND-ALOT-PAYOR
    FIND (1) ST-V WITH MEMBER-KEY = LINKED-CN-A (1)
      IF NO RECORD FOUND
        FIND ST-V WITH MEMBER-KEY = #CGA-ID-G   /* Restore Orig record
          IF NO RECORDS
            FIND ST-V WITH WIDOW-KEY = #CGA-ID-G
            END-FIND
          END-NOREC
        END-FIND
        ESCAPE BOTTOM
      END-NOREC
    END-FIND
  END-IF
*  above is to switch to the payor or the linked member
  COMPRESS 'DFF of Member' ST-V.ID-NUMBER 'for Lnked SPS/GEN' #CGA-ID INTO #ERROR-MESSAGE
  MOVE ST-V.ID-NUMBER TO #CGA-ID #CGA-SCR-ID #CGA-ORIG-ID
END-IF
*
RESET #PDA-ADDRESS                                           /* vt4 \/
MOVE ST-V.MEMBER-CONTACT-ID TO #ADD-CONTACT-ID
MOVE 'S' TO #ADD-TYPE
CALLNAT 'addn0001' #PDA-ADDRESS
MOVE #ADD-LINE-1 TO #S-ADDRESS-1                             /* vt4 /\
*
IF #CGA-SCR-SUFFIX = MASK ('OW'N)
  MOVE #CGA-SCR-SUFFIX TO #ST-V-PLAN
  MOVE #ST-V-PLAN-SUFF TO #CONTACT-SEG
END-IF
*
IF   (*DEVICE NE 'BATCH')
    AND NOT AFFL-ONLY-CLIENT(<#CGA-ID>)
  CALLNAT 'POSNPRDS'
    #CI
    #INSURED
    #NUMBER-OF-RELATIONS
    #POLICY-RELATIONS(*)
    #ISNS(*)
    #MSG
*
  IF #NUMBER-OF-RELATIONS > 0
    EXPAND ARRAY #POLICY-OWNER TO (1:#NUMBER-OF-RELATIONS)
    MOVE #CGA-SCR-COMMAND TO #SAVE-COMMAND
    MOVE  (AD=P) TO #OWNER-SEL-CV (*)
    RESET #I1
    FORL.
    FOR J 1 TO #NUMBER-OF-RELATIONS
      #POLICY-OWNER(J) := GET-POLICY-OWNER(<POLICY-NUMBER(J)>)
      IF ST-V.ID-NUMBER <> #POLICY-OWNER(J)
        #NON-INS-OWNER := TRUE
        ESCAPE BOTTOM
      END-IF
    END-FOR
    IF #NON-INS-OWNER
      FOR J 1 TO #NUMBER-OF-RELATIONS
        FOR #X 1 TO ST-V.C*ACTIVE-SEGMENTS
          IF ST-V.POLICY-ID (#X) = POLICY-NUMBER(J)
            ADD 1 TO #I1
            #PN ( #I1 ) := #POLICY-RELATIONS.POLICY-NUMBER(J)                   /* vt 06/21/2016 replace #x with J
            COMPRESS 'Owner' GET-POLICY-OWNER(<POLICY-NUMBER(J)>)
              'for policy ' #PN ( #I1 ) INTO #OWNER-LIN1 (#I1)
            ESCAPE BOTTOM
          END-IF
        END-FOR
      END-FOR
      IF #CGA-SCR-SUFFIX NE MASK ('NU') /* no update map
        MOVE '*' TO #CGA-SCR-COMMAND
        INPUT MARK *#OWNER-SEL (1) USING MAP 'G3515MAD'
        IF #OWNER-SEL (*) = 'X' OR = 'x'
          IGNORE
        ELSE
          #CURSE-LINE := (*CURS-LINE - 3) /2
          IF #CGA-SCR-COMMAND NE '*'
            FETCH 'G1000PXX'
          ELSE
            REINPUT 'Must mark Policy with an X to proceed'
              MARK *#OWNER-SEL (#CURSE-LINE)
          END-IF
        END-IF
        IF #CGA-SCR-COMMAND NE '*'
          FETCH 'G1000PXX'
        END-IF
      END-IF
      FOR J 1 TO #I1
        IF #OWNER-SEL (J) NE ' '
          #POLICY-NUMBER := #PN (J)
          ESCAPE BOTTOM
        END-IF
      END-FOR
    END-IF
  END-IF
END-IF

*
IF #CGA-SCR-SUFFIX = 'PNO' OR = 'MIP'                                        /* DW21
*  IF  (INTRO-FLAG = 'S' OR = 'K' OR = 'G')                                  /* vt4
*       AND (S-ADDRESS-1 NE ' ') /* bill-payer is in sec addr of sps-gen     /* vt4
  IF  #S-ADDRESS-1 NE ' '                                                    /* vt4
    MOVE TRUE TO #USE-SPS-GEN-INFO #USE-SEC-ADDR
  END-IF
END-IF
*
if  (*DEVICE eq 'BATCH') and                                       /* vt 5 \/
    #cga-policy-number ne ' '
  #policy-number := #cga-policy-number
end-if                                                             /* vt5  /\
*
CALLNAT 'G3500SAD' #CGA-MASTER #PDA-AREA-G3500AAD #POLICY-NUMBER
/*
IF #CGA-SCR-SUFFIX = 'PNO'   /* NG2
  IF #POLICY-NUMBER = ' '
    FOR J 1 TO 9
      IF ST-V.STATUS (J) = 'D'
        #POLICY-NUMBER := ST-V.POLICY-ID (J)
        ESCAPE BOTTOM
      END-IF
    END-FOR
  END-IF
  CALLNAT 'POSN0019'
    #POLICY-NUMBER
    #PAYOR-CN
    #EXT-FORMATED-NAME
    #FIRST-ADDRESS
    #SECOND-ADDRESS
    #THIRD-ADDRESS
    #EXT-CITY
    #EXT-STATE
    #PAYOR-ZIP-5
    #PAYOR-ZIP-4
END-IF
*
IF #FIRST-ADDRESS = ' '
  MOVE TRUE TO #NO-MAILOUT
ELSE
  IF #ZIP-CODE = 0
    MOVE TRUE TO #FOREIGN-ADDR
  END-IF
END-IF
*
IF #UNDEL-ADDR
  IF #FIRST-ADDRESS = ' '
    #ERROR-MESSAGE := 'No Address On File'
  ELSE
    MOVE 'Undeliverable Address' TO #ERROR-MESSAGE
  END-IF
  MOVE TRUE TO #NO-MAILOUT
  RESET #FIRST-ADDRESS #SECOND-ADDRESS #THIRD-ADDRESS
END-IF
*  NG2 START
IF #POLICY-NUMBER > ' '
  #OWNER-CI := GET-POL-OWNER-CI (< #POLICY-NUMBER >) (1)
  IF #OWNER-CI NE ST-V.MEMBER-CONTACT-ID
    IF NOT PRIMARY-ADDR-EXIST (< #OWNER-CI >)
      #AD-ADDR-MSG (3) := 'Owner doesn''t have primary address'
    END-IF
  END-IF
END-IF
*  NG2 END
* if #ext-dear-formated-name = ' ' and #formated-name ne ' '                     /* vt 12/14/2010 \/
*  move #formated-nme to #ext-dear-formated-name
* end-if                                                                         /* vt 12/14/2010 /\
*  COMPRESS 'Dear' #FULL-RANK #LAST-NAME INTO #DEAR-FORMATED-NAME                    /* vt3
COMPRESS #EXT-DEAR-FORMATED-NAME ':' INTO #EXT-DEAR-FORMATED-NAME LEAVING NO     /* vt3
*
MOVE *DATN TO #CURR-DATE
COMPRESS #CURR-MM-A #CURR-DD-A #CURR-YYYY-A INTO #DATX WITH '/'
MOVE *DATN TO #DATN
MOVE #DATN TO #AGE-71-DT
*
IF #ESTATE-IND
  MOVE 'Estate of:' TO #DATX-ESTATE
ELSE
  MOVE #DATX TO #DATX-ESTATE
END-IF
*
IF   (#SPS-GEN-ID NE 0)
    AND (#SPS-GEN-ID NE #ID-NUM)
  COMPRESS 'For' #EXT-SPS-GEN-NAME INTO #AD-ADDR-MSG(1)                     /* vt3
*    COMPRESS ' For' #SPS-GEN-NAME INTO #AD-ADDR-MSG (1)                       /* vt3
  COMPRESS ' With CN' #SPS-GEN-ID INTO #AD-ADDR-MSG (2)
*
  #LEFT           := #FIRST-ADDRESS           /* PM24
  #RIGHT          := *TRIM(#AD-ADDR-MSG (1))  /* PM24
  #RESULT         := #LEFT                    /* PM24
  #I              := 70 - *LENGTH(#RIGHT)     /* PM24
  MOVE #RIGHT TO SUBSTRING(#RESULT,#I)        /* PM24
  #FIRST-ADDRESS  := #RESULT                  /* PM24
*
  #LEFT           := #SECOND-ADDRESS          /* PM24
  #RIGHT          := *TRIM (#AD-ADDR-MSG (2)) /* PM24
  #RESULT         := #LEFT                    /* PM24
  #I              := 70 - *LENGTH(#RIGHT)     /* PM24
  MOVE #RIGHT TO SUBSTRING(#RESULT,#I)        /* PM24
  #SECOND-ADDRESS := #RESULT                  /* PM24
END-IF
*
IF   (*DEVICE NE 'BATCH')
    AND (#INTERNET-ADDR NE ' ')
    AND (#INTERNET-ADDR NE MASK ('999'))
    AND (NOT #CGA-SCR-SUFFIX = 'VLT')
  COMPRESS 'Internet Addr:' #INTERNET-ADDR INTO #AD-FF-3
END-IF
*
IF (#CGA-SCR-COMMAND = 'AD' OR = 'ID') AND (#CGA-SCR-ID = 0)
    AND (#CGA-SCR-SUFFIX = 'DAT' OR = 'DTO')
  PERFORM FETCH-G35X0PAD
END-IF
*
IF *DEVICE = 'BATCH'
  ADD 2 TO #AGE-71-MM-MM
*
  IF #AGE-71-MM-MM GT 12
    SUBTRACT 12 FROM #AGE-71-MM-MM
    ADD 1 TO #AGE-71-MM-YYYY
  END-IF
END-IF
*
MOVE #CGA-SCR-SUFFIX TO #SCR-SUFFIX
*
IF #CGA-ORIG-COMMAND = 'AD'
  GET ST-V #CGA-ISN
*
  FOR #FST-X 1 TO 9
    IF STATUS (#FST-X) = 'D'
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF #FST-X GT 9
    MOVE 1 TO #FST-X
  END-IF
*
  RESET PDA-CONTACT #DATE-OF-BIRTH                           /* TT2
  P-CONTACT-ID := ST-V.MEMBER-CONTACT-ID                     /* TT2
  CALLNAT 'CONTS001' PDA-CONTACT #DATE-OF-BIRTH-SP #SEX-SP   /* TT2
  #DATE-OF-BIRTH := P-DATE-OF-BIRTH

*
  IF ST-V.WIDOW-FLAG NE 'Y'
    RESET #TOT-FACE #TOT-FACE-TERM /* PM4
    RESET #HOLD-LPO-INT
    FOR #SEG-I 1 TO C*ACTIVE-SEGMENTS
      IF  (ST-V.STATUS (#SEG-I) = 'D')
          AND (NOT PLAN (#SEG-I) = 'SO' OR = 'FSO')    /* DW6
        MOVE *DATN TO #EFF-DATE
        MOVE ST-V.PLAN (#SEG-I) TO #PLAN-3
*
        IF  ((ST-V.PLAN (#SEG-I) = 'LT')
            AND (#DATE-OF-BIRTH LT (#EFF-DATE - 400000)))             /* TT2
            OR  ((ST-V.PLAN(#SEG-I) = 'RT')
            AND (ST-V.ISSUE-AGE (#SEG-I) GT '65'))
            OR  ((ST-V.PLAN(#SEG-I) = 'EZ')                           /* YK4
            AND (ST-V.PAID-UP-DATE(#SEG-I) LE #EFF-DATE))             /* YK4
*           OR  (((#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z'))            /* YK3
            OR (F-LT2-TRUE(<ST-V.PLAN(#SEG-I)>)                       /* YK3
            AND ((ST-V.ISSUE-DATE(#SEG-I) + 40000) LE #EFF-DATE))
            OR ( IS-ANNUITY-LIFE(< ST-V.PLAN (#SEG-I) >))   /* DW8    /* TT3
*
          CALLNAT 'GDROPSTM' USING
            ST-V.PLAN          (#SEG-I)
            ST-V.SMOKER-FLAG   (#SEG-I)
            #DATE-OF-BIRTH                                       /* TT2
            ST-V.ISSUE-DATE    (#SEG-I)
            ST-V.PAID-UP-DATE  (#SEG-I)
            #EFF-DATE
            ST-V.ISSUE-AGE     (#SEG-I)
            #PAY-STAT
            ST-V.FACE-AMOUNT   (#SEG-I)
            ST-V.DEATH-BENEFIT (#SEG-I)
            ST-V.CASH-VALUE    (#SEG-I)
            ST-V.BEG-CASH-VALUE(#SEG-I)
        END-IF
*
        RESET #REAL-FACE-AMT /* PM4
        IF ST-V.PAY-STATUS (#SEG-I) = '45'
          IF ST-V.ISSUE-DATE (#SEG-I) LT 19941201
            COMPUTE #REAL-FACE-AMT = (ST-V.NUM-MBRSHIPS (#SEG-I) * 5000)
          ELSE
            COMPUTE #REAL-FACE-AMT = (ST-V.EXPIRY-DAY (#SEG-I) * 5000)
          END-IF
        ELSE
          MOVE ST-V.FACE-AMOUNT (#SEG-I) TO #REAL-FACE-AMT
        END-IF
*
*       IF  ((ST-V.PLAN (#SEG-I) = 'LT' OR = 'RT') /* PM4             /* YK3
*           OR  ((#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z')))            /* YK3
        IF FUNCTION-TERM-POLICY(<ST-V.PLAN(#SEG-I)>)                  /* YK3
          COMPUTE #TOT-FACE-TERM = #TOT-FACE-TERM + #REAL-FACE-AMT
        END-IF
*
        COMPUTE #TOT-FACE = #TOT-FACE + #REAL-FACE-AMT
      END-IF
    END-FOR
*
    CALLNAT 'GMAXSXX'
      #CGA-ORIG-COMMAND
      #MAX-FACE-TOTAL
      #MAX-FACE-TERM
      #OVERRIDE-MAX-FACE-TOTAL
      #OVERRIDE-MAX-FACE-TERM
      ST-V.INTRO-FLAG
      #DATE-OF-BIRTH   /* DW10                                      /* TT2
*
*   IF ST-V.PLAN (#FST-X) = 'SO' OR = 'FSO'    /* DW6
*     MOVE #MAX-FACE-TOTAL TO #REM-FACE
*     MOVE #MAX-FACE-TERM  TO #REM-FACE-TM /* PM4
*   ELSE
    COMPUTE #REM-FACE = #MAX-FACE-TOTAL - #TOT-FACE
    COMPUTE #REM-FACE-TM = #MAX-FACE-TERM - #TOT-FACE-TERM /* PM4
    IF #REM-FACE LT #REM-FACE-TM
      MOVE #REM-FACE TO #REM-FACE-TM
    END-IF
*   END-IF
    MOVE EDITED #REM-FACE (EM=Z,ZZZ,ZZ9) TO #REM-FACE-DISP
    MOVE EDITED #REM-FACE-TM (EM=Z,ZZZ,ZZ9) TO #REM-FACE-DISP-TM /* PM4
*
    RESET #INELIGIBLE
*   IF  (#TOT-FACE GT (#MAX-FACE-TOTAL - 5000)) /* PM4
*    OR (ST-V.DATE-OF-BIRTH + 710000 LT #AGE-71-DT) /* over age 71
    IF  (#DATE-OF-BIRTH + 800000 LT #AGE-71-DT) /* over age 80   PM4         /* TT2
        OR (RESTRICT-MBR-SW = 'Y')
        OR (SUSPEND-CODE = '5' OR = '6' OR = '9')
      MOVE TRUE TO #INELIGIBLE
    END-IF
*
    RESET #W-INELIGIBLE #T-INELIGIBLE /* PM4
    IF NOT #INELIGIBLE
      IF #REM-FACE LE 0
        MOVE TRUE TO #W-INELIGIBLE
      END-IF
*
      IF #REM-FACE-TM LE 0
          OR (#DATE-OF-BIRTH + 760000 LT #AGE-71-DT) /* over age 75  PM19       /* TT2
        MOVE TRUE TO #T-INELIGIBLE
      END-IF
    END-IF
*
  END-IF
*
* IF PLAN (#FST-X) = 'SO' OR = 'FSO'     /* DW6
*   AND (#CGA-SCR-SUFFIX = 'PIL' OR = 'PUL' OR = 'PUP')
*   COMPRESS #CGA-SCR-SUFFIX' invalid for a Services Only'
*     INTO #ERROR-MESSAGE
*   RESET #CGA-SCR-SUFFIX
* END-IF
ELSE
  GET AD-I01-VIEW #CGA-ISN
END-IF
*
PERFORM CALC-DB
PERFORM CALC-LOAN-INT
*
MOVE EDITED #HOLD-LPO-INT (EM=ZZZZZ.99) TO #HOLD-EDIT-INT
*
IF  (#CGA-SCR-SUFFIX = MASK ('PN'N))  /* DW15
    OR (#CGA-SCR-SUFFIX = 'PNC')
  MOVE TRUE TO #PNX
END-IF
*
DECIDE FOR EVERY CONDITION
  WHEN #CGA-SCR-SUFFIX = 'FIR' AND #ALLOW-FIR      /* RE2
    PERFORM FIR-PROCESS               /* RE2
  WHEN #CGA-SCR-SUFFIX = 'DFF'               /* DW 18
    PERFORM DFF-PROCESS
  WHEN (#CGA-SCR-SUFFIX = 'PNO' OR = 'MIP') OR #PNX    /* DW3 DW15 DW21
    PERFORM PNO-PROCESS
  WHEN #CGA-SCR-SUFFIX = 'EZP'
    PERFORM EZP-PROCESS
  WHEN #CGA-SCR-SUFFIX = 'PIL' OR = 'AVL'
    PERFORM PIL-PROCESS
  WHEN #CGA-SCR-SUFFIX = 'APL' OR =  'NAM'             /* VT1
    FOR #I1 1 TO 9
      IF (STATUS (#I1) = 'D') AND (MODE (#I1) = 'A' OR = 'S' OR = 'Q'
          OR = 'M' OR = '0' OR = '1' OR = '2' OR = '4')   /* DW1
        MOVE MODE (#I1) TO #MODE
        MOVE PAID-TO-DATE (#I1) TO #PAID-TO-DATE
      END-IF
    END-FOR
  WHEN #CGA-SCR-SUFFIX = 'FAL'
    RESET #PASSED-AMT
    FOR #I1 1 TO 9
      IF (STATUS (#I1) = 'D')
          AND (PAY-STATUS (#I1) LT '40')
        COMPUTE #PASSED-AMT = #PASSED-AMT + (ANNUAL-PREM (#I1)  / 12)
      END-IF
    END-FOR
    PERFORM CALC-DUES
  WHEN #CGA-SCR-SUFFIX = 'RFZ'
    RESET #PASSED-AMT
    FOR #AD-I 1 TO 9
      IF   (MODE (#AD-I) = 'E')
          AND (PAY-STATUS (#AD-I) LT '40')
        COMPUTE #PASSED-AMT = #PASSED-AMT + (ANNUAL-PREM (#AD-I) / 12)
      END-IF
*
      IF X-ALT-LP-IND (#AD-I) = '3' OR = '4'
        ADD X-ALT-LP-AMT (#AD-I) TO #PASSED-AMT
      END-IF
    END-FOR
    PERFORM CALC-DUES
  WHEN #CGA-SCR-SUFFIX = 'RFG' OR = 'RPL' /* PM14
    RESET #ISSUE-DATE
    FOR #AD-I 1 TO 9
      IF   (ISSUE-DATE (#AD-I) NE 0) /* get last issue date
          AND (STATUS (#AD-I) = 'E')  /* this month
        MOVE ISSUE-DATE (#AD-I) TO #ISSUE-DATE
*
        IF PLAN (#AD-I) = 'FSO' OR = 'SO'
          MOVE 'RFF' TO #CGA-SCR-SUFFIX
        END-IF
      END-IF
    END-FOR
  WHEN #CGA-SCR-SUFFIX = 'BAL'   /* temporary for lcc to adjust fpf
    MOVE X-BILL-ADJUST (#AD-I) TO #PASSED-AMT
    RESET #PAID-TO-DATE
    FOR #AD-I 1 TO 9
      IF MODE (#AD-I) = 'A' OR = 'S' OR = 'Q'
          OR = 'M' OR = '0' OR = '1' OR = '2' OR = '4' /* DW1
        MOVE PAID-TO-DATE (#AD-I) TO #PAID-TO-DATE
        IF BILL-TO-DATE (#AD-I) GT #PAID-TO-DATE
          MOVE BILL-TO-DATE (#AD-I) TO #PAID-TO-DATE
        END-IF
      END-IF
    END-FOR
*
  WHEN #CGA-SCR-SUFFIX = 'REF'
      OR = 'RFG' OR = 'RFF' OR = 'RFC'
      OR = 'AL' OR = 'RPL' /* PM14                             /* DW11
      OR = 'RFS' OR = 'RFD' OR = 'RFZ' OR = 'RD' OR = 'RQ'
      OR = 'GFT' OR = 'DAT' OR = 'DTO' OR = 'RC'
      OR = 'PUL'  /* paid-up thank you lTR
      OR = 'PUP' OR = 'PUM' OR = 'OLD'
      OR = 'FAL' OR = 'NSP' OR = 'TRF'                         /* PM25
      OR = 'LPS' OR = 'LPL' OR = 'RPU' OR = 'APL' OR = 'NAM'   /* VT1
      OR = 'LPF' OR = 'LPV' OR = 'LPB'
      OR = 'BAL' OR = 'DTH' OR = 'RDD' OR = 'RDP'
      OR = 'DFL' OR = 'SCF' OR = 'SCG' OR = 'SCI'
      OR = 'CLP' OR = 'VLT' OR = 'RFX'
      OR = 'BLB' OR = 'CLR' OR = 'COB' OR = 'NEW'  /* DW7
    EXAMINE MODE(*) FOR 'G' GIVING INDEX #I1     /* YK1
    IF #I1 NE 0                                  /* YK1
      #MODE := 'G'                               /* YK1
    END-IF                                       /* YK1
    PERFORM FETCH-G35X0PAD
*
    IF *DEVICE = 'BATCH'
      ESCAPE ROUTINE
    END-IF
*
  WHEN #CGA-SCR-SUFFIX = 'MS2'
    FETCH 'ATHP400A'
  WHEN #CGA-SCR-SUFFIX = 'ACB' OR = 'ACS'
    FETCH 'AOAP005F'
  WHEN #CGA-SCR-SUFFIX = 'BEN'  /* PAM
    PERFORM LOAD-BEN-LETTER
  WHEN #CGA-SCR-SUFFIX = 'ADB'  /* YK5
    PERFORM LOAD-ADB-LETTER
  WHEN #CGA-SCR-SUFFIX = 'NHW'  /* YK6
    PERFORM LOAD-NHW-LETTER
  WHEN NONE
    IGNORE
END-DECIDE
*

* IF ST-V.ID-NUMBER = 38501 /* DO NOT SHOW info on env  /* DW12
IF *DEVICE = 'BATCH'
  RESET #ID-NUM #MIL-STATUS #MIL-SERVICE    /* DW12
* RESET #MIL-STATUS #MIL-SERVICE    /* DW12
END-IF
*
IF   (*DEVICE = 'BATCH')
    AND ((#CGA-SCR-SUFFIX = 'PIL' OR = 'CLP') OR #PNX)  /* DW3
  MOVE #CGA-SCR-SUFFIX TO #FORM-IND
  RESET #CGA-SCR-SUFFIX
  IF #CGA-SCR-SUFFIX = 'CLP'
    NEWPAGE (8)
    WRITE (8) NOTITLE USING FORM 'G3508FAD' /* 2 cop
  END-IF
  NEWPAGE (8)
  WRITE (8) NOTITLE USING FORM 'G3508FAD'
*
  ESCAPE ROUTINE
END-IF
*
IF *DEVICE = 'BATCH'
  IF #NO-MAILOUT
    MOVE 99 TO #CGA-SECURITY-CODE
    ESCAPE ROUTINE
  END-IF
*
  IF   #FOREIGN-ADDR
      AND (ST-V.WIDOW-FLAG NE 'Y')
    MOVE FALSE TO #CGA-GOOD-TAS
  ELSE
    MOVE TRUE TO #CGA-GOOD-TAS
  END-IF
*
  EJECT
*
  MOVE 1 TO #CGA-SECURITY-CODE /* PAGE COUNTER
*
  ESCAPE ROUTINE
ELSE
  IF #CGA-SCR-SUFFIX = MASK ('NU') /* no update map
    RESET #CGA-SCR-SUFFIX
    RESET #CGA-SCR-ID
    RESET #CGA-SCR-COMMAND
    RESET #I1
    INPUT USING MAP 'G3599MAD' NO ERASE
*
    IF #CGA-ORIG-SUFFIX = 'NUS' OR = 'NUC'
      IF #CGA-MF-SCR-PARM-1-N NE 0
        COMPUTE #HOLD-AMOUNT = #CGA-MF-SCR-PARM-1-N / 100
        MOVE EDITED #HOLD-AMOUNT (EM=ZZZ,ZZZ.99) TO #AMT-DISP
        ADD 1 TO #I1
        COMPRESS '  If you have not already done so, please make'
          'arrangements to' INTO #AD-TABLE (#I1)
        IF #CGA-ORIG-SUFFIX = 'NUS'
          MOVE 'stop,' TO #ST-CH
          ADD 1 TO #I1
          COMPRESS 'have your $' #AMT-DISP 'allotment to the'
            'Association discontinued.' INTO #AD-TABLE (#I1)
        ELSE
          MOVE 'change,' TO #ST-CH
          ADD 1 TO #I1
          COMPRESS 'change your allotment to the Association t'
            'o $' #AMT-DISP '.' INTO #AD-TABLE (#I1) LEAVING NO
        END-IF
*
        ADD 1 TO #I1
        COMPRESS 'When we receive notification of the' #ST-CH 'we will'
          'refund any dues'  INTO #AD-TABLE (#I1)
        ADD 1 TO #I1
        MOVE 'overpayment to you.' TO #AD-TABLE (#I1)
      END-IF
*
      ADD 2 TO #I1
      COMPRESS 'Under separate cover, we are returning papers you'
        'had on file with us.' INTO #AD-TABLE (#I1)
      ADD 2 TO #I1
      MOVE 'Sincerely,' TO #AD-LST-48 (#I1)
      ADD 3 TO #I1
      MOVE 'Ralph C. Clark' TO #AD-LST-48 (#I1)
      ADD 1 TO #I1
      MOVE 'Treasurer' TO #AD-LST-48 (#I1)
      INPUT USING MAP 'G3598MAD'
    END-IF
*
    IF #CGA-MF-SCR-COMMAND = 'GB'    /* PM23
      ESCAPE ROUTINE                 /* PM23
    END-IF                           /* PM23
*
    IF #CGA-SCR-COMMAND = ' '
      MOVE 'CI'         TO #CGA-SCR-COMMAND
      MOVE #CGA-ORIG-ID TO #CGA-SCR-ID
    END-IF
  ELSE
    IF #CGA-SCR-SUFFIX = 'WIN'  /* FOR WINDOW ENVL
      RESET #CGA-SCR-SUFFIX
      INPUT WITH TEXT #ERROR-MESSAGE USING MAP 'G350WMAD'
    ELSE
      INPUT WITH TEXT #ERROR-MESSAGE USING MAP 'G3500MAD'
    END-IF
*
    IF  (ST-V.WIDOW-FLAG = 'Y')                       /* RE2
        AND (#CGA-SCR-SUFFIX = 'FIR' OR = ' ')           /* RE2
        AND #ALLOW-FIR                                   /* RE2
      PERFORM WIDOW-TEXT                              /* RE2
      MOVE #AD-WID-TABLE (1:20) TO #VS-TEXT (1:20)    /* RE2
      INPUT USING MAP 'G3501MAD' /* rest of ad sheet  /* RE2
      RESET #VS-TEXT (*)                              /* RE2
      MOVE #AD-WID-TABLE (21:30) TO #VS-TEXT (1:10)   /* RE2
    END-IF                                            /* RE2
*
    IF   ((#CGA-SCR-SUFFIX = 'PIL' OR = ' ')
        OR (#CGA-SCR-SUFFIX= 'FIR' AND #ALLOW-FIR))    /* RE2
        AND (#S-X NE 0)
      INPUT USING MAP 'G3501MAD' /* rest of ad sheet
    END-IF
    IF(#CGA-SCR-SUFFIX = 'AVL' AND #USE-2ND) THEN    /*TT1****BEGIN***
      INPUT USING MAP 'G3501MAD'                     /*TT1******GOES TO NEXT SCREEN.  NEEDS TESTING
    END-IF                                           /*TT1****END*****
  END-IF
*
  IF #CGA-ORIG-SUFFIX = 'NUR'  /* no update rpu
    MOVE 'NC'  TO #CGA-SCR-COMMAND
    MOVE #CGA-ID TO #CGA-SCR-ID
    MOVE 'AL*' TO #CGA-SCR-SUFFIX /* show all polS
  END-IF
*
  IF (#CGA-ORIG-SUFFIX = 'FIR')         /* RE2
      AND (#CGA-SCR-COMMAND = 'AD')       /* RE2
      AND (#ALLOW-FIR)                    /* RE2
      AND (#CGA-SCR-ID = #CGA-ORIG-ID)    /* RE2
      AND (#ERROR-MESSAGE = ' ')          /* RE2
    MOVE 'BA'  TO #CGA-SCR-COMMAND      /* RE2
    MOVE 'EDF' TO #CGA-SCR-SUFFIX       /* RE2
  END-IF                                /* RE2
* YK5
  IF #CGA-SCR-SUFFIX = 'ADB'
    MOVE 'NC'  TO #CGA-SCR-COMMAND      /* show NC screen
    MOVE #CGA-ID TO #CGA-SCR-ID
    MOVE ' ' TO #CGA-SCR-SUFFIX
  END-IF
* YK5
END-IF
*
FETCH 'G1000PXX'
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE DFF-PROCESS     /* DW18
* * * * * * * * * * * * * * * *
*
COMPRESS 'As a convenience to our members, DFAS has awarded AAFMAA the ability'
  'to adjust'  INTO #AD-FF-12
MOVE     'our members" AAFMAA allotments.' TO #AD-FF-13
*
IF ST-V.MILITARY-STATUS = 'R'
  COMPRESS 'DFAS will no longer process retiree allotment changes for AAFMAA'
    'allotments' INTO #AD-FF-14
  COMPRESS 'only. Please do not submit your change to DFAS. Rather, submit the'
    'enclosed' INTO #AD-FF-15
  MOVE     'form to us and we will take care of it for you.' TO #AD-FF-16
  MOVE '10th' TO #DFF-DAY
ELSE    /* Active & Civilian
  COMPRESS 'Please sign the enclosed Allotment Authorization form and return it'
    'to us'     INTO #AD-FF-14
  MOVE     'and we will take care of it for you.' TO #AD-FF-15
  MOVE '15th' TO #DFF-DAY
END-IF
*
COMPRESS 'Changes submitted by the' #DFF-DAY 'of the month will be reflected on'
  'your next LES.'  INTO #AD-FF-18
MOVE     'It is a pleasure to serve you. Please call us if you have questions.'
  TO #AD-FF-19
MOVE 'FA' TO #CGA-SCR-COMMAND
RESET #CGA-SCR-SUFFIX

*
PERFORM CORR-MSG-FORMAT
*
END-SUBROUTINE
*
* * * * *
DEFINE SUBROUTINE CORR-MSG-FORMAT
* * * * *
IF #PNX    /* DW3
  MOVE 'Policy Services' TO #CLERK-ABB-NAME-PASS
ELSE
  MOVE #CGA-CLERK TO #CLERK-ABB-PASS
  MOVE ' ' TO #CLERK-ABB-NAME-PASS
  CALLNAT 'GCKNMSXX' #CLERK-ABB-PASS
    #INVALID
    #CLERK-ABB-NAME-PASS
END-IF
*
IF #USE-2ND
  ADD 1 TO #S-X
  COMPRESS #CORR-MSG #CLERK-ABB-NAME-PASS INTO #VS-TEXT (#S-X)
ELSE
  IF #USE-3RD
    ADD +2 TO #I1
    COMPRESS #CORR-MSG #CLERK-ABB-NAME-PASS INTO #AD-LST-70 (#I1)
  ELSE
    COMPRESS #CORR-MSG #CLERK-ABB-NAME-PASS INTO #AD-FF-25            /* vt6 was #ad-ff-24
  END-IF
END-IF
*
END-SUBROUTINE
*
* * * * *
DEFINE SUBROUTINE EZP-PROCESS
* * * * *
*
MOVE *DATN TO #YYYYMMDD
ADD 1 TO #MM
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
MOVE #YYYYMMDD TO #NEXT-MONTH
*
RESET #HOLD-PREM #HPTD-DATE
FOR #I1 1 TO 9
  IF  (ST-V.STATUS(#I1) NE 'D')
      OR (ST-V.PAY-STATUS (#I1) GE '40')
    ESCAPE TOP
  END-IF
*
  IF ((PAD-CODE = 'N' OR = 'W')  /* only non-mbrs
      AND (OWNERSHIP-FLAG (#I1) NE 'N'))
      OR ((PAD-CODE = 'D' OR = 'X')  /* only "D"
      AND (OWNERSHIP-FLAG (#I1) NE 'D'))
      OR ((PAD-CODE = 'L' OR = 'Z')) /* only EZP amt
    ESCAPE TOP
  END-IF
*
  MOVE PAID-TO-DATE (#I1) TO #HPTD-DATE
  MOVE PAID-TO-DATE (#I1) TO #YYYYMMDD
  IF #MM GT #NEXT-MONTH-MM
    SUBTRACT 12 FROM #MM
    ADD 1 TO #YYYY
  END-IF
*
  COMPUTE #MONS = (#NEXT-MONTH-MM - #MM)
    + ((#NEXT-MONTH-YYYY - #YYYY) * 12)
  IF #MONS LE 0
    ESCAPE TOP
  END-IF
*
  COMPUTE #W-PREMIUM = (ANNUAL-PREM (#I1) / 12) * #MONS
  ADD #W-PREMIUM TO #HOLD-PREM
END-FOR
*
RESET #PASSED-AMT
PERFORM CALC-DUES
ADD (#PASSED-AMT * #MONS) TO #HOLD-PREM
*
ADD DEBIT-CREDIT-AMT TO #HOLD-PREM
ADD X-BILL-ADJUST (#I1) TO #HOLD-PREM
ADD X-FIRST-PLACE-FEE (#I1) TO #HOLD-PREM
ADD DUES-FPF         TO #HOLD-PREM
ADD DUES-BALANCE     TO #HOLD-PREM
ADD X-RID-BALANCE (#I1) TO #HOLD-PREM
*
IF #HOLD-PREM LT 0
  RESET #HOLD-PREM
END-IF
*
MOVE EDITED #HOLD-PREM (EM=ZZ,ZZ9.99) TO #HOLD-EDIT-PREMR
MOVE LEFT JUSTIFIED #HOLD-EDIT-PREMR TO #HOLD-EDIT-PREM
*
COMPRESS 'We are in receipt of your EZ-Pay Authorization and void'
  'check. To start'    INTO #AD-FF-12
COMPRESS 'electronic fund transfers we may require a payment. Should'
  'payment not be'     INTO #AD-FF-13
COMPRESS 'received the first deduction will transfer all amounts'
  'due.'               INTO #AD-FF-14
COMPRESS 'Please return this notice with your remittance for'
  'proper crediting.'  INTO #AD-FF-15
MOVE 'Payment Type - EZ-Pay Pending' TO #AD-FF-17
*
MOVE *DATN TO #YYYYMMDD
ADD 1 TO #MM
IF #MM > 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
COMPRESS '1' #MON-LIT(#MM) #YYYY INTO #AD-FF-18 WITH '/'
COMPRESS 'Due Date     -' #AD-FF-18 INTO #AD-FF-18
*
MOVE #HPTD-DATE TO #YYYYMMDD
ADD 1 TO #MM
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
*
COMPRESS '1' #MON-LIT(#MM) #YYYY INTO #AD-FF-19 WITH '/'
*
MOVE #NEXT-MONTH TO #YYYYMMDD
IF #MM = 2 MOVE 28 TO #DD ELSE
  IF #MM = 4 OR = 6 OR = 9 OR = 11 MOVE 31 TO #DD ELSE
    MOVE 31 TO #DD END-IF END-IF
COMPRESS #DD #MON-LIT (#MM) #YYYY INTO #HOLD-PER-DATE WITH '/'
*
COMPRESS 'For Payment  -' #AD-FF-19 INTO #AD-FF-19
COMPRESS 'Amount due   - $' #HOLD-EDIT-PREM  INTO #AD-FF-20
*
PERFORM CORR-MSG-FORMAT
END-SUBROUTINE /* (1230)
*
* * * *
DEFINE SUBROUTINE PNO-PROCESS
* * * *
*
PERFORM CALLNAT-CVALUSXX                              /* DW21
*
MOVE ST-V.ID-NUMBER TO #ID
CALLNAT 'GRIDCSXX' USING
  #ID
  #AT-RID-ATTACH-FAC-AMT
  #AT-RID-ATTACH-PLAN
  #AT-RID-PLAN            (1:5)
  #AT-RID-ATTACH-ISS-DT   (1:5)
  #AT-TOT-FBR-PREM
  #EX-FBR-PREM-BY-LINE    (1:9)
  #EX-SPS-DB-BY-LINE      (1:9)
  #EX-DEP-DB-BY-LINE      (1:9)
  #EX-EACH-DEP-DB-BY-LINE (1:9)
  #NUM-ELIG-CHILDREN
  #NUM-ELIG-CHILDREN-UNDER-6-MON
  #TOT-CHILD-DB
  #RID-TEXT
*
FOR #A-X 1 TO 9
  IF   (STATUS (#A-X)  = 'D')                   /* DW21
      AND (CONV-DURATION (#A-X) = 999)
    COMPUTE #CAP-LOAN = #LOAN-BAL (#A-X) + #ACC-INT (#A-X)
    MOVE EDITED #CAP-LOAN (EM=ZZ,ZZZ.99) TO #CAP-LOAN-DISP
*
    IF #CAP-LOAN NE 0
      IF CAP-BILL-DATE = 0
        MOVE *DATN TO #YYYYMMDD
        MOVE 1 TO #DD
      ELSE
        MOVE CAP-BILL-DATE TO #YYYYMMDD
      END-IF
*
      COMPRESS #DD #MON-LIT (#MM) #YYYY INTO #CAP-LOAN-DUE-DATE
      IF X-ALT-LP-AMT (#A-X) GT #CAP-LOAN
        ADD #CAP-LOAN TO #HOLD-PREM
      ELSE
        ADD X-ALT-LP-AMT (#A-X) TO #HOLD-PREM
      END-IF
    END-IF
  END-IF
*
  IF  (#CGA-SCR-SUFFIX = 'MIP') /* No Premium shown              /* DW21
      AND (MODE (#A-X) NE 'M')     /* if not Mode "M"
    ESCAPE TOP
  END-IF

  IF   (ST-V.STATUS(#A-X) = 'D')
    IF X-ALT-LP-IND (#A-X) = '8'  /* DW15
      ADD X-ALT-LP-AMT (#A-X) TO #TOT-CIP
    END-IF
*
    IF X-ALT-LP-IND-2 (#A-X) = '8'  /* DW15
      ADD X-ALT-LP-AMT-2 (#A-X) TO #TOT-CIP
    END-IF
  END-IF
*
  IF   (ST-V.STATUS(#A-X) = 'D')
      AND (ST-V.PAY-STATUS (#A-X) LT '40')
    IF #PNX                         /* DW3
      IF  MODE (#A-X) = '0' OR = '1' OR = '2' OR = '4'
        IF  (CONV-DURATION(#A-X)= 999) AND (X-LOAN-AMOUNT(#A-X) GT 5.00)
          MOVE 'M' TO MODE (#A-X)    /* DW15
        ELSE
          MOVE 'Q' TO MODE (#A-X)
        END-IF
      ELSE
        ESCAPE TOP
      END-IF
*
      MOVE #A-X TO #PNC-X   /* Store index for pol # build
    END-IF
*
    MOVE PAID-TO-DATE(#A-X) TO #HPTD-DATE
    ADD 1 TO #H-PTD-MM
    IF #H-PTD-MM > 12
      SUBTRACT 12 FROM #H-PTD-MM
      ADD 1 TO #H-PTD-CCYY
    END-IF
*
    COMPRESS '1' #MON-LIT(#H-PTD-MM) #H-PTD-CCYY INTO #HOLD-PTD-DATE
    MOVE 'MONTHLY' TO #HOLD-MODE
    IF MODE(#A-X) = 'Q' OR = '4'  /* DW1
      MOVE 'QUARTERLY' TO #HOLD-MODE
      ADD 2 TO #H-PTD-MM
      ASSIGN #P-DIV = 4
    ELSE
      IF MODE(#A-X) = 'A' OR = '1'  /* DW1
        MOVE 'ANNUAL' TO #HOLD-MODE
        ADD 11 TO #H-PTD-MM
        ASSIGN #P-DIV = 1
      ELSE
        IF MODE (#A-X) = 'S' OR = '2' /* DW1
          MOVE 'SEMI-ANNUAL' TO #HOLD-MODE
          ADD 5 TO #H-PTD-MM
          ASSIGN #P-DIV = 2
        ELSE
          MOVE 'MONTHLY' TO #HOLD-MODE
*           ADD 1 TO #H-PTD-MM
          ASSIGN #P-DIV = 12
        END-IF
      END-IF
    END-IF
*
    IF #H-PTD-MM > 12
      SUBTRACT 12 FROM #H-PTD-MM
      ADD 1 TO #H-PTD-CCYY
    END-IF
*
    COMPRESS 'Thru' #DAY-LIT(#H-PTD-MM) #MON-LIT(#H-PTD-MM)
      #H-PTD-CCYY INTO #HOLD-PER-DATE
    COMPUTE #HOLD-PREM = #HOLD-PREM +
      ANNUAL-PREM(#A-X) / #P-DIV
    RESET #PASSED-AMT
    PERFORM CALC-DUES
    COMPUTE #PASSED-AMT = (#PASSED-AMT * 12) / #P-DIV
*
    ADD #PASSED-AMT TO #HOLD-PREM
    ADD #EX-FBR-PREM-BY-LINE (#A-X) TO #HOLD-PREM
  END-IF
*
  IF MODE(#A-X) = 'A' OR = 'S' OR = 'Q' OR = 'M'
      OR = '0' OR = '1' OR = '2' OR = '4'  /* DW1
    ADD X-BILL-ADJUST (#A-X) TO #HOLD-PREM
  END-IF
*
  ADD X-RID-BALANCE (#A-X) TO #HOLD-PREM
END-FOR
*
IF   (#CGA-SCR-SUFFIX = 'MIP')                      /* DW21
    AND (#CAP-LOAN = 0)
  RESET #CGA-SCR-SUFFIX #CGA-ORIG-SUFFIX
  MOVE 'AD MIP Invalid since no CAP loan exists' TO #ERROR-MESSAGE
  INPUT TEXT #ERROR-MESSAGE USING MAP 'G1000MXX'
  FETCH 'G1000PXX'
END-IF
*
IF #CGA-SCR-SUFFIX = 'MIP'                      /* DW21
  COMPRESS 'Please return this notice with your remittance to insure proper'
    'crediting.'  INTO #AD-FF-12
  COMPRESS 'As stated in your agreement this must be paid by an automatic'
    'monthly payment.'  INTO #AD-FF-13
  COMPRESS 'If payment is not received within 30 days of the Due Date, the CAP Loan'
    'will' INTO #AD-FF-14
  MOVE 'be forwarded to a collections agency.'  TO #AD-FF-15
*
  COMPRESS 'Due Date -' #CAP-LOAN-DUE-DATE        INTO #AD-FF-17
  MOVE EDITED #HOLD-PREM (EM=ZZ,ZZ9.99) TO #HOLD-EDIT-PREM
  MOVE LEFT #HOLD-EDIT-PREM TO #HOLD-EDIT-PREM
  COMPRESS 'Amount due   - $' #HOLD-EDIT-PREM     INTO #AD-FF-18
  COMPRESS 'CAP Loan Balance - $' #CAP-LOAN-DISP  INTO #AD-FF-19
*
  PERFORM CORR-MSG-FORMAT
  ASSIGN *CURS-LINE = 16
  ASSIGN *CURS-COL = 24
*

  ESCAPE ROUTINE
END-IF
*
ADD DUES-BALANCE TO #HOLD-PREM
ADD #TOT-CIP TO #HOLD-PREM
MOVE EDITED #HOLD-PREM (EM=ZZ,ZZ9.99) TO #HOLD-EDIT-PREMR
MOVE LEFT #HOLD-EDIT-PREMR TO #HOLD-EDIT-PREM
*
* BELOW MUST MATCH ATHPCCRD
IF #PNX                    /* DW15
  DECIDE ON FIRST VALUE #SCR-SUFFIX-3   /* DW15
    VALUE '1' MOVE 'DECLINED'     TO #CC-REJ
    VALUE '2' MOVE 'INVALID ACCT' TO #CC-REJ
    VALUE '3' MOVE 'INVALID CARD' TO #CC-REJ
    VALUE '4' MOVE 'INVALID EXP DATE' TO #CC-REJ
    VALUE '5' MOVE 'HOLD CARD'    TO #CC-REJ
    VALUE '6' MOVE 'OVER LIMIT'   TO #CC-REJ
    VALUE '7' MOVE 'DUPLICATE TRANS' TO #CC-REJ
    NONE MOVE 'UNKNOWN' TO #CC-REJ
  END-DECIDE
*
  IF #PNC-X NE 0
    CALLNAT 'GPLNMSXX' #POL-NUM ST-V.ID-NUMBER #PNC-X /* build POL-#
  END-IF
*
  COMPRESS 'The Credit Card we charged for your AAFMAA insurance'
    'premiums and/or loan' INTO #AD-FF-12                                /* DW21
*
  COMPRESS 'processing was rejected. Enclosed is a Credit Card'     /* PM22
    'Authorization Form.' INTO #AD-FF-13                                   /* PM22
  MOVE 'Please complete and return this form and notice with your payment to insure' TO #AD-FF-14                 /* PM22
*   IF #HOLD-PREM = 0                                                     /* PM22                                    /* vt6
*     COMPRESS #AD-FF-14 'return enclosed form to resume Credit'          /* PM22                                    /* vt6
*       INTO #AD-FF-14                                                    /* PM22                                    /* vt6
*     MOVE 'Card processing.' TO #AD-FF-15                                /* PM22                                    /* vt6
*   ELSE                                                                  /* PM22                                    /* vt6
*     COMPRESS #AD-FF-14 'return this form and notice with your'          /* PM22                                    /* vt6
*       INTO #AD-FF-14                                                    /* PM22                                    /* vt6
  MOVE 'proper crediting. You may also use the AAFMAA Member Center today at'          TO #AD-FF-15                       /* vt6
  move 'https://connect.aafmaa.com/ to enter a new credit card and make a payment.'            to #ad-ff-16    /* vt6
  move 'If you do, please contact Policy Services at policyservices@aafmaa.com or'  to #ad-ff-17                           /* vt6
  move 'call 1-800-336-4538 to re-establish your recurring payments.'                 to #ad-ff-18   /* vt6
*  END-IF                                                                /* PM22            /* vt6
*
*  COMPRESS 'processing was not accepted for the following reason:'     /* PM22
*       #CC-REJ        INTO #AD-FF-13                                   /* PM22
*  COMPRESS 'Enclosed is a Credit Card Authorization Form for you to'   /* PM22
*   'complete. Please' INTO #AD-FF-14                                   /* PM22
*  IF #HOLD-PREM = 0                                                    /* PM22
*    COMPRESS 'return enclosed form to resume Credit Card processing.'  /* PM22
*     INTO #AD-FF-15                                                    /* PM22
*  ELSE                                                                 /* PM22
*    COMPRESS 'return this form and notice with your remittance to'     /* PM22
*     'insure proper crediting.' INTO #AD-FF-15                         /* PM22
*  END-IF                                                               /* PM22                                   /* vt6
*
  IF #TOT-CIP NE 0
    MOVE EDITED #TOT-CIP (EM=ZZ,ZZZ.99) TO #TOT-CIP-X
    MOVE LEFT #TOT-CIP-X TO #TOT-CIP-X
    COMPRESS 'Your Monthly Loan Payment is $'
      #TOT-CIP-X '.'   INTO #AD-FF-19 LEAVING NO                          /* vt6 was #ad-ff-16
* ELSE
*   MOVE 'This payment is for premiums and/or dues.'  TO #AD-FF-16
  END-IF
ELSE
  COMPRESS 'Please return this notice with your remittance to insure'
    'proper crediting.'  INTO #AD-FF-12
*
  IF #CAP-LOAN NE 0                            /* DW21
    MOVE 'This payment is for premiums and CAP Loan balance.' TO #AD-FF-13
    COMPRESS 'As stated in your agreement this must be paid by an automatic monthly'
      'payment.' INTO #AD-FF-14
    COMPRESS 'If payment is not received within 30 days of the Due Date, the'
      'CAP Loan'   INTO #AD-FF-15
    MOVE 'balance will be forwarded to a collections agency.' TO #AD-FF-16
  ELSE
    MOVE 'This payment is for premiums and/or dues. You may also use the AAFMAA Member'   TO #AD-FF-13  /* vt6 10/06/2016
    move 'Center today at https://connect.aafmaa.com/ to enter a new credit card and'     to #AD-FF-14  /* vt6 10/06/2016
    move 'make an immediate payment. If you do, Please contact Policy Services at'        to #ad-ff-15  /* vt6 10/06/2016
    move 'policyservices@aafmaa.com or call 1-800-336-4538 to re-establish your '         to #ad-ff-16  /* vt6 10/06/2016
    move 'recurring payments.'                                                            to #ad-ff-17  /* vt6 10/06/2016
  END-IF
END-IF
*
IF (#HOLD-PREM NE 0) OR NOT #PNX
  IF (#HOLD-MODE = ' ') AND (#TOT-CIP NE 0)
    MOVE 'Monthly loan Payment' TO #HOLD-MODE
*
    MOVE *DATN TO #HPTD-DATE
    ADD 1 TO #H-PTD-MM
    IF #H-PTD-MM > 12
      SUBTRACT 12 FROM #H-PTD-MM
      ADD 1 TO #H-PTD-CCYY
    END-IF
    COMPRESS '1' #MON-LIT(#H-PTD-MM) #H-PTD-CCYY INTO #HOLD-PTD-DATE
  ELSE
    COMPRESS 'For Period   -' #HOLD-PTD-DATE  #HOLD-PER-DATE
      INTO #AD-FF-22                                           /* vt6 was #ad-ff-19
  END-IF
*
  COMPRESS 'Due Date     -' #HOLD-PTD-DATE INTO #AD-FF-21     /* vt6 was #ad-ff-18
  COMPRESS 'Payment Type -' #HOLD-MODE INTO #AD-FF-20         /* vt6 was #ad-ff-17
  COMPRESS 'Amount due   - $' #HOLD-EDIT-PREM  INTO #AD-FF-23 /* vt6 was #ad-ff-20
*
  IF #CAP-LOAN NE 0                            /* DW21
    COMPRESS 'CAP Loan Balance - $' #CAP-LOAN-DISP  INTO #AD-FF-24 /* vt6 was #ad-ff-21
  END-IF
END-IF
*
PERFORM CORR-MSG-FORMAT
ASSIGN *CURS-LINE = 16
ASSIGN *CURS-COL = 24
END-SUBROUTINE /* (1230)
*
*******
DEFINE SUBROUTINE PIL-PROCESS
*******
*
PERFORM CALLNAT-CVALUSXX                              /* DW21
*
MOVE *DATN TO #HPTD-DATE
MOVE #H-PTD-MM TO #MON-X
*
MOVE 1 TO #AD-I
*
COMPRESS 'Listed below are the values of your life insurance as of'
  #H-PTD-DD #MON-LIT(#MON-X) #H-PTD-CCYY INTO #AD-TABLE (#AD-I)
COMPRESS #AD-TABLE (#AD-I) ':' INTO #AD-TABLE (#AD-I) LEAVING NO SPACE
ADD 1 TO #AD-I
*
IF #PILTEXT3 NE ' '   /* VT2
  IF #CGA-SCR-SUFFIX = 'PIL' OR = 'AVL'
    MOVE #PILTEXT3 TO #AD-TABLE (#AD-I)
    ADD 1 TO #AD-I
  END-IF
END-IF   /* vxt
* write 'after the heading' #ad-table(*) '=' #ad-i    /* vt1
*
MOVE TRUE TO #1ST-LINE
*
RESET #S-X
RESET #H-ACC-INT #H-ACC-INT-TOT #H-LOAN-AMT-TOT #H-LOAN-AMT-2-TOT #WL  /* PM26
*
FOR #SEG-I 1 TO 9
  IF PLAN (#SEG-I) = 'SO' OR = 'FSO'    /* DW6
    ESCAPE TOP
  END-IF
*
  IF PLAN (#SEG-I) = 'LT'  /* to reset possible lowered DB   /* DW2
      AND DEATH-BENEFIT (#SEG-I) NE 0 /* PM5
    MOVE DEATH-BENEFIT (#SEG-I) TO #DB (#SEG-I)
  END-IF
*
  IF PAY-STATUS (#SEG-I) = '43' OR= '73'  /* PULT - LTC settlement, NH        NG1
    RESET #CSV (#SEG-I) #CVALUE (#SEG-I) #LVALUE (#SEG-I) #DB (#SEG-I)
  END-IF
*
  IF #PROCESS-SEG (1) NE 0
    RESET #PROCESS
    FOR #I1 1 TO 9
      IF #PROCESS-SEG (#I1) = #SEG-I
        MOVE TRUE TO #PROCESS
        ESCAPE BOTTOM
      END-IF
    END-FOR
    IF NOT #PROCESS
      ESCAPE TOP
    END-IF
  END-IF
*
  IF CONV-DURATION (#SEG-I) = 999
    ADD #LOAN-BAL (#SEG-I) TO #CAP-LOAN
  END-IF
*
  ADD #LOAN-BAL   (#SEG-I) TO #H-LOAN-AMT-TOT           /**TT99
  ADD #ACC-INT    (#SEG-I) TO #H-ACC-INT-TOT
  ADD #LOAN-BAL-2 (#SEG-I) TO #H-LOAN-AMT-TOT
  ADD #ACC-INT-2  (#SEG-I) TO #H-ACC-INT-TOT
*
  IF  (ST-V.STATUS (#SEG-I) NE 'D')
      OR ((ST-V.ID-NUMBER = 59841)
      AND (ST-V.ISSUE-DATE (#SEG-I) = 19970903))
    ESCAPE TOP
  END-IF
*
  #TERM := FUNCTION-TERM-POLICY (<PLAN (#SEG-I)>)   /* PM26
  IF NOT #TERM                                      /* PM26
    #WL := TRUE                                     /* PM26
  END-IF                                            /* PM26
*
  IF PAY-STATUS (#SEG-I) LT '40'
    ADD #ANN-PREMIUM (#SEG-I) TO #TOT-ANN-PREM
  END-IF
*
  MOVE ST-V.FACE-AMOUNT (#SEG-I) TO #HOLD-AMOUNT              /**TT99
  MOVE EDITED #HOLD-AMOUNT (EM=Z,ZZZ,ZZ9.99) TO #PIL-FACE
  MOVE 0 TO #HOLD-AMOUNT
  ADD FACE-AMOUNT (#SEG-I) TO #TOTAL-FACE
  MOVE ST-V.ISSUE-DATE (#SEG-I) TO #YYYYMMDD
*
  RESET #PIL-CV-AST #PIL-DB-AST
  RESET #AVL-TDIV #PIL-CV-AST #PIL-DB-AST
  IF   (ISSUE-DATE (#SEG-I) GE 19970101)
      AND (MONTH-ALLOC-AMT (#SEG-I) NE 999.99)
    COMPUTE #AVL-TDIV = BEG-CASH-VALUE(#SEG-I)
      - MONTH-ALLOC-AMT(#SEG-I)
    IF #AVL-TDIV GT 0
      MOVE '*' TO #PIL-CV-AST #PIL-DB-AST
      MOVE TRUE TO #TDIV-L
    END-IF
  END-IF
*
  MOVE EDITED #DB (#SEG-I) (EM=Z,ZZZ,ZZ9.99) TO #PIL-DEATH
  ADD #DB (#SEG-I) TO #TOTAL-DEATH-BENEFIT
*
  MOVE EDITED #CSV    (#SEG-I) (EM=-Z,ZZZ,ZZ9.99) TO #PIL-CV
  MOVE EDITED #LVALUE (#SEG-I) (EM=-Z,ZZZ,ZZ9.99) TO #PIL-LOAN-VAL
  ADD #CSV     (#SEG-I) TO #TOTAL-CV
  ADD #LVALUE  (#SEG-I) TO #TOTAL-LOAN-VAL

*
  CALLNAT 'GPLNMSXX' #PIL-POL-NUM ST-V.ID-NUMBER #SEG-I
*
  IF #1ST-LINE
    RESET #1ST-LINE
    COMPRESS '$' #PIL-FACE     INTO #PIL-FACE     LEAVING NO
    COMPRESS '$' #PIL-CV       INTO #PIL-CV       LEAVING NO
    COMPRESS '$' #PIL-LOAN-VAL INTO #PIL-LOAN-VAL LEAVING NO
    COMPRESS '$' #PIL-DEATH    INTO #PIL-DEATH    LEAVING NO
  END-IF
*
  MOVE RIGHT #PIL-FACE     TO #PIL-FACE
  MOVE RIGHT #PIL-CV       TO #PIL-CV
  MOVE RIGHT #PIL-LOAN-VAL TO #PIL-LOAN-VAL
  MOVE RIGHT #PIL-DEATH    TO #PIL-DEATH
*
  IF #PILTEXT4 NE ' '     /* vxt
    IF #CGA-SCR-SUFFIX = 'PIL' OR = 'AVL'
      MOVE #PILTEXT4 TO #AD-TABLE (#AD-I)
      ADD 1 TO #AD-I
    END-IF
  END-IF     /* vxt
END-FOR
*
*    write 'after the policis were found' '=' #ad-i   '=' #pil-cv-ast '=' #pil-db-ast '='
*   '=' #ad-table(*) /
* #ineligible   /
*
* #ad-table(*)          /* vt1
*
RESET #PIL-CV-AST #PIL-DB-AST
IF #AD-I GE 8
  MOVE TRUE TO #USE-2ND                     /*tt1 checking these values
ELSE
  IF NOT #INELIGIBLE AND #AD-I GE 6                          /* PM4 PM24   vxt
    MOVE TRUE TO #USE-2ND                  /*tt1 checking these values
  END-IF
END-IF
*
IF (#H-LOAN-AMT-TOT NE 0) OR (#H-LOAN-AMT-2-TOT NE 0)
    OR (#CAP-LOAN NE 0)
  IF   (INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q')
      AND (#CAP-LOAN NE 0)
      AND (#H-LOAN-AMT-TOT = 0)
    MOVE 'Less current loan(s) **' TO #PILTEXT5-A
    RESET #HOLD-AMOUNT
  ELSE
    MOVE 'Less current loan(s)' TO #PILTEXT5-A
    COMPUTE #HOLD-AMOUNT = #H-LOAN-AMT-TOT + #H-LOAN-AMT-2-TOT
  END-IF
*
  MOVE EDITED #HOLD-AMOUNT (EM=Z,ZZZ,ZZ9.99) TO #PIL-CUR-LOAN-DEATH       /*TT1 ADDED MILLIONS PLACE ,
  SUBTRACT #HOLD-AMOUNT FROM #TOTAL-DEATH-BENEFIT
  MOVE '-' TO #PIL-CLD-SIGN
  IF #WL                                             /* PM26
    MOVE EDITED #HOLD-AMOUNT (EM=Z,ZZZ,ZZ9.99) TO #PIL-CUR-LOAN-CV         /*tt1
    MOVE EDITED #HOLD-AMOUNT (EM=Z,ZZZ,ZZ9.99) TO #PIL-CUR-LOAN-LV
    SUBTRACT #HOLD-AMOUNT FROM #TOTAL-LOAN-VAL
    SUBTRACT #HOLD-AMOUNT FROM #TOTAL-CV
    MOVE '-' TO #PIL-CLCV-SIGN
    MOVE '-' TO #PIL-CLLV-SIGN
  END-IF                                             /* PM26
*
  IF #PILTEXT5 NE ' '     /* VXT
    IF #CGA-SCR-SUFFIX = 'PIL' OR = 'AVL'
      IF #USE-2ND
        ADD 1 TO #S-X
        MOVE #PILTEXT5 TO #VS-TEXT (#S-X)
      ELSE
        MOVE #PILTEXT5 TO #AD-TABLE(#AD-I)
        ADD 1 TO #AD-I
      END-IF
    END-IF
  END-IF                  /* VXT
END-IF
*
* write #ad-table(#ad-I) '=' #ad-i    /* vt1
IF #H-ACC-INT-TOT NE 0
  MOVE 'Less current interest #' TO #PILTEXT5-A
  MOVE #H-ACC-INT-TOT TO #HOLD-AMOUNT
  MOVE EDITED #HOLD-AMOUNT (EM=Z,ZZZ,ZZ9.99) TO #PIL-CUR-LOAN-DEATH       /*TT1 ADDED MILLION ,
  SUBTRACT #HOLD-AMOUNT FROM #TOTAL-DEATH-BENEFIT
  IF #H-ACC-INT-TOT LT 0
    MOVE '+' TO #PIL-CLD-SIGN
  ELSE
    MOVE '-' TO #PIL-CLD-SIGN
  END-IF

  IF #WL                                              /* PM26
    MOVE EDITED #HOLD-AMOUNT (EM=Z,ZZZ,ZZ9.99) TO #PIL-CUR-LOAN-CV         /*TT1 ADDED MILLION ,
    MOVE EDITED #HOLD-AMOUNT (EM=Z,ZZZ,ZZ9.99) TO #PIL-CUR-LOAN-LV         /*TT1 ADDED MILLION ,
    SUBTRACT #HOLD-AMOUNT FROM #TOTAL-LOAN-VAL
    SUBTRACT #HOLD-AMOUNT FROM #TOTAL-CV
    IF #H-ACC-INT-TOT LT 0
      MOVE '+' TO #PIL-CLCV-SIGN
      MOVE '+' TO #PIL-CLLV-SIGN
    ELSE
      MOVE '-' TO #PIL-CLCV-SIGN
      MOVE '-' TO #PIL-CLLV-SIGN
    END-IF
  END-IF                                              /* PM26
*
  IF #PILTEXT5 NE ' '    /* VXT
    IF #CGA-SCR-SUFFIX = 'PIL' OR = 'AVL'
      IF #USE-2ND
        ADD 1 TO #S-X
        MOVE #PILTEXT5 TO #VS-TEXT (#S-X)
      ELSE
        MOVE #PILTEXT5 TO #AD-TABLE(#AD-I)
        ADD 1 TO #AD-I
      END-IF
    END-IF
  END-IF         /* VXT
END-IF
*
* write #ad-table(#ad-I) '=' #ad-i    /* vt1
RESET #PIL-POL-NUM
MOVE '--------------'  TO #PIL-FACE
MOVE '--------------' TO #PIL-CV
MOVE '--------------' TO #PIL-LOAN-VAL
MOVE '--------------' TO #PIL-DEATH
*
IF #PILTEXT4 NE ' '     /* VXT
  IF #CGA-SCR-SUFFIX = 'PIL' OR = 'AVL'
    IF #USE-2ND
      ADD 1 TO #S-X
      MOVE #PILTEXT4 TO #VS-TEXT (#S-X)
    ELSE
      MOVE #PILTEXT4 TO #AD-TABLE (#AD-I)
    END-IF
    ADD 1 TO #AD-I
  END-IF
END-IF              /* VXT
*
* write #ad-table(#ad-I) '=' #ad-i    /* vt1
MOVE ' TOTALS:' TO #PIL-POL-NUM
MOVE EDITED #TOTAL-FACE         (EM=Z,ZZZ,ZZ9.99)  TO #PIL-FACE                 /* TT1 BEGIN
MOVE EDITED #TOTAL-CV           (EM=-Z,ZZZ,ZZ9.99) TO #PIL-CV
MOVE EDITED #TOTAL-LOAN-VAL     (EM=-Z,ZZZ,ZZ9.99) TO #PIL-LOAN-VAL
MOVE EDITED #TOTAL-DEATH-BENEFIT(EM=Z,ZZZ,ZZ9.99) TO #PIL-DEATH                 /* TT1 END
COMPRESS '$' #PIL-FACE     INTO #PIL-FACE     LEAVING NO
COMPRESS '$' #PIL-CV       INTO #PIL-CV       LEAVING NO
COMPRESS '$' #PIL-LOAN-VAL INTO #PIL-LOAN-VAL LEAVING NO
COMPRESS ' $' #PIL-DEATH    INTO #PIL-DEATH    LEAVING NO                    /**TT1 ADDED SPACE FOR SPACING
MOVE RIGHT #PIL-FACE     TO #PIL-FACE
MOVE RIGHT #PIL-CV       TO #PIL-CV
MOVE RIGHT #PIL-LOAN-VAL TO #PIL-LOAN-VAL
*
IF #PILTEXT4 NE ' '    /* VXT
  IF #CGA-SCR-SUFFIX = 'PIL' OR = 'AVL'
    IF #USE-2ND
      ADD 1 TO #S-X
      MOVE #PILTEXT4 TO #VS-TEXT (#S-X)
    ELSE
      MOVE #PILTEXT4 TO #AD-TABLE(#AD-I)
    END-IF
  END-IF     /* VXT
*
* write #ad-table(#ad-I) '=' #ad-i    /* vt1
  IF #TDIV-L
    IF #USE-2ND
      ADD 1 TO #S-X
      MOVE '* Includes Termination Dividend' TO #VS-TEXT (#S-X)
    ELSE
      ADD 1 TO #AD-I
      MOVE '* Includes Termination Dividend' TO #AD-TABLE (#AD-I)
    END-IF
  END-IF
*  write #ad-table(#ad-I) '=' #ad-i    /* vt1
*
* IF   (INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q') /* rmv 09022004
*  AND (#CAP-LOAN NE 0)                              /* per ALB
*   ADD 1 TO #AD-I
*   MOVE '** CAP loans are excluded from this line' TO #AD-TABLE(#AD-I)
* END-IF
*
  ADD 1 TO #AD-I
*
  IF #H-ACC-INT-TOT GT 0
    COMPRESS '#Int as of' #DATX '-Int accrues daily and compounds'
      'annually if not paid.' INTO #WORK-78
    IF #USE-2ND
      ADD 1 TO #S-X
      MOVE #WORK-78 TO #VS-TEXT (#S-X)
    ELSE
      MOVE #WORK-78 TO #AD-TABLE (#AD-I)
    END-IF
  ELSE
    IF #H-ACC-INT-TOT LT 0
      COMPRESS '#Int credit as of' #DATX INTO #WORK-78
      IF #USE-2ND
        ADD 1 TO #S-X
        MOVE #WORK-78 TO #VS-TEXT (#S-X)
      ELSE
        MOVE #WORK-78 TO #AD-TABLE(#AD-I)
      END-IF
    END-IF
  END-IF
END-IF
*
* write #ad-table(#ad-I) '=' #ad-i    /* vt1
IF (#CGA-SCR-SUFFIX = 'AVL') AND (#AD-I LT 13)
  ADD 1 TO #AD-I
*
  IF #TOTAL-LOAN-VAL GT 0
    MOVE EDITED #TOTAL-LOAN-VAL (EM=-Z,ZZZ,ZZ9) TO #PIL-LOAN-VAL      /* vt7 was EM=-zzz,zz9 
    COMPRESS 'Current available loan value is approximately $'
      #PIL-LOAN-VAL INTO #AD-TABLE(#AD-I) LEAVING NO
  ELSE
    MOVE 'There is no current available loan value' TO #AD-TABLE(#AD-I)
  END-IF
END-IF
*
IF NOT #INELIGIBLE /* PM4
  IF #W-INELIGIBLE
    MOVE 'You have the maximum available coverage.' TO #WORK-78
  ELSE
    COMPRESS 'You may apply for $' #REM-FACE-DISP ' additional whole'     /* TT1
      ' life insurance.' INTO #WORK-78 LEAVING NO
    IF #USE-2ND
      ADD 1 TO #S-X
      MOVE #WORK-78 TO #VS-TEXT (#S-X)
    ELSE
      ADD 1 TO #AD-I
      MOVE #WORK-78 TO #AD-TABLE (#AD-I)
    END-IF
*
* write #ad-table(#ad-I) '=' #ad-i    /* vt1
    IF #T-INELIGIBLE
      COMPRESS 'You are not '-
        'eligible for any additional term life'
        'insurance.' INTO #WORK-78
    ELSE
      COMPRESS 'You may apply for $' #REM-FACE-DISP-TM ' additional'
        ' term life insurance.' INTO #WORK-78 LEAVING NO
    END-IF
*
    IF #USE-2ND
      ADD 1 TO #S-X
      MOVE #WORK-78 TO #VS-TEXT (#S-X)
    ELSE
      ADD 1 TO #AD-I
      MOVE #WORK-78 TO #AD-TABLE (#AD-I)
    END-IF
*
* write #ad-table(#ad-I) '=' #ad-i    /* vt1
    MOVE 'Total insurance coverage can"t exceed $1,000,000' TO #WORK-78
    IF #USE-2ND
      ADD 1 TO #S-X
      MOVE #WORK-78 TO #VS-TEXT (#S-X)
    ELSE
      ADD 1 TO #AD-I
      MOVE #WORK-78 TO #AD-TABLE (#AD-I)    /*TT1 ARRAY OUT OF BOUNDS (#AD-I = 14)
    END-IF
  END-IF
END-IF
*
* write #ad-table(#ad-I) '=' #ad-i    /* vt1
IF   (NOT #INELIGIBLE)
    AND (*DEVICE = 'BATCH')
  COMPRESS #WORK-78 'Complete & return the attached' INTO #WORK-78
  IF #USE-2ND
    MOVE #WORK-78 TO #VS-TEXT (#S-X)
  ELSE
    MOVE #WORK-78 TO #AD-TABLE (#AD-I)
  END-IF
*
* write #ad-table(#ad-I) '=' #ad-i    /* vt1
  MOVE 'application for additional coverage.' TO #WORK-78
  ADD 1 TO #AD-I
  IF #USE-2ND
    ADD 1 TO #S-X
    MOVE #WORK-78 TO #VS-TEXT (#S-X)
  ELSE
    MOVE #WORK-78 TO #AD-TABLE (#AD-I)
  END-IF
END-IF
*
* write #ad-table(#ad-I) '=' #ad-i    /* vt1
IF #CGA-SCR-SUFFIX NE 'AVL'
  PERFORM CORR-MSG-FORMAT
END-IF
*
END-SUBROUTINE
*
* * * * * * *
DEFINE SUBROUTINE FIR-PROCESS
* * * * * * *
*
IF #CGA-ORIG-COMMAND NE 'AD'
  ESCAPE ROUTINE
END-IF
*
MOVE ALL 'N' TO #AD-TEXT-INDS   /* TM3
MOVE TRUE TO #CGA-GOOD-TAS-VS
*
IF   (*DEVICE = 'BATCH')
    AND (#DOB-MM =  #CURR-MM)      /* TT2
    AND (#DOB-DD GT #CURR-DD)      /* TT2
  MOVE #DOB-DD TO #CURR-DD         /* TT2
END-IF
*
COMPRESS #CURR-DD #MON-LIT(#CURR-MM) #CURR-YYYY INTO #DATE-DISP WITH '-'
RESET #AD-I
*
IF ST-V.WIDOW-FLAG = 'Y'       /* TM3
  MOVE 'Y' TO #AD-TEXT-IND (5)
END-IF
*
IF NUMBER-MEMBERSHIPS = 0
  ESCAPE ROUTINE
END-IF
*

*
IF #AD-I LT 12
  ADD 5 TO #AD-I    /* bz6
*   below text is also in form G3501FAD for Widow Ann Firs
  COMPRESS '  To protect your privacy, social security numbers' /* DW18
    'are no longer displayed' INTO #AD-TABLE (#AD-I)
  ADD 1 TO #AD-I
  COMPRESS 'on your printout (SSNs continue to be maintained in the'
    'data base).'   INTO #AD-TABLE (#AD-I)
END-IF
*
* AAFMAA changeable message below *
ADD 1 TO #AD-I                                                 /* bz4  bz6 begin
*   below text is also in form G3501FAD for Widow Ann Firs  /* DW18
COMPRESS "AAFMAA FINANCIAL ADVISORS' MISSION IS TO PROVIDE AAFMAA"
  'members superior'  INTO #AD-TABLE (#AD-I)
ADD 1 TO #AD-I
MOVE 'services along with the peace of mind knowing that their privacy is secure.'
  TO #AD-TABLE (#AD-I)
ADD 1 TO #AD-I
MOVE 'We are fully committed to keeping personal and financial information'
  TO #AD-TABLE (#AD-I)
ADD 1 TO #AD-I
MOVE 'confidential and secure at all times.' TO #AD-TABLE (#AD-I)
ADD 1 TO #AD-I
MOVE 'We value the trust members place in us when they provide their information.'  /* DW18
  TO #AD-TABLE (#AD-I)

RESET #S-X /* switch to #vs-text table

ADD 1 TO #S-X
MOVE "FOR MORE INFORMATION ON THE AAFMAA'S PRIVACY POLICY PLEASE VISIT OUR WEBSITE"
  TO #VS-TEXT (#S-X)
ADD 1 TO #S-X
MOVE 'at www.aafmaaFinancial.com or contact us at 1-888-707-1850 for a printed copy.'
  TO #VS-TEXT (#S-X)
IF MILITARY-STATUS NE 'A'   /* DW17
  MOVE 'Y' TO #AD-TEXT-IND (2)      /* TM3
  ADD 2 TO #S-X     /* DW17
  MOVE 'This report now shows your VA Compensation Amount which is based on'
    TO #VS-TEXT (#S-X)
  ADD 1 TO #S-X
  MOVE 'information you have provided. If this is not the exact amount of your'
    TO #VS-TEXT (#S-X)
  ADD 1 TO #S-X
  MOVE 'VA Compensation, please contact AAFMAA Financial Advisors so we may update'
    TO #VS-TEXT(#S-X)
  ADD 1 TO #S-X
  MOVE 'your record.'
    TO #VS-TEXT(#S-X)

END-IF
*
*  End of AAFMAA changeable message **
*
RESET #ACC-FORM
*
IF   (SPS-CSRS-IND = 'C')
    AND ((SPS-ANN-RET-ELIG-DT = 0)
    OR  (SPS-ANN-RET-ELIG-DT GE 19830701))
    AND (SPS-GOVT-ANNUITY = 0)
  MOVE 'Y' TO #AD-TEXT-IND (3)      /* TM3
  ADD 2 TO #S-X
  COMPRESS '  The values listed on your Family Income Summary do no'
    't reflect the public' INTO #VS-TEXT (#S-X) LEAVING NO
  ADD 1 TO #S-X
  COMPRESS 'pension offset to  your spouse"s  Social Security.  Ple'
    'ase report to us the' INTO #VS-TEXT (#S-X) LEAVING NO
  ADD 1 TO #S-X
  COMPRESS  'value of his/her annuity if/when it is available: ?'
    '$____________'   INTO #VS-TEXT (#S-X)
END-IF
*
IF #CGA-SECURITY-CODE NE MASK ('7') /* ONLY  IF NOT A RQST M-OT
  MOVE ACTIVE-DUTY-BASE-DATE TO #BASD
  IF #BASD = 0
    MOVE BASE-PAY-EF-DATE TO #BASD
  END-IF
*
  IF #BASD = 0
    MOVE SERVICE-DATE-1405 TO #BASD
  END-IF
*
  IF    (MILITARY-STATUS = 'A')
      AND (MILITARY-SERVICE = 'A' OR = 'F')
      AND ((#BASD + 200000) LE *DATN)   /* at least 20 years of service
      AND (#BASD NE 0)         /* BASD must exist         /* DW22
      AND (#DATE-OF-BIRTH-SP NE 0)     /* sps must exist            /* TT2
      AND (NOT STATUS-CODE-SP = 'D' OR = 'F')
    MOVE 'Y' TO #AD-TEXT-IND (4)      /* TM3
    ADD 2 TO #S-X
    COMPRESS '  Since our records indicate you are eligible to retir'
      'e for length of service,' INTO #VS-TEXT(#S-X) LEAVING NO
    ADD 1 TO #S-X
    COMPRESS 'the last page of this printout now includes general co'
      'st information about   ' INTO #VS-TEXT(#S-X) LEAVING NO
    ADD 1 TO #S-X
    COMPRESS 'SBP for your consideration. Call if you have any '
      ' questions.'              INTO #VS-TEXT(#S-X) LEAVING NO
  END-IF
END-IF
*
END-SUBROUTINE
* * * * * * * * * * *
DEFINE SUBROUTINE CALLNAT-CVALUSXX   /* DW21
* * * * * * * * * * * *
*
MOVE *DATN TO #AS-OF-DT
MOVE 'NTP' TO #SUFFIX /* do not replace w tpp
MOVE FACE-AMOUNT (*) TO #FACE-AMT (*)
CALLNAT 'CVALUSXX'
  ST-V.ID-NUMBER
  #SUFFIX
  #AS-OF-DT
  #LOAN-BAL   (1:9)
  #LOAN-BAL-2 (1:9)
  #ACC-INT    (1:9)
  #ACC-INT-2  (1:9)
  #CSV        (1:9)
  #CVALUE     (1:9)
  #LVALUE     (1:9)
  #MCSV       (1:9)
  #DB         (1:9)
  #ANN-PREMIUM  (1:9)
  #FACE-AMT    (1:9)     /* DW9
  #TPP         (1:9)     /* DW9
*
END-SUBROUTINE
* * * * *
DEFINE SUBROUTINE FETCH-G35X0PAD
* * * * *
*
IF #CGA-SCR-SUFFIX = 'PUL'   /* paid-up thank you letter
    OR = 'PUP' OR = 'PUM' OR = 'OLD'   /* removed 4/23/2002 khb
*    FETCH RETURN 'G3520PAD' #ID-NUM #NAME ST-V.SSN #LAST-NAME                         /* vt3
  FETCH RETURN 'G3520PAD' #ID-NUM #EXT-NAME ST-V.SSN #LAST-NAME                     /* vt3
*      #RANK-5 ST-V.DEBIT-CREDIT-AMT ST-V.ALOT-AMT                                     /* vt3
    #MEMO-TO-NAME ST-V.DEBIT-CREDIT-AMT ST-V.ALOT-AMT                               /* vt3
    #EXT-FORMATED-NAME #FIRST-ADDRESS #SECOND-ADDRESS                                /* vt3
*      #FORMATED-NAME #FIRST-ADDRESS #SECOND-ADDRESS
    #THIRD-ADDRESS #MIL-STATUS #MIL-SERVICE
    #MODE #PAID-TO-DATE #CURR-LOAN
    #CURR-LOAN-2 ST-V.RESTRICT-MBR-SW
    ST-V.SUSPEND-CODE #EDS-ZIP-BAR-CODE #AD-FF-3 #PASSED-AMT
    #EXT-DEAR-FORMATED-NAME #AD-ADDR-MSG (1:3) ST-V.INTRO-FLAG                       /* vt3
ELSE
  IF #CGA-SCR-SUFFIX = 'DAT' OR = 'DTO'
    MOVE 'G3512PAD' TO #PROG
  ELSE
    IF #CGA-SCR-SUFFIX = 'GFT' OR = 'RPU' OR = 'VLT'
        OR = 'LPS' OR = 'LPL' OR = 'BAL' OR = 'DTH' OR = 'RD'
        OR = 'LPF' OR = 'LPV' OR = 'LPB' OR = 'CLP' OR = 'RQ'
        OR = 'RDD' OR = 'RDP' OR = 'DFL'
      MOVE 'G3511PAD' TO #PROG
    ELSE
      MOVE 'G3510PAD' TO #PROG
    END-IF
  END-IF
*
*    FETCH RETURN #PROG  #ID-NUM #NAME ST-V.SSN #LAST-NAME                      /* vt3
  FETCH RETURN #PROG #ID-NUM #EXT-NAME #PDA-AREA-G3500AAD.#SSN #LAST-NAME       /* vt3      /* TT4
*      #RANK-5 ST-V.DEBIT-CREDIT-AMT ST-V.ALOT-AMT                              /* vt3
    #MEMO-TO-NAME ST-V.DEBIT-CREDIT-AMT ST-V.ALOT-AMT                        /* vt3
*      #FORMATED-NAME #FIRST-ADDRESS #SECOND-ADDRESS                            /* vt3
    #EXT-FORMATED-NAME #FIRST-ADDRESS #SECOND-ADDRESS                        /* vt3
    #THIRD-ADDRESS #MIL-STATUS #MIL-SERVICE
    #MODE #PAID-TO-DATE #CURR-LOAN
    #CURR-LOAN-2 ST-V.RESTRICT-MBR-SW
    ST-V.SUSPEND-CODE #EDS-ZIP-BAR-CODE
    #AD-FF-3 #PASSED-AMT ST-V.TERM-PREM-REF-DUE ST-V.TERM-DEBIT-CREDIT
    #ISSUE-DATE #EXT-DEAR-FORMATED-NAME #AD-ADDR-MSG (1:3)                       /* vt3
    #DATE-OF-BIRTH-SP ST-V.DATE-OF-MARRIAGE ST-V.DATE-OF-DEATH               /* TT2
    ST-V.SSN-SP ST-V.WIDOW-FLAG NUMBER-MEMBERSHIPS
    #TOT-CURR-DB #CURR-LOAN-INT #HOLD-LPO-INT
END-IF
*
END-SUBROUTINE  /* (2155)
*
* * * * *
DEFINE SUBROUTINE CALC-DUES
* * * * *
*
FOR #I1 1 TO 9  /* find 1st act pol
  IF STATUS (#I1) = 'D'
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF #I1 GT 9
  MOVE 1 TO #I1
END-IF
*
IF   (ISSUE-DATE (#I1) GE 19970101)
    AND (MONTH-ALLOC-AMT (#I1) NE 999.99)
    AND (NOT INTRO-FLAG = 'S' OR = 'K' OR ='G'
    OR = 'O' OR = 'P' OR ='Q')
    AND (DUES-ALL-PAID-IND NE 'Y')
    AND (STATUS (#I1) = 'D')
  MOVE PLAN (#I1) TO #ST-V-PLAN
*
  DECIDE ON FIRST VALUE #ST-V-PLAN-A2
    VALUE 'OL' ADD #SVC-FEE-OL TO #PASSED-AMT
*   VALUE 'RT' ADD #SVC-FEE-TM TO #PASSED-AMT
*   VALUE 'LT' ADD #SVC-FEE-TM TO #PASSED-AMT
    VALUE '2P' ADD #SVC-FEE-2P TO #PASSED-AMT
    VALUE '3P' ADD #SVC-FEE-3P TO #PASSED-AMT
    VALUE '4P' ADD #SVC-FEE-4P TO #PASSED-AMT
    VALUE '5P' ADD #SVC-FEE-5P TO #PASSED-AMT
    VALUE '6P' ADD #SVC-FEE-6P TO #PASSED-AMT
    VALUE '7P' ADD #SVC-FEE-7P TO #PASSED-AMT
    VALUE '8P' ADD #SVC-FEE-7P TO #PASSED-AMT
    VALUE '9P' ADD #SVC-FEE-7P TO #PASSED-AMT
    NONE   IGNORE
  END-DECIDE
*
* IF (#ST-V-PLAN-A1 GE 'U') AND (#ST-V-PLAN-A1 LE 'Z')     /* YK3
  IF FUNCTION-TERM-POLICY(<#ST-V-PLAN>)                    /* YK3
    MOVE #SVC-FEE-TM TO #PASSED-AMT
  END-IF
*
  IF #ST-V-PLAN-A2 = MASK (NN)
    IF #ST-V-PLAN-N2 LE 19 ADD #SVC-FEE-10 TO #PASSED-AMT ELSE
      IF #ST-V-PLAN-N2 LE 29 ADD #SVC-FEE-20 TO #PASSED-AMT ELSE
        IF #ST-V-PLAN-N2 LE 34 ADD #SVC-FEE-30 TO #PASSED-AMT ELSE
          ADD #SVC-FEE-OL TO #PASSED-AMT
        END-IF END-IF END-IF
  END-IF
END-IF
*
END-SUBROUTINE
*
* * * * * * *
DEFINE SUBROUTINE CALC-DB
* * * * * * *
*
FOR #I1 = 1 TO 9
  IF ST-V.STATUS (#I1) NE 'D'
    ESCAPE TOP
  END-IF
*
  MOVE #DB (#I1) TO #CURR-DB-DOL
  MOVE #DB (#I1) TO #CURR-DB
*
  ADD #CURR-DB-DOL TO #VS-CURR-DEATH-BEN
  ADD #CURR-DB     TO #TOT-CURR-DB
END-FOR  /* (2258)
*
END-SUBROUTINE
*
* * * * * * * *
DEFINE SUBROUTINE CALC-LOAN-INT
* * * * * * * *
*
FOR #I1 1 TO 9
  IF OWNERSHIP-FLAG (#I1) NE ' '
    ESCAPE TOP
  END-IF
*
  ADD #LOAN-BAL (#I1)  TO #CURR-LOAN
  ADD #ACC-INT  (#I1)  TO #CURR-INT
  ADD #LOAN-BAL (#I1)  TO #VS-CURR-LOAN
  ADD #LOAN-BAL (#I1)  TO #CURR-LOAN-INT
  ADD #ACC-INT  (#I1)  TO #VS-CURR-LOAN
  ADD #ACC-INT  (#I1)  TO #CURR-LOAN-INT
*
  IF #SCR-SUFFIX-3 NE 'V'
    ADD #ACC-INT (#I1) TO #HOLD-LPO-INT
  END-IF
*
  ADD #LOAN-BAL-2 (#I1)  TO #CURR-LOAN-2
  ADD #ACC-INT-2  (#I1)  TO #CURR-INT-2
  ADD #LOAN-BAL-2 (#I1)  TO #VS-CURR-LOAN
  ADD #LOAN-BAL-2 (#I1)  TO #CURR-LOAN-INT
  ADD #ACC-INT-2  (#I1)  TO #VS-CURR-LOAN
  ADD #ACC-INT-2  (#I1)  TO #CURR-LOAN-INT
END-FOR
*
END-SUBROUTINE
*
* * * * *
DEFINE CALC-PREMS-PAID-SETUP
* * * * *
RESET #PREMS-PAID
MOVE #DATE-OF-BIRTH           TO #PP-DATE-OF-BIRTH               /* TT2
MOVE ANNUAL-PREM (#SEG-I)    TO #PP-ANNUAL-PREM
MOVE PAY-STATUS (#SEG-I)     TO #PP-PAY-STATUS
MOVE TOT-PREMIUMS-PAID (#SEG-I) TO #PP-TOT-PREMIUMS-PAID
MOVE PAID-TO-DATE (#SEG-I)   TO #PP-PAID-TO-DATE
MOVE ISSUE-DATE (#SEG-I)     TO #PP-ISSUE-DATE
MOVE MODE (#SEG-I)           TO #PP-MODE
MOVE PLAN (#SEG-I)           TO #PP-PLAN
MOVE COST-BASIS (#SEG-I)     TO #PP-COST-BASIS
MOVE MONTH-ALLOC-AMT (#SEG-I) TO #PP-MONTH-ALLOC-AMT
MOVE INTRO-FLAG              TO #PP-INTRO-FLAG
MOVE X-FIRST-PLACE-FEE (#SEG-I) TO #PP-FIRST-PLACE-FEE
MOVE X-BILL-ADJUST     (#SEG-I) TO #PP-BADJ
*
CALLNAT 'GPRPDSCO'
  #PP-DATE-OF-BIRTH
  #PP-ANNUAL-PREM
  #PP-PAY-STATUS
  #PP-TOT-PREMIUMS-PAID
  #PP-PAID-TO-DATE
  #PP-ISSUE-DATE
  #PP-MODE
  #PP-PLAN
  #PP-COST-BASIS
  #PP-MONTH-ALLOC-AMT
  #PP-INTRO-FLAG
  #PP-FIRST-PLACE-FEE
  #PREMS-PAID
  #SUB-PREMS-PAID
  #PP-BADJ
END-SUBROUTINE
*
**********
DEFINE SUBROUTINE LOAD-BEN-LETTER
**********
*
MOVE 1 TO #I1
IF #SPS-GEN-ID NE 0
  COMPRESS 'RE: CN' #SPS-GEN-ID INTO #AD-LST-70 (#I1) LEAVING NO
ELSE
  COMPRESS 'RE: CN' #ID-NUM INTO #AD-LST-70 (#I1) LEAVING NO
END-IF
COMPRESS #AD-LST-70 (#I1)
  '- Beneficiary designation for policy issued 00/00/0000'
  INTO #AD-LST-70 (#I1)
*
ADD 2 TO #I1
MOVE #EXT-DEAR-FORMATED-NAME TO #AD-LST-70 (#I1)                               /* vt3
*
ADD 2 TO #I1
COMPRESS 'In reviewing the application for this coverage,'
  'we find the' INTO #AD-LST-70 (#I1)
*
ADD 1 TO #I1
MOVE 'beneficiary selection to be incomplete.'
  TO #AD-LST-70 (#I1)
*
ADD 2 TO #I1
COMPRESS 'We have included a blank beneficiary designation'
  'form that' INTO #AD-LST-70 (#I1)
*
ADD 1 TO #I1
MOVE 'requires your attention.  Please complete, sign, date and'
  TO #AD-LST-70 (#I1)
*
ADD 1 TO #I1
COMPRESS 'return in the enclosed postage paid envelope.'
  'Please do not' INTO #AD-LST-70 (#I1)
*
ADD 1 TO #I1
MOVE 'hesitate to contact us if you require assistance.'
  TO #AD-LST-70 (#I1)
*
MOVE TRUE TO #USE-3RD
PERFORM CORR-MSG-FORMAT
*
END-SUBROUTINE
*
*********************************
DEFINE SUBROUTINE LOAD-ADB-LETTER     /* YK5
*********************************
*
EXAMINE ST-V.PLAN(*) FOR 'EZ' NUMBER #I2
IF #I2 = 1
  EXAMINE ST-V.PLAN(*) FOR 'EZ' INDEX #I3
  #POL-SEG := #I3
ELSE
  PERFORM GET-POL-SEGMENT
END-IF
#I1 := 1
* Salutation
#AD-TABLE(#I1) := #EXT-DEAR-FORMATED-NAME
#I1 := #I1 + 2
#AD-TABLE(#I1) := 'In accordance with your request, we have approved the Accelerated Death'
#I1 := #I1 + 1
#DATE := FUNCTION-CALENDAR(<ST-V.ISSUE-DATE(#POL-SEG),'D'>)
COMPRESS #DATE '.' INTO #DATE LEAVING NO
COMPRESS 'Benefit request for the EZ-Term policy issued' #DATE INTO #AD-TABLE(#I1)
*
#I1 := #I1 + 2
#AD-TABLE(#I1) := 'This letter represents the completion of this action as defined in the policy'
#I1 := #I1 + 1
MOVE EDITED ST-V.DEATH-BENEFIT(#POL-SEG) (EM=ZZZ,ZZ9.99) TO #NEW-DB
#NEW-DB := *TRIM(#NEW-DB)
COMPRESS '$' #NEW-DB INTO #NEW-DB LEAVING NO
MOVE EDITED ST-V.ANNUAL-PREM(#POL-SEG) (EM=ZZZ,ZZ9.99) TO #NEW-ANN-PREM
#NEW-ANN-PREM := *TRIM(#NEW-ANN-PREM)
COMPRESS '$' #NEW-ANN-PREM '.' INTO #NEW-ANN-PREM LEAVING NO
COMPRESS 'contract. The adjusted death benefit is' #NEW-DB 'and the new annual premium' INTO #AD-TABLE(#I1)
#I1 := #I1 + 1
COMPRESS 'is' #NEW-ANN-PREM 'The current billing process will be adjusted accordingly.' INTO #AD-TABLE(#I1)
#I1 := #I1 + 2
#AD-TABLE(#I1) := 'Feel free to contact us should you have questions or concerns.'
PERFORM CORR-MSG-FORMAT
*
END-SUBROUTINE
*
*********************************
DEFINE SUBROUTINE LOAD-NHW-LETTER     /* YK5
*********************************
*
EXAMINE ST-V.PAY-STATUS(*) FOR '73' NUMBER #I2
IF #I2 = 1
  EXAMINE ST-V.PAY-STATUS(*) FOR '73' INDEX #I3
  #POL-SEG := #I3
ELSE
  PERFORM GET-POL-SEGMENT
END-IF
#I1 := 1
#AD-TABLE(#I1) := 'RE: Nursing Home Waiver'
#I1 := #I1 + 1
* Salutation
#AD-TABLE(#I1) := #EXT-DEAR-FORMATED-NAME
#I1 := #I1 + 2
#AD-TABLE(#I1) := 'We have received the paperwork required to approve and process the Nursing   '
#I1 := #I1 + 1
#DATE := FUNCTION-CALENDAR(<ST-V.ISSUE-DATE(#POL-SEG),'D'>)
COMPRESS #DATE '.' INTO #DATE LEAVING NO
COMPRESS 'Home Waiver option that is a part of the EZ-Term policy issued' #DATE INTO #AD-TABLE(#I1)
#I1 := #I1 + 1
#AD-TABLE(#I1) := 'As defined in the policy, if you are confined to a nursing home by your'
#I1 := #I1 + 1
#AD-TABLE(#I1) := 'physician for at least 180 days, the premiums for this policy will be waived.'
#I1 := #I1 + 1
#AD-TABLE(#I1) := 'Coverage will continue with no additional premiums due during your stay or up'
#I1 := #I1 + 1
#AD-TABLE(#I1) := 'to the termination of the policy (not later than age 80).'
#I1 := #I1 + 2
#AD-TABLE(#I1) := 'As always, if you have any questions, please do not hesitate to call us.'
*
PERFORM CORR-MSG-FORMAT
END-SUBROUTINE
*
**********************************
DEFINE SUBROUTINE GET-POL-SEGMENT     /* YK5
**********************************
*
EXAMINE ST-V.PLAN(*) FOR 'EZ' NUMBER #I2
DECIDE FOR FIRST CONDITION
  WHEN #I2 = 1
    EXAMINE ST-V.PLAN(*) FOR 'EZ' INDEX #I3
    #POL-SEG := #I3
  WHEN #I2 = 0
    RESET #CGA-SCR-SUFFIX #CGA-ORIG-SUFFIX
    #ERROR-MESSAGE := 'No EZ-Term policies - cannot create letter requested'
    INPUT TEXT #ERROR-MESSAGE USING MAP 'G1000MXX'
    FETCH 'G1000PXX'
  WHEN #I2 > 1
    #ID := ST-V.ID-NUMBER
    SET WINDOW 'USER-MESSAGE'
    REPEAT
      INPUT WINDOW = 'USER-MESSAGE' WITH TEXT #TEXT
        '   ***    Please, enter the policy number   ***   ' /
        #Pol-Number (AD=YLMFHT'_')                              /* YLMFHT
      IF #Pol-Number <> ' '
        #POL-SEG := F_POLICY_SEGMENT(<#Pol-Number,#ID-A>)
        IF #POL-SEG = 0
          #TEXT := 'Wrong Policy Number, Please try again...'
          ESCAPE TOP
        END-IF
      END-IF
      ESCAPE BOTTOM
    END-REPEAT
    SET WINDOW OFF
    ESCAPE ROUTINE
  WHEN NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
END
