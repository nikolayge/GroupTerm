* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* <Natural Source Header
/** New Subprogram LWSNPDJS.
/**
/** :author nguentchev
/** Generate JSon string based on Policy data structure
/**
DEFINE DATA
PARAMETER USING LWSAPD
PARAMETER
1 jSonString (A) DYNAMIC
LOCAL
1 BLANK    (A1) CONST <' '>
1 #TAGS    (I2) CONST <22>
1 JVALUES  (A/#TAGS) DYNAMIC
1 JTAGS    (A/#TAGS) DYNAMIC 

1 #D       (N8) 1 REDEFINE #D
  2 #YYYY  (A4)
  2 #MM    (A2)
  2 #DD    (A2)
1 J        (I2)
1 I        (I2)
1 AIND (A1/#TAGS)
1 D1       (A1) CONST <''''>
1 D2       (A2) CONST <''','>
END-DEFINE
/* 
RESET J JVALUES (*)
  JTAGS (*)

* JTAGS (1) :=  '''new_policynumber'':'; AIND(1) := 'Y'  /* "123456-1"
* JTAGS (2) :=  '''new_issuedate'':';    AIND(2) := 'Y'  /* "1989-05-14"
* JTAGS (3) :=  '''new_faceamount'':';   AIND(3) := 'N'  /* 101
* JTAGS (4) :=  '''new_premium'':';      AIND(4) := 'N'  /* 20
* JTAGS (5) :=  '''new_policyname'':';   AIND(5) := 'Y'  /* "Policy name"
* JTAGS (6) :=  '''new_totaldue'':';     AIND(6) := 'N'  /* 4.67
* JTAGS (7) :=  '''new_deathbenefit'':'; AIND(7) := 'N'  /* 1381.14
* JTAGS (8) :=  '''new_balance'':';      AIND(8) := 'N'  /* 1012.23
* JTAGS (9) :=  '''new_policyid'':';     AIND(9) := 'Y'  /* 106eee2d-9c0d-e711-80cb-005056a21fa2
* JTAGS (10) := '''new_iascontactid'':'; AIND(10) := 'Y' /* "250203"
* JTAGS (11) := '''new_issueage'':';          AIND(11) := 'N' /* 37
* JTAGS (12) := '''new_billingadjustment'':'; AIND(12) := 'N' /* 12.02
* JTAGS (13) :=  '''new_lastduration'':';     AIND(13) := 'N' /* 8
* JTAGS (14) :=  '''new_costbasis'':';        AIND(14) := 'N' /* 53
* JTAGS (15) :=  '''new_lastbilleddate'':';   AIND(15) := 'Y' /* "2016-10-12"
* JTAGS (16) :=  '''new_lastbilledamount'':'; AIND(18) := 'N' /* 89.01

ADD 1 TO J
JTAGS   (J) :=  '''new_policynumber'':'; 
AIND    (J) := 'Y'  /* "123456-1"
JVALUES (J) := Policy-Flat.PolicyNumber

ADD 1 TO J
JTAGS (J) :=  '''new_issuedate'':';    
AIND  (J) := 'Y'  /* "1989-05-14"
IF Policy-Flat.IssueDate > 0
  #D := Policy-Flat.IssueDate
  COMPRESS #YYYY #MM #DD INTO JVALUES (J)
    WITH DELIMITER '-'
END-IF 

ADD 1 TO J
JTAGS (J) :=  '''new_faceamount'':';   
AIND  (J) := 'N'  /* 101
IF FaceAmount > 0 
  MOVE EDITED FaceAmount (EM=Z(6)9.99) TO JVALUES (J)
END-IF

ADD 1 TO J  
JTAGS (J) :=  '''new_premium'':';     
AIND  (J) := 'N'  /* 20
IF Policy-Flat.Premium > 0 
  MOVE EDITED Policy-Flat.Premium (EM=Z(6)9.99) TO JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_policyname'':';   
AIND  (J) := 'Y'  /* "Policy name"
JVALUES (J) := Policy-Flat.PolicyName

ADD 1 TO J
JTAGS (J) :=  '''new_totaldue'':';     
AIND  (J) := 'N'  /* 4.67
IF Policy-Flat.TotalDue >= 0
  MOVE EDITED Policy-Flat.TotalDue (EM=Z(6)9.99) TO JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_deathbenefit'':'; 
AIND  (J) := 'N'  /* 1381.14
IF Policy-Flat.DeathBenefit > 0
  MOVE EDITED Policy-Flat.DeathBenefit (EM=Z(6)9.99) TO JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_balance'':';      
AIND  (J) := 'N'  /* 1012.23
IF Policy-Flat.TotalPremiumPaid > 0
  MOVE EDITED Policy-Flat.TotalPremiumPaid (EM=Z(6)9.99) TO JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_policyid'':';     
AIND  (J) := 'Y'  /* 106eee2d-9c0d-e711-80cb-005056a21fa2
IF Policy-Flat.PolicyGUID NE BLANK
  JVALUES (J) := Policy-Flat.PolicyGUID
END-IF

ADD 1 TO J
JTAGS (J) := '''new_iascontactid'':'; 
AIND  (J) := 'Y' /* "250203"
JVALUES (J) := Policy-Flat.ContactId

ADD 1 TO J
JTAGS   (J) := '''new_issueage'':';          
AIND    (J) := 'N' /* 37
JVALUES (J) := Policy-Flat.IssueAge

ADD 1 TO J
JTAGS (J) := '''new_billingadjustment'':'; 
AIND  (J) := 'N' /* 12.02
IF Policy-Flat.BillingAdjustment ne 0
  MOVE EDITED Policy-Flat.BillingAdjustment (EM=-Z(6)9.99) TO JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_lastduration'':';     
AIND  (J) := 'N' /* 8
IF Policy-Flat.LastDuration > 0
  JVALUES (J) := Policy-Flat.LastDuration
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_costbasis'':';        
AIND  (J) := 'N' /* 53
IF Policy-Flat.COSTBASIS >= 0
  MOVE EDITED Policy-Flat.COSTBASIS (EM=Z(6)9.99) TO JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_lastbilleddate'':';   
AIND  (J) := 'Y' /* "2016-10-12"
IF Policy-Flat.LastBilledDate > 0
  #D := Policy-Flat.LastBilledDate
  COMPRESS #YYYY #MM #DD INTO JVALUES (J)
    WITH DELIMITER '-'
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_lastbilledamount'':'; 
AIND  (J) := 'N' /* 89.01
IF LastBilledAmount >= 0
  MOVE EDITED LastBilledAmount (EM=Z(6)9.99) TO JVALUES (J)
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_effectivedate'':';   
AIND  (J) := 'Y' /* "2016-10-12"
IF Policy-Flat.EffectiveDate > 0
  #D := Policy-Flat.EffectiveDate
  COMPRESS #YYYY #MM #DD INTO JVALUES (J)
    WITH DELIMITER '-'
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_paidtodate'':';   
AIND  (J) := 'Y' /* "2016-10-12"
IF Policy-Flat.PaidToDate > 0
  #D := Policy-Flat.PaidToDate
  COMPRESS #YYYY #MM #DD INTO JVALUES (J)
    WITH DELIMITER '-'
END-IF

FOR I 1 J
  MOVE *TRIM(JVALUES (I), LEADING) TO JVALUES (I)
END-FOR

FOR J 1 TO #TAGS
  IF JVALUES (J) NE BLANK
    IF AIND (J) = 'Y'
      COMPRESS D1 JVALUES (J) D2 INTO JVALUES (J) LEAVING NO
    ELSE
      COMPRESS JVALUES (J) ',' INTO JVALUES (J) LEAVING NO
    END-IF
  END-IF
END-FOR
COMPRESS '={'
  JTAGS (1) JVALUES (1)
  INTO jSonString leaving no
FOR J 2 TO #TAGS
  IF JVALUES (J) NE BLANK
    COMPRESS jSonString
      JTAGS (J) JVALUES (J)
      INTO jSonString leaving no
  END-IF
END-FOR
COMPRESS jSonString '}' INTO jSonString LEAVING NO
EXAMINE jSonString FOR ',}' REPLACE WITH '}'
END
