* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCNADP1'
*
* DESCRIPTION
*   XML Address Parser implementationfor file:
*
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
LOCAL USING AUCAAD02
LOCAL USING AUCAER01
LOCAL USING PARSER-X
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
*
LOCAL
1 #LEN              (I4)
1 #PARSE-ERROR      (I4) CONST <-7>
1 #NATURAL-ERROR    (I4) CONST <-3>
1 #ERROR-LOG        (I4) CONST <3>
*
1 #TRUE              (A4)  CONST <'TRUE'>
END-DEFINE
*
#AUCerror.ErrorTag := 'AddressRelations'
ASSIGN #LEN := *LENGTH (#XML_INPUT)
IF #LEN <= 0
  #AUCerror.ErrorCode := #Parse-error
  #AUCerror.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNERS1' #XML_OUTPUT #AUCerror
  ESCAPE ROUTINE
END-IF
RESET AddressRelations
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
#AUCerror.ErrorCode := #PARSE-ERROR
#AUCerror.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNERS1' #XML_OUTPUT #AUCerror
END-SUBROUTINE
*
DEFINE SUBROUTINE CALLBACK
/*                ========
IF XML_PARSER_CONTENT_IS_EMPTY THEN
  IGNORE
ELSE
  #XML_VALUE := *TRIM (#XML_VALUE)
  MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
  PERFORM PARSE-DOCUMENT
END-IF
END-SUBROUTINE
*
CALLNAT 'AUCNADG1' AddressRelations.ContactId #XML_OUTPUT  /* Send back manage address result
*
* ------------------------------------------------- CALL THE PARSER
DEFINE PARSE-DOCUMENT
/*     ==============
* PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE XML_PARSER_CONTENT
*
DECIDE ON FIRST #XML_PATH
  VALUE 'AddressRelations//'
    IGNORE
  VALUE 'AddressRelations'
    RESET INITIAL AddressRelations
  VALUE 'AddressRelations/ActionType//'
    IGNORE
  VALUE 'AddressRelations/ActionType'
    IGNORE
  VALUE 'AddressRelations/ActionType/$'
    AddressRelations.ActionType := VAL(#XML_VALUE)
  VALUE 'AddressRelations/ErrorCode//'
    IGNORE
  VALUE 'AddressRelations/ErrorCode'
    IGNORE
  VALUE 'AddressRelations/ErrorCode/$'
    AddressRelations.ErrorCode := VAL(#XML_VALUE)
  VALUE 'AddressRelations/ErrorDescription//'
    IGNORE
  VALUE 'AddressRelations/ErrorDescription'
    IGNORE
  VALUE 'AddressRelations/ErrorDescription/$'
    AddressRelations.ErrorDescription := #XML_VALUE
  VALUE 'AddressRelations/ContactID//'
    IGNORE
  VALUE 'AddressRelations/ContactID'
    IGNORE
  VALUE 'AddressRelations/ContactID/$'
    AddressRelations.ContactID := VAL(#XML_VALUE)
  VALUE 'AddressRelations/CN//'
    IGNORE
  VALUE 'AddressRelations/CN'
    IGNORE
  VALUE 'AddressRelations/CN/$'
    AddressRelations.CN := VAL(#XML_VALUE)
  VALUE 'AddressRelations/LastUpdatedDate//'
    IGNORE
  VALUE 'AddressRelations/LastUpdatedDate'
    IGNORE
  VALUE 'AddressRelations/LastUpdatedDate/$'
    AddressRelations.LastUpdatedDate := VAL(#XML_VALUE)
  VALUE 'AddressRelations/LastUpdatedTime//'
    IGNORE
  VALUE 'AddressRelations/LastUpdatedTime'
    IGNORE
  VALUE 'AddressRelations/LastUpdatedTime/$'
    AddressRelations.LastUpdatedTime := VAL(#XML_VALUE)
  VALUE 'AddressRelations/LastUpdatedUser//'
    IGNORE
  VALUE 'AddressRelations/LastUpdatedUser'
    IGNORE
  VALUE 'AddressRelations/LastUpdatedUser/$'
    AddressRelations.LastUpdatedUser := #XML_VALUE
  VALUE 'AddressRelations/SystemSource//'
    IGNORE
  VALUE 'AddressRelations/SystemSource'
    IGNORE
  VALUE 'AddressRelations/SystemSource/$'
    AddressRelations.SystemSource := #XML_VALUE
  VALUE 'AddressRelations/User//'
    IGNORE
  VALUE 'AddressRelations/User'
    IGNORE
  VALUE 'AddressRelations/User/$'
    AddressRelations.User := #XML_VALUE
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END
