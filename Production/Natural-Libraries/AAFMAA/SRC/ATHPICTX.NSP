* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPICTX - Create AAFMAA DFAS file from CTX summary 
*                        and sort it 
*   AAFMAA ctx files will have a processs done to them prior to 
*      uploading them to create data files from the ctx summary reports 
*   ***ABOVE is no longer true 
************************************************************************ 
*                       MODIFICATION LOG 
* USER   DATE      TAG  REASON 
* vxt   11/04/2013 vt1 New format of the DFAS file. 
* bz    10/31/2014    Sustitute SSN 
* vxt   11/18/2016 vt2 Ticket 1924
************************************************************************ 
* 
DEFINE DATA 
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK 
LOCAL 
* 
1 #LAST-MON-YYYYMMDD  (N8) 
1 #NEXT-MON-YYYYMMDD  (N8) 
* 
1 CTX-FILE          (A152) 
1 REDEFINE CTX-FILE 
  2 cs-eff-dt                (a10) 
  2 redefine cs-eff-dt 
    3 CS-EFF-DT-MM     (A2) 
    3 CS-FILL-1        (A1) 
    3 CS-EFF-DT-DD     (A2) 
    3 CS-FILL-2        (A1) 
    3 CS-EFF-DT-YYYY   (A4) 
  2 filler-1                (a6) 
  2 CS-TOT-AMT              (a10) 
  2 filler-2                (a4) 
  2 cs-account              (a6) 
  2 filler-3                (a18) 
  2 cs-payee                (a25) 
  2 filler-4                (a4) 
  2 CS-COMP-CODE            (a6) 
  2 filler                  (a9)  
  2 CS-PAYER                (a4) 
  2 filler-5                (a25) 
  2 CS-SSN                  (a9) 
  2 filler-6                (a4) 
  2 CS-AMT                  (a10) 
  2 REDEFINE CS-AMT 
    3 CS-AMT-X        (A1/10) 
* 
1 #LAST-COMP-CODE   (A6)   /* DW3 
1 #LAST-COMP-PAYER  (A10)  /* DW3 
1 #LAST-CS-SSN      (A9)   /* DW3 
1 REDEFINE #LAST-CS-SSN    /* DW3 
  2 #LAST-CS-SSN-N   (N9)   /* DW3 
1 #LAST-CS-AMT      (N4.2) /* DW3 
* 
1 ST-V VIEW OF A-STATUS 
  2 ID-NUMBER               /* RE1 
  2 NAME 
  2 PROCESS-IND 
* 
1 AT-V VIEW OF A-APPL-TRACKING 
  2 NAME 
  2 INTRO-FLAG 
* 
1 IM-V VIEW OF A-INTRO-MEMBER 
  2 NAME 
* 
1 NT-V-800116 VIEW OF A-NOTES 
  2 NOTE-DATE          (40) 
  2 NOTE-TEXT          (A60/40) 
* 
1 NT-V VIEW OF A-NOTES 
  2 ID-NUMBER         (N6) 
  2 REDEFINE ID-NUMBER 
    3 ID-NUMBER-1ST    (N1) 
    3 ID-NUMBER-LAST-5 (N5) 
  2 NOTE-DATE          (40) 
  2 NOTE-TEXT          (A60/40) 
  2 REDEFINE NOTE-TEXT /*loan reg/acct reg tots-also ATHP08P1/G4200PMS 
    3 NT-LN-TOT-AVAIL-TODAY        (N13.2)                    /* vt 20121029 
    3 NT-LN-TOT-MBRS-ELIG-LNS      (N7) 
* 
    3 NT-LN-PRIN               (N9.2/2) 
    3 NT-LN-DISBURSED          (N9.2/2) 
    3 NT-LN-REPAID             (N9.2/2) 
    3 NT-LN-ACC-INT            (N9.2/2) 
    3 NT-LN-BILLED-AMT         (N9.2/2) 
    3 NT-LN-INT-RECV           (N9.2/2) 
    3 NT-LN-MBRS-W-LNS         (N7/2) 
    3 NT-LN-COMP-INT-RT        (N2.5/2) 
    3 NT-LN-CAP-INT-TO-DATE    (N9.2/2) 
    3 NT-LN-MBRS-W-CAP-INT     (N7/2) 
    3 NT-LN-LNS-BY-INT-RT-TBL  (13) 
      4 NT-LN-LNS-BY-INT-RT     (N9.2/2) 
    3 NT-LN-TOT-COMP-RT        (N2.5) 
* 
    3 NT-PR-PMT      (P9.2) 
    3 NT-PR-NEW-LN   (P9.2) 
    3 NT-PR-ADDL-LN  (P9.2) 
    3 NT-PR-CAP      (P9.2) 
    3 NT-PR-ADJ      (P9.2) 
    3 NT-PR-NET-CHG  (P9.2) 
    3 NT-IN-PMT      (P9.2) 
    3 NT-IN-ADDL-LN  (P9.2) 
    3 NT-IN-CAP      (P9.2) 
    3 NT-IN-ADJ      (P9.2) 
    3 NT-IN-NET-CHG  (P9.2) 
    3 NT-ACC-ADJ     (P9.2) 
    3 NT-PREM-PMT    (P9.2) 
    3 NT-PREM-REV    (P9.2) 
    3 NT-FPF-PMT     (P9.2) 
    3 NT-FPF-REV     (P9.2) 
    3 NT-DUES-PMT    (P9.2) 
    3 NT-DUES-REV    (P9.2) 
    3 NT-FPF-DU-PMT  (P9.2) 
    3 NT-FPF-DU-REV  (P9.2) 
    3 NT-ALOT-START  (P9.2) 
    3 NT-ALOT-STOP   (P9.2) 
    3 NT-EZ-START    (P9.2) 
    3 NT-EZ-ADJ      (P9.2) 
    3 NT-DR          (P9.2) 
    3 NT-CR          (P9.2) 
* 
    3 NT-RECEIPTS    (P9.2) 
    3 NT-INT-TRAN    (P9.2) 
    3 NT-DISBURSEMENTS (P9.2) 
    3 NT-ADJ-APL     (P9.2) 
    3 NT-ADJ-APL-CAP (P9.2) 
    3 NT-ADJ-ETI     (P9.2) 
    3 NT-ADJ-ALP     (P9.2) 
    3 NT-ADJ-AIP     (P9.2) 
    3 NT-ADJ-ELP     (P9.2) 
    3 NT-ADJ-EIP     (P9.2) 
    3 NT-EZ-PREMS    (P9.2) 
    3 NT-ADJ-APL-PREM (P9.2) 
    3 NT-ADJ-JI      (P9.2) 
    3 NT-ADJ-L       (P9.2) 
* 
    3 NT-PAD-AMT     (P9.2) 
* 
    3 NT-PR-PMT-CAP  (P9.2) 
    3 NT-PR-ADJ-CAP  (P9.2) 
    3 NT-IN-PMT-CAP  (P9.2) 
    3 NT-IN-ADJ-CAP  (P9.2) 
    3 NT-ACC-ADJ-CAP (P9.2) 
    3 NT-ADJ-ALP-CAP (P9.2) 
    3 NT-ADJ-AIP-CAP (P9.2) 
    3 NT-ADJ-ELP-CAP (P9.2) 
    3 NT-ADJ-EIP-CAP (P9.2) 
    3 NT-EZPAY-DUES  (P9.2) 
    3 NT-ALLOT-DUES  (P9.2) 
    3 NT-APL-DUES    (P9.2) 
    3 NT-EZPAY-DUES-SO (P9.2) 
    3 NT-ALLOT-DUES-SO (P9.2) 
    3 NT-FPF-DU-PMT-SO (P9.2) 
    3 NT-FPF-DU-REV-SO (P9.2) 
    3 NT-DUES-PMT-SO  (P9.2) 
    3 NT-DUES-REV-SO  (P9.2) 
    3 NT-FPF-RID-PMT  (P9.2)    /* BELOW 6 ADDED 11/6/1999 
    3 NT-FPF-RID-REV  (P9.2) 
    3 NT-RID-PMT      (P9.2) 
    3 NT-RID-REV      (P9.2) 
    3 NT-RID-ALLOT    (P9.2) 
    3 NT-RID-EZPAY    (P9.2) 
    3 NT-ALLOT-PREMS  (P9.2)    /* below 2  added 3/26/2002 
    3 NT-CTX-DFAS-TOT (P9.2)         /* <<< this is loaded by this program 
*                            /* below 3  added 7/12/2004 
    3 NT-ALLOT-UNDER  (P9.2)       /* amt alot-amt less than amt needed 
    3 NT-ALLOT-OVER   (P9.2)       /* amt alot-amt gtr than amt needed 
    3 NT-DFAS-NON-MATCH (P9.2)     /* amt dfas ssn non-match to AAFMAA 
*                            /* below 10 added 3/5/2008     /* DW10 
    3 NT-EZPAY-BADJ      (P9.2) 
    3 NT-EZPAY-UNDERAGES (P9.2) 
    3 NT-EZPAY-OVERAGES  (P9.2) 
    3 NT-CC-RIDER           (P9.2) 
    3 NT-CC-CAP-LOANS       (P9.2) 
    3 NT-CC-POLICY-LOANS    (P9.2) 
    3 NT-CC-CAP-INTEREST    (P9.2) 
    3 NT-CC-POLICY-INTEREST (P9.2) 
    3 NT-CC-BADJ            (P9.2) 
    3 NT-CC-TOTAL           (P9.2) 
*                            /* below 1 added 9/1/2008     /* DW13 
    3 NT-EZPAY-APFP    (N9.2) 
*                            /* below 1 added 03/01/2009   /* PM17 
    3 NT-CC-DREV            (P9.2)                            /* PM17 
      /* below 1 added 06/01/2009   /* PM18 
    3 NT-CC-OVERAGES        (P9.2)                            /* PM18 
* 
    3 NT-EZPAY-PSM          (P9.2)                            /* PM99 
    3 NT-ALLOT-PSM          (P9.2)                            /* PM99 
    3 NT-CC-PSM             (P9.2)                            /* PM99 
* 
1 #STAT-FND   (L) 
1 #AT-FND     (L) 
1 #IM-FND     (L) 
* 
1 #NOTE-TEXT  (A60/20)     /* DW6 
1 #TO-INIT    (A3) 
* 
1 ALOT-REC     (A45) 
1 REDEFINE ALOT-REC 
  2 AL-SSN-A    (A09) 
  2 REDEFINE AL-SSN-A 
    3 AL-SSN     (N09) 
  2 AL-SERV     (A01) 
  2 AL-STATUS   (A01) 
  2 AL-AMOUNT-A (A06) 
  2 REDEFINE AL-AMOUNT-A 
    3 AL-AMOUNT  (N4.2) 
  2 REDEFINE AL-AMOUNT-A 
    3 AL-AMOUNT-X  (A1/6) 
  2 AL-NAME     (A22) 
  2 AL-EFF-YYYYMM (A6) 
* 
1 #COUNTERS 
  2 #BLANKS           (P5) 
  2 #RECS-READ        (P5) 
  2 #RECS-SELECTED    (P5) 
  2 #CNT              (P5) 
  2 #CNT-2            (P5) 
  2 #CNT-3            (P5) 
  2 #CNT-4            (P5) 
  2 #CNT-5            (P5) 
  2 #CNT-6            (P5) 
  2 #CNT-7            (P5) 
  2 #I1               (I2) 
  2 #I2               (I2) 
  2 #I3               (I2) 
  2 #NX-X             (I2) 
* 
1 #YYYYMMDD        (N8) 
1 REDEFINE #YYYYMMDD 
  2 #YYYY          (N4) 
  2 #MM            (N2) 
  2 #DD            (N2) 
1 REDEFINE #YYYYMMDD 
  2 #YYYYMM-A      (A6) 
* 
1 #AMOUNT-A (A06) 
1 REDEFINE #AMOUNT-A 
  2 #AMOUNT  (N4.2) 
1 REDEFINE #AMOUNT-A 
  2 #AMOUNT-X  (A1/6) 
* 
1 #AA-RECS      (N5) 
1 #FA-RECS      (N5) 
1 #NA-RECS      (N5) 
1 #XR-RECS      (N5) 
1 #XA-RECS      (N5) 
1 #ALOT-RECS    (N5) 
1 #TOT-AMT      (N7.2) 
1 #AMT      (N5.2) 
1 #EFF-DT       (A10) 
1 #COMP-PAYER   (A10) 
1 #COMP-CODE    (A6) 
1 #B4           (A9) 
1 #B4-SSN       (A9/20) 
1 #AFTER-SSN    (A9/20) 
1 #AMT1       (A13) 
1 #AMT2      (A13) 
1 #CTX-STATUS   (A3) 
1 #CTX-SERVICE  (A4) 
1 #LAST-CTX-STATUS   (A3) 
1 #LAST-CTX-SERVICE  (A4) 
 
* 
1 #old-cs-eff-dt    (a10) 
1 #old-cs-tot-amt   (a10) 
1 #old-cs-payer     (a25) 
1 #old-cs-comp-code (a15) 
* 
END-DEFINE 
* * * * * * * * * * * * * * * * * 
* define work file 2 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/testDFAS1.txt' type 'ASCII' 
* define work file 3 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/testDFAS.dfas-test1.txt' type 'ASCII' 
* 
FORMAT  LS=133 PS=76 
WRITE    TITLE LEFT 'PROGRAM: ' *PROGRAM 'Ver 4' 5X 
  'AAFMAA DFAS Allotment Exceptions' 
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX 
* 
FORMAT (2) LS=133 PS=76 
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X 
  'AAFMAA DFAS Allotment Ongoing credits' 
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX 
* 
FORMAT (3) LS=133 PS=76 
WRITE  (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X 
  'AAFMAA DFAS Allotment Duplicate SSN"s' 
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX 
* 
READ WORK 2 RECORD CTX-FILE 
* 
  if cs-eff-dt = 'Date' or = ' ' 
    escape top 
  end-if 
* 
  if cs-eff-dt ne #old-cs-eff-dt 
    COMPRESS CS-EFF-DT-MM CS-EFF-DT-DD CS-EFF-DT-YYYY 
      INTO #EFF-DT WITH '/' 
    WRITE 'Eff Date= ' #EFF-DT 
    RESET #COMP-CODE    /* to start a new company 
  end-if 
  move cs-eff-dt to #old-cs-eff-dt 
* 
  if cs-tot-amt ne #old-cs-tot-amt 
    WRITE 'Total amt = ' CS-TOT-AMT 
  END-IF 
  move cs-tot-amt to #old-cs-tot-amt 
* 
  if cs-comp-code ne #old-cs-comp-code 
    MOVE CS-COMP-CODE TO #COMP-CODE 
    WRITE 'Company Code =' #COMP-CODE 
  END-IF 
  move cs-comp-code to #old-cs-comp-code 
* 
  if cs-payer ne #old-cs-payer 
    MOVE CS-PAYER     TO #COMP-PAYER 
    WRITE 'CS PAYER     =' #COMP-PAYER 
  END-IF 
  move cs-payer to #old-cs-payer 
* 
  IF   (CS-SSN = MASK (NNNNNNNNN))     /* Actual Credit records 
      AND (#COMP-CODE NE ' ')       /* past comp code 
    IGNORE 
  END-IF 
* 
  MOVE CS-SSN TO #B4 
* 
  IF CS-SSN = '509784352' MOVE '420805066' TO CS-SSN 
    WRITE 'SSN' #B4 'switched to' CS-SSN  /* spouse pays 
    IF #I3 LT 19     /* was 5      /* DW6 
      ADD 1 TO #I3 
      MOVE #B4    TO #B4-SSN (#I3) 
      MOVE CS-SSN TO #AFTER-SSN (#I3) /* DW4 
      ADD 1 TO #NX-X                                          /* DW6 
      COMPRESS 'DFAS SSN switched from' #B4-SSN (#I3) 
        'to' #AFTER-SSN(#I3) INTO #NOTE-TEXT(#NX-X) 
    END-IF 
  END-IF 
* 
  IF CS-SSN = '029421701' MOVE '524087921' TO CS-SSN 
    WRITE 'SSN' #B4 'switched to' CS-SSN   /* spouse pays 
    IF #I3 LT 19 
      ADD 1 TO #I3 
      MOVE #B4    TO #B4-SSN (#I3) 
      MOVE CS-SSN TO #AFTER-SSN (#I3) /* DW4 
      ADD 1 TO #NX-X 
      COMPRESS 'DFAS SSN switched from' #B4-SSN(#I3) 
        'to' #AFTER-SSN(#I3) INTO #NOTE-TEXT(#NX-X) 
    END-IF 
  END-IF 
* 
  IF CS-SSN = '548814036' MOVE '131646363' TO CS-SSN 
    WRITE 'SSN' #B4 'switched to' CS-SSN   /* spouse pays 
    IF #I3 LT 19 
      ADD 1 TO #I3 
      MOVE #B4 TO #B4-SSN (#I3) 
      MOVE CS-SSN TO #AFTER-SSN (#I3) 
      ADD 1 TO #NX-X 
      COMPRESS 'DFAS SSN switched from' #B4-SSN(#I3) 
        'to' #AFTER-SSN(#I3) INTO #NOTE-TEXT(#NX-X) 
    END-IF 
  END-IF 
* 
  IF CS-SSN = '254762957' MOVE '760367956' TO CS-SSN       /* bz
    WRITE 'SSN' #B4 'switched to' CS-SSN  
    IF #I3 LT 19 
      ADD 1 TO #I3 
      MOVE #B4 TO #B4-SSN (#I3) 
      MOVE CS-SSN TO #AFTER-SSN (#I3) 
      ADD 1 TO #NX-X 
      COMPRESS 'DFAS SSN switched from' #B4-SSN(#I3) 
        'to' #AFTER-SSN(#I3) INTO #NOTE-TEXT(#NX-X) 
    END-IF 
  END-IF 
* 
  IF CS-SSN = '550611124' MOVE '428419124' TO CS-SSN       
    WRITE 'SSN' #B4 'switched to' CS-SSN   /* spouse pays 
    IF #I3 LT 19 
      ADD 1 TO #I3 
      MOVE #B4 TO #B4-SSN (#I3) 
      MOVE CS-SSN TO #AFTER-SSN (#I3) 
      ADD 1 TO #NX-X 
      COMPRESS 'DFAS SSN switched from' #B4-SSN(#I3) 
        'to' #AFTER-SSN(#I3) INTO #NOTE-TEXT(#NX-X) 
    END-IF 
  END-IF 
 
END-ALL 
* 
SORT BY CS-SSN 
    USING CTX-FILE #COMP-CODE #COMP-PAYER  /* DW3 
* 
  IF CS-SSN = #LAST-CS-SSN   /* DW3 
    MOVE '000000' TO #AMOUNT-A 
* 
    MOVE 7 TO #I2 
    FOR #I1 10 TO 1 STEP -1 
      IF CS-AMT-X (#I1) = MASK (N) 
        SUBTRACT 1 FROM #I2 
        MOVE CS-AMT-X (#I1) TO #AMOUNT-X (#I2) 
      END-IF 
    END-FOR 
* 
    PERFORM GET-CTX-STATUS-AND-SERVICE                  /* DW6 
    IF #NX-X LT 19     /* WAS 4                         /* DW6 
      MOVE EDITED #LAST-CS-AMT (EM=Z,ZZZ.99) TO #AMT1 
      MOVE LEFT #AMT1 TO #AMT1 
      MOVE EDITED #AMOUNT (EM=Z,ZZZ.99) TO #AMT2 
      MOVE LEFT #AMT2 TO #AMT2 
      ADD 1 TO #NX-X 
      COMPRESS '2 Dupl-SSN' CS-SSN  #AMT1 INTO #NOTE-TEXT (#NX-X) 
      COMPRESS #NOTE-TEXT (#NX-X) '/'  #LAST-CTX-STATUS '-' #LAST-CTX-SERVICE 
        '**' #AMT2 '/' #CTX-STATUS '-' #CTX-SERVICE 
        INTO #NOTE-TEXT (#NX-X) LEAVING NO 
 
    END-IF 
* 
    COMPUTE #AMT = #AMOUNT + #LAST-CS-AMT 
    ADD 1 TO #CNT-3 
    DISPLAY (3) #CNT-3 CS-SSN 
*     AL-SERV AL-STATUS AL-NAME  /* HASN'T BEEN CREATED yet 
      'amt-1' #LAST-CS-AMT 
      'amt-2' #AMOUNT 
      'Total/Amt' #AMT 
* 
    ADD #AMOUNT TO #LAST-CS-AMT 
    ESCAPE TOP 
  END-IF 
* 
  IF #LAST-CS-SSN NE ' '  /* bypass 1st time   /* DW3 
    PERFORM CREATE-DFAS-ALOT                   /* DW3 
  END-IF 
* 
  MOVE CS-SSN      TO #LAST-CS-SSN   /* DW3 
  MOVE 7 TO #I2 
  MOVE '000000' TO #AMOUNT-A 
  FOR #I1 10 TO 1 STEP -1 
    IF CS-AMT-X (#I1) = MASK (N) 
      SUBTRACT 1 FROM #I2 
      MOVE CS-AMT-X (#I1) TO #AMOUNT-X (#I2) 
    END-IF 
  END-FOR 
* 
  MOVE #AMOUNT     TO #LAST-CS-AMT 
  MOVE #COMP-CODE  TO #LAST-COMP-CODE 
  MOVE #COMP-PAYER TO #LAST-COMP-PAYER 
END-SORT 
* 
IF #LAST-CS-SSN NE ' '        /* DW3 
  PERFORM CREATE-DFAS-ALOT    /* DW3 
END-IF 
* 
MOVE *DATN TO #YYYYMMDD /* build last mon & next mon dates 
IF #DD LT 10   /* today is 1st thru 10th  (not normal) 
  SUBTRACT 1 FROM #MM 
  IF #MM LT 1 
    ADD 12 TO #MM 
    SUBTRACT 1 FROM #YYYY 
  END-IF 
END-IF 
* 
MOVE 1 TO #DD 
MOVE #YYYYMMDD TO #LAST-MON-YYYYMMDD 
* 
ADD 1 TO #MM 
IF #MM GT 12 
  SUBTRACT 12 FROM #MM 
  ADD 1 TO #YYYY 
END-IF 
* 
MOVE #YYYYMMDD TO #NEXT-MON-YYYYMMDD 
* 
WRITE #LAST-MON-YYYYMMDD 'last-mon-date' 
WRITE #NEXT-MON-YYYYMMDD 'next-mon-date' 
* 
FIND (1) NT-V-800116 WITH ID-NUMBER = 800116 /* last mons gm ar info 
  IF NT-V-800116.NOTE-DATE (1) LT #LAST-MON-YYYYMMDD /* Only do 1 time 
    FIND NT-V WITH ID-NUMBER = 800105 
      IF NT-V.NOTE-DATE (1) = #LAST-MON-YYYYMMDD 
        MOVE NT-V.NOTE-TEXT (*) TO NT-V-800116.NOTE-TEXT (*) 
        MOVE NT-V.NOTE-DATE (1) TO NT-V-800116.NOTE-DATE (1) 
        WRITE 'NT 800105 info moved to NT 800116 with date of' 
          NT-V.NOTE-DATE (1) 
         UPDATE (0481)  /* update 800116 with last month's data     !!!!! for testing purposes !!!!!!! 
         END TRANSACTION                       /*                   !!!!! for testing purposes !!!!!!! 
* 
      ELSE 
        WRITE 'NT 800105 rec does not have last mon date - it has' 
          NT-V.NOTE-DATE (1) 
      END-IF 
    END-FIND 
  ELSE 
    WRITE 'NT 800116 rec does not have proper date - it has' 
      NT-V-800116.NOTE-DATE (1) 
  END-IF 
END-FIND 
* 
FIND (1) NT-V WITH ID-NUMBER = 800105  /* Curr mons gm ar info which 
  IF NO RECORDS FOUND                  /* will be filled in after m/e 
    WRITE 'NO NX 800105 rec found'     /* by ATHP08P1 
    ESCAPE BOTTOM 
  END-NOREC 
* 
  MOVE #NEXT-MON-YYYYMMDD TO NT-V.NOTE-DATE (1) /* setup for new info 
  MOVE #TOT-AMT TO NT-CTX-DFAS-TOT 
   UPDATE (0503)                                    /*  !!!!! for testing purposes !!!!!!! 
   END TRANSACTION                                  /*  !!!!! for testing purposes !!!!!!! 
  WRITE 'NT 800105 updated with DFAS TOT and date' 
    NT-V.NOTE-DATE (1) 
END-FIND 
* 
WRITE 'tot blank lines                =' #BLANKS 
WRITE 'tot AAFM army active alots     =' #AA-RECS 
WRITE 'tot AAFM airforce active alots =' #FA-RECS 
WRITE 'tot AAFM navy     active alots =' #NA-RECS 
WRITE 'tot AAFM retired         alots =' #XR-RECS 
WRITE 'tot AAFM 0111     active alots =' #XA-RECS 
WRITE 'tot                      alots =' #ALOT-RECS 
WRITE 'tot DFAS amount =' #TOT-AMT 
* 
MOVE EDITED #TOT-AMT (EM=ZZZ,ZZZ,ZZZ.99) TO #AMT1 
MOVE LEFT #AMT1 TO #AMT1 
* 
IF #NX-X LT 20 
  ADD 1 TO #NX-X 
  COMPRESS 'DFAS files were FTP"d to AAFMAA Tot DFAS=' #AMT1  INTO #NOTE-TEXT (#NX-X) 
END-IF 
* 
FOR #I1 1 TO 20 
  WRITE #NOTE-TEXT (#I1) 
END-FOR 
* 
PERFORM SEND-NX 
* 
IF #NOTE-TEXT (6) NE ' ' 
  FOR #I1 1 TO 15    /* shift 2nd 5 to 1st 5 
    MOVE #NOTE-TEXT (#I1 + 5) TO #NOTE-TEXT (#I1) 
  END-FOR 
* 
  RESET #NOTE-TEXT (16:20) 
  PERFORM SEND-NX 
END-IF 
* 
IF #NOTE-TEXT (6) NE ' ' 
  FOR #I1 1 TO 15    /* shift 3rd 5 to 1st 5 
    MOVE #NOTE-TEXT (#I1 + 5) TO #NOTE-TEXT (#I1) 
  END-FOR 
* 
  RESET #NOTE-TEXT (16:20) 
  PERFORM SEND-NX 
END-IF 
* 
IF #NOTE-TEXT (6) NE ' ' 
  FOR #I1 1 TO 15    /* shift 4th 5 to 1st 5 
    MOVE #NOTE-TEXT (#I1 + 5) TO #NOTE-TEXT (#I1) 
  END-FOR 
* 
  RESET #NOTE-TEXT (16:20) 
  PERFORM SEND-NX 
END-IF 
* 
END TRANSACTION 
* 
* * * * * * * * * * * * * * 
DEFINE SUBROUTINE SEND-NX 
* * * * * * * * * * * * * * 
* 
MOVE 'EDS' TO #CGA-CLERK 
MOVE '*NX' TO #CGA-SCR-SUFFIX 
MOVE 'KHB' TO #TO-INIT 
FETCH RETURN 'G4090PNX' #CGA-CLERK #TO-INIT #NOTE-TEXT (1:5) 
* 
MOVE 'SKS' TO #TO-INIT 
FETCH RETURN 'G4090PNX' #CGA-CLERK #TO-INIT #NOTE-TEXT (1:5) 
* 
* MOVE 'MBW' TO #TO-INIT                                            /* vt removed it 
* FETCH RETURN 'G4090PNX' #CGA-CLERK #TO-INIT #NOTE-TEXT (1:5) 
* 
MOVE 'EJM' TO #TO-INIT 
FETCH RETURN 'G4090PNX' #CGA-CLERK #TO-INIT #NOTE-TEXT (1:5) 
* 
* MOVE 'MB' TO #TO-INIT                                                /* removed Merilynn vt2 \/
* FETCH RETURN 'G4090PNX' #CGA-CLERK #TO-INIT #NOTE-TEXT (1:5)         /*                  vt2 /\  
* 
END-SUBROUTINE 
* 
* * * * * * * * * * * * * * * 
DEFINE SUBROUTINE CREATE-DFAS-ALOT 
* * * * * * * * * * * * * * * 
* 
RESET ALOT-REC 
MOVE '000000' TO AL-AMOUNT-A 
* 
MOVE #LAST-CS-AMT TO AL-AMOUNT 
ADD AL-AMOUNT TO #TOT-AMT 
* 
MOVE #LAST-CS-SSN TO AL-SSN-A 
* 
DECIDE ON FIRST VALUE OF #LAST-COMP-CODE   /* bz1 start 
  VALUE 'N06004' 
    IF #LAST-COMP-PAYER = 'NAVY' 
      MOVE 'N' TO AL-SERV 
      ADD 1 TO #NA-RECS 
    ELSE 
      MOVE 'F' TO AL-SERV 
      ADD 1 TO #FA-RECS 
    END-IF 
    MOVE 'A' TO AL-STATUS 
  VALUE  'K00096' 
    MOVE 'A' TO AL-SERV 
    MOVE 'A' TO AL-STATUS 
    ADD 1 TO #AA-RECS 
  VALUE '0111' 
    MOVE '?' TO AL-SERV 
    MOVE 'A' TO AL-STATUS 
    ADD 1 TO #XA-RECS                   /* Code 0111 
  NONE 
    MOVE '?' TO AL-SERV 
    MOVE 'R' TO AL-STATUS 
    ADD 1 TO #XR-RECS 
END-DECIDE 
* 
RESET #STAT-FND 
FIND ST-V WITH SSN = #LAST-CS-SSN-N 
  IF ST-V.PROCESS-IND = 'C' 
      OR AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>) 
    ESCAPE TOP 
  END-IF 
* 
  MOVE ST-V.NAME TO AL-NAME 
  MOVE TRUE TO #STAT-FND 
  ESCAPE BOTTOM 
END-FIND 
* 
IF NOT #STAT-FND 
  RESET #AT-FND 
  FIND AT-V WITH SSN = #LAST-CS-SSN-N 
    IF AT-V.INTRO-FLAG = 'V' 
      ESCAPE TOP 
    END-IF 
* 
    MOVE TRUE TO #AT-FND 
    MOVE AT-V.NAME TO AL-NAME 
    ESCAPE BOTTOM 
  END-FIND 
END-IF 
* 
IF NOT #STAT-FND AND NOT #AT-FND 
  MOVE TRUE TO #IM-FND 
  FIND (1) IM-V WITH SSN = #LAST-CS-SSN-N 
    IF NO RECORD FOUND 
      RESET #IM-FND 
      ESCAPE BOTTOM 
    END-NOREC 
    MOVE IM-V.NAME TO AL-NAME 
  END-FIND 
END-IF 
* 
ADD 1 TO #CNT-2 
DISPLAY (2) #CNT-2 
  'SSN'      #LAST-CS-SSN 
  'MIL/SERV' AL-SERV 
  'MIL/STAT' AL-STATUS 
  'ALOT/AMT' AL-AMOUNT 
  'NAME'     AL-NAME 
* 
WRITE WORK 3 ALOT-REC 
ADD 1 TO #ALOT-RECS 
* 
END-SUBROUTINE 
* 
* * * * * * * * * * * * * * * * * * * * * * * 
DEFINE SUBROUTINE GET-CTX-STATUS-AND-SERVICE   /* DW6 
* * * * * * * * * * * * * * * * * * * * * * * 
* 
DECIDE ON FIRST VALUE OF #LAST-COMP-CODE    /* bz1 start 
  VALUE 'N06004' 
    IF #LAST-COMP-PAYER = 'NAVY' 
      MOVE 'Navy' TO #LAST-CTX-SERVICE 
    ELSE 
      MOVE 'AirF' TO #LAST-CTX-SERVICE 
    END-IF 
    MOVE 'Act'  TO #LAST-CTX-STATUS 
  VALUE 'K00096' 
    MOVE 'Army' TO #LAST-CTX-SERVICE 
    MOVE 'Act'  TO #LAST-CTX-STATUS 
  VALUE '0111' 
    MOVE 'Unkn' TO #LAST-CTX-SERVICE 
    MOVE 'Act'  TO #LAST-CTX-STATUS 
  NONE 
    MOVE 'Unkn' TO #LAST-CTX-SERVICE 
    MOVE 'Ret'  TO #LAST-CTX-STATUS 
END-DECIDE 
* 
DECIDE ON FIRST VALUE OF #COMP-CODE 
  VALUE 'N06004' 
    IF #COMP-PAYER = 'NAVY' 
      MOVE 'Navy' TO #CTX-SERVICE 
    ELSE 
      MOVE 'AirF' TO #CTX-SERVICE 
    END-IF 
    MOVE 'Act'  TO #CTX-STATUS 
  VALUE 'K00096' 
    MOVE 'Army' TO #CTX-SERVICE 
    MOVE 'Act'  TO #CTX-STATUS 
  VALUE '0111' 
    MOVE 'Unkn' TO #CTX-SERVICE 
    MOVE 'Act'  TO #CTX-STATUS 
  NONE 
    MOVE 'Unkn' TO #CTX-SERVICE 
    MOVE 'Ret'  TO #CTX-STATUS 
END-DECIDE 
* 
IF  (#CTX-STATUS      = 'Ret') /*If either dupl is a retired make it RET 
    OR (#LAST-CTX-STATUS = 'Ret') 
  MOVE '783' TO #LAST-COMP-CODE 
END-IF 
* 
END-SUBROUTINE 
* 
END 
