* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* PROGRAM-ID: ATHPAFST - STATS FOR AFSC
*
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE       TAG  REASON                                          *
* PAM  03112005   PM1  Reset display fields for GRANKSXX               *
* DRW  05162005   DW2  Add Sex for LTII Rates                          *
* DRW  06132005   DW3  Add DUES Stats                                  *
* DRW  07092005   DW4  Remove Full DE-GF Print as per KRM              *
* DRW  11072005   DW5  Remove DUES PAYING REPORT                       *
* DRW  10042006   DW6  Stats for avg-age spc contr clients             *
* DRW  10122007   DW7  Update Stats correctly with parm 'MONTHLY'      *
* DRW  11/01/2007 DW8  BYPASS DATE TEST IF PARM IS MONTHLY             *
* DRW 08/26/2008  DW9  Gen Plus Stats                                  *
* DRW 07/26/2009  DW10 Bypass Record if Spouse Status id 'P'           *
* PAM 07/27/2010  PM11 Added unified system changes                    *
* vxt 11/17/2010  vt1  Change the source of name, rank, phone  and     *
*                      address fields                                  *
* PAM 09/14/2011  PM12 Adjusted spouse processing for Widows           *
* NGG 02/14/2012  NG1  Premier services                                *
* YAK 10/09/2012  YK1  Use function to identify Level Term II plans    *
* YAK 11/08/2012  YK2  Add No Medical Term plan (EZ)                   *
* bz1 01/15/2013  bz1  Exclude First day of the next month from PS calculation
* NG  20130726    NG2  Address normalization                           *
* NG  20140114    NG3  GP2 project                                     *
* TMT 06132014    TT1  Contact Normalization - DOB and Sex             *
* vxt 01/15/2015  vt2  /Ticket 3273/                                   *
* vxt 12/01/2016  vt3  Fix production error 1316                       * 
* vxt 06/12/2017  vt4  Group Term Project                              * 
************************************************************************
DEFINE DATA
LOCAL USING SVCA0001          /* PM11
LOCAL USING ADDA0001          /* pda for the address      vt1
LOCAL USING CONTPDA1          /* TT1
LOCAL
*
1 TM-V VIEW OF A-TERMINALS    /* DW7
  2 TERMINAL-ID      (A8)
  2 COMMENTS         (A20)
  2 REDEFINE COMMENTS
    3 TU-COMMENTS-DATE (N8)
  2 LST-CMND-DT       (N8)    /* Date above updated
*
1 #AFST-DATE         (N8)    /* DW7
1 #M-E-DATE          (N8)
*
1 #AFSC-LAST-MONTH-MEMBERS   (P5)
1 #LAST-MONTH-GF             (P5)
1 #LAST-MONTH-BEING-SERVED-GF (P5)
1 #LAST-MONTH-BEING-SERVED-IO (P5)
*
1 #MTD-DETHS-GF           (P5)
1 #MTD-DETHS-GF-NO-WID    (P5)
1 #MTD-DETHS-IO-PRE-07-01 (P5)
1 #MTD-IO-DETHS-DE-GF   (N5)  /* subset of above
1 #MTD-IO-DETHS-OPT-OUT (N5)
1 #MTD-IO-DETHS-IP      (N5)
1 #MTD-DETHS-PL           (P5)
1 #MTD-DETHS-IO           (P5)
1 #MTD-DETHS-FSO          (P5)
1 #MTD-DETHS-TOTAL        (P5)
1 #MTD-LOSSES-NON-DETHS-GF (P5)
1 #MTD-DETHS-3SR           (P5)       /* PM11
1 #MTD-DETHS-3SR-NO-WID    (P5)       /* PM11
1 #MTD-LOSSES-NON-DETHS-3SR (P5)      /* PM11
*
1 #MTD-GAINS-BY-PLAN   (P5/12)
1 #MTD-LOSSES-BY-TYPE  (P5/2)
*
1 #WIDOWS-AFSC-BEING-SERVICED (P5)
1 #WIDOWS-AFSC-TO-BE-PURGED   (P5)
1 #WIDOWS-AFSC-TOTAL          (P5)
1 #G-F-WIDOWS-BEING-SERVED    (P5)
1 #G-F-WIDOWS-TO-BE-PURGED    (P5)
1 #G-F-WIDOWS-BILLABLE        (P5)
1 #G-F-WIDOWS-NOT-BILLABLE    (P5)
1 #G-F-WIDOWS-NOT-BILLABLE-PRJ (P5)
1 #I-O-WIDOWS-BEING-SERVED    (P5)
1 #I-O-WIDOWS-TO-BE-PURGED    (P5)
1 #I-O-WIDOWS-BILLABLE        (P5)
1 #I-O-WIDOWS-NOT-BILLABLE    (P5)
1 #I-O-WIDOWS-NOT-BILLABLE-PRJ (P5)
1 #3SR-WIDOWS-BEING-SERVED    (P5)    /* PM11
1 #3SR-WIDOWS-TO-BE-PURGED    (P5)    /* PM11
1 #3SR-WIDOWS-BILLABLE        (P5)    /* PM11
1 #3SR-WIDOWS-NOT-BILLABLE    (P5)    /* PM11
1 #3SR-WIDOWS-NOT-BILLABLE-PRJ (P5)   /* PM11
1 #WIDOWS-BEING-SERVED   (P5)
1 #WIDOWS-TO-BE-PURGED   (P5)
1 #WIDOWS-TOTAL          (P5)
1 #PSM-PLANS                  (p5)    /* NG1
1 #PSM-GAINS                  (p5)    /* NG1
1 #PSM-LOSSES                 (p5)    /* NG1
1 #PSM-amount                 (p7.2)  /* NG1
*
1 #SEG-X    (I2)     /* DW3
1 #SVC-FEE  (N3.2)   /* DW3
1 #NXT-DUES-B4  (P5) /* DW3
1 #NXT-DUES-B4-TM  (P5) /* DW3
1 #NXT-DUES-AFT (P5) /* DW3
1 #NXT-DUES-AFT-TM (P5) /* DW3
1 #DUES-TM    (L) /* DW3
1 #IO-PRE-07-01 (P5)
1 #SPS-GEN    (P5)
1 #SPS-GEN-INACT (P5)
1 #INACTIVE   (P5)
1 #GF         (P5)
1 #3SR        (P5)  /* NG1
1 #FSO        (P5)  /* NOT INCLUDED IN #GF
1 #PL         (P5)  /* NOT INCLUDED IN #GF
1 #IO         (P5)
1 #AAFMAA-TOTAL (P5)
*
* BELOW ARE COUNTS REQUESTED BY BRADY 8/28/2000
*
1 BMG-CNTS    (2) /* PIPELINE/COMBO AFTER 7/1/2000
  2 BMG-CAP-NON-CAP   (2)
    3 BMG-TYPE   (7)       /* OL/30/20/7P/LT/RT/VT
      4 #BMG-CNTS   (N5)
*
1 #BMG-PC-X   (I2)
1 #BMG-CNC-X  (I2)
1 #BMG-TYPE-X (I2)
*
1 NT-V  VIEW OF A-NOTES
  2 NOTE-TEXT   (A60/60)
  2 REDEFINE NOTE-TEXT
    3 NOTE-TEXT-OCC (60)
      4 NOTE-TEXT-FST    (A34)
      4 OO-DATE-MM   (A2)
      4 OO-DATE-F1   (A1)
      4 OO-DATE-DD   (A2)
      4 OO-DATE-F2   (A1)
      4 OO-DATE-YYYY (A4)
      4 NOTE-TEXT-LST (A16)
  2 REDEFINE NOTE-TEXT
    3 NOTE-TEXT-OCC-DG (60)
      4 NOTE-TEXT-FST-DG  (A11)
      4 DG-DATE-MM   (A2)
      4 DG-DATE-F1   (A1)
      4 DG-DATE-DD   (A2)
      4 DG-DATE-F2   (A1)
      4 DG-DATE-YYYY (A4)
      4 NOTE-TEXT-LST-DG (A39)
*
1 MS-V VIEW OF A-MBRSHIP-STATS
  2 MONTH-KEY        (N6)
  2 ME-AFSC-GAINS-P-L
  2 ME-AFSC-GAINS-COMBO
  2 ME-AFSC-GAINS-S-O
  2 ME-AFSC-LOSSES-P-L
  2 ME-AFSC-LOSSES-COMBO
  2 ME-AFSC-LOSSES-S-O
  2 ME-AFSC-BY-PLAN     (12)
  2 ME-AFSC-BY-SVC      (6)
  2 ME-AFSC-BY-RANK     (7)
  2 ME-AFSC-BY-AGE      (9)
  2 ME-AFSC-G-F-LOSSES-DEATH
  2 ME-AFSC-G-F-LOSSES-NON-DEATH
  2 ME-AFSC-AAFM-TOTS   (5)
  2 ME-AFSC-AAFM-DEATHS (6)
  2 ME-AFSC-AAFM-WIDS-SERVED
  2 ME-AFSC-AAFM-WIDS-NOT-SERVED
  2 ME-AFSC-WIDS-SERVED
  2 ME-AFSC-WIDS-NOT-SERVED
  2 ME-AFSC-AAFM-DOD-CURR-YR-GF
  2 ME-AFSC-AAFM-DOD-CURR-YR-PRJ-GF
  2 ME-AFSC-AAFM-WIDS-SERVED-GF
  2 ME-AFSC-AAFM-WIDS-NOT-SERVED-GF
  2 ME-AFSC-AAFM-DOD-CURR-YR-IO
  2 ME-AFSC-AAFM-DOD-CURR-YR-PRJ-IO
  2 ME-AFSC-AAFM-WIDS-SERVED-IO
  2 ME-AFSC-AAFM-WIDS-NOT-SERVED-IO
  2 MTD-AFSC-GAINS-BY-PLAN    (12)
  2 MTD-AFSC-LOSSES-BY-TYPE   (2)
  2 ME-AFSC-WID-DETHS-UND90-GF
  2 ME-AFSC-WID-DETHS-MONS-UND90-GF
  2 ME-AFSC-WID-DETHS-OVR90-GF
  2 ME-AFSC-WID-DETHS-MONS-OVR90-GF
  2 ME-AFSC-LIFETIME-MBRS
* below added 5/29/2002
  2 ME-AFSC-AAFM-I-P-B4      (3)   /* de-gf/opt-out/all-else
  2 ME-AFSC-AAFM-I-P-AFT     (3)   /* ''
  2 ME-AFSC-AAFM-DEATHS-I-P  (3)   /* ''
  2 ME-AFSC-BY-STATUS        (3)   /* active/retired/all else
  2 AER-CLIENTS
  2 NMCRS-CLIENTS
  2 AFAS-CLIENTS
  2 CGMA-CLIENTS
  2 UWSF-CLIENTS
  2 NRS-CLIENTS
  2 MCRS-CLIENTS
  2 ME-PSM-PLANS               /* NG1
  2 ME-PSM-GAINS               /* NG1
  2 ME-PSM-LOSSES              /* NG1
  2 ME-PSM-AMOUNT              /* NG1
*
1 MD-V VIEW OF A-MBRSHIP-MTD-DETAIL
  2 ID-NUMBER
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A     (A6)
  2 ENTRY-DATE
  2 REDEFINE ENTRY-DATE
    3 ENTRY-DATE-YYYY  (N4)
    3 ENTRY-DATE-MM    (N2)
    3 ENTRY-DATE-DD    (N2)
  2 CODE
  2 USER
  2 REC-ISN
  2 ISSUE-DATE
*
1 ST-SSN-V VIEW OF A-STATUS
  2 SSN
  2 PROCESS-IND
*
1 AT-SSN-V VIEW OF A-APPL-TRACKING
  2 SSN
  2 INTRO-FLAG
*
* * * *   S T A T U S   F I L E   * * * * * * * * * * * * * * *
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER      (N6)
  2 REDEFINE ID-NUMBER
    3 ID-NBR       (A6)
  2 MEMBER-CONTACT-ID                                 /* vt1
  2 SPOUSE-CONTACT-ID                                 /* vt1
  2 WIDOW-FLAG          (A1)
  2 SSN
  2 MEMBER-FLAG         (A1)
  2 DATE-ACCT-UPDATE
*  2 SEX                                              /* vt1
*  2 ADDRESS-1                                        /* vt1 \/
*  2 ADDRESS-2
*  2 ADDRESS-3                                        /* vt1 /\
*  2 ZIP-CODE                /* NG2
*  2 TELE-NUMBER                                                /* vt1 \/
*  2 NXT-OF-KIN-TELE-NUMBER
*  2 NAME
*  2 NAME-SP                                                    /* vt1 /\
  2 X-LOAN-AMOUNT  (9)
  2 X-LOAN-DATE    (9)
*  2 FORMER-SPOUSE-NAME                                         /* vt1
*  2 FORMER-SPOUSE-STATUS                                       /* vt1
  2 INTRO-FLAG
  2 PROCESS-IND
*  2 APPL-SOURCE                                                /* vt1
  2 STATUS-CODE-SP
*   2 DATE-OF-BIRTH
*   2 DATE-OF-BIRTH-SP
  2 DATE-OF-DEATH
  2 DATE-OF-DIVORCE
  2 REDEFINE DATE-OF-DIVORCE
    3 DATE-OF-DIVORCE-YYYY   (N4)
    3 DATE-OF-DIVORCE-MM     (N2)
    3 DATE-OF-DIVORCE-DD     (N2)
  2 RANK                (A3)
  2 MILITARY-SERVICE    (A3)
  2 REDEFINE MILITARY-SERVICE
    3 MILITARY-SERVICE-A1 (A1)
  2 MILITARY-STATUS     (A1)
  2 NUMBER-MEMBERSHIPS
  2 STATUS              (9)
  2 FACE-AMOUNT         (N7.2/9)
  2 ISSUE-DATE          (N8/9)
  2 PAY-STATUS          (9)
  2 ANNUAL-PREM         (9)
  2 ISSUE-AGE           (9)
  2 REDEFINE ISSUE-AGE
    3 ISSUE-AGE-N        (N2/9)
  2 PLAN                (9)
  2 REDEFINE PLAN
    3 PLAN-OCC (9)
      4 PLAN-A1   (A1)
      4 PLAN-N2   (N2)
  2 MODE                (9)
  2 CONV-DURATION       (9)
*
1 FR-V VIEW OF A-FIRS
  2 C*DEPENDENT-TABLE
  2 DEPN-DATE-OF-BIRTH(64)        /* vt3 was 14
*  2 DEPN-NAME(14)                                 /* vt1
  2 DEPN-STATUS-CD(64)            /* vt3 was 14
  2 C*POLICY-TABLE
*  2 POL-NAME(45)                                  /* vt1 \/
*  2 POL-NUMBER(45)
*  2 POL-REMARKS(45)                               /* vt1 /\
  2 POL-DATE-CLM-FILED(45)
  2 POL-DATE-CLM-SETTLED(45)
*
1 CL-V VIEW OF A-CLAIM
  2 DATE-TIME-STAMP
    3 DTS-DATN
    3 DTS-TIMN
  2 C*CLAIM-INFO
  2 LETTER(24)
  2 STATUS(24)
  2 REMARKS(24)
  2 DATE-FILED(24)
  2 DATE-SETTLED(24)
  2 AMOUNT(24)
*
1 #JCL-PARM       (A32)
1 REDEFINE #JCL-PARM
  2 #JCL-WEEKLY-MONTHLY (A7)     /* 'WEEKLY ' OR 'MONTHLY' or 'PRE-M-E'
1 REDEFINE #JCL-PARM
  2 #JCL-MM            (N2)   /* DATE PARM 03/01/1999
  2 #JCL-X1            (A1)
  2 #JCL-DD            (N2)
  2 #JCL-X2            (A1)
  2 #JCL-YYYY          (N4)
*
1 #FREQ          (A7)
1 #NEXT-MON-YYYYMM (N6)
1 #UPDATE-NOUPDATE (A8)
*
1 #PARM-YYYYMMDD  (N8)
1 REDEFINE #PARM-YYYYMMDD
  2 #PARM-YYYYMM    (N6)
*
1 #COUNTERS
  2 #RECS-READ   (P5)
  2 #CNT         (P5)
  2 #CNT-1       (P5)
  2 #CNT-2       (P5)
  2 #CNT-3       (P5)
  2 #CNT-4       (P5)
  2 #CNT-5       (P5)
  2 #CNT-6       (P5)
  2 #CNT-7       (P5)
  2 #CNT-8       (P5)
  2 #CNT-9       (P5)
  2 #CNT-10      (P5)
  2 #CNT-11      (P5)
  2 #I1          (I2)
  2 #I2          (I2)
  2 #I3          (I2)
*
1 #YYYYMMDD     (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY    (N4)
  2 #MM      (N2)
  2 #DD      (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A  (A4)
  2 #MM-A    (A2)
  2 #DD-A    (A2)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM  (N6)
1 REDEFINE #YYYYMMDD
  2 #YYYYMMDD-A (A8)
*
1 #INVERSE-DATE   (N8)
1 REDEFINE #INVERSE-DATE
  2 #INV-YYYYMM (N6)
  2 #INV-DD     (N2)
*
1 #COMMAND    (A2) INIT <'BA'>
1 #INVALID    (L)
1 #RANK-DISPL (P2)
1 #RANK-LIT   (A23)
1 #RANK-DISPLAY (A5)
*
1 #NT-MSG    (A60)
1 #DE-GF-THIS-MON (L)
1 #CLMS-FOUND    (L)
1 #FIRS-FOUND    (L)
* 1 #LAST-NAME      (A25)                        /* vt1 \/
* 1 #FIRST-NAME     (A25)
* 1 #EXTRA1         (A25)
* 1 #EXTRA2         (A25)                        /* vt1 /\
1 #PURGE-DOB      (N8)
1 #NEXT-MON       (N8)
1 #WIDOW-NOT-SERVICED (L)
1 #13-MONS-AGO    (N8)
1 #11-MONS-AGO    (N8)
1 #1-YEAR-AGO     (N8)
1 #TODAY-YYYYMMDD (N8)
1 REDEFINE #TODAY-YYYYMMDD
  2 #TODAY-YYYYMM  (N6)
  2 #TODAY-DD      (N2)
1 #1-MON-AGO      (N8)
1 REDEFINE #1-MON-AGO
  2 #1-MON-AGO-YYYYMM  (N6)
  2 #1-MON-AGO-DD      (N2)
1 #1-MON-AGO_LAST_DAY  (N8)    /* bz1
1 #CNT-PUR        (P5)
1 #HAS-SPS        (L)
1 #HAS-FMR-SPS    (L)
1 #HAS-DEPS       (L)
1 #HAS-HANDI      (L)
1 #HAS-UNSET-CLMS (L)
1 #HAS-UNSET-POLS (L)
1 #MON-PREM       (N3.2)
1 #TOT-MON-PREM-NU (N7.2/12)
1 #TOT-MON-PREM    (N7.2)
1 #TOT-PUSP       (N7.2/12)
1 #SMOKER    (A1)
1 #SCR-COMMAND   (A2)
1 #SCR-ID        (N9)
1 #SCR-SUFFIX    (A3)
1 #APREM          (N6.2)
1 #WIDOWS-OVER-90  (N5)
1 #WIDOWS-OVER-91  (N5)
1 #WIDOWS-OVER-92  (N5)
1 #WIDOWS-OVER-93  (N5)
1 #WIDOWS-OVER-94  (N5)
1 #WIDOWS-OVER-95  (N5)
1 #WIDOWS-OVER-96  (N5)
1 #WID-DOD-MSG     (A25)
1 #MONS-DIFF       (N3)
1 #WID-DETH-CREDIT (N5.2)
1 #WID-AGE         (N3)
1 #TOT-WID-DETH-CREDIT  (N5.2)
1 #CALC-MONS      (P5)
1 #WIDS-OVER-90  (P5)
1 #TOT-MONS-OVER-90  (P5)
1 #TOT-WID-DETH-CREDIT-OVER-90 (P5)
1 #WIDS-UNDER-90  (P5)
1 #TOT-MONS-UNDER-90  (P5)
1 #TOT-WID-DETH-CREDIT-UNDER-90 (P5)
1 #DE-GF-B4   (P5)
1 #OPT-OUT-B4 (P5)
1 #I-P-B4     (P5)
1 #DE-GF-AFT  (P5)
1 #OPT-OUT-AFT(P5)
1 #I-P-AFT    (P5)
1 #TYPE       (A10)
1 #BEING-SERVED-BUT-NO-SPS (P5)
1 #NOT-FND    (L)
*
1 #CONTACT-ID  (N8)                     /* vt1 \/
1 #NAME-F      (A70)
1 #FIRST-NAME-F  (A25)
1 #MIDDLE-NAME-F (A25)
1 #LAST-NAME-F   (A25)
1 #SUFFIX-F      (A10)
1 #NAME-SP     (A70)
1 #NAME        (A70)
*
1 #ADDRESS-1    (A70)
1 #ADDRESS-2    (A70)
1 #ADDRESS-3    (A70)
*
1 #PHONEN1M     (10)
  2 #PHONE         (A36)
  2 #PHONE-TYPE    (A16)
  2 #PH-TYPE       (A1)
  2 #PH-PREF       (A1)
1 V_RC             (N3)
*
1 #HOME-PHONE    (A12)
1 #WORK-PHONE    (A12)
*

1 #PDA-RANK
  2 #PASS-COMMAND       (A2)
  2 #RANK-PASS          (A3)
  2 #MIL-ID-PASS        (A3)
  2 #INVALID-R            (L)
  2 #RANK-PAY-TBL-DISPL (P2)
  2 #RANK-LITERAL-PASS  (A23)
  2 #RANK-DISPLAY-R       (A5)
*
  2 #CONTACT-ID-R         (N8)
  2 #RANK-ABBR          (A) DYNAMIC
  2 #LETTER-ENV         (A) DYNAMIC
  2 #SALUTATION         (A) DYNAMIC
  2 #SALUTATION-WITH-NAME (A) DYNAMIC
*
1 #RANK                (A25)                                      /* vt1 /\
1 SVC-MEMBER VIEW OF A-SVC-MEMBER                        /* NG1
  2 SVC-STATUS
  2 SVC-ISSUE-DATE
  2 SVC-TERMINATION-DATE
  2 SVC-PLAN
1 #SVC-PAID-TO-DATE   (N8) 1 REDEFINE #SVC-PAID-TO-DATE
  2 #SVC-PTD-YYYYMM   (N6)
1 AR-V VIEW OF A-ACCOUNTING-REGISTER
  2 TXN-CODE
  2 CREDIT-AMOUNT
  2 DEBIT-AMOUNT
  2 SG-CATEGORY-1  (15)
*
1 #DATE-OF-BIRTH          (N8.0)            /* TT1
1 #DATE-OF-BIRTH-SP       (N8.0)            /* TT1
1 #SPOUSE-SEX             (A1)              /* TT1
* * * * * * * * * * * * * * * * * * * * * * *
END-DEFINE
*
FORMAT  LS=133 PS=76
WRITE   TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Program Messages'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (2) LS=133 PS=76
WRITE   (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'DEATHS DETAIL'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (3) LS=133 PS=76
WRITE   (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'PIPELINE & AFSC NEW MBR & LOSSES DETAIL'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (4) LS=133 PS=76
WRITE   (4) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'DE-GRANDFATHERED OR OPTED-OUT THIS MONTH'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (5) LS=133 PS=76
WRITE   (5) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Waiting to be purged'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (6) LS=133 PS=76
WRITE   (6) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Being serviced but no spouse'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (7) LS=133 PS=76
WRITE   (7) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Widows who died this month'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (8) LS=133 PS=76
WRITE   (8) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
*   'DE-GF/Opt-Out/Pipeline members'
  'DE-GF/Opt-Out members'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (9) LS=133 PS=76
WRITE   (9) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'AFSC Widow Clients (6xxxxx and Plan ??W)'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT  (10) LS=133 PS=76
WRITE   (10) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
*    'Dues Paying NXT Policies'
  'Unused as of 11/07/2005'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
MOVE *DATN TO #TODAY-YYYYMMDD
*
MOVE *DATN TO #YYYYMMDD
SUBTRACT 31 FROM #YYYY
MOVE #YYYYMMDD TO #PURGE-DOB
*
MOVE *DATN TO #YYYYMMDD
MOVE 1 TO #DD
ADD 1 TO #MM
*
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
MOVE #YYYYMMDD TO #NEXT-MON /* used for DAILY processing
*
READ WORK 1 ONCE RECORD #JCL-PARM
MOVE #JCL-WEEKLY-MONTHLY TO #FREQ
READ WORK 1 ONCE RECORD #JCL-PARM
READ WORK 1 ONCE RECORD #UPDATE-NOUPDATE
WRITE 'JCL-PARM = ' #JCL-PARM
WRITE 'WEEKLY-MONTHLY = ' #FREQ
WRITE 'UPDATE-NOUPDATE = ' #UPDATE-NOUPDATE
*
MOVE #JCL-YYYY TO #YYYY
MOVE #JCL-MM   TO #MM
MOVE #JCL-DD   TO #DD
MOVE #YYYYMMDD TO #PARM-YYYYMMDD
*
IF #FREQ = 'DAILY'
  MOVE #NEXT-MON TO #PARM-YYYYMMDD
END-IF
WRITE 'FINAL PARM DATE = ' #PARM-YYYYMMDD
*
MOVE #PARM-YYYYMMDD TO #YYYYMMDD
SUBTRACT 1 FROM #YYYY
SUBTRACT 1 FROM #MM
*
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
MOVE #YYYYMMDD TO #13-MONS-AGO
*
MOVE #PARM-YYYYMMDD TO #YYYYMMDD
SUBTRACT 1 FROM #YYYY
ADD 1 TO #MM
*
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
MOVE #YYYYMMDD TO #11-MONS-AGO
*
MOVE #PARM-YYYYMMDD TO #YYYYMMDD
SUBTRACT 1 FROM #YYYY
MOVE #YYYYMMDD TO #1-YEAR-AGO
*
MOVE #PARM-YYYYMMDD TO #YYYYMMDD
SUBTRACT 1 FROM #MM
*
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
MOVE #YYYYMMDD TO #1-MON-AGO
#DD := 31
#1-MON-AGO_LAST_DAY := #YYYYMMDD                                 /* bz1
WRITE 'PROCESS DATE = ' #1-MON-AGO 'Last Day = ' #1-MON-AGO_LAST_DAY
*    find latest ms record
RESET #YYYYMMDD
READ MS-V WITH MONTH-KEY = #1-MON-AGO-YYYYMM /* must remain b4 upd test
  MOVE MONTH-KEY TO #YYYYMM
  WRITE 'finding latest ms'  MONTH-KEY
END-READ
WRITE 'latest ms ='  #YYYYMM
*
IF #FREQ NE 'MONTHLY'   /* NOT Needed IF Monthly                /* DW8
  IF #UPDATE-NOUPDATE = 'UPDATE'
    IF   (#YYYYMM = #1-MON-AGO-YYYYMM)
        AND ((#TODAY-YYYYMM = #1-MON-AGO-YYYYMM)
        OR ((#TODAY-YYYYMM = #PARM-YYYYMM) AND (#TODAY-DD = 1)))
      IGNORE
    ELSE
      WRITE 'UPDATE NOT ALLOWED - STOP' #PARM-YYYYMMDD
      STOP
    END-IF
  END-IF
END-IF
*
* below is not needed to create new ms record just for totals
MOVE #PARM-YYYYMMDD TO #YYYYMMDD /* get 2-month-ago for total calcs
SUBTRACT 2 FROM #MM
*
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
*
FIND MS-V WITH MONTH-KEY = #YYYYMM
  WRITE 'found ms rec' #YYYYMM
*
  FOR #I1 1 TO 12
    ADD ME-AFSC-BY-PLAN (#I1) TO #AFSC-LAST-MONTH-MEMBERS
  END-FOR
*
  MOVE ME-AFSC-AAFM-TOTS (1) TO #LAST-MONTH-GF
  MOVE ME-AFSC-AAFM-TOTS (4) TO #LAST-MONTH-BEING-SERVED-GF
  RESET                         #LAST-MONTH-BEING-SERVED-IO
END-FIND
* above is not needed to create new ms record just for totals
*
MOVE #1-MON-AGO TO #YYYYMMDD /* to get previous months gains/losses
READ MD-V BY ENTRY-DATE FROM 07012000
  COMPUTE #INVERSE-DATE = 99999999 - ENTRY-DATE
  IF   (#INV-YYYYMM = #1-MON-AGO-YYYYMM)   /* CURRENT MONTH & YEAR
    IF  (CODE = 'W')  /* spouse/widow death
        AND (MD-V.ISSUE-DATE = 99999999)   /* widow death
*
      PERFORM FIND-ST-RECORD
*
      IF #NOT-FND
        ESCAPE TOP
      END-IF
*
      RESET #WID-AGE #WID-DOD-MSG #MONS-DIFF #WID-DETH-CREDIT PDA-CONTACT    /* TT1
      P-CONTACT-ID := ST-V.MEMBER-CONTACT-ID                                 /* TT1
      CALLNAT 'CONTS001' PDA-CONTACT #DATE-OF-BIRTH-SP #SPOUSE-SEX          /* TT1
      #DATE-OF-BIRTH   := P-DATE-OF-BIRTH                                    /* TT1
*
      IF  (ST-V.DATE-OF-DIVORCE = 0)
          OR (#DATE-OF-BIRTH-SP = 0)                                         /* TT1
        MOVE 'SPS DOB or DOD missing' TO #WID-DOD-MSG
      ELSE
        MOVE ST-V.DATE-OF-DIVORCE TO #YYYYMMDD
        SUBTRACT #DATE-OF-BIRTH-SP FROM #YYYYMMDD                            /* TT1
        MOVE #YYYY TO #WID-AGE
        MOVE #INVERSE-DATE TO #YYYYMMDD
        MOVE 31            TO #DD
*
        IF ST-V.DATE-OF-DIVORCE LT 20000701   /* before companies split
          IF #MM LT 07
            ADD 12 TO #MM
            SUBTRACT 1 FROM #YYYY
          END-IF
          SUBTRACT 20000701 FROM #YYYYMMDD /* diff from 7/1/2000
        ELSE
          IF #MM LT ST-V.DATE-OF-DIVORCE-MM
            ADD 12 TO #MM
            SUBTRACT 1 FROM #YYYY
          END-IF
          SUBTRACT ST-V.DATE-OF-DIVORCE FROM #YYYYMMDD
        END-IF
*
        COMPUTE #MONS-DIFF = (#YYYY * 12 ) + #MM + 1
        RESET #CALC-MONS
*
        IF ST-V.DATE-OF-DEATH GE #1-YEAR-AGO
          MOVE 'Died within 1 yr of Mbr'
            TO #WID-DOD-MSG
        ELSE
          IF #MONS-DIFF LE 3
            IGNORE
          ELSE
            COMPUTE #CALC-MONS = #MONS-DIFF - 3
            IF #WID-AGE GE 90
              COMPUTE #WID-DETH-CREDIT = #CALC-MONS * 1.14
              ADD 1 TO #WIDS-OVER-90
              ADD #CALC-MONS TO #TOT-MONS-OVER-90
              ADD #WID-DETH-CREDIT TO #TOT-WID-DETH-CREDIT-OVER-90
            ELSE
              COMPUTE #WID-DETH-CREDIT = #CALC-MONS * 1.14 * .5
              ADD 1 TO #WIDS-UNDER-90
              ADD #CALC-MONS TO #TOT-MONS-UNDER-90
              ADD #WID-DETH-CREDIT TO #TOT-WID-DETH-CREDIT-UNDER-90
            END-IF
          END-IF
        END-IF
      END-IF
*
      ADD #WID-DETH-CREDIT TO #TOT-WID-DETH-CREDIT
*
      MOVE ST-V.SPOUSE-CONTACT-ID TO #CONTACT-ID                                 /* vt1 \/
      #NAME-F := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME-F,#MIDDLE-NAME-F,#LAST-NAME-F,#SUFFIX-F>)
      COMPRESS #FIRST-NAME-F #MIDDLE-NAME-F #LAST-NAME-F INTO #NAME-SP
*                                                                          /* vt1 /\
      ADD 1 TO #CNT-7
      DISPLAY (7) #CNT-7  (EM=ZZZ9)
        'CN'              ST-V.ID-NUMBER
        'MBR/DOD'         ST-V.DATE-OF-DEATH
        'WID/DOD'         ST-V.DATE-OF-DIVORCE
        'WID/Age'         #WID-AGE
        'WID/DOD/Entry/Date' #INVERSE-DATE
        'Mons/Diff'       #MONS-DIFF
        'Calc/Mons'       #CALC-MONS
        'Wid/Deth/Credit' #WID-DETH-CREDIT
*           'Wid/Name'        ST-V.NAME-SP                                        /* vt1 \/
        'Wid/Name'        #NAME-SP  (AL=34)                                   /* vt1 /\
        'Exceptions'      #WID-DOD-MSG
    END-IF
*
    IF CODE = 'D'    /*  DEATH
      PERFORM FIND-ST-RECORD
*
      IF #NOT-FND
        ESCAPE TOP
      END-IF
*
      ADD 1 TO #CNT-2
      DISPLAY (2) #CNT-2
        'Entry/Date' #INVERSE-DATE
        CODE
        'CN' ID-NUMBER
        PLAN (1)
        'DOD'       ST-V.DATE-OF-DEATH
        'PROC/IND'  ST-V.PROCESS-IND
        'INT/FLAG'  ST-V.INTRO-FLAG
        'SPS/STAT'  ST-V.STATUS-CODE-SP
        'SPS/DOD'   ST-V.DATE-OF-DIVORCE
*
      IF  (ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G')
        WRITE ID-NUMBER 'CURRENT SPS/GEN DEATH' ST-V.INTRO-FLAG
        END TRANSACTION
        ESCAPE TOP
      END-IF
*
      PERFORM CHECK-3SR                                  /* PM11
      IF #SERVICES                                       /* PM11
        IF  (STATUS-CODE-SP = ' ' OR = 'N' OR = 'F')     /* PM11
            OR ((STATUS-CODE-SP = 'D')                      /* PM11
            AND (DATE-OF-DIVORCE LT ST-V.DATE-OF-DEATH))    /* PM11
          ADD 1 TO #MTD-DETHS-3SR-NO-WID                 /* PM11
          ADD 1 TO #MTD-DETHS-GF-NO-WID                  /* PM11
        ELSE                                             /* PM11
          ADD 1 TO #MTD-DETHS-3SR                        /* PM11
          ADD 1 TO #MTD-DETHS-GF                         /* PM11
        END-IF                                           /* PM11
      ELSE                                               /* PM11
        IF ID-NUMBER LT 106030     /* PRE 07/01/2000 - was 106389
          IF ST-V.INTRO-FLAG = 'O' OR = 'P' OR = 'Q' /* INS-ONLY
            ADD 1 TO #MTD-DETHS-IO-PRE-07-01
            IF ST-V.PROCESS-IND = 'D'
              ADD 1 TO #MTD-IO-DETHS-DE-GF
            ELSE
              IF ST-V.PROCESS-IND = 'O'
                ADD 1 TO #MTD-IO-DETHS-OPT-OUT
              ELSE
                ADD 1 TO #MTD-IO-DETHS-IP
              END-IF
            END-IF
          ELSE
            IF PLAN (1) = 'FSO'
                OR (ID-NUMBER = 102276)    /* FSO WHO DIED IN 7/2000
              ADD 1 TO #MTD-DETHS-FSO
            ELSE
              IF  (STATUS-CODE-SP = ' ' OR = 'N' OR = 'F')
                  OR ((STATUS-CODE-SP = 'D')
                  AND (DATE-OF-DIVORCE LT ST-V.DATE-OF-DEATH))
                ADD 1 TO #MTD-DETHS-GF-NO-WID
              ELSE
                ADD 1 TO #MTD-DETHS-GF
              END-IF
            END-IF
          END-IF
        ELSE
          IF ST-V.PROCESS-IND = 'G'
            ADD 1 TO #MTD-DETHS-PL
            ADD 1 TO #MTD-LOSSES-BY-TYPE (1)   /* p/l death
          ELSE
            ADD 1 TO #MTD-DETHS-IO
          END-IF
        END-IF
      END-IF                                          /* PM11
    END-IF
  END-IF
  END TRANSACTION
END-READ
WRITE (7)    'Tot over 90      ' #WIDS-OVER-90
WRITE (7)    'Tot mons over 90 ' #TOT-MONS-OVER-90
WRITE (7)    'Tot cred over 90 ' #TOT-WID-DETH-CREDIT-OVER-90
WRITE (7)    'Tot under 90     ' #WIDS-UNDER-90
WRITE (7)    'Tot mons under 90' #TOT-MONS-UNDER-90
WRITE (7)    'Tot cred under 90' #TOT-WID-DETH-CREDIT-UNDER-90
WRITE (7) // 'Tot Wid deth cred' #TOT-WID-DETH-CREDIT
* STOP    /* <<<<<<<<<<<<<<<<
*
READ ST-V BY WIDOW-KEY FROM '001900'
*
  IF ST-V.STATUS-CODE-SP = 'P' /* Bypass this record if a Force Purge  DW10
      OR ST-V.PROCESS-IND = 'S'   /* PM11
    ESCAPE TOP
  END-IF
*
  MOVE ST-V.SPOUSE-CONTACT-ID TO #CONTACT-ID                                                      /* PM12
  #NAME-F := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME-F,#MIDDLE-NAME-F,#LAST-NAME-F,#SUFFIX-F>) /* PM12
  COMPRESS #FIRST-NAME-F #MIDDLE-NAME-F #LAST-NAME-F INTO #NAME-SP                                /* PM12
*
*  IF   (NAME-SP NE ' ')                                                    /* vt1
  IF (#NAME-SP NE ' ')                                                      /* vt1
      AND (NOT STATUS-CODE-SP = 'D' OR = 'N')
      AND (#DATE-OF-BIRTH-SP NE 0)                                           /* TT1
    IF #DATE-OF-BIRTH-SP LT *DATN - 900000                                   /* TT1
      ADD 1 TO #WIDOWS-OVER-90
    END-IF
    IF #DATE-OF-BIRTH-SP LT *DATN - 910000                                   /* TT1
      ADD 1 TO #WIDOWS-OVER-91
    END-IF
    IF #DATE-OF-BIRTH-SP LT *DATN - 920000                                   /* TT1
      ADD 1 TO #WIDOWS-OVER-92
    END-IF
    IF #DATE-OF-BIRTH-SP LT *DATN - 930000                                   /* TT1
      ADD 1 TO #WIDOWS-OVER-93
    END-IF
    IF #DATE-OF-BIRTH-SP LT *DATN - 940000                                   /* TT1
      ADD 1 TO #WIDOWS-OVER-94
    END-IF
    IF #DATE-OF-BIRTH-SP LT *DATN - 950000                                   /* TT1
      ADD 1 TO #WIDOWS-OVER-95
    END-IF
    IF #DATE-OF-BIRTH-SP LT *DATN - 960000                                   /* TT1
      ADD 1 TO #WIDOWS-OVER-96
    END-IF
  END-IF
*
  IF  (ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G')
    WRITE ID-NUMBER 'DECEASED SPS/GEN' ST-V.INTRO-FLAG
    ESCAPE TOP
  END-IF
*
  PERFORM IS-WIDOW-RECORD-BEING-SERVICED
*
  IF NOT #WIDOW-NOT-SERVICED /* being serviced but no spouse
      AND NOT #HAS-SPS
    ADD 1 TO #CNT-6
    DISPLAY (6) #CNT-6 ID-NUMBER #HAS-FMR-SPS #HAS-DEPS #HAS-HANDI
      #HAS-UNSET-CLMS #HAS-UNSET-POLS
  END-IF
*
  PERFORM CHECK-3SR                                    /* PM11
*
  IF #WIDOW-NOT-SERVICED
    ADD 1 TO #CNT-5
    DISPLAY (5) #CNT-5 ID-NUMBER
      'DATE/ACCT/UPDATE' ST-V.DATE-ACCT-UPDATE
      'DOD'              ST-V.DATE-OF-DEATH
      'MEMBER/FLAG'      ST-V.MEMBER-FLAG
*
    ADD 1 TO #CNT-PUR
*
    ADD 1 TO #WIDOWS-TO-BE-PURGED
    ADD 1 TO #WIDOWS-TOTAL
*
    IF  ((ID-NUMBER LT 106030)     /* pre 07/01/2000
        AND (ST-V.INTRO-FLAG = 'O' OR = 'P' OR = 'Q')) /* INS-ONLY
        OR  ((ID-NUMBER GE 106030)     /* post 07/01/2000 AAFMAA
        AND (ST-V.PROCESS-IND NE 'G')) /* INS-ONLY
        AND NOT #SERVICES                                /* PM11
      WRITE ST-V.ID-NUMBER 'AAFMAA I/O widow not being serviced'
      ADD 1 TO #I-O-WIDOWS-TO-BE-PURGED
    ELSE
      ADD 1 TO #G-F-WIDOWS-TO-BE-PURGED
      IF #SERVICES                                    /* PM11
        ADD 1 TO #3SR-WIDOWS-TO-BE-PURGED             /* PM11
      END-IF                                          /* PM11
    END-IF
  ELSE   /* widow is serviced
    IF NOT #HAS-SPS
      ADD 1 TO #BEING-SERVED-BUT-NO-SPS
    END-IF
*
    ADD 1 TO #WIDOWS-BEING-SERVED  /* include those w/o widows
    ADD 1 TO #WIDOWS-TOTAL
*
*   IF #HAS-SPS   /* added 7/5/2002  removed 7/5/2002
    IF  ((ID-NUMBER LT 106030)     /* pre 07/01/2000
        AND (ST-V.INTRO-FLAG = 'O' OR = 'P' OR = 'Q')) /* INS-ONLY
        OR  ((ID-NUMBER GE 106030)     /* post 07/01/2000 AAFMAA
        AND (ST-V.PROCESS-IND NE 'G')) /* INS-ONLY
        AND NOT #SERVICES                      /* PM11
      WRITE ID-NUMBER 'AAFMAA Dead Ins-only being served'
      ADD 1 TO #I-O-WIDOWS-BEING-SERVED
*
      IF   (DATE-OF-DEATH GE 20000701)      /* DIED AFTER COMP SPLIT
          AND (DATE-OF-DEATH GE #1-YEAR-AGO) /* WITHIN 1 YEAR
          AND (DATE-OF-DEATH LT #1-MON-AGO) /* PRIOR TO  LAST MONTH
        WRITE ID-NUMBER 'I-O Died within the last year'
        ADD 1 TO #I-O-WIDOWS-NOT-BILLABLE
      END-IF
*
      IF   (DATE-OF-DEATH GE 20000701)      /* DIED AFTER COMP SPLIT
          AND (DATE-OF-DEATH GE #11-MONS-AGO)   /* WITHIN 1 YEAR
          AND (DATE-OF-DEATH LT #PARM-YYYYMMDD) /* PRIOR TO  curr MONTH
        ADD 1 TO #I-O-WIDOWS-NOT-BILLABLE-PRJ
      END-IF
    ELSE
      ADD 1 TO #G-F-WIDOWS-BEING-SERVED
      IF #SERVICES                          /* PM11
        ADD 1 TO #3SR-WIDOWS-BEING-SERVED   /* PM11
      END-IF                                /* PM11
*
      IF   (DATE-OF-DEATH GE 20000701)      /* DIED AFTER COMP SPLIT
          AND (DATE-OF-DEATH GE #1-YEAR-AGO) /* WITHIN 1 YEAR
          AND (DATE-OF-DEATH LT #1-MON-AGO) /* PRIOR TO  LAST MONTH
        ADD 1 TO #G-F-WIDOWS-NOT-BILLABLE
        IF #SERVICES                        /* PM11
          ADD 1 TO #3SR-WIDOWS-NOT-BILLABLE /* PM11
        END-IF                              /* PM11
      END-IF
*
      IF   (DATE-OF-DEATH GE 20000701)      /* DIED AFTER COMP SPLIT
          AND (DATE-OF-DEATH GE #11-MONS-AGO)   /* WITHIN 1 YEAR
          AND (DATE-OF-DEATH LT #PARM-YYYYMMDD) /* PRIOR TO  curr MONTH
        ADD 1 TO #G-F-WIDOWS-NOT-BILLABLE-PRJ
        IF #SERVICES                            /* PM11
          ADD 1 TO #3SR-WIDOWS-NOT-BILLABLE-PRJ /* PM11
        END-IF                                  /* PM11
      END-IF
    END-IF
*   END-IF
  END-IF
END-READ
*
READ ST-V BY MEMBER-KEY FROM '001900'
*  ESCAPE BOTTOM /* <<<<<<<<<<<<<<<<<<<<<<<<<<
*
  IF ST-V.STATUS-CODE-SP = 'P' /* Bypass this record if a Force Purge  DW10
      OR ST-V.PROCESS-IND = 'S'   /* PM11
    ESCAPE TOP
  END-IF
*
  IF ST-V.PROCESS-IND = 'C'
    ESCAPE TOP
  END-IF
*
  IF   (WIDOW-FLAG = 'Y')   /* already counted
    ESCAPE TOP
  END-IF
*
  IF ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
    IF NUMBER-MEMBERSHIPS = 0
      ADD 1 TO #SPS-GEN-INACT
    ELSE
      ADD 1 TO #SPS-GEN
    END-IF
    ESCAPE TOP
  END-IF
*
  IF NUMBER-MEMBERSHIPS = 0
    ADD 1 TO #INACTIVE
    ESCAPE TOP
  END-IF
*
  PERFORM CHECK-3SR                /* PM11
*
  RESET #SEG-X #SVC-FEE #DUES-TM   /* DW3
  FOR #I1 1 TO 9
    IF ST-V.STATUS (#I1) = 'D'
      MOVE #I1 TO #SEG-X
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF #I1 LE 9
    CALLNAT 'GDUESSXX' ST-V.ID-NUMBER #SEG-X #SVC-FEE  /* DW3
*
*   IF   (PLAN (#SEG-X) = 'RT' OR = 'LT')   /* DW3                      /* YK1
*       OR ((PLAN-A1 (#SEG-X) GE 'U') AND (PLAN-A1 (#SEG-X) LE 'Z'))    /* YK1
    IF FUNCTION-TERM-POLICY(<PLAN(#SEG-X)>)                             /* YK1
      MOVE TRUE TO #DUES-TM
    END-IF
  END-IF
*
  IF ST-V.ID-NUMBER LT 106030     /* pre 07/01/2000
    IF #SVC-FEE NE 0   /* DW3
      ADD 1 TO #NXT-DUES-B4
      IF #DUES-TM
        ADD 1 TO #NXT-DUES-B4-TM
      END-IF
    END-IF
*
    IF ST-V.PROCESS-IND = 'D'
      ADD 1 TO #DE-GF-B4
      MOVE 'DE-GF ***' TO #TYPE
      PERFORM PRINT-DE-GF
    ELSE
      IF ST-V.PROCESS-IND = 'O'
        ADD 1 TO #OPT-OUT-B4
        MOVE '***OPT-OUT' TO #TYPE
        PERFORM PRINT-DE-GF
      ELSE
        IF ST-V.PROCESS-IND = 'I'
            AND NOT #SERVICES           /* PM11
          ADD 1 TO #I-P-B4
        ELSE
          IF ST-V.PROCESS-IND NE 'G'
              AND NOT #SERVICES         /* PM11
            WRITE ST-V.ID-NUMBER 'Invalid Process-IND =' ST-V.PROCESS-IND
          END-IF
        END-IF
      END-IF
    END-IF
*
    IF ST-V.INTRO-FLAG = 'O' OR = 'P' OR = 'Q' /* INS-ONLY
        AND NOT #SERVICES               /* PM11
      ADD 1 TO #IO-PRE-07-01
    ELSE
      IF PLAN (1) = 'FSO'
        ADD 1 TO #FSO
      ELSE
        ADD 1 TO #GF
        WRITE 'GF-COUNTS' #GF ST-V.ID-NUMBER   /* DW99
        IF #SERVICES                 /* PM11
          ADD 1 TO #3SR              /* PM11
        END-IF                       /* PM11
      END-IF
    END-IF
  ELSE
    IF #SVC-FEE NE 0   /* DW3
      ADD 1 TO #NXT-DUES-AFT
    END-IF
*
    IF #DUES-TM
      ADD 1 TO #NXT-DUES-AFT-TM
    END-IF
*
*   IF (PLAN-A1 (1) GE 'U') AND (PLAN-A1 (1) LE 'Z')         /* YK1
    IF F-LT2-TRUE(<PLAN(1)>)                                 /* YK1
      MOVE 7 TO #BMG-TYPE-X
    ELSE
      DECIDE ON FIRST VALUE PLAN (1)
        VALUE 'OL'  MOVE 1 TO #BMG-TYPE-X
        VALUE '30P' MOVE 2 TO #BMG-TYPE-X
        VALUE '20P' MOVE 3 TO #BMG-TYPE-X
        VALUE '7P'  MOVE 4 TO #BMG-TYPE-X
        VALUE 'RT'  MOVE 5 TO #BMG-TYPE-X
        VALUE 'EZ'  MOVE 5 TO #BMG-TYPE-X  /* Same as RT     /* YK2
        VALUE 'LT'  MOVE 6 TO #BMG-TYPE-X
        VALUE 'GPL','GP2' MOVE 7 TO #BMG-TYPE-X  /* Lump GPL w LT2   DW9   NG3
        value 'GT1' move 7 to #bmg-type-x                                                        /* vt4  
        NONE WRITE ID-NUMBER 'Invalid AAFMAA plan' PLAN (1)
      END-DECIDE
    END-IF
*
    IF ST-V.INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q' /* CAP
      MOVE 1 TO #BMG-CNC-X
    ELSE
      MOVE 2 TO #BMG-CNC-X
    END-IF
*
    IF ST-V.PROCESS-IND = 'G' /* P/L THESE ARE CONSIDERED AFSC BY AFSC
      IF #SERVICES                           /* PM11
        ADD 1 TO #GF                         /* PM11
        ADD 1 TO #3SR                        /* PM11
      ELSE                                   /* PM11
        MOVE 'PIPELINE' TO #TYPE
        PERFORM PRINT-DE-GF
        ADD 1 TO #PL
        WRITE 'PL-COUNTS' #PL ST-V.ID-NUMBER   /* DW99
        ADD 1 TO #BMG-CNTS (1, #BMG-CNC-X, #BMG-TYPE-X)
      END-IF                                 /* PM11
    ELSE
      IF ST-V.PROCESS-IND = 'D'
*       WRITE ST-V.ID-NUMBER 'de-grandfathered pipeline'
        ADD 1 TO #DE-GF-AFT
        MOVE 'DE-PL ***' TO #TYPE
        PERFORM PRINT-DE-GF
      END-IF
*
      IF ST-V.PROCESS-IND = 'O'
        WRITE ST-V.ID-NUMBER 'Opted-Out pipeline'
        ADD 1 TO #OPT-OUT-AFT
        MOVE '***OPT-OUT' TO #TYPE
        PERFORM PRINT-DE-GF
      END-IF
*
      IF ST-V.PROCESS-IND = 'I'
        ADD 1 TO #I-P-AFT
      END-IF
*
      ADD 1 TO #IO    /* I/O after 7/1/2000
*
      RESET #BMG-PC-X
      FIND AT-SSN-V WITH SSN = ST-V.SSN
        IF AT-SSN-V.INTRO-FLAG = 'V'
*           WRITE 'AAFMAA COMBO' ST-V.ID-NUMBER
          MOVE 2 TO #BMG-PC-X
          ESCAPE BOTTOM
        END-IF
      END-FIND
*
      FIND ST-SSN-V WITH SSN = ST-V.SSN
        IF ST-SSN-V.PROCESS-IND = 'S'
*         WRITE 'AAFMAA COMBO' ST-V.ID-NUMBER
          MOVE 2 TO #BMG-PC-X
          ESCAPE BOTTOM
        END-IF
      END-FIND
*
      IF #BMG-PC-X = 2
        ADD 1 TO #BMG-CNTS (#BMG-PC-X, #BMG-CNC-X, #BMG-TYPE-X)
      END-IF
    END-IF
  END-IF
END-READ
*
READ SVC-MEMBER BY SVC-PLAN                                     /* NG1
    STARTING FROM 'PSM'
  IF SVC-PLAN NE 'PSM'
    ESCAPE BOTTOM
  END-IF
  IF SVC-STATUS = 'A'
    ADD +1 TO #PSM-PLANS
  END-IF
*
  #SVC-PAID-TO-DATE := SVC-MEMBER.SVC-ISSUE-DATE
  IF #SVC-PTD-YYYYMM =  #1-MON-AGO-YYYYMM
      AND NOT SVC-STATUS = 'P' OR = 'W'
    ADD +1 TO #PSM-GAINS
  END-IF
*
  #SVC-PAID-TO-DATE := SVC-MEMBER.SVC-TERMINATION-DATE
  IF #SVC-PTD-YYYYMM = #1-MON-AGO-YYYYMM
      AND SVC-STATUS = 'C' OR = 'T'
    ADD +1 TO #PSM-LOSSES
  END-IF
END-READ
*
READ AR-V BY TRANSACTION-DATN
    STARTING FROM #1-MON-AGO  TO #1-MON-AGO_LAST_DAY  /*  bz1
*   #SVC-PAID-TO-DATE := SVC-MEMBER.SVC-ISSUE-DATE                      /* vt2 \/
*   IF #SVC-PTD-YYYYMM NE #1-MON-AGO-YYYYMM
*     ESCAPE BOTTOM
*   END-IF                                                              /* vt2 /\
  IF TXN-CODE = 'DUEP' OR= 'DUER' AND SG-CATEGORY-1 (*) = 'PS'
    ADD CREDIT-AMOUNT TO #PSM-AMOUNT
    SUBTRACT DEBIT-AMOUNT FROM #pSM-AMOUNT
  END-IF
END-READ                                                   /* NG1
*
WRITE ' '
WRITE 'tot being-served but no sps=' #BEING-SERVED-BUT-NO-SPS
WRITE (8) 'tot DE-GF b4      =' #DE-GF-B4
WRITE (8) 'tot opt-out b4    =' #OPT-OUT-B4
WRITE (8) 'tot I-P remain b4 =' #I-P-B4
WRITE (8) 'tot I-P b4        =' #IO-PRE-07-01
WRITE (8) 'tot GF            =' #GF
WRITE (8) 'tot 3SR           =' #3SR                  /* PM11
WRITE (8) 'tot NXT-DUES-b4   =' #NXT-DUES-B4   /* DW3
WRITE (8) 'tot NXT-DUES-b4-term    =' #NXT-DUES-B4-TM /* DW3
*
WRITE (8) 'tot DE-GF aft     =' #DE-GF-AFT
WRITE (8) 'tot opt-out aft   =' #OPT-OUT-AFT
WRITE (8) 'tot I-P remain aft=' #I-P-AFT
WRITE (8) 'tot I-P aft       =' #IO
*
WRITE (8) 'tot-I-P        =' #IO-PRE-07-01
WRITE (8) 'pipeline       =' #PL
WRITE (8) 'tot NXT-DUES-aft  =' #NXT-DUES-AFT  /* DW3
WRITE (8) 'tot NXT-DUES-aft-term  =' #NXT-DUES-AFT-TM  /* DW3
*
WRITE (8) 'tot Deths de-gf  =' #MTD-IO-DETHS-DE-GF
WRITE (8) 'tot Deths Opt-Out=' #MTD-IO-DETHS-OPT-OUT
WRITE (8) 'tot Deths remain =' #MTD-IO-DETHS-IP
WRITE (8) 'tot Deths I-o    =' #MTD-DETHS-IO-PRE-07-01
*
WRITE 'Total Wid deth cred' #TOT-WID-DETH-CREDIT
WRITE 'Widows over age 90=' #WIDOWS-OVER-90
WRITE 'Widows over age 91=' #WIDOWS-OVER-91
WRITE 'Widows over age 92=' #WIDOWS-OVER-92
WRITE 'Widows over age 93=' #WIDOWS-OVER-93
WRITE 'Widows over age 94=' #WIDOWS-OVER-94
WRITE 'Widows over age 95=' #WIDOWS-OVER-95
WRITE 'Widows over age 96=' #WIDOWS-OVER-96
*
COMPUTE #MTD-LOSSES-NON-DETHS-GF = #LAST-MONTH-GF
  - #MTD-DETHS-GF - #MTD-DETHS-GF-NO-WID - #GF
*
COMPUTE #MTD-DETHS-TOTAL =
  #MTD-DETHS-GF
  + #MTD-DETHS-GF-NO-WID
  + #MTD-DETHS-IO-PRE-07-01
  + #MTD-DETHS-PL
  + #MTD-DETHS-IO
  + #MTD-DETHS-FSO
COMPUTE #WIDOWS-AFSC-TOTAL =
  #WIDOWS-AFSC-BEING-SERVICED
  + #WIDOWS-AFSC-TO-BE-PURGED
COMPUTE #WIDOWS-TOTAL =
  #WIDOWS-BEING-SERVED
  + #WIDOWS-TO-BE-PURGED
COMPUTE #I-O-WIDOWS-BILLABLE =
  #LAST-MONTH-BEING-SERVED-IO
  - #I-O-WIDOWS-NOT-BILLABLE
COMPUTE #G-F-WIDOWS-BILLABLE =  /* adjust for changed during month
  #LAST-MONTH-BEING-SERVED-GF
  - #G-F-WIDOWS-NOT-BILLABLE
*
COMPUTE #AAFMAA-TOTAL =
  #IO-PRE-07-01
  + #GF
  + #FSO
  + #PL
  + #IO
*
WRITE 'CURRENT MONTHS DEATHS FOR AAFMAA MONTH PRECEEDING' #JCL-MM
WRITE #MTD-DETHS-GF           'FULL SERVICE GRANDFATHERED w widow'
WRITE #MTD-DETHS-GF-NO-WID    'FULL SERVICE GRANDFATHERED with no widow'
WRITE #MTD-DETHS-3SR           'FULL SERVICE 3SR w widow'                 /* PM11
WRITE #MTD-DETHS-3SR-NO-WID    'FULL SERVICE 3SR with no widow'           /* PM11
WRITE #MTD-DETHS-IO-PRE-07-01 'INS-ONLY CORE-SERVICE BEFORE 7/1/2000'
WRITE #MTD-DETHS-PL           'PIPELINE'
WRITE #MTD-DETHS-IO           'INS-INLY CORE-SERVICE AFTER 7/1/2000'
WRITE #MTD-DETHS-FSO          'FSO'
WRITE '__________'
WRITE #MTD-DETHS-TOTAL        'TOTAL MTD DEATHS'
*
WRITE 'CURRENT DATA-BASE DEATHS STATS'
WRITE #WIDOWS-BEING-SERVED   'WIDOWS-AAFMAA BEING SERVICED'
WRITE #WIDOWS-TO-BE-PURGED   'WIDOWS-AAFMAA WAITING TO BE PURGED'
WRITE '__________'
WRITE #WIDOWS-TOTAL          'TOTAL AAFMAA WIDOWS'
*
WRITE #G-F-WIDOWS-BEING-SERVED   'G-F-WIDOWS-AAFMAA BEING SERVICED'
WRITE #G-F-WIDOWS-TO-BE-PURGED   'G-F-WIDOWS-AAFMAA WAITING TO BE PRGED'
WRITE #3SR-WIDOWS-BEING-SERVED   '3SR-WIDOWS-AAFMAA BEING SERVICED'        /* PM11
WRITE #3SR-WIDOWS-TO-BE-PURGED   '3SR-WIDOWS-AAFMAA WAITING TO BE PRGED'   /* PM11
WRITE #I-O-WIDOWS-BEING-SERVED   'I-O-WIDOWS-AAFMAA BEING SERVICED'
WRITE #I-O-WIDOWS-TO-BE-PURGED   'I-O-WIDOWS-AAFMAA WAITING TO BE PRGED'
*
WRITE 'CURRENT DATA-BASE ALIVE STATS'
WRITE #GF                    'GRAND-FATHERED FULL SERVICE'
WRITE #3SR                   '3SR FULL SERVICE'                            /* PM11
WRITE #IO-PRE-07-01          'INS-ONLY BEFORE 7/1/2000 CORE SERVICES'
WRITE #PL                    'PIPELINE'
WRITE #IO                    'INS-ONLY AFTER 7/1/2000 CORE-SERVICES'
WRITE #FSO                   'FSO (NOT INCLUDED IN GF)'
WRITE '__________'
WRITE #AAFMAA-TOTAL          'TOTAL AAFMAA RECORDS'
WRITE #SPS-GEN               'SPS-AND GEN active'
WRITE #SPS-GEN-INACT         'SPS-AND GEN inactive'
WRITE #INACTIVE              'INACTIVE'
*
WRITE '***************'
WRITE 'AAFMAA GRANDFATHERED MEMBERS'
WRITE #LAST-MONTH-GF      'BEGINNING OF MONTH MEMBERS'
WRITE #MTD-DETHS-GF       'LOSSES DEATHS with widow'
WRITE #MTD-DETHS-3SR      'LOSSES DEATHS 3SR with widow'                    /* PM11
WRITE #MTD-DETHS-GF-NO-WID 'LOSSES DEATHS with no widow'
WRITE #MTD-DETHS-3SR-NO-WID 'LOSSES DEATHS 3SR with no widow'               /* PM11
WRITE #MTD-LOSSES-NON-DETHS-GF      'GF-LOSSES CSV/LAPSE/RESIGN'
WRITE #MTD-LOSSES-NON-DETHS-3SR  '3SR-LOSSES CSV/LAPSE/RESIGN'
WRITE #GF                 'END OF-MONTH MEMBERS'
WRITE #3SR                'END OF-MONTH 3SR'                                /* PM11
*
WRITE '***************'
WRITE 'AAFMAA GRANDFATHERED WIDOWS'
WRITE #LAST-MONTH-BEING-SERVED-GF 'G-F WIDOWS-AAFMAA BEING SERVICED'
WRITE #G-F-WIDOWS-NOT-BILLABLE 'G-f  DIED WITHin LAST Yr AFTER 7/1/2000'
WRITE #3SR-WIDOWS-NOT-BILLABLE '3SR  DIED WITHin LAST Yr AFTER 7/1/2000'    /* PM11
WRITE #G-F-WIDOWS-BILLABLE     'G-F WIDOWS BILLABLE'
WRITE #3SR-WIDOWS-BILLABLE     '3SR WIDOWS BILLABLE'                        /* PM11
WRITE #LAST-MONTH-BEING-SERVED-IO 'I-O WIDOWS-AAFMAA BEING SERVICED'
WRITE #I-O-WIDOWS-NOT-BILLABLE 'I-O  DIED WITHin LAST Yr AFTER 7/1/2000'
WRITE #I-O-WIDOWS-BILLABLE     'I-O WIDOWS BILLABLE'
WRITE #G-F-WIDOWS-NOT-BILLABLE-PRJ 'G-f  DIED proj LST Yr AFT 7/1/2000'
WRITE #3SR-WIDOWS-NOT-BILLABLE-PRJ '3SR  DIED proj LST Yr AFT 7/1/2000'     /* PM11
WRITE #I-O-WIDOWS-NOT-BILLABLE-PRJ 'I-O  DIED proj LST Yr AFT 7/1/2000'
*
WRITE 'BMG COUNTS'
WRITE '  PIPELINE - CAP BY TYPE (OL/30/20/7P/RT/LT)'
DISPLAY #BMG-CNTS (1, 1, *)
WRITE '  PIPELINE - NON-CAP BY TYPE (OL/30/20/7P/RT/LT/VT)'
DISPLAY #BMG-CNTS (1, 2, *)
WRITE '  COMBO - CAP BY TYPE (OL/30/20/7P/RT/LT/VT)'
DISPLAY #BMG-CNTS (2, 1, *)
WRITE '  COMBO - NON-CAP BY TYPE (OL/30/20/7P/RT/LT/VT)'
DISPLAY #BMG-CNTS (2, 2, *)
*
write '***************'                                 /* NG1
WRITE 'Premier Services - Active Plans = ' #PSM-PLANS   /* NG1
write 'Premier Services - Gains        = ' #PSM-GAINS   /* NG1
write 'Premier Services - Losses       = ' #PSM-LOSSES  /* NG1
write 'Premier Services - Amount       = ' #PSM-AMOUNT  /* NG1
*
MOVE #1-MON-AGO TO #YYYYMMDD
FIND MS-V WITH MONTH-KEY = #YYYYMM
  WRITE 'found ms key' #YYYYMM 'to updated counts'
  MOVE #MTD-DETHS-GF          TO ME-AFSC-G-F-LOSSES-DEATH
  ADD  #MTD-DETHS-GF-NO-WID   TO ME-AFSC-G-F-LOSSES-DEATH
  MOVE #MTD-LOSSES-NON-DETHS-GF TO ME-AFSC-G-F-LOSSES-NON-DEATH
  MOVE #GF                      TO ME-AFSC-AAFM-TOTS   (1)
  MOVE #IO-PRE-07-01            TO ME-AFSC-AAFM-TOTS   (2)
  MOVE #IO                      TO ME-AFSC-AAFM-TOTS   (3)
  MOVE #PL                      TO ME-AFSC-AAFM-TOTS   (4)
* MOVE #FSO                     TO ME-AFSC-AAFM-TOTS   (5)                /* PM11
  MOVE #3SR                     TO ME-AFSC-AAFM-TOTS   (5)                /* PM11
  MOVE #MTD-DETHS-GF            TO ME-AFSC-AAFM-DEATHS (1)
  MOVE #MTD-DETHS-GF-NO-WID     TO ME-AFSC-AAFM-DEATHS (2)
  MOVE #MTD-DETHS-IO-PRE-07-01  TO ME-AFSC-AAFM-DEATHS (3)
  MOVE #MTD-DETHS-IO            TO ME-AFSC-AAFM-DEATHS (4)
  MOVE #MTD-DETHS-PL            TO ME-AFSC-AAFM-DEATHS (5)
  MOVE #MTD-DETHS-FSO           TO ME-AFSC-AAFM-DEATHS (6)
  MOVE #WIDOWS-BEING-SERVED     TO ME-AFSC-AAFM-WIDS-SERVED
  MOVE #WIDOWS-TO-BE-PURGED     TO ME-AFSC-AAFM-WIDS-NOT-SERVED
  MOVE #WIDOWS-AFSC-BEING-SERVICED  TO ME-AFSC-WIDS-SERVED
  MOVE #WIDOWS-AFSC-TO-BE-PURGED    TO ME-AFSC-WIDS-NOT-SERVED
  MOVE #G-F-WIDOWS-NOT-BILLABLE     TO ME-AFSC-AAFM-DOD-CURR-YR-GF
  MOVE #G-F-WIDOWS-NOT-BILLABLE-PRJ TO ME-AFSC-AAFM-DOD-CURR-YR-PRJ-GF
  MOVE #G-F-WIDOWS-BEING-SERVED     TO ME-AFSC-AAFM-WIDS-SERVED-GF
  MOVE #G-F-WIDOWS-TO-BE-PURGED     TO ME-AFSC-AAFM-WIDS-NOT-SERVED-GF
  MOVE #I-O-WIDOWS-NOT-BILLABLE     TO ME-AFSC-AAFM-DOD-CURR-YR-IO
  MOVE #I-O-WIDOWS-NOT-BILLABLE-PRJ TO ME-AFSC-AAFM-DOD-CURR-YR-PRJ-IO
  MOVE #I-O-WIDOWS-BEING-SERVED     TO ME-AFSC-AAFM-WIDS-SERVED-IO
  MOVE #I-O-WIDOWS-TO-BE-PURGED     TO ME-AFSC-AAFM-WIDS-NOT-SERVED-IO
  MOVE #WIDS-OVER-90                TO ME-AFSC-WID-DETHS-OVR90-GF
  MOVE #TOT-MONS-OVER-90            TO ME-AFSC-WID-DETHS-MONS-OVR90-GF
  MOVE #TOT-MONS-OVER-90            TO ME-AFSC-WID-DETHS-MONS-OVR90-GF
  MOVE #WIDS-UNDER-90               TO ME-AFSC-WID-DETHS-UND90-GF
  MOVE #TOT-MONS-UNDER-90           TO ME-AFSC-WID-DETHS-MONS-UND90-GF
* below added 5/28/2002
  MOVE #DE-GF-B4    TO ME-AFSC-AAFM-I-P-B4 (1)
  MOVE #OPT-OUT-B4  TO ME-AFSC-AAFM-I-P-B4 (2)
  MOVE #I-P-B4      TO ME-AFSC-AAFM-I-P-B4 (3)
  MOVE #DE-GF-AFT   TO ME-AFSC-AAFM-I-P-AFT (1)
  MOVE #OPT-OUT-AFT TO ME-AFSC-AAFM-I-P-AFT (2)
  MOVE #I-P-AFT     TO ME-AFSC-AAFM-I-P-AFT (3)
  MOVE #MTD-IO-DETHS-DE-GF   TO ME-AFSC-AAFM-DEATHS-I-P (1)
  MOVE #MTD-IO-DETHS-OPT-OUT TO ME-AFSC-AAFM-DEATHS-I-P (2)
  MOVE #MTD-IO-DETHS-IP      TO ME-AFSC-AAFM-DEATHS-I-P (3)
*
  me-psm-plans  := #PSM-PLANS       /* NG1
  me-psm-gains  := #PSM-GAINS       /* NG1
  me-psm-LOSSES := #psm-losses      /* NG1
  me-psm-amount := #psm-amount      /* NG1
  WRITE MS-V
*
  IF #UPDATE-NOUPDATE = 'UPDATE'
    UPDATE (1332)
    END TRANSACTION
  END-IF
END-FIND
*
* * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE IS-WIDOW-RECORD-BEING-SERVICED
* * * * * * * * * * * * * * * * * * * * * *
*
* * *THIS LOGIC IS ALSO IN ATHPM50A
*
RESET #HAS-SPS #HAS-FMR-SPS     /* eligible spouses
RESET #HAS-DEPS #HAS-HANDI      /* eligible dependants
RESET #HAS-UNSET-CLMS #HAS-UNSET-POLS  /* unsettled claims/policies
*
RESET #WIDOW-NOT-SERVICED
MOVE TRUE TO #CLMS-FOUND
*
FIND (1) CL-V WITH ID-NUMBER = ST-V.ID-NUMBER
  IF NO RECORDS FOUND
    RESET #CLMS-FOUND
  END-NOREC
END-FIND
*
MOVE TRUE TO #FIRS-FOUND
FIND (1) FR-V WITH WIDOW-KEY = ID-NBR
  IF NO RECORDS FOUND
    RESET #FIRS-FOUND
  END-NOREC
END-FIND
*
* SEPARATE ST-V.NAME-SP LEFT INTO #LAST-NAME #FIRST-NAME #EXTRA1 #EXTRA2         /* vt1 \/
*                                      WITH DELIMITER ','
*
* IF   ((ST-V.NAME-SP NE ' ')         /* ALIVE SPOUSE STILL EXISTS
IF ((#NAME-SP NE ' ')
*  AND (#FIRST-NAME NE 'NONE')        /* INDICATES NO SPOUSE                     /* vt1 /\
    AND (NOT ST-V.STATUS-CODE-SP = 'D' OR = 'N')
    AND (ST-V.DATE-OF-DIVORCE = 0))    /* SPS DEATH DATE
* OR  (ST-V.ID-NUMBER = 14472)/*ALWAYS SERV THIS CN (6/1997) /now purged
  IF ST-V.STATUS-CODE-SP = 'F'
    MOVE TRUE TO #HAS-FMR-SPS
  ELSE
    MOVE TRUE TO #HAS-SPS
  END-IF
ELSE
  IF #FIRS-FOUND
    FOR #I1 1 TO FR-V.C*DEPENDENT-TABLE /* ELIGIBLE FOR BENEFITS
      IF  (FR-V.DEPN-STATUS-CD (#I1) = 'I' OR = 'J' OR = 'K' OR = 'L')
        MOVE TRUE TO #HAS-HANDI
      END-IF
*
      IF FR-V.DEPN-DATE-OF-BIRTH (#I1) GE #PURGE-DOB
        MOVE TRUE TO #HAS-DEPS
      END-IF
    END-FOR
*
    FOR #I1 1 TO FR-V.C*POLICY-TABLE
      IF   (FR-V.POL-DATE-CLM-FILED (#I1) NE 0)
          AND (FR-V.POL-DATE-CLM-SETTLED (#I1) = 0)
        MOVE TRUE TO #HAS-UNSET-POLS
        ESCAPE BOTTOM
      END-IF
    END-FOR
  END-IF
*
  IF #CLMS-FOUND
    FOR #I1 1 TO CL-V.C*CLAIM-INFO
      IF   (CL-V.DATE-FILED (#I1) NE 0)
          AND (CL-V.DATE-SETTLED (#I1) = 0)
          AND (NOT (CL-V.STATUS (#I1) = 'G' OR = 'D'))
        MOVE TRUE TO #HAS-UNSET-CLMS
        ESCAPE BOTTOM
      END-IF
    END-FOR
  END-IF
*
  IF  #HAS-DEPS
      OR #HAS-HANDI
      OR #HAS-UNSET-CLMS
      OR #HAS-UNSET-POLS
    IGNORE
  ELSE
    MOVE TRUE TO #WIDOW-NOT-SERVICED
  END-IF
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE PRINT-DE-GF
* * * * * * * * * * * * * * *
*
RESET #YYYYMMDD
FOR #I2 1 TO 9
  IF CONV-DURATION (#I2) = 999
    MOVE ST-V.X-LOAN-DATE (#I2) TO #YYYYMMDD
    ADD 2 TO #YYYY
    ADD 6 TO #MM
    IF #MM GT 12
      SUBTRACT 12 FROM #MM
      ADD 1 TO #YYYY
    END-IF
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF #I2 GT 9
  MOVE 1 TO #I2
END-IF
*
RESET #NT-MSG #DE-GF-THIS-MON
IF ST-V.PROCESS-IND = 'D'
  FIND (1) NT-V WITH ID-NUMBER = ST-V.ID-NUMBER
    FOR #I1 1 TO 60
      IF NOTE-TEXT (#I1) = MASK ('*#DE-GF')
        MOVE NOTE-TEXT (#I1) TO #NT-MSG
        COMPRESS DG-DATE-YYYY (#I1) DG-DATE-MM (#I1) DG-DATE-DD (#I1)
          INTO #YYYYMMDD-A LEAVING NO
        IF #YYYYMM = #1-MON-AGO-YYYYMM
          MOVE TRUE TO #DE-GF-THIS-MON
        END-IF
        ESCAPE BOTTOM
      END-IF
    END-FOR
  END-FIND
END-IF
*
IF ST-V.PROCESS-IND = 'O'
  FIND (1) NT-V WITH ID-NUMBER = ST-V.ID-NUMBER
    FOR #I1 1 TO 60
      IF NOTE-TEXT (#I1) = MASK ('*#OPTED-OUT')
        MOVE NOTE-TEXT (#I1) TO #NT-MSG
        COMPRESS OO-DATE-YYYY (#I1) OO-DATE-MM (#I1) OO-DATE-DD (#I1)
          INTO #YYYYMMDD-A LEAVING NO
        IF #YYYYMM = #1-MON-AGO-YYYYMM
          MOVE TRUE TO #DE-GF-THIS-MON
        END-IF
        ESCAPE BOTTOM
      END-IF
    END-FOR
  END-FIND
END-IF
*
RESET #PDA-ADDRESS #RANK                            /*  vt1
MOVE ST-V.MEMBER-CONTACT-ID TO #CONTACT-ID #ADD-CONTACT-ID  #CONTACT-ID-R                /* vt1 \/
#NAME-F := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME-F,#MIDDLE-NAME-F,#LAST-NAME-F,#SUFFIX-F>)
COMPRESS #FIRST-NAME-F #MIDDLE-NAME-F #LAST-NAME-F INTO #NAME
*
CALLNAT 'addn0001' #PDA-ADDRESS
#ADDRESS-1 := #ADD-LINE-1
#ADDRESS-2 := #ADD-LINE-2
#ADDRESS-3 := #ADD-LINE-3
*
CALLNAT 'rankn001' #PDA-RANK
#RANK := #RANK-ABBR                                                                       /* vt1 /\
*
IF #DE-GF-THIS-MON
  ADD 1 TO #CNT-4
  DISPLAY (4) #CNT-4
    'CN'      ST-V.ID-NUMBER
    'Type'    #TYPE
    'Mil/ID'  ST-V.MILITARY-SERVICE
    'Mil/Stat' ST-V.MILITARY-STATUS
*   ST-V.RANK                                                                     /* vt1 \/
    #RANK (AL=3)
*   ST-V.NAME
    #NAME  (AL=30)                                                                /* vt1  /\
    'PROC/IND' ST-V.PROCESS-IND
    'INT/FLG' ST-V.INTRO-FLAG
    'Issue/Date' ST-V.ISSUE-DATE (#I2)
    'Loan/Date' ST-V.X-LOAN-DATE   (#I2)
    'Loan/Amt ' ST-V.X-LOAN-AMOUNT (#I2)
    'Loan/end ' #YYYYMMDD
    'plan'      ST-V.PLAN (1)
    'pay/stat ' ST-V.PAY-STATUS (1)
  WRITE (4) ' '
*
  IF #NT-MSG NE ' '
    WRITE (4) #NT-MSG
    WRITE (4) ' '
  END-IF
*
  RESET #PHONEN1M(*)                            /* bz1
  MOVE 'H' TO #PH-TYPE (1)                      /* bz1                             /* vt1 \/
  CALLNAT 'phonen1M' #CONTACT-ID #PHONEN1M(*) V_RC  /* bz1
  MOVE #PHONE(1) TO #HOME-PHONE                     /* bz1
*
  RESET #PHONEN1M(*)                            /* bz1
  MOVE 'W' TO #PH-TYPE (1)                      /* bz1
  CALLNAT 'phonen1M' #CONTACT-ID #PHONEN1M(*) V_RC /* bz1
  MOVE #PHONE(1) TO #WORK-PHONE                    /* bz1
*                                                                   /* vt1 /\
*
  WRITE (4)  '  ' #ADDRESS-1 #ADDRESS-2 #ADDRESS-3                           /* vt1
    #ADD-ZIP-CODE (EM=99999-9999)     /* NG2
    'Home' #HOME-PHONE
    'Work' #WORK-PHONE                                                     /* vt1 /\
  WRITE (4) ' '
END-IF
*
ESCAPE ROUTINE   /* below print removed 7/8/2005   KRM   /* DW4
IF ST-V.PROCESS-IND NE 'G' /* P/L are bypassed a/o 7/5/2002
  ADD 1 TO #CNT-8
  DISPLAY (8) #CNT-8
    'CN'      ST-V.ID-NUMBER
    'Type'    #TYPE
    'Mil/ID'  ST-V.MILITARY-SERVICE
    'Mil/Stat' ST-V.MILITARY-STATUS
*    ST-V.RANK                                                             /* vt1 \/
    #RANK (AL=3)
*    ST-V.NAME
    #NAME  (AL=30)                                                        /* vt1 /\
    'PROC/IND' ST-V.PROCESS-IND
    'INT/FLG' ST-V.INTRO-FLAG
    'Issue/Date' ST-V.ISSUE-DATE (#I2)
    'Loan/Date' ST-V.X-LOAN-DATE   (#I2)
    'Loan/Amt ' ST-V.X-LOAN-AMOUNT (#I2)
    'Loan/end ' #YYYYMMDD
    'plan'      ST-V.PLAN (1)
    'pay/stat ' ST-V.PAY-STATUS (1)
*
  IF #NT-MSG NE ' '
    WRITE (8) #NT-MSG
  END-IF
*
*    WRITE (8)  '  ' ADDRESS-1 ADDRESS-2 ADDRESS-3                        /* vt1
  WRITE (8)  '  ' #ADDRESS-1 #ADDRESS-2 #ADDRESS-3                     /* vt1
    #ADD-ZIP-CODE (EM=99999-9999)                       /* NG2
*           'Home'TELE-NUMBER (EM=999-999-9999)                           /* vt1 \/
*           'Work' NXT-OF-KIN-TELE-NUMBER (EM=999-999-9999)
    'Home' #HOME-PHONE
    'Work' #WORK-PHONE                                           /* vt1 /\
END-IF
*
END-SUBROUTINE
*
*********************************
DEFINE SUBROUTINE FIND-ST-RECORD
********************************
RESET #NOT-FND
FIND ST-V WITH MEMBER-KEY = MD-V.ID-NUMBER-A
  IF NO RECORDS FOUND
    FIND ST-V WITH WIDOW-KEY = MD-V.ID-NUMBER-A
      IF NO RECORDS FOUND
        MOVE TRUE TO #NOT-FND
        WRITE 'ST NOT FOUND USING MD ID-NUMBER'  MD-V.ID-NUMBER
        WRITE   'MD CODE=' MD-V.CODE
        WRITE   'MD USER=' MD-V.USER
        WRITE   'MD ENTRY DATE=' MD-V.ENTRY-DATE
        WRITE   'MD REC-ISN=' MD-V.REC-ISN
      END-NOREC
    END-FIND
  END-NOREC
END-FIND
*
IF NOT #NOT-FND
    AND (ST-V.STATUS-CODE-SP = 'P') /* Bypass this record if a Force Purge  DW10
  MOVE TRUE TO #NOT-FND
END-IF
*
IF NOT #NOT-FND
    AND (ST-V.PROCESS-IND = 'S')   /* Bypass this record if SERVICES only   PM11
  MOVE TRUE TO #NOT-FND
END-IF
*
END-SUBROUTINE
*
*********************************
DEFINE SUBROUTINE CHECK-3SR  /* PM11
*********************************
*
#SERVICES-CN        := ST-V.ID-NUMBER
#SERVICES-PARM-DATE := *DATN
*
CALLNAT 'SVCN0001'
  #PDA-AAFMAA-SERVICES
*
END-SUBROUTINE
*
ON ERROR                                 /* vt3 \/
  PRINT *ERROR-NR *ERROR-LINE
    / C*DEPENDENT-TABLE
    ID-NBR
END-ERROR                                /* vt3 /\
END
