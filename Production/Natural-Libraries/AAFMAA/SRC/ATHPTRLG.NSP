* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPTRLG - READS BATCH TRLOF FL AND SELECTED PRINTS DETAIL
*
DEFINE DATA
LOCAL
*
* * * *   T R A N S A C T I O N   F I L E * * * * * * * * * * *
*
*  WORK FILE RECORD - ACCOUNTING-REGISTER
*
1 ACCT-RECORD (A220)
1 REDEFINE ACCT-RECORD
  2 ACCT-TYPE        (A1)     /* INIT<'B'>
  2 ACCT-FILL1       (A3)
  2 ACCT-CN-NUMBER
    3 ACCT-CN-LIT    (A2)     /* INIT<'CN'>
    3 ACCT-ID        (N6)
    3 ACCT-CN-FILL   (A1)
  2 ACCT-ACCT-DATE   (N6)     /* FORMAT 'MMDDYY'
  2 REDEFINE ACCT-ACCT-DATE
   3 ACCT-ACCT-DT-MM  (N2)
   3 ACCT-ACCT-DT-DD  (N2)
   3 ACCT-ACCT-DT-YY  (N2)
  2 ACCT-CODE        (A4)
  2 ACCT-COL         (A1)     /* SEQUENCE NO FOR MULTI TXNS
  2 ACCT-NAME        (A25)
  2 ACCT-FILL2       (A1)
  2 ACCT-CERT        (A5)     /* NOT USED
  2 ACCT-NO          (A3)
  2 ACCT-LDTE        (A6)     /* LAST ACCTG UPDATE MMDDYY
  2 ACCT-DEBIT-AMT   (N7.2)
  2 ACCT-CREDIT-AMT  (N7.2)
  2 ACCT-REF         (A10)    /* NOT USED
  2 ACCT-DESCRIPTION (A20)
  2 ACCT-MSG-CODE    (A1)
  2 ACCT-SERVICE-NO  (A10)    /* NOT USED
  2 ACCT-AALP-FLAG   (A1)
  2 ACCT-CLERK       (A4)
  2 ACCT-TRDATE      (N6)     /* MMDDYY
  2 REDEFINE ACCT-TRDATE
   3 ACCT-TRDATE-MM  (N2)
   3 ACCT-TRDATE-DD  (N2)
   3 ACCT-TRDATE-YY  (N2)
  2 ACCT-TRTIME      (N6)     /* HHMMSS
  2 ACCT-TERMINAL    (A4)
* 2 ACCT-FILLER      (A64)
*
1 #COUNTERS
  2 #RECS-READ        (P9)
  2 #RECS-READ-B      (P9)
  2 #RECS-SELECTED    (P9)
  2 #RECS-WRITTEN     (P9)
  2 #CNT              (P5)
  2 #CNT-3            (P5)
  2 #I1               (I2)
  2 #I2               (I2)
  2 #LAST-TIME        (N6)
*
  2 #SUB-PRNP         (P9.2)
  2 #SUB-NEWL         (P9.2)
  2 #SUB-ADDL         (P9.2)
  2 #SUB-CAPI         (P9.2)
  2 #SUB-PADJ-D       (P9.2)
  2 #SUB-PADJ-C       (P9.2)
  2 #SUB-CADJ-D       (P9.2)
  2 #SUB-CADJ-C       (P9.2)
  2 #SUB-CVIN         (P9.2)
  2 #SUB-UPDI         (P9.2)
  2 #SUB-ETIT         (P9.2)
  2 #SUB-FLNP         (P9.2)
  2 #SUB-PREP         (P9.2)
*
  2 #TOT-PRNP         (P9.2)
  2 #TOT-NEWL         (P9.2)
  2 #TOT-ADDL         (P9.2)
  2 #TOT-CAPI         (P9.2)
  2 #TOT-PADJ-D       (P9.2)
  2 #TOT-PADJ-C       (P9.2)
  2 #TOT-CADJ-D       (P9.2)
  2 #TOT-CADJ-C       (P9.2)
  2 #TOT-CVIN         (P9.2)
  2 #TOT-UPDI         (P9.2)
  2 #TOT-ETIT         (P9.2)
  2 #TOT-FLNP         (P9.2)
  2 #TOT-PREP         (P9.2)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #CENT          (A2)
  2 #YY            (A2)
  2 #MM            (A2)
  2 #DD            (A2)
1 #TOT-CR   (P9.2)
1 #TOT-DB   (P9.2)
1 #EZ-PREMS-DB (P9.2)
1 #EZ-PREMS-CR (P9.2)
1 #ELP-DB      (P9.2)
1 #ELP-CR      (P9.2)
1 #EIP-DB      (P9.2)
1 #EIP-CR      (P9.2)
*
1 #HOLD-ID    (N6)
1 #NEW-LOAN   (P7.2)
1 #OLD-LOAN   (P7.2)
1 #OLD-INT    (P7.2)
1 #CNT-2      (P3)
1 #PREP-DIFF  (P7.2)
1 #TOT-PREP-DIFF  (P7.2)
*
END-DEFINE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
* * * * * * * REPORT HEADER * * * * * *
FORMAT (3) LS=133 PS=70
WRITE (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
               'BATCH ACCOUNTING RECORDS FOR 1/1/1999'
               25X 'DATE: '*DAT4U 5X 'TIME: ' *TIMX
*
RESET #I1
READ WORK 1 RECORD ACCT-RECORD
  ADD +1 TO #RECS-READ
*
  IF ACCT-TYPE NE 'B'
    PERFORM WRITE-REC
    ESCAPE TOP
  END-IF
*
  ADD 1 TO #RECS-READ-B
* IF #RECS-READ-B GT 100
*   ESCAPE BOTTOM
* END-IF
*
* IF  (ACCT-CLERK NE 'EDS')
  IF  (ACCT-CLERK NE 'AUTO')
   OR (ACCT-TRDATE-MM NE 01)
   OR (ACCT-TRDATE-DD NE 01)
   OR (ACCT-TRDATE-YY NE 99)
   OR (ACCT-ACCT-DT-MM NE 01)
   OR (ACCT-ACCT-DT-DD NE 01)
   OR (ACCT-ACCT-DT-YY NE 99)
    PERFORM WRITE-REC
    ESCAPE TOP
  END-IF
*
  IF  (ACCT-CODE = 'ADDL')
   AND (ACCT-COL = '1')
    MOVE ACCT-ID TO #HOLD-ID
    MOVE ACCT-CREDIT-AMT TO #OLD-LOAN
    PERFORM WRITE-REC
    ESCAPE TOP
  END-IF
*
  IF   (ACCT-ID = #HOLD-ID)
   AND (ACCT-CODE = 'ADDL')
   AND (ACCT-COL = '2')
    MOVE ACCT-CREDIT-AMT TO #OLD-INT
    PERFORM WRITE-REC
    ESCAPE TOP
  END-IF
*
  IF   (ACCT-ID = #HOLD-ID)
   AND (ACCT-CODE = 'ADDL')
   AND (ACCT-COL = '3')
    MOVE ACCT-DEBIT-AMT TO #NEW-LOAN
    PERFORM WRITE-REC
    ESCAPE TOP
  END-IF
*
  PERFORM WRITE-REC
  IF   (ACCT-ID = #HOLD-ID)
   AND (ACCT-CODE = 'PREP')
*  AND (ACCT-CREDIT-AMT = #NEW-LOAN)
*   below used 2/15/99 to show bad apls  with existing loans
    IF #OLD-LOAN = 0
      ESCAPE TOP
    END-IF
  ELSE
    ESCAPE TOP
*
*   below used 1/28/99 to fix credit amt
*   COMPUTE #PREP-DIFF = #OLD-LOAN + #OLD-INT
*   ADD #PREP-DIFF TO #TOT-PREP-DIFF
*   SUBTRACT #PREP-DIFF FROM ACCT-CREDIT-AMT
*   ADD 1 TO #CNT-3
*   DISPLAY (3) #CNT-3 ACCT-ID #OLD-LOAN #OLD-INT #PREP-DIFF
*         #NEW-LOAN ACCT-CREDIT-AMT
*   PERFORM WRITE-REC
*   ESCAPE TOP
  END-IF
*
END-ALL
*
SORT BY ACCT-NAME
  USING #OLD-LOAN ACCT-ID #OLD-INT ACCT-CLERK
    ADD 1 TO #CNT-3
    DISPLAY (3) #CNT-3 ACCT-NAME ACCT-ID
     'Prior/Loan/Balance' #OLD-LOAN
     'Int/Capitalized' #OLD-INT
     ACCT-CLERK
  ESCAPE TOP
*
  PERFORM WRITE-REC
  ESCAPE TOP
*
* IF ACCT-CODE = 'CVIN' OR = 'UPDI' OR = 'PRDL' OR = 'CAPI' OR = 'PADJ'
* IF   (ACCT-MSG-CODE = 'A')
*  AND (ACCT-AALP-FLAG = '1' OR = '2' OR = '3' OR = '4')
*   ADD ACCT-CREDIT-AMT TO #TOT-CR
*   ADD ACCT-DEBIT-AMT  TO #TOT-DB
* IF   (ACCT-ACCT-DT-YY = 98)
*  AND (ACCT-ACCT-DT-MM GE 07)
*   IGNORE
* ELSE
*   ESCAPE TOP
* END-IF
*
* ADD +1 TO #RECS-SELECTED
*
* IF ACCT-TRTIME LT #LAST-TIME
*   WRITE (3) ' '
*   WRITE (3) 'SUBTOTAL OF CVIN        = ' #SUB-CVIN
*   WRITE (3) 'SUBTOTAL OF UPDI        = ' #SUB-UPDI
*   WRITE (3) 'SUBTOTAL OF PRNP        = ' #SUB-PRNP
*   WRITE (3) 'SUBTOTAL OF ETIT        = ' #SUB-ETIT
*   WRITE (3) 'SUBTOTAL OF FLNP        = ' #SUB-FLNP
*   WRITE (3) 'SUBTOTAL OF PREP        = ' #SUB-PREP
*   WRITE (3) 'SUBTOTAL OF ADDL        = ' #SUB-ADDL
*   WRITE (3) 'SUBTOTAL OF NEWL        = ' #SUB-NEWL
*
*   RESET #SUB-CVIN
*   RESET #SUB-UPDI
*   RESET #SUB-PRNP
*   RESET #SUB-ETIT
*   RESET #SUB-FLNP
*   RESET #SUB-PREP
*   RESET #SUB-ADDL
*   RESET #SUB-ADDL
*
*   NEWPAGE (3)
* END-IF
* MOVE ACCT-TRTIME TO #LAST-TIME
*
* IF ACCT-MSG-CODE = 'A'
*   IF   (ACCT-CODE = 'EZPR')
*     DISPLAY (3) ACCT-ID ACCT-CODE
*             ACCT-AALP-FLAG
*             ACCT-ACCT-DATE
*             ACCT-DEBIT-AMT ACCT-CREDIT-AMT
*     ADD ACCT-DEBIT-AMT TO #EZ-PREMS-DB
*     ADD ACCT-CREDIT-AMT TO #EZ-PREMS-CR
*   END-IF
*
*   IF   (ACCT-AALP-FLAG = '3')
*     DISPLAY (3) ACCT-ID ACCT-CODE
*             ACCT-AALP-FLAG
*             ACCT-ACCT-DATE
*             ACCT-DEBIT-AMT ACCT-CREDIT-AMT
*     ADD ACCT-DEBIT-AMT TO #ELP-DB
*     ADD ACCT-CREDIT-AMT TO #ELP-CR
*   END-IF
*
*   IF   (ACCT-AALP-FLAG = '4')
*     DISPLAY (3) ACCT-ID ACCT-CODE
*           ACCT-AALP-FLAG
*           ACCT-ACCT-DATE
*           ACCT-DEBIT-AMT ACCT-CREDIT-AMT
*     IF   (ACCT-CODE = 'PRNP' OR = 'PRNF' OR = 'PRNV')
*       ADD ACCT-DEBIT-AMT TO #ELP-DB
*       ADD ACCT-CREDIT-AMT TO #ELP-CR
*     ELSE
*       ADD ACCT-DEBIT-AMT TO #EIP-DB
*       ADD ACCT-CREDIT-AMT TO #EIP-CR
*     END-IF
*   END-IF
* eND-IF
* ESCAPE TOP
*
  IF ACCT-CODE = 'PREP'
    ADD ACCT-CREDIT-AMT TO #SUB-PREP
    ADD ACCT-CREDIT-AMT TO #TOT-PREP
  END-IF
*
  IF ACCT-CODE = 'NEWL'
    ADD ACCT-DEBIT-AMT TO #SUB-NEWL
    ADD ACCT-DEBIT-AMT TO #TOT-NEWL
  END-IF
*
  IF ACCT-CODE = 'ADDL'
    IF ACCT-COL= '1'
      SUBTRACT ACCT-CREDIT-AMT FROM #SUB-ADDL
      SUBTRACT ACCT-CREDIT-AMT FROM #TOT-ADDL
    ELSE
      IF ACCT-COL= '3'
        ADD ACCT-DEBIT-AMT TO #SUB-ADDL
        ADD ACCT-DEBIT-AMT TO #TOT-ADDL
      END-IF
    END-IF
  END-IF
*
  IF ACCT-CODE = 'CVIN'
    ADD ACCT-CREDIT-AMT TO #SUB-CVIN
    ADD ACCT-CREDIT-AMT TO #TOT-CVIN
  END-IF
*
  IF ACCT-CODE = 'UPDI'
    ADD ACCT-DEBIT-AMT TO #SUB-UPDI
    ADD ACCT-DEBIT-AMT TO #TOT-UPDI
  END-IF
*
  IF ACCT-CODE = 'PRNP'
    ADD ACCT-CREDIT-AMT TO #SUB-PRNP
    ADD ACCT-CREDIT-AMT TO #TOT-PRNP
  END-IF
*
  IF ACCT-CODE = 'ETIT'
    ADD ACCT-CREDIT-AMT TO #SUB-ETIT
    ADD ACCT-CREDIT-AMT TO #TOT-ETIT
  END-IF
*
  IF ACCT-CODE = 'FLNP'
    ADD ACCT-CREDIT-AMT TO #SUB-FLNP
    ADD ACCT-CREDIT-AMT TO #TOT-FLNP
  END-IF
*
  DISPLAY (3) ACCT-ID ACCT-CODE ACCT-COL ACCT-CLERK
              ACCT-DEBIT-AMT ACCT-CREDIT-AMT
              ACCT-TRTIME (EM=99-99-99)  ACCT-TRDATE (EM=99/99/99)
*
* END-WORK
END-SORT
*
WRITE (3) 'ez-prems db = ' #EZ-PREMS-DB
WRITE (3) 'ez-prems cr = ' #EZ-PREMS-CR
WRITE (3) 'elp      db = ' #ELP-DB
WRITE (3) 'elp      cr = ' #ELP-CR
WRITE (3) 'eip      db = ' #EIP-DB
WRITE (3) 'eip      cr = ' #EIP-CR
*
WRITE 'TOTAL CREDIT = ' #TOT-CR
WRITE 'TOTAL DEBIT  = ' #TOT-DB
*
*
WRITE (3) 'TOT-RECS-READ     = ' #RECS-READ
WRITE (3) 'TOT-RECS-written  = ' #RECS-WRITTEN
WRITE (3) 'TOT-RECS-SELECTED = ' #RECS-SELECTED
    WRITE (3) 'TOTAL PREP DIFF = ' #TOT-PREP-DIFF
     WRITE (3) ' '
    WRITE (3) 'SUBTOTAL OF UPDI        = ' #SUB-UPDI
    WRITE (3) 'SUBTOTAL OF PRNP        = ' #SUB-PRNP
    WRITE (3) 'SUBTOTAL OF ETIT        = ' #SUB-ETIT
    WRITE (3) 'SUBTOTAL OF FLNP        = ' #SUB-FLNP
    WRITE (3) 'SUBTOTAL OF PREP        = ' #SUB-PREP
    WRITE (3) 'SUBTOTAL OF ADDL        = ' #SUB-ADDL
    WRITE (3) 'SUBTOTAL OF NEWL        = ' #SUB-NEWL
    WRITE (3) ' '
    WRITE (3) 'TOTAL OF CVIN        = ' #TOT-CVIN
    WRITE (3) 'TOTAL OF UPDI        = ' #TOT-UPDI
    WRITE (3) 'TOTAL OF PRNP        = ' #TOT-PRNP
    WRITE (3) 'TOTAL OF ETIT        = ' #TOT-ETIT
    WRITE (3) 'TOTAL OF FLNP        = ' #TOT-FLNP
    WRITE (3) 'TOTAL OF PREP        = ' #TOT-PREP
    WRITE (3) 'TOTAL OF ADDL        = ' #TOT-ADDL
    WRITE (3) 'TOTAL OF NEWL        = ' #TOT-NEWL
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE WRITE-REC
* * * * * * * * * * * * * * *
*
ADD 1 TO #RECS-WRITTEN
* wrITE WORK 2 ACCT-RECORD
*
END-SUBROUTINE
*
END
