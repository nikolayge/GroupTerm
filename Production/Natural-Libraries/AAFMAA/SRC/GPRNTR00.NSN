* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
***************************************************************
* SUBPROGRAM-ID: GPRNTR00 - TRANSACTION LOG GENERIC MODULE
***************************************************************
*        MODIFICATION LOG
***************************************************************
* USER   DATE      TAG  REASON
* YAK    01152011       Initial Creation (for Member Center)
* RSE    04112011  RE1  Add conditions for Phone Type and Phone
*                       Preferred Indicator
* RSE    06122012  RE2  Add address source
* YAK    06152012  YK1  Add logic for Contacts only
*                       (get mil branch from Rank table)
* RSE    06212012  RE3  Removed "RESET #I" at the beginning of 
*                       subroutine LOG-ADDRESS-TRAN
* bz     08/01/2014     OI-2916 update shared addresses
***************************************************************
*
DEFINE DATA
PARAMETER
1 #FUNCTION         (A) DYNAMIC
PARAMETER USING GPRATR00
LOCAL USING GPRA0004               /* PDA to pass data to TR log subprogram
LOCAL USING GPRL0004
LOCAL
1 #ADDRESS          (A) DYNAMIC CONST <'ADDRESS'>
1 #PHONE            (A) DYNAMIC CONST <'PHONE'>
1 #EMAIL            (A) DYNAMIC CONST <'EMAIL'>
1 #MILITARY-INFO    (A) DYNAMIC CONST <'MILITARY'>
1 #WEB-USER-INFO    (A) DYNAMIC CONST <'WEB-USER'>
1 #CG               (A) DYNAMIC CONST <'CG-'>
1 #CB               (A) DYNAMIC CONST <'CB-'>
1 #DM               (A) DYNAMIC CONST <'DM-'>
1 #LOOK-UP-KEY      (A7)
1 #LOOK-UP-VALUE    (A) DYNAMIC
1 #LOOK-UP-ADDR-TYPE     (A) DYNAMIC CONST <'CODE006'>
1 #LOOK-UP-ADDR-LOCATION (A) DYNAMIC CONST <'CODE002'>
1 #LOOK-UP-ADDR-SOURCE   (A) DYNAMIC CONST <'CODE017'>
1 #LOOK-UP-MIL-STAT      (A) DYNAMIC CONST <'CODE025'>
1 #LOOK-UP-MIL-BRANCH    (A) DYNAMIC CONST <'CODE024'>
1 #LOOK-UP-EMAIL-TYPE    (A) DYNAMIC CONST <'CODE010'>
1 #LOOK-UP-EMAIL-STATUS  (A) DYNAMIC CONST <'CODE020'>
1 #LOOK-UP-PHONE-TYPE    (A) DYNAMIC CONST <'CODE015'>
1 TR_DESCRIPTION         (A) DYNAMIC
1 #ADDR-CHANGED     (L)
1 #UNDELIVERABLE    (A1) CONST <'U'>
1 #CASS-FAILED      (A1) CONST <'W'>
1 #PRIMARY          (A1) CONST <'P'>
1 #PAR1             (A1) CONST <'('>
1 #PAR2             (A1) CONST <')'>
1 #VALIDATION       (A) DYNAMIC
1 #GET-MIL-BRANCH   (L)               /* YK1
1 #I  (I2)
1 #II (I2)
1 #sh (I2)
1 p_CN(N6)
1 p_Links    (N6/15)
1 p_Names    (A/15)  DYNAMIC
* --------

* 1 v_A          (A) DYNAMIC     
* --------
END-DEFINE
* YK1 Start
IF TR_CONTACT_ID <> 0
  #I := #I + 1
  COMPRESS 'Contact related to ' FUNCTION-CONTACT-NAME(<TR_CONTACT_ID>) INTO #NEW-DATA(1)
  #FIELD-DESCRIPTION(1) := 'Cont'
  RESET #OLD-DATA(1)
END-IF
* YK1 end
DECIDE ON FIRST VALUE #FUNCTION
  VALUE #ADDRESS
    TR_DESCRIPTION := #CG
    PERFORM LOG-ADDRESS-TRAN
  VALUE #PHONE
    TR_DESCRIPTION := #CG
    PERFORM LOG-PHONE-TRAN
  VALUE #EMAIL
    TR_DESCRIPTION := #CG
    PERFORM LOG-EMAIL-TRAN
  VALUE #MILITARY-INFO
    TR_DESCRIPTION := #CG
    PERFORM LOG-MILITARY-TRAN
  VALUE #WEB-USER-INFO
    TR_DESCRIPTION := #CG
    PERFORM LOG-WEB-USER-TRAN
  NONE VALUE
    IGNORE
END-DECIDE
* 
  PERFORM WRITE-TRAN-LOG 
IF #FUNCTION = #ADDRESS
  RESET p_Links(*)
  p_CN := TR_ID_NUMBER
  CALLNAT 'GPRNTRA0' p_CN BEFORE_IMAGE.ADDRESS-POOL-ID p_Links(*) p_Names(*)
  FOR #sh = 1  TO 15
     IF p_Links(#sh) <> 0  AND  p_Links(#sh) <> p_CN
       TR_ID_NUMBER := p_Links(#sh)
       TR_NAME := p_Names(#sh)
       IF #OLD-DATA(3) <> SCAN 'Share:'
         COMPRESS #OLD-DATA(3) '[' 'Share:' p_CN  ']' INTO #OLD-DATA(3)
       END-IF
*       COMPRESS v_A TR_ID_NUMBER INTO v_A
       PERFORM WRITE-TRAN-LOG
     END-IF
  END-FOR
END-IF

*   TR_ID_NUMBER := p_CN
*   TR_NAME      :=       v_A
*   TR_CLERK     := 'xx2'
*   PERFORM WRITE-TRAN-LOG  
 
*
********************************
DEFINE SUBROUTINE WRITE-TRAN-LOG
********************************
IF #I NE 0
  #TR-NAME               := TR_NAME
  #TR-ID-NUMBER          := TR_ID_NUMBER
  #LOG-DESCRIPTION       := TR_DESCRIPTION
  #TR-CLERK-ID           := TR_CLERK
  #TR-DATE-LAST-UPDATE   := BEFORE_IMAGE.DATE-LAST-UPDATE
  CALLNAT 'GPRN0004'
    #TR-FIELDS #SYNC-FIELD-TABLE(*)
    #OLD-DATA-TABLE(*) #NEW-DATA-TABLE(*)
END-IF
END-SUBROUTINE
*
**********************************
DEFINE SUBROUTINE LOG-ADDRESS-TRAN
**********************************
*
*
  TR_CONTACT_ID := F-GET-CONTACT-ID(<TR_ID_NUMBER>)       /* bz_OI-2916
  TR_NAME       := FUNCTION-CONTACT-NAME(<TR_CONTACT_ID>) /* bz_OI-2916
*
*
IF BEFORE_IMAGE.ADDR-TYPE-CD      <> AFTER_IMAGE.ADDR-TYPE-CD       OR
    AFTER_IMAGE.ADDRESS-LINE-1    <> BEFORE_IMAGE.ADDRESS-LINE-1    OR
    AFTER_IMAGE.ADDRESS-LINE-2    <> BEFORE_IMAGE.ADDRESS-LINE-2    OR
    AFTER_IMAGE.ADDRESS-LINE-3    <> BEFORE_IMAGE.ADDRESS-LINE-3    OR
    AFTER_IMAGE.ADDR-TYPE-CD      <> BEFORE_IMAGE.ADDR-TYPE-CD      OR
    AFTER_IMAGE.ADDR-LOCATION     <> BEFORE_IMAGE.ADDR-LOCATION     OR
    AFTER_IMAGE.PREVENT-OVER-IND  <> BEFORE_IMAGE.PREVENT-OVER-IND  OR
    AFTER_IMAGE.ADDR-VALID-IND    <> BEFORE_IMAGE.ADDR-VALID-IND    OR
    AFTER_IMAGE.RETURNED-MAIL-IND <> BEFORE_IMAGE.RETURNED-MAIL-IND OR
    AFTER_IMAGE.ADDRESS-SOURCE    <> BEFORE_IMAGE.ADDRESS-SOURCE                       /* RE2
  #ADDR-CHANGED := TRUE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #ADDRESS-LABEL-1
  #SYNC-FIELD-TABLE(#I)  := 2
  #OLD-DATA(#I) := BEFORE_IMAGE.ADDRESS-LINE-1
  #NEW-DATA(#I) := AFTER_IMAGE.ADDRESS-LINE-1
* Add address attributes
* Address Type
  #LOOK-UP-KEY           := #LOOK-UP-ADDR-TYPE
  IF BEFORE_IMAGE.ADDRESS-LINE-1 <> ' '
    #LOOK-UP-VALUE         := BEFORE_IMAGE.ADDR-TYPE-CD
    COMPRESS #OLD-DATA(#I) #PAR1 F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>) INTO #OLD-DATA(#I)
  END-IF
  IF AFTER_IMAGE.ADDRESS-LINE-1 <> ' '
    #LOOK-UP-VALUE         := AFTER_IMAGE.ADDR-TYPE-CD
    COMPRESS #NEW-DATA(#I) #PAR1 F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>) INTO #NEW-DATA(#I)
  END-IF
* Address Location
  #LOOK-UP-KEY           := #LOOK-UP-ADDR-LOCATION
  IF BEFORE_IMAGE.ADDRESS-LINE-1 <> ' '
    #LOOK-UP-VALUE         := BEFORE_IMAGE.ADDR-LOCATION
    COMPRESS #OLD-DATA(#I) F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>) INTO #OLD-DATA(#I)
  END-IF
  IF AFTER_IMAGE.ADDRESS-LINE-1 <> ' '
    #LOOK-UP-VALUE         := AFTER_IMAGE.ADDR-LOCATION
    COMPRESS #NEW-DATA(#I) F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>) INTO #NEW-DATA(#I)
  END-IF
* Address Source
  #LOOK-UP-KEY           := #LOOK-UP-ADDR-SOURCE
  IF BEFORE_IMAGE.ADDRESS-LINE-1 <> ' '
    #LOOK-UP-VALUE         := BEFORE_IMAGE.ADDRESS-SOURCE
    COMPRESS #OLD-DATA(#I) F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>) #PAR2 INTO #OLD-DATA(#I)
  END-IF
  IF AFTER_IMAGE.ADDRESS-LINE-1 <> ' '
    #LOOK-UP-VALUE         := AFTER_IMAGE.ADDRESS-SOURCE
    COMPRESS #NEW-DATA(#I) F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>) #PAR2 INTO #NEW-DATA(#I)
  END-IF
*
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #ADDRESS-LABEL-2
  #SYNC-FIELD-TABLE(#I)  := 3
  #OLD-DATA(#I)          := BEFORE_IMAGE.ADDRESS-LINE-2
  #NEW-DATA(#I)          := AFTER_IMAGE.ADDRESS-LINE-2
  RESET #VALIDATION
* Address Validation
  DECIDE ON FIRST VALUE BEFORE_IMAGE.ADDR-VALID-IND
    VALUE 'Y' #VALIDATION := 'CASS'
    VALUE 'N' #VALIDATION := 'NO CASS'
    VALUE 'F' #VALIDATION := 'CASS Failed'
    NONE IGNORE
  END-DECIDE
* Address Protection
  DECIDE ON FIRST VALUE BEFORE_IMAGE.PREVENT-OVER-IND
    VALUE 'Y' COMPRESS #VALIDATION 'Protected' INTO #VALIDATION
    VALUE 'S' COMPRESS #VALIDATION 'Secure'    INTO #VALIDATION
    NONE IGNORE
  END-DECIDE
* Address Undeliverable
  IF BEFORE_IMAGE.RETURNED-MAIL-IND = 'Y'
    COMPRESS #VALIDATION '<Undeliverable>' INTO #VALIDATION
  END-IF
  IF #VALIDATION <> ' '
    COMPRESS #OLD-DATA(#I) #PAR1 #VALIDATION #PAR2 INTO #OLD-DATA(#I)
  END-IF
  RESET #VALIDATION
* Address Validation
  DECIDE ON FIRST VALUE AFTER_IMAGE.ADDR-VALID-IND
    VALUE 'Y' #VALIDATION := 'CASS'
    VALUE 'N' #VALIDATION := 'NO CASS'
    VALUE 'F' #VALIDATION := 'CASS Failed'
    NONE IGNORE
  END-DECIDE
* Address Protection
  DECIDE ON FIRST VALUE AFTER_IMAGE.PREVENT-OVER-IND
    VALUE 'Y' COMPRESS #VALIDATION 'Protected' INTO #VALIDATION
    VALUE 'S' COMPRESS #VALIDATION 'Secure'    INTO #VALIDATION
    NONE IGNORE
  END-DECIDE
* Address Undeliverable
  IF AFTER_IMAGE.RETURNED-MAIL-IND = 'Y'
    COMPRESS #VALIDATION '<Undeliverable>' INTO #VALIDATION
  END-IF
  IF #VALIDATION <> ' '
    COMPRESS #NEW-DATA(#I) #PAR1 #VALIDATION #PAR2 INTO #NEW-DATA(#I)
  END-IF
* If Address has 3d line
  IF BEFORE_IMAGE.ADDRESS-LINE-3 <> ' ' OR AFTER_IMAGE.ADDRESS-LINE-3 <> ' '
    #I := #I + 1
    #FIELD-DESCRIPTION(#I) := #ADDRESS-LABEL-3
    #SYNC-FIELD-TABLE(#I)  := 4
    #OLD-DATA(#I)          := BEFORE_IMAGE.ADDRESS-LINE-3
    #NEW-DATA(#I)          := AFTER_IMAGE.ADDRESS-LINE-3
  END-IF
END-IF
* Temporary Code for undeliverable address reports
IF #ADDR-CHANGED = TRUE AND (AFTER_IMAGE.ADDR-TYPE-CD = #PRIMARY
    OR BEFORE_IMAGE.ADDR-TYPE-CD = #PRIMARY)
  DECIDE FOR FIRST CONDITION
    WHEN BEFORE_IMAGE.RETURNED-MAIL-IND = 'Y' AND AFTER_IMAGE.RETURNED-MAIL-IND <> 'Y'
      AFTER_IMAGE.ADDRESS-CHG-CODE := AFTER_IMAGE.ADDRESS-SOURCE
    WHEN BEFORE_IMAGE.RETURNED-MAIL-IND <> 'Y' AND AFTER_IMAGE.RETURNED-MAIL-IND = 'Y'
      AFTER_IMAGE.ADDRESS-CHG-CODE := #UNDELIVERABLE
    WHEN AFTER_IMAGE.ADDR-VALID-IND = 'Y' AND BEFORE_IMAGE.ADDR-VALID-IND <> 'Y'
      AFTER_IMAGE.ADDRESS-CHG-CODE := AFTER_IMAGE.ADDRESS-SOURCE
    WHEN AFTER_IMAGE.ADDR-VALID-IND <> 'Y' AND BEFORE_IMAGE.ADDR-VALID-IND = 'Y'
      AFTER_IMAGE.ADDRESS-CHG-CODE := #CASS-FAILED
    WHEN NONE
      AFTER_IMAGE.ADDRESS-CHG-CODE := AFTER_IMAGE.ADDRESS-SOURCE
  END-DECIDE
  IF BEFORE_IMAGE.ADDRESS-CHG-CODE <> AFTER_IMAGE.ADDRESS-CHG-CODE
    #I := #I + 1
    #FIELD-DESCRIPTION(#I)       := #ADDRESS-CHANGE-LABEL
    #OLD-DATA(#I)                := BEFORE_IMAGE.ADDRESS-CHG-CODE
    #NEW-DATA(#I)                := AFTER_IMAGE.ADDRESS-CHG-CODE
    #SYNC-FIELD-TABLE(#I)        := 29
  END-IF
END-IF
*
END-SUBROUTINE
*
********************************
DEFINE SUBROUTINE LOG-PHONE-TRAN
********************************
*
FOR #II = 1 TO *OCCURRENCE(AFTER_IMAGE.PHONE-NUMBER)
  IF AFTER_IMAGE.PHONE-NUMBER(#II) = ' ' AND BEFORE_IMAGE.PHONE-NUMBER(#II) = ' '
    ESCAPE TOP
  END-IF
  IF AFTER_IMAGE.PHONE-NUMBER(#II) <> BEFORE_IMAGE.PHONE-NUMBER(#II) OR
      AFTER_IMAGE.PHONE-TYPE-CODE(#II) <> BEFORE_IMAGE.PHONE-TYPE-CODE(#II) OR            /* RE1
      AFTER_IMAGE.PHONE-PREFERRED-IND(#II) <> BEFORE_IMAGE.PHONE-PREFERRED-IND(#II) OR    /* RE1
      AFTER_IMAGE.TYPE(#II) <> BEFORE_IMAGE.TYPE(#II)
    #I := #I + 1
    #FIELD-DESCRIPTION(#I) := #PHONE-LABEL
    RESET #VALIDATION
    #OLD-DATA(#I)          := BEFORE_IMAGE.PHONE-NUMBER(#II)
    IF BEFORE_IMAGE.TYPE(#II) = 'I'
      COMPRESS #VALIDATION 'International' INTO #VALIDATION
    END-IF
    IF BEFORE_IMAGE.PHONE-PREFERRED-IND(#II) = 'Y'
      COMPRESS #VALIDATION 'Preferred' INTO #VALIDATION
    END-IF
    IF BEFORE_IMAGE.PHONE-TYPE-CODE(#II) <> ' '
      #LOOK-UP-KEY           := #LOOK-UP-PHONE-TYPE
      #LOOK-UP-VALUE         := BEFORE_IMAGE.PHONE-TYPE-CODE(#II)
      COMPRESS #VALIDATION F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>) INTO #VALIDATION
    END-IF
    IF #VALIDATION <> ' '
      COMPRESS #PAR1 #VALIDATION #PAR2 INTO #VALIDATION
    END-IF
    COMPRESS #OLD-DATA(#I) #VALIDATION INTO #OLD-DATA(#I)
    RESET #VALIDATION
    #NEW-DATA(#I)          := AFTER_IMAGE.PHONE-NUMBER(#II)
    IF AFTER_IMAGE.TYPE(#II) = 'I'
      COMPRESS #VALIDATION 'International' INTO #VALIDATION
    END-IF
    IF AFTER_IMAGE.PHONE-PREFERRED-IND(#II) = 'Y'
      COMPRESS #VALIDATION 'Preferred' INTO #VALIDATION
    END-IF
    IF AFTER_IMAGE.PHONE-TYPE-CODE(#II) <> ' '
      #LOOK-UP-KEY           := #LOOK-UP-PHONE-TYPE
      #LOOK-UP-VALUE         := AFTER_IMAGE.PHONE-TYPE-CODE(#II)
      COMPRESS #VALIDATION F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>) INTO #VALIDATION
    END-IF
    IF #VALIDATION <> ' '
      COMPRESS #PAR1 #VALIDATION #PAR2 INTO #VALIDATION
    END-IF
    COMPRESS #NEW-DATA(#I) #VALIDATION INTO #NEW-DATA(#I)
    #SYNC-FIELD-TABLE(#I)  := 12
  END-IF
END-FOR
END-SUBROUTINE
*
********************************
DEFINE SUBROUTINE LOG-EMAIL-TRAN
********************************
*
FOR #II = 1 TO *OCCURRENCE(AFTER_IMAGE.EMAIL-ADDRESS)
  IF AFTER_IMAGE.EMAIL-ADDRESS(#II) = ' ' AND BEFORE_IMAGE.EMAIL-ADDRESS(#II) = ' '
    ESCAPE TOP
  END-IF
  IF AFTER_IMAGE.EMAIL-ADDRESS(#II)        <> BEFORE_IMAGE.EMAIL-ADDRESS(#II)       OR
      AFTER_IMAGE.EMAIL-TYPE(#II)           <> BEFORE_IMAGE.EMAIL-TYPE(#II)          OR
      AFTER_IMAGE.EMAIL-PREFERRED-IND(#II)  <> BEFORE_IMAGE.EMAIL-PREFERRED-IND(#II) OR
      AFTER_IMAGE.EMAIL-UNDELIV(#II)        <> BEFORE_IMAGE.EMAIL-UNDELIV(#II)       OR
      AFTER_IMAGE.EMAIL-STATUS(#II)         <> BEFORE_IMAGE.EMAIL-STATUS(#II)        OR
      AFTER_IMAGE.EMAIL-PROTECTION-IND(#II) <> BEFORE_IMAGE.EMAIL-PROTECTION-IND(#II)
    #I := #I + 1
    #FIELD-DESCRIPTION(#I) := #INTERNET-LABEL
    RESET #VALIDATION
    #OLD-DATA(#I)          := BEFORE_IMAGE.EMAIL-ADDRESS(#II)
    IF BEFORE_IMAGE.EMAIL-PREFERRED-IND(#II) = 'Y'
      COMPRESS #VALIDATION 'Preferred' INTO #VALIDATION
    END-IF
    IF BEFORE_IMAGE.EMAIL-PROTECTION-IND(#II) = 'Y'
      COMPRESS #VALIDATION 'Protected' INTO #VALIDATION
    END-IF
    IF BEFORE_IMAGE.EMAIL-TYPE(#II) <> ' '
      #LOOK-UP-KEY           := #LOOK-UP-EMAIL-TYPE
      #LOOK-UP-VALUE         := BEFORE_IMAGE.EMAIL-TYPE(#II)
      COMPRESS #VALIDATION F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>) INTO #VALIDATION
    END-IF
    IF BEFORE_IMAGE.EMAIL-UNDELIV(#II) = 'Y'
      COMPRESS #VALIDATION '<Undeliverable>' INTO #VALIDATION
    END-IF
    IF BEFORE_IMAGE.EMAIL-STATUS(#II) <> ' '
      #LOOK-UP-KEY           := #LOOK-UP-EMAIL-STATUS
      #LOOK-UP-VALUE         := BEFORE_IMAGE.EMAIL-STATUS(#II)
      COMPRESS #VALIDATION F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>) INTO #VALIDATION
    END-IF
    IF #VALIDATION <> ' '
      COMPRESS #PAR1 #VALIDATION #PAR2 INTO #VALIDATION
    END-IF
    COMPRESS #OLD-DATA(#I) #VALIDATION INTO #OLD-DATA(#I)
    RESET #VALIDATION
    #NEW-DATA(#I)          := AFTER_IMAGE.EMAIL-ADDRESS(#II)
    IF AFTER_IMAGE.EMAIL-PREFERRED-IND(#II) = 'Y'
      COMPRESS #VALIDATION 'Preferred' INTO #VALIDATION
    END-IF
    IF AFTER_IMAGE.EMAIL-PROTECTION-IND(#II) = 'Y'
      COMPRESS #VALIDATION 'Protected' INTO #VALIDATION
    END-IF
    IF AFTER_IMAGE.EMAIL-TYPE(#II) <> ' '
      #LOOK-UP-KEY           := #LOOK-UP-EMAIL-TYPE
      #LOOK-UP-VALUE         := AFTER_IMAGE.EMAIL-TYPE(#II)
      COMPRESS #VALIDATION F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>) INTO #VALIDATION
    END-IF
    IF AFTER_IMAGE.EMAIL-UNDELIV(#II) = 'Y'
      COMPRESS #VALIDATION '<Undeliverable>' INTO #VALIDATION
    END-IF
    IF AFTER_IMAGE.EMAIL-STATUS(#II) <> ' '
      #LOOK-UP-KEY           := #LOOK-UP-EMAIL-STATUS
      #LOOK-UP-VALUE         := AFTER_IMAGE.EMAIL-STATUS(#II)
      COMPRESS #VALIDATION F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>) INTO #VALIDATION
    END-IF
    IF #VALIDATION <> ' '
      COMPRESS #PAR1 #VALIDATION #PAR2 INTO #VALIDATION
    END-IF
    COMPRESS #NEW-DATA(#I) #VALIDATION INTO #NEW-DATA(#I)
    #SYNC-FIELD-TABLE(#I)  := 15
  END-IF
END-FOR
END-SUBROUTINE
*
***********************************
DEFINE SUBROUTINE LOG-MILITARY-TRAN
***********************************
*
IF AFTER_IMAGE.RANK <> BEFORE_IMAGE.RANK
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #RANK-LABEL
  #LOOK-UP-KEY           := #LOOK-UP-MIL-BRANCH
  #LOOK-UP-VALUE         := BEFORE_IMAGE.MILITARY-BRANCH
  #OLD-DATA(#I)          := F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>)
  RESET #GET-MIL-BRANCH                                                                         /* YK1
  IF #OLD-DATA(#I) = ' '                                                                        /* YK1
    #GET-MIL-BRANCH := true                                                                     /* YK1
  END-IF                                                                                        /* YK1
  COMPRESS #OLD-DATA(#I) F-GET-MIL-DESC(<BEFORE_IMAGE.RANK,#GET-MIL-BRANCH>) INTO #OLD-DATA(#I) /* YK1
  #LOOK-UP-VALUE         := AFTER_IMAGE.MILITARY-BRANCH
  #NEW-DATA(#I)          := F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>)
  RESET #GET-MIL-BRANCH                                                                         /* YK1
  IF #NEW-DATA(#I) = ' '                                                                        /* YK1
    #GET-MIL-BRANCH := true                                                                     /* YK1
  END-IF                                                                                        /* YK1
  COMPRESS #NEW-DATA(#I) F-GET-MIL-DESC(<AFTER_IMAGE.RANK,#GET-MIL-BRANCH>) INTO #NEW-DATA(#I)  /* YK1
END-IF
IF AFTER_IMAGE.MILITARY-STATUS <> BEFORE_IMAGE.MILITARY-STATUS
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #MIL-STATUS-LABEL
  #LOOK-UP-KEY   := #LOOK-UP-MIL-STAT
  #LOOK-UP-VALUE := BEFORE_IMAGE.MILITARY-STATUS
  #OLD-DATA(#I)          := F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>)
  #LOOK-UP-VALUE := AFTER_IMAGE.MILITARY-STATUS
  #NEW-DATA(#I)          := F-LOOK-UP-TABLE(<#LOOK-UP-KEY,#LOOK-UP-VALUE>)
END-IF
IF AFTER_IMAGE.DATE-RETIRED <> BEFORE_IMAGE.DATE-RETIRED
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #RET-DATE
  #OLD-DATA(#I)          := BEFORE_IMAGE.DATE-RETIRED
  #NEW-DATA(#I)          := AFTER_IMAGE.DATE-RETIRED
END-IF
IF AFTER_IMAGE.DATE-OF-RANK <> BEFORE_IMAGE.DATE-OF-RANK
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #DOP
  #OLD-DATA(#I)          := BEFORE_IMAGE.DATE-OF-RANK
  #NEW-DATA(#I)          := AFTER_IMAGE.DATE-OF-RANK
END-IF
IF AFTER_IMAGE.PRIOR-DATE-OF-RANK <> BEFORE_IMAGE.PRIOR-DATE-OF-RANK
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #PREV-DOP
  #OLD-DATA(#I)          := BEFORE_IMAGE.PRIOR-DATE-OF-RANK
  #NEW-DATA(#I)          := AFTER_IMAGE.PRIOR-DATE-OF-RANK
END-IF
*
PERFORM WRITE-TRAN-LOG
*
RESET #I
TR_DESCRIPTION := #DM
*
IF AFTER_IMAGE.DATE-INIT-ENTRY-MIL-SVC <> BEFORE_IMAGE.DATE-INIT-ENTRY-MIL-SVC
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #DIEMS
  #OLD-DATA(#I)          := BEFORE_IMAGE.DATE-INIT-ENTRY-MIL-SVC
  #NEW-DATA(#I)          := AFTER_IMAGE.DATE-INIT-ENTRY-MIL-SVC
END-IF
IF AFTER_IMAGE.BASE-PAY-EF-DATE <> BEFORE_IMAGE.BASE-PAY-EF-DATE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #PEBD
  #OLD-DATA(#I)          := BEFORE_IMAGE.BASE-PAY-EF-DATE
  #NEW-DATA(#I)          := AFTER_IMAGE.BASE-PAY-EF-DATE
END-IF
IF AFTER_IMAGE.ACTIVE-DUTY-BASE-DATE <> BEFORE_IMAGE.ACTIVE-DUTY-BASE-DATE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #BASD
  #OLD-DATA(#I)          := BEFORE_IMAGE.ACTIVE-DUTY-BASE-DATE
  #NEW-DATA(#I)          := AFTER_IMAGE.ACTIVE-DUTY-BASE-DATE
END-IF
IF AFTER_IMAGE.SERVICE-DATE-1405 <> BEFORE_IMAGE.SERVICE-DATE-1405
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #1405-DATE
  #OLD-DATA(#I)          := BEFORE_IMAGE.SERVICE-DATE-1405
  #NEW-DATA(#I)          := AFTER_IMAGE.SERVICE-DATE-1405
END-IF
IF AFTER_IMAGE.RSV-NG-20-YR-CERT-LTR-DATE <> BEFORE_IMAGE.RSV-NG-20-YR-CERT-LTR-DATE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #RSV-20-DATE
  #OLD-DATA(#I)          := BEFORE_IMAGE.RSV-NG-20-YR-CERT-LTR-DATE
  #NEW-DATA(#I)          := AFTER_IMAGE.RSV-NG-20-YR-CERT-LTR-DATE
END-IF
IF AFTER_IMAGE.RSV-NG-RETIRE-PTS <> BEFORE_IMAGE.RSV-NG-RETIRE-PTS
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #RSV-RET-POINTS
  #OLD-DATA(#I)          := BEFORE_IMAGE.RSV-NG-RETIRE-PTS
  #NEW-DATA(#I)          := AFTER_IMAGE.RSV-NG-RETIRE-PTS
END-IF
IF AFTER_IMAGE.RET-RSV-DATE <> BEFORE_IMAGE.RET-RSV-DATE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #RET-RSV-DATE
  #OLD-DATA(#I)          := BEFORE_IMAGE.RET-RSV-DATE
  #NEW-DATA(#I)          := AFTER_IMAGE.RET-RSV-DATE
END-IF
*
END-SUBROUTINE
*
***********************************
DEFINE SUBROUTINE LOG-WEB-USER-TRAN
***********************************
*
IF AFTER_IMAGE.SSN <> BEFORE_IMAGE.SSN
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #CONTACT-SSN-LABEL
  #OLD-DATA(#I)          := BEFORE_IMAGE.SSN
  #NEW-DATA(#I)          := AFTER_IMAGE.SSN
  #SYNC-FIELD-TABLE(#I)  := 11
END-IF
*
END-SUBROUTINE
*
END
