* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
**********************************************************************************
* Pgm ID : PAY-PREP
*
* Function : pay premium amounts per policy
*
* 10/20/2011 vt   Initial creation
* 06/13/2014 TT1  CONTACT NORMALIZATION 
* 01/09/2017 vt1  /Ticket 2372 - add ability to pay PS .  
**********************************************************************************
define data parameter
1 #rest-amt               (n7.2)
1 #STATUS-ISN             (P8)
1 CC-PAYMENT
  2 PARM-DATE             (N8.0)
  2 ID-NUMBER             (N6.0)
  2 INSURED-NAME          (A50)
  2 C@PAY-POLICY          (N2.0)
  2 PAY-POLICY     (1:9)
    3 POLICY-NBR          (A16)
    3 segment             (i2)                 /* vt
    3 cap-policy          (a1)
    3 PLAN-TYPE           (A3)
    3 ISSUE-DATE          (N8.0)
    3 FACE-AMOUNT         (N7.2)
    3 MAX-PREMIUMS        (N4)
    3 MIN-PREMIUMS        (N2)
    3 DEFAULT-PREM        (N2)
    3 C@AVAILABLE-PAYMENT (N2.0)
    3 AVAILABLE-PAYMENT (1:10)
      4 PAYMENT-NOTE      (A) DYNAMIC
      4 CC-PAYABLE        (A1)
      4 VAR-AMOUNT        (A1)
      4 EXCEED-AMT        (A1)
      4 TRAN-TYPE         (A6)                /* vt1
      4 PAID-TO-DATE      (N8.0)
      4 PAYMENT-MODE      (A1)
      4 DEFAULT-AMOUNT    (N6.2)
      4 DUE-AMOUNT        (N6.2)
1 #timn               (n7)
1 #error-message      (a75)
1 DATE-OF-BIRTH       (N8.0)             /* TT1
*
LOCAL USING C2500AAM
LOCAL
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER              (N6)
  2 name                   (a25)
  2 PROCESS-IND            (A1)
  2 STATUS                 (A1/9)
  2 PAY-STATUS             (A2/9)
  2 MODE                   (A1/9)
  2 PLAN                   (A3/9)
  2 ISSUE-DATE             (N8/9)
  2 PAID-TO-DATE           (N8/9)
  2 PAID-UP-DATE           (N8/9)
  2 ANNUAL-PREM            (P5.2/9)
  2 MTD-ACV-PREM-ADJ       (P7.2/9)
  2 MEMBER-CONTACT-ID
*   2 date-of-birth          (n8)
  2 MONTH-ALLOC-AMT        (p7.2/9)      /*TT1
  2 X-BILL-ADJUST          (p5.2/9)
  2 X-BILL-DOLLAR          (p5.2/9)
  2 OWNERSHIP-FLAG         (a1/9)
  2 DUES-ALL-PAID-IND      (a1)
  2 DUES-BALANCE           (p5.2)
  2 DUES-FPF               (p3.2)
  2 DUES-TOT-PAID          (p5.2)
  2 INTRO-FLAG             (a1)
  2 RID-PLAN               (a2/9)
  2 RID-EFF-DT             (n8/9)
  2 RID-PD-TO              (n8/9)
*
1 AR-V VIEW OF A-ACCOUNTING-REGISTER
  2 id-number         (n6)
  2 name              (a25)
  2 transaction-datn  (p9)
  2 transaction-timn  (p7)
  2 cash-code         (a1)
  2 clerk-id          (a3)
  2 terminal-id       (a8)
  2 PROCESS-IND       (A1)
  2 POLICY-NUMBER     (A16)
  2 AALP-FLAG         (A1)
  2 TXN-CODE          (A4)
  2 TXN-ACCT-NUMBER   (N3)
  2 MESSAGE-CODE      (A1)
  2 credit-amount     (p7.2)
  2 acct-date         (n8)
  2 debit-amount      (p7.2)
  2 description       (a20)
  2 sg-category-1     (a2/15)
  2 sg-category-2     (a2/15)
  2 SG-AMOUNT         (N6.2/1)
*
local
1 #i1                      (i2)
1 #l                       (i2)
1 #m                       (i2)
1 #cc-x                    (i2)
1 #iln1                    (i2)
1 #iln2                    (i2)
1 #lx                      (i2)
1 #pol-nbr                 (a16)
1 #prep-amt                 (p7.2)
1 #inp-amt                 (p7.2)
1 #inp-tr-cd               (a4)
1 #cash-code               (a1)
1 #issue-date              (n8)
1 REDEFINE #ISSUE-DATE
  2 #ISSUE-DATE-A          (A8)
1 #TERM                    (L)
1 #DATE-MMDDYYYY           (N8)
1 REDEFINE #DATE-MMDDYYYY
  2 #MMDD                  (N4)
  2 #YYYY                  (N4)
1 REDEFINE #DATE-MMDDYYYY
  2 #DATE-MMDDYYYY-A       (A8)
1 #update-mode             (l) init<TRUE>
1 #SG-TBL                  (15)
  2 #SG-CAT1               (A2)
  2 #SG-CAT2               (A2)
  2 #SG-AMT                (N6.2)
1 #datn                    (n8)
1 redefine #datn
  2 #datn-yyyy             (n4)
  2 #datn-mm               (n2)
  2 #datn-dd               (n2)
1 #datn-a                  (a10)
1 #amount                  (a10)
1 #mode                     (a1)
1 #CAP-POLICY               (L)
1 #WEB-CHARGE               (A1) INIT <'Y'>
1 #1-YR-ago-a               (a8)
1 redefine #1-YR-ago-a
  2 #1-YR-AGO               (N8)
1 #YYYYMMDD  (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY     (N4)
  2 #MM       (N2)
  2 #DD       (N2)
*
1 #out-rec            (a100)
1 #tab                (a1) INIT <H'09'>
1 #tran-code          (a4)
*
end-define
*
GET ST-V #STATUS-ISN
*
#datn          := *datn
#DATE-MMDDYYYY := FUNCTION-DATE(<#DATN>)
#YYYYMMDD      := *datn
SUBTRACT 1 FROM #YYYYMMDD.#YYYY
compress #YYYYMMDD.#mm #YYYYMMDD.#dd #YYYYMMDD.#yyyy into #1-yr-ago-a leaving no
*
for #l 1 C@PAY-POLICY
  if  cap-policy(#l) ne 'Y'
    for #m 1 C@AVAILABLE-PAYMENT(#l)
*
      if tran-type(#l,#m) = 'PREP'
        move policy-nbr(#l) to #pol-nbr
        move due-amount (#l,#m) to #prep-amt
        if  #rest-amt ge #prep-amt
          compute #rest-amt = #rest-amt - #prep-amt
          #cc-x      := #l
          #inp-amt   := #prep-amt
          #inp-tr-cd := 'PREP'
          #cash-code := 'I'
          perform apply-prep
*
          perform prepare-ACCT-REG
          perform write-report
*
*          write 'after premium payment - amt left:' #rest-amt
        end-if
      end-if
    end-for
  end-if
end-for
*****************
DEFINE SUBROUTINE APPLY-PREP
*****************
*
MOVE 1 TO #ILN1
** MOVE #CC-X TO #LX
move segment(#l) to #lx
MOVE ST-V.ID-NUMBER TO #SCR-ID-SSN    (1)
#SCR-EFF-DT (1) := #DATE-MMDDYYYY-A
*
MOVE #INP-TR-CD     TO #SCR-TRAN-CODE (1)
MOVE #INP-AMT       TO #SCR-TRAN-AMT  (1)
MOVE #CASH-CODE     TO #SCR-CASH-CODE (1)
*
* write '=' st-v.id-number '=' #cc-x '=' #lx
DECIDE ON FIRST VALUE ST-V.MODE(#LX)
  VALUE '4','2','1'
    #MODE := '0'
  VALUE 'A','S','Q'
    #MODE := 'M'
  VALUE 'G'
    IF ST-V.PAY-STATUS (#LX) = '21'
      #MODE := ST-V.MODE(#LX)
    ELSE
      #MODE := 'M'
    END-IF
  NONE VALUE
    #MODE := ST-V.MODE(#LX)
END-DECIDE
*
RESET DATE-OF-BIRTH
DATE-OF-BIRTH       := GET-DATE-OF-BIRTH(<ST-V.MEMBER-CONTACT-ID>)
CALLNAT 'CPREPSAM' #SCR-LINES
  DATE-OF-BIRTH
  ST-V.STATUS            (#LX)
  ST-V.PAY-STATUS        (#LX)
  #MODE
  ST-V.PLAN              (#LX)
  ST-V.ISSUE-DATE        (#LX)
  ST-V.PAID-TO-DATE      (#LX)
  ST-V.PAID-UP-DATE      (#LX)
  ST-V.ANNUAL-PREM       (#LX)
  ST-V.MTD-ACV-PREM-ADJ  (1:9)
  ST-V.MONTH-ALLOC-AMT   (#LX)
  ST-V.X-BILL-ADJUST     (#LX)
  ST-V.X-BILL-DOLLAR     (#LX)
  ST-V.OWNERSHIP-FLAG    (#LX)
  ST-V.DUES-ALL-PAID-IND
  ST-V.DUES-BALANCE
  ST-V.DUES-FPF
  ST-V.DUES-TOT-PAID
  ST-V.INTRO-FLAG
  ST-V.RID-PLAN          (#LX)
  ST-V.RID-EFF-DT        (#LX)
  ST-V.RID-PD-TO         (#LX)
*
  #ILN1
  #ILN2
  #UPDATE-MODE
  #SG-TBL (1:15)
  #LX
  #CAP-POLICY                 /* YK3
  #ERROR-MESSAGE              /* YK1
  #WEB-CHARGE                 /* YK1
*
update (0153)
END-SUBROUTINE
*
*****************
define subroutine Prepare-ACCT-REG
*****************
*
* write '=' #scr-tran-amt(1) '=' #iln1

RESET AR-V
ar-v.id-number               := ST-V.id-number
ar-v.transaction-datn        := #datn
ar-v.transaction-timn        := #timn
ar-v.acct-date               := #datn
ar-v.cash-code               := 'I'
ar-v.name                    := ST-V.name
ar-v.clerk-id                := 'EDS'
ar-v.terminal-id             := *init-id
AR-V.TXN-CODE                := 'PREP'
AR-V.PROCESS-IND             := ST-V.PROCESS-IND
AR-V.AALP-FLAG               := #SCR-ALP-CODE  (1)
AR-V.POLICY-NUMBER           := #POL-Nbr
AR-V.SG-AMOUNT           (1) := #scr-tran-amt(1)
AR-V.credit-amount           := #scr-tran-amt(1)
AR-V.MESSAGE-CODE            := '1'
IF ST-V.PLAN (#LX) = 'SO'
  AR-V.TXN-ACCT-NUMBER  := 422
else
  AR-V.TXN-ACCT-NUMBER  := 420
end-if
*
IF #TIMN = 0 AND AR-V.TXN-ACCT-NUMBER   NE 999
  AR-V.TXN-ACCT-NUMBER  := 999
END-IF
AR-V.DESCRIPTION             := 'INV'
*
IF #ISSUE-DATE GT #1-YR-AGO
  MOVE '1Y' TO AR-V.SG-CATEGORY-1 (1)
ELSE
  MOVE 'RN' TO AR-V.SG-CATEGORY-1 (1)
END-IF
STORE AR-V
end-subroutine
*
*****************
define subroutine write-report
*****************
#tran-code := 'PREP'
compress #datn-mm '/' #datn-dd '/' #datn-yyyy into #datn-a leaving no
move edited #scr-tran-amt(1) (EM=zzzzzz9.99) to #amount
compress st-v.id-number #tab
  #tran-code              #tab
  #amount                 #tab
  #datn-a                 #tab
  into #out-rec leaving no
write work 3 #out-rec
*
end-subroutine
*
end
