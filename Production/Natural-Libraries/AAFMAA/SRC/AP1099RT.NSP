* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: AP1099RT PRODUCES A 1099 RPT for 1099-R types (2/c/m/n/p)
*   AND THE 1099-R
*
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE      TAG     REASON                                      *
*                                                                      *
* PAM    01132005  PM1     Added minimum amount for print.             *
*                                                                      *
* PAM    01192005  PM2     Do not reset tax amounts for type '2' and   *
*                          type 'N' 1099Rs.                            *
*                                                                      *
* PAM    01242005  PM3     Annuitants (Type D or N) should always print*
*                          regardless of taxable amount.               *
*                                                                      *
* PAM    01242005  PM4     Annuitants - If tax calculated, show on     *
*                          form and do not check box.                  *
*                                                                      *
* PAM    01242005  PM5     MEC - use distribution code 'L' if cost     *
*                          basis is 0 (IE: prems paid calc)            *
*                                                                      *
* PAM    01242005  PM6     MEC - include gross distribtuion and cost   *
*                          basis on form per Maggie Wilson.            *
*                                                                      *
* PAM    01252005  PM7     Reset taxable amount for type '2' 1099R's.  *
*                          Continue to include gross and prms paid.    *
*                                                                      *
* PAM    10042005  PM8     Added new distribution code 'L'             *
*                                                                      *
* PAM    01132006  PM9     Changed IRS code for 'L' and 'M' types      *
*                                                                      *
* PAM    12222006  PM10    Added Member Number to Form                 *
* RSE    09142009  RE1     Change PROCESS-IND logic                    *
* bz   06/09/2013  Rebranding (Search for AAFMAA)                      *
* JNT  09/05/2013  JT1     Address normalization                       *
* bz-Name-C 07/07/2017     Fine Names. Keep all capital    
************************************************************************
*
DEFINE DATA
LOCAL USING ADDA0001                            /* JT1
LOCAL
1 CAL-YEAR  (N4) INIT <2007>
1 #59-1-2   (N8)
*
* 1 ST-V VIEW OF A-STATUS                       /* TT1
*  2 DATE-OF-BIRTH                              /* TT1
*  2 PROCESS-IND                                /* TT1
1 CONTACT VIEW OF A-CONTACTS                    /* TT1
  2 SSN                                         /* TT1
  2 DATE-OF-BIRTH                               /* TT1
*
1 INT-1099-V VIEW OF A-INT-1099
 2 SSN       (N9)                                     /* JT1
 2 REDEFINE SSN 
  3 SSN-A             (A9)
 2 SSN-TAX-ID-IND     (A1)
 2 CONTACT-ID         (N8)                      /* JT1
*  2 ADDR-1    (A25)                                  /* JT1 start
*  2 ADDR-1-A  (A25)
*  2 ADDR-2    (A25)
*  2 REDEFINE ADDR-2
*   3 #A2   (A1/1:25)
*  2 ZIP-CODE   (N9)
*  2 REDEFINE ZIP-CODE
*   3 ZIP-1    (N5)
*   3 ZIP-2    (N4)                                   /* JT1 end
 2 AMOUNT    (P9.2)
 2 GROSS-AMT   (P9.2)
 2 RELATED-ID-NUMBER    (N6)
* 2 NAME         (A25)                                /* JT1 
 2 INSURED      (A25)
 2 INT-TYPE     (A1)
*
1 #PREM-PAID  (P9.2)
1 #ZIP      (N9)
1 REDEFINE #ZIP
  2 #ZIP-1    (N5)
  2 #ZIP-2    (A4)
1 REDEFINE #ZIP
  2 #ZIP-A   (A9)
1 #NUM-PAYEES    (N6)
1 #IN    (I2)
1 #STATE   (A2)
1 REDEFINE #STATE
  2 #ST1    (A1)
  2 #ST2    (A1)
1 #TYPE-RPT  (A7) INIT<'1099R'>
*
1 #RECIPIENT   (4)    /* all 4 contain the same info for 1 member
 2 #R-GROSS   (A13)
 2 #R-TAX     (A13)
 2 #R-TAX-DET (A1)
 2 #R-ID      (A11)
 2 #R-NAME    (A30)
 2 #R-INSURED (A30)
 2 #R-PREMIUM (A13)
 2 #R-ADDR1   (A40)
 2 #R-ADDR1-A (A40)
 2 #R-ADDR2   (A40)
 2 #R-DIST    (A1)
 2 #R-MEM-NUM (A6)                                               /* PM10
*
1 #PAYOR       (4)   /* 4 different members
 2 #P-GROSS   (A13)
 2 #P-TAX     (A13)
 2 #P-TAX-DET (A1)
 2 #P-ID      (A11)
 2 #P-NAME    (A30)
 2 #P-INSURED (A30)
 2 #P-PREMIUM (A13)
 2 #P-ADDR1   (A40)
 2 #P-ADDR1-A (A40)
 2 #P-ADDR2   (A40)
 2 #P-DIST    (A1)
 2 #P-MEM-NUM (A6)                                               /* PM10
*
1 #I1       (I2)
1 #FINDX    (I2)
1 #H-ZIP    (A10)
1 #HOLD-ID  (A11)
1 #LAST        (A30)
1 #FIRST       (A30)
1 #SUFFIX      (A30)
1 #EXTRA       (A30)
1 #HOLD-INTER  (A30)
1 #DEL         (A1)  INIT <','>
1 #TOT-AMOUNT  (N9.2)
1 #TOT-GROSS   (N9.2)
1 #TOT-PREM    (N9.2)
1 #YYYYMMDD   (N8)
1 REDEFINE #YYYYMMDD
 2 #YYYY   (N4)
 2 #MM     (N2)
 2 #SS     (N2)
*
1 #MIN-AMT (P3) INIT <10>                                         /* PM1
*
1 #NAME        (A25)                                              /* JT1
1 #ADD-LINE1   (A25)                                              /* JT1
1 #ADD-LINE2   (A25)                                              /* JT1
1 #ADD-LINE3   (A25)                                              /* JT1   
1 #LETTER            (A7) CONST <'!LETTER'>                        /* JT1 /* bz-Name-C
1 Letter             (A) DYNAMIC                                  /* JT1
*
END-DEFINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
** LIMIT 5
FORMAT (1) PS=62
          LS=133
WRITE (1) TITLE LEFT  5T 'AP1099RT'
                     27T 'AAFMAA'
              / 40T'2007 IRS REPORT TYPE -' 64T #TYPE-RPT /
             / 4T 'SSN' 21T 'NAME' 50T 'ADDRESS' 76T 'GROSS'
              92T 'TAX' 108T 'PREM' 120T 'ID' 125T 'TP'  /
MOVE '999-99-9999'      TO #R-ID   (*)
MOVE '   999,999.99'    TO #R-GROSS(*)
MOVE '   999,999.99'    TO #R-TAX  (*)
MOVE '   999,999.99'    TO #R-PREMIUM(*)
MOVE '6'                TO #R-DIST (*)
MOVE 'X'                TO #R-TAX-DET(*)
MOVE 'XXXX1099RXXXXXXX' TO #R-NAME (*)
MOVE 'XXXXXXXXXXXXXXXX' TO #R-ADDR1(*)
MOVE 'XXXXXXXXXXXXXXXX' TO #R-ADDR1-A(*)
MOVE 'XXXXXXXXXXXXXXXX' TO #R-ADDR2(*)
MOVE '999999'           TO #R-MEM-NUM(*)
WRITE (2) NOTITLE USING FORM 'AF1099R'
*
MOVE 1 TO #FINDX
*
READ INT-1099-V IN LOGICAL BY YEAR-INT-TYPE-KEY STARTING FROM '20072'
  IF INT-TYPE NE '2'
    ESCAPE BOTTOM
  END-IF
*
  COMPUTE #PREM-PAID = GROSS-AMT - AMOUNT
*
* IF #PREM-PAID LT 0                                             /* YAK
*   WRITE ID-NUMBER 'NEGATIVE PREMS-PAID'                        /* YAK
* END-IF                                                         /* YAK
*
  MOVE 0 TO AMOUNT                                                /* PM7
*
* IF AMOUNT < #MIN-AMT                                            /* PM7
*   ESCAPE TOP                                                    /* PM7
* END-IF                                                          /* PM7
*
  COMPUTE #TOT-PREM = #TOT-PREM + #PREM-PAID
  COMPUTE #TOT-GROSS = #TOT-GROSS + GROSS-AMT
  COMPUTE #TOT-AMOUNT = #TOT-AMOUNT + AMOUNT
*
  MOVE '6'           TO #R-DIST   (*)
  MOVE ' '           TO #R-TAX-DET(*)
  MOVE EDITED GROSS-AMT (EM=ZZ,ZZZ,ZZ9.99)  TO #R-GROSS  (*)
  MOVE EDITED AMOUNT (EM=ZZ,ZZZ,ZZ9.99)     TO #R-TAX    (*)
  MOVE EDITED #PREM-PAID (EM=ZZ,ZZZ,ZZ9.99) TO #R-PREMIUM(*)
  MOVE EDITED SSN       (EM=999-99-9999)    TO #R-ID     (*)      /* JT1
*
  PERFORM PRINT-1099
END-READ
*
WRITE (1) 30T 'NUMBER OF PAYEES -' 50T #NUM-PAYEES ' TYPE = 2'
WRITE (1) 30T 'TOTAL PREMIUM    -'    50T #TOT-PREM
WRITE (1) 30T 'TOTAL GROSS      -'    50T #TOT-GROSS
WRITE (1) 30T 'TOTAL TAX        -'    50T #TOT-AMOUNT
RESET #NUM-PAYEES #TOT-PREM #TOT-GROSS #TOT-AMOUNT
NEWPAGE (1)
*
READ INT-1099-V IN LOGICAL BY YEAR-INT-TYPE-KEY STARTING FROM '2007C'
  IF INT-TYPE NE  'C'
    ESCAPE BOTTOM
  END-IF
*
  COMPUTE #PREM-PAID = GROSS-AMT - AMOUNT
*
* IF #PREM-PAID LT 0                                             /* YAK
*   WRITE ID-NUMBER 'NEGATIVE PREMS-PAID'                        /* YAK
* END-IF                                                         /* YAK
*
  IF AMOUNT < #MIN-AMT                                            /* PM1
    ESCAPE TOP                                                    /* PM1
  END-IF                                                          /* PM1
*
  COMPUTE #TOT-PREM = #TOT-PREM + #PREM-PAID
  COMPUTE #TOT-GROSS = #TOT-GROSS + GROSS-AMT
  COMPUTE #TOT-AMOUNT = #TOT-AMOUNT + AMOUNT
*
  MOVE '7'           TO #R-DIST   (*) /* added per elb 2/99
  MOVE ' '           TO #R-TAX-DET(*)
  MOVE EDITED GROSS-AMT (EM=ZZ,ZZZ,ZZ9.99)  TO #R-GROSS  (*)
  MOVE EDITED AMOUNT (EM=ZZ,ZZZ,ZZ9.99)     TO #R-TAX    (*)
  MOVE EDITED #PREM-PAID (EM=ZZ,ZZZ,ZZ9.99) TO #R-PREMIUM(*)
  MOVE EDITED SSN       (EM=999-99-9999)    TO #R-ID     (*)
*
  PERFORM PRINT-1099
END-READ
*
WRITE (1) 30T 'NUMBER OF PAYEES -' 50T #NUM-PAYEES ' TYPE = C'
WRITE (1) 30T 'TOTAL PREMIUM    -'    50T #TOT-PREM
WRITE (1) 30T 'TOTAL GROSS      -'    50T #TOT-GROSS
WRITE (1) 30T 'TOTAL TAX        -'    50T #TOT-AMOUNT
RESET #NUM-PAYEES #TOT-PREM #TOT-AMOUNT #TOT-GROSS
NEWPAGE (1)
*
MOVE *DATN TO #YYYYMMDD
SUBTRACT 59 FROM #YYYY
SUBTRACT  6 FROM #MM
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
MOVE #YYYYMMDD TO #59-1-2
*
READ INT-1099-V IN LOGICAL BY YEAR-INT-TYPE-KEY STARTING FROM '2007M'
  IF INT-TYPE NE 'M'
    ESCAPE BOTTOM
  END-IF
*
  IF AMOUNT < #MIN-AMT                                            /* PM1
    ESCAPE TOP                                                    /* PM1
  END-IF                                                          /* PM1
*
* gross amount will be zero in MEC cases /* add back 2-23-04 per McGrail
  COMPUTE #PREM-PAID = GROSS-AMT - AMOUNT                         /* PM6
  COMPUTE #TOT-PREM = #TOT-PREM + #PREM-PAID                      /* PM6
  COMPUTE #TOT-GROSS = #TOT-GROSS + GROSS-AMT                     /* PM6
* RESET #PREM-PAID                                                /* PM6
* RESET #TOT-GROSS                                                /* PM6
  COMPUTE #TOT-AMOUNT = #TOT-AMOUNT + AMOUNT
*
  MOVE '1' TO #R-DIST (*)   /* default
*
  FIND CONTACT WITH SSN = INT-1099-V.SSN                         /* JT1      /* TT1
*    IF ST-V.PROCESS-IND = 'S'                                /* RE1
*      ESCAPE TOP                                             /* RE1
*    END-IF                                                   /* RE1
*
*   IF #PREM-PAID = 0                                         /* PM5 PM9
*     MOVE 'L' TO #R-DIST (*)                                 /* PM5 PM9
*   ELSE                                                      /* PM5 PM9
      IF DATE-OF-BIRTH LT #59-1-2       /* over 59 1/2
        MOVE '7' TO #R-DIST (*)
      ELSE
        MOVE '1' TO #R-DIST (*)
      END-IF
*   END-IF                                                    /* PM5 PM9
  END-FIND
*
  MOVE ' '           TO #R-TAX-DET(*)
  MOVE EDITED GROSS-AMT (EM=ZZ,ZZZ,ZZ9.99)  TO #R-GROSS  (*)
  MOVE EDITED AMOUNT (EM=ZZ,ZZZ,ZZ9.99)     TO #R-TAX    (*)
  MOVE EDITED #PREM-PAID (EM=ZZ,ZZZ,ZZ9.99) TO #R-PREMIUM(*)
  MOVE EDITED SSN       (EM=999-99-9999)    TO #R-ID     (*)
*
  PERFORM PRINT-1099
END-READ
*
WRITE (1) 30T 'NUMBER OF PAYEES -' 50T #NUM-PAYEES ' TYPE = M'
WRITE (1) 30T 'TOTAL PREMIUM    -'    50T #TOT-PREM
WRITE (1) 30T 'TOTAL GROSS      -'    50T #TOT-GROSS
WRITE (1) 30T 'TOTAL TAX        -'    50T #TOT-AMOUNT
RESET #NUM-PAYEES #TOT-PREM #TOT-AMOUNT #TOT-GROSS
NEWPAGE (1)
*
** New Type 'L'                                                   /* PM8
READ INT-1099-V IN LOGICAL BY YEAR-INT-TYPE-KEY STARTING FROM '2007L'
  IF INT-TYPE NE 'L'
    ESCAPE BOTTOM
  END-IF
*
  IF AMOUNT < #MIN-AMT
    ESCAPE TOP
  END-IF
*
  COMPUTE #PREM-PAID = GROSS-AMT - AMOUNT
  COMPUTE #TOT-PREM = #TOT-PREM + #PREM-PAID
  COMPUTE #TOT-GROSS = #TOT-GROSS + GROSS-AMT
  COMPUTE #TOT-AMOUNT = #TOT-AMOUNT + AMOUNT
*
  MOVE 'L' TO #R-DIST (*)   /* default
  FIND CONTACT WITH SSN = INT-1099-V.SSN                               /* PM9  /* JT1
*    IF ST-V.PROCESS-IND = 'S'                                     /* PM9     RE1
*      ESCAPE TOP                                                  /* PM9     RE1
*    END-IF                                                        /* PM9     RE1
*
    IF DATE-OF-BIRTH GT #59-1-2     /* under 59 1/2               /* PM9
      MOVE '1' TO #R-DIST (*)                                     /* PM9
    END-IF                                                        /* PM9
  END-FIND                                                        /* PM9
  MOVE ' '           TO #R-TAX-DET(*)
  MOVE EDITED GROSS-AMT (EM=ZZ,ZZZ,ZZ9.99)  TO #R-GROSS  (*)
  MOVE EDITED AMOUNT (EM=ZZ,ZZZ,ZZ9.99)     TO #R-TAX    (*)
  MOVE EDITED #PREM-PAID (EM=ZZ,ZZZ,ZZ9.99) TO #R-PREMIUM(*)
  MOVE EDITED SSN       (EM=999-99-9999)    TO #R-ID     (*)
*
  PERFORM PRINT-1099
END-READ
*
WRITE (1) 30T 'NUMBER OF PAYEES -' 50T #NUM-PAYEES ' TYPE = L'
WRITE (1) 30T 'TOTAL COST BASIS -'    50T #TOT-PREM
WRITE (1) 30T 'TOTAL GROSS      -'    50T #TOT-GROSS
WRITE (1) 30T 'TOTAL TAX        -'    50T #TOT-AMOUNT
RESET #NUM-PAYEES #TOT-PREM #TOT-AMOUNT #TOT-GROSS
NEWPAGE (1)
*
READ INT-1099-V IN LOGICAL BY YEAR-INT-TYPE-KEY STARTING FROM '2007N'
  IF INT-TYPE NE 'N'
    ESCAPE BOTTOM
  END-IF
*
* RESET AMOUNT #TOT-AMOUNT                                        /* PM2
*
* IF AMOUNT < #MIN-AMT                                            /* PM3
*   ESCAPE TOP                                                    /* PM3
* END-IF                                                          /* PM3
*
  RESET #PREM-PAID #TOT-PREM
  COMPUTE #TOT-GROSS = #TOT-GROSS + GROSS-AMT
  COMPUTE #TOT-AMOUNT = #TOT-AMOUNT + AMOUNT                      /* PM4
  MOVE '7'           TO #R-DIST   (*)
  IF AMOUNT GT 0                                                  /* PM4
    MOVE EDITED AMOUNT (EM=ZZ,ZZZ,ZZ9.99)   TO #R-TAX    (*)      /* PM4
    MOVE ' '                                TO #R-TAX-DET(*)      /* PM4
  ELSE                                                            /* PM4
    MOVE 'X'                                TO #R-TAX-DET(*)
    MOVE ' '                                TO #R-TAX    (*) /* 2/96
  END-IF                                                          /* PM4
  MOVE EDITED GROSS-AMT (EM=ZZ,ZZZ,ZZ9.99)  TO #R-GROSS  (*)
  MOVE '    0'                              TO #R-PREMIUM(*)
  MOVE EDITED SSN       (EM=999-99-9999)    TO #R-ID     (*)
*
  PERFORM PRINT-1099
END-READ
*
WRITE (1) 30T 'NUMBER OF PAYEES -' 50T #NUM-PAYEES ' TYPE = N'
WRITE (1) 30T 'TOTAL PREMIUM    -'    50T #TOT-PREM
WRITE (1) 30T 'TOTAL GROSS      -'    50T #TOT-GROSS
WRITE (1) 30T 'TOTAL TAX        -'    50T #TOT-AMOUNT
RESET #NUM-PAYEES #TOT-PREM #TOT-GROSS #TOT-AMOUNT
NEWPAGE (1)
*
READ INT-1099-V IN LOGICAL BY YEAR-INT-TYPE-KEY STARTING FROM '2007P'
  IF INT-TYPE NE 'P'
    ESCAPE BOTTOM
  END-IF
*
  IF AMOUNT < #MIN-AMT                                            /* PM1
    ESCAPE TOP                                                    /* PM1
  END-IF                                                          /* PM1
*
  COMPUTE #TOT-PREM = #TOT-PREM + 0
  COMPUTE #TOT-GROSS = #TOT-GROSS + GROSS-AMT
  COMPUTE #TOT-AMOUNT = #TOT-AMOUNT + GROSS-AMT
*
  MOVE '7'           TO #R-DIST   (*)
  MOVE ' '           TO #R-TAX-DET(*)
  MOVE EDITED GROSS-AMT (EM=ZZ,ZZZ,ZZ9.99)  TO #R-GROSS  (*)
  MOVE EDITED AMOUNT (EM=ZZ,ZZZ,ZZ9.99)     TO #R-TAX    (*)
  MOVE '    0'                              TO #R-PREMIUM(*)
  MOVE EDITED SSN       (EM=999-99-9999)    TO #R-ID     (*)
  PERFORM PRINT-1099
END-READ
*
WRITE (1) 30T 'NUMBER OF PAYEES -' 50T #NUM-PAYEES ' TYPE = P'
WRITE (1) 30T 'NUMBER OF PAYEES -' 50T #NUM-PAYEES
WRITE (1) 30T 'TOTAL PREMIUM    -'    50T #TOT-PREM
WRITE (1) 30T 'TOTAL GROSS      -'    50T #TOT-GROSS
WRITE (1) 30T 'TOTAL TAX        -'    50T #TOT-AMOUNT
RESET #NUM-PAYEES #TOT-PREM #TOT-GROSS #TOT-AMOUNT
NEWPAGE (1)
*
IF #FINDX GT 1   /* print remaining payor sheet
  FOR #I1 1 TO 4        /* Payors copy
    MOVE #P-DIST    (#I1) TO #R-DIST    (#I1)
    MOVE #P-TAX-DET (#I1) TO #R-TAX-DET (#I1)
    MOVE #P-GROSS   (#I1) TO #R-GROSS   (#I1)
    MOVE #P-TAX     (#I1) TO #R-TAX     (#I1)
    MOVE #P-PREMIUM (#I1) TO #R-PREMIUM (#I1)
    MOVE #P-ID      (#I1) TO #R-ID      (#I1)
    MOVE #P-NAME    (#I1) TO #R-NAME    (#I1)
    MOVE #P-INSURED (#I1) TO #R-INSURED (#I1)
    MOVE #P-ADDR1   (#I1) TO #R-ADDR1   (#I1)
    MOVE #P-ADDR1-A (#I1) TO #R-ADDR1-A (#I1)
    MOVE #P-ADDR2   (#I1) TO #R-ADDR2   (#I1)
    MOVE #P-MEM-NUM (#I1) TO #R-MEM-NUM (#I1)                    /* PM10
  END-FOR
  WRITE (4) NOTITLE USING FORM 'AF1099R'
END-IF
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE PRINT-1099
* * * * * * * * * * * * * * *
*
RESET #PDA-ADDRESS                                     /* JT1 start                      
  MOVE 'P' TO #ADD-TYPE                                         
  #ADD-CONTACT-ID := INT-1099-V.CONTACT-ID                       
  CALLNAT 'ADDN0001' #PDA-ADDRESS
  Letter := #LETTER
  CALLNAT 'GPRS0CNT' #ADD-CONTACT-ID Letter
  #NAME := Letter                                               
*
 MOVE #ADD-LINE-1 TO #ADD-LINE1                                
 MOVE #ADD-LINE-2 TO #ADD-LINE2                                
 MOVE #ADD-LINE-3 TO #ADD-LINE3                                  
 MOVE #ADD-STATE TO #STATE   
 MOVE EDITED #ADD-ZIP-CODE (EM=99999-9999) TO #H-ZIP                                       
*  
* MOVE '  ' TO #STATE
*
* IF ZIP-1 = 0
*   RESET #STATE
* ELSE
*   FOR #IN 25 TO 1 STEP -1
*     IF #A2 (#IN) NE ' '
*       MOVE  #A2 (#IN) TO #ST2
*       MOVE  #A2 (#IN - 1) TO #ST1
*       RESET #A2 (#IN - 1)
*       RESET #A2 (#IN)
*       ESCAPE BOTTOM
*     END-IF
*   END-FOR
* END-IF
* *
* IF ZIP-2 = 0
*   MOVE ZIP-1 TO #ZIP-1
*   MOVE '    ' TO #ZIP-2
*   MOVE #ZIP-A TO #H-ZIP
* ELSE
*   MOVE ZIP-CODE TO #ZIP
*   MOVE EDITED ZIP-CODE (EM=99999-9999) TO #H-ZIP
* END-IF                                              /* JT1 end
*
ADD 1 TO #NUM-PAYEES
WRITE (1) 2T CONTACT.SSN (EM=999-99-9999) 15T #NAME 42T #ADD-LINE1   /* JT1
        70T GROSS-AMT(EM=-ZZZ,ZZZ,ZZ9.99)
        86T AMOUNT(EM=-ZZZ,ZZZ,ZZ9.99)
        102T #PREM-PAID(EM=-ZZZ,ZZZ,ZZ9.99)
        118T RELATED-ID-NUMBER (EM=999999) INT-TYPE /
        15T INSURED  42T #ADD-LINE2 /                       /* JT1
        42T #ADD-LINE3 / 42T #STATE 48T #H-ZIP              /* JT1
SEPARATE #NAME INTO #LAST #FIRST #SUFFIX #EXTRA WITH DELIMITER #DEL    /*JT1
MOVE LEFT JUSTIFIED #FIRST TO #HOLD-INTER
*
IF #SUFFIX = '   '
  COMPRESS #HOLD-INTER #LAST INTO #HOLD-INTER
ELSE
  COMPRESS #HOLD-INTER #LAST INTO #HOLD-INTER
  COMPRESS #HOLD-INTER ',' #SUFFIX INTO #HOLD-INTER
     LEAVING NO SPACE
END-IF
*
MOVE #HOLD-INTER TO #R-NAME    (*)
MOVE INSURED     TO #R-INSURED (*)
*
RESET #R-ADDR1 (*) #R-ADDR1-A (*) #R-ADDR2 (*)
  MOVE #ADD-LINE3 TO #R-ADDR2 (*)               /* JT1
  MOVE #ADD-LINE2 TO #R-ADDR1-A (*)             /* JT1
  MOVE #ADD-LINE1 TO #R-ADDR1   (*)             /* JT1
*
* IF ADDR-2 NE ' '
*   COMPRESS ADDR-2 #STATE #H-ZIP INTO #R-ADDR2 (1)
*   MOVE #R-ADDR2 (1) TO #R-ADDR2 (*)
*   MOVE ADDR-1-A TO #R-ADDR1-A (*)
*   MOVE ADDR-1   TO #R-ADDR1   (*)
* ELSE
*   IF ADDR-1-A NE ' '
*     COMPRESS ADDR-1-A #STATE #H-ZIP INTO #R-ADDR2 (1)
*     MOVE #R-ADDR2 (1) TO #R-ADDR2 (*)
*     MOVE ADDR-1 TO #R-ADDR1 (*)
*   ELSE
*     COMPRESS ADDR-1 #STATE #H-ZIP INTO #R-ADDR2 (1)
*     MOVE #R-ADDR2 (1) TO #R-ADDR2 (*)
*   END-IF
* END-IF
*
IF RELATED-ID-NUMBER NE 0                                        /* PM10
  MOVE EDITED RELATED-ID-NUMBER (EM=999999) TO #R-MEM-NUM (*)    /* PM10
END-IF                                                           /* PM10
*
* IF #NUM-PAYEES LE 10
WRITE (2) NOTITLE USING FORM 'AF1099R'   /* recipient copy
* END-IF
*
MOVE #R-DIST    (1) TO #P-DIST    (#FINDX) /* payors copy
MOVE #R-TAX-DET (1) TO #P-TAX-DET (#FINDX)
MOVE #R-GROSS   (1) TO #P-GROSS   (#FINDX)
MOVE #R-TAX     (1) TO #P-TAX     (#FINDX)
MOVE #R-PREMIUM (1) TO #P-PREMIUM (#FINDX)
MOVE #R-ID      (1) TO #P-ID      (#FINDX)
MOVE #R-NAME    (1) TO #P-NAME    (#FINDX)
MOVE #R-INSURED (1) TO #P-INSURED (#FINDX)
MOVE #R-ADDR1   (1) TO #P-ADDR1   (#FINDX)
MOVE #R-ADDR1-A (1) TO #P-ADDR1-A (#FINDX)
MOVE #R-ADDR2   (1) TO #P-ADDR2   (#FINDX)
MOVE #R-MEM-NUM (1) TO #P-MEM-NUM (#FINDX)                       /* PM10
*
ADD 1 TO #FINDX
*
* IF #NUM-PAYEES GT 10
*   MOVE 1 TO #FINDX
*   ESCAPE ROUTINE
* END-IF
*
IF #FINDX GT 4
  FOR #I1 1 TO 4        /* Payors copy
    MOVE #P-DIST    (#I1) TO #R-DIST    (#I1)
    MOVE #P-TAX-DET (#I1) TO #R-TAX-DET (#I1)
    MOVE #P-GROSS   (#I1) TO #R-GROSS   (#I1)
    MOVE #P-TAX     (#I1) TO #R-TAX     (#I1)
    MOVE #P-PREMIUM (#I1) TO #R-PREMIUM (#I1)
    MOVE #P-ID      (#I1) TO #R-ID      (#I1)
    MOVE #P-NAME    (#I1) TO #R-NAME    (#I1)
    MOVE #P-INSURED (#I1) TO #R-INSURED (#I1)
    MOVE #P-ADDR1   (#I1) TO #R-ADDR1   (#I1)
    MOVE #P-ADDR1-A (#I1) TO #R-ADDR1-A (#I1)
    MOVE #P-ADDR2   (#I1) TO #R-ADDR2   (#I1)
    MOVE #P-MEM-NUM (#I1) TO #R-MEM-NUM (#I1)                    /* PM10
  END-FOR
*
  WRITE (4) NOTITLE USING FORM 'AF1099R'
  MOVE 1 TO #FINDX
  RESET #P-GROSS    (*)
  RESET #P-TAX      (*)
  RESET #P-TAX-DET  (*)
  RESET #P-ID       (*)
  RESET #P-NAME     (*)
  RESET #P-ADDR1    (*)
  RESET #P-ADDR1-A  (*)
  RESET #P-ADDR2    (*)
  RESET #P-PREMIUM  (*)
  RESET #P-DIST     (*)
  RESET #P-MEM-NUM  (*)                                          /* PM10
END-IF
*
RESET #R-GROSS    (*)
RESET #R-TAX      (*)
RESET #R-TAX-DET  (*)
RESET #R-ID       (*)
RESET #R-NAME     (*)
RESET #R-ADDR1    (*)
RESET #R-ADDR1-A  (*)
RESET #R-ADDR2    (*)
RESET #R-PREMIUM  (*)
RESET #R-DIST     (*)
RESET #R-MEM-NUM  (*)                                            /* PM10
*
END-SUBROUTINE
*
END
