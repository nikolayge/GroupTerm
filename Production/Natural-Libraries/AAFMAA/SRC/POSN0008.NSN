* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* <Natural Source Header
/** New Subprogram POSN0008.
/**
/** :author nguentchev
/*  Pending designation
/*  Pending
/*   Primary beneficiary, Contingent beneficiary and Free format=6
DEFINE DATA
PARAMETER
1 #ISN                (P8)
1 #MSG                (A) DYNAMIC
1 #FORMATED           (A1/6)
LOCAL USING POSAPBCI
LOCAL USING POSADSGN
LOCAL USING POSLROLE
LOCAL
1 NT-V
  2 ID-NUMBER  (N6)    /* D = bene desig (1-6)
  2 NOTE-DATE  (N8/60) /* P/A = PRIN/ALT DESIG
  2 REDEFINE NOTE-DATE /* L = linked pols
    3 BENE-DATES-6-POLS (6)
      4 BENE-ISS-DT       (N6/7) /* (D, L)
      4 BENE-SPLIT-IND    (N1/7) /* (D, L)
      4 BENE-LST-UPD      (N8)   /* (D)
      4 BENE-STRT-PEND    (N8)   /* (D)
      4 BENE-FOL-UP-IND   (N1)   /* (D)
      4 BENE-OWN-TRNSF-DT (N8)   /* (D)
      4 BENE-SUC-OWN      (N1)   /* (d)
      4 BENE-NEW-LAYOUT   (N1)   /* (D)/* was -setl-opt
      4 BENE-COM-DIS      (N2)   /* (D)/* Common disaster not used
      4 BENE-PER-STR      (N1)   /* (D)/* Per Stirpes not user
      4 BENE-FIL1         (A1)
  2 NOTE-CLERK-ID       (A3/60)
  2 REDEFINE NOTE-CLERK-ID
    3 BENE-MISC-6-POLS  (6)
      4 BENE-STATUS      (A1)  /* (D)
      4 BENE-RESTRICT    (A1)  /* (D)
      4 BENE-MISC-PRIM-SEC (2)
        5 BENE-TYPE        (A1) /* (D, P/A)
        5 BENE-SHARE-TYP   (A1) /* (D, P/A)
        5 BENE-MISC-FIL-2  (A12)
  2 NOTE-TEXT          (A60/60)
  2 REDEFINE NOTE-TEXT
    3 BENE-TEXTS-6-POLS (6)
      4 BENE-TEXT-PRIM-SEC (2)
        5 BENE-TEXT-OCC    (5)
          6 BENE-DESIG-2    (A60)
          6 REDEFINE BENE-DESIG-2
            7 BENE-BN-NAME        (A25)
            7 BENE-BN-SSN         (A9)
            7 BENE-BN-REL         (A1)
            7 BENE-BN-SHARE       (A10)
            7 BENE-BN-SET-OPT     (A1)
            7 BENE-BN-RESTRICTION (A1)
            7 BENE-BN-DOB-MM      (A2)
            7 BENE-BN-DOB-DD      (A2)
            7 BENE-BN-DOB-YYYY    (A4)
            7 BENE-BN-NEW-FILL    (A5)
  2 BENE-CONTACT-ID         (N8/60)
  2 REDEFINE BENE-CONTACT-ID
    3 BENE-CONTACT-6-POLS    (6)
      4 BENE-CONTACT-PROM-SEC (2)
        5 BENE-CONTACT-OCC     (5)
          6 BENE-CONTACT-ID-R   (N8)
  2 LST-BD-FINALIZATION-USER (A3)
*
1 DRAFT-V VIEW OF A-BENE-DRAFT
  2 ID-NUMBER           (N6)
  2 NOTE-DATE           (N8/60)
  2 NOTE-CLERK-ID       (A3/60)
  2 NOTE-TEXT           (A60/60)
  2 BENE-CONTACT-ID     (N8/60)
  2 LST-BD-FINALIZATION-USER (A3)
*
1 CT-V VIEW OF A-CONTACTS
  2 CONTACT-ID
  2 SSN
  2 FIRST-NAME
  2 MIDDLE-NAME
  2 LAST-NAME
  2 SUFFIX
*
1 POLICY VIEW OF A-STATUS
  2 C*ACTIVE-SEGMENTS (N3)
  2 STATUS        (9)
  2 POLICY-ID     (9)
  2 PLAN          (9)
  2 ISSUE-DATE    (9)
  2 SPLIT-IND     (9)
*
1 #PSTAT          (A1/7)
1 #PID            (A16/7)
1 #BENE-SPLIT     (A1/7)
1 #PID-NBR        (I2)
1 FIND-ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID
  2 SSN
  2 PROCESS-IND
  2 FORMER-SPOUSE-SSN
  2 FORMER-SPOUSE-CONTACT-ID
  2 FORMER-HUSBAND-SSN
  2 FORMER-HUSBAND-CONTACT-ID
  2 SSN-SP
*
1 DS-V VIEW OF A-DESIGNATION
  2 ALL-CHILDREN (A1)
*
1 Bene-rec-is-created             (L)
1 #DESIGNATION-ISN                (N8)
1 #REF-NUMBER                     (N6)
1 #REF-TYPE                       (A20)
1 #SSN-I                          (P9)
1 #CONTACT-ID                     (N8)
1 #SSN                            (N9)
1 REDEFINE #SSN
  2 #SSN-A                        (A9)
1 #DISPLAY-CONTACT-NAME           (A50)
1 #WORK-DATE  (A6)
1 REDEFINE #WORK-DATE
  2 #WORK-YY   (A2)
  2 REDEFINE #WORK-YY
    3 #WORK-YY-N(N2)
  2 #WORK-REST (A4)
1 #WORK-8        (A8) 1 REDEFINE #WORK-8
  2 #WORK-8-N    (N8)
1 #EXCEPTION     (A250)
1 #BENE-NAME     (A25)
1 #ADD           (I4) CONST <1>
1 REPLACE-IT     (A) DYNAMIC CONST <'REPLACE'>
1 BLANK          (A1) CONST <' '>
1 #MESSAGE-LOG   (I4) CONST <2>
1 #ERROR-LOG     (I4) CONST <3>
1 #TAB           (A1) CONST <H'09'>
1 #I1         (I2)
1 #I2         (I2)
1 #I3         (I2)
1 J           (I2)
1 K           (I2)
END-DEFINE
*
DEFINE WORK FILE 3 '/usr/SAG/tmp/BeneExeptions.txt' TYPE 'ASCII-COMPRESSED'
  ATTRIBUTES 'APPEND'
IF #ISN = 0
  COMPRESS
    'PRODUCT_ID'
    'PolStat'
    'CONTACT_ID'
    'RELATION'
    'SSN'
    'BENE-FINAL'
    'NEW-LAYOUT'
    'DESIGNATION-TYPE'
    'RELATION-TYPE'
    'BENE-SHARE'
    'REFERENCE-NUMBER'
    'REFERENCE-TYPE'
    'BENE-NAME'
    INTO #EXCEPTION WITH DELIMITER #TAB
  WRITE WORK 3 #EXCEPTION
  ESCAPE ROUTINE
END-IF
GL.
GET DRAFT-V #ISN
IF *ISN (GL.) <= 0
  COMPRESS 'BENE-DRAFT record doesnt exist. ISN=' #ISN INTO #MSG
  CALLNAT 'POSLOG' #MESSAGE-LOG #MSG
  ESCAPE ROUTINE
END-IF
MOVE BY NAME DRAFT-V TO NT-V
RESET #PBENE
PERFORM PROCESS-RECORD
/*
DEFINE PROCESS-RECORD
/*     ==============
FIND POLICY WITH ID-NUMBER = NT-V.ID-NUMBER
END-FIND
FOR #I1 1 TO 6
  IF NT-V.BENE-ISS-DT (#I1, 1) EQ 0
    ESCAPE TOP
  END-IF
/*         Collect policy pool for current beneficiary CN
  RESET #PID (*) #PID-NBR
  FOR #I3 1 TO 7  /* Same Designation
    IF NT-V.BENE-ISS-DT (#I1,#I3) = 0
      ESCAPE TOP
    END-IF
    MOVE EDITED NT-V.BENE-ISS-DT (#I1,#I3) (EM=999999) TO #WORK-DATE
    IF #WORK-YY-N LT 16
      #WORK-8 := '20'
    ELSE
      #WORK-8 := '19'
    END-IF
    COMPRESS #WORK-8 #WORK-YY #WORK-REST INTO #WORK-8 LEAVING NO
    FOR J 1 TO POLICY.C*ACTIVE-SEGMENTS
      IF POLICY.ISSUE-DATE (J) = #WORK-8-N
          AND POLICY.SPLIT-IND (J) = NT-V.BENE-SPLIT-IND (#I1,#I3)
        ADD 1 TO #PID-NBR
        #PID (#PID-NBR) := POLICY.POLICY-ID (J)
        #PSTAT (#PID-NBR) := POLICY.STATUS (J)
        #BENE-SPLIT (#PID-NBR) := NT-V.BENE-SPLIT-IND (#I1,#I3)
      END-IF
    END-FOR
  END-FOR
/*                Create designation record
  PERFORM CREATE-DESIGNATION
  #PBENE.DESIGNATION-ID := #DSGN.DESIGNATION-ID
*
  IF #FORMATED (#I1) = 'Y'
    BeneLoop.
    FOR #I2 1 TO 2 /* Primary=1 Contingent=2
      IF #I2 = 1
        #PBENE.RELATION := PrimaryBene
      ELSE
        #PBENE.RELATION := ContingentBene
      END-IF
      #PBENE.BENE-TYPE := NT-V.BENE-TYPE (#I1,#I2)
      #PBENE.BENE-SHARE-TYPE := NT-V.BENE-SHARE-TYP (#I1,#I2)
      IF  #PBENE.BENE-TYPE = 'A' /* ALL CHILDREN
          AND #I2 = 2
        FIND DS-V WITH DESIGNATION-ID = #DSGN.DESIGNATION-ID
          DS-V.ALL-CHILDREN := '2'
          UPDATE
        END-FIND
      END-IF
      FOR #I3 1 TO 5
        IF NT-V.BENE-BN-NAME (#I1,#I2,#I3) = BLANK
          ESCAPE TOP
        END-IF
        IF NT-V.BENE-BN-SSN (#I1,#I2,#I3) = MASK (999999999)
            AND NT-V.BENE-BN-SSN (#I1,#I2,#I3) NE '000000000'
          #SSN-A := NT-V.BENE-BN-SSN (#I1,#I2,#I3)
        ELSE
          RESET #SSN-A
        END-IF
/*      #POWN.BENE-NAME := NT-V.BENE-BN-NAME (#I1,#I2,#I3)
        /* Search by SSN
        IF #SSN > 0
          FIND (1) CT-V WITH SSN = #SSN
            IF NO RECORDS FOUND
              ESCAPE BOTTOM
            END-NOREC
            #PBENE.CONTACT-ID := CT-V.CONTACT-ID
          END-FIND
        END-IF
        /* Search by DOB and Name
        IF NT-V.BENE-CONTACT-ID-R  (#I1,#I2,#I3) <= 0
          COMPRESS BENE-BN-DOB-YYYY (#I1,#I2,#I3)
            BENE-BN-DOB-MM (#I1,#I2,#I3)
            BENE-BN-DOB-DD (#I1,#I2,#I3)
            INTO #WORK-8 LEAVING NO
          IF #WORK-8 = MASK (NNNNNNNN)
            FIND CT-V WITH DATE-OF-BIRTH = #WORK-8-N
              #DISPLAY-CONTACT-NAME := FUNCTION-DISP-CT-NAME
                (<CT-V.FIRST-NAME,
                CT-V.MIDDLE-NAME,
                CT-V.LAST-NAME,
                CT-V.SUFFIX>)
              IF #DISPLAY-CONTACT-NAME = NT-V.BENE-BN-NAME (#I1,#I2,#I3)
                #PBENE.CONTACT-ID := CT-V.CONTACT-ID
                ESCAPE BOTTOM
              END-IF
            END-FIND
          END-IF
        END-IF
/*
        IF #PBENE.CONTACT-ID > 0
          #PBENE.INSURED-CN := NT-V.ID-NUMBER
          #PBENE.BENE-FRACTION   := NT-V.BENE-BN-SHARE (#I1,#I2,#I3)
        #PBENE.BENE-RESTRICTED := NT-V.BENE-BN-RESTRICTION (#I1,#I2,#I3)
          #PBENE.SETTLEMENT-TYPE := NT-V.BENE-BN-SET-OPT (#I1,#I2,#I3)
          FOR J 1 TO #PID-NBR
            #PBENE.POLICY-NUMBER := #PID (J)
/*                       Last update data
            MOVE NT-V.LST-BD-FINALIZATION-USER TO #PBENE.ADD-USER
              #PBENE.LAST-UPD-USER
            MOVE BENE-LST-UPD ( #I1 ) TO #PBENE.ADD-DATE
              #PBENE.LAST-UPD-DATE
            IF #PBENE.LAST-UPD-USER = BLANK
              MOVE 'LOD' TO #PBENE.ADD-USER #PBENE.LAST-UPD-USER
            END-IF
            CALLNAT 'POSN0012' #ADD #MSG #PBENE
            /* Change F(inal) to C(urrent)
            CALLNAT 'POSN0014' #PID (J) #MSG
          END-FOR
          RESET #PBENE.CONTACT-ID
        ELSE   /* All or Nothing
          ESCAPE BOTTOM(BeneLoop.)
        END-IF
      END-FOR
    END-FOR
  ELSE /* Create one bene per polocy to link to Designation
    #PBENE.INSURED-CN := NT-V.ID-NUMBER
    FOR #I2 1 TO 2
      IF #I2 = 1
        #PBENE.RELATION := UnformatedBene
      ELSE
        #PBENE.RELATION := UnformContBene
      END-IF
      #PBENE.BENE-TYPE := NT-V.BENE-TYPE (#I1,#I2)
      #PBENE.BENE-SHARE-TYPE := NT-V.BENE-SHARE-TYP (#I1,#I2)
      FOR J 1 TO #PID-NBR
        #PBENE.POLICY-NUMBER := #PID (J)
/*               Last update data
        MOVE NT-V.LST-BD-FINALIZATION-USER TO #PBENE.ADD-USER
          #PBENE.LAST-UPD-USER
        MOVE BENE-LST-UPD ( #I1 ) TO #PBENE.ADD-DATE
          #PBENE.LAST-UPD-DATE
        IF #PBENE.ADD-USER = BLANK
          MOVE 'LOD' TO #PBENE.ADD-USER #PBENE.LAST-UPD-USER
        END-IF
        CALLNAT 'POSN0012' #ADD #MSG #PBENE
        /* Change F(inal) to C(urrent)
        CALLNAT 'POSN0014' #PID (J) #MSG
      END-FOR
    END-FOR
  END-IF
END-FOR
END-SUBROUTINE
*
DEFINE FIND-CONTACT-ID
/*     ---------------
IF #SSN > 0
  FIND (1) CT-V WITH SSN = #SSN
    IF NO RECORDS FOUND
      ESCAPE BOTTOM
    END-NOREC
    NT-V.BENE-CONTACT-ID-R  (#I1,#I2,#I3) := CT-V.CONTACT-ID
  END-FIND
END-IF
IF NT-V.BENE-CONTACT-ID-R  (#I1,#I2,#I3) <= 0
  COMPRESS BENE-BN-DOB-YYYY (#I1,#I2,#I3)
    BENE-BN-DOB-MM (#I1,#I2,#I3)
    BENE-BN-DOB-DD (#I1,#I2,#I3)
    INTO #WORK-8 LEAVING NO
  IF #WORK-8 IS (N8)
    FIND (1) CT-V WITH DATE-OF-BIRTH = #WORK-8-N
      IF CT-V.SSN > 0
        MOVE EDITED CT-V.SSN (EM=999999999) TO #SSN-A
      END-IF
      NT-V.BENE-CONTACT-ID-R  (#I1,#I2,#I3) := CT-V.CONTACT-ID
    END-FIND
  END-IF
END-IF
END-SUBROUTINE
/*
/*
DEFINE CREATE-DESIGNATION
/*     ------------------
*   1 AA STATUS-CODE                       A1 Final, Pending, Validate, Current
*   1 AB PER-STIRPES                       A1 No,PrimaryYes,SecYes,Yes
*   1 AC ALL-CHILDREN                      A1 Yes, No
*   1 AD DATE-SIGNED                       N  8.0  N
*   1 AE COMMON-DISASTER                   N  3.0  Days
*   1 AF DESIGNATION-ID                    N  8.0
* M 1 AG PRIMARY-BD                        A   70  Text
* M 1 AG SECONDARY-BD                      A   70  Text
RESET #DSGN
#DSGN.STATUS-CODE  := 'P'
#DSGN.ALL-CHILDREN := 'N'
#DSGN.DESIGNATION-ID := GET-DSGN-ID (< >)
#DSGN.DATE-SIGNED := BENE-LST-UPD ( #I1 )
#DSGN.PER-STIRPES := BENE-PER-STR ( #I1)
#DSGN.COMMON-DISASTER := BENE-COM-DIS ( #I1 )
/*  Last update data
MOVE 'LOD' TO #DSGN.ADD-USER
MOVE NT-V.LST-BD-FINALIZATION-USER TO #DSGN.LAST-UPD-USER
IF #DSGN.LAST-UPD-USER = BLANK
  MOVE 'LOD' TO #DSGN.LAST-UPD-USER
END-IF
MOVE BENE-LST-UPD ( #I1 ) TO #DSGN.ADD-DATE
  #DSGN.LAST-UPD-DATE
#DSGN.RESTRICTED-IRREVO := NT-V.BENE-RESTRICT ( #I1 )
RESET J K
FOR #I2 1 TO 2
  FOR #I3 1 TO 5
    IF NT-V.BENE-BN-NAME (#I1,#I2,#I3) = ' '
      ESCAPE TOP
    END-IF
    IF #I2 = 1
      ADD 1 TO J
      PRIMARY-BD (J) := BENE-DESIG-2 (#I1,#I2,#I3)
    ELSE
      ADD 1 TO K
      SECONDARY-BD (K) := BENE-DESIG-2 (#I1,#I2,#I3)
    END-IF
  END-FOR
END-FOR
/*
CALLNAT 'POSN0011' #ADD #MSG #DESIGNATION-ISN #DSGN
/*
END-SUBROUTINE
*
ON ERROR
  COMPRESS 'ON ERROR BENE PENDING. CN=' DRAFT-V.ID-NUMBER INTO #MSG
  CALLNAT 'POSLOG' #ERROR-LOG #MSG
  ESCAPE ROUTINE
END-ERROR
*
END
