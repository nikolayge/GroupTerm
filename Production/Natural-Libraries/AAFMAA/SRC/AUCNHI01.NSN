* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
**************************************************************
* Subprogram AUCNHI01 - called from AUCSRV
* Returns short version of Header Information for
* Policy Payments page in AUC
*******************************************************************
*        MODIFICATION LOG
*******************************************************************
* USER   DATE      TAG  REASON
* YAK    05192017       Initial Creation EB&P III
*******************************************************************
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE  /* INPUT
1 #XML_OUTPUT            (A) DYNAMIC           /* OUTPUT
LOCAL USING AUCAHI01
LOCAL USING ERROR_L
LOCAL USING PARSER-X
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
1 #CX                          (I4)
1 #CY                          (I4)
1 #CZ                          (I4)
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY  (L)
1 #LEN                         (I4)
1 #GET         (I4) CONST <0>
1 #INSURED-CI    (N8)
*
END-DEFINE
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE PARSER_ERROR
HeaderInfo.ErrorCode := VAL(#PARSE-ERROR)
HeaderInfo.ErrorDescription := F-ERROR-DESCRIPTION(<#PARSE-ERROR>)
CALLNAT 'AUCNHIS1' #XML_OUTPUT HeaderInfo
ESCAPE ROUTINE
END-SUBROUTINE
/*
DEFINE SUBROUTINE CALLBACK
/*                ========
IF XML_PARSER_CONTENT_IS_EMPTY THEN
  IGNORE
ELSE
  #XML_VALUE := *TRIM (#XML_VALUE)
  MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
  PERFORM PARSE-DOCUMENT
END-IF
END-SUBROUTINE

DECIDE FOR FIRST CONDITION
  WHEN HeaderInfo.CN = 0
    HeaderInfo.ErrorCode := VAL(#NO-INSURED-FOUND)
    HeaderInfo.ErrorDescription := F-ERROR-DESCRIPTION(<#NO-INSURED-FOUND>)
    CALLNAT 'AUCNHIS1' #XML_OUTPUT HeaderInfo
  WHEN NONE  
    IGNORE
END-DECIDE

PERFORM FORMAT-HEADER-INFO

* ------------------------------
DEFINE SUBROUTINE PARSE-DOCUMENT
* ------------------------------
DECIDE ON FIRST #XML_PATH
  VALUE 'HeaderInfo'
    RESET INITIAL HeaderInfo
  VALUE 'HeaderInfo/ActionType/$'
    HeaderInfo.ActionType := VAL(#XML_VALUE)
  VALUE 'HeaderInfo/CN/$'
    HeaderInfo.CN := VAL(#XML_VALUE)    
  VALUE 'HeaderInfo/ContactID/$'
    HeaderInfo.ContactID := VAL(#XML_VALUE)
  VALUE 'HeaderInfo/User/$'
    HeaderInfo.USER := #XML_VALUE
  VALUE 'HeaderInfo/SystemSource/$'
    HeaderInfo.SystemSource := #XML_VALUE
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
* ----------------------------------
DEFINE SUBROUTINE FORMAT-HEADER-INFO
* ----------------------------------
RESET #XML_OUTPUT
IF HeaderInfo.ContactID = 0
  HeaderInfo.ContactID := F-GET-CONTACT-ID(<HeaderInfo.CN>)
END-IF  
CALLNAT 'AUCNHIM1' HeaderInfo
CALLNAT 'AUCNHIS1' #XML_OUTPUT HeaderInfo
COMPRESS '<?xml version="1.0" encoding="' *CODEPAGE '"?>' #XML_OUTPUT INTO #XML_OUTPUT LEAVING NO
END-SUBROUTINE
* ------------

END
