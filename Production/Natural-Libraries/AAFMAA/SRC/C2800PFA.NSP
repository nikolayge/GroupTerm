* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* PGM-ID:  C2800PFA***************************************************
*                                                                    *
* MODIFICATIONS:                                                     *
*    1189   MAKE BLANKET ALLOTMENT NUMBER SHOW FOR GUARD AND         *
*          GUARD RESERVE   PER MITCHELL       JAK                    *
*    0291  CHANGE AIR FORCE ADDRESS FOR RETIRED PER GAIL   JAK       *
* USER   DATE      TAG   REASON                                      *
* DRW    10212004  DW1   make suffix BTR from batch return alot amt  *
* DRW    11022004  DW2   make suffix ALL access all modes            *
* PAM    11082004  PM3   Use 'CL/CLC' suffix to check if allotment   *
*                        chgs are needed for loan pay-off letters.   *
*                        Use 'CLP/CLK' suffix to determine if allot  *
*                        should be printed                           *
* DRW    11082004  DW4   add "AR/FR" to list for blanket code        *
* DRW    11192004  DW5   remove allot auth lines if already Y/S      *
* DRW    05152005  DW6   Add SEX for LTII prem calc                  *
* DRW    04222006  DW7   Add Policy # to RT Renewal FA               *
* PAM    01262007  PM8   Added NEWPAGE to all forms where it was not *
* DRW    03082007  DW9   Use different future Paid-up logic if in    *
*                        ATHPDFAS                                    *
* DRW    03282007  DW10  Check PD-TO Date if #BTR                    *
* DRW    04052007  DW11  Use FBR (Rider) Premium only if Mode is 'G' *
* YAK    04202007  YK1   Change text of the letter for retirees and  *
*                        active duty members                         *
* DRW    04252007  DW12  Allow SAL? Code of "9" to Ind AIP Waiting (AIW)
* DRW    05012007  DW13  Add RT Next Higher Premium if eligible      *
* DRW    05082007  DW14  Calc Paid-Up Date is missing                *
* DRW    05112007  DW15  Move 'AAFMAA' to COMP-CODE for Retired      *
* DRW    05302007  DW16  Make orig suffix 'FRM' do Create an FA form *
* PAm    05312007  PM17  Indicate if FA form is from RT renewal      *
* DRW    05312007  DW18  Use current date in EFFECT DATE if BTR      *
* DRW    05312007  DW19  Make Linked pols do DW9 & DW10 change       *
* DRW    05312007  DW20  Use Alot-CHG-DATE if ALOT-CHG-AUTH   = 'S'  *
* DRW    05312007  DW21  Use 3 month in the future for PD UP Pols if *
*                        'CLD'                                       *
* DRW    06112007  DW22  Chk for RT Paid up Date properly            *
* DRW    08022007  DW23  Include SPS/GEN Linked w/o ALOT Note        *
* DRW    08292007  DW24  Adjust CURR-DATE if today day is after 27   *
*                        for M/E logic                               *
* DRW    10032007  DW25  If Orig-Suff ='CLD' (PDUP FA) move to       *
*                        scr-suff for ATHPXML                        *
* DRW    11212007  DW26  Check Linked Notes for RT INCREASE Note &   *
*                        check 4 1 year                              *
* YAK    11212007  YK2   Change letter text for active duty members  *
* DRW  01/17/2008  DW27 Allow SALF Code of "L" to Ind AIP CAP        *
*                       Loan-Only Waiting (AIL)                      *
* DRW  01/23/2008  DW28 Check for eligible AT records to develop New *
*                       ALOT Amt                                     *
* DRW  05/07/2008  DW29 Add Alot-chg-auth code of 'B' Bypass         *
* DRW  05/14/2008  DW30 Add AGA/AC/ACR & Corr AIR/FORCE etc to Comp  *
*                       Code Tbl -  Then removed 10 minutes later    *
* DRW  05/22/2008  DW31 Add suffix 'ONR' (ONLINE return) uses BTR    *
*                       logic                                        *
* DRW  05/22/2008  DW32 Calc last Partial paid-up calcs for OLD/NEW  *
* DRW 06/02/2008 DW33 Add Alot-Chg Writes                            *
* DRW 06/06/2008 DW34 Add ALOT-CHG-AUTH "A" checking                 *
* DRW 06/09/2008 DW35 Calc last payment for CAP loans                *
* DRW 07/16/2008 DW36 Add text foe Active Starts/Increases           *
* DRW 08/14/2008 DW37 Use different View of NT-V for linked process  *
* DRW 08/28/2008 DW38 Gen Plus Processing                            *
* YAK 10/20/2008 YK3  Use STACK DATA command to pass information     *
*                     to/from program for Policy Print               *
* DRW 11/28/2008 DW39 Fix RT expiration date AMT needed calculation  *
*                     test and Check for 'Only Dues' Condition       *
* DRW 01/12/2009 DW40 Fix date test on RT Check YYYYMMDD/YYYYMM      *
* PAM 06/03/2009 PM41 Re-fix date test on RT Check YYYYYMMDD/YYYYMM  *
*                     Add rider paid to date check                   *
* PAM 01/05/2010 PM42 Revised RT logic - can only be in this section *
*                     If its an RT policy                            *
* PAM 03/09/2010 PM43 Revised RT logic again - expired processing    *
* vxt 11/23/2010 vt1  Change the source of name and rank             *
* NGG 02/14/2012 NG1  Premier services                               *
* vxt 06/05/2012 vt2  Fix the call to get the premier service amount.*
* NGG 10/02/2012 NG2  CN Expansion Project - New beneficiary database*
*                     file to expand Member IDs up to 500000         *
* YAK 10/16/2012 YK4  Use function to identify Level Term II plans   *
* YAK 11/15/2012 YK5  Add No Medical Term (EZ)                       *
* YAK 02/20/2012 YK6  Add special discount processing for EZ Term    *
* YAK 03/25/2013 YK7  Correct business rules when to calcule new prem*
*                     OI-1911                                        *
* vxt 12/02/2013 vt3  Remove the check of paid to date for BTR/ticket 1479/
* TMT 06/12/2014 TT1  Contact Normalization - Gender and DOB         *
* YAK 02/20/2012 YK8  Add suffix RTL for calculating next RT increase*
*                     using 'POLICY-PRINT' option when requested     *
*                     from letters/SSRS program (up to 6M in advance)*
* vxt 08/12/2014 vt4  Include check for paid to date for retiree /Ticket 2806/
* vxt 01/09/2015 vt5  fix the 1305 issue in Production
**********************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX    /* WORK FIELDS FOR GONERCXX - ERROR ROUTINE
LOCAL USING CONTPDA1
* LOCAL USING SVCA0003                                    /* NG1 vt2
local                              /* vt2  \/
1 #SVC-MEMBER
  2 LAST-UPD-USER (A8)
  2 LAST-UPD-DATE (N8)
  2 LAST-UPD-TIME (N7)
  2 SVC-STATUS (A1)
  2 SVC-PAY-UP (A1)
  2 SVC-MODE (A1)
  2 SVC-ISSUE-AGE (N3)
  2 SVC-ISSUE-DATE (N8)
  2 SVC-PAID-TO-DATE (N8)
  2 SVC-BILL-TO-DATE (N8)
  2 SVC-DATE-ENTERED (N8)
  2 SVC-TERMINATION-DATE (N8)
  2 SVC-MONTHLY-RATE (N7.2)
  2 SVC-FIRST-PLACE-FEE (N7.2)
  2 SVC-CREATED-BY (A8)
  2 SVC-CONTRACT-NUMBER (A20)
  2 SVC-ID-NUMBER (N6)
  2 SVC-PLAN (A3)
  2 SVC-AT-NUMBER (N6)
  2 SVC-ONE-TIME-FEE (N7.2)
  2 SVC-REACTIVATION-FEE (N7.2)
  2 CRM-SERVICE-ID (A50)               /* vt2 /\
LOCAL
1 #SVC-PAID-TO-DATE   (N8) 1 REDEFINE #SVC-PAID-TO-DATE
  2 #SVC-PTD-YYYYMM   (N6)
1 #MSG                (A) DYNAMIC                       /* NG1
1 #SVC-FEE    (N3.2)
*
* below is linkage to GRIDCSXX
1 #ID         (N6)
1 REDEFINE #ID
  2 #ID-A      (A6)
* THE FOLLOWING INPUT IS PASSED ONLY ON AN "AT" FOR A NEW RIDER
1 #AT-RID-ATTACH-FAC-AMT (N6.2) /* Only if attached to the new "AT"
1 #AT-RID-ATTACH-PLAN    (A3)   /*    policy not yet created
1 #AT-RID-PLAN           (A2/5) /* New rider plan
1 #AT-RID-ATTACH-ISS-DT  (N8/5) /* Only if attached to an existing pol
* output below  (ex = existing)
1 #AT-TOT-FBR-PREM        (N3.2)
1 #EX-FBR-PREM-BY-LINE    (N3.2/9)
1 #EX-SPS-DB-BY-LINE      (N6/9)
1 #EX-DEP-DB-BY-LINE      (N6/9)
1 #EX-EACH-DEP-DB-BY-LINE (N6/9)
1 #NUM-ELIG-CHILDREN      (N2)
1 #NUM-ELIG-CHILDREN-UNDER-6-MON (N2)
1 #TOT-CHILD-DB      (N6)
1 #RID-TEXT          (A78)
* above is linkage to GRIDCSXX
*
1 LNK-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID            /* TT1
  2 SSN                          /* DW28
  2 INTRO-FLAG
*   2 SEX       /* DW6                            /* TT1 BEGIN
*   2 DATE-OF-BIRTH
*   2 REDEFINE DATE-OF-BIRTH         /* YK5
*     3 DATE-OF-BIRTH-YYYY (N4)      /* YK5
*     3 DATE-OF-BIRTH-MM   (N2)      /* YK5
*     3 DATE-OF-BIRTH-DD   (N2)      /* YK5       /* TT1 END
  2 ALOT-AMT
  2 X-ALT-LP-IND   (9)
  2 X-ALT-LP-AMT   (9)
  2 X-ACCUM-INTEREST (9)
  2 X-NXT-YR-ACCUM-INT (9)
  2 X-ALT-LP-IND-2 (9)
  2 X-ALT-LP-AMT-2 (9)
  2 STATUS       (9)
  2 PAY-STATUS   (9)
  2 FACE-AMOUNT  (9)
  2 MODE         (9)
  2 PLAN         (9)
  2 ANNUAL-PREM  (9)
  2 ISSUE-DATE   (9)
  2 SMOKER-FLAG  (9)
  2 RID-PD-TO           (9)
  2 REDEFINE RID-PD-TO                    /* PM41
    3 RID-PD-TO-OCC      (9)               /* PM41
      4 RID-PD-TO-YYYYMM  (N6)              /* PM41
      4 RID-PD-TO-DD      (N2)              /* PM41
  2 PAID-TO-DATE (9)
  2 REDEFINE PAID-TO-DATE
    3 PAID-TO-DATE-OCC   (9)
      4 PAID-TO-DATE-YYYYMM (N6)
      4 PAID-TO-DATE-DD     (N2)
  2 PAID-UP-DATE (9)
  2 REDEFINE PAID-UP-DATE
    3 PAID-UP-DATE-OCC   (9)
      4 PAID-UP-DATE-YYYYMM (N6)
      4 PAID-UP-DATE-DD     (N2)
  2 ISSUE-AGE    (9)
  2 REDEFINE ISSUE-AGE
    3 ISS-AGE-OCC (9)
      4 ISSUE-AGE-N2 (N2)
  2 MONTH-ALLOC-AMT (9)
  2 RENEW-FLAG (9)                        /* YK7

*
1 FA-S01-VIEW VIEW OF A-STATUS
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID                                       /* VT1
  2 CHIEF-OF-STAFF-IND  (A1)
  2 LINKED-CN (30)
  2 REDEFINE LINKED-CN
    3 LINKED-CN-A   (A6/30)
*   2 DATE-OF-BIRTH                                         /* TT1 BEGIN
*   2 REDEFINE DATE-OF-BIRTH         /* YK5
*     3 DATE-OF-BIRTH-YYYY (N4)      /* YK5
*     3 DATE-OF-BIRTH-MM   (N2)      /* YK5
*     3 DATE-OF-BIRTH-DD   (N2)      /* YK5                 /* TT1 END
*  2 RANK                                                   /* VT1
  2 ALOT-CHG-AUTH
  2 ALOT-CHG-DATE
  2 PROCESS-IND
  2 MILITARY-STATUS
  2 DEBIT-CREDIT-AMT
  2 INTRO-FLAG
*  2 NAME                                                    /* VT1
*   2 SEX     /* DW6                                         /* TT1
  2 ONLINE-ACTION-GN
  2 MILITARY-SERVICE
  2 SSN
  2 ALOT-AMT
  2 X-ALT-LP-IND    (9)
  2 X-LOAN-AMOUNT   (9)
  2 X-ALT-LP-AMT    (9)
  2 X-ALT-LP-IND-2  (9)
  2 X-ALT-LP-AMT-2   (9)
  2 DUES-ALL-PAID-IND
  2 DUES-FPF
  2 C*ACTIVE-SEGMENTS
  2 STATUS     (9)
  2 ISSUE-DATE (9)
  2 REDEFINE ISSUE-DATE
    3 ISS-DT-OCC   (9)
      4 ISSUE-DATE-YYYY  (N4)
      4 ISSUE-DATE-MM    (N2)
      4 ISSUE-DATE-DD    (N2)
  2 FACE-AMOUNT (9)
  2 SMOKER-FLAG (9)
  2 PLAN       (9)
  2 ISSUE-AGE  (9)
  2 REDEFINE ISSUE-AGE
    3 ISS-AGE-OCC (9)
      4 ISSUE-AGE-N2 (N2)
  2 MONTH-ALLOC-AMT (9)
  2 PAY-STATUS (9)
  2 MODE       (9)
  2 PAID-TO-DATE (9)
  2 REDEFINE PAID-TO-DATE
    3 PAID-TO-DATE-OCC   (9)
      4 PAID-TO-DATE-YYYYMM (N6)
      4 PAID-TO-DATE-DD     (N2)
  2 ANNUAL-PREM  (9)
  2 RID-PD-TO           (9)
  2 REDEFINE RID-PD-TO                    /* PM41
    3 RID-PD-TO-OCC      (9)               /* PM41
      4 RID-PD-TO-YYYYMM  (N6)              /* PM41
      4 RID-PD-TO-DD      (N2)              /* PM41
  2 PAID-UP-DATE (9)
  2 REDEFINE PAID-UP-DATE
    3 PAID-UP-DATE-OCC   (9)
      4 PAID-UP-DATE-YYYYMM (N6)
      4 PAID-UP-DATE-DD     (N2)
  2 CONV-DURATION           (9)
  2 RENEW-FLAG (9)                        /* YK7
*
1 NT-V1 VIEW OF A-NOTES                   /* DW37
  2 NOTE-TEXT   (60)
  2 NOTE-DATE   (60)
*
1 NT-V VIEW OF A-NOTES
  2 NOTE-DATE    (N8/60)
  2 NOTE-TEXT    (60)
  2 REDEFINE NOTE-TEXT
    3 NOTE-TEXT-OCC  (60)
      4 NOTE-TEXT-60           (A60)
      4 REDEFINE NOTE-TEXT-60
        5 NOTE-TEXT-FILL1        (A14)
        5 NOTE-TEXT-ALOT-PAYS-CN (A6)
        5 NOTE-TEXT-FILL2        (A40)
      4 REDEFINE NOTE-TEXT-60
        5 NOTE-TEXT-FILL3           (A17)
        5 NOTE-TEXT-ALOT-PAID-BY-CN (A6)
        5 NOTE-TEXT-FILL4           (A37)
*
1 #POL-NUM      (A16)
1 #SCR-MAIL-TYPE  (A6)
1 #SCR-TEXT       (A75)
1 #FA-FF-2  (A78)       1 #FA-FF-3  (A78)
1 #FA-FF-4  (A78)
1 #FA-FF-4-1  (A78)
1 #FA-FF-4-2  (A78)                              1 #FA-FF-5  (A78)
1 #FA-FF-11 (A70)                                                      /* VT1 WAS 30
1 #FA-FF-12 (A20)                                                      /* VT1 WAS 20
1 #FA-FF-13 (A78)       1 #FA-FF-14 (A78)
1 #FA-FF-15 (A78)       1 #FA-FF-16 (A78)
1 #FA-FF-17 (A78)       1 #FA-FF-18 (A78)
1 #FA-FF-19 (A78)       1 #FA-FF-20 (A78)
1 #FA-FF-21 (A78)       1 #FA-FF-22 (A78)
1 #CURR-ALOT          (N5.2)
1 REDEFINE #CURR-ALOT
  2 #CURR-ALOT-A       (A7)
1 #NAME               (A70)                                  /* VT1 WAS 25
1 REDEFINE #NAME
  2 #NAME-2            (A70)                                 /* VT1 WAS 25
1 #RANK               (A3)
1 #FORMAT-SSN         (A11)
1 #HIDE-SSN           (A11) INIT <'ON FILE'>
1 #MIL-STATUS         (A1)
1 #MIL-ID             (A3)
1 #ACCOUNT-NBR        (A6)
1 REDEFINE #ACCOUNT-NBR
  2 #ACCOUNT-NBR-2      (A6)
1 #STOP-AMT           (A8)
1 #START-IND          (A1)
1 #STOP-IND           (A1)
1 #CHANGE-IND         (A1)
1 #START-AMT          (A8)
1 #EFFECT-DATE        (A20)
1 #BLANK-ALOT         (A10)
1 #COMP-CODE          (A7)
1 #CERT-NUMBER        (A6)
1 #I1   (I2)
1 #I2   (I2)

1 #I3   (I2)
1 #I4   (I2)
1 #I5   (I2)
1 #LNK-X (I2)
1 #PLAN         (A3)
1 REDEFINE #PLAN
  2 #PLAN-A1   (A1)
  2 #PLAN-N2   (N2)
1 REDEFINE #PLAN
  2 #PLAN-FLEX-N2  (N2)
  2 REDEFINE #PLAN-FLEX-N2
    3 #PLAN-FLEX-N1 (N1)
    3 #PLAN-FLEX-P  (A1)
  2 #PLAN-FLEX-F   (A1)
1 #ISS-DT       (N8)   /* DW14
1 #MON-ALLOC-AMT (N7.2)    /* NG99
1 #PD-UP-DT      (N8)
1 #DOB           (N8)
1 #SMOKER-FLAG   (A1)
*
1 #STOP-MSG (A78) CONST<'Mbr wishes to stop his allotment and'     /* YK1
  -' change his mode(s)'>                                          /* YK1
1 #FA-ALOT-MSG1 (A78) CONST<'               INFORMATION TO BE USED IN F'
  -'ILING YOUR ALLOTMENT'>
1 #FA-ALOT-MSG2 (A78) CONST<'      INFORMATION TO BE USED IN FILING YOU'
  -'R ALLOTMENT WITH FORM DD-2558'>
1 #ACTTEXT1 (A78) CONST<'SOME OF OUR MEMBERS HAVE ENCOUNTERED A '
  -'PROBLEM WITH ALLOTMENTS UNDER $5.00.'>
1 #ACTTEXT2 (A78) CONST<'THE FINANCE CENTER HAS ASSURED US THAT '
  -'THERE IS NO SUCH RESTRICTION.     '>
1 #FA-ALOT-MSG3   (A78) CONST<'PLEASE SIGN AND MAIL PROMPTLY TO:'>           /* bz
1 #FA-ALOT-MSG3-1 (A78) CONST<'                                    AAFMAA'>  /* bz
1 #FA-ALOT-MSG3-2 (A78) CONST<'                                   '          /* bz
  -'1856 Old Reston Ave, Reston, VA 20190.'>                                 /* bz


1 #ACTTEXT3 (A78) CONST<'AAFMAA has been given authority by DFAS '
  -'to process all AAFMAA allotments.'> /* YK2
*
1 #ACT-STRT-INCR1 (A78) CONST<'AAFMAA has no authority to '       /* DW36
  -'start/increase Active Duty Allotments. Allotments'>
1 #ACT-STRT-INCR2 (A78) CONST<'may NOT be started/increased '      /* DW36
  -'through MYPAY. This form is being provided to you'>
1 #ACT-STRT-INCR3 (A78) CONST<'to take to your Finance Office '    /* DW36
  -'and start/increase your Allotment to AAFMAA.'>
*
1 #RETTEXT1 (A78) CONST<'AAFMAA has been given authority by DFAS '
  -'to process all Retiree AAFMAA'>  /* YK1
1 #RETTEXT2 (A78) CONST<'allotments. DFAS will not Start/Stop/Change'
  -' allotments for AAFMAA.'>                  /* YK1
1 #ALLTEXT3 (A78) CONST<'I hereby authorize AAFMAA to contact '
  -'DFAS on my behalf.'>                                           /* YK2
1 #RETTEXT3 (A78) CONST<'DFAS REQUIRES THAT AAFMAA MAKE ALL '
  -'ADJUSTMENTS TO YOUR RETIRED PAY FOR LIFE'>                     /* YK1
1 #RETTEXT4 (A78) CONST<'INSURANCE POLICIES ISSUED BY AAFMAA.'>    /* YK1
1 #ALLTEXT4 (A78) CONST<'                AAFMAA, 1856 Old Reston Ave, Ste 200, Reston, VA 20190.'>  /* bz
*
1 #SIGLIN1 (A78) CONST<'     ______________________________     '
  -'     ____________________             '>
1 #SIGLIN2 (A78) CONST<'          SIGNATURE OF MEMBER           '
  -'          Date Signed                 '>

1 #ALLTEXT1 (A78) CONST<'Thank you for your authorization to '     /* YK1
  -'change your allotment amount.'>                                /* YK1
1 #ALLTEXT2 (A78) CONST<'We will be submitting the above change'   /* YK1
  -' to DFAS.'>                                                    /* YK1
*
1 #HOLD-SCR-ID     (N9)
*
* 1 #HOLD-FIRST-FEE  (P6.2)
1 #HOLD-ALOT-AMT   (P5.2)
1 #HOLD-EDIT-START (A6)
1 #HOLD-STOP-AMT   (P4.2)
1 #HOLD-MM         (A3)
1 #HOLD-SSN        (N9)
1 #HOLD-MOD-PREM   (P4.2)
*
1 #WORKFLD1        (P5.2)
1 #WORKFLD2        (N8)
*
1 #IN-X            (I2)
*
1 #DATG         (A15)    /* 'DDMONTHNAMEYYYY'
1 REDEFINE #DATG
  2 #DUE-DAY    (N2)
  2 #DUE-MON1   (A3)
  2 #DUE-MON2   (A6)
  2 #DUE-YEAR   (A4)
*
1 #DATN              (N8)
1 REDEFINE #DATN
  2 #CURR-YYYYMM (N6)
  2 REDEFINE #CURR-YYYYMM
    3 #CURR-YYYY  (N4)
    3 #CURR-MM    (N2)
  2 #EFF-DAY    (N2)
*
1 #YYYYMMDD   (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM  (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY    (N4)
    3 #MM      (N2)
  2 #DD      (N2)
*
1 #3-MONS-YYYYMMDD  (N8)
1 REDEFINE #3-MONS-YYYYMMDD
  2 #3-MONS-YYYYMM   (N6)
  2 #3-MONS-DD       (N2)
*
1 #2-MONS-YYYYMMDD  (N8)
1 REDEFINE #2-MONS-YYYYMMDD
  2 #2-MONS-YYYYMM   (N6)
  2 #2-MONS-DD       (N2)
*
1 #1-MONS-YYYYMMDD  (N8)    /*
1 REDEFINE #1-MONS-YYYYMMDD
  2 #1-MONS-YYYYMM  (N6)
1 REDEFINE #1-MONS-YYYYMMDD      /* YK5
  2 #1-MONS-YYYY    (N4)         /* YK5
  2 #1-MONS-MM      (N2)         /* YK5
  2 #1-MONS-DD      (N2)
* YK8
1 #6-MONS-YYYYMMDD  (N8)
1 REDEFINE #6-MONS-YYYYMMDD
  2 #6-MONS-YYYYMM   (N6)
  2 #6-MONS-DD       (N2)
*
1 #MONTH-LITERALS (A48) INIT <'JAN FEB MAR APR MAY JUN JUL AUG SEP '
  -'OCT NOV DEC '>
1 REDEFINE #MONTH-LITERALS    2 #MON-LIT (A4/12)
1 #MON-X         (I2)
1 #FOUND-ALOT-PAYOR  (L)
1 #BYPASS            (L)
1 #HOLD-CN (N6/20)
1 #DO-FORM         (L)     /* DW16
1 #CLP    (L)
1 #CLC   (L)                                     /* PM3
1 #CLK   (L)                                     /* PM3
1 #REF   (L)
1 #RTI   (L)
1 #RTC   (L)
1 #ALL   (L)   /* Use all PP Modes when calcing NEW alot amt        DW2
1 #BTR   (L)   /* BATCH RETURN (return curr amt & new alot amt) using
*                    Current date & checking for Paid To date
1 #ONR   (L)   /* Online RETURN (just like BTR but in Online)   /* DW31
1 #STOP-ASAP (L)   /* alot-chg-auth has an "S"
1 #INCREASE-RT-PREM       (L)    /* DW13
1 #INCREASE-RT-PREM-LNKED (L)    /* DW26
1 #INCREASE-EZ-PREM       (L)    /* YK5
1 #INCREASE-EZ-PREM-LNKED (L)    /* YK5
*
1 #PASS-COMMAND  (A2) INIT <'XX'>
1 #PASS-ID       (N9) INIT <999999999>
1 #PASS-SUFFIX   (A3) INIT <'XXX'>
1 #PASS-PLAN     (A3)
1 #PASS-AGE      (N2)
1 #PASS-ANN-PREM (N7.2)                                     /* vt3 was n6.2
1 #PASS-FACE-AMT (N7.2)
1 #PASS-ISSUE-DATE (N8)
1 #PASS-SMOKER-FLAG (A1)
1 #NEW-MON-PREM  (N5.2)
1 #NEW-AGE       (N2)
*
1 #AT-SSN        (N9)             /* DW28
1 #AT-ID-NUMBER  (N6)
1 #AT-ALOT-AMT   (N6.2)
1 #ALOT-CHG-AUTH (A1)
1 #NEW-AMT-NON-LINKED    (N5.2)     /* DW39
*
1 #LAST-CAP-AMT-NEEDED   (P5.2)   /* DW35
1 #CAP-INT               (P5.7)
1 #LOAN-DAYS             (N2)
1 #ALOT-DECR             (N5.2)
*
1 #PARM-ALLOTMENT-INFORMATION
  2 ##CGA-ISN               (P8)
  2 ##CGA-SCR-COMMAND       (A2)
  2 ##CGA-SCR-ID            (N9)
  2 ##CGA-SCR-SUFFIX        (A3)
1 #POLICY-PRINT             (L)
1 #RTL                      (L)    /* YK8          Used from SSRS letters only
*
1 #CONTACT-ID     (N8)
1 #NAME-F         (A70)
1 #FIRST-NAME     (A25)
1 #MIDDLE-NAME    (A25)
1 #LAST-NAME      (A25)
1 #SUFFIX         (A10)
*
1 #pda-rank
  2 #PASS-COMMAND-R       (A2)
  2 #RANK-PASS          (A3)
  2 #MIL-ID-PASS        (A3)
  2 #INVALID            (L)
  2 #RANK-PAY-TBL-DISPL (P2)
  2 #RANK-LITERAL-PASS  (A23)
  2 #RANK-DISPLAY       (A5)
*
  2 #CONTACT-ID-R         (N8)
  2 #RANK-ABBR          (A) DYNAMIC
  2 #LETTER-ENV         (A) DYNAMIC
  2 #SALUTATION         (A) DYNAMIC
  2 #SALUTATION-WITH-NAME (A) DYNAMIC
1 #GET                (A) DYNAMIC CONST <'GET'>   /* vt2
1 BLANK               (A1) CONST <' '>            /* vt2
1 #EZ-INCREASE-DATE   (N8)                        /* YK7
1 REDEFINE #EZ-INCREASE-DATE
  2 #EZ-INCREASE-DATE-YYYYMM (N6)
  2 REDEFINE #EZ-INCREASE-DATE-YYYYMM
    3 #EZ-INCREASE-DATE-YYYY (N4)
    3 #EZ-INCREASE-DATE-MM   (N2)
1 #INCREASE-AGE       (N2)                        /* YK7
1 #WORK-FIELD         (N2)                        /* YK7
1 #DIFF               (N2)                        /* YK7
*
1 #LNK-DATE-OF-BIRTH            (N8)
1 REDEFINE #LNK-DATE-OF-BIRTH
  2 #LNK-DATE-OF-BIRTH-YYYY (N4)
  2 #LNK-DATE-OF-BIRTH-MM   (N2)
  2 #LNK-DATE-OF-BIRTH-DD   (N2)
*
1 #DATE-OF-BIRTH                (N8)
1 REDEFINE #DATE-OF-BIRTH
  2 #DATE-OF-BIRTH-YYYY (N4)
  2 #DATE-OF-BIRTH-MM   (N2)
  2 #DATE-OF-BIRTH-DD   (N2)
*
1 #SEX                  (A1)
1 #retired                   (l)               /* vt 08112014
END-DEFINE
*
IF *DATA NE 0                           /* YK3
  INPUT #PARM-ALLOTMENT-INFORMATION
  #CGA-ISN := ##CGA-ISN
  #CGA-SCR-COMMAND := ##CGA-SCR-COMMAND
  #CGA-SCR-ID := ##CGA-SCR-ID
  #CGA-SCR-SUFFIX := ##CGA-SCR-SUFFIX
  IF ##CGA-SCR-SUFFIX = 'RTL'           /* YK8
    #RTL := TRUE                        /* YK8
  ELSE                                  /* YK8
    #POLICY-PRINT := TRUE
  END-IF                                /* YK8
  RELEASE STACK
END-IF                                  /* YK3

*****************
*
INCLUDE GONERCXX       /* NATURAL ERROR ROUTINE
*
*  write 'Top of C2800pfa' #cga-scr-command #cga-scr-suffix
MOVE *DATN TO #YYYYMMDD     /* DW24
IF   (*DEVICE = 'BATCH') /* If Batch & just prior to M/E use next month day 1
    AND (#DD GE 28)
  ADD 1 TO #MM
  IF #MM GT 12
    MOVE 1 TO #DD
    SUBTRACT 12 FROM #MM
    ADD 1 TO #YYYY
  END-IF
END-IF
*
MOVE #YYYYMMDD TO #DATN     /* DW24
*
* MOVE *DATN TO #DATN       /* DW24
*
MOVE #DATN TO #YYYYMMDD     /* DW24
ADD 2 TO #MM
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
MOVE #YYYYMMDD TO #2-MONS-YYYYMMDD
*
MOVE #DATN TO #YYYYMMDD      /* DW24
ADD 3 TO #MM
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
MOVE #YYYYMMDD TO #3-MONS-YYYYMMDD
*

MOVE #DATN TO #YYYYMMDD     /* DW24
ADD 6 TO #MM
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
MOVE #YYYYMMDD TO #6-MONS-YYYYMMDD
*
MOVE #DATN TO #YYYYMMDD     /* DW24
ADD 1 TO #MM
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
MOVE #YYYYMMDD TO #1-MONS-YYYYMMDD   /* DW9
*
IF #CGA-ORIG-SUFFIX = 'FRM'                       /*DW16
  MOVE TRUE TO #DO-FORM
  MOVE #CGA-SCR-SUFFIX TO #CGA-ORIG-SUFFIX
END-IF
*
IF #CGA-SCR-SUFFIX = 'CLP' OR = 'CLC'                             /* PM3
  MOVE TRUE TO #CLP
END-IF
*
IF #CGA-SCR-SUFFIX = 'CLC' OR = 'CL '                             /* PM3
  MOVE TRUE TO #CLC                                               /* PM3
END-IF                                                            /* PM3
*
IF #CGA-SCR-SUFFIX = 'CLP' OR = 'CLK'                             /* PM3
  MOVE TRUE TO #CLK                                               /* PM3
END-IF                                                            /* PM3
*
IF #CGA-SCR-SUFFIX = 'REF'
  MOVE TRUE TO #REF
END-IF
*
IF #CGA-SCR-SUFFIX = 'ALL'      /* Use A/S/Q to calc new alot-amt
  MOVE TRUE TO #ALL
END-IF
*
IF #CGA-SCR-SUFFIX = 'BTR'       /* BATCH RETURN with AMTS using current date
  MOVE TRUE TO #BTR
END-IF
*
if #cga-orig-suffix  = 'RTR'
  move TRUE to #retired
end-if
*
IF #CGA-SCR-SUFFIX = 'ONR'    /* Online RETURN         /* DW31
  MOVE TRUE TO #ONR
  MOVE TRUE TO #BTR
END-IF
*
IF #CGA-SCR-SUFFIX = 'RTI' OR = 'RTC'   /* RT INCREASE Check
  MOVE TRUE TO #RTI
END-IF
*
IF #CGA-SCR-SUFFIX = 'RTC' /* RT INCREASE CHECK (ATHPRTCK)
  MOVE TRUE TO #RTC
END-IF
*
RESET #CGA-SCR-COMMAND #CGA-SCR-SUFFIX
MOVE  #CGA-SCR-ID    TO #HOLD-SCR-ID
RESET #CGA-SCR-ID
*
GET FA-S01-VIEW #CGA-ISN
MOVE FA-S01-VIEW.ID-NUMBER TO #CGA-ID
*
*  below is to switch to the payor or the linked member
RESET #FOUND-ALOT-PAYOR
FIND (1) NT-V WITH ID-NUMBER = FA-S01-VIEW.ID-NUMBER
  FOR #I1 1 TO 60                /* START WITH MAIN PAYOR
    IF NT-V.NOTE-TEXT (#I1) = MASK ('*#ALOT:PAID BY')
      MOVE TRUE TO #FOUND-ALOT-PAYOR
      MOVE NOTE-TEXT-ALOT-PAID-BY-CN (#I1) TO #ID-A
      FIND (1) FA-S01-VIEW WITH MEMBER-KEY = #ID-A
      END-FIND
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-FIND
*
IF FA-S01-VIEW.INTRO-FLAG = 'S' OR = 'K' OR = 'G' /* start w linked mbr
    AND (NOT #FOUND-ALOT-PAYOR)
  FIND (1) FA-S01-VIEW WITH MEMBER-KEY = LINKED-CN-A (1)
    IF NO RECORD FOUND
      GET FA-S01-VIEW #CGA-ISN
      ESCAPE BOTTOM
    END-NOREC
  END-FIND
END-IF
*  above is to switch to the payor or the linked member
*
FIND NT-V WITH ID-NUMBER = FA-S01-VIEW.ID-NUMBER   /* DW13
  FOR #I2 1 TO 60
    IF   (NT-V.NOTE-TEXT (#I2) = MASK ('* MEMBER ELECTS TO INCREASE'))
        AND (NT-V.NOTE-DATE (#I2) GT (*DATN - 10000))   /* Within the last year DW26
      MOVE TRUE TO #INCREASE-RT-PREM
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-FIND
*
RESET PDA-CONTACT                                          /* TT1
P-CONTACT-ID := FA-S01-VIEW.MEMBER-CONTACT-ID              /* TT1
CALLNAT 'CONTS001' PDA-CONTACT                             /* TT1
#DATE-OF-BIRTH   := P-DATE-OF-BIRTH
*
FOR #I5 1 TO 9     /* calc PD-UP DATE if ZERO /* DW14
  IF   (FA-S01-VIEW.STATUS (#I5)= 'D')
      AND (FA-S01-VIEW.PAID-UP-DATE (#I5) = 0)
    MOVE FA-S01-VIEW.PLAN (#I5)        TO #PLAN
    MOVE FA-S01-VIEW.ISSUE-DATE (#I5)  TO #ISS-DT
    MOVE FA-S01-VIEW.MONTH-ALLOC-AMT (#I5) TO #MON-ALLOC-AMT
    MOVE FA-S01-VIEW.PAID-UP-DATE(#I5) TO #PD-UP-DT
    MOVE #DATE-OF-BIRTH                TO #DOB              /* TT1
    MOVE FA-S01-VIEW.SMOKER-FLAG (#I5) TO #SMOKER-FLAG
    PERFORM CALC-PD-UP-DT                             /* DW14
    MOVE #PD-UP-DT TO FA-S01-VIEW.PAID-UP-DATE (#I5)
  END-IF
END-FOR
*
MOVE ALOT-CHG-DATE TO #YYYYMMDD   /* DW20
*
IF   (FA-S01-VIEW.ALOT-CHG-AUTH = 'S')   /* DW20
    AND ((ALOT-CHG-DATE = 0) OR (#YYYYMM LE #CURR-YYYYMM))
  MOVE TRUE TO #STOP-ASAP
END-IF
*
RESET #I3
FIND (1) NT-V WITH ID-NUMBER = FA-S01-VIEW.ID-NUMBER
  FOR #I1 1 TO 60
    IF NT-V.NOTE-TEXT (#I1) = MASK ('*#ALOT:PAYS')
      MOVE NOTE-TEXT-ALOT-PAYS-CN (#I1) TO #ID-A
      FIND (1) LNK-V WITH MEMBER-KEY = #ID-A
        IF #I3 LT 20
          ADD 1 TO #I3
        END-IF
        MOVE LNK-V.ID-NUMBER TO #HOLD-CN (#I3)
        RESET #LNK-DATE-OF-BIRTH               /* TT1
        #LNK-DATE-OF-BIRTH := GET-DATE-OF-BIRTH(<LNK-V.MEMBER-CONTACT-ID>)          /* TT1
      END-FIND
*
      FOR #I5 1 TO 9     /* calc PD-UP DATE if ZERO /* DW14
        IF   (LNK-V.STATUS (#I5)= 'D')
            AND (LNK-V.PAID-UP-DATE (#I5) = 0)
          MOVE LNK-V.PLAN (#I5)        TO #PLAN
          MOVE LNK-V.ISSUE-DATE (#I5)  TO #ISS-DT
          MOVE LNK-V.MONTH-ALLOC-AMT (#I5) TO #MON-ALLOC-AMT
          MOVE LNK-V.PAID-UP-DATE(#I5) TO #PD-UP-DT
          MOVE #LNK-DATE-OF-BIRTH     TO #DOB                                       /* TT1
          MOVE LNK-V.SMOKER-FLAG (#I5) TO #SMOKER-FLAG
          PERFORM CALC-PD-UP-DT                             /* DW14
          MOVE #PD-UP-DT TO LNK-V.PAID-UP-DATE (#I5)
        END-IF
      END-FOR
*
      MOVE LNK-V.ID-NUMBER TO #ID
      PERFORM PROCESS-LINKED-MBR
    END-IF
  END-FOR
END-FIND
*
RESET #LNK-X
IF (NOT FA-S01-VIEW.INTRO-FLAG = 'S' OR = 'K' OR = 'G' OR = 'F')
*  Below 2 lines removed 8/2/2007 so BATCH will be the same as Online   DW23
*     and All SPS/GEN's will be included even tho no ALOT LINKED Note
*    AND (#ALL   /* use sps/gen linked pols if doing "ALL"
*    OR (*DEVICE NE 'BATCH'))  /* or in online                          DW2 DW23
  FOR #I1 1 TO 30
    IF LINKED-CN (#I1) = 0
      ESCAPE BOTTOM
    END-IF
*
*   IF LINKED-CN (#I1) GT 200000        NG2
    IF LINKED-CN (#I1) GT 500000     /* NG2
      ESCAPE TOP
    END-IF
*
    RESET #BYPASS
    FOR #LNK-X 1 TO 20  /* was #i2
      IF #HOLD-CN (#LNK-X) = 0
        ESCAPE BOTTOM
      END-IF
*
      IF LINKED-CN (#I1) = #HOLD-CN (#LNK-X)
        MOVE TRUE TO #BYPASS
        ESCAPE BOTTOM
      END-IF
    END-FOR
*
    IF #BYPASS
      ESCAPE TOP
    END-IF
*
    FIND (1) LNK-V WITH MEMBER-KEY = LINKED-CN-A (#I1)
      IF LNK-V.INTRO-FLAG = 'F'
        ESCAPE TOP
      END-IF
*
      MOVE LNK-V.ID-NUMBER TO #ID
      PERFORM PROCESS-LINKED-MBR
    END-FIND
  END-FOR
END-IF
*
MOVE FA-S01-VIEW.ID-NUMBER TO #ID
CALLNAT 'GRIDCSXX' USING
  #ID
  #AT-RID-ATTACH-FAC-AMT
  #AT-RID-ATTACH-PLAN
  #AT-RID-PLAN            (1:5)
  #AT-RID-ATTACH-ISS-DT   (1:5)
  #AT-TOT-FBR-PREM
  #EX-FBR-PREM-BY-LINE    (1:9)
  #EX-SPS-DB-BY-LINE      (1:9)
  #EX-DEP-DB-BY-LINE      (1:9)
  #EX-EACH-DEP-DB-BY-LINE (1:9)
  #NUM-ELIG-CHILDREN
  #NUM-ELIG-CHILDREN-UNDER-6-MON
  #TOT-CHILD-DB
  #RID-TEXT
*
IF #RID-TEXT NE ' '
  WRITE 'FBR error message =' #RID-TEXT
END-IF
*
ADD  FA-S01-VIEW.ALOT-AMT TO #CURR-ALOT
*
* MOVE FA-S01-VIEW.NAME TO #NAME                                        /* VT1 \/
MOVE FA-S01-VIEW.MEMBER-CONTACT-ID TO #CONTACT-ID #CONTACT-ID-R
#NAME-F :=  FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME,#MIDDLE-NAME,#LAST-NAME,#SUFFIX>)
COMPRESS #FIRST-NAME #MIDDLE-NAME #LAST-NAME INTO #NAME
CALLNAT 'RANKN001' #PDA-RANK
#RANK := #RANK-ABBR
* MOVE FA-S01-VIEW.RANK TO #RANK                                        /* VT1 /\
MOVE FA-S01-VIEW.SSN  TO #HOLD-SSN
MOVE FA-S01-VIEW.MILITARY-STATUS TO #MIL-STATUS
MOVE FA-S01-VIEW.MILITARY-SERVICE TO #MIL-ID
*
IF CHIEF-OF-STAFF-IND = 'Q' OR = 'S'
  MOVE #HIDE-SSN TO #FORMAT-SSN
ELSE
  MOVE EDITED #HOLD-SSN (EM=999' '99' '9999) TO #FORMAT-SSN
END-IF
*
MOVE ID-NUMBER  TO #ACCOUNT-NBR
MOVE ID-NUMBER  TO #CERT-NUMBER
MOVE #CURR-MM TO #MON-X
MOVE #CURR-YYYY TO #YYYY
*
IF #MON-X = 11
  MOVE 1 TO #MON-X
  ADD 1  TO #YYYY
ELSE
  IF #MON-X = 12
    MOVE 2 TO #MON-X
    ADD 1  TO #YYYY
  ELSE
    ADD 2  TO #MON-X
  END-IF
END-IF
*
IF #BTR                                 /* DW18
  MOVE #MON-LIT(#CURR-MM) TO #HOLD-MM
  COMPRESS #HOLD-MM #CURR-YYYY INTO #EFFECT-DATE
ELSE
  MOVE #MON-LIT(#MON-X) TO #HOLD-MM
  IF #CGA-CLERK = 'ELB'
    MOVE 'ASAP' TO #EFFECT-DATE
  ELSE
    COMPRESS #HOLD-MM #YYYY INTO #EFFECT-DATE
  END-IF
END-IF
*
FOR #I4 1 TO 9       /* find first active pol
  IF  FA-S01-VIEW.STATUS (#I4) = 'D'
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF #I4 GT 9
  MOVE 1 TO #I4
END-IF
*
IF  #ALL
    OR (FA-S01-VIEW.MODE (#I4) = 'G')   /* is 1st pol a G
  CALLNAT 'GDUESSXX' FA-S01-VIEW.ID-NUMBER #I4 #SVC-FEE
  ADD #SVC-FEE TO #WORKFLD1
END-IF
*
* MOVE FA-S01-VIEW.ID-NUMBER to PARM-SVC.SVC-MEMBER-ID     /* NG1   vt2
MOVE FA-S01-VIEW.ID-NUMBER to #SVC-MEMBER.SVC-ID-NUMBER                        /* vt2
PERFORM CHECK-FOR-PREMIER-SERVICE                        /* NG1
*
FOR #IN-X 1 TO C*ACTIVE-SEGMENTS
  RESET #INCREASE-EZ-PREM #EZ-INCREASE-DATE #INCREASE-AGE         /* YK7
  IF   (FA-S01-VIEW.STATUS(#IN-X) = 'D')
    IF FA-S01-VIEW.X-ALT-LP-IND    (#IN-X) = '1' OR = '2' OR = '9'  /* DW12
        OR = 'L'                                           /* DW27
      IF FA-S01-VIEW.CONV-DURATION (#IN-X) = 999 /* Only CAP lns now /* DW35
        PERFORM CALC-LAST-LOAN-PMT
      ELSE
        ADD FA-S01-VIEW.X-ALT-LP-AMT (#IN-X) TO #WORKFLD1
      END-IF
    END-IF
*
    IF FA-S01-VIEW.X-ALT-LP-IND-2    (#IN-X) = '1' OR = '2' OR = '9'  /* DW12
      ADD FA-S01-VIEW.X-ALT-LP-AMT-2 (#IN-X) TO #WORKFLD1
    END-IF
*
    IF NOT #ALL  /* bypass non 'G' mode if not "ALL"         /* DW2
        AND (FA-S01-VIEW.MODE (#IN-X) NE 'G')
      ESCAPE TOP
    END-IF
*
    IF #BTR   /* Do not project Paid-ups into the future      /* DW9
      MOVE #CURR-YYYYMM TO #YYYYMM
*      if   (fa-s01-view.issue-date-dd (#in-x) gt 1)
*          and ((fa-s01-view.issue-date (#In-x) lt 19970101)    /* OLD/NEW
*          or (fa-s01-view.month-alloc-amt (#in-x) = 999.99))
*        move #1-mons-yyyymm to #yyyymm
*      end-if
    ELSE
      IF #CGA-ORIG-SUFFIX = 'CLD'                             /* DW21
        MOVE #3-MONS-YYYYMM TO #YYYYMM
      ELSE
        MOVE #2-MONS-YYYYMM TO #YYYYMM
      END-IF
    END-IF                                        /* DW9
*
*  display fa-s01-view.issue-date (#in-x) fa-s01-view.month-alloc-amt (#in-x)
*     fa-s01-view.paid-up-date-yyyymm (#in-x) #1-MONS-YYYYMM
    IF   ((FA-S01-VIEW.ISSUE-DATE (#IN-X) LT 19970101) /* OLD/NEW    /* DW32
        OR (FA-S01-VIEW.MONTH-ALLOC-AMT (#IN-X) = 999.99))
        AND (FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) = #1-MONS-YYYYMM)  /* nxt Mon
        AND (FA-S01-VIEW.PAY-STATUS(#IN-X) LE '40')
        AND #BTR
      IF FA-S01-VIEW.PLAN (#IN-X) = 'OL' OR = 'SO' OR = 'GPL'        /* DW38
        MOVE #DATE-OF-BIRTH TO #YYYYMMDD                        /* TT1
      ELSE
        MOVE FA-S01-VIEW.ISSUE-DATE (#IN-X) TO #YYYYMMDD
      END-IF
      SUBTRACT 1 FROM #DD
      COMPUTE ROUNDED #HOLD-MOD-PREM = (FA-S01-VIEW.ANNUAL-PREM(#IN-X) / 12)
        * #DD / 30
*      write 'OLD/NEW paid-up-this Month' fa-s01-view.issue-date (#in-x)
*         'Num days =' #dd 'prem=' #hold-mod-prem
      ADD #HOLD-MOD-PREM TO #WORKFLD1
*
      IF *DEVICE = 'BATCH'
        WRITE FA-S01-VIEW.ID-NUMBER 'Partial PD UP Prem' #HOLD-MOD-PREM
          'Mode= '     FA-S01-VIEW.MODE (#IN-X)
          'Auth Code=' FA-S01-VIEW.ALOT-CHG-AUTH                   /* DW33
      END-IF
*
      IF FA-S01-VIEW.RID-PD-TO-YYYYMM (#IN-X) LE #CURR-YYYYMM      /* PM41
          OR NOT #BTR                                                 /* PM41
        ADD #EX-FBR-PREM-BY-LINE (#IN-X) TO #WORKFLD1              /* DW11
      END-IF                                                       /* PM41
    ELSE                                                           /* END DW32
      IF   (FA-S01-VIEW.PAY-STATUS(#IN-X) LE '40')
          AND ((FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) GT #YYYYMM)   /* DW9
          OR  (FA-S01-VIEW.PLAN (#IN-X) = 'RT') /* RT's may chg prems
          OR  (FA-S01-VIEW.PLAN (#IN-X) = 'EZ') /* EZ's may chg prems   /* YK5
          OR  ((#LNK-X NE 0) AND (#LNK-X LT 10)     /*  due to renew
*         AND (LNK-V.PLAN (#LNK-X) = 'RT')))
          AND (LNK-V.PLAN (#LNK-X) = 'RT' OR = 'EZ')))             /* YK5
* YK7 Start
        IF (FA-S01-VIEW.PLAN (#IN-X) = 'EZ')
          #WORK-FIELD := #CURR-YYYY - #DATE-OF-BIRTH-YYYY           /* TT1
          IF #CURR-MM < #DATE-OF-BIRTH-MM                           /* TT1
            #WORK-FIELD := #WORK-FIELD - 1
          END-IF
          DIVIDE 5 INTO #WORK-FIELD REMAINDER #DIFF
          IF #DIFF = 0
            #INCREASE-AGE := #WORK-FIELD * 5
          ELSE
            #INCREASE-AGE := (#WORK-FIELD + 1) * 5
          END-IF
          #EZ-INCREASE-DATE := #DATE-OF-BIRTH + #INCREASE-AGE * 10000        /* TT1
        END-IF
* YK7 end
        IF (FA-S01-VIEW.PLAN (#IN-X) = 'RT')                       /* DW7
            AND (#RTI OR #RTL                                      /* YK8
            OR (#BTR AND (FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X)    /* DW13
            = #1-MONS-YYYYMM)))
            OR (FA-S01-VIEW.PLAN (#IN-X) = 'EZ')                        /* YK5
            AND (#RTI                                                   /* YK5
            OR (#BTR AND (#EZ-INCREASE-DATE-YYYYMM = #1-MONS-YYYYMM)))  /* YK5
          PERFORM CHECK-MBR-RT-EZ-RENEW-INCREASE                        /* YK5
        ELSE
          IF (#BTR  and #retired                                      /* DW10  /* vt3      /* vt4
              AND (FA-S01-VIEW.PAID-TO-DATE-YYYYMM (#IN-X) GT #CURR-YYYYMM))               /* vt4
              or  (( FA-S01-VIEW.PLAN (#IN-X) = 'RT')                   /* DW22  /* vt3    /* vt4
              AND (FA-S01-VIEW.ISSUE-AGE-N2 (#IN-X) GE 66)
              AND (FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) LE #YYYYMM))
              OR ((FA-S01-VIEW.PLAN (#IN-X) = 'EZ')                     /* YK5
              AND (FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) LE #YYYYMM)) /* YK5 - expired
            RESET #HOLD-MOD-PREM
          ELSE
            COMPUTE #HOLD-MOD-PREM = FA-S01-VIEW.ANNUAL-PREM(#IN-X) / 12
            IF FA-S01-VIEW.PLAN (#IN-X) = 'EZ'                            /* YK6
              #HOLD-MOD-PREM := #HOLD-MOD-PREM - 1                        /* YK6
            END-IF                                                        /* YK6
          END-IF
        END-IF
*
        ADD #HOLD-MOD-PREM TO #WORKFLD1
        IF FA-S01-VIEW.RID-PD-TO-YYYYMM (#IN-X) LE #CURR-YYYYMM   /* PM41
            OR NOT #BTR                                           /* PM41
          ADD #EX-FBR-PREM-BY-LINE (#IN-X) TO #WORKFLD1           /* DW11
        END-IF                                                    /* PM41
      END-IF
    END-IF
  END-IF
END-FOR
*
MOVE #WORKFLD1 TO #NEW-AMT-NON-LINKED  /* DW39
*
MOVE FA-S01-VIEW.SSN TO #AT-SSN                               /* DW28
PERFORM CHECK-AT
*
IF NOT #ALOT-CHG-AUTH = ' ' OR = 'N' OR = 'B'     /* DW29
  MOVE #ALOT-CHG-AUTH TO FA-S01-VIEW.ALOT-CHG-AUTH
END-IF
*
IF #STOP-ASAP  /* mbr has requested alot be stopped ASAP     /* DW5
    AND (#WORKFLD1 NE 0)   /* HASN'T STOPED YET
  MOVE #STOP-MSG TO #SCR-TEXT                        /* YK1
END-IF
*
IF  #CLP  /* mbr wishes to cancel insurance
    OR #STOP-ASAP  /* mbr has requested alot be stopped ASAP   DW5
  RESET #WORKFLD1   /* mbr wishes to cancel insurance
END-IF
*
MOVE '     ' TO #SCR-MAIL-TYPE   /* was MAIL
*
IF #SVC-FEE = #NEW-AMT-NON-LINKED       /* Only Svc Fee Condition   /* DW39
  SUBTRACT #SVC-FEE FROM #WORKFLD1
END-IF                                                              /* END DW39
*
IF #WORKFLD1 = 0
  IF #CURR-ALOT NE 0
    MOVE 'X' TO #STOP-IND
    MOVE 'STOP' TO #SCR-MAIL-TYPE
    MOVE #CURR-ALOT TO #HOLD-ALOT-AMT
    MOVE EDITED #HOLD-ALOT-AMT (EM=Z,ZZZ.99) TO #STOP-AMT
    PERFORM CHECK-RETIRED
  ELSE
    PERFORM CHECK-RETIRED
  END-IF
ELSE
  IF #CURR-ALOT = 0
    MOVE 'X' TO #START-IND
    MOVE 'START' TO #SCR-MAIL-TYPE
    MOVE EDITED #WORKFLD1 (EM=Z,ZZZ.99) TO #START-AMT
    PERFORM CHECK-MINIMUM
  ELSE
    IF #CURR-ALOT NE #WORKFLD1
      MOVE 'X' TO #CHANGE-IND
      MOVE 'CHANGE' TO #SCR-MAIL-TYPE
      MOVE #CURR-ALOT TO #HOLD-STOP-AMT
      MOVE EDITED #HOLD-STOP-AMT (EM=Z,ZZZ.99) TO #STOP-AMT
      MOVE EDITED #WORKFLD1 (EM=Z,ZZZ.99) TO #START-AMT
      PERFORM CHECK-MINIMUM
    ELSE
      PERFORM CHECK-RETIRED
    END-IF
  END-IF
END-IF
*
MOVE #FA-ALOT-MSG1 TO #FA-FF-5    /* YK1
*
IF   (#MIL-STATUS = 'A')       /* Active Duty         /* DW36
    AND ((#START-IND = 'X')      /* Start
    OR ((#CHANGE-IND = 'X') AND (#WORKFLD1 GT #HOLD-STOP-AMT)))   /* Increase
  MOVE #ACT-STRT-INCR1 TO #FA-FF-13   /* 'Mbr must do his own Chg himself'
  MOVE #ACT-STRT-INCR2 TO #FA-FF-14
  MOVE #ACT-STRT-INCR3 TO #FA-FF-15              /* END DW36
ELSE
  IF ALOT-CHG-AUTH = 'Y' OR = 'S' OR = 'A'   /* YK2   DW34
    MOVE #ALLTEXT4 TO #FA-FF-4     /* YK2
    MOVE #ALLTEXT1 TO #FA-FF-14    /* YK2  'Thank you for signing the form'
    MOVE #ALLTEXT2 TO #FA-FF-15    /* YK2  'We will do your  changing'
    RESET #FA-FF-20 #FA-FF-21      /* YK2
  ELSE                             /* YK2
    MOVE #FA-ALOT-MSG3 TO #FA-FF-4 /* YK2
    MOVE #FA-ALOT-MSG3-1 TO #FA-FF-4-1
    MOVE #FA-ALOT-MSG3-2 TO #FA-FF-4-2

    IF #MIL-STATUS = 'R'
      MOVE #RETTEXT1 TO #FA-FF-13
      MOVE #RETTEXT2 TO #FA-FF-14
      MOVE #ALLTEXT3 TO #FA-FF-15   /* Please sign this form'
    ELSE                     /* ACTIVE no Chg or Stop or Decrease
      MOVE #ACTTEXT3 TO #FA-FF-13
      MOVE #ALLTEXT3 TO #FA-FF-14   /* Please sign this form'
    END-IF
    MOVE #SIGLIN1  TO #FA-FF-18
    MOVE #SIGLIN2  TO #FA-FF-19
  END-IF
END-IF                            /* YK2
*
RESET #BLANK-ALOT #COMP-CODE
*
IF #MIL-ID = 'A' OR = 'AGR' OR = 'AG' OR = 'AR' /*AR added 11/2004 DW4 DW30
* IF #MIL-ID = mask ('A')  /* All Army                            /* DW30
  IF #MIL-STATUS = 'R'
    MOVE '783'    TO #BLANK-ALOT
    MOVE 'AAFMAA' TO #COMP-CODE    /* DW15
  ELSE
    IF #MIL-STATUS = 'A'
      MOVE '064'     TO #BLANK-ALOT
      MOVE 'K000966' TO #COMP-CODE
    END-IF
  END-IF
ELSE
  IF #MIL-ID = 'F' OR = 'FGR' OR = 'FG' OR = 'FR' /* FR added DW4  DW30
*   IF #MIL-ID = mask ('F')  /* All Air Force                   /* DW30
    IF #MIL-STATUS = 'R'
      MOVE '783'    TO #BLANK-ALOT
      MOVE 'AAFMAA' TO #COMP-CODE    /* DW15
    ELSE
      IF #MIL-STATUS = 'A'
        MOVE 'N060041' TO #COMP-CODE
      END-IF
    END-IF
  END-IF
END-IF
*
IF #CLC                                                           /* PM3
  IF #CURR-ALOT LE #WORKFLD1                                      /* PM3
    MOVE 'CLC' TO #CGA-SCR-SUFFIX   /* indicate no changes needed    PM3
  END-IF                                                          /* PM3
  ESCAPE ROUTINE                                                  /* PM3
END-IF                                                            /* PM3
* YK8 <
IF #RTL
  STACK DATA FORMATTED #STOP-AMT #START-AMT
  ESCAPE ROUTINE
END-IF
* > YK8
IF #POLICY-PRINT                                     /* YK3
  STACK DATA FORMATTED #FORMAT-SSN #MIL-STATUS       /* YK3
    FA-S01-VIEW.ALOT-CHG-AUTH #NAME #RANK
    #BLANK-ALOT #COMP-CODE #START-IND
    #STOP-IND #CHANGE-IND #EFFECT-DATE
    #STOP-AMT #START-AMT                             /* YK3
  ESCAPE ROUTINE
END-IF                                               /* YK3
*
IF *DEVICE = 'BATCH'
    OR #ONR             /* store return info & get out   /* DW31
  IF #CLP
    RESET #WORKFLD1   /* mbr wishes to cancel insurance
  END-IF
*
  IF #CLK                                                         /* PM3
      AND #CURR-ALOT EQ #WORKFLD1                                 /* PM3
    ESCAPE ROUTINE                                                /* PM3
  END-IF                                                          /* PM3
*
  IF   (#CURR-ALOT = #WORKFLD1)  /* No chg needed
      AND ((#CGA-ORIG-SUFFIX = 'CLD')  /* printing FA
      OR #DO-FORM)                    /* printing FORM    /* DW16
    ESCAPE ROUTINE
  END-IF
*
  IF #CURR-ALOT NE #WORKFLD1
    MOVE EDITED #WORKFLD1 (EM=Z,ZZZ.99) TO #START-AMT
  END-IF
*
  MOVE #HOLD-SCR-ID TO #CGA-SCR-ID /* to make athpdfir work
*
  IF #RTC /* store new allotment for ATHPRTCK
      OR (#BTR)              /* batch return amt    /* DW1
    COMPUTE #CGA-MF-SCR-PARM-1-N = #WORKFLD1 * 100
    MOVE #CURR-ALOT-A TO #CGA-MF-ORIG-PARM-1
*
    IF #DO-FORM    /* DW16
      NEWPAGE (8)
      WRITE (8) NOTITLE USING FORM 'C2800FFA'
    END-IF
  ELSE
    IF #CGA-ORIG-SUFFIX = 'CLP' /* called in athpcapp
        OR = 'CLD'
      IF  (FA-S01-VIEW.DEBIT-CREDIT-AMT LE -5.00) /* was -1.00
          OR (#CGA-ORIG-SUFFIX = 'CLD')
        IF #CGA-ORIG-SUFFIX = 'CLD'                               /* DW25
          MOVE 'PDU' TO #CGA-SCR-SUFFIX
          CALLNAT 'GPLNMSXX' #POL-NUM FA-S01-VIEW.ID-NUMBER #I1   /* DW25
        END-IF
*
        NEWPAGE (8)            /* has a refund gtr 5.00
        WRITE (8) NOTITLE USING FORM 'C2800FFA'
*
        IF #CGA-SCR-SUFFIX = 'PDU'                             /* DW25
          RESET #CGA-SCR-SUFFIX
        END-IF
      ELSE
        NEWPAGE (7)
        WRITE (7) NOTITLE USING FORM 'C2800FFA'
      END-IF
    ELSE
      IF #CGA-ORIG-SUFFIX = 'RTI'  /* called in athprtck
        FOR #I1 1 TO 9                          /* DW7
          IF   (FA-S01-VIEW.STATUS (#I1) = 'D')
              AND (FA-S01-VIEW.MODE   (#I1) = 'G')
            ESCAPE BOTTOM
          END-IF
        END-FOR
*
        IF #I1 GT 9
          MOVE 1 TO #I1
        END-IF
*
        CALLNAT 'GPLNMSXX' #POL-NUM FA-S01-VIEW.ID-NUMBER #I1   /* Dw7
*
        #CGA-SCR-SUFFIX := 'RTR'                                /* PM17
*
        NEWPAGE (8)                                             /* PM8
        WRITE (8) NOTITLE USING FORM 'C2800FFA'
*
        RESET #CGA-SCR-SUFFIX                                   /* PM17
      ELSE
        NEWPAGE (3)
        WRITE (3) NOTITLE USING FORM 'C2800FFA'
      END-IF
    END-IF
  END-IF
*
  RESET #CGA-SCR-ID
*
  ESCAPE ROUTINE
ELSE
  IF #REF
    MOVE 'NU'         TO #CGA-SCR-COMMAND
    MOVE #HOLD-SCR-ID TO #CGA-SCR-ID
    MOVE 'REF'        TO #CGA-SCR-SUFFIX
  END-IF
*
  INPUT TEXT #SCR-TEXT MARK *#EFFECT-DATE USING MAP 'C2800MFA'
END-IF
*
IF #CGA-SCR-COMMAND NE '  '
  FETCH 'G1000PXX'
ELSE
  MOVE 'ST' TO #CGA-SCR-COMMAND
  MOVE #HOLD-SCR-ID TO #CGA-SCR-ID
*
  FETCH 'G1000PXX'
END-IF
*
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-LAST-LOAN-PMT             /* DW35
* * * * * * * * * * * * * * * * * * *
*
IF   (X-LOAN-AMOUNT (#IN-X) GT 0)
    AND (X-LOAN-AMOUNT (#IN-X) LT (X-ALT-LP-AMT (#IN-X) * 2)) /* Must be 2 mons
  MOVE *DATN TO #YYYYMMDD
  IF #MM = 2
    MOVE 28 TO #LOAN-DAYS
  ELSE
    IF #MM = 4 OR = 6 OR = 9 OR = 11
      MOVE 30 TO #LOAN-DAYS
    ELSE
      MOVE 31 TO #LOAN-DAYS
    END-IF
  END-IF
*
  COMPUTE ROUNDED #CAP-INT = (X-LOAN-AMOUNT (#IN-X) * .015) / 365
  COMPUTE ROUNDED #CAP-INT = (#CAP-INT * #LOAN-DAYS)
    + X-ACCUM-INTEREST (#IN-X) + X-NXT-YR-ACCUM-INT (#IN-X)
  COMPUTE ROUNDED #LAST-CAP-AMT-NEEDED =
    X-LOAN-AMOUNT (#IN-X) + #CAP-INT
  COMPUTE #ALOT-DECR = X-ALT-LP-AMT (#IN-X) - #LAST-CAP-AMT-NEEDED
*
  IF #ALOT-DECR GT 0
    COMPUTE #WORKFLD1 = #WORKFLD1 + #LAST-CAP-AMT-NEEDED
    IF *DEVICE = 'BATCH'
      WRITE FA-S01-VIEW.ID-NUMBER 'last CAP loan Pmt is'
        #LAST-CAP-AMT-NEEDED 'AUTH=' FA-S01-VIEW.ALOT-CHG-AUTH
    END-IF
  ELSE
    ADD FA-S01-VIEW.X-ALT-LP-AMT (#IN-X) TO #WORKFLD1
  END-IF
ELSE
  ADD FA-S01-VIEW.X-ALT-LP-AMT (#IN-X) TO #WORKFLD1
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-MINIMUM
* * * * * * * * * * * * * * * * * *
*
IF #MIL-STATUS = 'R'
  PERFORM RETIRE-MSG
ELSE
  IF #WORKFLD1 LT 5
    MOVE #ACTTEXT1 TO #FA-FF-2
    MOVE #ACTTEXT2 TO #FA-FF-3
  END-IF
END-IF
END-SUBROUTINE /* (1263)
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-RETIRED
* * * * * * * * * * * * * * * * * *
*
IF #MIL-STATUS = 'R'
  PERFORM RETIRE-MSG
END-IF
*
END-SUBROUTINE  /* (1316)
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE RETIRE-MSG
* * * * * * * * * * * * * * * * * *
*
MOVE #RETTEXT3 TO #FA-FF-2           /* YK1
MOVE #RETTEXT4 TO #FA-FF-3           /* YK1
*
END-SUBROUTINE   /* (1325)
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE PROCESS-LINKED-MBR
* * * * * * * * * * * * * * * * * *
*
FIND NT-V1 WITH ID-NUMBER = #ID /* Check lnked rec 4 Incr Note /* DW13/DW26/DW37
  FOR #I2 1 TO 60
    IF   (NT-V1.NOTE-TEXT (#I2) = MASK ('* MEMBER ELECTS TO INCREASE'))
        AND (NT-V1.NOTE-DATE (#I2) GT (*DATN - 10000))   /* Within the last year DW26
      MOVE TRUE TO #INCREASE-RT-PREM-LNKED                      /* DW26
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-FIND
*
CALLNAT 'GRIDCSXX' USING
  #ID
  #AT-RID-ATTACH-FAC-AMT
  #AT-RID-ATTACH-PLAN
  #AT-RID-PLAN            (1:5)
  #AT-RID-ATTACH-ISS-DT   (1:5)
  #AT-TOT-FBR-PREM
  #EX-FBR-PREM-BY-LINE    (1:9)
  #EX-SPS-DB-BY-LINE      (1:9)
  #EX-DEP-DB-BY-LINE      (1:9)
  #EX-EACH-DEP-DB-BY-LINE (1:9)
  #NUM-ELIG-CHILDREN
  #NUM-ELIG-CHILDREN-UNDER-6-MON
  #TOT-CHILD-DB
  #RID-TEXT
*
IF #RID-TEXT NE ' '
  WRITE 'FBR Error message =' #RID-TEXT
END-IF
*
ADD LNK-V.ALOT-AMT   TO #CURR-ALOT
*
FOR #I2 1 TO 9
  RESET #INCREASE-EZ-PREM-LNKED                               /* YK7
  IF LNK-V.X-ALT-LP-IND    (#I2) = '1' OR = '2' OR = '9'      /* DW12
      OR = 'L'                                      /* DW27
    ADD LNK-V.X-ALT-LP-AMT (#I2) TO #WORKFLD1
  END-IF
*
  IF LNK-V.X-ALT-LP-IND-2    (#I2) = '1' OR = '2' OR = '9'    /* DW9
    ADD LNK-V.X-ALT-LP-AMT-2 (#I2) TO #WORKFLD1
  END-IF
*
  IF NOT #ALL  /* bypass non 'G' mode if not "ALL"            /* DW2
      AND (LNK-V.MODE (#I2) NE 'G')
    ESCAPE TOP
  END-IF
*
  IF #BTR   /* Do not project Paid-ups into the future        /* DW9
    MOVE #CURR-YYYYMM TO #YYYYMM
*    if   (fa-s01-view.issue-date-dd (#in-x) gt 1)
*        and ((fa-s01-view.issue-date (#In-x) lt 19970101)    /* OLD/NEW
*        or (fa-s01-view.month-alloc-amt (#in-x) = 999.99))
*      move #1-mons-yyyymm to #yyyymm
*    end-if
  ELSE
    IF #CGA-ORIG-SUFFIX = 'CLD'                               /* DW21
      MOVE #3-MONS-YYYYMM TO #YYYYMM
    ELSE
      MOVE #2-MONS-YYYYMM TO #YYYYMM
    END-IF
  END-IF                                                      /* DW9
*
#lnk-date-of-birth :=  GET-DATE-OF-BIRTH(<LNK-V.MEMBER-CONTACT-ID>)                  /* vt5                                                                     /
*  reset #hold-mod-prem                                       /* DW32
  IF   ((LNK-V.ISSUE-DATE (#I2) LT 19970101) /* OLD/NEW       /* DW32
      OR (LNK-V.MONTH-ALLOC-AMT (#I2) = 999.99))
      AND (LNK-V.PAID-UP-DATE-YYYYMM (#I2) = #1-MONS-YYYYMM)     /* nxt Mon
      AND (LNK-V.PAY-STATUS(#I2) LE '40')
      AND #BTR
    IF LNK-V.PLAN (#I2) = 'OL' OR = 'SO' OR = 'GPL'           /* DW38
      MOVE #LNK-DATE-OF-BIRTH TO #YYYYMMDD                       /* TT1
    ELSE
      MOVE LNK-V.ISSUE-DATE (#I2) TO #YYYYMMDD
    END-IF
    SUBTRACT 1 FROM #DD
    COMPUTE ROUNDED #HOLD-MOD-PREM = (LNK-V.ANNUAL-PREM(#I2) / 12)
      * #DD / 30
*    write 'OLD/NEW lked paid-up-this Month' lnk-v.issue-date (#i2)
*       'Num days =' #dd 'prem=' #hold-mod-prem
    ADD #HOLD-MOD-PREM TO #WORKFLD1
*
    IF *DEVICE = 'BATCH'
      WRITE LNK-V.ID-NUMBER 'Partial LNKED PD UP Prem' #HOLD-MOD-PREM
        'Mode= ' LNK-V.MODE (#I2)
    END-IF
*
    IF LNK-V.RID-PD-TO-YYYYMM (#I2) LE #CURR-YYYYMM            /* PM41
        OR NOT #BTR                                            /* PM41
      ADD #EX-FBR-PREM-BY-LINE (#I2) TO #WORKFLD1
    END-IF                                                     /* PM41
  ELSE                                                         /* END DW32
    IF   (LNK-V.STATUS (#I2) = 'D')
        AND (LNK-V.MODE (#I2) = 'G')
        AND (LNK-V.PAY-STATUS (#I2) LE '40')
*       AND ((LNK-V.PAID-UP-DATE-YYYYMM (#I2) GT #2-MONS-YYYYMM)
        AND ((LNK-V.PAID-UP-DATE-YYYYMM (#I2) GT #YYYYMM)      /* DW19
        OR (LNK-V.PLAN (#I2) = 'RT' OR = 'EZ'))                /* YK5
* YK7 Start
      IF (LNK-V.PLAN (#I2) = 'EZ')
        #WORK-FIELD := #CURR-YYYY - #LNK-DATE-OF-BIRTH-YYYY            /* TT1
        IF #CURR-MM < #LNK-DATE-OF-BIRTH-MM                            /* TT1
          #WORK-FIELD := #WORK-FIELD - 1
        END-IF
        DIVIDE 5 INTO #WORK-FIELD REMAINDER #DIFF
        IF #DIFF = 0
          #INCREASE-AGE := #WORK-FIELD * 5
        ELSE
          #INCREASE-AGE := (#WORK-FIELD + 1) * 5
        END-IF
        #EZ-INCREASE-DATE := #LNK-DATE-OF-BIRTH + #INCREASE-AGE * 10000      /* TT1
      END-IF
* YK7 end
      IF   ((LNK-V.PLAN (#I2) = 'RT')
          AND (#RTI OR #RTL                                     /* DW13   YK8
          OR (#BTR AND LNK-V.PAID-UP-DATE-YYYYMM (#I2)          /* DW13
          = #1-MONS-YYYYMM)))
          OR  ((LNK-V.PLAN (#I2) = 'EZ')                        /* YK5
          AND (#RTI                                             /* YK5
          OR  (#BTR AND #LNK-DATE-OF-BIRTH-MM = #1-MONS-MM)))  /* YK5        /* TT1
        PERFORM CHECK-LNK-RT-EZ-RENEW-INCREASE              /* YK5
      ELSE
        IF (#BTR                                               /* DW10
            AND (LNK-V.PAID-TO-DATE-YYYYMM (#I2) GT #CURR-YYYYMM))
            OR ((LNK-V.PLAN (#I2) = 'RT')                      /* DW22
            AND (LNK-V.ISSUE-AGE-N2 (#I2) GE 66)
            AND (LNK-V.PAID-UP-DATE-YYYYMM (#I2) LE #YYYYMM))
            OR ((LNK-V.PLAN (#I2) = 'EZ')                     /* YK5
            AND (LNK-V.PAID-UP-DATE-YYYYMM (#I2) LE #YYYYMM))   /* YK5 - expired
          RESET #HOLD-MOD-PREM
          RESET #EX-FBR-PREM-BY-LINE (#I2)
        ELSE
          COMPUTE #HOLD-MOD-PREM = LNK-V.ANNUAL-PREM (#I2) / 12
          IF LNK-V.PLAN (#I2) = 'EZ'                              /* YK6
            #HOLD-MOD-PREM := #HOLD-MOD-PREM - 1                /* YK6
          END-IF                                                  /* YK6
        END-IF
      END-IF
*
      ADD #HOLD-MOD-PREM TO #WORKFLD1
      IF LNK-V.RID-PD-TO-YYYYMM (#I2) LE #CURR-YYYYMM           /* PM41
          OR NOT #BTR                                           /* PM41
        ADD #EX-FBR-PREM-BY-LINE (#I2) TO #WORKFLD1             /* DW11
      END-IF                                                    /* PM41
    END-IF
  END-IF
END-FOR
*
FOR #I4 1 TO 9       /* find first active pol
  IF  (#ALL AND (LNK-V.STATUS (#I4) = 'D'))
      OR (NOT #ALL AND (LNK-V.STATUS (#I4) = 'D')
      AND (LNK-V.MODE (#I4) = 'G'))
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF #I4 GT 9
  MOVE 1 TO #I4
END-IF
*
IF  #ALL
    OR (LNK-V.MODE (#I4) = 'G')   /* is 1st pol a G
*
  CALLNAT 'GDUESSXX' LNK-V.ID-NUMBER #I4 #SVC-FEE
  ADD #SVC-FEE TO #WORKFLD1
END-IF
*
* MOVE LNK-V.ID-NUMBER TO PARM-SVC.SVC-MEMBER-ID          /* vt2
MOVE LNK-V.ID-NUMBER to #SVC-MEMBER.SVC-ID-NUMBER                       /* vt2
PERFORM CHECK-FOR-PREMIER-SERVICE                       /* NG1
*
* write 'Line 5295 do AT Check for Linked ssn=' LNK-V.SSN 'CN=' lnk-v.id-number /* DW28
MOVE LNK-V.SSN TO #AT-SSN                               /* DW28
PERFORM CHECK-AT                                        /* DW28

END-SUBROUTINE
*
************************************************
DEFINE SUBROUTINE CHECK-MBR-RT-EZ-RENEW-INCREASE
************************************************
* YK5 / YK7 Start
IF FA-S01-VIEW.PLAN(#IN-X) = 'EZ'
  IF FA-S01-VIEW.RENEW-FLAG(#IN-X) <> 'N'
    #INCREASE-EZ-PREM := TRUE
  END-IF
END-IF
* YK5 / YK7 end
IF  ((FA-S01-VIEW.PLAN (#IN-X) = 'RT')
* AND (FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) GE #CURR-YYYYMM)   /* DW13 DW39
* AND (FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) GE #1-MONS-YYYYMM) /* DW13 DW39 DW40 PM41
    AND (FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) GT #1-MONS-YYYYMM)  /* PM41 PM42 PM43
    AND (FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) LE #3-MONS-YYYYMM)  /* DW13
    AND (FA-S01-VIEW.ISSUE-AGE (#IN-X) GE '66'))
    OR ((FA-S01-VIEW.PLAN (#IN-X) = 'EZ')                                   /* YK5
    AND (FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) GT #1-MONS-YYYYMM)         /* YK5
    AND (FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) LE #3-MONS-YYYYMM))        /* YK5 expire soon
* WRITE 'line 6331 do not need RP prem of' #HOLD-MOD-PREM #1-MONS-YYYYMM #3-MONS-YYYYMM
  RESET #HOLD-MOD-PREM
*
  ESCAPE ROUTINE    /* no premium will be needed
END-IF
*
* write 'after test 1'
IF  ((FA-S01-VIEW.PLAN (#IN-X) NE 'RT')
    AND (FA-S01-VIEW.PLAN (#IN-X) NE 'EZ'))                                      /* YK5
*   OR (FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) LT #CURR-YYYYMM)
*   OR (FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) LE #1-MONS-YYYYMM) /* PM41 PM42
    OR (FA-S01-VIEW.PLAN (#IN-X) = 'RT' AND FA-S01-VIEW.PAID-UP-DATE-YYYYMM (#IN-X) GT #3-MONS-YYYYMM AND NOT #RTL)  /* YK8
    OR (FA-S01-VIEW.PLAN (#IN-X) = 'EZ' AND #EZ-INCREASE-DATE-YYYYMM GT #3-MONS-YYYYMM)     /* YK7
*   OR (#BTR AND (NOT #INCREASE-RT-PREM)  /* no incr if He did not ask  DW13
    OR (FA-S01-VIEW.PLAN (#IN-X) = 'RT' AND #BTR AND (NOT #INCREASE-RT-PREM))    /* no incr if He did not ask  DW13
    OR (FA-S01-VIEW.PLAN (#IN-X) = 'EZ' AND #BTR AND (NOT #INCREASE-EZ-PREM))    /* YK5
  COMPUTE #HOLD-MOD-PREM = FA-S01-VIEW.ANNUAL-PREM (#IN-X) / 12
  IF FA-S01-VIEW.PLAN (#IN-X) = 'EZ'                         /* YK6
    #HOLD-MOD-PREM := #HOLD-MOD-PREM - 1                     /* YK6
  END-IF                                                     /* YK6
* WRITE 'line 6386 used' FA-S01-VIEW.PLAN (#IN-X) 'prem of' #HOLD-MOD-PREM
  ESCAPE ROUTINE
END-IF
* YK8 <
IF FA-S01-VIEW.PLAN(#IN-X) = 'RT' AND #RTL AND FA-S01-VIEW.PAID-UP-DATE-YYYYMM(#IN-X) GT #6-MONS-YYYYMM
  COMPUTE #HOLD-MOD-PREM = FA-S01-VIEW.ANNUAL-PREM (#IN-X) / 12
  ESCAPE ROUTINE
END-IF
* < YK8
IF FA-S01-VIEW.PLAN(#IN-X)= 'EZ'                             /* YK5
  #PASS-AGE := #INCREASE-AGE                                 /* YK5
ELSE                                                         /* YK5
  COMPUTE #PASS-AGE = FA-S01-VIEW.ISSUE-AGE-N2 (#IN-X) + 5
END-IF                                                       /* YK5
MOVE FA-S01-VIEW.PLAN        (#IN-X) TO #PASS-PLAN
MOVE FA-S01-VIEW.FACE-AMOUNT (#IN-X) TO #PASS-FACE-AMT
MOVE FA-S01-VIEW.ISSUE-DATE  (#IN-X) TO #PASS-ISSUE-DATE
MOVE FA-S01-VIEW.SMOKER-FLAG (#IN-X) TO #PASS-SMOKER-FLAG
* rating not needed since only rt is done
CALLNAT 'GPREMSXX' #PASS-COMMAND
  #PASS-ID
  #PASS-SUFFIX
  #PASS-PLAN
  #PASS-AGE
  #PASS-ANN-PREM
  #PASS-ISSUE-DATE
  #PASS-SMOKER-FLAG
  #PASS-FACE-AMT
  P-GENDER  /* DW6                                           /* TT1
COMPUTE ROUNDED #HOLD-MOD-PREM = #PASS-ANN-PREM  / 12
* WRITE 'calculated 5 year RT prem of' #HOLD-MOD-PREM
IF FA-S01-VIEW.PLAN(#IN-X)= 'EZ'                             /* YK6
  #HOLD-MOD-PREM := #HOLD-MOD-PREM - 1                       /* YK6
END-IF                                                       /* YK6
*
END-SUBROUTINE
*
************************************************
DEFINE SUBROUTINE CHECK-LNK-RT-EZ-RENEW-INCREASE
************************************************
*
IF LNK-V.PLAN(#I2) = 'EZ'              /* YK7
  IF LNK-V.RENEW-FLAG(#I2) <> 'N'      /* YK7
    #INCREASE-EZ-PREM-LNKED := TRUE   /* YK7
  END-IF                               /* YK7
END-IF                                 /* YK7
*
IF  ((LNK-V.PLAN (#I2) = 'RT')                             /* DW13
* AND (LNK-V.PAID-UP-DATE-YYYYMM (#I2) GE #CURR-YYYYMM)   /* DW13 DW39
* AND (LNK-V.PAID-UP-DATE-YYYYMM (#I2) GE #1-MONS-YYYYMM) /* DW13 DW39 DW40 PM41
    AND (LNK-V.PAID-UP-DATE-YYYYMM (#I2) GT #1-MONS-YYYYMM)  /* PM41
    AND (LNK-V.PAID-UP-DATE-YYYYMM (#I2) LE #3-MONS-YYYYMM)  /* DW13
    AND (LNK-V.ISSUE-AGE (#I2) GE '66'))                     /* DW13
    OR ((LNK-V.PLAN (#I2) = 'EZ')                                   /* YK5
    AND (LNK-V.PAID-UP-DATE-YYYYMM (#I2) GT #1-MONS-YYYYMM)         /* YK5
    AND (LNK-V.PAID-UP-DATE-YYYYMM (#I2) LE #3-MONS-YYYYMM))        /* YK5 expire soon

  RESET #HOLD-MOD-PREM
  ESCAPE ROUTINE    /* no premium will be needed
END-IF
*
IF  ((LNK-V.PLAN (#I2) NE 'RT'
    AND LNK-V.PLAN(#I2) NE 'EZ'))                                   /* YK5
*   OR (LNK-V.PAID-UP-DATE-YYYYMM (#I2) LT #CURR-YYYYMM)
*   OR (LNK-V.PAID-UP-DATE-YYYYMM (#I2) LE #1-MONS-YYYYMM)            /* PM41
    OR (LNK-V.PLAN (#I2) = 'RT' AND LNK-V.PAID-UP-DATE-YYYYMM (#I2) GT #3-MONS-YYYYMM AND NOT #RTL)   /* YK8
    OR (LNK-V.PLAN (#I2) = 'EZ' AND #EZ-INCREASE-DATE-YYYYMM GT #3-MONS-YYYYMM)
*   OR (#BTR AND (NOT #INCREASE-RT-PREM-LNKED)) /*no incr if not ask for DW13/DW26
    OR (LNK-V.PLAN (#I2) = 'RT' AND #BTR AND (NOT #INCREASE-RT-PREM-LNKED))    /* no incr if He did not ask  DW13
    OR (LNK-V.PLAN (#I2) = 'EZ' AND #BTR AND (NOT #INCREASE-EZ-PREM-LNKED))    /* YK5
  COMPUTE #HOLD-MOD-PREM = LNK-V.ANNUAL-PREM (#I2) / 12
  ESCAPE ROUTINE
END-IF
* YK8 <
IF LNK-V.PLAN(#I2) = 'RT' AND #RTL AND LNK-V.PAID-UP-DATE-YYYYMM(#I2) GT #6-MONS-YYYYMM
  COMPUTE #HOLD-MOD-PREM = LNK-V.ANNUAL-PREM (#I2) / 12
  ESCAPE ROUTINE
END-IF
* < YK8
IF LNK-V.PLAN(#I2) = 'EZ'                                    /* YK5
  #PASS-AGE := #INCREASE-AGE                                 /* YK5
ELSE                                                         /* YK5
  COMPUTE #PASS-AGE = LNK-V.ISSUE-AGE-N2 (#I2) + 5
END-IF                                                       /* YK5
MOVE LNK-V.PLAN        (#I2) TO #PASS-PLAN
MOVE LNK-V.FACE-AMOUNT (#I2) TO #PASS-FACE-AMT
MOVE LNK-V.ISSUE-DATE  (#I2) TO #PASS-ISSUE-DATE
MOVE LNK-V.SMOKER-FLAG (#I2) TO #PASS-SMOKER-FLAG
* rating not needed since only rt is done
RESET #SEX
#SEX := GET-GENDER(<LNK-V.MEMBER-CONTACT-ID>)
CALLNAT 'GPREMSXX' #PASS-COMMAND #PASS-ID #PASS-SUFFIX
  #PASS-PLAN #PASS-AGE #PASS-ANN-PREM
  #PASS-ISSUE-DATE #PASS-SMOKER-FLAG
  #PASS-FACE-AMT #SEX    /* DW6                              /* TT1
COMPUTE ROUNDED #HOLD-MOD-PREM = #PASS-ANN-PREM  / 12
IF LNK-V.PLAN(#I2) = 'EZ'                                    /* YK6
  #HOLD-MOD-PREM := #HOLD-MOD-PREM - 1                       /* YK6
END-IF                                                       /* YK6
*
END-SUBROUTINE
*
* * * * * * * * * * *
DEFINE SUBROUTINE CALC-PD-UP-DT  /* DW14
* * * * * * * * * * *
*
IF #PLAN = 'OL' OR = 'GPL'      /* DW38
  IF   (#ISS-DT GE 19970101)
      AND (#MON-ALLOC-AMT NE 999.99)
    COMPUTE #PD-UP-DT = #DOB + 1000000
  ELSE
    COMPUTE #PD-UP-DT = #DOB + 960000
  END-IF
ELSE
  IF #PLAN = '20P'
    COMPUTE #PD-UP-DT = #ISS-DT + 200000
  ELSE
    IF #PLAN = '30P'
      COMPUTE #PD-UP-DT = #ISS-DT + 300000
    ELSE
      IF #PLAN = '7P'
        COMPUTE #PD-UP-DT = #ISS-DT + 70000
      ELSE
        IF   (#PLAN = 'RT' OR = 'EZ')                         /* YK5
          MOVE FA-S01-VIEW.PAID-UP-DATE (#I1) TO #PD-UP-DT    /* DW22
*          WRITE FA-S01-VIEW.ID-NUMBER #ISS-DT 'Paid-up-date not computed'
*          COMPUTE fa-s01-view.PAID-UP-DATE (#I1) =
*              fa-s01-view.ISSUE-DATE (#I1) + 50000
*              #NEW-ISSUE-DATE + 50000
        ELSE
          IF #PLAN = 'LT'
            IF #SMOKER-FLAG = 'S'
              COMPUTE #PD-UP-DT = #DOB + 500000
            ELSE
              COMPUTE #PD-UP-DT = #DOB + 600000
            END-IF
          ELSE
*           IF  (#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z') /* LTII /* DW3   /* YK4
            IF F-LT2-TRUE(<#PLAN>)                                       /* YK4
              IF #PLAN = MASK (.NN)
                COMPUTE #PD-UP-DT = #ISS-DT + (#PLAN-N2 * 10000)
              END-IF
            ELSE    /* MUST BE OL FLEX                       /* DW3
              IF #PLAN-FLEX-F = 'F'    /* ??F                /* DW3
                IF #PLAN-FLEX-P = 'P'  /* 4PF etc            /* DW3
                  COMPUTE #PD-UP-DT = #ISS-DT + (#PLAN-FLEX-N1 * 10000)
                ELSE                   /* MUST BE 59F ETC
                  COMPUTE #PD-UP-DT = #ISS-DT + (#PLAN-FLEX-N2 * 10000)
                END-IF
              END-IF
            END-IF
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-AT    /* DW28
*
CALLNAT 'C2810SFA' #AT-SSN #AT-ID-NUMBER #AT-ALOT-AMT #ALOT-CHG-AUTH
* if #at-alot-amt ne 0
*   write #at-ssn 'Addl Alot amt =' #at-alot-amt 'alot-auth=' #alot-chg-auth
* end-if
ADD #AT-ALOT-AMT TO #WORKFLD1
*
end-subroutine
*
*******************************
DEFINE CHECK-FOR-PREMIER-SERVICE     /* NG1
*******************************
*
*** We will be calling this module several times - once for the member and maybe more
*** for any linked members this guys is paying allotments for. We should set the ID before the
*** to here. A GET is sufficient as we do not want to apply any payments - just include 1 month
*** rate in the calculation
*
* PARM-SVC.SVC-PLAN      := 'PSM'                              /* vt2 \/
* PARM-SVC.ACTION        := 'GET'
* *** use transaction date of 1rst of new month ***
* * #SVC-PAID-TO-DATE      := 1
* * #SVC-PTD-YYYYMM        := #CURR-YYYYMM
* * PARM-SVC.TRANSACTION-DATN := #SVC-PAID-TO-DATE
* * PARM-SVC.TRANSACTION-TIMN := *TIMN
* CALLNAT 'SVCN0003' PARM-SVC #MSG
* IF PARM-SVC.SVC-MODE = 'G'
*     AND PARM-SVC.SVC-PAY-UP NE 'Y'
*   ADD SVC-AMOUNT-DUE TO #WORKFLD1
* END-IF
*
* reset #SVC-MEMBER
#svc-member.SVC-PLAN      := 'PSM'
#svc-member.SVC-STATUS    := 'A'
CALLNAT 'OBJNMB01' #GET #MSG #SVC-MEMBER   /* Get member service record
IF #MSG = BLANK
  IF #SVC-MEMBER.SVC-MODE = 'G'
      AND #SVC-MEMBER.SVC-PAY-UP NE 'Y'
    ADD #SVC-MEMBER.SVC-MONTHLY-RATE TO #WORKFLD1
  END-IF
END-IF
* write '=' #workfld1                                          /* vt2 /\
END-SUBROUTINE
*
END
