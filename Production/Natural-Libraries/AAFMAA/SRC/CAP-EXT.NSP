* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* Extract of CAP elligible people
* 01/24/2017

DEFINE DATA
LOCAL USING CAPL0001
LOCAL
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID
  2 CAP-ENTRY-RANK-ID
  2 MILITARY-STATUS
  2 C*ACTIVE-SEGMENTS
  2 ACTIVE-SEGMENTS (9)
    3 ISSUE-DATE
    3 POLICY-ID
    3 PLAN
    3 STATUS
    3 FACE-AMOUNT
    3 CONV-DURATION
    3 X-LOAN-AMOUNT
    3 X-LOAN-DATE
*
1 CONTACT VIEW OF A-CONTACTS
  2 ID-NUMBER
  2 CONTACT-ID
  2 DATE-OF-BIRTH
  2 RANK-ID
*
1 RR-V VIEW OF A-RANK-REFERENCE
  2 SPECIAL-PAY-IND
  2 MILITARY-ID
  2 PAY-GRADE
*
1 NT-V VIEW OF A-NOTES
  2 ID-NUMBER (N6.0)
  2 DTS-DATN (P9.0)
  2 DTS-TIMN (P7.0)
  2 C*NOTE-TABLE
  2 NOTE-DATE (N8.0/400)
  2 NOTE-CLERK-ID (A3/400)
  2 NOTE-LINE-NUM (P1.0/400)
  2 NOTE-TEXT (A60/400)

1 #NOT-ELLIGIBLE (L)
1 #AMOUNT(A10)
*
1 I (I4)
1 j (I4)
1 K (I4)
1 L (I4)
1 #ELLIGIBLE-RANKS (A3/10) CONSTANT <'E5','E6','E7','E8','E9','WO1','CW2','O1','O2','O3'>
1 #OUTPUT (A500)
1 #TAB (A1) CONSTANT <H'09'>
1 #HAS-CAP (A1)
1 #ADD (I4) CONSTANT <1>
*
1 #COUNTER (I4)
1 #POS  (I4)
*
1 #ACTION-TYPE (I4)
1 #CLERK-ID (A3)
1 #CN (N6)
1 #CAP-NUM (N2)
1 #CAP-STATUS (A1)
1 #LOAN-ISSUE-DATE(N8)
*
1 #ONE-CAP (I4)
1 #TWO-CAP (I4)
END-DEFINE
*
* DEFINE WORK FILE 1 '/usr/SAG/tmp/CapPeople.txt' TYPE 'ASCII-COMPRESSED'
*
* COMPRESS
*   'ID-Number' #TAB
*   'Policy-Number' #TAB
*   'Issue-date' #TAB
*   'Plan' #TAB
*   'Pay-Grade' #TAB
*   'Cap-Flag?'#TAB
*   'Loan-Amount'#TAB
*   'X-Loan-Amount' INTO #OUTPUT LEAVING NO
* WRITE WORK 1 #OUTPUT
*
READ ST-V BY ID-NUMBER STARTING FROM 1900 

  FOR I 1 TO C*ACTIVE-SEGMENTS
    IF ST-V.STATUS(I) = 'D' AND X-LOAN-AMOUNT(I) > 0
      IF ST-V.PLAN(I) = 'GPL' OR = 'GP2'
        ESCAPE TOP
      END-IF

      RESET #POS
      FIND NT-V WITH NT-V.ID-NUMBER = ST-V.ID-NUMBER
        FOR J NT-V.C*NOTE-TABLE TO 1 STEP -1
          EXAMINE NOTE-TEXT(J) FOR '*CAP2' GIVING POSITION #POS
          IF #POS > 0
            ADD 1 TO K
            ESCAPE BOTTOM
          END-IF
        END-FOR
      END-FIND
      LNS-V.LOAN-POLICY-NUMBER    := POLICY-ID(I)
      LNS-V.LOAN-ISSUE-DATE       := ST-V.X-LOAN-DATE(I)
      LNS-V.LOAN-INTEREST-RATE    := 1.5
      LNS-V.LOAN-STATUS           := 'C'
      LNS-V.LOAN-TYPE             := 'C'
      LNS-V.CONTACT-ID            := ST-V.MEMBER-CONTACT-ID
      LNS-V.ID-NUMBER             := ST-V.ID-NUMBER
      IF #POS > 0
        LNS-V.LOAN-NUMBER           := 2
        ADD 1 TO #TWO-CAP
      ELSE
        LNS-V.LOAN-NUMBER           := 1
        ADD 1 TO #ONE-CAP
        
        #ACTION-TYPE     := 1
        #CLERK-ID        := 'EDS'
        #CN              := ST-V.ID-NUMBER
        #CAP-NUM         := LNS-V.LOAN-NUMBER
        #CAP-STATUS      := 'C'
        #LOAN-ISSUE-DATE := ST-V.X-LOAN-DATE(I)
        CALLNAT 'CAPN0004'
          #ACTION-TYPE
          #CLERK-ID
          #CN
          #CAP-NUM
          #CAP-STATUS
          #LOAN-ISSUE-DATE
      END-IF
      STORE LNS-V
      ADD 1 TO #COUNTER
      END TRANSACTION
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-READ
*
END TRANSACTION
*
WRITE 'WORK COMPLETE'
WRITE 'Num 1 cap' #ONE-CAP 'Num 2 cap' #TWO-CAP
WRITE 'TOTAL NUMBER OF RECORDS CREATED WAS' #COUNTER

ON ERROR
  WRITE NOTITLE  *PROGRAM "Err-ln:" *ERROR-LINE "Err:" *ERROR-NR // 
  #COUNTER ST-V.ID-NUMBER
  BACKOUT TRANSACTION
END-ERROR

END
