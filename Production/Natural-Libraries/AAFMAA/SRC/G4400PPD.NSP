* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* PROGRAM-ID: G4400PPD    ** PENDING POLICY/CLAIM SETTLEMENT **
* LOGIC AT LINE 2430 & 2900 TO DELETE A BAD PENDING RECORD **<<<<<<<<<<<
* DRW CAN US "D*' TO DELETE PD RECORDS ON THIS DCREEN
*******************************************
*                       MODIFICATION LOG
* USER DATE     TAG  REASON
* DRW  07262006 DW1  Show total entries on screen for AAFMAA Policies
* DRW  01092007 DW2  Reset index when pending BD;s are bypassed
* DRW 05/27/2008 DW3 Replace Policy name with Pol # for PD AAFMAA Pols
*                    and show Contestability
* DRW 07/18/2008 DW4 Add No Longer Contestable Linkage to GCONTSXX
* DRW 09/23/2008 DW5 Check if AAFMAA POLICIES on PD file are really Unsettled
* DRW 11/25/2008 DW6 Add Linkage to GCONTSXX for #CONTESTABLE-BUT-PAID
* RSE 10/29/2009 RE1 Add USER-COMPANY to Pending Notes screen on G4401MPD and
*                    in LDA G4400LPD
* RSE 11/17/2009 RE2 Increased no. of occurrences of ENTRY-DATE table
* NGG  20121010  NG1 CN Expansion Project - beneficiary data are
*                    moved to new database files
* YAK 04/19/2013 YK1 Correct logic to get policy segment number OI-1827
* vxt 01/13/2014 vt1 /Ticket 2491/ Add Plan field to the screen
*******************************************
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING G4400LPD
LOCAL USING GONERLXX        /* WORK FIELDS FOR 'GONERCXX'
LOCAL
*
1 #has-Pending-A         (l)        /* DW5
1 #check-pd              (L)        /* DW5
1 #hold-isc              (i2)       /* DW5
1 #pol-num    (a16)                       /* DW3
1 #has-contestability    (l)
1 #no-longer-contestable  (l)    /* DW4
1 #CONTESTABLE-BUT-PAID  (l)     /* DW6
1 #seg-i                  (i2)
1 #DET-CNT       (N5)   /* DW1
1 #ID         (N6)
1 REDEFINE #ID
  2  #ID-A      (A6)
1 #TOT-PEND-ACT          (P5)
1 #SEL-CNT               (P3)
1 #SCR-SELECT-CMND       (A2/20)
1 #SCR-SELECT-CMND-CV    (C/20)
1 #SCR-ISN               (P8/20)
*
1 #SCR-SUMMARY-SEL-OCC   (100)
  2 #SCR-SUMMARY-SEL-1    (A1)
  2 REDEFINE #SCR-SUMMARY-SEL-1
    3 #SCR-SUMMARY-SEL-2   (A1)
  2 REDEFINE #SCR-SUMMARY-SEL-1
    3 #SCR-SUMMARY-SEL-3   (A1)
  2 REDEFINE #SCR-SUMMARY-SEL-1
    3 #SCR-SUMMARY-SEL-4   (A1)
  2 REDEFINE #SCR-SUMMARY-SEL-1
    3 #SCR-SUMMARY-SEL-5   (A1)
1 #SCR-SUMMARY-SEL-CV    (C/100)
1 #SCR-SUMMARY-DATE      (A8/100)
1 REDEFINE #SCR-SUMMARY-DATE
  2 #SCR-SUMMARY-DATE-OCC  (100)
    3 #SCR-SUMMARY-DATE-MM   (N2)
    3 #SCR-SUMMARY-DATE-DD   (N2)
    3 #SCR-SUMMARY-DATE-YYYY (N4)
1 #SCR-SUMMARY-CNT       (P4/100)
*
1 #FOUND-S               (L)
1 #SHOW-PENDING-ACTIONS  (L)
1 #ALL                   (A1)
1 #UNSETTLED-CLMS        (A1)
1 #UNSETTLED-VA-CLMS     (A1)
1 #UNSETTLED-NON-VA-CLMS (A1)
1 #UNSETTLED-POLS        (A1)
1 #UNSETTLED-AAFMAA-POLS (A1)
1 #UNSETTLED-NON-AAFMAA-POLS (A1)
1 #PENDING-BENE-CHGS     (A1)
1 #PENDING-ACTIONS       (A1)
1 #PENDING-ACTIONS-USER  (A1)
1 #PENDING-ACT-USER      (A3)    /* user desired
1 #PENDING-ACTIONS-WID   (A1)
1 #PENDING-ACTIONS-MBRSV (A1)
1 #PENDING-ACTIONS-MBRSH (A1)
1 #PENDING-ACTIONS-MBRAC (A1)
1 #PENDING-ACTIONS-EDS   (A1)
1 #SUMMARY-BY-DAY    (L)
*
1 NT-V VIEW OF A-NOTES           
  2 NOTE-CLERK-ID       (A3/60)
  2 NOTE-TEXT          (A60/60)
  2 REDEFINE NOTE-TEXT
    3 NOTE-TEXT-OCC     (40)
      4 NOTE-TEXT-PAC-1ST-3 (A3)
      4 NOTE-TEXT-PAC-DT    (A10)
      4 REDEFINE NOTE-TEXT-PAC-DT
        5 NOTE-TEXT-PAC-DT-MM (N2)
        5 NOTE-TEXT-PAC-DT-F1 (A1)
        5 NOTE-TEXT-PAC-DT-DD (N2)
        5 NOTE-TEXT-PAC-DT-F2 (A1)
        5 NOTE-TEXT-PAC-DT-YYYY (N4)
      4 NOTE-TEXT-PAC-FL-1  (A47)
  2 USER-COMPANY        (A1/60)   /* RE1
*
1 BENE-D-V VIEW OF A-BENE-DRAFT    /* NG1
  2 ID-NUMBER          (N6)    /* let D = bene designation (1-4)
  2 NOTE-DATE          (N8/60) /* LET P/A = PRINCIPAL/ALTERNATE DESING
  2 REDEFINE NOTE-DATE         /* let L = linked policies
    3 BENE-DATES-6-POLS (6)
      4 BENE-ISS-DT       (N6/7)   /* (D, L)
      4 BENE-SPLIT-IND    (N1/7)   /* (D, L)
      4 BENE-LST-UPD      (N8)     /* (D)
      4 BENE-STRT-PEND    (N8)     /* (D)
      4 BENE-FOL-UP-IND   (N1)     /* (D)
      4 BENE-OWN-TRNSF-DT (N8)     /* (D)
      4 BENE-SUC-OWN      (N1)     /* (D)
      4 BENE-NEW-LAYOUT   (N1)     /* (D)
      4 BENE-FIL1         (A4)
  2 NOTE-CLERK-ID       (A3/60)
  2 REDEFINE NOTE-CLERK-ID
    3 BENE-MISC-6-POLS  (6)
      4 BENE-STATUS      (A1)     /* (D)
      4 BENE-RESTRICT    (A1)     /* (D)
      4 BENE-MISC-PRIM-SEC (2)
        5 BENE-TYPE        (A1)    /* (D, P/A)
        5 BENE-SHARE-TYP   (A1)    /* (D, P/A)
        5 BENE-MISC-FIL-2  (A12)
  2 NOTE-TEXT          (A60/60)
  2 REDEFINE NOTE-TEXT
    3 BENE-TEXTS-6-POLS (6)
      4 BENE-TEXT-PRIM-SEC (2)
        5 BENE-TEXT        (A60/5)    /* (D, P/A, text-line)
*
1 BENE-F-V VIEW OF A-BENE-FINAL    /* used to determine current with pend
  2 ID-NUMBER          (N6)    /* let D = bene designation (1-4)
  2 NOTE-DATE          (N8/60) /* LET P/A = PRINCIPAL/ALTERNATE DESING
  2 REDEFINE NOTE-DATE         /* let L = linked policies
    3 BENE-DATES-6-POLS (6)
      4 BENE-ISS-DT       (N6/7)   /* (D, L)
      4 BENE-SPLIT-IND    (N1/7)   /* (D, L)
      4 BENE-LST-UPD      (N8)     /* (D)
      4 BENE-STRT-PEND    (N8)     /* (D)
      4 BENE-FOL-UP-IND   (N1)     /* (D)
      4 BENE-OWN-TRNSF-DT (N8)     /* (D)
      4 BENE-SUC-OWN      (N1)     /* (D)
      4 BENE-NEW-LAYOUT   (N1)     /* (D)
      4 BENE-FIL1         (A4)
  2 NOTE-CLERK-ID      (A3/60)
  2 REDEFINE NOTE-CLERK-ID
    3 BENE-MISC-6-POLS  (6)
      4 BENE-STATUS      (A1)     /* (D)
      4 BENE-RESTRICT    (A1)     /* (D)
      4 BENE-MISC-PRIM-SEC (2)
        5 BENE-TYPE        (A1)    /* (D, P/A)
        5 BENE-SHARE-TYP   (A1)    /* (D, P/A)
        5 BENE-MISC-FIL-2  (A12)
  2 NOTE-TEXT          (A60/60)
  2 REDEFINE NOTE-TEXT
    3 BENE-TEXTS-6-POLS (6)
      4 BENE-TEXT-PRIM-SEC (2)
        5 BENE-TEXT        (A60/5)    /* (D, P/A, text-line)
*
1 #LAST-ENTRY-DATE (N8)
* #NT-ID      (N6)
1 #FOUND-PD   (L)
1 #SCR-MSG    (A75)
1 #START-MM   (N2)
1 #START-YY   (N4)
1 #SCR-TOT-MBRS        (N5)
1 #BYPASS-REC          (L)
1 #SEP-LINE-CREATED    (L)
1 #NOT-FND             (L)
1 #FINAL-BENE-NT-REC-NUM  (N6)
1 #ISC                 (I2)
1 #ISC-X               (I2)
1 #REPEAT-1ST-LINE     (L)
1 #I1                  (I2)
1 #I2                  (I2)
1 #LAST-CLM-ID-NUMBER  (P6)
1 #LAST-CLM-DATE-FILED (N8)
1 #CURR-CLMS           (P3)
1 #NUM-EQ-CLMS         (P3)
1 #LAST-POL-ID-NUMBER  (P6)
1 #LAST-POL-DATE-FILED (N8)
1 #CURR-POLS           (P3)
1 #NUM-EQ-POLS         (P3)
1 #NUM-DESIG           (P2)
1 #PEND-X              (I2)
*
1 #BEGIN-DATE       (N8)
1 REDEFINE #BEGIN-DATE
  2 #BEGIN-DATE-MM   (N2)
  2 #BEGIN-DATE-DD   (N2)
  2 #BEGIN-DATE-YYYY (N4)
1 #FLIP-BEGIN-DATE       (N8)
1 REDEFINE #FLIP-BEGIN-DATE
  2 #FLIP-BEGIN-DATE-YYYY (N4)
  2 #FLIP-BEGIN-DATE-MM   (N2)
  2 #FLIP-BEGIN-DATE-DD   (N2)
*
1 #END-DATE        (N8)
1 REDEFINE #END-DATE
  2 #END-DATE-MM   (N2)
  2 #END-DATE-DD   (N2)
  2 #END-DATE-YYYY (N4)
1 #FLIP-END-DATE       (N8)
1 REDEFINE #FLIP-END-DATE
  2 #FLIP-END-DATE-YYYY (N4)
  2 #FLIP-END-DATE-MM   (N2)
  2 #FLIP-END-DATE-DD   (N2)
*
1 #PRIOR-SCREEN-1ST-DATE (N8)
1 #THIS-SCREEN-1ST-DATE  (N8)
1 #1ST-DATE-TBL          (N8/300)    /* RE2  formerly 50
1 #1ST-ISN-TBL           (N6/300)    /* RE2  formerly 50
1 #HOLD-ISN              (N6)
1 #IPG                   (I2)
*
1 #10-DAYS-AGO     (N8)
1 REDEFINE #10-DAYS-AGO
  2 #10-DAYS-AGO-YYYY (N4)
  2 #10-DAYS-AGO-MM   (N2)
  2 #10-DAYS-AGO-DD   (N2)
*
1 #SCR-HDR-LINE-G
  2 #SCR-H-ID         (A6) INIT <'ID-NBR'>
   2 #SCR-FLL-1        (A1)                                                /* vt1
  2 #SCR-H-ENTRY-DATE (A10) INIT <' DT-FILED '>
  2 #SCR-H-NAME       (A20) INIT <' NAME'>
*  2 #SCR-FLL-2        (A1)                                                 /* VT1
  2 #SCR-H-CODE       (A6)  INIT <' TYPE '>
*  2 #SCR-FLL-3        (A1)                                                 /* VT1
  2 #SCR-H-DOD-ISS-DT (A10)  INIT <'  DOD   '>
*  2 #SCR-FLL-4        (A1)                                                 /* VT1
  2 #SCR-H-STATUS     (A2)  INIT <'ST'>
  2 #SCR-H-LETR/POL   (A16) INIT <'POLICY/LETTER'>                          /* vt1 was a17
  2 #SCR-H-PLAN       (A4)  INIT <'PLAN'>                                     /* VT1
1 REDEFINE #SCR-HDR-LINE-G
  2 #SCR-HDR-LINE     (A75)
*
1 #SCR-LINE         (A75/20)
1 REDEFINE #SCR-LINE
  2 #SCR-LINE-TBL    (20)
    3 #SCR-LINE-75    (A75)
    3 REDEFINE #SCR-LINE-75
      4 #SCR-ID         (N6)
       4 #SCR-FIL-1      (A1)                                              /* vt1
      4 #SCR-ENTRY-DATE (A10)
      4 #SCR-NAME       (A20)
*      4 #SCR-FIL-2      (A1)                                              /* VT1
      4 #SCR-CODE       (A6)
*      4 #SCR-FIL-3      (A1)                                              /* VT1
      4 #SCR-DOD-DT     (A10)
*      4 #SCR-FIL-4      (A1)                                              /* VT1  
      4 #SCR-STATUS     (A1)
      4 #SCR-FIL-5      (A1)
      4 #SCR-POL-LTR    (A16)                                              /* vt1 was a17
      4 REDEFINE #SCR-POL-LTR
        5 #SCR-POL-LTR-X  (A4/4)
*        5 #SCR-POL-LTR-Z  (A1)                                            /* vt1 
        4 #SCR-PLAN     (A3)                              /* VT1
    3 REDEFINE #SCR-LINE-75
      4 #SCR-LINE-FILL-4  (A5)
      4 #SCR-LINE-FILL-70 (A70)
*
1 #LAST            (A25)
1 #FIRST/MID       (A25)
1 REDEFINE #FIRST/MID
  2 #FILL           (A1)
  2 #FIRST/MID-R    (A24)
1 #SUFF            (A9)
1 REDEFINE #SUFF
  2 #FILL           (A1)
  2 #SUFF-R         (A8)
1 #NAME-OVRFLO     (A25)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY           (N4)
  2 #MMDD           (N4)
  2 REDEFINE #MMDD
    3 #MM             (N2)
    3 #DD             (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A         (A4)
  2 #MM-A           (A2)
  2 #DD-A           (A2)
*
1 #CURR-MM         (N2)
1 REDEFINE #CURR-MM
  2 #CURR-MM-A      (A2)
1 #CURR-YYYY       (N4)
*
1 #LAST-LINE-YYYY  (A4)
1 #LAST-LINE-MM    (A2)
1 #LAST-LINE-DD    (A2)
*
END-DEFINE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INCLUDE GONERCXX            /* NATURAL ERROR ROUTINE
*
if  #cga-orig-suffix = 'PDA'          /* Rqst for Unsettled AAFMAA POLS  /* DW5
  move 'X' to #UNSETTLED-AAFMAA-POLS
  reset #cga-orig-suffix #Cga-scr-suffix
end-if
*
if   (#cga-orig-suffix = '*FX')          /* Check for bad PD's   /* DW5
    and (#cga-scr-id = 0)
  move true to #check-pd
  move 'X' to #UNSETTLED-AAFMAA-POLS
  reset #cga-orig-suffix #Cga-scr-suffix
end-if
*
IF #CGA-SCR-ID NE 0
  PERFORM PENDING-CN
END-IF
*
MOVE *DATN TO #YYYYMMDD
MOVE #MM   TO #CURR-MM
MOVE #YYYY TO #CURR-YYYY
*
MOVE 01011987 TO #BEGIN-DATE
*
MOVE #YYYY   TO #END-DATE-YYYY
MOVE #MM     TO #END-DATE-MM
MOVE #DD     TO #END-DATE-DD
*
MOVE '*' TO #CGA-SCR-COMMAND
RESET     #CGA-SCR-ID
RESET     #CGA-SCR-SUFFIX
INPUT MARK *#ALL USING MAP 'G4400MPD'    /* ASK FOR DESIRED CODE
*
IF #CGA-SCR-COMMAND NE '*'
  FETCH 'G1000PXX'
END-IF
*
IF #BEGIN-DATE NE MASK (MMDDYYYY)
  REINPUT 'INVALID BEGIN DATE - MUST BE IN FORMAT MMDDYYYY'
    MARK *#BEGIN-DATE
END-IF
*
IF #END-DATE NE MASK (MMDDYYYY)
  REINPUT 'INVALID END DATE - MUST BE IN FORMAT MMDDYYYY'
    MARK *#END-DATE
END-IF
*
RESET #SEL-CNT
DECIDE FOR EVERY CONDITION
  WHEN #ALL                       NE ' ' ADD 1 TO #SEL-CNT
  WHEN #UNSETTLED-CLMS            NE ' ' ADD 1 TO #SEL-CNT
  WHEN #UNSETTLED-VA-CLMS         NE ' ' ADD 1 TO #SEL-CNT
  WHEN #UNSETTLED-NON-VA-CLMS     NE ' ' ADD 1 TO #SEL-CNT
  WHEN #UNSETTLED-POLS            NE ' ' ADD 1 TO #SEL-CNT
  WHEN #UNSETTLED-AAFMAA-POLS     NE ' ' ADD 1 TO #SEL-CNT
  WHEN #UNSETTLED-NON-AAFMAA-POLS NE ' ' ADD 1 TO #SEL-CNT
  WHEN #PENDING-BENE-CHGS         NE ' ' ADD 1 TO #SEL-CNT
  WHEN #PENDING-ACTIONS           NE ' ' ADD 1 TO #SEL-CNT
  WHEN #PENDING-ACTIONS-USER      NE ' ' ADD 1 TO #SEL-CNT
    IF #PENDING-ACT-USER = ' '
      REINPUT 'Requested User initials must be entered'
        MARK *#PENDING-ACT-USER
    END-IF
  WHEN #PENDING-ACTIONS-WID       NE ' ' ADD 1 TO #SEL-CNT
  WHEN #PENDING-ACTIONS-MBRSV     NE ' ' ADD 1 TO #SEL-CNT
  WHEN #PENDING-ACTIONS-MBRSH     NE ' ' ADD 1 TO #SEL-CNT
  WHEN #PENDING-ACTIONS-MBRAC     NE ' ' ADD 1 TO #SEL-CNT
  WHEN #PENDING-ACTIONS-EDS       NE ' ' ADD 1 TO #SEL-CNT
  WHEN NONE   IGNORE
END-DECIDE
*
IF #SEL-CNT = 0
  REINPUT 'AT LEAST ONE TYPE SELECTION MUST BE MADE'
    MARK *#ALL
END-IF
*
IF #SEL-CNT GT 1
  REINPUT 'Only 1 selection may be made'
    MARK *#ALL
END-IF
*
IF #ALL NE ' '
  MOVE 'X' TO #UNSETTLED-CLMS
    #UNSETTLED-POLS
    #PENDING-BENE-CHGS
    #PENDING-ACTIONS
END-IF
*
IF #UNSETTLED-POLS NE ' '
  MOVE 'X' TO #UNSETTLED-AAFMAA-POLS
  MOVE 'X' TO #UNSETTLED-NON-AAFMAA-POLS
END-IF
*
IF #UNSETTLED-CLMS NE ' '
  MOVE 'X' TO #UNSETTLED-VA-CLMS
  MOVE 'X' TO #UNSETTLED-NON-VA-CLMS
END-IF
*
IF #START-MM NE 0
  MOVE #START-MM TO #BEGIN-DATE-MM
* IF #START-YY GT 50
*   COMPUTE #BEGIN-DATE-YYYY = 1900 + #START-YY
* ELSE
*   COMPUTE #BEGIN-DATE-YYYY = 2000 + #START-YY
* END-IF
*
  MOVE #START-YY TO #BEGIN-DATE-YYYY
  MOVE #BEGIN-DATE TO #END-DATE
  ADD 1 TO #END-DATE-MM
  IF #END-DATE-MM GT 12
    MOVE 01 TO #END-DATE-MM
    ADD 1 TO #END-DATE-YYYY
  END-IF
END-IF
*
MOVE #BEGIN-DATE-YYYY TO #FLIP-BEGIN-DATE-YYYY
MOVE #BEGIN-DATE-MM   TO #FLIP-BEGIN-DATE-MM
MOVE #BEGIN-DATE-DD   TO #FLIP-BEGIN-DATE-DD
MOVE #END-DATE-YYYY TO #FLIP-END-DATE-YYYY
MOVE #END-DATE-MM   TO #FLIP-END-DATE-MM
MOVE #END-DATE-DD   TO #FLIP-END-DATE-DD
*
RESET #SHOW-PENDING-ACTIONS
IF   ((#PENDING-ACTIONS      NE ' ')
    OR (#PENDING-ACTIONS-USER   NE ' ')
    OR (#PENDING-ACTIONS-WID    NE ' ')
    OR (#PENDING-ACTIONS-MBRSV  NE ' ')
    OR (#PENDING-ACTIONS-MBRSH  NE ' ')
    OR (#PENDING-ACTIONS-MBRAC  NE ' ')
    OR (#PENDING-ACTIONS-EDS    NE ' '))
  MOVE TRUE TO #SHOW-PENDING-ACTIONS
END-IF
*
IF  (#ALL = ' ')
    AND (#START-MM = 0)
    AND (#SHOW-PENDING-ACTIONS)
* MOVE *DATN TO #FLIP-BEGIN-DATE       /* <<<<<<<<<<<<<
* SUBTRACT 1 FROM #FLIP-BEGIN-DATE-MM
  IF #FLIP-BEGIN-DATE-MM LT 1
    MOVE 12 TO #FLIP-BEGIN-DATE-MM
    SUBTRACT 1 FROM #FLIP-BEGIN-DATE-YYYY
  END-IF
END-IF
*
IF #START-MM = 0
  IF  (#ALL = ' ')
      OR (#SHOW-PENDING-ACTIONS)
    MOVE 40000000 TO #FLIP-END-DATE
  END-IF
END-IF
*
IF  (#ALL = ' ')
    AND ((#PENDING-ACTIONS      NE ' ')
    OR (#PENDING-ACTIONS-USER   NE ' ')
    OR (#PENDING-ACTIONS-WID    NE ' ')
    OR (#PENDING-ACTIONS-MBRSV  NE ' ')
    OR (#PENDING-ACTIONS-MBRSH  NE ' ')
    OR (#PENDING-ACTIONS-MBRAC  NE ' ')
    OR (#PENDING-ACTIONS-EDS    NE ' '))
  MOVE ' EFF-DATE' TO #SCR-H-ENTRY-DATE
  MOVE TRUE TO #SUMMARY-BY-DAY
END-IF
*
MOVE (AD=P) TO #SCR-SELECT-CMND-CV (*)
*
REPEAT
  PERFORM PROCESS-LOOP
*
  IF #SUMMARY-BY-DAY
    FOR #I1 1 TO 100
      IF #SCR-SUMMARY-SEL-1 (#I1) NE ' '
        ESCAPE BOTTOM
      END-IF
    END-FOR
*
    IF #I1 GT 100
      MOVE 1 TO #I1
    END-IF
*
    MOVE #SCR-SUMMARY-DATE-YYYY (#I1) TO #FLIP-BEGIN-DATE-YYYY
*    IF #FLIP-BEGIN-DATE-YYYY LT 50
*      ADD 2000 TO #FLIP-BEGIN-DATE-YYYY
*    ELSE
*      ADD 1900 TO #FLIP-BEGIN-DATE-YYYY
*   END-IF
*
    MOVE #SCR-SUMMARY-DATE-MM (#I1) TO #FLIP-BEGIN-DATE-MM
    MOVE #SCR-SUMMARY-DATE-DD (#I1) TO #FLIP-BEGIN-DATE-DD
*   MOVE #FLIP-BEGIN-DATE TO #FLIP-END-DATE
    RESET #SUMMARY-BY-DAY
*
    END TRANSACTION
    ESCAPE TOP
  END-IF
*
  IF #CGA-SCR-COMMAND NE MASK ('-')     /* INDICATES GO TO PRIOR SCREEN
    ESCAPE BOTTOM
  END-IF
*
  IF #IPG GT 1
    SUBTRACT 1 FROM #IPG
    MOVE #1ST-DATE-TBL (#IPG) TO #FLIP-BEGIN-DATE
    MOVE #1ST-ISN-TBL (#IPG) TO #HOLD-ISN
    SUBTRACT 1 FROM #IPG
  END-IF
END-REPEAT
*
FETCH 'G1000PXX'
* * * * * * * * * *
DEFINE PROCESS-LOOP
* * * * * * * * * *
*
MOVE (AD=P) TO #SCR-SUMMARY-SEL-CV (*)
RESET #ISC
RESET #TOT-PEND-ACT
READ MBRSHIP-MTD-DET-V BY ENTRY-DATE FROM #FLIP-BEGIN-DATE
    THRU #FLIP-END-DATE
  RESET #BYPASS-REC
*
  IF   (#CGA-SCR-COMMAND = MASK ('-'))
      AND (*ISN NE #HOLD-ISN)
    END TRANSACTION
    ESCAPE TOP
  END-IF
  MOVE '*' TO #CGA-SCR-COMMAND
*
* DISPLAY #PENDING-BENE-CHGS CODE #PENDING-ACTIONS NT-V.ID-NUMBER
  IF  ((#UNSETTLED-VA-CLMS = ' ') AND (#UNSETTLED-NON-VA-CLMS = ' ')
      AND (CODE = 'C'))
      OR ((#UNSETTLED-AAFMAA-POLS = ' ')     AND (CODE = 'A'))
      OR ((#UNSETTLED-NON-AAFMAA-POLS = ' ') AND (CODE = 'P'))
      OR ((#PENDING-BENE-CHGS         = ' ') AND (CODE = 'B'))
      OR ((#PENDING-ACTIONS           = ' ')
      AND (#PENDING-ACTIONS-USER     = ' ')
      AND (#PENDING-ACTIONS-WID      = ' ')
      AND (#PENDING-ACTIONS-MBRSV    = ' ')
      AND (#PENDING-ACTIONS-MBRSH    = ' ')
      AND (#PENDING-ACTIONS-MBRAC    = ' ')
      AND (#PENDING-ACTIONS-EDS      = ' ')
      AND (CODE = 'S'))
    END TRANSACTION
    ESCAPE TOP
  END-IF
*
* IF #CGA-CLERK = 'DRW'
*  AND (REC-ISN =  11681)
*      OR = 122140 OR = 88131  OR = 132826 OR = 106723 OR = 117075)
*   WRITE 'REC DELETED ISN =' REC-ISN
*   DELETE (0516)
*   END TRANSACTION
*   ESCAPE TOP
* END-IF
*
  IF CODE = 'S'
    PERFORM CHK-PENDING-USER
    IF #BYPASS-REC
      END TRANSACTION
      ESCAPE TOP
    END-IF
  END-IF
*
  IF #SUMMARY-BY-DAY
    IF ENTRY-DATE = #LAST-ENTRY-DATE
      ADD 1 TO #SCR-SUMMARY-CNT (#ISC)
    ELSE
      ADD 1 TO #ISC
*
      IF #ISC GT 100
        ESCAPE BOTTOM
      END-IF
*
      RESET #SCR-SUMMARY-SEL-CV (#ISC)
      COMPRESS ENTRY-DATE-MM ENTRY-DATE-DD ENTRY-DATE-YYYY
*                    INTO #SCR-SUMMARY-DATE (#ISC) WITH '-'
        INTO #SCR-SUMMARY-DATE (#ISC) LEAVING NO
      MOVE 1 TO #SCR-SUMMARY-CNT (#ISC)
    END-IF
    MOVE ENTRY-DATE TO #LAST-ENTRY-DATE
    ADD 1 TO #TOT-PEND-ACT
*
    END TRANSACTION
    ESCAPE TOP
  END-IF
*
  ADD 1 TO #ISC
*
  RESET #SEP-LINE-CREATED
  IF #ISC LE 20
    IF #LAST-LINE-MM NE ' '
        AND (ENTRY-DATE-YYYY NE #LAST-LINE-YYYY)
* WRITE 'line 2730-SEP line "_ _ _ _"' ENTRY-DATE-YYYY #LAST-LINE-YYYY
      MOVE ALL '-' TO #SCR-LINE (#ISC)
      ADD 1 TO #ISC
      MOVE TRUE TO #SEP-LINE-CREATED
    ELSE
      IF #LAST-LINE-DD NE ' '
          AND (ENTRY-DATE-MM NE #LAST-LINE-MM)
* WRITE 'line 2730-SEP line "BLNK"' ENTRY-DATE-MM #LAST-LINE-MM
        ADD 1 TO #ISC
        MOVE TRUE TO #SEP-LINE-CREATED
      END-IF
    END-IF
  END-IF
*
  IF   (#ISC GT 20)
      OR (#SHOW-PENDING-ACTIONS AND #ISC GT 19)
    INPUT TEXT 'PRESS ENTER FOR ADDITIONAL ENTRIES'
      MARK *#SCR-SELECT-CMND (1)  USING MAP 'G4401MPD'
*
    RESET #SEP-LINE-CREATED
    RESET #LAST-LINE-MM    /* TO KEEP ****** FROM TOP OF PAGE
    RESET #LAST-LINE-DD    /* TO KEEP ****** FROM TOP OF PAGE
    MOVE 1 TO #ISC
*
    IF #CGA-SCR-COMMAND = MASK ('-')    /* INDICATES TO GO TO PRIOR SCN
      RESET #SCR-LINE (*)
      MOVE (AD=P) TO #SCR-SELECT-CMND-CV (*)
      MOVE 0 TO #ISC
      ESCAPE ROUTINE
    END-IF
*
    IF #CGA-SCR-COMMAND NE '*'
      FETCH 'G1000PXX'
    END-IF
*
    PERFORM CHK-CMND-SELECT
    RESET #SCR-LINE (*)
    MOVE (AD=P) TO #SCR-SELECT-CMND-CV (*)
  END-IF
*
  IF #ISC = 1
      AND NOT #REPEAT-1ST-LINE
    ADD 1 TO #IPG
    MOVE ENTRY-DATE TO #1ST-DATE-TBL (#IPG)
    MOVE *ISN       TO #1ST-ISN-TBL (#IPG)
  END-IF
*
  MOVE *ISN TO #SCR-ISN (#ISC)   /* STORE ISN OF MTD REC
* IF #CGA-CLERK = 'DRW' OR = 'TDM' OR = 'PAM'
*   WRITE 'JUST B4 GET ABEND - REC-ISN' ISSUE-DATE
*   IF ISSUE-DATE = 0
*    OR (ISSUE-DATE = 3154)   /* ISN OF BENE REC
*     DELETE (0516)
*     WRITE 'DELETED REC FOR ISN=' ISSUE-DATE
*     ESCAPE TOP
*   END-IF
* END-IF
  END TRANSACTION
* GET ST-V ISSUE-DATE     /* ISSUE-DATE USED FOR ISN OF STATUS RECORD
  MOVE MBRSHIP-MTD-DET-V.ID-NUMBER TO #ID
*  IF CODE = 'B'                                         NG4 Start
*    COMPUTE #ID = MBRSHIP-MTD-DET-V.ID-NUMBER - 200000
*  END-IF
*                                                        NG4 End
  RESET #NOT-FND
  FIND ST-V WITH MEMBER-KEY = #ID-A
    IF NO RECORDS FOUND
      FIND ST-V WITH WIDOW-KEY = #ID-A
        IF NO RECORDS FOUND
          MOVE TRUE TO #NOT-FND
        END-NOREC
      END-FIND
    END-NOREC
  END-FIND
*
  IF #NOT-FND
    PERFORM RESET-LINE                    /* DW2
* WRITE 'LINE 3110' 'ST Not Found for' #ID
    ESCAPE TOP
  END-IF
  ADD 1 TO #DET-CNT                               /* DW1
*
  IF CODE = 'C'
*   GET CL-V REC-ISN
    RESET #NOT-FND
    FIND CL-V WITH ID-NUMBER = MBRSHIP-MTD-DET-V.ID-NUMBER
      IF NO RECORDS FOUND
        MOVE TRUE TO #NOT-FND
      END-NOREC
    END-FIND
*
    IF #NOT-FND
      PERFORM RESET-LINE                    /* DW2
* WRITE 'LINE 3190' 'CL Not Found for' MBRSHIP-MTD-DET-V.ID-NUMBER
      ESCAPE TOP
    END-IF
*
  ELSE
    IF CODE = 'B' OR = 'S'
*     IF #CGA-CLERK = 'DRW' OR = 'TDM'
*       WRITE 'JUST B4 GET ABEND CN' ST-V.ID-NUMBER 'REC-ISN' REC-ISN
*       IF   (#CGA-CLERK = 'DRW' OR = 'TDM')
*        AND (REC-ISN = 18732)
*         DELETE (0516)
*         END TRANSACTION
*         WRITE 'DELETED REC FOR ISN=' REC-ISN
*         ESCAPE TOP
*       END-IF
*     END-IF
*     GET NT-V REC-ISN
      RESET #NOT-FND
      FIND NT-V WITH ID-NUMBER = MBRSHIP-MTD-DET-V.ID-NUMBER     /* NG1
        IF NO RECORDS FOUND
          MOVE TRUE TO #NOT-FND
        END-NOREC
      END-FIND
*
      IF #NOT-FND
        PERFORM RESET-LINE                    /* DW2
*  WRITE 'LINE 3320' 'NT Not Found for' MBRSHIP-MTD-DET-V.ID-NUMBER
        ESCAPE TOP
      END-IF
    ELSE
*     GET FR-V REC-ISN
      RESET #NOT-FND
      FIND FR-V WITH MEMBER-KEY = MBRSHIP-MTD-DET-V.ID-NUMBER-A
        IF NO RECORDS FOUND
          FIND ST-V WITH WIDOW-KEY = MBRSHIP-MTD-DET-V.ID-NUMBER-A
            IF NO RECORDS FOUND
              MOVE TRUE TO #NOT-FND
            END-NOREC
          END-FIND
        END-NOREC
      END-FIND
*
      IF #NOT-FND
        PERFORM RESET-LINE                    /* DW2
*  WRITE 'LINE 3410' 'FR Not Found for' MBRSHIP-MTD-DET-V.ID-NUMBER
        ESCAPE TOP
      END-IF
    END-IF
  END-IF
*
  MOVE #ISC TO #ISC-X
  MOVE ST-V.ID-NUMBER TO #SCR-ID (#ISC)
  COMPRESS ENTRY-DATE-MM '-' ENTRY-DATE-DD '-' ENTRY-DATE-YYYY
    INTO #SCR-ENTRY-DATE (#ISC) LEAVING NO
*
  IF CODE = 'B' OR = 'S'
    SEPARATE NAME INTO #LAST #FIRST/MID #SUFF #NAME-OVRFLO
      WITH DELIMITER ','
  ELSE
    SEPARATE NAME-SP INTO #LAST #FIRST/MID #SUFF #NAME-OVRFLO
      WITH DELIMITER ','
  END-IF
*
  COMPRESS #FIRST/MID #LAST #SUFF-R INTO #SCR-NAME (#ISC)
  COMPRESS DATE-OF-DEATH-MM '-' DATE-OF-DEATH-DD '-' DATE-OF-DEATH-YYYY
    INTO #SCR-DOD-DT (#ISC) LEAVING NO
*
  IF CODE = 'C'
    MOVE 'CLAIM  ' TO #SCR-CODE (#ISC)
    RESET #CURR-CLMS
    FOR #I1 1 TO 30
      IF   (DATE-FILED   (#I1) = ENTRY-DATE)
          AND (DATE-SETTLED (#I1) = 0)
          AND (NOT (STATUS  (#I1) = 'G' OR = 'D'))
        ADD 1 TO #CURR-CLMS
        IF   (DATE-FILED (#I1) = #LAST-CLM-DATE-FILED)
            AND (ST-V.ID-NUMBER   = #LAST-CLM-ID-NUMBER)
          IF #CURR-CLMS LE #NUM-EQ-CLMS
            ESCAPE TOP
          END-IF
        ELSE
          RESET #NUM-EQ-CLMS
          RESET #LAST-CLM-DATE-FILED
          RESET #LAST-CLM-ID-NUMBER
        END-IF
*
        ADD 1 TO #NUM-EQ-CLMS
        MOVE DATE-FILED (#I1) TO #LAST-CLM-DATE-FILED
        MOVE ST-V.ID-NUMBER   TO #LAST-CLM-ID-NUMBER
        MOVE LETTER (#I1)     TO #SCR-POL-LTR (#ISC)
        MOVE STATUS (#I1)     TO #SCR-STATUS  (#ISC)
*
        IF   (#UNSETTLED-VA-CLMS = ' ')    /* DO NOT WANT VA CLMS
            AND ((LETTER (#I1) = MASK ('VA'))
            OR  (LETTER (#I1) = MASK ('*VA')))
          MOVE TRUE TO #BYPASS-REC
        ELSE
          IF   (#UNSETTLED-NON-VA-CLMS = ' ') /* DONT WANT NON-VA CLMS
              AND (LETTER (#I1) NE MASK ('VA'))
              AND (LETTER (#I1) NE MASK ('*VA'))
            MOVE TRUE TO #BYPASS-REC
          END-IF
        END-IF
*
        ESCAPE BOTTOM
      END-IF
    END-FOR
  ELSE
    IF CODE = 'P' OR = 'A'
      if   (code = 'A')                           /* DW5
          and #check-pd
        reset #SCR-SELECT-CMND (#Isc)
        move mbrship-mtd-det-v.id-number-a to #CGA-id-g
        perform pending-cn
        if not #has-pending-a    /* Has no unsettled AAFMAA pols
*          write MBRSHIP-MTD-DET-V.id-number 'Has no Unsettled pols' '#isc=' #isc
          move 'No Unsettled pols' to #scr-pol-ltr (#isc)
          MOVE 'D*' TO #SCR-SELECT-CMND(#Isc)  /* To delete this record
        end-if                                     /* DW5
      end-if
*
      MOVE 'POLICY ' TO #SCR-CODE (#ISC)
      RESET #CURR-POLS
      FOR #I1 1 TO 45
        if #check-pd                    /* DW5
          escape bottom
        end-if
*
        IF   (POL-DATE-CLM-FILED   (#I1) = ENTRY-DATE)
            AND (POL-DATE-CLM-SETTLED (#I1) = 0)
          ADD 1 TO #CURR-POLS
          IF POL-DATE-CLM-FILED (#I1) = #LAST-POL-DATE-FILED
              AND (ST-V.ID-NUMBER        = #LAST-POL-ID-NUMBER)
            IF #CURR-POLS LE #NUM-EQ-POLS
              ESCAPE TOP
            END-IF
          ELSE
            RESET #NUM-EQ-POLS
            RESET #LAST-POL-DATE-FILED
            RESET #LAST-POL-ID-NUMBER
          END-IF
*
          ADD 1 TO #NUM-EQ-POLS
          MOVE POL-DATE-CLM-FILED (#I1) TO #LAST-POL-DATE-FILED
          MOVE ST-V.ID-NUMBER           TO #LAST-POL-ID-NUMBER
*          MOVE POL-NAME (#I1) TO #SCR-POL-LTR (#ISC)
          reset #scr-pol-ltr (#isc)
          if (issue-date gt 0) and (issue-date le 9) /* Segment #    DW3
            move issue-date to #seg-i
            callnat 'GPLNMSXX' #pol-num st-v.id-number #seg-i   /* Get POl #
            move #pol-num to #scr-pol-ltr (#isc)
            MOVE PLAN(#SEG-I) TO #SCR-PLAN (#ISC)                                 /* VT1
          end-if
*
          if (issue-date gt 0) and (issue-date le 9) /* Segment #
            move issue-date to #seg-i
          else
            reset #seg-i  /* To check all policies
          end-if
*
          callnat 'GCONTSXX' MBRSHIP-MTD-DET-V.id-number #seg-i /* Get
            #has-contestability #no-longer-contestable
            #CONTESTABLE-BUT-PAID  /* DW4  DW6
          if #has-contestability
            move 'C' to #SCR-STATUS (#isc)
          end-if                                            /* END DW3
*
          ESCAPE BOTTOM
        END-IF
      END-FOR
    ELSE
      IF CODE = 'L'
        MOVE 'LETTER' TO #SCR-CODE (#ISC)
      ELSE
        IF CODE = 'B'
          RESET #SCR-H-DOD-ISS-DT
          PERFORM FORMAT-BENE-LINE
        ELSE
          IF CODE = 'S'
            PERFORM CHK-PENDING-USER
*
            IF NOT  #BYPASS-REC
              MOVE '  TYPE' TO #SCR-H-CODE
              MOVE 'USER' TO #SCR-H-LETR/POL
              RESET            #SCR-H-DOD-ISS-DT
              RESET            #SCR-H-STATUS
              MOVE '  NOTE'  TO #SCR-CODE (#ISC)
              MOVE 'PENDING' TO #SCR-DOD-DT (#ISC)
              MOVE USER      TO #SCR-POL-LTR-X (#ISC, 1)
              MOVE RIGHT MBRSHIP-MTD-DET-V.USER-COMPANY TO #SCR-POL-LTR-X (#ISC, 2)   /* RE1
*
              FOR #I1 1 TO 40
                IF   (NT-V.NOTE-TEXT (#I1) = MASK ('*@'))
                    AND (NT-V.NOTE-CLERK-ID (#I1) = USER)
                  MOVE NOTE-TEXT-PAC-DT-YYYY (#I1) TO #YYYY
                  MOVE NOTE-TEXT-PAC-DT-MM (#I1) TO #MM
                  MOVE NOTE-TEXT-PAC-DT-DD (#I1) TO #DD
*
                  IF #YYYYMMDD = ENTRY-DATE
                    IF #ISC LT 20
                      ADD 1 TO #ISC
                      MOVE NOTE-TEXT-PAC-FL-1 (#I1)
                        TO #SCR-LINE-FILL-70 (#ISC)
                    END-IF
                  END-IF
                END-IF
              END-FOR
            END-IF
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
*
  IF #BYPASS-REC
    IF #ISC = 1
      MOVE TRUE TO #REPEAT-1ST-LINE
    END-IF
*
    RESET #SCR-LINE (#ISC)
    SUBTRACT 1 FROM #ISC
*
    IF #SEP-LINE-CREATED
      RESET #SCR-LINE (#ISC)
      SUBTRACT 1 FROM #ISC
    END-IF
*
    END TRANSACTION
    ESCAPE TOP
  ELSE
    RESET #SCR-SELECT-CMND-CV (#ISC-X)
  END-IF
*
  RESET #REPEAT-1ST-LINE
  MOVE ENTRY-DATE-YYYY TO #LAST-LINE-YYYY
  MOVE ENTRY-DATE-MM TO #LAST-LINE-MM
  MOVE ENTRY-DATE-DD TO #LAST-LINE-DD
END-READ
*
IF #SUMMARY-BY-DAY
  IF #ISC = 0
    MOVE 'No Entries for this selection' TO #SCR-MSG
    MOVE 'PD' TO #CGA-SCR-COMMAND
  ELSE
    MOVE '*' TO #CGA-SCR-COMMAND
    MOVE 'Enter "X" in desired date to start display' TO #SCR-MSG
  END-IF
*
  INPUT TEXT #SCR-MSG MARK *#SCR-SUMMARY-SEL-1 (1)
    USING MAP 'G4405MPD'
*
  IF #CGA-SCR-COMMAND NE '*'
    FETCH 'G1000PXX'
  END-IF
ELSE
  MOVE #CGA-ORIG-COMMAND TO #CGA-SCR-COMMAND
  MOVE #CGA-ORIG-ID      TO #CGA-SCR-ID
  MOVE #CGA-ORIG-SUFFIX  TO #CGA-SCR-SUFFIX
*
  INPUT MARK *#SCR-SELECT-CMND (1)   USING MAP 'G4401MPD'
*
  IF #CGA-SCR-COMMAND = MASK ('-')    /* INDICATES TO GO TO PRIOR SCN
    RESET #LAST-LINE-MM    /* TO KEEP ****** FROM TOP OF PAGE
    RESET #SCR-LINE (*)
    MOVE 0 TO #ISC
  ELSE
    PERFORM CHK-CMND-SELECT
  END-IF
END-IF
*
END-SUBROUTINE /* (0510)
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHK-PENDING-USER
* * * * * * * * * * * * * * * * * *
*
IF   (#PENDING-ACTIONS-USER NE ' ')
    AND (USER NE #PENDING-ACT-USER)
  MOVE TRUE TO #BYPASS-REC
END-IF
*
IF   (#PENDING-ACTIONS-WID NE ' ')
    AND (NOT USER = 'EMD' OR = 'SPM'  OR = 'PAM ')
  MOVE TRUE TO #BYPASS-REC
END-IF
*
IF   (#PENDING-ACTIONS-MBRSV NE ' ')   /* mbr service
    AND (NOT USER = 'JAP' OR = 'LCM' OR = 'DJK' OR = 'WDS'
    OR = 'KRM' OR = 'NLD' OR = 'JHS' OR = 'GAP' OR = 'CAM')
  MOVE TRUE TO #BYPASS-REC
END-IF
*
IF   (#PENDING-ACTIONS-MBRSH NE ' ')    /* membership
    AND (NOT USER = 'ESM' OR = 'EAC' OR = 'HLM' OR = 'TCB'
    OR = 'DGG'  OR = 'SKH')
  MOVE TRUE TO #BYPASS-REC
END-IF
*
IF   (#PENDING-ACTIONS-MBRAC NE ' ')     /* member accounts
    AND (NOT USER  = 'TMW' OR = 'ELB' OR = 'EJM' OR = 'EWD'  /* vt removed 'MBW'
    OR = 'NAA')
  MOVE TRUE TO #BYPASS-REC
END-IF
*
IF #PENDING-ACTIONS-EDS NE ' '
  IF USER NE  'EDS'
    MOVE TRUE TO #BYPASS-REC
  END-IF
ELSE
  IF USER = 'EDS'
    MOVE TRUE TO #BYPASS-REC
  END-IF
END-IF
*
END-SUBROUTINE /* (0956)
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE PENDING-CN
* * * * * * * * * * * * * *
*
FIND (1) ST-V WITH WIDOW-KEY = #CGA-ID-G
END-FIND
*
reset #has-pending-a                             /* DW5
move #isc to #hold-isc                           /* DW5
RESET #FOUND-PD
RESET #ISC
FIND (1) FR-V WITH WIDOW-KEY = #CGA-ID-G
  FOR #I1 1 TO 45
    IF   (FR-V.POL-DATE-CLM-FILED   (#I1) NE 0)
        AND (FR-V.POL-DATE-CLM-SETTLED (#I1) = 0)
      MOVE TRUE TO #FOUND-PD
      move true to #has-pending-a     /* Has an unsettled AAFMAA policy  /* DW5
*
      if #check-pd                     /* DW5
        escape top
      end-if
*
      ADD 1 TO #ISC
      MOVE ST-V.ID-NUMBER                TO #SCR-ID         (#ISC)
      SEPARATE ST-V.NAME-SP
        INTO #LAST #FIRST/MID #SUFF #NAME-OVRFLO WITH DELIMITER ','
      COMPRESS #FIRST/MID #LAST #SUFF-R INTO #SCR-NAME (#ISC)
      MOVE 'POLICY'                      TO #SCR-CODE       (#ISC)
      MOVE FR-V.POL-DATE-CLM-FILED (#I1) TO #YYYYMMDD
      COMPRESS #MM-A #DD-A #YYYY-A INTO #SCR-ENTRY-DATE (#ISC) WITH '-'
      MOVE FR-V.POL-NAME (#I1)           TO #SCR-POL-LTR    (#ISC)
*
      if fr-v.pol-name (#i1) = 'AMAA' or = 'AAFMAA'               /* DW3
*
* YK1   
        FOR #I2 = 1 TO C*ACTIVE-SEGMENTS 
          IF ST-V.ISSUE-DATE(#I2) = FR-V.POL-DATE(#I1) AND ST-V.PLAN(#I2) = FR-V.POL-TYPE(#I1)
            AND ST-V.FACE-AMOUNT(#I2) = FR-V.POL-AMOUNT(#I1)
            #SEG-I := #I2
            ESCAPE BOTTOM
          END-IF
        END-FOR
* YK1        
*        if (#i1 gt 0) and (#i1 le 9) /* Segment #    DW3     /* YK1
*         move #i1 to #seg-i                                  /* YK1 
          callnat 'GPLNMSXX' #pol-num st-v.id-number #seg-i   /* Get POl #
          move #pol-num to #scr-pol-ltr (#isc)
*
          callnat 'GCONTSXX' st-v.id-number #seg-i /* Get
            #has-contestability #no-longer-contestable
            #CONTESTABLE-BUT-PAID          /* DW6
          if #has-contestability
            move 'C' to #SCR-STATUS (#isc)
          end-if
*        end-if
      end-if
*
      COMPRESS ST-V.DATE-OF-DEATH-MM ST-V.DATE-OF-DEATH-DD
        ST-V.DATE-OF-DEATH-YYYY INTO #SCR-DOD-DT (#ISC) WITH '-'
    END-IF
  END-FOR
END-FIND
*
if #check-pd                     /* DW5
  move #hold-isc to #isc
  escape routine
end-if
*
FIND (1) CL-V WITH ID-NUMBER = #CGA-SCR-ID
  FOR #I1 1 TO 30
    IF   (DATE-FILED   (#I1) NE 0)
        AND (DATE-SETTLED (#I1) = 0)
        AND (NOT (STATUS  (#I1) = 'G' OR = 'D'))
      MOVE TRUE TO #FOUND-PD
      ADD 1 TO #ISC
      MOVE ST-V.ID-NUMBER   TO #SCR-ID      (#ISC)
      MOVE DATE-FILED (#I1) TO #YYYYMMDD
      COMPRESS #MM-A #DD-A #YYYY-A INTO #SCR-ENTRY-DATE (#ISC) WITH '-'
      SEPARATE ST-V.NAME-SP
        INTO #LAST #FIRST/MID #SUFF #NAME-OVRFLO WITH DELIMITER ','
      COMPRESS #FIRST/MID #LAST #SUFF-R INTO #SCR-NAME (#ISC)
      MOVE 'CLAIM'          TO #SCR-CODE (#ISC)
      MOVE LETTER (#I1)     TO #SCR-POL-LTR (#ISC)
      MOVE STATUS (#I1)     TO #SCR-STATUS  (#ISC)
      COMPRESS ST-V.DATE-OF-DEATH-MM ST-V.DATE-OF-DEATH-DD
        ST-V.DATE-OF-DEATH-YYYY INTO #SCR-DOD-DT (#ISC) WITH '-'
    END-IF
  END-FOR
END-FIND
*
**COMPUTE #NT-ID = #CGA-ID + 200000   NG1
FIND (1) BENE-D-V WITH ID-NUMBER = #CGA-ID   /* NG1
  MOVE TRUE TO #FOUND-PD
  ADD 1 TO #ISC
*
  FOR #I1 1 TO 6
    IF BENE-D-V.BENE-STATUS (#I1) = 'P'
      MOVE BENE-D-V.BENE-LST-UPD (#I1) TO #YYYYMMDD
      COMPRESS #MM-A #DD-A #YYYY-A INTO #SCR-ENTRY-DATE (#ISC) WITH '-'
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  FIND (1) ST-V WITH MEMBER-KEY = #CGA-ID-G
    MOVE ST-V.ID-NUMBER TO #SCR-ID (#ISC)
    SEPARATE ST-V.NAME
      INTO #LAST #FIRST/MID #SUFF #NAME-OVRFLO WITH DELIMITER ','
    COMPRESS #FIRST/MID #LAST #SUFF-R INTO #SCR-NAME (#ISC)
  END-FIND
*
  PERFORM FORMAT-BENE-LINE
END-FIND
*
FIND (1) NT-V WITH ID-NUMBER = #CGA-ID
  FOR #I1 1 TO 40
    IF NOTE-TEXT (#I1) = MASK ('*@')
      ADD 1 TO #ISC
      MOVE TRUE TO #FOUND-PD
      MOVE NOTE-TEXT-PAC-DT (#I1) TO #SCR-ENTRY-DATE (#ISC)
      MOVE '  TYPE' TO #SCR-H-CODE
      MOVE 'USER' TO #SCR-H-LETR/POL
      RESET            #SCR-H-DOD-ISS-DT
      RESET            #SCR-H-STATUS
      MOVE '  NOTE' TO #SCR-CODE (#ISC)
      MOVE 'PENDING' TO #SCR-DOD-DT (#ISC)
*      MOVE NOTE-CLERK-ID (#I1) TO #SCR-POL-LTR (#ISC)                 /* RE1
      COMPRESS FULL NOTE-CLERK-ID (#I1) '   ' NT-V.USER-COMPANY(#I1)   /* RE1
        INTO #SCR-POL-LTR (#ISC)                                       /* RE1
*
      FIND (1) ST-V WITH MEMBER-KEY = #CGA-ID-G
        MOVE ST-V.ID-NUMBER TO #SCR-ID (#ISC)
        SEPARATE ST-V.NAME
          INTO #LAST #FIRST/MID #SUFF #NAME-OVRFLO WITH DELIMITER ','
        COMPRESS #FIRST/MID #LAST #SUFF-R INTO #SCR-NAME (#ISC)
      END-FIND
    END-IF
  END-FOR
END-FIND
*
ADD 1 TO #ISC
FOR #I1 #ISC TO 20
  MOVE (AD=P) TO #SCR-SELECT-CMND-CV (#I1)
END-FOR
*
IF NOT #FOUND-PD
  MOVE 'NO PENDING INFO FOUND' TO #SCR-MSG
END-IF
*
INPUT TEXT #SCR-MSG USING MAP 'G4401MPD'
PERFORM CHK-CMND-SELECT
*
FETCH 'G1000PXX'
*
END-SUBROUTINE /* (1000)
*
* * ** * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FORMAT-BENE-LINE
* * ** * * * * * * * * * * * * * * * *
MOVE 'BEN-CG' TO #SCR-CODE (#ISC)
RESET #SCR-H-STATUS
MOVE 'STATUS' TO #SCR-H-LETR/POL
*
RESET #NUM-DESIG #PEND-X
FOR #I1 1 TO 6
  IF BENE-D-V.BENE-ISS-DT (#I1, 1) NE 0
    ADD 1 TO #NUM-DESIG
  END-IF
*
  IF BENE-D-V.BENE-STATUS (#I1) = 'P'
    MOVE #I1 TO #PEND-X
  END-IF
END-FOR
*
IF #PEND-X = 0
  MOVE 1 TO #PEND-X
END-IF
*
MOVE EDITED #NUM-DESIG (EM=9) TO #SCR-STATUS (#ISC)
* IF #CGA-CLERK = 'DRW' AND (#PEND-X = 0)
*   WRITE 'LINE 4860 - JUST BEFORE ABEND' NT-V.ID-NUMBER
*         #ISC 'ISN=' REC-ISN 'PEND-X =' #PEND-X
*   ESCAPE TOP
* END-IF
COMPRESS 'TYP =' BENE-D-V.BENE-TYPE (#PEND-X, 1) INTO #SCR-DOD-DT (#ISC)
*
MOVE 'PENDING' TO #SCR-POL-LTR (#ISC)
ESCAPE ROUTINE
*
IF BENE-D-V.BENE-FOL-UP-IND (#PEND-X) = 0
  MOVE 'Pending' TO #SCR-POL-LTR (#ISC)
ELSE
*  COMPUTE #FINAL-BENE-NT-REC-NUM =  NT-V.ID-NUMBER + 200000   NG1
  COMPUTE #FINAL-BENE-NT-REC-NUM =  #CGA-ID
  FIND (1) BENE-F-V WITH ID-NUMBER = #FINAL-BENE-NT-REC-NUM
    IF NO RECORDS FOUND
      ESCAPE BOTTOM
    END-NOREC
*
    FOR #I1 1 TO 6    /* 6 POSSIBLE BENES ON FINALIZED
      IF BENE-F-V.BENE-ISS-DT (#I1, 1) = 0
        ESCAPE TOP
      END-IF
*
      FOR #I2 1 TO 7    /* 7 POSSIBLE POLS ON EACH BENE
        IF BENE-D-V.BENE-ISS-DT (#PEND-X, 1)
            = BENE-F-V.BENE-ISS-DT (#I1, #I2)
          MOVE '*' TO #SCR-POL-LTR (#ISC)
          ESCAPE BOTTOM
        END-IF
      END-FOR
    END-FOR
  END-FIND
*
  IF BENE-D-V.BENE-FOL-UP-IND (#PEND-X) = 1
    COMPRESS '30-day REM sent' #SCR-POL-LTR (#ISC)
      INTO #SCR-POL-LTR (#ISC)
  ELSE
    COMPRESS '60-day REM sent' #SCR-POL-LTR (#ISC)
      INTO #SCR-POL-LTR (#ISC)
  END-IF
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHK-CMND-SELECT
* * * * * * * * * * * * * * * * * * * *
*
FOR #I1 1 TO 20
  IF #SCR-SELECT-CMND (#I1) NE ' '
    IF (#CGA-CLERK = 'DRW' OR = 'TDM') AND (#SCR-SELECT-CMND(#I1) = 'D*')
        and (#SCR-ISN (#I1) ne 0)                        /* DW5
      GET MBRSHIP-MTD-DET-V #SCR-ISN (#I1)
      WRITE 'PD PENDING REC WILL BE DELETED FOR CN' #SCR-ID (#I1)
      WRITE 'WITH NAME OF' #SCR-NAME (#I1)
      WRITE 'PRESS ENTER TO PROCESS'
      RESET #SCR-SELECT-CMND (#I1)
      DELETE (1231)
      END TRANSACTION
      ESCAPE TOP
    END-IF
*
    IF #SCR-SELECT-CMND (#I1) = 'X'
      DECIDE ON FIRST #SCR-CODE (#I1)
        VALUE 'CLAIM ' MOVE 'DF' TO #CGA-SCR-COMMAND
        VALUE 'POLICY' MOVE 'DP' TO #CGA-SCR-COMMAND
        VALUE 'BEN-CG' MOVE 'BD' TO #CGA-SCR-COMMAND
        VALUE '  NOTE' MOVE 'NS' TO #CGA-SCR-COMMAND
        NONE           MOVE 'DI' TO #CGA-SCR-COMMAND
      END-DECIDE
    ELSE
      MOVE #SCR-SELECT-CMND (#I1) TO #CGA-SCR-COMMAND
    END-IF
*
    MOVE #SCR-ID (#I1) TO #CGA-SCR-ID
    if #SCR-SELECT-CMND (#i1) ne 'D*'    /* DW5
      FETCH 'G1000PXX'
    end-if
  END-IF
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE RESET-LINE      /* DW2
* * * * * * * * * * * * * * *
*
SUBTRACT 1 FROM #ISC
MOVE TRUE TO #REPEAT-1ST-LINE
MOVE ENTRY-DATE-YYYY TO #LAST-LINE-YYYY
MOVE ENTRY-DATE-MM TO #LAST-LINE-MM
MOVE ENTRY-DATE-DD TO #LAST-LINE-DD
*
END-SUBROUTINE
*
END
