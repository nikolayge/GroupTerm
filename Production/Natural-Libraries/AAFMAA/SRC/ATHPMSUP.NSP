* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPMSUP    - UPDATE 'MS' FILE WITH MISC TOTALS
* prints undeliverable letters
* prints rank summarization report
* prints awaiting allotments starts/FPF Reports
*********************************** H O W   T O T A L   S T A T S
*
* ATHPM120 --- deceased/inactive/active --- on MS (mbr svc stats)
* ATHP05PC --- total widows --- on MS (mbr svc stats)
* ATHPMSUP --- widow breakout(w spouse/w fmr sps/with depn/none of
*              above) --- on MS (widow stats)
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* PAM  03112005 PM1  Reset display fields for GRANKSXX                 *
* DRW  06082005 DW2  Make SVC-CON 'C' be combat-related                *
* SAG  11292005 RH1  SS - Modified the custom coded ON ERROR stmt &    *
*                    replaced it with copycode GABNDCX3                *
* DRW  09022006 DW3  ADD ADDR-CHG-CODE TO TRLOG SYNC FIELD CHGES       *
* RSE  09292009 RE1  Change PROCESS-IND logic for Unification          *
* YAK  05052010 YK1  Remove ADDRESS-CHG-CODE update from this process  *
* JNT  09202013 JT1  Address normalization                             *
************************************************************************
*
DEFINE DATA
LOCAL USING ADDA0001                        /* JT1
LOCAL  USING ATHLMSUP
LOCAL  USING GONERLXX                       /* SAG RH1 11292005 SS
LOCAL
1 #RUN-DATE-1-YR-AGO  (N8)
1 REDEFINE #RUN-DATE-1-YR-AGO
 2 #RD-1-YR-AGO-YYYY  (N4)
 2 #RD-1-YR-AGO-MM    (N2)
 2 #RD-1-YR-AGO-DD    (N2)
*
1 #RUN-DATE-1-MON-AGO  (N8)
1 REDEFINE #RUN-DATE-1-MON-AGO
 2 #RD-1-MON-AGO-YYYY  (N4)
 2 #RD-1-MON-AGO-MM    (N2)
 2 #RD-1-MON-AGO-DD    (N2)
*
1 #RUN-DATE-3-MON-AGO  (N8)
1 REDEFINE #RUN-DATE-3-MON-AGO
 2 #RD-3-MON-AGO-YYYY  (N4)
 2 #RD-3-MON-AGO-MM    (N2)
 2 #RD-3-MON-AGO-DD    (N2)
*
1 #FORMAT-CN      (A8)
*
1 #RANK-TO-USE   (A3)
1 #RANK-TBL
 2 #R-1 (A48) INIT <'GA -GEN-LTG-MG -BG -COL-LTC-MAJ-CPT-1LT-2LT-CDT-'>
 2 #R-2 (A48) INIT <'O3E-O2E-O1E-CW5-MW4-CW4-CW3-CW2-WO1-SMA-CAF-CSM-'>
 2 #R-3 (A48) INIT <'SGM-CMS-1SG-MSG-SMS-PSG-SFC-SSG-TSG-SGT-CPL-SPC-'>
 2 #R-4 (A48) INIT <'SRA-PFC-A1C-PV2-AMN-PV1-AB -DR -MR -MRS-MS -REV-'>
1 REDEFINE #RANK-TBL
 2 #RANK-OCC (48)
  3 #RANKK       (A3)
  3 #FILL-RANK (A1)
*
1 #RANK-STATS-ACT    (51)
 2 #RANK-CNT-ACT    (P5/3)     /* army/airf/other
*
1 #RANK-STATS-RET    (51)
 2 #RANK-CNT-RET     (P5/3)
*
1 #RANK-STATS-CIV    (51)
 2 #RANK-CNT-CIV     (P5/3)
*
1 #RANK-STATS-TOT    (P5/51)
1 #ITR1    (I2)   /* DW3
1 #SFX     (I2)   /* DW3
*
1 NT-V VIEW OF A-NOTES
 2 ID-NUMBER     (N6)
 2 NOTE-TEXT     (A60/1)
 2 REDEFINE NOTE-TEXT
  3 NT-5-5-COI-SUBSIDY (N11.2)
  3 NT-5-5-DEATH-BENE  (N11.2)
  3 NT-PRE-VA-DB       (N11.2)
*
1 TR-V VIEW OF A-TRANSACTION-REGISTER   /* DW3
 2 ID-NUMBER         (N6)
 2 PROCESS-IND       (A1)
 2 NAME              (A25)
 2 DATE-LAST-UPDATE  (N8)
 2 TERMINAL-ID       (A8)
 2 CLERK-ID          (A3)
 2 TRANSACTION-DATN  (P9)
 2 TRANSACTION-TIMN  (P7)
 2 OLD-DATA          (A125/20)
 2 NEW-DATA          (A125/20)
 2 SYNC-FLD-NUM      (60)      /* DW19
 2 SYNC-FLD-OLD-DATA (60)
 2 SYNC-FLD-NEW-DATA (60)
*
1 #TR-REG-ADDR-CHG-CODE-CHG   /* DW3
 2 #TR-REG-LBL     (A26) INIT <'CG-M/E ADDR-CHG-CODE CHG  '>
 2 #TR-REG-ADDR-CHG-CODE (A2)
1 REDEFINE #TR-REG-ADDR-CHG-CODE-CHG
 2 #TR-REG-ADDR-CHG-CODE-AREA   (A28)
*
1 #JCL-PARM         (A32)
1 REDEFINE #JCL-PARM
 2 #PARM-DATE      (N8)
 2 REDEFINE #PARM-DATE
  3 #PARM-MM      (N2)
  3 #PARM-DD      (N2)
  3 #PARM-YYYY    (N4)
 2 REDEFINE #PARM-DATE
  3 #PARM-MM-A    (A2)
  3 #PARM-DD-A    (A2)
  3 #PARM-YYYY-A  (A4)
 2 REDEFINE #PARM-DATE
  3 #PARM-DATE-X  (A8)
 2 #P-INDICATORS   (A24)  /* REST OF PARM CARD
*
1 #C-RUN-DT-YYYYMMDD (N8)
1 REDEFINE #C-RUN-DT-YYYYMMDD
 2 #C-RUN-DT-YYYY    (N4)
 2 #C-RUN-DT-MM      (N2)
 2 #C-RUN-DT-DD      (N2)
*
1 #C-RUN-DT-YYYYMMDD-LM (N8)
1 REDEFINE #C-RUN-DT-YYYYMMDD-LM
 2 #C-RUN-DT-YYYY-LM (N4)
 2 #C-RUN-DT-MM-LM   (N2)
 2 #C-RUN-DT-DD-LM   (N2)
*
1 #POL-CODE   (A1)
1 #TOT-UNDELIV-ADDR  (P5)
*
1 #YYYYMMDD          (N8)
1 REDEFINE #YYYYMMDD
 2 #YYYY           (N4)
 2 #MM             (N2)
 2 #DD             (N2)
*
1 #YYYYMMDD-LOW      (N8)
1 REDEFINE #YYYYMMDD-LOW
 2 #YYYY-LOW       (N4)
 2 #MM-LOW         (N2)
 2 #DD-LOW         (N2)
*
1 #SPS-ONLY       (L)
1 #REVERSE-ENTRY-DATE-BEGIN (N8)
1 #REVERSE-ENTRY-DATE-END   (N8)
1 #STATS-REC-FOUND    (L)
1 #STATS-ISN          (P8)
1 #MBR-STATS-KEY      (N6)
1 REDEFINE #MBR-STATS-KEY
 2 #MBR-STATS-KEY-YYYY (N4)
 2 #MBR-STATS-KEY-MM   (N2)
*
1 #ABEND-CODE       (I4)
1 #I1               (I2)
1 #I2               (I2)
1 #I3               (I2)
1 #OLD-ISSUE-DB           (P11.2)
1 #BAD-MBR-BRTH-CERT-CODE (P5)
1 #BAD-SPS-BRTH-CERT-CODE (P5)
1 #BAD-MAR-CERT-CODE      (P5)
1 #BAD-DTH-CERT-CODE      (P5)
1 #BAD-DEP-BRTH-CERT-CODE (P5)
1 #BAD-SBP-OPTION         (P5)
1 #BAD-POL-CODE           (P5)
*
1 #FORMATED-NAME  (A45)
1 #FIRST-ADDRESS  (A25)
1 #SECOND-ADDRESS (A40)
1 #THIRD-ADDRESS  (A40)
1 #MIL-STATUS     (A1)
1 #MIL-SERVICE    (A3)
1 #RANK           (A3)
1 #FORMAT-MEMSHIP (A2)
1 #LAST-NAME    (A25)
1 #FIRST/MID    (A25)
1 #SUFFIX       (A25)
1 #EXTRA1      (A25)
1 #EXTRA2      (A25)
1 #HOLD-RANK       (A4)
1 #HOLD-ADDRESS-2  (A25)
1 #HOLD-ADDRESS-3  (A25)
1 #HOLD-ID-N      (N6)
1 REDEFINE #HOLD-ID-N
 2 #HOLD-ID-1 (A1)
 2 #HOLD-ID         (A5)
1 REDEFINE #HOLD-ID-N
 2 #HOLD-ID-A       (A6)
*
1 #HOLD-ZIP-CODE   (N10)
1 #HOLD-EDIT-ZIP   (A10)
1 REDEFINE #HOLD-EDIT-ZIP
 2 #HOLD-ZIP      (A5)
 2 #HOLD-ZIP2     (A5)
*
1 #HOLD-NAME       (A45)
1 #SPS-NAME    (A15)
*
1 #RANK-LITERAL (A23)
1 #DISPL        (P2)
1 #CMND         (A2)   INIT <'AD'>
1 #INVALID      (L)
1 #RANK-LIT     (A23)
1 #RANK-DISPLAY (A5)
1 #SBP-OPT      (A1)
*
END-DEFINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ON ERROR
*    WRITE   / 'PROGRAM = ATHPMSUP'                  /* SAG RH1 11292005 SS - BEGIN
*    WRITE   / '*E R R O R - N R    ' *ERROR-NR
*             / '*E R R O R - L I N E' *ERROR-LINE
*     WRITE   / ' FILLER'
*     WRITE   / ' FILLER'
*     WRITE   / ' FILLER'
*     MOVE +4095 TO #ABEND-CODE
*     CALL 'ABEND' USING #ABEND-CODE  /* USER 4095
INCLUDE GABNDCX3
STOP                                                 /* SAG RH1 11292005 SS - END
END-ERROR
*
READ WORK 1 ONCE RECORD #JCL-PARM   /* PROGRAM CALL
WRITE 'PARM 1 =' #JCL-PARM
READ WORK 1 ONCE RECORD #JCL-PARM   /* DATE ETC (110189123456789NAB ETC)
MOVE #PARM-MM TO #C-RUN-DT-MM
MOVE #PARM-DD TO #C-RUN-DT-DD
MOVE #PARM-YYYY TO #C-RUN-DT-YYYY
WRITE 'PARM 2 =' #JCL-PARM  'Run-date = ' #C-RUN-DT-YYYYMMDD
*
MOVE #C-RUN-DT-YYYYMMDD TO #RUN-DATE-1-YR-AGO
SUBTRACT 1 FROM #RD-1-YR-AGO-YYYY
*
MOVE #C-RUN-DT-YYYYMMDD TO #RUN-DATE-1-MON-AGO
SUBTRACT 1 FROM #RD-1-MON-AGO-MM
IF #RD-1-MON-AGO-MM LT 1
  ADD 12 TO #RD-1-MON-AGO-MM
  SUBTRACT 1 FROM #RD-1-MON-AGO-YYYY
END-IF
*
MOVE #C-RUN-DT-YYYYMMDD TO #RUN-DATE-3-MON-AGO
SUBTRACT 3 FROM #RD-3-MON-AGO-MM
IF #RD-3-MON-AGO-MM LT 1
  ADD 12 TO #RD-3-MON-AGO-MM
  SUBTRACT 1 FROM #RD-3-MON-AGO-YYYY
END-IF
*
FORMAT LS=133  PS=76
WRITE TITLE LEFT 'PROGRAM: ATHPMSUP'
             5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
MOVE #C-RUN-DT-YYYY TO #MBR-STATS-KEY-YYYY
MOVE #C-RUN-DT-MM   TO #MBR-STATS-KEY-MM
*
MOVE TRUE TO #STATS-REC-FOUND
*
WRITE 'STATS-KEY = ' #MBR-STATS-KEY
FIND (1) MBR-STATS-V WITH MONTH-KEY = #MBR-STATS-KEY
  IF NO RECORDS FOUND
    MOVE FALSE TO #STATS-REC-FOUND
    RESET MBR-STATS-V               /* CLEAR RECORD
*
    WRITE / 'MSG ATHPMSUP' /
    WRITE 'NEXT MONTHS "MS" RECORD DOES NOT EXIST - WILL BE CREATED'
  END-NOREC
*
  MOVE *ISN TO #STATS-ISN
*
END-FIND
*
IF #STATS-REC-FOUND
  GET MBR-STATS-V #STATS-ISN
  RESET TOT-MTD-WIDOW-DEATHS
  RESET TOT-ACV
  RESET TOT-CASH-VALUE
  RESET TOT-MIN-CASH-VALUE
  RESET MBR-BRTH-CERT-COUNTS (*)
  RESET SPS-BRTH-CERT-COUNTS (*)
  RESET MAR-CERT-COUNTS (*)
  RESET DEP-BRTH-CERT-COUNTS (*)
  RESET DTH-CERT-COUNTS (*)
  RESET INACT-DEAD-CERT-COUNTS (*)
  RESET INS-POL-CODE-COUNTS (*)
  RESET INACT-DEAD-INS-POL-CODE-COUNTS (*)
  RESET SBP-OPT-COUNTS (*)
  RESET WID-WITH-RSFPP
  RESET WID-WITH-CS-ANN
  RESET WID-WITH-CIVIL-ANN
  RESET WID-WITH-VA-DIC
  RESET WID-WITH-SERV-CONN
  RESET WID-WITH-CIVIL-PENSION
  RESET WID-WITH-CS-PENSION
  RESET WID-WITH-MIL-SBP-AMT
  RESET WID-WITH-SPS
  RESET WID-WITH-FMR-SPS
  RESET WID-WITH-DEPN
  RESET WID-WITH-NONE
  RESET WID-DECEASED
  RESET TOT-COI-SUBSIDY-5-5
  RESET TOT-DEATH-BENEFIT-5-5
END-IF
*
MOVE #MBR-STATS-KEY         TO MBR-STATS-V.MONTH-KEY
*
* * * * * * COUNT WIDOW DEATHS * * * * * * *
*
MOVE #C-RUN-DT-YYYYMMDD TO #C-RUN-DT-YYYYMMDD-LM
*
IF #C-RUN-DT-MM = 01
  MOVE 12    TO   #C-RUN-DT-MM-LM
  SUBTRACT 1 FROM #C-RUN-DT-YYYY-LM
ELSE
  SUBTRACT 100 FROM #C-RUN-DT-YYYYMMDD-LM
END-IF
*
COMPUTE #REVERSE-ENTRY-DATE-BEGIN = 99999999 - #C-RUN-DT-YYYYMMDD
COMPUTE #REVERSE-ENTRY-DATE-END   = 99999999 - #C-RUN-DT-YYYYMMDD-LM
*
WRITE 'rev dts' #REVERSE-ENTRY-DATE-BEGIN #REVERSE-ENTRY-DATE-END
READ MBRSHIP-MTD-DET-V BY ENTRY-DATE FROM #REVERSE-ENTRY-DATE-BEGIN
                                     THRU #REVERSE-ENTRY-DATE-END
  IF (CODE = 'W') AND (ISSUE-DATE NE 88888888) /* 8"s ind mbr's sps deth
    ADD 1 TO TOT-MTD-WIDOW-DEATHS
  END-IF
END-READ
*
FIND (1) NT-V WITH ID-NUMBER = 800102
  IF NO RECORDS FOUND
    WRITE 'NX 800102 REC NOT FOUND'
  END-NOREC
*
  MOVE NT-5-5-COI-SUBSIDY TO TOT-COI-SUBSIDY-5-5
  MOVE NT-5-5-DEATH-BENE  TO TOT-DEATH-BENEFIT-5-5
  MOVE NT-PRE-VA-DB       TO TOT-BEF-VA-DB
END-FIND
*
* * * * * * ACCUM STATUS STATISTICS  AND PRINT SPS AGE 62 LETTERS * *
* * * * * * print awaiting allot starts
*
READ ST-V PHYSICAL
  IF ID-NUMBER LE 1900
    END TRANSACTION
    ESCAPE TOP
  END-IF
*
  IF  (ST-V.PROCESS-IND = 'C')  /* CONTACT ENTITY
*   OR (ST-V.PROCESS-IND = 'S')  /* AFSC          RE1
    OR AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)      /* RE1
    END TRANSACTION
    ESCAPE TOP
  END-IF
*
  FOR #I1 1 TO 9
    IF STATUS (#I1) = 'D'
      IF NOT PLAN (#I1) = 'SO' OR = 'FSO'
        ADD ACC-CASH-VALUE (#I1) TO TOT-ACV
        ADD CASH-VALUE     (#I1) TO TOT-CASH-VALUE
        ADD MIN-CASH-VALUE (#I1) TO TOT-MIN-CASH-VALUE
      END-IF
*
      IF CONVERSION-FLAG (#I1) = 'C'
        ADD DEATH-BENEFIT (#I1) TO #OLD-ISSUE-DB
      END-IF
    END-IF
  END-FOR
*
  IF INTRO-FLAG = 'S' OR = 'K' OR = 'G'   /* BYPASS SPS-GEN
    END TRANSACTION
    ESCAPE TOP
  END-IF
*
  RESET #DISPL #RANK-LIT #RANK-DISPLAY                            /* PM1
  CALLNAT 'GRANKSXX' #CMND ST-V.RANK ST-V.MILITARY-SERVICE
         #INVALID #DISPL #RANK-LIT #RANK-DISPLAY
*
  IF ST-V.CHIEF-OF-STAFF-IND = 'R' OR = 'Q'    /* INDS RANK SECURITY
   OR ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
    RESET #RANK-DISPLAY
*   IF ST-V.SEX = 'F'
*     IF ST-V.NAME-SP = ' '
*       MOVE 'MS' TO #RANK-DISPLAY
*     ELSE
*       MOVE 'MRS' TO #RANK-DISPLAY
*     END-IF
*   ELSE
*     MOVE 'MR' TO #RANK-DISPLAY
*   END-IF
  END-IF
*
  SEPARATE NAME LEFT INTO #LAST-NAME #FIRST/MID #SUFFIX
                            #EXTRA1 #EXTRA2 WITH DELIMITER ','
  COMPRESS #RANK-DISPLAY #FIRST/MID #LAST-NAME INTO #FORMATED-NAME
*
  IF #SUFFIX NE  ' '
    COMPRESS #FORMATED-NAME ',' INTO #FORMATED-NAME LEAVING NO
    COMPRESS #FORMATED-NAME #SUFFIX INTO #FORMATED-NAME
  END-IF
*
  IF MILITARY-STATUS = 'R'
    COMPRESS #FORMATED-NAME ', RET'
                                INTO #FORMATED-NAME LEAVING NO SPACE
  END-IF
*
  SEPARATE NAME-SP LEFT INTO #LAST-NAME #FIRST/MID #SUFFIX
                            #EXTRA1 #EXTRA2 WITH DELIMITER ','
  MOVE #FIRST/MID TO #SPS-NAME
*
  MOVE MILITARY-SERVICE TO #MIL-SERVICE
  MOVE MILITARY-STATUS TO #MIL-STATUS
  MOVE ID-NUMBER TO #HOLD-ID-N
*
  IF WIDOW-FLAG = 'Y'
    COMPRESS 'WN' #HOLD-ID INTO #FORMAT-CN LEAVING NO SPACE
    COMPRESS TITLE-SP #FIRST/MID #LAST-NAME #SUFFIX #EXTRA1 #EXTRA2
                              INTO #FORMATED-NAME
  ELSE
    COMPRESS 'CN' #HOLD-ID INTO #FORMAT-CN LEAVING NO SPACE
  END-IF
*
* COMPRESS NUMBER-MEMBERSHIPS 'M' INTO #FORMAT-MEMSHIP LEAVING NO SPACE
*   MOVE ADDRESS-1 TO #FIRST-ADDRESS                                        /* JT1 start
*   MOVE ADDRESS-2 TO #HOLD-ADDRESS-2
*   MOVE ADDRESS-3 TO #HOLD-ADDRESS-3
*   MOVE ZIP-CODE  TO #HOLD-ZIP-CODE
*  
  RESET #PDA-ADDRESS                                         
  MOVE 'P' TO #ADD-TYPE                                   
  #ADD-CONTACT-ID := ST-V.MEMBER-CONTACT-ID
  CALLNAT 'ADDN0001' #PDA-ADDRESS                        
  MOVE #ADD-LINE-1   TO #FIRST-ADDRESS  
  MOVE #ADD-LINE-2   TO #HOLD-ADDRESS-2 
  MOVE #ADD-LINE-3   TO #HOLD-ADDRESS-3 
  MOVE #ADD-ZIP-CODE TO #HOLD-ZIP-CODE                                      /* JT1 end
*
  MOVE EDITED #HOLD-ZIP-CODE (EM=99999-9999) TO #HOLD-EDIT-ZIP
*
  IF #HOLD-ZIP2 = '-0000'
    MOVE '     ' TO #HOLD-ZIP2
  END-IF
*
  IF #HOLD-ADDRESS-3 = ' '
    COMPRESS #HOLD-ADDRESS-2 #HOLD-EDIT-ZIP INTO #SECOND-ADDRESS
    RESET #THIRD-ADDRESS
  ELSE
    MOVE #HOLD-ADDRESS-2 TO #SECOND-ADDRESS
    COMPRESS #HOLD-ADDRESS-3 #HOLD-EDIT-ZIP INTO #THIRD-ADDRESS
  END-IF
* YK1 Start
*   IF   (ADDRESS-CHG-CODE = 'U')
* * IF ADDRESS-CHG-CODE = 'V'   /* to reprint last months undl
* *  AND (ST-V.DATE-OTHER-UPDATE GE 19990200)
* *  AND (PROCESS-IND NE 'S')   /* bypassd above
*     MOVE 'V' TO ADDRESS-CHG-CODE
*     UPDATE (0344)
* *
*     RESET TR-V                   /* DW3
*     MOVE 1 TO #ITR1
*     MOVE 1 TO #SFX
*     RESET SYNC-FLD-NUM (*) SYNC-FLD-OLD-DATA (*) SYNC-FLD-NEW-DATA (*)
*     MOVE PROCESS-IND TO TR-V.PROCESS-IND
*     MOVE ST-V.ID-NUMBER   TO TR-V.ID-NUMBER
*     MOVE ST-V.NAME        TO TR-V.NAME
*     MOVE DATE-ACCT-UPDATE  TO TR-V.DATE-LAST-UPDATE
*     MOVE *INIT-ID      TO TR-V.TERMINAL-ID
*     MOVE 'EDS'         TO TR-V.CLERK-ID
*     MOVE *DATN         TO TR-V.TRANSACTION-DATN
*     MOVE *TIMN         TO TR-V.TRANSACTION-TIMN
*     MOVE 29  TO SYNC-FLD-NUM (#SFX)
*     MOVE 'U' TO #TR-REG-ADDR-CHG-CODE SYNC-FLD-OLD-DATA (#SFX)
*     MOVE #TR-REG-ADDR-CHG-CODE-AREA TO TR-V.OLD-DATA (#ITR1)
*     MOVE 'V' TO #TR-REG-ADDR-CHG-CODE SYNC-FLD-NEW-DATA (#SFX)
*     MOVE #TR-REG-ADDR-CHG-CODE-AREA TO TR-V.NEW-DATA (#ITR1)
* *
*     STORE TR-V    /* DW3
* *
* *   IF ZIP-CODE = 0 /* below printing removed 5/17/2002 as per khb
* *     WRITE (5) NOTITLE USING FORM 'ATHFUNDL'  /* undeliverable letter
* *   ELSE
* *     WRITE (4) NOTITLE USING FORM 'ATHFUNDL'  /* undeliverable letter
* *     ADD 1 TO #TOT-UNDELIV-ADDR
* *   END-IF
*   END-IF
* YK1 End
  IF   (WIDOW-FLAG = ' ')                        /* ALIVE MEMBER
    IF NUMBER-MEMBERSHIPS = 0                      /* INACTIVE
      DECIDE ON FIRST VALUE OF BIRTH-CERT-CODE
        VALUE ' ' ADD 1 TO INACT-DEAD-CERT-COUNTS (1)
        VALUE 'N' ADD 1 TO INACT-DEAD-CERT-COUNTS (1)
        VALUE 'A' ADD 1 TO INACT-DEAD-CERT-COUNTS (2)
        VALUE 'B' ADD 1 TO INACT-DEAD-CERT-COUNTS (2)
        VALUE 'U' ADD 1 TO INACT-DEAD-CERT-COUNTS (3)
        VALUE 'I' ADD 1 TO INACT-DEAD-CERT-COUNTS (3)
        VALUE 'V' ADD 1 TO INACT-DEAD-CERT-COUNTS (4)
        NONE      ADD 1 TO #BAD-MBR-BRTH-CERT-CODE
                  WRITE 'BAD MBR BRTH CERT CODE' ID-NUMBER
      END-DECIDE
    ELSE
      DECIDE ON FIRST VALUE OF BIRTH-CERT-CODE
        VALUE ' ' ADD 1 TO MBR-BRTH-CERT-COUNTS (1)
        VALUE 'N' ADD 1 TO MBR-BRTH-CERT-COUNTS (1)
        VALUE 'A' ADD 1 TO MBR-BRTH-CERT-COUNTS (2)
        VALUE 'B' ADD 1 TO MBR-BRTH-CERT-COUNTS (2)
        VALUE 'U' ADD 1 TO MBR-BRTH-CERT-COUNTS (3)
        VALUE 'I' ADD 1 TO MBR-BRTH-CERT-COUNTS (3)
        VALUE 'V' ADD 1 TO MBR-BRTH-CERT-COUNTS (4)
        NONE      ADD 1 TO #BAD-MBR-BRTH-CERT-CODE
                  WRITE 'BAD MBR BRTH CERT CODE' ID-NUMBER
      END-DECIDE
    END-IF
*
    IF NAME-SP NE ' '                               /* SPOUSE EXISTS
      IF NUMBER-MEMBERSHIPS = 0                      /* INACTIVE
        DECIDE ON FIRST VALUE OF BIRTH-CERT-CODE-SP
          VALUE ' ' ADD 1 TO INACT-DEAD-CERT-COUNTS (1)
          VALUE 'N' ADD 1 TO INACT-DEAD-CERT-COUNTS (1)
          VALUE 'A' ADD 1 TO INACT-DEAD-CERT-COUNTS (2)
          VALUE 'B' ADD 1 TO INACT-DEAD-CERT-COUNTS (2)
          VALUE 'U' ADD 1 TO INACT-DEAD-CERT-COUNTS (3)
          VALUE 'I' ADD 1 TO INACT-DEAD-CERT-COUNTS (3)
          VALUE 'V' ADD 1 TO INACT-DEAD-CERT-COUNTS (4)
          NONE      ADD 1 TO #BAD-MBR-BRTH-CERT-CODE
                    WRITE 'BAD SPS BRTH CERT CODE' ID-NUMBER
        END-DECIDE
      ELSE
        DECIDE ON FIRST VALUE OF BIRTH-CERT-CODE-SP
          VALUE ' ' ADD 1 TO SPS-BRTH-CERT-COUNTS (1)
          VALUE 'N' ADD 1 TO SPS-BRTH-CERT-COUNTS (1)
          VALUE 'A' ADD 1 TO SPS-BRTH-CERT-COUNTS (2)
          VALUE 'B' ADD 1 TO SPS-BRTH-CERT-COUNTS (2)
          VALUE 'U' ADD 1 TO SPS-BRTH-CERT-COUNTS (3)
          VALUE 'B' ADD 1 TO SPS-BRTH-CERT-COUNTS (3)
          VALUE 'V' ADD 1 TO SPS-BRTH-CERT-COUNTS (4)
          NONE      ADD 1 TO #BAD-SPS-BRTH-CERT-CODE
                    WRITE 'BAD SPS BRTH CERT CODE' ID-NUMBER
        END-DECIDE
      END-IF
*
      IF NUMBER-MEMBERSHIPS = 0                      /* INACTIVE
        DECIDE ON FIRST VALUE OF MARRIAGE-CERT-CODE
          VALUE ' ' ADD 1 TO INACT-DEAD-CERT-COUNTS (1)
          VALUE 'N' ADD 1 TO INACT-DEAD-CERT-COUNTS (1)
          VALUE 'A' ADD 1 TO INACT-DEAD-CERT-COUNTS (2)
          VALUE 'B' ADD 1 TO INACT-DEAD-CERT-COUNTS (2)
          VALUE 'U' ADD 1 TO INACT-DEAD-CERT-COUNTS (3)
          VALUE 'I' ADD 1 TO INACT-DEAD-CERT-COUNTS (3)
          VALUE 'V' ADD 1 TO INACT-DEAD-CERT-COUNTS (4)
          NONE      ADD 1 TO #BAD-MBR-BRTH-CERT-CODE
                    WRITE 'BAD MAR CERT CODE' ID-NUMBER
        END-DECIDE
      ELSE
        DECIDE ON FIRST VALUE OF MARRIAGE-CERT-CODE
          VALUE ' ' ADD 1 TO MAR-CERT-COUNTS (1)
          VALUE 'N' ADD 1 TO MAR-CERT-COUNTS (1)
          VALUE 'A' ADD 1 TO MAR-CERT-COUNTS (2)
          VALUE 'B' ADD 1 TO MAR-CERT-COUNTS (2)
          VALUE 'U' ADD 1 TO MAR-CERT-COUNTS (3)
          VALUE 'I' ADD 1 TO MAR-CERT-COUNTS (3)
          VALUE 'V' ADD 1 TO MAR-CERT-COUNTS (4)
          NONE      ADD 1 TO #BAD-MAR-CERT-CODE
                    WRITE 'BAD MAR CERT CODE' ID-NUMBER
        END-DECIDE
      END-IF
    END-IF
*
    IF MILITARY-STATUS = 'R'                       /* ONLY RETIRED
      IF NUMBER-MEMBERSHIPS = 0                      /* INACTIVE
        ADD 1 TO SBP-OPT-COUNTS (9)
      ELSE
        IF O-E-99-DATE NE 0
          MOVE O-E-99-SBP-OPT TO #SBP-OPT
        ELSE
          IF O-E-DATE NE 0
            MOVE O-E-SBP-OPT TO #SBP-OPT
          ELSE
            MOVE MIL-SBP-OPT TO #SBP-OPT
          END-IF
        END-IF
*
        DECIDE ON FIRST VALUE OF #SBP-OPT
          VALUE 'A' ADD 1 TO SBP-OPT-COUNTS (1)
          VALUE 'B' ADD 1 TO SBP-OPT-COUNTS (2)
          VALUE 'C' ADD 1 TO SBP-OPT-COUNTS (3)
          VALUE 'D' ADD 1 TO SBP-OPT-COUNTS (4)
          VALUE 'E' ADD 1 TO SBP-OPT-COUNTS (5)
          VALUE 'F' ADD 1 TO SBP-OPT-COUNTS (6)
          VALUE 'N' ADD 1 TO SBP-OPT-COUNTS (7)
          VALUE ' ' ADD 1 TO SBP-OPT-COUNTS (8)
          VALUE 'O' ADD 1 TO SBP-OPT-COUNTS (10)
          VALUE 'X' ADD 1 TO SBP-OPT-COUNTS (11)
          NONE      ADD 1 TO #BAD-SBP-OPTION
                    WRITE 'BAD SBP OPTION' ID-NUMBER
        END-DECIDE
      END-IF
    END-IF
*
    DECIDE ON FIRST VALUE RANK
      VALUE 'ADM' MOVE 'GEN' TO #RANK-TO-USE
      VALUE 'VDM' MOVE 'LTG' TO #RANK-TO-USE
      VALUE 'RDM' MOVE 'MG ' TO #RANK-TO-USE
      VALUE 'RDL' MOVE 'BG ' TO #RANK-TO-USE
      VALUE 'CPN' MOVE 'COL' TO #RANK-TO-USE
      VALUE 'CDR' MOVE 'LTC' TO #RANK-TO-USE
      VALUE 'LCD' MOVE 'MAJ' TO #RANK-TO-USE
      VALUE 'LT ' MOVE 'CPT' TO #RANK-TO-USE
      VALUE 'LJG' MOVE '1LT' TO #RANK-TO-USE
      VALUE 'ENS' MOVE '2LT' TO #RANK-TO-USE
      NONE MOVE RANK TO #RANK-TO-USE
    END-DECIDE
*
    FOR #I1 1 TO 48   /* #i1 will be 49 if rank not found
      IF #RANK-TO-USE = #RANKK (#I1)
        ESCAPE BOTTOM
      END-IF
    END-FOR
*
    IF NUMBER-MEMBERSHIPS NE 0    /* musp be active member
      IF #I1 GT 48
        WRITE 'invalid rank' ID-NUMBER RANK
      END-IF
*
      IF MILITARY-SERVICE = MASK ('A')
        MOVE 1 TO #I2
      ELSE
        IF MILITARY-SERVICE = MASK ('F')
          MOVE 2 TO #I2
        ELSE
          MOVE 3 TO #I2    /* MARINE/navy/cg/phs/noa
        END-IF
      END-IF
*
*     IF PROCESS-IND NE 'S'   /* bypassd above
        IF MILITARY-STATUS = 'A'
          ADD 1 TO #RANK-CNT-ACT (#I1, #I2)
          ADD 1 TO #RANK-CNT-ACT (50, #I2)   /* totals
        ELSE
          IF MILITARY-STATUS = 'R'
            ADD 1 TO #RANK-CNT-RET (#I1, #I2)
            ADD 1 TO #RANK-CNT-RET (50, #I2)   /* totals
          ELSE
            ADD 1 TO #RANK-CNT-CIV (#I1, #I2)
            ADD 1 TO #RANK-CNT-CIV (50, #I2)   /* totals
          END-IF
        END-IF
*
        ADD 1 TO #RANK-STATS-TOT (#I1)
        ADD 1 TO #RANK-STATS-TOT (50)
*     END-IF
    END-IF
*
* * * * * * * * * * * * * * * * * * * *  /* MEMBER IS DECEASED
  ELSE
    SEPARATE NAME-SP LEFT INTO #LAST-NAME #FIRST/MID #SUFFIX
                            #EXTRA1 #EXTRA2 WITH DELIMITER ','
    IF   (NAME-SP NE ' ')                          /* SPS EXISTS
     AND (STATUS-CODE-SP = 'D')                    /* SPS DECEASED
      DECIDE ON FIRST VALUE OF BIRTH-CERT-CODE
        VALUE ' ' ADD 1 TO INACT-DEAD-CERT-COUNTS (5)
        VALUE 'N' ADD 1 TO INACT-DEAD-CERT-COUNTS (5)
        VALUE 'A' ADD 1 TO INACT-DEAD-CERT-COUNTS (6)
        VALUE 'B' ADD 1 TO INACT-DEAD-CERT-COUNTS (6)
        VALUE 'U' ADD 1 TO INACT-DEAD-CERT-COUNTS (7)
        VALUE 'I' ADD 1 TO INACT-DEAD-CERT-COUNTS (7)
        VALUE 'V' ADD 1 TO INACT-DEAD-CERT-COUNTS (8)
        NONE      ADD 1 TO #BAD-MBR-BRTH-CERT-CODE
                  WRITE 'BAD MBR BRTH CERT CODE' ID-NUMBER
      END-DECIDE
    ELSE
      DECIDE ON FIRST VALUE OF BIRTH-CERT-CODE
        VALUE ' ' ADD 1 TO MBR-BRTH-CERT-COUNTS (5)
        VALUE 'N' ADD 1 TO MBR-BRTH-CERT-COUNTS (5)
        VALUE 'A' ADD 1 TO MBR-BRTH-CERT-COUNTS (6)
        VALUE 'B' ADD 1 TO MBR-BRTH-CERT-COUNTS (6)
        VALUE 'U' ADD 1 TO MBR-BRTH-CERT-COUNTS (7)
        VALUE 'I' ADD 1 TO MBR-BRTH-CERT-COUNTS (7)
        VALUE 'V' ADD 1 TO MBR-BRTH-CERT-COUNTS (8)
        NONE      ADD 1 TO #BAD-MBR-BRTH-CERT-CODE
                  WRITE 'BAD MBR BRTH CERT CODE' ID-NUMBER
      END-DECIDE
    END-IF
*
    IF NAME-SP NE ' '                               /* SPOUSE EXISTS
      IF STATUS-CODE-SP = 'D'                        /* SPS DECEASED
        DECIDE ON FIRST VALUE OF BIRTH-CERT-CODE-SP
          VALUE ' ' ADD 1 TO INACT-DEAD-CERT-COUNTS (5)
          VALUE 'N' ADD 1 TO INACT-DEAD-CERT-COUNTS (5)
          VALUE 'A' ADD 1 TO INACT-DEAD-CERT-COUNTS (6)
          VALUE 'B' ADD 1 TO INACT-DEAD-CERT-COUNTS (6)
          VALUE 'U' ADD 1 TO INACT-DEAD-CERT-COUNTS (7)
          VALUE 'I' ADD 1 TO INACT-DEAD-CERT-COUNTS (7)
          VALUE 'V' ADD 1 TO INACT-DEAD-CERT-COUNTS (8)
          NONE      ADD 1 TO #BAD-MBR-BRTH-CERT-CODE
                    WRITE 'BAD SPS BRTH CERT CODE' ID-NUMBER
        END-DECIDE
      ELSE
        DECIDE ON FIRST VALUE OF BIRTH-CERT-CODE-SP
          VALUE ' ' ADD 1 TO SPS-BRTH-CERT-COUNTS (5)
          VALUE 'N' ADD 1 TO SPS-BRTH-CERT-COUNTS (5)
          VALUE 'A' ADD 1 TO SPS-BRTH-CERT-COUNTS (6)
          VALUE 'B' ADD 1 TO SPS-BRTH-CERT-COUNTS (6)
          VALUE 'U' ADD 1 TO SPS-BRTH-CERT-COUNTS (7)
          VALUE 'I' ADD 1 TO SPS-BRTH-CERT-COUNTS (7)
          VALUE 'V' ADD 1 TO SPS-BRTH-CERT-COUNTS (8)
          NONE      ADD 1 TO #BAD-SPS-BRTH-CERT-CODE
                    WRITE 'BAD SPS BRTH CERT CODE' ID-NUMBER
        END-DECIDE
      END-IF
*
      IF STATUS-CODE-SP = 'D'                        /* SPS DECEASED
        DECIDE ON FIRST VALUE OF MARRIAGE-CERT-CODE
          VALUE ' ' ADD 1 TO INACT-DEAD-CERT-COUNTS (5)
          VALUE 'N' ADD 1 TO INACT-DEAD-CERT-COUNTS (5)
          VALUE 'A' ADD 1 TO INACT-DEAD-CERT-COUNTS (6)
          VALUE 'B' ADD 1 TO INACT-DEAD-CERT-COUNTS (6)
          VALUE 'U' ADD 1 TO INACT-DEAD-CERT-COUNTS (7)
          VALUE 'I' ADD 1 TO INACT-DEAD-CERT-COUNTS (7)
          VALUE 'V' ADD 1 TO INACT-DEAD-CERT-COUNTS (8)
          NONE      ADD 1 TO #BAD-MBR-BRTH-CERT-CODE
                    WRITE 'BAD MAR CERT CODE' ID-NUMBER
        END-DECIDE
      ELSE
        DECIDE ON FIRST VALUE OF MARRIAGE-CERT-CODE
          VALUE ' ' ADD 1 TO MAR-CERT-COUNTS (5)
          VALUE 'N' ADD 1 TO MAR-CERT-COUNTS (5)
          VALUE 'A' ADD 1 TO MAR-CERT-COUNTS (6)
          VALUE 'B' ADD 1 TO MAR-CERT-COUNTS (6)
          VALUE 'U' ADD 1 TO MAR-CERT-COUNTS (7)
          VALUE 'I' ADD 1 TO MAR-CERT-COUNTS (7)
          VALUE 'V' ADD 1 TO MAR-CERT-COUNTS (8)
          NONE      ADD 1 TO #BAD-MAR-CERT-CODE
                    WRITE 'BAD MAR CERT CODE' ID-NUMBER
        END-DECIDE
      END-IF
    END-IF
*
    IF STATUS-CODE-SP= 'D'                         /* SPS DECEASED
      DECIDE ON FIRST VALUE OF MARRIAGE-CERT-CODE
        VALUE ' ' ADD 1 TO INACT-DEAD-CERT-COUNTS (5)
        VALUE 'N' ADD 1 TO INACT-DEAD-CERT-COUNTS (5)
        VALUE 'A' ADD 1 TO INACT-DEAD-CERT-COUNTS (6)
        VALUE 'B' ADD 1 TO INACT-DEAD-CERT-COUNTS (6)
        VALUE 'U' ADD 1 TO INACT-DEAD-CERT-COUNTS (7)
        VALUE 'I' ADD 1 TO INACT-DEAD-CERT-COUNTS (7)
        VALUE 'V' ADD 1 TO INACT-DEAD-CERT-COUNTS (8)
        NONE      ADD 1 TO #BAD-MBR-BRTH-CERT-CODE
                  WRITE 'BAD DTH CERT CODE' ID-NUMBER
      END-DECIDE
    ELSE
      DECIDE ON FIRST VALUE OF DEATH-CERT-CODE
        VALUE ' ' ADD 1 TO DTH-CERT-COUNTS (1)
        VALUE 'N' ADD 1 TO DTH-CERT-COUNTS (1)
        VALUE 'A' ADD 1 TO DTH-CERT-COUNTS (2)
        VALUE 'B' ADD 1 TO DTH-CERT-COUNTS (2)
        VALUE 'U' ADD 1 TO DTH-CERT-COUNTS (3)
        VALUE 'I' ADD 1 TO DTH-CERT-COUNTS (3)
        VALUE 'V' ADD 1 TO DTH-CERT-COUNTS (4)
        NONE      ADD 1 TO #BAD-DTH-CERT-CODE
                WRITE 'BAD DTH CERT CODE' ID-NUMBER
      END-DECIDE
    END-IF
*
    IF (NAME-SP NE ' ') AND (#FIRST/MID NE 'NONE') /* SPS EXISTS
      ADD 1 TO WID-WITH-SPS
*
      IF STATUS-CODE-SP = 'D'
        ADD 1 TO WID-DECEASED
      END-IF
    ELSE
      IF FORMER-SPOUSE-NAME NE ' '
        ADD 1 TO WID-WITH-FMR-SPS
*
*       IF FORMER-SPOUSE-STATUS = 'D'
*         ADD 1 TO WID-DECEASED    /*  removed 7/5/2002 krm
*       ELSE
*         WRITE ID-NUMBER ' WIDOW REC WITH ALIVE FMR SPS BUT NO SPS'
*       END-IF
      ELSE
        FIND (1) FR-V WITH WIDOW-KEY = ST-V.ID-NUMBER-A
          IF NO RECORDS FOUND
*           WRITE ST-V.ID-NUMBER ' WIDOW REC WITH NO firs rec'
            ADD 1 TO WID-WITH-NONE
            ESCAPE BOTTOM
          END-NOREC
*
          IF C*DEPENDENT-TABLE = 0
*           WRITE ST-V.ID-NUMBER ' WIDOW REC WITH NO DEPN & no sps'
            ADD 1 TO WID-WITH-NONE
          ELSE
            ADD 1 TO WID-WITH-DEPN
*           WRITE ST-V.ID-NUMBER' WIDOW REC WITH DEPNS BUT NO SPS'
          END-IF
        END-FIND
      END-IF
    END-IF
*
    IF MIL-SBP-AMT NE 0
      ADD 1 TO WID-WITH-MIL-SBP-AMT
    END-IF
*
    IF RSFPP-AMT NE 0
      ADD 1 TO WID-WITH-RSFPP
    END-IF
*
    IF CIV-SV-SBP-AMT NE 0
      ADD 1 TO WID-WITH-CS-ANN
    END-IF
*
    IF CIVIL-SVC-PENSION NE 0
      ADD 1 TO WID-WITH-CS-PENSION
    END-IF
*
    IF CIVIL-ANNUITY NE 0
      ADD 1 TO WID-WITH-CIVIL-ANN
    END-IF
*
    IF CIVIL-PENSION NE 0
      ADD 1 TO WID-WITH-CIVIL-PENSION
    END-IF
*
    IF VA-DIC-AMT NE 0
      ADD 1 TO WID-WITH-VA-DIC
    END-IF
*
    IF DEATH-SERVICE-CON = 'Y' OR = 'C'   /* DW2
      ADD 1 TO WID-WITH-SERV-CONN
    END-IF
  END-IF
*
  END TRANSACTION
END-READ
*
READ FR-V PHYSICAL
  FOR #I1 1 TO 14
    IF C*DEPENDENT-TABLE LT #I1
      ESCAPE BOTTOM
    END-IF
*
    IF WIDOW-FLAG = ' '                         /* ALIVE MEMBER
      IF INACTIVE-FLAG = 'Y'                    /* INACTIVE MEMBER
        DECIDE ON FIRST VALUE OF DEPN-BIRTH-CD (#I1)
          VALUE ' ' ADD 1 TO INACT-DEAD-CERT-COUNTS (1)
          VALUE 'N' ADD 1 TO INACT-DEAD-CERT-COUNTS (1)
          VALUE 'A' ADD 1 TO INACT-DEAD-CERT-COUNTS (2)
          VALUE 'B' ADD 1 TO INACT-DEAD-CERT-COUNTS (2)
          VALUE 'U' ADD 1 TO INACT-DEAD-CERT-COUNTS (3)
          VALUE 'I' ADD 1 TO INACT-DEAD-CERT-COUNTS (3)
          VALUE 'V' ADD 1 TO INACT-DEAD-CERT-COUNTS (4)
          NONE      ADD 1 TO #BAD-DEP-BRTH-CERT-CODE
                WRITE 'BAD DEP CERT CODE =' FR-V.ID-NUMBER
        END-DECIDE
      ELSE
        DECIDE ON FIRST VALUE OF DEPN-BIRTH-CD (#I1)
          VALUE ' ' ADD 1 TO DEP-BRTH-CERT-COUNTS (1)
          VALUE 'N' ADD 1 TO DEP-BRTH-CERT-COUNTS (1)
          VALUE 'A' ADD 1 TO DEP-BRTH-CERT-COUNTS (2)
          VALUE 'B' ADD 1 TO DEP-BRTH-CERT-COUNTS (2)
          VALUE 'U' ADD 1 TO DEP-BRTH-CERT-COUNTS (3)
          VALUE 'I' ADD 1 TO DEP-BRTH-CERT-COUNTS (3)
          VALUE 'V' ADD 1 TO DEP-BRTH-CERT-COUNTS (4)
          NONE      ADD 1 TO #BAD-DEP-BRTH-CERT-CODE
                WRITE 'BAD DEP CERT CODE =' FR-V.ID-NUMBER
        END-DECIDE
      END-IF
    ELSE                                        /* DEAD MEMBER
      DECIDE ON FIRST VALUE OF DEPN-BIRTH-CD (#I1)
        VALUE ' ' ADD 1 TO DEP-BRTH-CERT-COUNTS (5)
        VALUE 'N' ADD 1 TO DEP-BRTH-CERT-COUNTS (5)
        VALUE 'A' ADD 1 TO DEP-BRTH-CERT-COUNTS (6)
        VALUE 'B' ADD 1 TO DEP-BRTH-CERT-COUNTS (6)
        VALUE 'U' ADD 1 TO DEP-BRTH-CERT-COUNTS (7)
        VALUE 'I' ADD 1 TO DEP-BRTH-CERT-COUNTS (7)
        VALUE 'V' ADD 1 TO DEP-BRTH-CERT-COUNTS (8)
        NONE      ADD 1 TO #BAD-DEP-BRTH-CERT-CODE
              WRITE 'BAD DEP CERT CODE =' FR-V.ID-NUMBER
      END-DECIDE
    END-IF
  END-FOR
*
  FOR #I1 1 TO 45
    IF POL-NAME (#I1) = ' '
      ESCAPE BOTTOM
    END-IF
*
    IF POL-CODE (#I1) = '1' OR = '2'
      MOVE 'X' TO #POL-CODE
    ELSE
      IF POL-CODE (#I1) = '3' OR = '4'
        MOVE '&' TO #POL-CODE
      ELSE
        MOVE POL-CODE (#I1) TO #POL-CODE
      END-IF
    END-IF
*
    IF WIDOW-FLAG = ' '           /* ACTIVE MEMBER
      IF INACTIVE-FLAG = 'Y'                    /* INACTIVE MEMBER
        DECIDE ON FIRST VALUE OF #POL-CODE
          VALUE '*' ADD 1 TO INACT-DEAD-INS-POL-CODE-COUNTS (1)
          VALUE '&' ADD 1 TO INACT-DEAD-INS-POL-CODE-COUNTS (2)
          VALUE ' ' ADD 1 TO INACT-DEAD-INS-POL-CODE-COUNTS (3)
          VALUE 'X' ADD 1 TO INACT-DEAD-INS-POL-CODE-COUNTS (4)
          NONE      ADD 1 TO #BAD-POL-CODE
                WRITE 'BAD POL CODE =' FR-V.ID-NUMBER
        END-DECIDE
      ELSE
        DECIDE ON FIRST VALUE OF #POL-CODE
          VALUE '*' ADD 1 TO INS-POL-CODE-COUNTS (1)
          VALUE '&' ADD 1 TO INS-POL-CODE-COUNTS (2)
          VALUE ' ' ADD 1 TO INS-POL-CODE-COUNTS (3)
          VALUE 'X' ADD 1 TO INS-POL-CODE-COUNTS (4)
          NONE      ADD 1 TO #BAD-POL-CODE
                WRITE 'BAD POL CODE' FR-V.ID-NUMBER
        END-DECIDE
      END-IF
    ELSE
      DECIDE ON FIRST VALUE OF #POL-CODE
        VALUE '*' ADD 1 TO INS-POL-CODE-COUNTS (5)
        VALUE '&' ADD 1 TO INS-POL-CODE-COUNTS (6)
        VALUE ' ' ADD 1 TO INS-POL-CODE-COUNTS (7)
        VALUE 'X' ADD 1 TO INS-POL-CODE-COUNTS (8)
        NONE      ADD 1 TO #BAD-POL-CODE
              WRITE 'BAD POL CODE' FR-V.ID-NUMBER
      END-DECIDE
    END-IF
  END-FOR
*
  END TRANSACTION
END-READ
*
*
* neWPAGE (4)
* WRITE (4) 'TOTAL undeliverable addr LETTERS = ' #TOT-UNDELIV-ADDR
  WRITE 'TOTAL undel addr "U" to "V" = ' #TOT-UNDELIV-ADDR
*
IF #STATS-REC-FOUND
  GET MB-V #STATS-ISN
  MOVE BY NAME MBR-STATS-V TO MB-V
  UPDATE (0938)
  WRITE 'UPDATED MEMBERSHIP STATISTICS RECORD ' #MBR-STATS-KEY
ELSE
  MOVE BY NAME MBR-STATS-V TO MB-V
  STORE MB-V
  WRITE 'STORED MEMBERSHIP STATISTICS RECORD ' #MBR-STATS-KEY
END-IF
*
WRITE 'TOTAL BAD MBR BRTH CERT CODES =' #BAD-MBR-BRTH-CERT-CODE
WRITE 'TOTAL BAD SPS BRTH CERT CODES =' #BAD-SPS-BRTH-CERT-CODE
WRITE 'TOTAL BAD MAR CERT CODES      =' #BAD-MAR-CERT-CODE
WRITE 'TOTAL BAD DTH CERT CODES      =' #BAD-DTH-CERT-CODE
WRITE 'TOTAL BAD SBP OPTIONS         =' #BAD-SBP-OPTION
WRITE '****************'
WRITE 'TOTAL OLD ISSUE DEATH-BENE    = ' #OLD-ISSUE-DB
*
NEWPAGE (7)
WRITE (7) NOTITLE USING FORM 'ATHFRANK'
*
END TRANSACTION
*
END
