* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 2
* <Natural Source Header
* PGM-ID: E4700PBD ** bene processing
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE     TAG     REASON                                       *
* DRW    09282004 DW1  Add AJT and BHL  to valid Bd Users              *
* DRW    02232007 DW2  Remove NX to AFSC                               *
* DRW  05/28/2008 DW3  add check fot Contestability                    *
* DRW  07/18/2008 DW4  Add No Longer Contestable Linkage to GCONTSXX   *
* PAM  07/24/2008 PM5  Added MAL to over-rides                         *
* DRW  09/22/2008 DW6  Stop using ISN for PD Match                     *
* YAK  10/20/2008 YK1  Use STACK DATA command to pass information      *
*                      to/from program for Policy Print                *
* DRW  11/25/2008 DW7  Add Linkage to GCONTSXX for #CONTESTABLE-BUT-PAID
* DRW  01/27/2009 DW8  CHG #POLICY-PRINT Linkage processing            *
* DRW  10/04/2009 DW9  Add JSF to authorized BD Update Users           *
* PAM  04/02/2010 PM10 Adjusted for new dependant process              *
* PAM  05/07/2010 PM11 Adjusted END-REPEAT location                    *
* PAM  05/24/2010 PM12 Adjusted begin of REPEAT section                *
* PAM  08/18/2010 PM13 Added temporary pop-up screen for government    *
*                      allotment paying policies during bene valiation *
* PAM  02/14/2011 PM14 Added access to policy services temp account    *
* PAM  02/15/2011 PM15 Added access to Meera                           *
* PAM  02/28/2011 PM16 Added access Aimee Sealy                        *
* PAM  06/30/2011 PM17 Added organizations                             *
* PAM  07/08/2011 PM18 Added email message to polserv when beneficiary *
*                      is validated                                    *
* PAM  07/13/2011 PM19 Adjusted email process                          *
* PAM  07/21/2011 PM20 Adjusted display for names                      *
* PAM  08/08/2011 PM21 Added Amy to eligible users                     *
* PAM  09/30/2011 PM22 Added back-up NX message until email resolution *
* PAM  11/23/2011 PM23 Added NAME to beneficiary confirmation email    *
* PAM  02/10/2012 PM24 Allow NAME to be changed if from CONTACT record *
* PAM  03/21/2012 YK2  Add Jennifer, Klytia and Paula to eligible users*
* VXT  08/23/2012 VT1 Replace PAM with VXT                             *
* NGG  08/15/2012 NG1  Add help for settlement options                 *
* NGG  20121010   NG2  CN Expansion Project - beneficiary data are     *
*                      moved to new database files                     *
* NG  20130726    NG3  Address normalization                           *
* JNT 20131104    JT1  1M Policy support                               *
* TMT  06/12/2014 TT1  Contact normalization - DOB and Sex             *
* NGG  09/17/2014 NG4  MS STATISTICS                                   *
* NGG  08/03/2015 NG5  Policy ownership Project                        *
************************************************************************
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX
LOCAL USING GPRL0EML              /* PM18
LOCAL
1 Option-text             (A40)   /* NG1   /* Connect help for Settlement options Table 012
1 Option-security         (A1)    /* NG1
1 #GET                    (I4) CONST <1>  /* NG2
1 #UPDATE                 (I4) CONST <2>  /* NG2
1 #PROGRAM                (A8)            /* NG4
1 #USE-TIMX               (L) INIT <TRUE> /* NG4
1 #TEMPDATA               (L)             /* NG5
*
1 #SEG-X     (I2)                 /* DW3
1 #HAS-CONTESTABILITY  (L)
1 #NO-LONGER-CONTESTABLE   (L)    /* DW4
1 #CONTESTABLE-BUT-PAID    (L)    /* DW7

1 #DATA-VAL    (A26)
*
1 CT-V VIEW OF A-CONTACTS         /* PM17
  2 CONTACT-ID                     /* PM17
  2 CONTACT-TYPE                   /* PM17
*
1 TRM-V VIEW OF A-TERMINALS       /* PM18
  2 CLERK-ID                      /* PM18
  2 EMAIL                         /* PM18
*
1 CODES VIEW OF A-GEN-TABLE       /* PM18
  2 GEN-ALPHA-VALUE               /* PM18
  2 ADDL-INFO                           /* PM22
*
1 #BACK-UP-NX-TO-TABLE            (10)  /* PM22
  2 #BACK-UP-TO                    (A3)  /* PM22
1 #NX-TO                          (I2)  /* PM22
*
1 #ORG      (L)                   /* PM17
1 #CON-NAME (A) DYNAMIC           /* PM20
*
1 #BD-NAME (A25/5)
1 #BD-SSN  (A9/5)
1 #BD-DOB  (A8/5)
1 #BD-REL  (A1/5)
1 #BD-CONTACT-ID (N8/5)           /* PM10
1 #BD-GENDER     (A1/5)           /* PM10
1 #SUBTYPE  (A1)
1 #NEW-LAYOUT  (L)
1 #OLD-LAYOUT  (L)
1 #NEW-LAYOUT-LBL (A10)
1 #TYP-1-FREE   (L)
1 #TYP-2-FREE   (L)
1 #CON    (L)
1 #DO-SH  (L)
1 #INVALID (L)
1 #ERR-MSG  (A60)
1 #REL-DISP   (A15)
1 #EDIT-FLAG   (A1)
1 #GOOD-SHARE  (L)
1 #LST-UPDT-BD-USER  (A3)
1 #APPR-FOR-PAYOUT (A1)
1 #APPR-FOR-PAYOUT-CV (C)
1 #BD-READY-X    (I2)
1 #BD-READY-INIT (A3)
1 #TO-INIT       (A3)
1 #FOUND  (L)
1 #PLAN       (A3)
1 REDEFINE #PLAN
  2 #PLAN-2    (A2)
  2 #PLAN-FILL (A1)
1 #ALL-POLS   (A60)
1 #NUM-POLS   (P3)
1 #ISS-DT-OCC   (9)
  2 #ISS-DT       (N6)
  2 #ISS-DT-DISP  (A10)
  2 #SPLIT-IND    (N1)
  2 #STATUS       (A1)
  2 #POL-NUM      (A15)
  2 REDEFINE #POL-NUM
    3 #POL-NUM-1ST-6 (A6)
    3 #POL-NUM-POS-7 (A1)
    3 #POL-NUM-LST-8 (A8)
  2 REDEFINE #POL-NUM
    3 #POL-NUM-1ST-7 (A7)
    3 #POL-NUM-POS-8 (A1)
    3 #POL-NUM-LST-7 (A7)
  2 REDEFINE #POL-NUM
    3 #POL-NUM-1ST-8 (A8)
    3 #POL-NUM-POS-9 (A1)
    3 #POL-NUM-LST-6 (A6)
  2 #POL-BENE-FOUND (L)
  2 #POL-BENE-SEL   (A1)
*
1 #SCR-LINKED-CV  (C/9)
*
1 #SCR-BENE-OCC   (6)
  2 #SCR-BENE-SEL-CV (C)
  2 #SCR-BENE-CV     (C)
  2 #SCR-POL-SELECT (A1)
  2 REDEFINE #SCR-POL-SELECT
    3 #SCR-POL-SELECT-2 (A1)
  2 #SCR-BENE-PENDING (A12)
  2 #BENE-EXISTS    (L)
  2 #CUR-BENE-EXISTS    (L)
  2 #HOLD-BENE-X    (I2)
  2 #SCR-POL-NUM-OCC (9)
    3 #SCR-POL-NUM-LINKED (A15)
    3 #ISS-DT-LINKED      (N6)
    3 #ISS-DT-LINKED-DISP (A10)
    3 #SPLIT-IND-LINKED   (N1)
*
1 #CUR-BENE-OCC (6) /* CURR BENE IF ALSO A PEND
  2 #CUR-BENE-SEL-CV (C)
  2 #CUR-BENE-CV     (C)
  2 #CUR-POL-SELECT (A1)
  2 REDEFINE #CUR-POL-SELECT
    3 #CUR-POL-SELECT-2 (A1)
  2 #CUR-BENE-PENDING (A12)
  2 #CUR-BENE-X    (I2)
  2 #CUR-POL-NUM-OCC (9)
    3 #CUR-POL-NUM-LINKED (A15)
    3 #CUR-DT-LINKED      (N6)
    3 #CUR-DT-LINKED-DISP (A10)
    3 #CUR-SPLIT-IND-LINKED (N1)
*
1 #SCR-NAME  (A25)
*
1 #SCR-OWNER  (A35)
1 REDEFINE #SCR-OWNER
  2 #SCR-OWNER-OCC  (5)
    3 #SCR-OWN-6A   (A6)
    3 REDEFINE #SCR-OWN-6A
      4 #SCR-OWN-6N   (N6)
    3 REDEFINE #SCR-OWN-6A
      4 #SCR-OWN-1A   (A1)
    3 #SCR-OWN-/    (A1)
*
1 #HLD-OWNER  (A35)
1 REDEFINE #HLD-OWNER
  2 #HLD-OWNER-OCC  (5)
    3 #HLD-OWN-6A   (A6)
    3 REDEFINE #HLD-OWN-6A
      4 #HLD-OWN-6N  (N6)
    3 #HLD-OWN-/    (A1)
*
1 #SCR-PRIM-SEC   (2)
  2 #SCR-DESIG    (A60/5)
  2 REDEFINE #SCR-DESIG
    3 #SCR-DESIG-2-OCC (5)
      4 #SCR-DESIG-2 (A60)
      4 REDEFINE #SCR-DESIG-2
        5 #SCR-DESIG-2-1ST-25 (A25)
        5 #SCR-DESIG-2-LST-35 (A35)
      4 REDEFINE #SCR-DESIG-2
        5 #SCR-DESIG-1ST-33 (A33)
        5 #SCR-DESIG-LST-27 (A27)
      4 REDEFINE #SCR-DESIG-2
        5 #SCR-BN-NAME   (A25)
        5 #SCR-BN-SSN (A9)
        5 #SCR-BN-REL (A1)
        5 #SCR-BN-SHARE (A10)
        5 REDEFINE #SCR-BN-SHARE
          6 #SCR-BN-SHARE-X (A1/10)
        5 #SCR-BN-SET-OPT (A1)
        5 #SCR-BN-RESTRICTION (A1)
        5 #SCR-BN-DOB (A8)
        5 #SCR-BN-NEW-FILL (A5)
      4 REDEFINE #SCR-DESIG-2
        5 #SCR-BN-NAME-2 (A25)
        5 #SCR-BN-SSN-2 (A9)
        5 #SCR-BN-REL-2 (A1)
        5 #SCR-BN-SHARE-2 (A10)
        5 #SCR-BN-SET-OPT-2 (A1)
        5 #SCR-BN-RESTRICTION-2 (A1)
        5 #SCR-BN-DOB-2 (A8)
        5 #SCR-BN-NEW-FILL-2 (A5)
  2 #SCR-TYPE (A1)
  2 #SCR-SHARE-TYP (A1)
*
1 #SCR-BENE-SEC            (2)      /* PM10
  2 #SCR-BENE-CONTACT-ID    (N8/5)   /* PM10
  2 #SCR-BENE-CT-IND        (A1/5)   /* pm10
*
1 #HOLD-BENE-OCC           (2)      /* PM10
  2 #HOLD-BENES             (5)      /* PM10
    3 #HLD-BENE-NAME         (A25)    /* PM10
    3 #HLD-BN-SSN            (A9)     /* PM10
    3 #HLD-BN-REL            (A1)     /* PM10
    3 #HLD-BN-DOB            (A8)     /* PM10
*
1 #SCR-NEW-LAYOUT (N1)
1 #SCR-COM-DIS (N2)
1 #SCR-PER-STR (A1)
1 #SCR-SUC-OWN (A1)
1 #SCR-SETL-OPT (A1)
1 #SCR-OWN-TRNSF-DT-DISP (A10)
1 #SCR-OWN-TRNSF-DT (A8)
1 #SCR-DATE-SIGNED  (A8)
1 #SCR-TRUSTEE-LBL (A12/2)
1 #SCR-TRUST-LBL (A15/2)
1 #SCR-CV (C)
1 #SCR-FIN-ATT (A1)
1 #SCR-FIN-END (A1)
1 #SCR-FINALIZE-CV (C)
1 #SCR-DELETE (A1)
1 #SCR-DELETE-CV (C)
1 #SCR-LST-UPD (A10)
1 #LST-UPD (N8)
1 #SCR-BENE-STATUS (A12)
1 #SCR-PEND-REM (A16)
1 #SCR-BENE-RESTRICT (A1)
*
1 #CUR-BENE-LBL (A50)
1 #SELECTED-CUR (L)
1 #SELECTED-NOT-IN-FORCE (L)
1 #FOUND-IN-FORCE (L)
*
1 #HLD-LINKED-POLS (N6/7)
1 #HLD-BENE-RESTRICT (A1)
1 #HLD-SUC-OWN (A1)
1 #HLD-SETL-OPT (A1)
1 #HLD-COM-DIS (N2)
1 #HLD-PER-STR (A1)
1 #HLD-BENE-OWN-TRNSF-DT (N8)
1 #HLD-PRIM-SEC (2)
  2 #HLD-DESIG (A60/5)
  2 REDEFINE #HLD-DESIG
    3 #HLD-DESIG-OCC (5)
      4 #HLD-DESIG-1ST-25 (A25)
      4 #HLD-DESIG-LST-35 (A35)
  2 #HLD-TYPE (A1)
  2 #HLD-SHARE-TYP (A1)
*
1 #STILL-PENDING-BENES (L)
1 #BENE-CHGED  (L)
1 #BENE-FOUND  (L)
1 #BENE-FOUND-X (L)
1 #CUR-BENE-FOUND  (L)
1 #DES-SEL  (I2)
1 #BENE-X   (I2)
1 #TYPE     (A3)
*
* NT-V VIEW OF A-NOTES
1 NT-V VIEW OF A-BENE-FINAL  /* NG1
  2 ID-NUMBER  (N6)    /* D = bene desig (1-6)
  2 NOTE-DATE  (N8/60) /* P/A = PRIN/ALT DESIG
  2 REDEFINE NOTE-DATE /* L = linked pols
    3 BENE-DATES-6-POLS (6)
      4 BENE-ISS-DT       (N6/7) /* (D, L)
      4 BENE-SPLIT-IND    (N1/7) /* (D, L)
      4 BENE-LST-UPD      (N8)   /* (D)
      4 BENE-STRT-PEND    (N8)   /* (D)
      4 BENE-FOL-UP-IND   (N1)   /* (D)
      4 BENE-OWN-TRNSF-DT (N8)   /* (D)
      4 BENE-SUC-OWN      (N1)   /* (d)
      4 BENE-NEW-LAYOUT   (N1)   /* (D)/* was -setl-opt
      4 BENE-COM-DIS      (N2)   /* (D)/* Common disaster
      4 BENE-PER-STR      (N1)   /* (D)/* Per Stirpes
      4 BENE-FIL1         (A1)
  2 NOTE-CLERK-ID       (A3/60)
  2 REDEFINE NOTE-CLERK-ID
    3 BENE-MISC-6-POLS  (6)
      4 BENE-STATUS      (A1)  /* (D)
      4 BENE-RESTRICT    (A1)  /* (D)
      4 BENE-MISC-PRIM-SEC (2)
        5 BENE-TYPE        (A1) /* (D, P/A)
        5 BENE-SHARE-TYP   (A1) /* (D, P/A)
        5 BENE-MISC-FIL-2  (A12)
  2 NOTE-TEXT          (A60/60)
  2 REDEFINE NOTE-TEXT
    3 BENE-TEXTS-6-POLS (6)
      4 BENE-TEXT-PRIM-SEC (2)
        5 BENE-TEXT-OCC    (5)
          6 BENE-TEXT   (A60) /* (D, P/A, text-line)
          6 REDEFINE BENE-TEXT
            7 BENE-TEXT-1ST-25   (A25)
            7 BENE-TEXT-LST-35   (A35)
  2 BENE-CONTACT-ID         (N8/60)    /* PM10
  2 REDEFINE BENE-CONTACT-ID           /* PM10
    3 BENE-CONTACT-6-POLS    (6)        /* PM10
      4 BENE-CONTACT-PROM-SEC (2)        /* PM10
        5 BENE-CONTACT-OCC     (5)        /* PM10
          6 BENE-CONTACT-ID-R   (N8)       /* PM10
  2 LST-BD-FINALIZATION-USER (A3)
*
* NT-F-V VIEW OF A-NOTES   /* final benes
1 NT-F-V VIEW OF A-BENE-FINAL   /* NG1
  2 ID-NUMBER          (N6)
  2 NOTE-DATE          (N8/60)
  2 REDEFINE NOTE-DATE
    3 BENE-DATES-6-POLS (6)
      4 BENE-ISS-DT       (N6/7) /* (D, L)
      4 BENE-SPLIT-IND    (N1/7) /* (D, L)
      4 BENE-LST-UPD      (N8) /* (D)
      4 BENE-STRT-PEND    (N8) /* (D)
      4 BENE-FOL-UP-IND   (N1) /* (D)
      4 BENE-OWN-TRNSF-DT (N8) /* (D)
      4 BENE-SUC-OWN      (N1) /* (d)
      4 BENE-NEW-LAYOUT   (N1) /* (D)
      4 BENE-COM-DIS      (N2) /* (D)
      4 BENE-PER-STR      (N1) /* (D)
      4 BENE-FIL1         (A1)
  2 NOTE-CLERK-ID      (A3/60)
  2 REDEFINE NOTE-CLERK-ID
    3 BENE-MISC-6-POLS  (6)
      4 BENE-STATUS      (A1) /* (D)
      4 BENE-RESTRICT    (A1) /* (D)
      4 BENE-MISC-PRIM-SEC (2)
        5 BENE-TYPE        (A1) /* (D, P/A)
        5 BENE-SHARE-TYP   (A1) /* (D, P/A)
        5 BENE-MISC-FIL-2  (A12)
  2 NOTE-TEXT          (A60/60)
  2 REDEFINE NOTE-TEXT
    3 BENE-TEXTS-6-POLS (6)
      4 BENE-TEXT-PRIM-SEC (2)
        5 BENE-TEXT-OCC    (5)
          6 BENE-TEXT     (A60) /*(D, P/A, text-line)
          6 REDEFINE BENE-TEXT
            7 BENE-TEXT-1ST-25   (A25)
            7 BENE-TEXT-LST-35   (A35)
  2 BENE-CONTACT-ID         (N8/60)    /* PM10
  2 REDEFINE BENE-CONTACT-ID           /* PM10
    3 BENE-CONTACT-6-POLS    (6)        /* PM10
      4 BENE-CONTACT-PROM-SEC (2)        /* PM10
        5 BENE-CONTACT-OCC     (5)        /* PM10
          6 BENE-CONTACT-ID-R   (N8)       /* PM10
  2 LST-BD-FINALIZATION-USER (A3)
*
1 NOT-V VIEW OF A-NOTES
  2 NOTE-TEXT   (A60/60)
  2 REDEFINE NOTE-TEXT                     /* DW3
    3 NOTE-TEXT-OCC (60)
      4 NOTE-TEXT-1ST-17    (A17)
      4 NOTE-TEXT-LST-43    (A43)
  2 NOTE-CLERK-ID  (A3/60)
  2 NOTE-DATE      (N8/60)
1 #EDS-DATA-VAL  (A60)
*
1 CON-V VIEW OF A-STATUS
  2 NAME
  2 MEMBER-CONTACT-ID                  /* PM20
  2 LINKED-CN  (40)
*
1 #CONT-ENT   (A25)
1 #CONT-ENT-X (A25/25)
1 #LAST-NAME  (A25)
1 #FIRST-NAME (A25)
1 #SUFFIX-25(A25)
1 #EXTRA1   (A25)
1 #EXTRA2   (A25)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID           /* PM10
  2 WIDOW-FLAG
  2 NAME
  2 RANK
*   2 SEX                       /* TT1
  2 DATE-OF-DEATH
  2 INTRO-FLAG
  2 PROCESS-IND
  2 LINKED-CN (1)
  2 REDEFINE LINKED-CN
    3 LINKED-CN-A (A6/1)
  2 NOTE-REC-IND
*  2 ZIP-CODE                    /* NG3
  2 ISSUE-DATE     (9)
  2 REDEFINE ISSUE-DATE
    3 ISSUE-DT-OCC  (9)
      4 ISS-DT-CENT     (N2)
      4 ISS-DT-YYMMDD   (N6)
  2 SPLIT-IND      (9)
  2 STATUS         (9)
  2 NUM-MBRSHIPS   (9)
  2 PAY-STATUS     (9)
  2 PLAN           (9)
  2 FACE-AMOUNT    (N7.2/9)
  2 REDEFINE FACE-AMOUNT
    3 FACE-AMT-OCC  (9)
*       4 FACE-AMT-FIL  (N1)                                     /* JT1
      4 FACE-AMT-K    (N4)                                       /* JT1
      4 FACE-AMT-REST (N3.2)
*
1 MBRSHIP-MTD-DET-V VIEW OF A-MBRSHIP-MTD-DETAIL
  2 ID-NUMBER   (N6)
  2 ENTRY-DATE  (N8)
  2 REC-ISN     (N8)
  2 CODE        (A1)
  2 ISSUE-DATE  (N8)
  2 NUM-MBRSHIPS
*
1 #DATE-DISP (A10)
1 #YYYYMMDD  (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY   (A4)
  2 REDEFINE #YYYY
    3 #CENT-N (N2)
    3 #YY-N   (N2)
  2 #MM     (A2)
  2 #DD     (A2)
*
1 #TODAY-MMDDYYYY-DISP (A10)
1 #TODAY-MMDDYYYY (A8)
*
1 #WYYYYMMDD
  2 #WYYYY    (N4)
  2 #WMM      (N2)
  2 #WDD      (N2)
1 REDEFINE #WYYYYMMDD
  2 #WYYYYMMDD-N (N8)
*
1 #WMMDDYYYY
  2 #WMM   (N2)
  2 #WDD   (N2)
  2 #WYYYY (N4)
1 REDEFINE #WMMDDYYYY
  2 #WMMDDYYYY-A (A8)
*
1 #MONTHS (A36)  INIT
  <'JanFebMarAprMayJunJulAugSepOctNovDec'>
1 REDEFINE #MONTHS
  2 #MON       (A3/12)
*
1 #NAME      (A25)
1 #LAST      (A25)
1 #FIRST-MID (A25)
1 #SUFF1     (A25)
1 #SUFF2     (A25)
1 #SUFF3     (A25)
1 #ZIP-CODE  (N9)
*
1 #TEXT   (A75)
1 #SCR-X  (I2)
1 #CUR-X  (I2)
1 #SCR-POL-X  (I2)
1 #CUR-POL-X  (I2)
1 #I1  (I2)
1 #I2  (I2)
1 #I3  (I2)
1 #I4  (I2)
1 #I5  (I2)
1 #I6  (I2)
1 #DESIG-CNT  (P2)
1 #NO-UPDATE  (L)
1 #PEND-BENE-NT-REC-NUM (N6)
1 #PEND-BENE-NT-REC-FND (L)
1 #PEND-NT-ISN     (P8)
1 #FINAL-BENE-NT-REC-NUM (N6)
1 #FINAL-BENE-NT-REC-FND (L)
1 #FINAL-NT-ISN     (P8)
1 #NEW-PEND         (L)
1 #ONE-SELECTED    (L)
1 #NUM-POLS-SELECTED (N3)
1 #CON-PEND        (L)
1 #WORK-POL-NUM    (A16)
1 #HOLD-SUFFIX     (A3)
1 #INT             (I2)
1 #NOTE-TEXT       (A60/10)
1 #CALL-PGM        (A8) INIT <'E4750SBD'>
1 #NUM-ST-POLS     (P3)
1 #NUM-ACT-POLS    (P3)
1 #NUM-BN-PEND-POLS (P3)
1 #COMMA       (A1) INIT <','>
1 #UPDATE-OK   (L)
1 #SD-SUFF     (A15)
1 #SUFFIX      (A3)
1 REDEFINE #SUFFIX
  2 #SUFF-2     (A2)
  2 #SUFF-3     (N1)
1 #NO-MAP      (L)
1 #PARENT-CID       (N8)                 /* PM10
1 #REL-CID          (N8)                 /* PM10
1 #MODE             (A1)                 /* PM10
1 #MSG              (A72)                /* PM10
1 #LOADED           (L)                  /* PM10
1 #DATABASE         (N3)                 /* PM18
*
1 #NEW-BENE-PROCESSING     (L)           /* DW8
1 #PARM-BENEFICIARY-INFORMATION          /* YK1
  2 ##CGA-ISN               (P8)
  2 ##CGA-SCR-COMMAND       (A2)
  2 ##CGA-SCR-ID            (N9)
  2 ##CGA-ID                (N6)
  2 ##CGA-SCR-SUFFIX        (A3)
  2 #POLICY-PRINT           (L)          /* YK1       DW8
1 #BENEFICIARY-INFORMATION               /* YK1
  2 BEN-ID-NUMBER          (N6)
2 NOTE-DATE          (N8/60)           /* LET P/A = PRIMARY/ALTERNATE DESING
  2 NOTE-TEXT          (A60/60)
  2 REDEFINE NOTE-TEXT /* below layout must match E4750SBD
    3 NT-CN     (N6)
    3 NT-ISS-DT (N8)
    3 NT-PLAN   (A3)
    3 NT-TYPE   (A1)     /* bene-type of primary bene
    3 NT-NEW-LAYOUT (A1) /* new layout indicator of primar
    3 NT-NUM-LINES (N3)  /* # of lines entered below
    3 NT-BENE-SHO  (A79/40)
    3 REDEFINE NT-BENE-SHO
      4 NT-BENE-SHO-OCC  (40)
        5 NT-BENE-SHO-1ST-1    (A1) /* "~" indicates raw new format
        5 NT-BENE-SHO-AFTER-1  (A78)      /* bene data
*
1 #BENE-NAME                (A)  DYNAMIC /* PM23
*
END-DEFINE
* * * * * * * * *
*
IF *DATA NE 0                            /* YK1
  INPUT #PARM-BENEFICIARY-INFORMATION
  #CGA-ISN := ##CGA-ISN
  #CGA-SCR-COMMAND := ##CGA-SCR-COMMAND
  #CGA-SCR-ID := ##CGA-SCR-ID
  #CGA-ID := ##CGA-ID
  #CGA-SCR-SUFFIX := ##CGA-SCR-SUFFIX
  MOVE TRUE TO #NEW-BENE-PROCESSING                     /* DW8
  RELEASE STACK
ELSE   /* NG5
  MOVE #CGA-SCR-SUFFIX TO #SUFFIX
  IF SUBSTR(#CGA-SCR-SUFFIX,3,1) IS (N1)
    IGNORE
  ELSE
    IF #CGA-ID LT 700000
      FETCH RETURN 'E4701PBD'
    END-IF
  END-IF
END-IF                                  /* YK1
*****************
/*
FETCH 'E4700PBD'
/*
INCLUDE GONERCXX
IF #CGA-SCR-SUFFIX = 'NEW' OR = 'CNN'
  MOVE 'NEW/CNN no longer valid' TO #TEXT
  INPUT TEXT #TEXT USING MAP 'E4700MBD'
  FETCH 'G1000PXX'
END-IF
*
MOVE #CGA-SCR-SUFFIX TO #SUFFIX
IF #SUFFIX = 'CON' OR = 'CNO' OR = 'FRM'
  MOVE TRUE TO #CON
END-IF
*
MOVE *DATN TO #YYYYMMDD
COMPRESS #MM #DD #YYYY INTO #TODAY-MMDDYYYY-DISP WITH '/'
COMPRESS #MM #DD #YYYY INTO #TODAY-MMDDYYYY LEAVING NO
*
IF   (*DEVICE NE 'BATCH')
    AND ((#SUFF-2 = 'BN') OR (#SUFFIX = 'FIR'))
  RESET #CGA-SCR-SUFFIX #SUFFIX
END-IF
*
*   build policy table *
GET ST-V #CGA-ISN
*
IF WIDOW-FLAG = 'Y'
  FIND NOT-V WITH ID-NUMBER = ST-V.ID-NUMBER
    FOR #I1 1 TO 60
      IF NOT-V.NOTE-TEXT (#I1) = MASK ('*EDS BENEFICIARY DATA VAL')
        MOVE NOT-V.NOTE-TEXT (#I1) TO #EDS-DATA-VAL
        MOVE NOT-V.NOTE-TEXT-LST-43 (#I1) TO #DATA-VAL    /* DW3
      END-IF
*
      IF NOT-V.NOTE-TEXT (#I1) = MASK ('*BD BENEFICIARY INFO READY')
        MOVE NOT-V.NOTE-TEXT (#I1) TO #EDS-DATA-VAL
        MOVE NOT-V.NOTE-TEXT (#I1) TO #DATA-VAL
        MOVE #I1 TO #BD-READY-X
        MOVE NOT-V.NOTE-CLERK-ID (#I1) TO #BD-READY-INIT
      END-IF
    END-FOR
  END-FIND
END-IF
*
#CON-NAME := FUNCTION-CONTACT-NAME(<ST-V.MEMBER-CONTACT-ID>)   /* PM20
#NAME     := #CON-NAME                                         /* PM20
*
* MOVE ST-V.ZIP-CODE TO #ZIP-CODE                              /* NG3
#ZIP-CODE := GET-ZIP-CODE (< ST-V.MEMBER-CONTACT-ID >)         /* NG3
*
IF   (*DEVICE NE 'BATCH')
    AND (#CGA-SCR-COMMAND = 'BD') /* not returning from NS
    AND (NOT #SUFFIX  = 'WP' OR = 'PDF' OR = 'BLK')
    AND (NOT #CON)
    AND (NOT #SUFF-2 = 'DO' OR = 'SH')
*    AND (NOT #CGA-CLERK = 'DRW')      /* DW2                   /* vt 06/26/2013
  MOVE '*' TO #CGA-SCR-COMMAND
  FETCH 'G4020PNS'
END-IF
MOVE 'BD' TO #CGA-SCR-COMMAND
*
** #UPDATE-OK := BD-SECURITY (< #CGA-CLERK >)   NG5
RESET #UPDATE-OK                            /*  NG5
*
MOVE #NAME TO #SCR-NAME
*
MOVE (AD=P) TO #SCR-LINKED-CV (*)
FOR #I1 = 1 TO 9
  IF ((#SUFF-2 = 'PU' OR = 'SH') /* SHOW TERMED POLS
      AND (NOT STATUS (#I1) = 'D' OR = 'E' OR = 'F'))
      OR ((NOT #SUFF-2 = 'PU' OR = 'SH') AND (STATUS (#I1) NE 'D'))
    ESCAPE TOP
  END-IF
*
  IF STATUS (#I1) = 'D'
    ADD 1 TO #NUM-ACT-POLS
  END-IF
*
  MOVE PLAN (#I1) TO #PLAN
  IF PAY-STATUS (#I1) = '47'
    MOVE 'SP' TO #PLAN-2
  END-IF
*
  CALLNAT 'GPLNMSXX' #WORK-POL-NUM ID-NUMBER #I1 /* build POL-#
*
  IF ST-V.ISSUE-DATE (#I1) GE 19941201
    COMPRESS #WORK-POL-NUM '*' ST-V.FACE-AMT-K (#I1) 'K' #PLAN-2
      INTO #WORK-POL-NUM LEAVING NO
  END-IF
*
  ADD 1 TO #I3
  MOVE LEFT #WORK-POL-NUM TO #POL-NUM (#I3)
  MOVE ST-V.ISSUE-DATE (#I1) TO #YYYYMMDD
  COMPRESS #MM #DD #YYYY INTO #ISS-DT-DISP (#I3) WITH '/'
  MOVE ST-V.ISS-DT-YYMMDD (#I1) TO #ISS-DT (#I3)
  MOVE ST-V.SPLIT-IND  (#I1) TO #SPLIT-IND (#I3)
  MOVE ST-V.STATUS     (#I1) TO #STATUS (#I3)
  MOVE (AD=I) TO #SCR-LINKED-CV (#I3)
END-FOR
MOVE #I3 TO #NUM-ST-POLS
*
IF #CGA-ID LT 700000
  #FINAL-BENE-NT-REC-NUM := #CGA-ID     /* NG2 Start
  CALLNAT 'E4700NBD'
    #GET
    #FINAL-BENE-NT-REC-NUM
    #SUFF-3                             /* NG5
    #FINAL-BENE-NT-REC-FND
    #FINAL-NT-ISN
    #NUM-BN-PEND-POLS
    #PEND-BENE-NT-REC-NUM
    #PEND-BENE-NT-REC-FND
    #PEND-NT-ISN
    #TEMPDATA                           /* NG5
  IF #FINAL-NT-ISN <= 0  /* No final designation found
    ESCAPE ROUTINE
  END-IF
END-IF
*                                          NG2 End
IF DATE-OF-DEATH NE 0
  MOVE DATE-OF-DEATH TO #YYYYMMDD
  COMPRESS #MM #DD #YYYY INTO #TEXT WITH '/'
  COMPRESS 'Mbr DOD' #TEXT INTO #TEXT
  IF #DATA-VAL NE ' '                                   /* DW3
    COMPRESS #TEXT #DATA-VAL INTO #TEXT
  END-IF
ELSE
  IF #NUM-ACT-POLS = 0
    MOVE 'All pols are terminated' TO #TEXT
  END-IF
END-IF
*
RESET #SEG-X                        /* DW3
CALLNAT 'GCONTSXX' ST-V.ID-NUMBER #SEG-X #HAS-CONTESTABILITY
  #NO-LONGER-CONTESTABLE #CONTESTABLE-BUT-PAID     /* DW4 DW7
IF #HAS-CONTESTABILITY
  COMPRESS #TEXT 'Has a Contestable Death Claim' INTO #TEXT
END-IF
*
IF #CON
    AND #PEND-BENE-NT-REC-FND
  MOVE TRUE TO #CON-PEND
END-IF
*
IF (#SUFF-2 = 'SH') AND ((*DEVICE = 'BATCH')
*     OR #POLICY-PRINT)  /* YK1
    OR #NEW-BENE-PROCESSING)                /* DW8
  RESET #PEND-BENE-NT-REC-FND
END-IF
*
* *  build current bene list * *
IF *DEVICE NE 'BATCH' AND (NOT #NEW-BENE-PROCESSING)      /* YK1  DW8
  MOVE (AD=P) TO #CUR-BENE-SEL-CV (*)
  IF #PEND-BENE-NT-REC-FND AND #FINAL-BENE-NT-REC-FND
    MOVE 'CURRENT DESIGNATIONS FOR ABOVE PENDINGS' TO #CUR-BENE-LBL
    GET NT-V #FINAL-NT-ISN
*
    RESET #CUR-X
    FOR #I1 1 TO 6   /* 6 DESIGs
      IF NT-V.BENE-ISS-DT (#I1, 1) = 0
        ESCAPE TOP
      END-IF
*
      ADD 1 TO #CUR-X
      RESET #CUR-BENE-SEL-CV      (#CUR-X)
      MOVE (AD=I) TO #CUR-BENE-CV (#CUR-X)
      MOVE 'CURRENT' TO #CUR-BENE-PENDING (#CUR-X)
*
      RESET #CUR-POL-X
      FOR #I2 1 TO 7  /* 7 pols for each desig
        IF NT-V.BENE-ISS-DT (#I1, #I2) = 0
          ESCAPE TOP
        END-IF
*
        ADD 1 TO #CUR-POL-X
        MOVE TRUE TO #CUR-BENE-EXISTS (#CUR-X)
        RESET #CUR-BENE-FOUND
        FOR #I3 1 TO 9  /* hunt for matching iss-dt from stat file
          IF   (NT-V.BENE-ISS-DT    (#I1, #I2) = #ISS-DT    (#I3))
              AND ((NT-V.BENE-SPLIT-IND (#I1, #I2) = #SPLIT-IND (#I3))
              OR (((NT-V.BENE-SPLIT-IND (#I1, #I2) = 0)
              AND (#SPLIT-IND (#I3) = 1))))
            MOVE #POL-NUM (#I3)
              TO #CUR-POL-NUM-LINKED(#CUR-X, #CUR-POL-X)
            MOVE #ISS-DT-DISP (#I3)
              TO #CUR-DT-LINKED-DISP (#CUR-X, #CUR-POL-X)
            MOVE #ISS-DT    (#I3)
              TO #CUR-DT-LINKED   (#CUR-X, #CUR-POL-X)
            MOVE #SPLIT-IND (#I3)
              TO #CUR-SPLIT-IND-LINKED(#CUR-X, #CUR-POL-X)
            MOVE #I1 TO #CUR-BENE-X (#CUR-X)
            MOVE TRUE TO #CUR-BENE-FOUND
            ESCAPE BOTTOM
          END-IF
        END-FOR
*
        IF NOT #CUR-BENE-FOUND
          MOVE NT-V.BENE-ISS-DT (#I1, #I2) TO #YYYYMMDD
*
          IF #YY-N GT 20
            MOVE 19 TO #CENT-N
          ELSE
            MOVE 20 TO #CENT-N
          END-IF
*
          COMPRESS #MM #DD #YYYY
            INTO #CUR-DT-LINKED-DISP (#CUR-X, #CUR-POL-X) WITH '/'
          COMPRESS '??' #CUR-DT-LINKED-DISP (#CUR-X, #CUR-POL-X)
            INTO #CUR-POL-NUM-LINKED(#CUR-X, #CUR-POL-X) LEAVING NO
        END-IF
      END-FOR
    END-FOR
  END-IF
END-IF
* * *  build pending bene list * * *
*
MOVE (AD=P) TO #SCR-BENE-SEL-CV (*)
IF #PEND-BENE-NT-REC-FND OR #FINAL-BENE-NT-REC-FND
    AND (#SUFFIX NE 'BNB')     /* blank does not need bene rec
  IF   (#PEND-BENE-NT-REC-FND)
      AND (NOT #SUFFIX = 'BND' OR = 'BNA' OR = 'BNC'  /* USE FINAL
      OR = 'FIR')
    GET NT-V #PEND-NT-ISN
  ELSE
    IF #FINAL-BENE-NT-REC-FND
      GET NT-V #FINAL-NT-ISN
    END-IF
  END-IF
*
  RESET #SCR-X
  FOR #I1 1 TO 6   /* 6 DESIGs
    IF NT-V.BENE-ISS-DT (#I1, 1) = 0
      ESCAPE TOP
    END-IF
*
    ADD 1 TO #SCR-X
    MOVE (AD=I) TO #SCR-BENE-CV (#SCR-X)
*
    IF BENE-STATUS (#I1) = 'P'
      MOVE 'PENDING' TO #SCR-BENE-PENDING (#SCR-X)
      IF #UPDATE-OK
        RESET #SCR-BENE-SEL-CV (#SCR-X)
      END-IF
    ELSE
      MOVE 'FINALIZED' TO #SCR-BENE-PENDING (#SCR-X)
      RESET #SCR-BENE-SEL-CV (#SCR-X)
    END-IF
*
    RESET #SCR-POL-X
    RESET #BENE-FOUND
    FOR #I2 1 TO 7  /* 7 pols for each desig
      IF NT-V.BENE-ISS-DT (#I1, #I2) = 0
        ESCAPE TOP
      END-IF
*
      ADD 1 TO #SCR-POL-X
      MOVE TRUE TO #BENE-EXISTS (#SCR-X)
      RESET #BENE-FOUND-X
      FOR #I3 1 TO 9  /* hunt for matching iss-dt from status file
        IF   (NT-V.BENE-ISS-DT    (#I1, #I2) = #ISS-DT    (#I3))
            AND ((NT-V.BENE-SPLIT-IND (#I1, #I2) = #SPLIT-IND (#I3))
            OR (((NT-V.BENE-SPLIT-IND (#I1, #I2) = 0)
            AND (#SPLIT-IND (#I3) = 1))))
          MOVE #POL-NUM (#I3) TO #SCR-POL-NUM-LINKED(#SCR-X, #SCR-POL-X)
          MOVE #ISS-DT-DISP (#I3)
            TO #ISS-DT-LINKED-DISP (#SCR-X, #SCR-POL-X)
          MOVE #ISS-DT    (#I3) TO #ISS-DT-LINKED   (#SCR-X, #SCR-POL-X)
          MOVE #SPLIT-IND (#I3) TO #SPLIT-IND-LINKED(#SCR-X, #SCR-POL-X)
          MOVE #I1 TO #HOLD-BENE-X (#SCR-X)
          MOVE TRUE TO #POL-BENE-FOUND (#I3)
*
          IF (#SUFF-2 = 'SH') AND (STATUS (#I3) NE 'D')  /* DW99
            IGNORE                                       /* DW99
          ELSE                                           /* DW99
            MOVE TRUE TO #BENE-FOUND #BENE-FOUND-X
          END-IF                                         /* DW99
*
          ESCAPE BOTTOM
        END-IF
      END-FOR
*
      IF NOT #BENE-FOUND-X
        MOVE #I1 TO #HOLD-BENE-X (#SCR-X)
        MOVE NT-V.BENE-ISS-DT (#I1, #I2) TO #YYYYMMDD
*
        IF #YY-N GT 20
          MOVE 19 TO #CENT-N
        ELSE
          MOVE 20 TO #CENT-N
        END-IF
*
        COMPRESS #MM #DD #YYYY
          INTO #ISS-DT-LINKED-DISP (#SCR-X, #SCR-POL-X) WITH '/'
        COMPRESS '??' #ISS-DT-LINKED-DISP (#SCR-X, #SCR-POL-X)
          INTO #SCR-POL-NUM-LINKED(#SCR-X, #SCR-POL-X) LEAVING NO
      END-IF
    END-FOR
*
    IF NOT #BENE-FOUND
      MOVE 'NOT IN FORCE' TO #SCR-BENE-PENDING (#SCR-X)
    END-IF
  END-FOR
END-IF
*
IF (*DEVICE = 'BATCH') OR #NEW-BENE-PROCESSING                /* YK1  DW8
  IF #SUFFIX = 'BNB' OR = 'BNA' OR = 'BNC'
    MOVE #SUFFIX TO #HOLD-SUFFIX
    MOVE 'BNB' TO #SUFFIX /* to force a "blank" desig form
    FOR #I1 1 TO 9
      IF #ISS-DT (#I1) NE 0
        MOVE 'X' TO #POL-BENE-SEL (#I1)
      END-IF
    END-FOR
*
    PERFORM SHOW-FORM
    MOVE #HOLD-SUFFIX TO #SUFFIX
    IF #SUFFIX = 'BNB'
      END TRANSACTION
      ESCAPE ROUTINE
    END-IF
  END-IF
*
  IF   (#SUFFIX = 'BNF' OR = 'BNN' OR = 'BNL' OR = 'BNT')
      AND (NOT #PEND-BENE-NT-REC-FND)
    WRITE (2) #CGA-ID 'MR BNF requested but no pending desig recs'
    END TRANSACTION
    ESCAPE ROUTINE
  END-IF
*
  IF (#SUFFIX = 'BND' OR = 'BNA' OR = 'BNC' OR = 'FIR')
      AND (NOT #FINAL-BENE-NT-REC-FND)
    WRITE (2) #CGA-ID #SUFFIX 'REQUESTED BUT NO FINAL DESIG RECS'
    END TRANSACTION
    ESCAPE ROUTINE
  END-IF
*
  RESET #DESIG-CNT
  FOR #I1 1 TO 6
    RESET #POL-BENE-SEL (*) #DO-SH
*
    IF   (NT-V.BENE-ISS-DT (#I1, 1) NE 0) /* added 7/3/2002
        AND (((#SUFFIX = 'BND' OR = 'BNA' OR = 'BNC' OR = 'FIR')
        AND (NT-V.BENE-TYPE (#I1, 1) NE ' '))
        OR (#SUFF-2 = 'SH')
        OR (NT-V.BENE-STATUS (#I1) = 'P'))
      FOR #I2 1 TO 2
        IF NT-V.BENE-TYPE (#I1, #I2) = 'M'
          WRITE (2) ID-NUMBER '**BYPASSED MANUAL DESIGNATIONS EXIST**'
          END TRANSACTION
          ESCAPE ROUTINE
        END-IF
      END-FOR
*
      MOVE #I1 TO #DES-SEL
*
      FOR #I2 1 TO 7  /* 7 pols from desigs
        FOR #I3 1 TO 9  /* 9 pols from file table
          IF   (BENE-ISS-DT (#I1, #I2) NE 0)
              AND (BENE-ISS-DT (#I1, #I2) = #ISS-DT (#I3))
              AND ((BENE-SPLIT-IND (#I1, #I2) = #SPLIT-IND (#I3))
              OR (((NT-V.BENE-SPLIT-IND (#I1, #I2) = 0)
              AND (#SPLIT-IND (#I3) = 1))))
            IF (#SUFF-2 = 'SH') AND (#I3 = #SUFF-3)
              MOVE TRUE TO #DO-SH
            END-IF
            MOVE 'X' TO #POL-BENE-SEL (#I3) /* USED By E4750SBD
            ESCAPE BOTTOM
          END-IF
        END-FOR
      END-FOR
*
      IF (#SUFF-2 = 'SH') AND (NOT #DO-SH)
        END TRANSACTION
        ESCAPE TOP
      END-IF
*
      FOR #I2 1 TO 2     /* prim/alternate
        MOVE NT-V.BENE-TYPE      (#I1, #I2) TO #SCR-TYPE      (#I2)
        MOVE NT-V.BENE-SHARE-TYP (#I1, #I2) TO #SCR-SHARE-TYP (#I2)
*
        FOR #I3 1 TO 5
          MOVE NT-V.BENE-TEXT (#I1, #I2, #I3) TO #SCR-DESIG (#I2, #I3)
#SCR-BENE-CONTACT-ID (#I2, #I3)     := NT-V.BENE-CONTACT-ID-R (#I1,#I2,#I3)   /* PM10
IF #SCR-BENE-CONTACT-ID (#I2,#I3) NE 0                                        /* PM10
#SCR-BENE-CT-IND (#I2,#I3)        := '#'                                    /* PM10
ELSE                                                                          /* PM10
RESET #SCR-BENE-CT-IND (#I2,#I3)                                            /* PM10
END-IF                                                                        /* PM10
        END-FOR
      END-FOR
      MOVE NT-V.BENE-NEW-LAYOUT(#I1) TO #SCR-NEW-LAYOUT
      MOVE NT-V.BENE-COM-DIS   (#I1) TO #SCR-COM-DIS
*
      IF NT-V.BENE-PER-STR (#I1) = 1
        MOVE 'Y' TO #SCR-PER-STR
      ELSE
        RESET #SCR-PER-STR
      END-IF
*
      IF #SCR-NEW-LAYOUT = 1
        MOVE TRUE TO #NEW-LAYOUT
      ELSE
        MOVE TRUE TO #OLD-LAYOUT
      END-IF
*
      MOVE  #SCR-DESIG-2-LST-35 (2, 5) TO  #SCR-OWNER
      IF #TEMPDATA   /* NG5
        CALLNAT 'POSN0016' #FINAL-NT-ISN #ISS-DT-OCC (*)
          #SCR-OWNER #YYYYMMDD
      END-IF
      RESET #SCR-DESIG-2-LST-35 (2, 5)
      MOVE NT-V.BENE-LST-UPD (#I1) TO #LST-UPD
*
      IF #SCR-OWN-6A (1) = MASK (NNNNNN) /* to show contact entity
        PERFORM GET-1ST-CONTACT-ENTITY
        PERFORM GET-ALL-CONTACT-ENTITIES
      END-IF
*
      ADD 1 TO #DESIG-CNT
*
      IF   (#SUFFIX = 'BNT' OR = 'BNN' OR = 'BNL')
          AND (*DEVICE = 'BATCH')
        MOVE 'E4751SBD' TO #CALL-PGM
        PERFORM SHOW-FORM
      END-IF
*
      MOVE 'E4750SBD' TO #CALL-PGM
      PERFORM SHOW-FORM
    END-IF
  END-FOR
*
  IF (#SUFFIX = 'BNP') AND (#DESIG-CNT = 0)
    MOVE 'BNB' TO #SUFFIX
    FOR #I1 1 TO 9
      IF #ISS-DT (#I1) NE 0
        MOVE 'X' TO #POL-BENE-SEL (#I1)
      END-IF
    END-FOR
*
    PERFORM SHOW-FORM
    MOVE 'BNP' TO #CGA-SCR-SUFFIX
    END TRANSACTION
    ESCAPE ROUTINE
  END-IF
*
  IF (#SUFFIX = 'BNF') AND (#DESIG-CNT = 0)
    WRITE (2) ID-NUMBER 'MR BEN requested but no pending designations'
  END-IF
*
  END TRANSACTION
  IF #NEW-BENE-PROCESSING                                   /* DW8
    STACK DATA FORMATTED #BENEFICIARY-INFORMATION  /* YK1
  END-IF
  ESCAPE ROUTINE /* go back to batch driver
END-IF
*
FOR #I1 1 TO 9
  IF   (#ISS-DT (#I1) NE 0)
      AND (NOT #POL-BENE-FOUND (#I1))
      AND (#SCR-X LT 6)
    ADD 1 TO #SCR-X
    RESET #SCR-BENE-SEL-CV (#SCR-X)
    MOVE (AD=I) TO #SCR-BENE-CV (#SCR-X)
    IF #STATUS (#I1) = 'E' OR = 'F' OR = 'G'
      MOVE 'TERMINATED' TO #SCR-BENE-PENDING (#SCR-X)
    ELSE
      MOVE 'NO RECORD' TO #SCR-BENE-PENDING (#SCR-X)
    END-IF
    MOVE #POL-NUM     (#I1) TO #SCR-POL-NUM-LINKED (#SCR-X, 1)
    MOVE #ISS-DT      (#I1) TO #ISS-DT-LINKED      (#SCR-X, 1)
    MOVE #ISS-DT-DISP (#I1) TO #ISS-DT-LINKED-DISP (#SCR-X, 1)
    MOVE #SPLIT-IND   (#I1) TO #SPLIT-IND-LINKED   (#SCR-X, 1)
  END-IF
END-FOR
* * * *  display bene menu * * * * * * *
*
IF   (#SCR-X = 1)   /* if only 1 menu item
    AND (#CUR-X = 0)
  IF #SUFF-2 = 'DO' /* not SH
    RESET #SUFFIX
  END-IF
*
  MOVE 'X' TO #SCR-POL-SELECT (1)
  IF (NOT #UPDATE-OK)
      AND #PEND-BENE-NT-REC-FND
    MOVE 'Pending Designation is not yet endorsed' TO #TEXT
    INPUT TEXT #TEXT USING MAP 'E4700MBD'
    FETCH 'G1000PXX'
  END-IF
ELSE
  IF ((#SUFFIX = MASK ('DO'N))
      OR (#SUFFIX = MASK ('SH'N)))
      AND (#BENE-EXISTS (#SUFF-3))
    MOVE 'X' TO #SCR-POL-SELECT (#SUFF-3)
    MOVE TRUE TO #NO-MAP
  END-IF
*
  IF NOT #NO-MAP
    MOVE '*' TO #CGA-SCR-COMMAND
    INPUT TEXT #TEXT MARK *#SCR-POL-SELECT (1) USING MAP 'E4700MBD'
    PERFORM CHECK-FOR-AST
  END-IF
END-IF
*
* * * * *  edit bene menu  * * * * * * * *
RESET #ONE-SELECTED
RESET #SELECTED-CUR
RESET #SELECTED-NOT-IN-FORCE
FOR #I1 1 TO 6
  IF   (#SCR-POL-SELECT (#I1) NE ' ')
      AND #ONE-SELECTED
    REINPUT 'Only 1 can be selected'
      MARK *#SCR-POL-SELECT (1)
  END-IF
*
  IF #SCR-POL-SELECT (#I1) NE ' '
    MOVE TRUE TO #ONE-SELECTED
    MOVE #I1 TO #DES-SEL
*
    RESET #FOUND-IN-FORCE
    FOR #I2 1 TO 9
      IF #SCR-POL-NUM-LINKED (#I1, #I2) = MASK ('??')
        IF NOT #FOUND-IN-FORCE
          MOVE TRUE TO #SELECTED-NOT-IN-FORCE
        END-IF
        FOR #I3 9 TO 1 STEP -1
          IF #POL-BENE-SEL (#I3) = ' '
            MOVE 'X' TO #POL-BENE-SEL (#I3)
            MOVE #SCR-POL-NUM-LINKED (#I1, #I2) TO #POL-NUM (#I3)
            ESCAPE BOTTOM
          END-IF
        END-FOR
      ELSE
        IF #SCR-POL-NUM-LINKED (#I1, #I2) NE ' '
          MOVE TRUE TO #FOUND-IN-FORCE
          RESET #SELECTED-NOT-IN-FORCE
        END-IF
      END-IF
    END-FOR
  END-IF
*
  IF   (#CUR-POL-SELECT (#I1) NE ' ')
      AND #ONE-SELECTED
    REINPUT 'Only 1 can be selected'
      MARK *#CUR-POL-SELECT (1)
  END-IF
*
  IF #CUR-POL-SELECT (#I1) NE ' '
    MOVE TRUE TO #ONE-SELECTED
    MOVE TRUE TO #SELECTED-CUR
    MOVE #I1 TO #DES-SEL
  END-IF
END-FOR
*
IF NOT #ONE-SELECTED
  REINPUT 'At least 1 policy must be selected'
    MARK *#SCR-POL-SELECT (1)
END-IF
*
* * *  build update screen * * * * * *
IF #SELECTED-CUR
  GET NT-V  #FINAL-NT-ISN
  MOVE #CUR-DT-LINKED (#DES-SEL, *) TO #ISS-DT-LINKED (#DES-SEL, *)
  MOVE #CUR-SPLIT-IND-LINKED (#DES-SEL, *)
    TO #CUR-SPLIT-IND-LINKED (#DES-SEL, *)
  MOVE #CUR-BENE-EXISTS (*) TO #BENE-EXISTS (*)
  MOVE #CUR-BENE-X      (*) TO #HOLD-BENE-X (*)
END-IF
*
FOR #I1 1 TO 9    /* 9 possible linked policies
  FOR #I2 1 TO 9  /* 9 possible status policies
    IF   (#ISS-DT-LINKED (#DES-SEL, #I1) NE 0)
        AND (#ISS-DT-LINKED (#DES-SEL, #I1) = #ISS-DT (#I2))
        AND ((#SPLIT-IND-LINKED (#DES-SEL, #I1) = #SPLIT-IND (#I2))
        OR (((#SPLIT-IND-LINKED (#DES-SEL, #I1) = 0)
        AND (#SPLIT-IND (#I2) = 1))))
      MOVE 'X' TO #POL-BENE-SEL (#I2)
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-FOR
*
IF (#PEND-BENE-NT-REC-FND OR #FINAL-BENE-NT-REC-FND)
    AND (#BENE-EXISTS (#DES-SEL))
  MOVE #HOLD-BENE-X (#DES-SEL) TO #BENE-X
  MOVE BENE-LST-UPD (#BENE-X) TO #LST-UPD
  MOVE BENE-LST-UPD (#BENE-X) TO #YYYYMMDD
  COMPRESS #MM #DD #YYYY INTO #SCR-LST-UPD WITH '/'
  MOVE NT-V.BENE-RESTRICT (#BENE-X) TO #SCR-BENE-RESTRICT
  MOVE NT-V.BENE-NEW-LAYOUT(#BENE-X) TO #SCR-NEW-LAYOUT
  MOVE NT-V.BENE-COM-DIS   (#BENE-X) TO #SCR-COM-DIS
*
  IF NT-V.BENE-PER-STR (#BENE-X) = 1
    MOVE 'Y' TO #SCR-PER-STR
  ELSE
    RESET #SCR-PER-STR
  END-IF
*
  FOR #I1 1 TO 7
    MOVE NT-V.BENE-ISS-DT (#BENE-X, #I1) TO #HLD-LINKED-POLS (#I1)
  END-FOR
*
  IF #SELECTED-NOT-IN-FORCE
    MOVE 'NOT IN FORCE' TO #SCR-BENE-STATUS
  ELSE
    IF NT-V.BENE-STATUS (#BENE-X) = 'P'
      MOVE 'PENDING' TO #SCR-BENE-STATUS
    ELSE
      MOVE 'FINALIZED' TO #SCR-BENE-STATUS
    END-IF
  END-IF
*
  IF NT-V.BENE-FOL-UP-IND (#BENE-X) = 1
    MOVE '30-day REM sent' TO #SCR-PEND-REM
  END-IF
*
  IF NT-V.BENE-FOL-UP-IND (#BENE-X) = 2
    MOVE '60-day REM sent' TO #SCR-PEND-REM
  END-IF
*
  IF NT-V.BENE-SUC-OWN (#BENE-X) = 1
    MOVE 'Y' TO #SCR-SUC-OWN
  ELSE
    RESET #SCR-SUC-OWN
  END-IF
*
  FOR #I1 1 TO 2     /* prim/alternate
    MOVE NT-V.BENE-TYPE   (#BENE-X, #I1) TO #SCR-TYPE  (#I1)
*
    MOVE '#1' TO #SCR-TRUSTEE-LBL (#I1)
    MOVE '#3' TO #SCR-TRUST-LBL (#I1)
    IF #SCR-TYPE (#I1) = ' ' OR = 'T' OR = 'P' OR = 'K' OR = 'X'
      MOVE '(Trustee(s))'    TO #SCR-TRUSTEE-LBL (#I1)
      MOVE '(Trust Nm & Dt)' TO #SCR-TRUST-LBL (#I1)
    END-IF
*
    MOVE NT-V.BENE-SHARE-TYP (#BENE-X, #I1) TO #SCR-SHARE-TYP (#I1)
    FOR #I2 1 TO 5
      MOVE NT-V.BENE-TEXT (#BENE-X, #I1, #I2) TO #SCR-DESIG (#I1, #I2)
#SCR-BENE-CONTACT-ID (#I1, #I2)         := NT-V.BENE-CONTACT-ID-R (#BENE-X, #I1, #I2)   /* PM10
IF #SCR-BENE-CONTACT-ID (#I1,#I2) NE 0                                                  /* PM10
#SCR-BENE-CT-IND (#I1,#I2)            := '#'                                          /* PM10
ELSE                                                                                    /* PM10
RESET #SCR-BENE-CT-IND (#I1,#I2)                                                      /* PM10
END-IF                                                                                  /* PM10
    END-FOR
*            save current contents
    MOVE NT-V.BENE-TYPE   (#BENE-X, #I1) TO #HLD-TYPE  (#I1)
    MOVE NT-V.BENE-SHARE-TYP   (#BENE-X, #I1) TO #HLD-SHARE-TYP  (#I1)
    MOVE NT-V.BENE-OWN-TRNSF-DT (#BENE-X) TO #HLD-BENE-OWN-TRNSF-DT
    FOR #I2 1 TO 5
      MOVE NT-V.BENE-TEXT (#BENE-X, #I1, #I2) TO #HLD-DESIG (#I1, #I2)
    END-FOR
  END-FOR
*
  MOVE #SCR-BENE-RESTRICT TO #HLD-BENE-RESTRICT
  MOVE #SCR-SUC-OWN       TO #HLD-SUC-OWN
  MOVE #SCR-SETL-OPT      TO #HLD-SETL-OPT
  MOVE #SCR-COM-DIS       TO #HLD-COM-DIS
  MOVE #SCR-PER-STR       TO #HLD-PER-STR
*
  MOVE  #SCR-DESIG-2-LST-35 (2, 5) TO #SCR-OWNER #HLD-OWNER /* PM
  IF #TEMPDATA   /* NG5
    CALLNAT 'POSN0016' #FINAL-NT-ISN #ISS-DT-OCC (*)
      #SCR-OWNER #YYYYMMDD
  ELSE
    IF (#SCR-OWNER NE ' ') AND (NT-V.BENE-OWN-TRNSF-DT (#BENE-X) NE 0)
      MOVE NT-V.BENE-OWN-TRNSF-DT (#BENE-X) TO #YYYYMMDD
    END-IF
  END-IF
  RESET #SCR-DESIG-2-LST-35 (2, 5)
  IF #YYYYMMDD > 0
    COMPRESS #MM #DD #YYYY INTO #SCR-OWN-TRNSF-DT LEAVING NO
    COMPRESS #MM #DD #YYYY INTO #SCR-OWN-TRNSF-DT-DISP WITH '/'
  END-IF
ELSE
  MOVE *DATN TO #LST-UPD
  MOVE '(Trustee(s))'    TO #SCR-TRUSTEE-LBL (*)
  MOVE '(Trust Nm & Dt)' TO #SCR-TRUST-LBL   (*)
  FOR #I1 1 TO 6
    IF NT-V.BENE-ISS-DT (#I1, 1) = 0
      MOVE #I1 TO #BENE-X
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-IF
*
* *  display bene update screen * * * *
IF #CON
  MOVE 'X' TO #SCR-FIN-END
END-IF
*
IF #SCR-OWN-6A (1) = MASK (NNNNNN) /* to show contact entity
  PERFORM GET-1ST-CONTACT-ENTITY
END-IF
*
IF  (NOT #UPDATE-OK)
    OR #SELECTED-CUR
    OR #SELECTED-NOT-IN-FORCE
  MOVE TRUE TO #NO-UPDATE
  MOVE (AD=P) TO #SCR-CV #SCR-LINKED-CV (*) #SCR-FINALIZE-CV
    #APPR-FOR-PAYOUT-CV
    #SCR-DELETE-CV
END-IF
*
IF  #UPDATE-OK                                              /* PM12
    AND (#SUFFIX NE 'PDF')
    AND (#SUFF-2 NE 'SH')
  IF (#CGA-ORIG-SUFFIX = 'OLD' OR = 'CNO')
    MOVE TRUE TO #OLD-LAYOUT
    RESET #SCR-NEW-LAYOUT #SCR-NEW-LAYOUT
  ELSE
    MOVE TRUE TO #NEW-LAYOUT
    MOVE 'New Layout' TO #NEW-LAYOUT-LBL
    MOVE 1 TO #SCR-NEW-LAYOUT
  END-IF
*
  IF   (ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G')
      AND (NT-V.BENE-STATUS (#BENE-X) = ' ')
      AND (NT-V.BENE-TYPE (#BENE-X, 1) = ' ')
    MOVE ST-V.LINKED-CN-A (1) TO #SCR-OWNER
  END-IF
*
  MOVE '*' TO #CGA-SCR-COMMAND
END-IF                                                      /* PM12
*
REPEAT                                                      /* PM12
  IF  #UPDATE-OK
      AND (#SUFFIX NE 'PDF')
      AND (#SUFF-2 NE 'SH')                                      /* PM10
    MOVE NT-V.LST-BD-FINALIZATION-USER TO #LST-UPDT-BD-USER
*   MOVE #TODAY-MMDDYYYY TO #SCR-DATE-SIGNED
*
    IF NOT #SUFFIX = 'PDF' OR = 'BLK'
      #HLD-BENE-NAME (*,*)     := #SCR-BN-NAME (*,*)        /* PM10
      #HLD-BN-SSN    (*,*)     := #SCR-BN-SSN (*,*)         /* PM10
      #HLD-BN-REL    (*,*)     := #SCR-BN-REL (*,*)         /* PM10
      #HLD-BN-DOB    (*,*)     := #SCR-BN-DOB (*,*)         /* PM10
*
      SET KEY ALL                                           /* PM10
      PERFORM TYPE-FREE
      IF #OLD-LAYOUT  /* OLD/OLD
          OR (#TYP-1-FREE AND #TYP-2-FREE)
        INPUT TEXT #TEXT MARK *#POL-BENE-SEL (1) USING MAP 'E4710MBD'
      ELSE
        IF NOT #TYP-1-FREE AND NOT #TYP-2-FREE /* NEW/NEW
          INPUT TEXT #TEXT MARK *#POL-BENE-SEL (1) USING MAP 'E4711MBD'
        ELSE
          IF NOT #TYP-1-FREE AND #TYP-2-FREE /* NEW/OLD
           INPUT TEXT #TEXT MARK *#POL-BENE-SEL (1) USING MAP 'E4712MBD'
          ELSE  /* OLD/NEW
           INPUT TEXT #TEXT MARK *#POL-BENE-SEL (1) USING MAP 'E4713MBD'
          END-IF
        END-IF
      END-IF
    END-IF
    PERFORM CHECK-FOR-AST
*
    IF *PF-KEY = 'PF4'                                       /* PM10
      PERFORM CHECK-FOR-DETAIL                               /* PM10
      ESCAPE TOP                                             /* PM10
    END-IF                                                   /* PM10
*
    IF   (#SCR-OWN-6A (1) = MASK (NNNNNN))
        AND (#SCR-OWN-6N (1) = 999999)
      IF NOT (#PEND-BENE-NT-REC-FND OR #FINAL-BENE-NT-REC-FND)
        REINPUT 'Bene record must exist to use "999999"'
          MARK *#SCR-OWNER
      END-IF
*
      MOVE 'NM'  TO #CGA-SCR-COMMAND
      RESET         #CGA-SCR-ID
      MOVE 'CN*' TO #CGA-SCR-SUFFIX
      MOVE ST-V.ID-NUMBER TO #CGA-SCR-ID
      MOVE NT-V.ID-NUMBER TO #CGA-MF-SCR-PARM-1
      MOVE #BENE-X        TO #CGA-MF-SCR-COMMAND
      END TRANSACTION
      FETCH 'G1000PXX'
    END-IF
  END-IF
*
  RESET #LOADED
  FOR #I1 1 TO 2                                             /* PM10
    FOR #I2 1 TO 5                                           /* PM10
IF #SCR-TYPE (#I1) = 'I' OR = 'C' OR = 'P'             /* PM10 FREE-FORM
        ESCAPE TOP
      END-IF                                                 /* PM10
*
      IF #SCR-BN-REL (#I1,#I2) = '*'                         /* PM10
        MOVE #SCR-BN-REL (#I1,*) TO #BD-REL (*)              /* PM10
        MOVE #SCR-BN-NAME(#I1,*) TO #BD-NAME(*)              /* PM10
        MOVE #SCR-BN-SSN (#I1,*) TO #BD-SSN (*)              /* PM10
        MOVE #SCR-BN-DOB (#I1,*) TO #BD-DOB (*)              /* PM10
        #BD-CONTACT-ID (*) := #SCR-BENE-CONTACT-ID (#I1,*)   /* PM10
*
        CALLNAT 'E4703SBD'  /* fill in SPS & depn info       /* PM10
          #CGA-ID #I1 #I2                                    /* PM10
          ST-V.MEMBER-CONTACT-ID                             /* PM10
          #BD-REL  (1:5)                                     /* PM10
          #BD-NAME (1:5)                                     /* PM10
          #BD-SSN  (1:5)                                     /* PM10
          #BD-DOB  (1:5)                                     /* PM10
          #BD-CONTACT-ID (1:5)                               /* PM10
          #BD-GENDER (1:5)                                   /* PM10
*
        MOVE #BD-REL (*) TO #SCR-BN-REL (#I1,*)              /* PM10
        MOVE #BD-NAME(*) TO #SCR-BN-NAME(#I1,*)              /* PM10
        MOVE #BD-SSN (*) TO #SCR-BN-SSN (#I1,*)              /* PM10
        MOVE #BD-DOB (*) TO #SCR-BN-DOB (#I1,*)              /* PM10
        #SCR-BENE-CONTACT-ID (#I1,*) := #BD-CONTACT-ID (*)   /* PM10
*
        #LOADED := TRUE                                      /* PM10
      END-IF                                                 /* PM10
    END-FOR                                                  /* PM10
  END-FOR                                                    /* PM10
*
  IF #LOADED                                                 /* PM10
    ESCAPE TOP                                               /* PM10
  END-IF                                                     /* PM10
*
  IF (#NO-UPDATE AND (#SCR-DELETE NE 'Y'))
      OR (#SUFFIX = 'PDF' OR = 'BLK')
      OR (#SUFF-2 =  'SH') /* DO NOT REMOVE
    PERFORM GET-ALL-CONTACT-ENTITIES
*
    RESET #NEW-LAYOUT
    IF #SCR-NEW-LAYOUT = 1
      MOVE TRUE TO #NEW-LAYOUT
    END-IF
*
    PERFORM SHOW-FORM
*
    IF #CGA-SCR-COMMAND = '*' OR = 'BD'
      MOVE 'BD' TO #CGA-SCR-COMMAND
      RESET #CGA-SCR-SUFFIX #CGA-ORIG-SUFFIX
*
      IF   (#SUFF-2 = 'DO')
          AND (#DES-SEL LT 6)
        ADD 1 TO #DES-SEL
        COMPRESS #SUFF-2 #DES-SEL INTO #CGA-SCR-SUFFIX LEAVING NO
      END-IF
    END-IF
*
    FETCH 'G1000PXX'
  END-IF
*
* *  edit update screen  * *
  RESET #NUM-POLS-SELECTED
  FOR #I1 1 TO 9
    IF #POL-BENE-SEL (#I1) NE ' '
      ADD 1 TO #NUM-POLS-SELECTED
    END-IF
  END-FOR
*
  IF #NUM-POLS-SELECTED = 0
    REINPUT 'At least 1 policy must be linked'
      MARK *#POL-BENE-SEL (1)
  END-IF
*
  IF #NUM-POLS-SELECTED GT 7
    REINPUT 'Only 7 Policies can be linked'
      MARK *#POL-BENE-SEL (1)
  END-IF
*
  FOR #I1 1 TO 2
    IF #NEW-LAYOUT
      IF (NOT #SCR-TYPE (#I1) = 'B' OR = 'S' OR = 'P' OR = 'I' OR = 'F'
          OR = 'A' OR = 'C' OR = 'T' OR = ' ')
          AND (#SCR-TYPE (1) NE 'A')
        REINPUT
          'Types must be "B/S/P/I/F/T" for new layout or "A/C" in Alt'
          MARK *#SCR-TYPE (#I1)
      END-IF
*
      FOR #I2 1 TO 5
        IF #SCR-TYPE (#I1) = 'I' OR = 'C' OR = 'P' /* FREE-FORM
          ESCAPE TOP
        END-IF
        IF   (#SCR-BN-NAME (#I1, #I2) = ' ')
            AND (#SCR-BN-REL  (#I1, #I2) = ' ')
RESET #SCR-BENE-CONTACT-ID (#I1,#I2)                               /* PM10
          ESCAPE TOP
        END-IF
*
IF #SCR-BENE-CONTACT-ID (#I1,#I2) NE 0                                /* PM10
DECIDE FOR FIRST CONDITION                                          /* PM10
WHEN #HLD-BENE-NAME (#I1,#I2) NE ' '                              /* PM10
AND #HLD-BN-SSN (#I1,#I2) NE #SCR-BN-SSN (#I1,#I2)               /* PM10
 REINPUT 'Please use CB to update beneficiary information'       /* PM10
 MARK *#SCR-BN-SSN (#I1,#I2)                                     /* PM10
WHEN #HLD-BENE-NAME (#I1,#I2) NE ' '                              /* PM10
AND #HLD-BN-DOB (#I1,#I2) NE #SCR-BN-DOB (#I1,#I2)               /* PM10
 REINPUT 'Please use CB to update beneficiary information'       /* PM10
 MARK *#SCR-BN-DOB (#I1,#I2)                                     /* PM10
WHEN NONE                                                         /* PM10
 IGNORE                                                          /* PM10
END-DECIDE                                                          /* PM10
*
#SCR-BENE-CT-IND (#I1,#I2) := '#'                                   /* PM10
ELSE                                                                  /* PM10
RESET #SCR-BENE-CT-IND (#I1,#I2)                                    /* PM10
END-IF                                                                /* PM10
*
RESET #ORG                                                            /* PM17
IF #SCR-BENE-CONTACT-ID (#I1,#I2) NE 0                                /* PM17
FIND (1) CT-V WITH CT-V.CONTACT-ID = #SCR-BENE-CONTACT-ID (#I1,#I2) /* PM17
IF CT-V.CONTACT-TYPE = 'O'                                        /* PM17
 #ORG := TRUE                                                    /* PM17
END-IF                                                            /* PM17
END-FIND                                                            /* PM17
END-IF                                                                /* PM17
*
IF NOT #ORG                                                           /* PM17
          CALLNAT 'GNAMESXX' #SCR-BN-NAME (#I1, #I2) #EDIT-FLAG
          IF #EDIT-FLAG = 'N'
            REINPUT 'Invalid Name Format'
              MARK *#SCR-BN-NAME (#I1, #I2)
          END-IF
END-IF                                                                /* PM17
*
        IF #SCR-BN-REL (#I1, #I2) NE ' '
          CALLNAT 'GRELASXX' #SCR-BN-REL (#I1, #I2)
            #REL-DISP #INVALID #ERR-MSG
          IF #INVALID
            REINPUT USING HELP
              MARK *#SCR-BN-REL (#I1, #I2)
          END-IF
        END-IF
*
        IF #SCR-BN-SSN (#I1, #I2) NE ' '
          IF (#SCR-BN-SSN (#I1, #I2) NE MASK (NNNNNNNNN))
            REINPUT 'SSN must be 9 Numbers'
              MARK *#SCR-BN-SSN (#I1, #I2)
          END-IF
        END-IF
*
        RESET #GOOD-SHARE
        IF #SCR-BN-SHARE (#I1, #I2) NE ' '
          FOR #I3 1 TO 10
            IF #SCR-BN-SHARE-X (#I1, #I2, #I3) = '/'
              IF   (#I3 = 2)
                  AND (#SCR-BN-SHARE-X (#I1, #I2, #I3 - 1) = MASK (N))
                  AND (#SCR-BN-SHARE-X (#I1, #I2, #I3 + 1) = MASK (N))
                  AND ((#SCR-BN-SHARE-X (#I1, #I2, #I3 + 2) = MASK (N))
                  OR  (#SCR-BN-SHARE-X (#I1, #I2, #I3 + 2) = ' '))
                MOVE TRUE TO #GOOD-SHARE
                ESCAPE BOTTOM
              END-IF
            END-IF
*
            IF #SCR-BN-SHARE-X (#I1, #I2, #I3) = '%'
              IF  (#I3 = 6)
                  AND ((#SCR-BN-SHARE-X (#I1, #I2, #I3 - 4) NE MASK (N))
                  OR  (#SCR-BN-SHARE-X (#I1, #I2, #I3 - 5) NE MASK (N)))
                ESCAPE BOTTOM
              END-IF
*
              IF  (#I3 = 3 OR = 4 OR = 6)
                  AND (#SCR-BN-SHARE-X (#I1, #I2, #I3 - 1) = MASK (N))
                  AND (#SCR-BN-SHARE-X (#I1, #I2, #I3 - 2) = MASK (N))
                MOVE TRUE TO #GOOD-SHARE
                ESCAPE BOTTOM
              END-IF
            END-IF
*
            IF (#SCR-BN-SHARE-X (#I1, #I2, #I3) = '.') /* MAY ALSO BE %
                AND (#I3 GE 4) AND (#I3 LE 8)
              IF  (#SCR-BN-SHARE-X (#I1, #I2, #I3 + 1) NE MASK (N))
                  OR (#SCR-BN-SHARE-X (#I1, #I2, #I3 + 2) NE MASK (N))
                  OR (#SCR-BN-SHARE-X (#I1, #I2, #I3 - 1) NE MASK (N))
                  OR (#SCR-BN-SHARE-X (#I1, #I2, #I3 - 2) NE MASK (N))
                ESCAPE BOTTOM
              END-IF
              MOVE TRUE TO #GOOD-SHARE
              ESCAPE BOTTOM
            END-IF
          END-FOR
*
          IF NOT #GOOD-SHARE
            REINPUT USING HELP
              MARK *#SCR-BN-SHARE (#I1, #I2)
          END-IF
        END-IF
*
        IF #SCR-BN-SET-OPT (#I1, #I2) NE ' '
IF NOT #SCR-BN-SET-OPT(#I1, #I2)= '1' OR = '2' OR = '3' OR = '4' OR = '5' OR = '6'  /* NG1
              OR= 'A' OR = 'B' OR = 'C' OR = 'D'
REINPUT 'Settle Opt must be 1/2/3/4/5/6'                                          /* NG1
              MARK *#SCR-BN-SET-OPT (#I1, #I2)
          END-IF
        END-IF
*
        IF #SCR-BN-RESTRICTION (#I1, #I2) NE ' '
          IF NOT #SCR-BN-RESTRICTION (#I1, #I2)= 'Y' OR = 'N'
            REINPUT 'Restriction must be Y/N'
              MARK *#SCR-BN-RESTRICTION (#I1, #I2)
          END-IF
        END-IF
*
        IF (#SCR-BN-DOB (#I1, #I2) NE ' ')
            AND (#SCR-BN-DOB (#I1, #I2) NE MASK (MMDDYYYY))
          REINPUT 'DOB must be MMDDYYYY'
            MARK *#SCR-BN-DOB (#I1, #I2)
        END-IF
      END-FOR
    END-IF
*
    IF (#I1 = 2) AND (#SCR-TYPE (#I1) = 'A')
        AND NOT #NEW-LAYOUT
      MOVE 'All children of the insured (born or adopted,'
        TO #SCR-DESIG (#I1, 1)
      MOVE 'to share equally or all to the survivor(s).'
        TO #SCR-DESIG (#I1, 2)
      RESET #SCR-DESIG (#I1, 3:4)
      RESET #SCR-DESIG-2-1ST-25 (#I1, 5)
   RESET #SCR-BENE-CONTACT-ID (#I1,#I2)                          /* PM10
    END-IF
*
    IF  ((#SCR-BN-NAME (#I1, 1) NE ' ') OR (#I1 = 1))
      AND (NOT #SCR-TYPE (#I1) = 'B' OR = 'F' OR = 'I' OR = 'K' OR = 'M'
        OR = 'A' OR = 'C' OR = 'P' OR = 'S' OR = 'T' OR = 'U' OR = 'X')
      REINPUT USING HELP
        MARK *#SCR-TYPE (#I1)
    END-IF
*
    IF #SCR-TYPE (#I1) = 'C'
      IF #I1 = 1
        REINPUT 'Type "C" not allowed as primary'
          MARK *#SCR-TYPE (#I1)
      END-IF
*
      IF NOT #SCR-TYPE (1) = 'I' OR = 'M'
        REINPUT 'Primary Type must be "I" or "M" to use Type "C"'
          MARK *#SCR-TYPE (#I1)
      END-IF
    END-IF
*
    IF (#SCR-TYPE (#I1) = 'A') AND (#I1 = 1)
      REINPUT 'Type "A" not allowed as primary'
        MARK *#SCR-TYPE (#I1)
    END-IF
*
    IF (#SCR-TYPE (#I1) = 'F') AND (#I1 = 2)
      REINPUT 'Type "F" not allowed as alternate'
        MARK *#SCR-TYPE (#I1)
    END-IF
*
    IF  #SCR-TYPE (#I1) = 'T' OR = 'F'
      IF #SCR-DESIG (#I1, 1) NE ' '
      REINPUT 'Beneficiary can"t be entered in final/testimentary types'
          MARK *#SCR-DESIG (#I1, 1)
      END-IF
    ELSE
      IF   (#SCR-TYPE (#I1) NE ' ')
          AND (#SCR-DESIG (#I1, 1) = ' ')
        IF NOT #NEW-LAYOUT
          REINPUT 'Beneficiary must be entered'
            MARK *#SCR-DESIG (#I1, 1)
        END-IF
      END-IF
    END-IF
*
    IF NOT #SCR-SHARE-TYP (#I1) = ' ' OR = 'S' OR = 'D' OR = 'M'
      REINPUT USING HELP
        MARK *#SCR-SHARE-TYP (#I1)
    END-IF
*
  IF  #SCR-TYPE (#I1) = 'S' OR = 'B' OR = 'P' OR = 'X' OR = 'I' OR = 'A'
      IF (#SCR-SHARE-TYP (#I1) = ' ') AND (#SCR-TYPE (#I1) NE 'I')
          AND NOT #NEW-LAYOUT
        REINPUT '# must be entered'
          MARK *#SCR-SHARE-TYP (#I1)
      END-IF
    ELSE
      IF #SCR-SHARE-TYP (#I1) NE ' '
        REINPUT '# is only used for type "S/B/P/I/A/X"'
          MARK *#SCR-SHARE-TYP (#I1)
      END-IF
    END-IF
  END-FOR
*
  IF #SCR-OWNER = 'X'
    REINPUT '"X" not allowed - blank means insured is owner'
      MARK *#SCR-OWNER
  END-IF
*
  RESET #CONT-ENT #CONT-ENT-X (*)
  FOR #I5 1 TO 5
    IF  (#SCR-OWN-1A (#I5) = MASK (N))
        OR ((#I5 GT 1) AND (#SCR-OWN-/ (#I5 - 1) = '/'))
      IF #SCR-OWN-6A (#I5) NE MASK (NNNNNN)
        IF (#I5 GT 1) AND (#SCR-OWN-/ (#I5 - 1) = '/')
          REINPUT '6 digits must be entered for CN number after a "/"'
            MARK *#SCR-OWNER
        ELSE
          REINPUT '6 digits must be entered for CN number'
            MARK *#SCR-OWNER
        END-IF
      END-IF
*
      FIND (1) CON-V WITH MEMBER-KEY = #SCR-OWN-6A (#I5)
        IF NO RECORDS FOUND
          REINPUT 'Owner CN not found'
            MARK *#SCR-OWNER
        END-NOREC
      END-FIND
*
  #CON-NAME := FUNCTION-CONTACT-NAME(<CON-V.MEMBER-CONTACT-ID>)  /* PM20
  #CONT-ENT := #CON-NAME                                         /* PM20
      MOVE #CONT-ENT TO #CONT-ENT-X (#I5)
    END-IF
  END-FOR
*
  IF NOT #SCR-BENE-RESTRICT = ' ' OR = 'Y'
    REINPUT 'Restricted must be " " or "Y"'
      MARK *#SCR-BENE-RESTRICT
  END-IF
*
  IF NOT #SCR-SUC-OWN = ' ' OR = 'Y'
    REINPUT 'Suc-owner must be " " or "Y"'
      MARK *#SCR-SUC-OWN
  END-IF
*
  IF NOT #SCR-PER-STR = ' ' OR = 'Y'
    REINPUT 'Per-Stirpes must be " " or "Y"'
      MARK *#SCR-PER-STR
  END-IF
*
  IF #SCR-COM-DIS GT 30
    REINPUT 'Common Disaster Days cannot exceed 30'
      MARK *#SCR-COM-DIS
  END-IF
*
  IF NOT #SCR-SETL-OPT = ' ' OR = 'A' OR = 'B' OR = 'C' OR = 'D'
      OR = '2' OR = '4' OR = '5'
    REINPUT USING HELP
      MARK *#SCR-SETL-OPT
  END-IF
*
  IF   (#SCR-TYPE (1) = 'F')
      AND (#SCR-TYPE (2) NE ' ')
    REINPUT 'Alternate type cannot be entered if Primary type is "F"'
      MARK *#SCR-TYPE (2)
  END-IF
*
  IF   #CON
      AND (#SCR-FIN-ATT = ' ') AND (#SCR-FIN-END = ' ')
    REINPUT 'Conversions must be FINALIZED in 1 step'
      MARK *#SCR-FIN-ATT
  END-IF
*
  IF (#SCR-FIN-ATT NE ' ') OR (#SCR-FIN-END NE ' ')
    IF #SCR-DATE-SIGNED NE MASK (MMDDYYYY)
    REINPUT 'Date signed must be entered & (MMDDYYYY) on a Finalization'
        MARK *#SCR-DATE-SIGNED
    END-IF
*
    IF   (#SCR-OWNER NE ' ')
        AND (#SCR-OWN-TRNSF-DT NE MASK (MMDDYYYY))
      REINPUT 'Transfer of ownership date must be entered & (MMDDYYYY)'
        MARK *#SCR-OWN-TRNSF-DT
    END-IF
  END-IF
*
*  update linked policies  * *
  RESET #I2
  RESET NT-V.BENE-ISS-DT    (#BENE-X, *)
  RESET NT-V.BENE-SPLIT-IND (#BENE-X, *)
  FOR #I1 1 TO 9  /* link the curr desig to sel pols (never more than 7)
    IF #POL-BENE-SEL (#I1) NE ' '
      ADD 1 TO #I2
      MOVE #ISS-DT    (#I1) TO NT-V.BENE-ISS-DT    (#BENE-X, #I2)
      MOVE #SPLIT-IND (#I1) TO NT-V.BENE-SPLIT-IND (#BENE-X, #I2)
    END-IF
  END-FOR
*
  FOR #I1 1 TO 6  /* UNLINK OTHER DESIGS IF NECESSARY
    IF #BENE-X = #I1  /* bypass current desig
      ESCAPE TOP
    END-IF
*
    FOR #I2 1 TO 7  /* 7 possible pols on this desig
      FOR #I3 1 TO 9  /* for possible pol-nums selected (never > 7)
        IF   (#POL-BENE-SEL (#I3) NE ' ')
            AND (#ISS-DT (#I3) NE 0)
            AND (#ISS-DT    (#I3) = NT-V.BENE-ISS-DT    (#I1, #I2))
            AND ((#SPLIT-IND (#I3) = NT-V.BENE-SPLIT-IND (#I1, #I2))
            OR (((NT-V.BENE-SPLIT-IND (#I1, #I2) = 0)
            AND (#SPLIT-IND (#I3) = 1))))
          RESET NT-V.BENE-ISS-DT    (#I1, #I2) /* unlink
          RESET NT-V.BENE-SPLIT-IND (#I1, #I2)
          MOVE 'P' TO NT-V.BENE-STATUS (#I1)
*
          FOR #I4 #I2 TO 7  /* scrunch
            IF #I4 LT 7
              MOVE NT-V.BENE-ISS-DT (#I1, #I4 + 1)
                TO NT-V.BENE-ISS-DT (#I1, #I4)
              MOVE NT-V.BENE-SPLIT-IND (#I1, #I4 + 1)
                TO NT-V.BENE-SPLIT-IND (#I1, #I4)
            END-IF
          END-FOR
          SUBTRACT 1 FROM #I2   /* RESET LOOP COUNTER
          RESET NT-V.BENE-ISS-DT    (#I1, 7)
          RESET NT-V.BENE-SPLIT-IND (#I1, 7)
*
          ESCAPE BOTTOM
        END-IF
      END-FOR
    END-FOR
*
   IF   (NT-V.BENE-TEXT (#I1, 1, 1) NE ' ') /* clear unused designations
        AND (NT-V.BENE-ISS-DT (#I1, 1) = 0)
        AND (NT-V.BENE-ISS-DT (#I1, 2) = 0)
        AND (NT-V.BENE-ISS-DT (#I1, 3) = 0)
        AND (NT-V.BENE-ISS-DT (#I1, 4) = 0)
        AND (NT-V.BENE-ISS-DT (#I1, 5) = 0)
        AND (NT-V.BENE-ISS-DT (#I1, 6) = 0)
        AND (NT-V.BENE-ISS-DT (#I1, 7) = 0)
      RESET NT-V.BENE-ISS-DT   (#I1, *)
        NT-V.BENE-SPLIT-IND(#I1, *)
        NT-V.BENE-STATUS   (#I1)
        NT-V.BENE-LST-UPD  (#I1)
        NT-V.BENE-RESTRICT (#I1)
        NT-V.BENE-SUC-OWN  (#I1)
        NT-V.BENE-OWN-TRNSF-DT (*)
        NT-V.BENE-TYPE     (#I1, *)
        NT-V.BENE-SHARE-TYP (#I1, *)
        NT-V.BENE-TEXT     (#I1, *, *)
        NT-V.BENE-CONTACT-ID-R (#I1,*,*)    /* PM10
    END-IF
  END-FOR
*
* *  update beneficiaries  * *
  IF   (NOT #NEW-LAYOUT)
      AND (#SCR-NEW-LAYOUT = 1)
    RESET #SCR-NEW-LAYOUT
  END-IF
*
  IF #SCR-SUC-OWN = 'Y'
    MOVE 1 TO NT-V.BENE-SUC-OWN (#BENE-X)
  ELSE
    RESET NT-V.BENE-SUC-OWN (#BENE-X)
  END-IF
*
  IF #SCR-PER-STR = 'Y'
    MOVE 1 TO NT-V.BENE-PER-STR (#BENE-X)
  ELSE
    RESET NT-V.BENE-PER-STR (#BENE-X)
  END-IF
*
  MOVE #SCR-BENE-RESTRICT TO NT-V.BENE-RESTRICT (#BENE-X)
  MOVE #SCR-NEW-LAYOUT TO NT-V.BENE-NEW-LAYOUT (#BENE-X)
  MOVE #SCR-COM-DIS    TO NT-V.BENE-COM-DIS    (#BENE-X)
*
  MOVE #SCR-OWNER TO #SCR-DESIG-2-LST-35 (2, 5)
  IF #SCR-OWN-TRNSF-DT NE ' '
    MOVE #SCR-OWN-TRNSF-DT TO #WMMDDYYYY-A
    MOVE BY NAME #WMMDDYYYY TO #WYYYYMMDD
    MOVE #WYYYYMMDD-N TO NT-V.BENE-OWN-TRNSF-DT (#BENE-X)
  END-IF
*
  FOR #I1 1 TO 2
    MOVE #SCR-TYPE (#I1) TO NT-V.BENE-TYPE  (#BENE-X, #I1)
    MOVE #SCR-SHARE-TYP (#I1) TO NT-V.BENE-SHARE-TYP (#BENE-X, #I1)
    FOR #I2 1 TO 5
      MOVE #SCR-DESIG (#I1, #I2)  TO NT-V.BENE-TEXT (#BENE-X, #I1, #I2)
NT-V.BENE-CONTACT-ID-R (#BENE-X,#I1,#I2) := #SCR-BENE-CONTACT-ID (#I1, #I2)      /* PM10
    END-FOR
  END-FOR
*
  IF #CGA-ID GE 700000
    IF #CGA-SCR-COMMAND = '*'
      PERFORM SHOW-FORM
      IF #CGA-SCR-COMMAND = '*'
        MOVE 'BD' TO #CGA-SCR-COMMAND
      END-IF
    END-IF
*
    FETCH 'G1000PXX'
  END-IF
*
  IF #SCR-DELETE = 'Y'
    IF #FINAL-BENE-NT-REC-FND AND NOT #PEND-BENE-NT-REC-FND
        AND #SCR-X NE 1
      END TRANSACTION
      MOVE 'BD' TO #CGA-SCR-COMMAND
      INPUT TEXT 'Delete not allowed on multiple finalized designations'
        USING MAP 'G1000MXX'
      FETCH 'G1000PXX'
    END-IF
*
    MOVE (AD=P) TO #SCR-CV #SCR-FINALIZE-CV #APPR-FOR-PAYOUT-CV
      #APPR-FOR-PAYOUT-CV
    MOVE (AD=PI) TO #SCR-LINKED-CV (*)
    MOVE 'press enter to "DELETE" this designation' TO #TEXT
    INPUT TEXT #TEXT USING MAP 'E4710MBD'
    PERFORM CHECK-FOR-AST
*
    IF #SCR-DELETE = 'Y'
      RESET #SCR-FIN-ATT #SCR-FIN-END  /* delete & finalize not allowed
      PERFORM DELETE-MTD-DET
*
      IF #PEND-BENE-NT-REC-FND AND #FINAL-BENE-NT-REC-FND
        GET NT-F-V #FINAL-NT-ISN
*
        RESET NT-V.BENE-STATUS (#BENE-X)
      MOVE NT-F-V.BENE-RESTRICT (#BENE-X) TO NT-V.BENE-RESTRICT(#BENE-X)
      MOVE NT-F-V.BENE-SUC-OWN  (#BENE-X) TO NT-V.BENE-SUC-OWN (#BENE-X)
        MOVE NT-F-V.BENE-NEW-LAYOUT (#BENE-X)
          TO NT-V.BENE-NEW-LAYOUT (#BENE-X)
       MOVE NT-F-V.BENE-COM-DIS (#BENE-X) TO NT-V.BENE-COM-DIS (#BENE-X)
       MOVE NT-F-V.BENE-PER-STR (#BENE-X) TO NT-V.BENE-PER-STR (#BENE-X)
       MOVE NT-F-V.BENE-LST-UPD (#BENE-X) TO NT-V.BENE-LST-UPD (#BENE-X)
        MOVE NT-F-V.BENE-OWN-TRNSF-DT (#BENE-X)
          TO NT-V.BENE-OWN-TRNSF-DT (#BENE-X)
       MOVE NT-F-V.BENE-TYPE (#BENE-X, *) TO NT-V.BENE-TYPE (#BENE-X, *)
        MOVE NT-F-V.BENE-SHARE-TYP (#BENE-X, *)
          TO NT-V.BENE-SHARE-TYP (#BENE-X, *)
        MOVE NT-F-V.BENE-TEXT (#BENE-X, *, *)
          TO NT-V.BENE-TEXT (#BENE-X, *, *)
        MOVE NT-F-V.BENE-CONTACT-ID-R (#BENE-X, *, *)     /* PM10
          TO NT-V.BENE-CONTACT-ID-R (#BENE-X, *, *)       /* PM10
      ELSE
        RESET NT-V.BENE-ISS-DT   (#BENE-X, *)
          NT-V.BENE-SPLIT-IND(#BENE-X, *)
          NT-V.BENE-LST-UPD  (#BENE-X)
          NT-V.BENE-OWN-TRNSF-DT (*)
          NT-V.BENE-STATUS   (#BENE-X)
          NT-V.BENE-TYPE     (#BENE-X, *)
          NT-V.BENE-SHARE-TYP (#BENE-X, *)
          NT-V.BENE-RESTRICT (#BENE-X)
          NT-V.BENE-SUC-OWN  (#BENE-X)
          NT-V.BENE-NEW-LAYOUT (#BENE-X)
          NT-V.BENE-COM-DIS    (#BENE-X)
          NT-V.BENE-PER-STR    (#BENE-X)
          NT-V.BENE-TEXT     (#BENE-X, *, *)
          NT-V.BENE-CONTACT-ID-R (#BENE-X, *, *)           /* PM10
      END-IF
    END-IF
  END-IF
* * check if benes have changed * *
  RESET #BENE-CHGED
  FOR #I1 1 TO 7
    IF NT-V.BENE-ISS-DT (#BENE-X, #I1) NE #HLD-LINKED-POLS (#I1)
      MOVE TRUE TO #BENE-CHGED
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF  (NT-V.BENE-RESTRICT (#BENE-X) NE #HLD-BENE-RESTRICT)
      OR (NT-V.BENE-OWN-TRNSF-DT (#BENE-X) NE #HLD-BENE-OWN-TRNSF-DT)
      OR (#SCR-SUC-OWN NE #HLD-SUC-OWN)
      OR (#SCR-SETL-OPT NE #HLD-SETL-OPT)
      OR (#SCR-COM-DIS  NE #HLD-COM-DIS)
      OR (#SCR-PER-STR  NE #HLD-PER-STR)
      OR (#CGA-ORIG-SUFFIX = 'OLD' OR = 'CNO')
    MOVE TRUE TO #BENE-CHGED
  END-IF
*
  FOR #I1 1 TO 2
    IF  (NT-V.BENE-TYPE       (#BENE-X, #I1)    NE #HLD-TYPE  (#I1))
     OR (NT-V.BENE-SHARE-TYP  (#BENE-X, #I1)    NE #HLD-SHARE-TYP (#I1))
      OR (NT-V.BENE-TEXT       (#BENE-X, #I1, 1) NE #HLD-DESIG (#I1, 1))
      OR (NT-V.BENE-TEXT       (#BENE-X, #I1, 2) NE #HLD-DESIG (#I1, 2))
      OR (NT-V.BENE-TEXT       (#BENE-X, #I1, 3) NE #HLD-DESIG (#I1, 3))
      OR (NT-V.BENE-TEXT       (#BENE-X, #I1, 4) NE #HLD-DESIG (#I1, 4))
      OR (NT-V.BENE-TEXT       (#BENE-X, #I1, 5) NE #HLD-DESIG (#I1, 5))
      MOVE TRUE TO #BENE-CHGED
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF  (#APPR-FOR-PAYOUT = 'Y' OR = 'N')
      AND (#BENE-CHGED
      OR #PEND-BENE-NT-REC-FND
      OR #CON)
    REINPUT 'Y/N Approval can only be done to Finalized Bene"s (no CON)'
      MARK *#APPR-FOR-PAYOUT
  END-IF
*
  IF   (#HLD-BENE-RESTRICT = 'Y')
      AND (#SCR-BENE-RESTRICT = 'Y')
      AND (NT-V.BENE-STATUS (#BENE-X) NE 'P')
      AND #BENE-CHGED
    REINPUT 'Restricted Beneficiary cannot be changed'
      MARK *#SCR-BENE-RESTRICT
  END-IF
*
* *  update pending files * *
  IF #CON
    MOVE *DATN TO NT-V.BENE-STRT-PEND (#BENE-X)
    IF #CON-PEND
*     COMPUTE NT-V.ID-NUMBER = #CGA-ID + 200000  /* NG2
      COMPUTE NT-V.ID-NUMBER = #CGA-ID + 500000  /* NG2
      UPDATE (0798)
    END-IF
  ELSE
    IF #BENE-CHGED OR (#SCR-DELETE = 'Y')
      IF #SCR-DELETE NE 'Y'
        IF NT-V.BENE-STATUS (#BENE-X) NE 'P'
          MOVE TRUE TO #NEW-PEND
        ELSE
          READ MBRSHIP-MTD-DET-V BY ENTRY-DATE
              FROM NT-V.BENE-LST-UPD (#BENE-X)
              THRU NT-V.BENE-LST-UPD (#BENE-X)
 IF  ((REC-ISN = #PEND-NT-ISN)  /* In case there are old records  /* DW6
       OR  (MBRSHIP-MTD-DET-V.ID-NUMBER = NT-V.ID-NUMBER))        /* DW6
                AND (CODE = 'B')
                AND (MBRSHIP-MTD-DET-V.NUM-MBRSHIPS = #BENE-X)
              MOVE *DATN TO ENTRY-DATE
              UPDATE (1978)
              ESCAPE BOTTOM
            END-IF
          END-READ
        END-IF
*
        RESET NT-V.BENE-FOL-UP-IND (#BENE-X)
        MOVE *DATN TO NT-V.BENE-LST-UPD (#BENE-X)
        MOVE BENE-LST-UPD (#BENE-X) TO #YYYYMMDD
        COMPRESS #MM #DD #YYYY INTO #SCR-LST-UPD WITH '/'
        MOVE 'P' TO NT-V.BENE-STATUS  (#BENE-X)
        MOVE 'PENDING' TO #SCR-BENE-STATUS
*
        IF #NEW-PEND
          MOVE *DATN TO NT-V.BENE-STRT-PEND (#BENE-X)
        END-IF
      END-IF
*
      RESET #STILL-PENDING-BENES
      FOR #I1 1 TO 6
        IF NT-V.BENE-STATUS (#I1) NE ' '
          MOVE TRUE TO #STILL-PENDING-BENES
          ESCAPE BOTTOM
        END-IF
      END-FOR
*
      IF #PEND-BENE-NT-REC-FND
        IF #STILL-PENDING-BENES
          UPDATE (0798)
        ELSE
          DELETE (0798)
        END-IF
      ELSE
        IF #FINAL-BENE-NT-REC-FND AND (#SCR-DELETE = 'Y')
            AND (NOT #STILL-PENDING-BENES)
          DELETE (0801)
        ELSE
*         COMPUTE NT-V.ID-NUMBER = #CGA-ID + 200000   /* NG2
          COMPUTE NT-V.ID-NUMBER = #CGA-ID + 500000   /* NG2
          STORE NT-V
        END-IF
      END-IF
*
      IF #NEW-PEND
        FIND (1) NT-V WITH ID-NUMBER = NT-V.ID-NUMBER
          MOVE *ISN TO #PEND-NT-ISN
        END-FIND
*
        IF NOT #CON
          RESET MBRSHIP-MTD-DET-V  /* create 'pd' entry
          MOVE NT-V.BENE-LST-UPD (#BENE-X) TO ENTRY-DATE
          MOVE #PEND-NT-ISN      TO REC-ISN
          MOVE 'B'               TO CODE
          MOVE #CGA-ISN          TO MBRSHIP-MTD-DET-V.ISSUE-DATE
          MOVE #BENE-X           TO MBRSHIP-MTD-DET-V.NUM-MBRSHIPS
          MOVE NT-V.ID-NUMBER    TO MBRSHIP-MTD-DET-V.ID-NUMBER
          STORE MBRSHIP-MTD-DET-V
*
          MOVE *PROGRAM TO #PROGRAM
          CALLNAT 'MSSNL003'           /* NG4
            MBRSHIP-MTD-DET-V.ID-NUMBER
            MBRSHIP-MTD-DET-V.CODE
            #CGA-USER-COMPANY
            MBRSHIP-MTD-DET-V.ISSUE-DATE
            #PROGRAM
            #USE-TIMX
        END-IF
      END-IF
    END-IF
  END-IF
*
  END TRANSACTION
*
* *  finalize beneficiaries * *
  IF (#SCR-FIN-ATT NE ' ') OR (#SCR-FIN-END NE ' ')
    MOVE #SCR-DATE-SIGNED TO #SCR-LST-UPD
    MOVE (AD=P) TO #SCR-CV
    MOVE (AD=P) TO #SCR-FINALIZE-CV
    MOVE (AD=P) TO #SCR-DELETE-CV
    MOVE (AD=PI) TO #SCR-LINKED-CV (*)
    MOVE 'press enter to "FINALIZE" this designation' TO #TEXT
*
    PERFORM SHOW-MAP
*
    IF (#SCR-FIN-ATT NE ' ') OR (#SCR-FIN-END NE ' ')
      IF NOT #CON
        PERFORM DELETE-MTD-DET
      END-IF
*
      IF #FINAL-BENE-NT-REC-FND
        GET NT-F-V #FINAL-NT-ISN
      END-IF
*
      IF #CON
        MOVE 'CON' TO #TYPE
      ELSE
        MOVE 'FIN' TO #TYPE
      END-IF
*
      CALLNAT 'E4702SBD' #CGA-ID
        ST-V.PROCESS-IND
        #NAME
        #CGA-CLERK
        #BENE-X
        #TYPE
        NT-V
        NT-F-V
*
      MOVE NT-V.BENE-ISS-DT     (*, *) TO NT-F-V.BENE-ISS-DT     (*, *)
      MOVE NT-V.BENE-LST-UPD    (*)    TO NT-F-V.BENE-LST-UPD    (*)
      MOVE NT-V.BENE-OWN-TRNSF-DT (*)  TO NT-F-V.BENE-OWN-TRNSF-DT (*)
      MOVE NT-V.BENE-STRT-PEND  (*)    TO NT-F-V.BENE-STRT-PEND  (*)
      MOVE NT-V.BENE-RESTRICT   (*)    TO NT-F-V.BENE-RESTRICT   (*)
      MOVE NT-V.BENE-SUC-OWN    (*)    TO NT-F-V.BENE-SUC-OWN    (*)
      MOVE NT-V.BENE-NEW-LAYOUT (*)    TO NT-F-V.BENE-NEW-LAYOUT (*)
      MOVE NT-V.BENE-COM-DIS    (*)    TO NT-F-V.BENE-COM-DIS    (*)
      MOVE NT-V.BENE-PER-STR    (*)    TO NT-F-V.BENE-PER-STR    (*)
      MOVE NT-V.BENE-TEXT    (*, *, *) TO NT-F-V.BENE-TEXT   (*, *, *)
MOVE NT-V.BENE-CONTACT-ID-R (*,*,*) TO NT-F-V.BENE-CONTACT-ID-R (*, *, *)      /* PM10
      MOVE NT-V.BENE-TYPE       (*, *) TO NT-F-V.BENE-TYPE       (*, *)
      MOVE NT-V.BENE-SHARE-TYP  (*, *) TO NT-F-V.BENE-SHARE-TYP  (*, *)
      MOVE NT-V.BENE-SPLIT-IND  (*, *) TO NT-F-V.BENE-SPLIT-IND  (*, *)
      MOVE NT-V.LST-BD-FINALIZATION-USER
        TO NT-F-V.LST-BD-FINALIZATION-USER
*
      RESET NT-F-V.BENE-STATUS (#BENE-X)
      RESET NT-V.BENE-STATUS   (#BENE-X)
*
      MOVE #SCR-DATE-SIGNED TO #WMMDDYYYY-A
      MOVE BY NAME #WMMDDYYYY TO #WYYYYMMDD
      MOVE #WYYYYMMDD-N TO NT-F-V.BENE-LST-UPD (#BENE-X) #LST-UPD
        NT-V.BENE-LST-UPD (#BENE-X)
      IF #SUFFIX NE 'FRM'
        MOVE #CGA-CLERK TO NT-F-V.LST-BD-FINALIZATION-USER
      END-IF
      MOVE 'FINALIZED' TO #SCR-BENE-STATUS
*
      IF #FINAL-BENE-NT-REC-FND
        UPDATE (2076)
      ELSE
*       COMPUTE NT-F-V.ID-NUMBER = #CGA-ID + 400000          /* NG2
        NT-F-V.ID-NUMBER := #CGA-ID                          /* NG2
        STORE NT-F-V
      END-IF
*
      RESET #INT
      IF NOT #CON
        ADD 1 TO #INT
        IF #SCR-FIN-ATT NE ' '
          MOVE 'B/C attached to policy' TO #NOTE-TEXT (1)
        ELSE
          MOVE 'B/C END sent' TO #NOTE-TEXT (1)
        END-IF
      END-IF
*
      IF NT-F-V.BENE-RESTRICT (#BENE-X) = 'Y'
        ADD 1 TO #INT
        MOVE '*Beneficiary Restriction' TO #NOTE-TEXT (#INT)
      END-IF
*
      IF #INT GT 0
        CALLNAT 'E4205SDM' ST-V.ID-NUMBER
          #INT #CGA-CLERK #NOTE-TEXT (1:10)
      END-IF
*
      FOR #I5 1 TO 5
        IF #SCR-OWN-6A (#I5) = MASK (NNNNNN) /* to show contact entity
          FIND (1) CON-V WITH MEMBER-KEY = #SCR-OWN-6A (#I5)
            FOR #I1 1 TO 40
              IF CON-V.LINKED-CN (#I1) = ST-V.ID-NUMBER
                ESCAPE BOTTOM
              END-IF
*
              IF LINKED-CN (#I1) = 0
                MOVE ST-V.ID-NUMBER TO CON-V.LINKED-CN (#I1)
                ESCAPE BOTTOM
              END-IF
            END-FOR
            UPDATE (2153)
          END-FIND
        END-IF
      END-FOR
*
      FOR #I5 1 TO 5 /* PM
        FOR #I6 1 TO 5
          IF #SCR-OWN-6A (#I6) = #HLD-OWN-6A (#I5)
            ESCAPE BOTTOM
          END-IF
        END-FOR
*
        IF #I6 GT 5
          FIND (1) CON-V WITH MEMBER-KEY = #HLD-OWN-6A (#I5)
            FOR #I1 1 TO 40
              IF CON-V.LINKED-CN (#I1) = ST-V.ID-NUMBER
                RESET CON-V.LINKED-CN (#I1)
                ESCAPE BOTTOM
              END-IF
            END-FOR
            UPDATE (2177)
          END-FIND
        END-IF
      END-FOR
*
      END TRANSACTION
*
      IF #PEND-BENE-NT-REC-FND OR #NEW-PEND
        RESET #STILL-PENDING-BENES
        FOR #I1 1 TO 6
          IF NT-V.BENE-STATUS (#I1) NE ' '
            MOVE TRUE TO #STILL-PENDING-BENES
            ESCAPE BOTTOM
          END-IF
        END-FOR
*
        GET NT-V #PEND-NT-ISN
*
        IF #STILL-PENDING-BENES
          RESET NT-V.BENE-STATUS   (#BENE-X)
          UPDATE
        ELSE
          DELETE
        END-IF
*
        END TRANSACTION
      END-IF
    END-IF
  END-IF
*
  PERFORM APPROVE-FOR-PAYOUT
*
  MOVE (AD=P) TO #SCR-CV
  MOVE (AD=PI) TO #SCR-LINKED-CV (*)
  MOVE (AD=P) TO #SCR-DELETE-CV
  MOVE (AD=P) TO #SCR-FINALIZE-CV
*
  IF (#SCR-FIN-ATT NE ' ') OR (#SCR-FIN-END NE ' ')
      OR (#SCR-DELETE = 'Y') OR #BENE-CHGED
    IF (#SCR-FIN-ATT NE ' ') OR (#SCR-FIN-END NE ' ')
      MOVE 'Finalization completed' TO #TEXT
    ELSE
      IF #SCR-DELETE = 'Y'
        MOVE 'Designation deleted' TO #TEXT
      ELSE
        MOVE 'Transaction completed' TO #TEXT
      END-IF
    END-IF
*
    MOVE NT-F-V.LST-BD-FINALIZATION-USER TO #LST-UPDT-BD-USER
*
    PERFORM SHOW-MAP
  END-IF
*
  ESCAPE BOTTOM   /* PM11
END-REPEAT        /* PM11
*
IF #CGA-SCR-COMMAND = '*'
  PERFORM SHOW-FORM
  IF #CGA-SCR-COMMAND = '*'
    MOVE 'BD' TO #CGA-SCR-COMMAND
  END-IF
END-IF
*                                     NG2
CALLNAT 'E4700NBD'
  #UPDATE
  #FINAL-BENE-NT-REC-NUM
  #SUFF-3                             /* NG5
  #FINAL-BENE-NT-REC-FND
  #FINAL-NT-ISN
  #NUM-BN-PEND-POLS
  #PEND-BENE-NT-REC-NUM
  #PEND-BENE-NT-REC-FND
  #PEND-NT-ISN
  #TEMPDATA                           /* NG5
*
IF #TEMPDATA                          /* NG5
  BACKOUT TRANSACTION
ELSE
  END TRANSACTION
END-IF
FETCH 'G1000PXX'
*                                     NG2
************************************************************************
DEFINE SUBROUTINE DELETE-MTD-DET
************************************************************************
*
READ MBRSHIP-MTD-DET-V BY ENTRY-DATE
    FROM NT-V.BENE-LST-UPD (#BENE-X)
    THRU NT-V.BENE-LST-UPD (#BENE-X)
IF  ((REC-ISN = #PEND-NT-ISN)    /* In case there are old records  /* DW6
      OR  (MBRSHIP-MTD-DET-V.ID-NUMBER = NT-V.ID-NUMBER))        /* DW6
      AND (CODE = 'B')
    DELETE (2271)
    ESCAPE BOTTOM
  END-IF
END-READ
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE GET-1ST-CONTACT-ENTITY
************************************************************************
*
FIND (1) CON-V WITH MEMBER-KEY = #SCR-OWN-6A (1)
  #CON-NAME := FUNCTION-CONTACT-NAME(<CON-V.MEMBER-CONTACT-ID>)  /* PM20
  #CONT-ENT := #CON-NAME                                         /* PM20
END-FIND
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE GET-ALL-CONTACT-ENTITIES
************************************************************************
*
RESET #CONT-ENT #CONT-ENT-X (*)
FOR #I5 1 TO 5
  IF  (#SCR-OWN-1A (#I5) = MASK (N))
      OR ((#I5 GT 1) AND (#SCR-OWN-/ (#I5 - 1) = '/'))
    IF #SCR-OWN-6A (#I5) NE MASK (NNNNNN)
      ESCAPE TOP
    END-IF
*
    MOVE TRUE TO #FOUND
    FIND (1) CON-V WITH MEMBER-KEY = #SCR-OWN-6A (#I5)
      IF NO RECORDS FOUND
        RESET #FOUND
      END-NOREC
    END-FIND
*
    IF #FOUND
  #CON-NAME := FUNCTION-CONTACT-NAME(<CON-V.MEMBER-CONTACT-ID>)  /* PM20
  #CONT-ENT := #CON-NAME                                         /* PM20
      MOVE #CONT-ENT TO #CONT-ENT-X (#I5)
    END-IF
  END-IF
END-FOR
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE SHOW-FORM
************************************************************************
*
PERFORM SD-SUFF-FILL
FOR #I2 1 TO 9
  IF #POL-NUM-POS-7 (#I2) = '*'
    RESET #POL-NUM-POS-7 (#I2) #POL-NUM-LST-8 (#I2)
  END-IF
*
  IF #POL-NUM-POS-8 (#I2) = '*'
    RESET #POL-NUM-POS-8 (#I2) #POL-NUM-LST-7 (#I2)
  END-IF
*
  IF #POL-NUM-POS-9 (#I2) = '*'
    RESET #POL-NUM-POS-9 (#I2) #POL-NUM-LST-6 (#I2)
  END-IF
END-FOR
*
RESET #SCR-DESIG-2-LST-35 (2,5)
*
MOVE #SUFFIX TO #CGA-SCR-SUFFIX
IF   (*DEVICE NE 'BATCH')
    AND (#SUFFIX = 'PDF' OR = 'BLK')
  CALLNAT 'E470XSBD' #CGA-SCR-COMMAND
    #CGA-SCR-ID
    #CGA-SCR-SUFFIX
    #CGA-CLERK
    #CGA-SECURITY-CODE
    #CGA-USER-COMPANY
    #ISS-DT-OCC   (1:9)
    #SCR-PRIM-SEC (1:2)
    #DES-SEL
    #SCR-NAME
    #SCR-OWNER
    #SCR-OWN-TRNSF-DT-DISP
    #DESIG-CNT
    #LST-UPD
    #SCR-BENE-RESTRICT
    #SCR-BENE-STATUS
    #TEXT
    #CGA-MF-SCR-COMMAND
    #ZIP-CODE
    INTRO-FLAG
    LINKED-CN (1)
    #SD-SUFF
    #CONT-ENT-X (1:5)
    #EDS-DATA-VAL
    #NEW-LAYOUT
    #SCR-NEW-LAYOUT
    #SCR-COM-DIS
    #SCR-PER-STR
END-IF
*
CALLNAT #CALL-PGM #CGA-SCR-COMMAND
  #CGA-SCR-ID
  #SUFFIX
  #CGA-CLERK
  #CGA-SECURITY-CODE
  #ISS-DT-OCC   (1:9)
  #SCR-PRIM-SEC (1:2)
  #DES-SEL
  #SCR-NAME
  #SCR-OWNER
  #SCR-OWN-TRNSF-DT-DISP
  #DESIG-CNT
  #LST-UPD
  #SCR-BENE-RESTRICT
  #SCR-BENE-STATUS
  #TEXT
  #CGA-MF-SCR-COMMAND
  #ZIP-CODE
  INTRO-FLAG
  LINKED-CN (1)
  #SD-SUFF
  #CONT-ENT-X (1:5)
  #EDS-DATA-VAL
  #NEW-LAYOUT
  #SCR-COM-DIS
  #SCR-PER-STR
  #POLICY-PRINT
  #BENEFICIARY-INFORMATION
  #NEW-BENE-PROCESSING                    /* DW8
*              NG5 \/\/
IF #TEMPDATA
  BACKOUT TRANSACTION
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CHECK-FOR-AST
************************************************************************
*
IF #CGA-SCR-COMMAND NE '*'
  FETCH 'G1000PXX'
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE SD-SUFF-FILL
************************************************************************
*
MOVE ', The Insured' TO #SD-SUFF
ESCAPE ROUTINE
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE APPROVE-FOR-PAYOUT
************************************************************************
*
IF   (#APPR-FOR-PAYOUT = 'Y' OR = 'N')
    AND (ST-V.DATE-OF-DEATH = 0)
  REINPUT 'MBR must be dead to Approve for payout'
    MARK *#APPR-FOR-PAYOUT
END-IF
*
IF NOT #APPR-FOR-PAYOUT = 'Y' OR = 'N' OR = ' '
  REINPUT 'Must be "Y/N" or blank'
    MARK *#APPR-FOR-PAYOUT
END-IF
*
IF #APPR-FOR-PAYOUT = 'Y' OR = 'N'
  RESET #NOTE-TEXT (*)
  MOVE *DATN TO #YYYYMMDD
  COMPRESS #MM #DD #YYYY INTO #DATE-DISP WITH '/'
  MOVE 1 TO #INT
*
  IF   (#APPR-FOR-PAYOUT = 'Y' OR = 'N')
      AND (#LST-UPDT-BD-USER = #CGA-CLERK)
    MOVE 'USER that FINALIZED last not valid to approve for payout'
      TO #TEXT
    MOVE 'BD' TO #CGA-SCR-COMMAND
    INPUT TEXT #TEXT USING MAP 'E4710MBD'
    END TRANSACTION
    FETCH 'G1000PXX'
  END-IF
*
  IF #APPR-FOR-PAYOUT = 'Y'
    COMPRESS '*EDS BENEFICIARY DATA VALIDATED:' #DATE-DISP
      INTO #NOTE-TEXT(#INT)
  ELSE
    COMPRESS '*EDS BENEFICIARY DATA BYPASSED - DO MANUALLY:' #DATE-DISP
      INTO #NOTE-TEXT(#INT)
  END-IF
*
  IF #BD-READY-X NE 0
    FIND NOT-V WITH ID-NUMBER = ST-V.ID-NUMBER
      MOVE #NOTE-TEXT (#INT) TO NOT-V.NOTE-TEXT (#BD-READY-X)
      MOVE #CGA-CLERK        TO NOT-V.NOTE-CLERK-ID (#BD-READY-X)
      MOVE *DATN             TO NOT-V.NOTE-DATE     (#BD-READY-X)
      UPDATE (2473)
    END-FIND
  ELSE
    CALLNAT 'E4205SDM' ST-V.ID-NUMBER
      #INT #CGA-CLERK #NOTE-TEXT (1:10)
  END-IF
*
  IF #APPR-FOR-PAYOUT = 'Y'
    COMPRESS 'CN' #CGA-ID 'BD approved for payment - EDS Data Validated'
      INTO #NOTE-TEXT (1)
  ELSE
    COMPRESS 'CN' #CGA-ID 'BD NOT approved for payment - Do Manually'
      INTO #NOTE-TEXT (1)
  END-IF
*
  MOVE #SUFFIX TO #HOLD-SUFFIX
  MOVE '*NX' TO #CGA-SCR-SUFFIX
  MOVE #BD-READY-INIT TO #TO-INIT
  FETCH RETURN 'G4090PNX' #CGA-CLERK #TO-INIT #NOTE-TEXT (*)
*
  MOVE DATE-OF-DEATH TO #YYYYMMDD
  MOVE #HOLD-SUFFIX TO #CGA-SCR-SUFFIX
  END TRANSACTION
*
  IF #APPR-FOR-PAYOUT = 'Y'       /* PM13
    CALLNAT 'DEATHNOT'            /* PM13
      ST-V.ID-NUMBER              /* PM13
*
    PERFORM SEND-APPROVED-EMAIL   /* PM18
  END-IF                          /* PM13
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE SHOW-MAP
************************************************************************
*
PERFORM TYPE-FREE
IF #OLD-LAYOUT  /* OLD/OLD
    OR (#TYP-1-FREE AND #TYP-2-FREE)
  INPUT TEXT #TEXT MARK *#POL-BENE-SEL (1) USING MAP 'E4710MBD'
ELSE
  IF NOT #TYP-1-FREE AND NOT #TYP-2-FREE /* NEW/NEW
    INPUT TEXT #TEXT MARK *#POL-BENE-SEL (1) USING MAP 'E4711MBD'
  ELSE
    IF NOT #TYP-1-FREE AND #TYP-2-FREE /* NEW/OLD
      INPUT TEXT #TEXT MARK *#POL-BENE-SEL (1) USING MAP 'E4712MBD'
    ELSE  /* OLD/NEW
      INPUT TEXT #TEXT MARK *#POL-BENE-SEL (1) USING MAP 'E4713MBD'
    END-IF
  END-IF
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE TYPE-FREE
************************************************************************
*
IF #SCR-TYPE(1) = 'I' OR = 'C' OR = 'T' OR = 'P'
  MOVE TRUE TO #TYP-1-FREE
END-IF
*
IF #SCR-TYPE(2) = 'I' OR = 'C' OR = 'T' OR = 'P'
  MOVE TRUE TO #TYP-2-FREE
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CHECK-FOR-DETAIL                       /* PM10
************************************************************************
*
RESET #REL-CID
#PARENT-CID := ST-V.MEMBER-CONTACT-ID
*
DECIDE ON FIRST VALUE OF *CURS-LINE
  VALUE 12
    #REL-CID    := #SCR-BENE-CONTACT-ID (1,1)
  VALUE 13
    #REL-CID    := #SCR-BENE-CONTACT-ID (1,2)
  VALUE 14
    #REL-CID    := #SCR-BENE-CONTACT-ID (1,3)
  VALUE 15
    #REL-CID    := #SCR-BENE-CONTACT-ID (1,4)
  VALUE 16
    #REL-CID    := #SCR-BENE-CONTACT-ID (1,5)
  VALUE 18
    #REL-CID    := #SCR-BENE-CONTACT-ID (2,1)
  VALUE 19
    #REL-CID    := #SCR-BENE-CONTACT-ID (2,2)
  VALUE 20
    #REL-CID    := #SCR-BENE-CONTACT-ID (2,3)
  VALUE 21
    #REL-CID    := #SCR-BENE-CONTACT-ID (2,4)
  NONE
    ESCAPE ROUTINE
END-DECIDE
*
IF #REL-CID NE 0
  #MODE  := 'V'
CALLNAT 'GUPCISXX' #PARENT-CID #REL-CID #CGA-ORIG-COMMAND #CGA-ORIG-ID #CGA-USER-COMPANY #CGA-CLERK #MODE #MSG
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE SEND-APPROVED-EMAIL                            /* PM18
************************************************************************
*
FIND (1) CODES WITH SEC-KEY = 'BENEVAL'                          /* PM22
  IF CODES.GEN-ALPHA-VALUE = 'Y'                                 /* PM22
    #HOLD-SUFFIX    := #CGA-SCR-SUFFIX                           /* PM22
    #CGA-SCR-SUFFIX := '*NX'                                     /* PM22
    RESET #BACK-UP-TO (*)                                        /* PM22
    SEPARATE CODES.ADDL-INFO INTO #BACK-UP-TO (*) IGNORE         /* PM22
      WITH DELIMITER ';'                                         /* PM22
    FOR #NX-TO 1 TO 10                                           /* PM22
      IF #BACK-UP-TO (#NX-TO) = ' '                              /* PM22
        ESCAPE BOTTOM                                            /* PM22
      END-IF                                                     /* PM22
*
      #TO-INIT := #BACK-UP-TO (#NX-TO)                           /* PM22
      FETCH RETURN 'G4090PNX' #CGA-CLERK #TO-INIT #NOTE-TEXT (*) /* PM22
    END-FOR                                                      /* PM22
*
    #CGA-SCR-SUFFIX := #HOLD-SUFFIX                              /* PM22
    END TRANSACTION                                              /* PM22
  END-IF                                                         /* PM22
END-FIND                                                         /* PM22
*
#DATABASE := GET_DBN(<>)
*
IF #DATABASE = 223
  FIND CODES WITH SEC-KEY = 'CODE040'
    COMPRESS GEN-ALPHA-VALUE ',' P_TO INTO P_TO LEAVING NO
  END-FIND
ELSE
  FIND (1) TRM-V WITH CLERK-ID = #CGA-CLERK
    MOVE TRM-V.EMAIL TO P_TO
  END-FIND
END-IF
*
#BENE-NAME := 'LETTER'                                           /* PM23
CALLNAT 'GPRS0CNT' ST-V.MEMBER-CONTACT-ID #BENE-NAME             /* PM23
*                                                                /* PM23
COMPRESS '"' 'CN' #CGA-ID '-' #BENE-NAME '- Approved for payment - Beneficiary Data Validated' '"' INTO P_SUBJ /* PM23
*
IF P_TO NE ' '
  CALLNAT 'GPRS0EML' P_EMAIL
END-IF
*
END-SUBROUTINE
*
END
