* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: CVALUSXX    CALC CSV/CV/LV/MCSV/DB/PREM by line
*
****************************************************************
*                       MODIFICATION LOG
* USER   DATE      TAG     REASON
*
* PAM    07142004  PM1  RPU policies should always use cash value
*                       instead of TPP per Rick Browett.
* DRW    11/15/2004 DW2 if suffix is VW do not reset #MCSV or #CSV
* DRW    11/16/2004 DW3 FIX MIN CSV CALC
* DRW    02/11/2005 DW4 Calc ACC INT also if suffix is UPD
* DRW    04/15/2005 DW5 Add Call to GDROPSTM to handle DB Changes
* DRW    04/15/2005 DW6 Add Face-amt & TPP Linkage Processing
* DRW    06/18/2005 DW7 Calc MCSV properly for AL policies
* DRW    06/21/2005 DW8 Removed CAP GRADED CSV Logic
* DRW    06/21/2005 DW9 Process all segments even if TERMINATED
* PAM    05/27/2005 PM10 Adjust AVL-TDIV for 124156 per RLB
* DRW    10/20/2006 DW11 Bypass AVL TDIV if already conv for AFSC /UNIX
* DRW    10/23/2006 DW12 Use passed as-of-date not *datn
* YAK    12/05/2007 YK1  Remove hardcording for interest rates
*                        (use function to read GEN-TABLE)
* YAK    02/05/2008 YK2  Change code to use FUNCTION-INT-RATE
*                         to get rate from GEN-TABLE
* DRW   08/23/2008  DW13 Gen Plus Processing
* PAM   04/16/2010  PM14 Remove process-ind 'S' check
* YAK   10/15/2012  YK3  Use function to identify Level Term II plans
* YAK   11/07/2012  YK4  Add No Medical Term plan (EZ)
* TMT   06/16/2014  TT1  Contact Normalization - DOB and SEX
* YAK   10/15/2014  YK5  Replace 'AL' with function
* vxt   04/21/2015  vt1  Changes per Kathie's request
* vxt   04/28/2015  vt2  Changes per Kathie's request 
*****************************************************************
*
DEFINE DATA
PARAMETER
1 #CN        (N6)
1 REDEFINE #CN
  2 #CN-A      (A6)
1 #SUFFIX     (A3)
1 #AS-OF-YYYYMMDD (N8)
1 REDEFINE #AS-OF-YYYYMMDD
  2 #AS-OF-YYYYMM (N6)
  2 REDEFINE #AS-OF-YYYYMM
    3 #AS-OF-YYYY  (N4)
    3 #AS-OF-MM    (N2)
  2 #AS-OF-DD     (N2)
1 #LOAN-BAL   (N7.2/9)
1 #LOAN-BAL-2 (N7.2/9)
1 #ACC-INT    (N7.2/9)
1 #ACC-INT-2  (N7.2/9)
1 #CSV        (N7.2/9)
1 #CVALUE     (N7.2/9)
1 #LVALUE     (N7.2/9)
1 #MCSV       (N7.2/9)
1 #DB         (N7.2/9)
1 #ANN-PREM   (N7.2/9)
1 #FACE-AMT   (N7.2/9)   /* DW6
1 #TPP        (N7.2/9)   /* DW6
*
LOCAL
*
* 1 #CURR-VAR-INT-RATE (P2.3) INIT <8.10>  /* YK1
1 #CURR-VAR-INT-RATE (P2.3)                /* YK1
1 #BASE-FOR-LV       (N7.2)
1 #DAILY-INT   (P3.7)
1 #DAILY-INT-2 (P3.7)
1 #CSV-P    (P7.2)   /* DW5
1 #DB-P     (P7.2)   /* DW5
1 #BG-CSV-P (P7.2)   /* DW5
*
1 #TERM-POL   (L)
1 #NUM-MONTHS     (N2)
1 #MONTHLY-INCR    (N5.2)
*
1 #TEXT            (A78)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID                        /* TT1
*  2 DATE-OF-BIRTH                          /* TT1
  2 PROCESS-IND
  2 INTRO-FLAG
  2 X-LOAN-AMOUNT       (9)
  2 X-ACCUM-INTEREST      (9)
  2 X-NXT-YR-ACCUM-INT (9)
  2 X-LOAN-DATE         (9)
  2 REDEFINE X-LOAN-DATE
    3 X-LOAN-DATE-OCC    (9)
      4 X-LOAN-YYYY      (N4)
      4 X-LOAN-MM        (N2)
      4 X-LOAN-DD        (N2)
  2 X-INTEREST-RATE     (9)
  2 X-LOAN-AMOUNT-2     (9)
  2 X-ACCUM-INTEREST-2    (9)
  2 X-NXT-YR-ACCUM-INT-2 (9)
  2 X-LOAN-DATE-2         (9)
  2 REDEFINE X-LOAN-DATE-2
    3 X-LOAN-DATE-2-OCC    (9)
      4 X-LOAN-YYYY-2      (N4)
      4 X-LOAN-MM-2        (N2)
      4 X-LOAN-DD-2        (N2)
  2 X-FIRST-PLACE-FEE   (9)
  2 X-BILL-ADJUST       (9)
  2 CAP-CONV-ACV
  2 DEBIT-CREDIT-AMT
  2 SPLIT-IND          (9)
  2 MTD-ACV-PREM-ADJ   (9)
  2 MTD-ACV-INT-ADJ    (9)
  2 MTD-ACV-COI-ADJ    (9)
* 2 C*ACTIVE-SEGMENTS
  2 FACE-AMOUNT        (9)
  2 PAY-STATUS         (9)
  2 SMOKER-FLAG        (9)
  2 MONTH-IND          (9)
  2 ANNUAL-PREM        (9)
  2 MODE               (9)
  2 ISSUE-DATE         (9)
  2 REDEFINE ISSUE-DATE
    3 ISSUE-DATE-OCC    (9)
      4 ISSUE-DATE-YYYY  (N4)
      4 ISSUE-DATE-MM    (N2)
      4 ISSUE-DATE-DD    (N2)
*
  2 MONTH-ALLOC-AMT    (9)
  2 ISSUE-AGE          (9)
  2 PLAN               (9)
  2 REDEFINE PLAN
    3 PLAN-OCC    (9)
      4 PLAN-A1   (A1)
      4 PLAN-A2   (A2)
  2 CONV-DURATION      (9)
  2 ACC-CASH-VALUE     (9)
  2 BEG-CASH-VALUE     (9)    /* cont fund on nxt policies
  2 CASH-VALUE         (9)
  2 NXT-MON-CASH-VALUE (9)
  2 MIN-CASH-VALUE     (9)
  2 NXT-YR-MIN-CASH-VALUE (9)
  2 DEATH-BENEFIT      (9)
  2 NXT-MON-DEATH-BENEFIT (9)
  2 LAST-ANN-CASH-VALUE(9)
  2 COST-BASIS         (9)
  2 TOT-PREMIUMS-PAID  (9)
  2 PAID-TO-DATE       (9)
  2 PAID-UP-DATE       (9)
  2 ONLINE-ACTION-GN
  2 ONLINE-ACTION      (9)
  2 STATUS             (9)
*
1 #CAP-LOAN-MONS   (N3)
1 #CAP-CSV-MONS    (N3)
1 #CAP-REMAIN-MONS (N3)
1 #CAP-CONV-ACV    (P7.2)
1 #WORK-CAP-CONV-ACV (P9.2)
1 #CAP-LOAN-END-DATE (N8)
1 #CV         (P7.2)
1 #ACV        (P7.2)
1 #CAP-CSV    (P7.2)
1 #STATUS    (A4)
1 #EFF-DATE   (N8)
1 #PLAN-N   (A3)
1 REDEFINE #PLAN-N
  2 #PLAN-A1 (A1)
  2 #PLAN-N2 (N2)
*
1 VA-V VIEW OF A-VA-HISTORY
  2 YEAR-MONTH-M        (P7/13)
  2 PREMIUM-M           (13)
  2 ACCUM-CASH-VALUE-M  (13)
  2 INTEREST-M          (13)
  2 COST-OF-INSURANCE-M (13)
  2 PRORAT-LOAN-BAL-M   (13)
  2 PRORAT-LN-ACC-INT-M (13)
*
1 #PREV-ACV  (P7.2)
1 #NEW-ACV   (P7.2)
1 #ACV-DIFF  (P7.2)
1 #REAL-PREM (N6.2)
*
1 #HIST-KEY        (N15)
1 REDEFINE #HIST-KEY
  2 #HIST-KEY-ID     (N6)
  2 #HIST-KEY-ISS    (N8)
  2 #HIST-KEY-SPL    (N1)
*
1 #AVL-TDIV     (P7.2)
1 #WORK-DB      (P7.2)
*
1 #I1 (I2)
1 #I2 (I2)
1 #I3 (I2)
1 #I4 (I2)
1 #I5 (I2)
*
1 #YYYYMMDD   (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY   (N4)
    3 #MM     (N2)
  2 #DD     (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A (A4)
  2 #MM-A   (A2)
  2 #DD-A   (A2)
*
* BELOW for CALC-PREMS-PAID
1 #PP-DATE-OF-BIRTH  (N8)
1 #PP-ANNUAL-PREM    (N5.2)
1 #PP-PAY-STATUS     (A2)
1 #PP-TOT-PREMIUMS-PAID (N7.2)
1 #PP-PAID-TO-DATE   (N8)
1 #PP-ISSUE-DATE     (N8)
1 #PP-MODE           (A1)
1 #PP-PLAN           (A3)
1 #PP-COST-BASIS      (N7.2)
1 #PP-MONTH-ALLOC-AMT (N7.2)    /*TT1
1 #PP-INTRO-FLAG     (A1)
1 #PP-FIRST-PLACE-FEE (N7.2)
1 #PREMS-PAID         (P7.2)
1 #SUB-PREMS-PAID     (P7.2)
1 #PP-BADJ            (P5.2)
* ABOVE for CALC-PREMS-PAID
*
1 DATE-OF-BIRTH       (N8.0)    /*TT1
END-DEFINE
* * * * * * * * *
*
IF #AS-OF-YYYYMMDD = 0
  MOVE *DATN TO #AS-OF-YYYYMMDD
END-IF
*
RESET #CSV        (*)   /* FACE AMOUNT is only updated not created
  #MCSV       (*)
  #DB         (*)
  #ANN-PREM   (*)
  #LOAN-BAL   (*)
  #LOAN-BAL-2 (*)
  #ACC-INT    (*)
  #ACC-INT-2  (*)
  #TPP        (*)   /* DW6
*
#CURR-VAR-INT-RATE := FUNCTION-INT-RATE(<'RATE5AB'>)  /* YK2
*
FIND (1) ST-V WITH MEMBER-KEY = #CN-A
  FOR #I1 1 TO 9
    IF STATUS (#I1) = ' '     /* DW9
      ESCAPE TOP
    END-IF
*
    RESET #TERM-POL
*    IF (PLAN (#I1) = 'RT' OR = 'LT' OR = 'SO')                  /* YK3
*    OR ((PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z'))      /* YK3
    IF (PLAN (#I1) = 'SO') OR FUNCTION-TERM-POLICY(<PLAN(#I1)>) /* YK3
      MOVE TRUE TO #TERM-POL
    END-IF
*
    IF PAY-STATUS (#I1) LT '40'
      MOVE ANNUAL-PREM (#I1) TO #ANN-PREM (#I1)
    END-IF
*
*   CALC LOAN/INT VALUES
    MOVE X-LOAN-AMOUNT   (#I1) TO #LOAN-BAL   (#I1)
*
    IF X-LOAN-AMOUNT (#I1) = 0
      COMPUTE #ACC-INT (#I1) = X-ACCUM-INTEREST (#I1)
        + X-NXT-YR-ACCUM-INT (#I1)
    ELSE
      COMPUTE ROUNDED #DAILY-INT  =
        X-LOAN-AMOUNT (#I1) * (X-INTEREST-RATE (#I1) / 365) / 100
*
      IF   (X-LOAN-MM(#I1) = #AS-OF-MM)
          AND (X-LOAN-YYYY (#I1) = #AS-OF-YYYY)
        COMPUTE ROUNDED #ACC-INT (#I1) =
          ((#AS-OF-DD - X-LOAN-DD (#I1) ) * #DAILY-INT)
          + X-ACCUM-INTEREST (#I1) + X-NXT-YR-ACCUM-INT (#I1)
      ELSE
        COMPUTE ROUNDED #ACC-INT (#I1) =
          ((#AS-OF-DD - 1) * #DAILY-INT)
          + X-ACCUM-INTEREST (#I1) + X-NXT-YR-ACCUM-INT (#I1)
      END-IF
    END-IF
*
    MOVE X-LOAN-AMOUNT-2 (#I1) TO #LOAN-BAL-2 (#I1)
*
    IF X-LOAN-AMOUNT-2 (#I1) = 0
      COMPUTE #ACC-INT-2 (#I1) = X-ACCUM-INTEREST-2 (#I1)
        + X-NXT-YR-ACCUM-INT-2 (#I1)
    ELSE
      COMPUTE ROUNDED #DAILY-INT-2 =
        X-LOAN-AMOUNT-2 (#I1) * (#CURR-VAR-INT-RATE / 365) / 100
*
      IF   (X-LOAN-MM-2   (#I1) = #AS-OF-MM)
          AND (X-LOAN-YYYY-2 (#I1) = #AS-OF-YYYY)
        COMPUTE ROUNDED #ACC-INT-2 (#I1) =
          ((#AS-OF-DD - X-LOAN-DD-2 (#I1)) * #DAILY-INT-2)
          + X-ACCUM-INTEREST-2 (#I1) + X-NXT-YR-ACCUM-INT-2 (#I1)
      ELSE
        COMPUTE ROUNDED #ACC-INT-2 (#I1) =
          ((#AS-OF-DD - 1) * #DAILY-INT-2)
          + X-ACCUM-INTEREST-2 (#I1) + X-NXT-YR-ACCUM-INT-2 (#I1)
      END-IF
    END-IF
*
    RESET #AVL-TDIV
    IF   (ISSUE-DATE (#I1) GE 19970101)
        AND (MONTH-ALLOC-AMT (#I1) NE 999.99)
        AND (NOT #TERM-POL)
        AND (MONTH-IND (#I1) NE 999)  /* Inds has been converted /* DW11
*                                  /* for AFSC UNIX/Mainframe processing
      COMPUTE #AVL-TDIV = BEG-CASH-VALUE (#I1) - MONTH-ALLOC-AMT (#I1)
      IF #AVL-TDIV LT 0
        RESET #AVL-TDIV
      END-IF
*
      IF ST-V.ID-NUMBER = 124156                                 /* PM10
          AND ST-V.ISSUE-DATE (#I1) = 20040413                      /* PM10
          AND ST-V.DEATH-BENEFIT (#I1) = 226000                     /* PM10
        MOVE 10150.58 TO #AVL-TDIV                              /* PM10
      END-IF                                                     /* PM10
*
      if st-v.id-number = 52291                                    /* vt1  \/ 04/21/2015
          and st-v.issue-date (#i1) = 20040218
          and st-v.death-benefit (#i1)  = 42803.44
        reset #AVL-TDIV
      end-if                                                       /* vt1  /\ 04/21/2015
*
      if st-v.id-number = 55210                                    /* vt2  \/ 04/28/2015
          and st-v.issue-date (#i1) = 20020513
          and st-v.death-benefit (#i1)  = 118197.23
        reset #AVL-TDIV
      end-if                                                       /* vt2  /\ 04/28/2015
*
    END-IF
*
    IF ((ONLINE-ACTION (#I1) = '1') OR (ONLINE-ACTION-GN = '2'))
*    AND (PLAN (#I1) NE 'AL')                /* DW5
        AND (NOT IS-ANNUITY-LIFE(<PLAN(#I1)>))   /* YK5
      MOVE FACE-AMOUNT (#I1) TO #DB (#I1)
    ELSE
      MOVE PLAN (#I1) TO #PLAN-N      /* DW5
*     MOVE *DATN TO #EFF-DATE
      MOVE #AS-OF-YYYYMMDD TO #EFF-DATE   /* DW12
      RESET DATE-OF-BIRTH
      DATE-OF-BIRTH       := GET-DATE-OF-BIRTH(<ST-V.MEMBER-CONTACT-ID>)
      IF ((PLAN (#I1) = 'LT') AND (DATE-OF-BIRTH LE #EFF-DATE - 400000))
          OR ((PLAN (#I1) = 'RT') AND (ISSUE-AGE (#I1) GT '65'))
          OR ((PLAN (#I1) = 'EZ') AND (PAID-UP-DATE(#I1) LE #EFF-DATE))        /* YK4
*      OR  (((PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z'))             /* YK3
          OR (F-LT2-TRUE(<PLAN(#I1)>)                                          /* YK3
          AND ((ISSUE-DATE(#I1) + 40000) LE #EFF-DATE))
*      OR  (PLAN (#I1) = 'AL')   /* DW4
          OR  IS-ANNUITY-LIFE(<PLAN(#I1)>)    /* YK5
*
        IF  (ISSUE-DATE-DD(#I1) = 01)     /* DW5
            OR (#AS-OF-DD GE ISSUE-DATE-DD (#I1))
          MOVE DEATH-BENEFIT (#I1) TO #DB-P
          MOVE CASH-VALUE    (#I1) TO #CSV-P
          MOVE BEG-CASH-VALUE(#I1) TO #BG-CSV-P
        ELSE
          MOVE NXT-MON-DEATH-BENEFIT(#I1) TO #DB-P
          MOVE NXT-MON-CASH-VALUE   (#I1) TO #CSV-P
          RESET                              #BG-CSV-P
        END-IF
*
        IF MTD-ACV-PREM-ADJ (#I1) NE 9999999.99
          ADD MTD-ACV-PREM-ADJ (#I1) TO #CSV-P
        END-IF
*
        IF MTD-ACV-INT-ADJ (#I1) NE 99999.99
          ADD MTD-ACV-INT-ADJ (#I1) TO #CSV-P
        END-IF
*
        IF MTD-ACV-COI-ADJ (#I1) NE 99999.99
          SUBTRACT MTD-ACV-COI-ADJ (#I1) FROM #CSV-P
        END-IF
*
        CALLNAT 'GDROPSTM'     /* DW5
          PLAN          (#I1)
          SMOKER-FLAG   (#I1)
          DATE-OF-BIRTH
          ISSUE-DATE    (#I1)
          PAID-UP-DATE  (#I1)
          #EFF-DATE
          ISSUE-AGE     (#I1)
          #STATUS
          FACE-AMOUNT   (#I1)
          #DB-P
          #CSV-P               /* DW4
          #BG-CSV-P            /* DW4
*
        MOVE FACE-AMOUNT (#I1) TO #FACE-AMT (#I1)   /* DW6
        MOVE #DB-P             TO #DB  (#I1)
      ELSE
        IF (ISSUE-DATE-DD(#I1) = 01)
            OR (#AS-OF-DD GE ISSUE-DATE-DD (#I1))
            OR (#TERM-POL)
          MOVE DEATH-BENEFIT (#I1) TO #DB (#I1)  /* USE CURR DB
          ADD #AVL-TDIV TO #DB (#I1)
*
          IF (ISSUE-DATE (#I1) GE 19970101)
              AND (MONTH-ALLOC-AMT (#I1) NE 999.99)
              AND (LAST-ANN-CASH-VALUE (#I1) GT #DB (#I1))
              AND (NOT #TERM-POL)
            MOVE LAST-ANN-CASH-VALUE (#I1) TO #DB (#I1)
          END-IF
        ELSE
          IF (ISSUE-DATE (#I1) GE 19970101)
              AND (MONTH-ALLOC-AMT (#I1) NE 999.99)
              AND (LAST-ANN-CASH-VALUE (#I1) GT
              NXT-MON-DEATH-BENEFIT (#I1))
            MOVE LAST-ANN-CASH-VALUE (#I1) TO #DB (#I1)
          ELSE
            MOVE NXT-MON-DEATH-BENEFIT(#I1) TO #DB(#I1)/* LST MONTH
          END-IF
        END-IF
      END-IF
    END-IF
*
    PERFORM CALC-PREMS-PAID
    MOVE #PREMS-PAID TO #TPP (#I1)     /* DW6
*
    IF #TERM-POL
      ESCAPE TOP
    END-IF
*
    IF (ISSUE-DATE-DD (#I1) = 01) OR (#AS-OF-DD GE ISSUE-DATE-DD (#I1))
      MOVE CASH-VALUE (#I1) TO #CSV (#I1)   /* USE CURR CSV
    ELSE
      MOVE NXT-MON-CASH-VALUE(#I1) TO #CSV (#I1) /* USE LAST CSV
*
      MOVE ST-V.ID-NUMBER TO #HIST-KEY-ID
      MOVE ISSUE-DATE (#I1) TO #HIST-KEY-ISS
      MOVE ST-V.SPLIT-IND (#I1) TO #HIST-KEY-SPL
*     MOVE *DATN TO #YYYYMMDD
      MOVE #AS-OF-YYYYMMDD TO #YYYYMMDD   /* DW12
      SUBTRACT 1 FROM #MM
      IF #MM LT 1
        MOVE 12 TO #MM
        SUBTRACT 1 FROM #YYYY
      END-IF
*
      FIND VA-V WITH RECORD-KEY = #HIST-KEY
        IF   (YEAR-MONTH-M (13) = #YYYYMM)
          MOVE ACCUM-CASH-VALUE-M (12) TO #PREV-ACV
          COMPUTE #NEW-ACV = #PREV-ACV + PREMIUM-M  (13)
            + INTEREST-M       (13)
            - COST-OF-INSURANCE-M (13)
*
          IF   (#I1 LE 9)
              AND (ISSUE-DATE (#I1) GE 19970101) /* 1997 pol
              AND (MONTH-ALLOC-AMT (#I1) NE 999.99) /* not FORCED 96 PREMS
            SUBTRACT PRORAT-LOAN-BAL-M   (13) FROM #NEW-ACV
            SUBTRACT PRORAT-LN-ACC-INT-M (13) FROM #NEW-ACV
          END-IF
*
          IF #NEW-ACV GT ACCUM-CASH-VALUE-M (13)
            COMPUTE #ACV-DIFF = #NEW-ACV - ACCUM-CASH-VALUE-M(13)
          ELSE
            COMPUTE #ACV-DIFF = ACCUM-CASH-VALUE-M(13) - #NEW-ACV
          END-IF
*
          MOVE PREMIUM-M (13) TO #REAL-PREM
*
          IF #ACV-DIFF NE 0
            PERFORM CALC-REAL-PREM
          END-IF
          ADD #REAL-PREM TO #CSV (#I1)
        END-IF
      END-FIND
    END-IF
*
    IF   (ISSUE-DATE (#I1) GE 19970101)  /*   Nxt policy
        AND (MONTH-ALLOC-AMT (#I1) NE 999.99)
      COMPUTE #CVALUE (#I1) = ACC-CASH-VALUE(#I1) - BEG-CASH-VALUE(#I1)
    ELSE
      MOVE CASH-VALUE (#I1) TO #CVALUE (#I1)
    END-IF
    MOVE #CVALUE (#I1) TO #BASE-FOR-LV
*
    IF PLAN (#I1) NE 'GPL'                          /* DW13
      IF MTD-ACV-PREM-ADJ (#I1) NE 9999999.99
        ADD MTD-ACV-PREM-ADJ (#I1) TO #CSV (#I1)
        ADD MTD-ACV-PREM-ADJ (#I1) TO #BASE-FOR-LV
      END-IF
*
      IF MTD-ACV-INT-ADJ (#I1) NE 99999.99
        ADD MTD-ACV-INT-ADJ (#I1) TO #CSV (#I1)
        ADD MTD-ACV-INT-ADJ (#I1) TO #BASE-FOR-LV
      END-IF
*
      IF MTD-ACV-COI-ADJ (#I1) NE 99999.99
        SUBTRACT MTD-ACV-COI-ADJ (#I1) FROM #CSV (#I1)
        SUBTRACT MTD-ACV-COI-ADJ (#I1) FROM #BASE-FOR-LV
      END-IF
    END-IF
*
    COMPUTE #LVALUE (#I1) = #BASE-FOR-LV * .75
*   IF   (ISSUE-DATE (#I1) GE 19970101)    - removed 5/24/2004
*    AND (MONTH-ALLOC-AMT (#I1) NE 999.99)
*    AND (CONV-DURATION (#I1) NE 999)  /* CAP MBR - removed 5/24/2004
    IF   (#PREMS-PAID GT #CSV (#I1)) /* CSV never < tpp
        AND (X-FIRST-PLACE-FEE (#I1)  = 0)         /* fpf has been paid
        AND (NOT PLAN (#I1) = 'SO' OR = 'FSO')     /* SCV-ONLY has no CSV
*    AND (PROCESS-IND NE 'S')                 /* AFSC MEMBER         PM14
        AND (NOT #SUFFIX = 'NTP' OR = 'VW') /* NTP= don't apply TPP adj DW2
        AND (PAY-STATUS (#I1) NE '45')   /* rpu's do not use tpp        PM1
      MOVE #PREMS-PAID TO #CSV (#I1)
    END-IF
*
* IF CONV-DURATION (#I1) = 999    /* CAP MBR POLICY  (NO LONGER)  DW8
*     MOVE #CSV (#I1) TO #CV
*     MOVE ST-V.CAP-CONV-ACV  TO #CAP-CONV-ACV
*     PERFORM CALC-CAP-CSV
*     MOVE #CAP-CSV TO #CSV (#I1)
*   END-IF
*
    IF PLAN (#I1) = 'SO' OR = 'FSO'     /* SCV-ONLY has no CSV
      RESET #CSV (#I1)
    END-IF
*
*   CALC MIN CASH VALUE
*
    COMPUTE #NUM-MONTHS = #AS-OF-MM - ISSUE-DATE-MM (#I1)
    IF ISSUE-DATE-DD (#I1) GT #AS-OF-DD
      SUBTRACT 1 FROM #NUM-MONTHS
    END-IF
*
*   IF #NUM-MONTHS LT 0    /* NOT GOOD    11/2004    /* DW3
*     ADD 12 TO #NUM-MONTHS
*   END-IF
*
    IF #NUM-MONTHS LT 0           /* DW3
      RESET #NUM-MONTHS
    END-IF
*
    IF PAY-STATUS (#I1) = '44'
      IGNORE
    ELSE
*     IF PLAN (#I1) = 'AL'    /* DW7
      IF (IS-ANNUITY-LIFE(<PLAN(#I1)>))             /* YK5
        IF  (ISSUE-DATE-DD (#I1) = 01)
            OR (#AS-OF-DD GE ISSUE-DATE-DD (#I1))
          MOVE MIN-CASH-VALUE (#I1) TO #MCSV (#I1)
        ELSE
          MOVE NXT-YR-MIN-CASH-VALUE (#I1) TO #MCSV (#I1)
        END-IF
      ELSE
*       IF NOT DATE-OF-BIRTH + 960000 GT *DATN
        IF NOT DATE-OF-BIRTH + 960000 GT #AS-OF-YYYYMMDD   /* DW12
          MOVE NXT-YR-MIN-CASH-VALUE (#I1) TO #MCSV (#I1)
        ELSE
          COMPUTE ROUNDED #MONTHLY-INCR =            /* DW3
            ((NXT-YR-MIN-CASH-VALUE (#I1) - MIN-CASH-VALUE (#I1)) / 12)
          COMPUTE ROUNDED #MCSV (#I1) =
            MIN-CASH-VALUE (#I1) + (#MONTHLY-INCR * #NUM-MONTHS)
        END-IF
      END-IF
    END-IF
*
*   IF CONV-DURATION (#I1) = 999    /* CAP MBR POLICY   NO LONGER  DW8
*     MOVE #MCSV (#I1) TO #CV
*     RESET #CAP-CONV-ACV
*     PERFORM CALC-CAP-CSV
*     MOVE #CAP-CSV TO #MCSV (#I1)
*   END-IF
*
    IF   (#MCSV (#I1) GT #CSV (#I1)) /* Min exceeds CSV
        AND (#SUFFIX NE 'VW')    /* do not replace MCSV if VW    DW2
      MOVE #CSV (#I1) TO #MCSV (#I1)
    END-IF
*
*    IF   (NOT PLAN (#I1) = 'RT' OR = 'LT' OR = 'SO' OR = 'FSO')          /* YK3
*    AND ((PLAN-A1 (#I1) LT 'U') OR (PLAN-A1 (#I1) GT 'Z'))               /* YK3
    IF  (NOT PLAN (#I1) = 'SO' OR = 'FSO')                               /* YK3
        AND (NOT FUNCTION-TERM-POLICY(<PLAN(#I1)>))                          /* YK3
*    AND (ISSUE-DATE (#I1) GE 19970101)  /*   - removed 5/24/2004
*    AND (CONV-DURATION (#I1) NE 999)   /* CAP MBR - removed 5/24/2004
        AND (MONTH-ALLOC-AMT (#I1) NE 999.99)
        AND (#PREMS-PAID GT #MCSV (#I1))
        AND (DEBIT-CREDIT-AMT LT #PREMS-PAID)      /* lump sum paid
        AND (NOT #SUFFIX = 'NTP' OR = 'VW') /* NTP= don't apply TPP adj DW2
      MOVE #PREMS-PAID TO #MCSV (#I1)
    END-IF
*
    IF PLAN (#I1) = 'SO' OR = 'FSO'     /* SCV-ONLY has no CSV
      RESET #MCSV (#I1)
    END-IF
*   DISPLAY #I1 #CVALUE (#I1) #LVALUE (#I1) #ACC-INT (#I1)
  END-FOR /*(0250)
END-FIND
*
* * * * * * * * * * * * * * * *
* DEFINE SUBROUTINE CALC-CAP-CSV  REMOVED 4/21/2005   DW8
* * * * * * * * * * * * * * * *
*
* IF PAY-STATUS (#I1) GE '40'
*   MOVE #CV TO #CAP-CSV
*   ESCAPE ROUTINE
* END-IF
*
* IF FACE-AMOUNT (#I1) GT 10000.00
*   COMPUTE ROUNDED #WORK-CAP-CONV-ACV =
*     ((#CV - #CAP-CONV-ACV) * (FACE-AMOUNT (#I1) - 10000))
*      / FACE-AMOUNT (#I1)
*   ADD #WORK-CAP-CONV-ACV TO #CAP-CONV-ACV
* END-IF
*
* IF ST-V.X-LOAN-AMOUNT (#I1) = 0
*   MOVE ST-V.X-LOAN-DATE (#I1) TO #CAP-LOAN-END-DATE
* ELSE
*   RESET #CAP-LOAN-END-DATE
* END-IF
*
* DISPLAY #CV #CAP-CSV #CAP-LOAN-MONS #CAP-CSV-MONS
* CALLNAT 'CCAPCSVP'
*   ID-NUMBER
*   ISSUE-DATE (#I1)
*    #CAP-LOAN-END-DATE
*   #AS-OF-YYYYMMDD
*   #CAP-CONV-ACV
*   #CV
*   #CAP-CSV
*   #CAP-LOAN-MONS
*   #CAP-CSV-MONS
*   #CAP-REMAIN-MONS
* DISPLAY #CV #CAP-CSV #CAP-LOAN-MONS #CAP-CSV-MONS
*
* END-SUBROUTINE  /* (0598)
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-PREMS-PAID
* * * * * * * * * * * * * * * * *
*
RESET #PREMS-PAID
MOVE DATE-OF-BIRTH           TO #PP-DATE-OF-BIRTH
MOVE ANNUAL-PREM       (#I1) TO #PP-ANNUAL-PREM
MOVE PAY-STATUS        (#I1) TO #PP-PAY-STATUS
MOVE TOT-PREMIUMS-PAID (#I1) TO #PP-TOT-PREMIUMS-PAID
MOVE PAID-TO-DATE      (#I1) TO #PP-PAID-TO-DATE
MOVE ISSUE-DATE        (#I1) TO #PP-ISSUE-DATE
MOVE MODE              (#I1) TO #PP-MODE
MOVE PLAN              (#I1) TO #PP-PLAN
MOVE COST-BASIS        (#I1) TO #PP-COST-BASIS
MOVE MONTH-ALLOC-AMT   (#I1) TO #PP-MONTH-ALLOC-AMT
MOVE INTRO-FLAG              TO #PP-INTRO-FLAG
MOVE X-FIRST-PLACE-FEE (#I1) TO #PP-FIRST-PLACE-FEE
MOVE X-BILL-ADJUST     (#I1) TO #PP-BADJ
*
CALLNAT 'GPRPDSCO'
  #PP-DATE-OF-BIRTH
  #PP-ANNUAL-PREM
  #PP-PAY-STATUS
  #PP-TOT-PREMIUMS-PAID
  #PP-PAID-TO-DATE
  #PP-ISSUE-DATE
  #PP-MODE
  #PP-PLAN
  #PP-COST-BASIS
  #PP-MONTH-ALLOC-AMT
  #PP-INTRO-FLAG
  #PP-FIRST-PLACE-FEE
  #PREMS-PAID
  #SUB-PREMS-PAID
  #PP-BADJ
*
END-SUBROUTINE
*
**********************************
DEFINE SUBROUTINE CALC-REAL-PREM
**********************************
*
FOR #I4 1 TO 800
  IF   (#ACV-DIFF GT ((#I4 * 1000) - 10))
      AND (#ACV-DIFF LT ((#I4 * 1000) + 10))
    IF #NEW-ACV LT ACCUM-CASH-VALUE-M (13)
      ADD (#I4 * 1000) TO #REAL-PREM
    ELSE
      SUBTRACT (#I4 * 1000) FROM #REAL-PREM
    END-IF
*
    ESCAPE BOTTOM
  END-IF
END-FOR
*
END-SUBROUTINE
*
END
