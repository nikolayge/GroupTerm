* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*   A00LAPSR bz HD-4103 
*   Laps and going to Laps
*   HD-9061 add Address data to Lapse_Risk (Restore sort order removed in tickets 7587 7702)
* ------------------------------------------------------------------------------------------
*                                             
DEFINE DATA
LOCAL USING ADDA0001 
LOCAL

1 MD-V VIEW OF A-MBRSHIP-MTD-DETAIL
  2 ID-NUMBER            /* D 
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER_A      (A6)
  2 ENTRY-DATE           /* D
  2 CODE
  2 ISSUE-DATE
  2 REDEFINE ISSUE-DATE
      3 ISSUE-DATE_A   (A8)
*
 1 ST-V VIEW OF A-STATUS
   2 ID-NUMBER
   2 PROCESS-IND 
   2 INTRO-FLAG 
   2 DATE-OF-DEATH
   2 C*ACTIVE-SEGMENTS
   2 ACTIVE-SEGMENTS(9)
     3 POLICY-ID
     3 ISSUE-DATE
     3 REDEFINE ISSUE-DATE
       4 ISSUE-DATE_A     (A8) 
     3 PLAN
*     3 CONV-DURATION
     3 MODE
     3 PAY-STATUS
     3 PAID-TO-DATE
     3 REDEFINE PAID-TO-DATE
        4 ptYYYY        (N4)
        4 ptMM          (N2)
     3 PAID-UP-DATE
     3 REDEFINE PAID-UP-DATE
       4 pud_YYYYMM     (N6)
     3 ANNUAL-PREM (N5.2) 
     3 FACE-AMOUNT (N7.2)
     3 STATUS
    2 PAD-CODE
*
 1 POL-V VIEW OF A-POLICY-CONTACTS
   2 POLICY-NUMBER           (A16)  /* D
   2 CONTACT-ID              (N8)   /* D
   2 RELATION                (N2)
   2 REFERENCE-NUMBER        (N6)   /* D
*
  1 CNT-V  VIEW OF A-CONTACTS
      2 ID-NUMBER
      2 CONTACT-ID
      2 FIRST-NAME
      2 LAST-NAME
      2 DATE-OF-DEATH
      2 EX-LAST-NAME
 1 p_Name          (A)    DYNAMIC
*   
1  f_out_1              (A) DYNAMIC  INIT <"/usr/SAG/AAFMAA/batch/workfiles/WORK/Lapsed_30-Days.TXT">
1  f_out_2              (A) DYNAMIC  INIT <"/usr/SAG/AAFMAA/batch/workfiles/WORK/Lapse_Risk_@@DD.tmp">
1  dm                   (A1)     INIT <H'09'>
*
1 #i                    (I2)  
1 #j                    (I2) 
1 #N                    (I1)  
1 A400                  (A400) 
1 wrk 
  2 Skip_1              (N6)  (EM=ZZZ,ZZ9)
  2 Skip_2              (N6)  (EM=ZZZ,ZZ9)
  2 Skip_3              (N6)  (EM=ZZZ,ZZ9)
  2 Skip_4              (N6)  (EM=ZZZ,ZZ9)
  2 Err_1               (N6)  (EM=ZZZ,ZZ9)
  2 Err_2               (N6)  (EM=ZZZ,ZZ9)
  2 Err_3               (N6)  (EM=ZZZ,ZZ9)
  2 Err_4               (N6)  (EM=ZZZ,ZZ9)
1 c_OK_1                (N6)  (EM=ZZZ,ZZ9)
1 c_OK_2                (N6)  (EM=ZZZ,ZZ9)
1 v_Phone               (A)   DYNAMIC
1 v_Email               (A)   DYNAMIC
1 #d                    (D)   
1 d_first               (N8)   /* for MD search
1 d_last                (N8)   /* for MD search

1 #d_N                  (N8)  INIT <*DATN>
1 REDEFINE #d_N         
  2 nYYYYMM             (N6) 
  2 nDD                 (N2)
1 REDEFINE #d_N           
  2 #d_N_A              (A08)
1 today_YYYYMM          (N6)

1 entr_Date             (N8)
1 A10                   (A10/5)
1 A04                   (A04)
1 GPYSTSXX-L            (L)
1 GPYSTSXX-MSG          (A60)

1 d_Pay                 (A8)
1 REDEFINE d_Pay 
  2 YYYY                (N4) 
  2 MM                  (N2)
  2 DD                  (A2)

1 v_DAYs                (N3)
* ---------- FT Put -----------------
1 Parm                  (A78)
1 f_Name                (A) DYNAMIC
1 DIRW                  (A) DYNAMIC INIT <'FTP/Temp'>
1 RC                    (N4)
1 CN_O                  (N6)
1 CN_I                  (N6)
1 I_First               (A) DYNAMIC
1 I_Last                (A) DYNAMIC
* 1 I_Name                (A) DYNAMIC
END-DEFINE
***********************************
ON ERROR
  WRITE  *PROGRAM "Err-ln:" *ERROR-LINE "Err:" *ERROR-NR / #i
  ESCAPE ROUTINE
END-ERROR
 FORMAT PS= 23
 
 IF *DEVICE='BATCH'
     INPUT Parm
     DIRW := *TRIM(Parm)
 END-IF
 
 d_Pay := *DATN
 EXAMINE f_out_2 FOR '@@DD' REPLACE d_Pay
 IF FN_EXIST (<f_out_1,1>) AND FN_EXIST (<f_out_2,1>) IGNORE END-IF
 DEFINE WORK FILE 1 f_out_1 TYPE 'ASCII-COMPRESSED'
 COMPRESS  *DAT4U *TIMX "  --  Lapsed for last 30 days  --"  INTO A400
 WRITE WORK FILE 1 A400
 DEFINE WORK FILE 2 f_out_2 TYPE 'ASCII-COMPRESSED'
 COMPRESS *DAT4U *TIMX  "  --  Ready to lapse for last two monthes  --"  INTO A400
 WRITE WORK FILE 2 '000' '1' A400
 COMPRESS  'Policy'    'Iss-Date'   'Paid-To'   'Lapse Date'  
           'Paid-Up'   'Plan'   'Mode'       'PaySt'     'Ann-Prm'
           'Face-amt'  'Status' 'Owner CN'  'First name' 'Last name' 'Email'
           'Phone'     'Salutation' 'Ins First name' 'Ins Last name' 
          INTO A400 WITH DELIMITERS dm
 WRITE WORK FILE 1 A400

 COMPRESS  'Policy' 'Iss-Date' 'Paid-To'  'Lapse Day'  'Days left'
           'Paid-Up'   'Plan'  'Mode'       'PaySt'     'Ann-Prm'
           'Face-amt'  'Status' 'Owner CN'  'First name' 'Last name' 'Email'
           'Phone'     'Salutation' 'Ins First name' 'Ins Last name'
          INTO A400 WITH DELIMITERS dm
WRITE WORK FILE 2 '000' '2' A400
 
* REPORT 1 MD lapses for 30 days and STATUS <> 'D'
  #N := 1
  #d := *DATX - 30 
  MOVE EDITED #d(EM=YYYYMMDD) TO d_Pay  
  d_first :=99999999 - val(d_Pay)
  d_last :=99999999 - *DATN 
  F1.  
  FIND MD-V WITH  ENTRY-DATE >= d_Last 
              AND ENTRY-DATE <= d_First
              SORTED BY ENTRY-DATE  DESCENDING
      WHERE ( CODE = 'L' OR = 'T' OR = 'U' OR = 'V' )
         IF NO RECORD FOUND
            WRITE 'No MD records for period 30 days'
            ESCAPE BOTTOM
         END-NOREC
    entr_Date := 99999999 - MD-V.ENTRY-DATE 
    FIND(1) ST-V WITH ID-NUMBER = MD-V.ID-NUMBER
         IF NO RECORD FOUND
             PRINT 'Error: Status-No CN' MD-V.ID-NUMBER 
             Err_3 := Err_3 + 1
             ESCAPE BOTTOM
          END-NOREC
       EXAMINE FULL ST-V.ISSUE-DATE_A(*) FOR FULL MD-V.ISSUE-DATE_A GIVING INDEX #i
       IF #i = 0 
          Err_4 := Err_4 + 1
          PRINT 'Error: Poicy' MD-V.ISSUE-DATE 'Not found in' ST-V.ID-NUMBER
       ELSE
          IF STATUS(#i) = 'D' 
            OR ( NOT FUNCTION-TERM-POLICY(<PLAN(#i)>) )
             Skip_1 := Skip_1 + 1
          ELSE
            PERFORM sbr_Out             
          END-IF   
       END-IF   
    END-FIND   
 END-FIND      
 CLOSE WORK FILE 1
   WRITE(0) NOTITLE  *DAT4U *TIMX 'Lapsed for last 30 days - since' 
            #d (EM=LLL' 'DD' 'NNN','YYYY)         /
   'Records found               ' *COUNTER(F1.)(EM=ZZZ,ZZ9)       / 
   'Reinstated or not Term      '   Skip_1       /
   'Has DOD                     '   Skip_2       /
   'No Policy-Relation  record  '   Err_1        /
   'No Owner or Insured relation'   Err_2        /
   'Status record not found     '   Err_3        /   
   'Policy not found by iss-date'   Err_4        /   
   'Output                      '   c_OK_1 
 PERFORM sbr_FTP
* --------------------------------------------------------------------------------------
* REPORT 2 Paid to date if before this month STATUS = 'D'
* --------------------------------------------------------------------------------------
  #d_N   := *DATN
  today_YYYYMM := nYYYYMM
  nDD    := 01
  d_Last := #d_N
  MOVE EDITED #d_N_A TO #d(EM=YYYYMMDD)
  #d := #d - 95
  MOVE EDITED #d(EM=YYYYMMDD) TO #d_N_A
  nDD := 01
  d_first := #d_N 
  #N:= 2
  RESET wrk
  R2.
  READ ST-V BY MEMBER-KEY       
     IF   (PROCESS-IND ='C') 
       OR (INTRO-FLAG = 'A')
       OR DATE-OF-DEATH <> 0
          Skip_1 := Skip_1 + 1                                         
         ESCAPE TOP                                                         /* S1
     END-IF
     FOR #i = 1 TO C*ACTIVE-SEGMENTS
        IF MODE(#i) = 'Q' OR = 'S' OR = 'A' OR = 'M'
           IGNORE
        ELSE
           Skip_3 := Skip_3 + 1
           ESCAPE TOP
        END-IF
        
        IF MODE(#i) = 'Q' AND ( PAD-CODE = 'P' OR PAD-CODE = 'D' ) /* easy pay
           Skip_3 := Skip_3 + 1
        END-IF
        
        IF pud_YYYYMM(#i) <= today_YYYYMM
           Skip_4 := Skip_4 + 1     
           ESCAPE TOP
        END-IF   

        IF   STATUS(#i)  <> 'D'
           OR (NOT FUNCTION-TERM-POLICY(<PLAN(#i)>))
           OR PAID-TO-DATE(#i) > d_Last
           OR PAID-TO-DATE(#i) < d_First
            Skip_3 := Skip_3 + 1
        ELSE
           PERFORM SBR_OUT
        END-IF
      END-FOR 
*     IF c_OK_2 = 50 ESCAPE BOTTOM END-IF
END-READ   
  CLOSE WORK FILE 2
  WRITE(0) NOTITLE *DAT4U *TIMX 'Ready to lapse.  Paid-To-Date' 
                    d_First(EM=9999-99-99) '-' d_Last(EM=9999-99-99)  /
   'Record read                        '   *COUNTER(R2.)(EM=ZZZ,ZZ9)   /
   'Skip - Not a member or Dead        '   Skip_1       /
   'Skip - Has DOD                     '   Skip_2       /
   'Skip - Date range, active, not term'   Skip_3       /      
   'Skip - Expire this Month           '   Skip_4       /      
   'No Policy-Relation  record         '   Err_1        /
   'No Owner record (relation 2)       '   Err_2        /
   'Output                             '   c_OK_2         
  f_out_1 := f_out_2
  EXAMINE f_out_1 FOR '.tmp' REPLACE '.TXT'
  COMPRESS '/usr/bin/sort -k1,4' f_out_2 '|' ' cut -c 5- >' f_out_1 INTO f_out_1
  CALL 'shcmd' f_out_1
  IF RET('shcmd') <> 0 
    PRINT(0) 'Sort Error' / f_out_1
  ELSE
     PERFORM sbr_FTP        
  END-IF
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
DEFINE sbr_Out
     CN_O := 0 CN_I := 0
     FIND POL-V WITH POLICY-NUMBER = POLICY-ID(#i) 
       IF NO RECORD FOUND
         Err_1 := Err_1 + 1                                           /* E1
         WRITE ST-V.ID-NUMBER 'seg' #i '[' POLICY-ID(#i) ']' 'No Policy' 
         REFERENCE-NUMBER := 0
         ESCAPE ROUTINE
       END-NOREC
       IF RELATION = 1 CN_I := REFERENCE-NUMBER END-IF
       IF RELATION = 2 CN_O := REFERENCE-NUMBER END-IF
     END-FIND

     IF CN_I = 0  OR CN_O = 0  Err_2 := Err_2 + 1 ESCAPE ROUTINE END-IF
     
     FCNT_I.
     FIND(1) CNT-V WITH ID-NUMBER =  CN_I END-FIND
     IF *NUMBER(FCNT_I.) = 0  Err_1 := Err_1 + 1  ESCAPE TOP  END-IF    /* E2
     IF CNT-V.DATE-OF-DEATH <> 0  Skip_2 := Skip_2 + 1 ESCAPE ROUTINE  END-IF    /* E3
     I_First := EDIT_NAME_LOWCASE(<FIRST-NAME>)
     IF EX-LAST-NAME <>  ' ' 
       AND  LAST-NAME = *TRANSLATE(EX-LAST-NAME, UPPER)       
         I_Last := EX-LAST-NAME                              
     ELSE                                                            
         I_Last := EDIT_NAME_LOWCASE(<LAST-NAME>)      
     END-IF                                                          
     
     FCNT_O.
     FIND(1) CNT-V WITH ID-NUMBER =  CN_O END-FIND
     IF *NUMBER(FCNT_O.) = 0  Err_1 := Err_1 + 1  ESCAPE TOP  END-IF    /* E2
     IF CNT-V.DATE-OF-DEATH <> 0  Skip_2 := Skip_2 + 1 ESCAPE ROUTINE  END-IF    /* E3
     
     FIRST-NAME := EDIT_NAME_LOWCASE(<FIRST-NAME>)
     IF EX-LAST-NAME <>  ' ' 
       AND  LAST-NAME = *TRANSLATE(EX-LAST-NAME, UPPER)       
         LAST-NAME := EX-LAST-NAME                              
     ELSE                                                            
         LAST-NAME := EDIT_NAME_LOWCASE(<LAST-NAME>)      
     END-IF                                                          
      p_Name := 'L'                                   
      CALLNAT 'GPRS0CNT' CNT-V.CONTACT-ID p_Name
      IF p_Name = ' '  p_Name := '?'      END-IF   
      v_Email := GET-EML(<CNT-V.CONTACT-ID>)
      v_Phone := GET-PHONE(<CNT-V.CONTACT-ID>)

      MOVE EDITED ST-V.ISSUE-DATE(#i)(EM=9999-99-99) TO A10(1)
      d_Pay.YYYY := ptYYYY(#i)
      d_Pay.MM := ptMM(#i) 
      MOVE EDITED ST-V.ISSUE-DATE_A(#i) TO #d (EM=YYYYMMDD)
      #d := #d - 1
      MOVE EDITED #d (EM=DD) TO d_Pay.DD
      REPEAT UNTIL d_Pay = MASK (YYYYMMDD)
        #d := #d - 1
        MOVE EDITED #d (EM=DD) TO d_Pay.DD    
      END-REPEAT  
      MOVE EDITED d_Pay (EM=XXXX-XX-XX) TO A10(2)           /* Paid to 
      MOVE EDITED ST-V.PAID-UP-DATE(#i)(EM=9999-99-99) TO A10(3)
      CALLNAT 'GPYSTSXX'  PAY-STATUS(#i) A04 GPYSTSXX-L GPYSTSXX-MSG
    DECIDE ON FIRST VALUE #N
    VALUE 1 
      c_OK_1 := c_OK_1 + 1
      MOVE EDITED entr_date(EM=9999-99-99) TO A10(4)
      COMPRESS NUMERIC POLICY-ID(#i)
           dm  A10(1)
           dm  A10(2)
           dm  A10(4)
           dm  A10(3)
           dm  ST-V.PLAN(#i)
           dm  MODE(#i)
           dm  A04
           dm  ANNUAL-PREM(#i)
           dm  FACE-AMOUNT(#i)
           dm  STATUS(#i)
           dm  CN_O
           dm  FIRST-NAME
           dm  LAST-NAME
           dm  v_Email
           dm  v_Phone
           dm  p_Name
           dm  I_First
           dm  I_Last
                  INTO A400 LEAVING NO SPACE
      WRITE WORK FILE 1 A400
    VALUE 2
      c_OK_2 := c_OK_2 + 1
      PERFORM sbr_Laps_Day  
      MOVE EDITED d_Pay (EM=XXXX-XX-XX) TO A10(4)
      RESET #PDA-ADDRESS
      #ADD-TYPE := 'P'
      #ADD-CONTACT-ID := CNT-V.CONTACT-ID
      CALLNAT 'ADDN0001' #PDA-ADDRESS
      COMPRESS NUMERIC POLICY-ID(#i)
           dm  A10(1)
           dm  A10(2)
           dm  A10(4)
           dm  v_Days           
           dm  A10(3)
           dm  ST-V.PLAN(#i)
           dm  MODE(#i)
           dm  A04
           dm  ANNUAL-PREM(#i)
           dm  FACE-AMOUNT(#i)
           dm  STATUS(#i)
           dm  CN_O
           dm  FIRST-NAME
           dm  LAST-NAME
           dm  v_Email
           dm  v_Phone
           dm  p_Name             
           dm  I_First
           dm  I_Last             
           dm  #ADD-LINE-1 
           dm  #ADD-LINE-2 
           dm  #ADD-CITY
           dm  #ADD-STATE
           dm #ADD-ZIP5 '-' #ADD-ZIP4
                  INTO A400 LEAVING NO SPACE
      WRITE WORK FILE 2 v_Days '3' A400 
    NONE IGNORE
    END-DECIDE
END-SUBROUTINE
* ------------------------------------------------------------
DEFINE sbr_Laps_Day

 d_Pay.MM := d_Pay.MM + 2
 IF MM > 12 MM := MM - 12 YYYY := YYYY + 1 END-IF
 MOVE EDITED #d (EM=DD) TO d_Pay.DD
  REPEAT UNTIL d_Pay = MASK (YYYYMMDD)
    #d := #d - 1
    MOVE EDITED #d (EM=DD) TO d_Pay.DD    
  END-REPEAT   
 
 MOVE EDITED d_Pay TO #d (EM=YYYYMMDD)
 v_Days := #d - *DATX

END-SUBROUTINE
* ---------------------------------------------------------------
DEFINE sbr_FTP
 
 EXAMINE DIRECTION  BACKWARD  f_out_1 FOR '/' POSITION #i
 #i := #i + 1
 MOVE SUBSTRING(f_out_1, #i) TO f_Name
 CALLNAT 'FTP-SBV' 'WORK' f_Name DIRW ' ' ' ' RC
 PRINT f_Name 'Sent to' DIRW  'with' '='RC
  
END-SUBROUTINE
* ---------------------------------------------------------------
END
* 05/16/2018 09:16:27 Lapsed for last 30 days - since Jun 15 Sun,2003        
* Records found                    198                                       
* Reinstated or not Term            23                                       
* Has DOD                            0                                       
* No Policy-Relation  record         0                                       
* No Owner or Insured relation       0                                       
* Status record not found            0                                       
* Policy not found by iss-date       0                                       
* Output                           175                                       
* Lapsed_30-Days.TXT Sent to FTP/Temp with RC:     0                         
* 05/16/2018 09:16:56 Ready to lapse.  Paid-To-Date 2018-01-01 - 2018-05-01  
* Record read                         168,891                                
* Skip - Not a member or Dead          27,048                                
* Skip - Has DOD                            0                                
* Skip - Date range, active, not term 171,834                                
* Skip - Expire this Month              7,675                                
* No Policy-Relation  record                0                                
* No Owner record (relation 2)              0                                
* Output                                  547                                
* Lapse_Risk_20180516.TXT Sent to FTP/Temp with RC:     0                                         
*                                                                                 
