* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCNARP2'
*
* DESCRIPTION
*   XML Parser implementationfor file:
*   null
*   using PARSE XML statement and datastructure 'AUCAAR02'
*
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
LOCAL USING AUCAAR02
LOCAL USING AUCAER01
LOCAL USING PARSER-X
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
*
LOCAL
1 #TRUE              (A4) CONST <'TRUE'>
1 #REORDER           (I4) CONST <6>
1 BLANK              (A1) CONST <' '>
1 #PARSE-ERROR       (I4) CONST <-7>
1 #NATURAL-ERROR     (I4) CONST <-3>
1 #ERROR-LOG         (I4) CONST <3>
*
1 #XML-TEMP          (A)   DYNAMIC
1 #UPDATED           (L)
1 #LEN               (I4)
1 #CX                (I4)
1 #AddressTypeCode   (A1)
1 #UnixUser          (A) DYNAMIC
1 #ClerkId           (A3)
END-DEFINE
*
ASSIGN #LEN := *LENGTH (#XML_INPUT)
#AUCerror.ErrorTag := 'AddressRelations'
IF #LEN <= 0
  #AUCerror.ErrorCode := #Parse-error
  #AUCerror.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNERS1' #XML_OUTPUT #AUCerror
  ESCAPE ROUTINE
END-IF
RESET AddressRelations
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
#AUCerror.ErrorCode := #PARSE-ERROR
#AUCerror.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNERS1' #XML_OUTPUT #AUCerror
END-SUBROUTINE
*
DEFINE SUBROUTINE CALLBACK
/*                ========
IF XML_PARSER_CONTENT_IS_EMPTY THEN
  IGNORE
ELSE
  #XML_VALUE := *TRIM (#XML_VALUE)
  MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
END-IF
PERFORM PARSE-DOCUMENT
END-SUBROUTINE
*
RESET #AUCerror.ErrorCode
FOR #CX 1 TO AddressRelations.C@AddressRelation
  #AddressTypeCode := AddressRelations.AddressTypeCode (#CX)
  RESET AddressRelations.ActionType (#CX)
  CALLNAT 'AUCNARM1' AddressRelation (#CX)  /* Get Relation
  AddressRelations.ActionType (#CX)      := #REORDER
  AddressRelations.AddressTypeCode (#CX) := #AddressTypeCode
  AddressRelations.ClerkId (#CX) := #ClerkId
  AddressRelations.User (#CX)    := #UnixUser
  CALLNAT 'AUCNARM1' AddressRelation (#CX)
  IF AddressRelations.ErrorCode (#CX) NE 0
    #AUCerror.ErrorCode := AddressRelations.ErrorCode (#CX)
    #AUCerror.ErrorDescription := AddressRelations.ErrorDescription (#CX)
    ESCAPE BOTTOM
  END-IF
END-FOR
IF #AUCerror.ErrorCode NE 0
  BACKOUT TRANSACTION
  CALLNAT 'AUCNERS1' #XML_OUTPUT #AUCerror
ELSE
  END TRANSACTION
  CALLNAT 'AUCNADG1' AddressRelations.ContactId (1)
    #XML_OUTPUT
END-IF
*
* ------------------------------------------------- CALL THE PARSER
DEFINE PARSE-DOCUMENT
/*     ==============
**PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE #XML_VALUE
*
DECIDE ON FIRST #XML_PATH
  VALUE 'AddressRelations//'
    IGNORE
  VALUE 'AddressRelations'
    RESET INITIAL AddressRelations
  VALUE 'AddressRelations/User//'
    IGNORE
  VALUE 'AddressRelations/User'
    IGNORE
  VALUE 'AddressRelations/User/$'
    IF #XML_VALUE NE BLANK
      #ClerkId := FUNCTION-WEB-USER(<#XML_VALUE>)(1)
      #UnixUser := FUNCTION-WEB-USER(<#XML_VALUE>)(2)
    END-IF
  VALUE 'AddressRelations/AddressRelation//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation'
    ADD 1 TO AddressRelations.C@AddressRelation
    #CX := AddressRelations.C@AddressRelation
    EXPAND ARRAY AddressRelations.AddressRelation TO (1:#CX)
  VALUE 'AddressRelations/AddressRelation/ActionType//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/ActionType'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/ActionType/$'
    AddressRelations.ActionType(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressRelations/AddressRelation/ErrorCode//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/ErrorCode'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/ErrorCode/$'
    AddressRelations.ErrorCode(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressRelations/AddressRelation/ErrorDescription//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/ErrorDescription'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/ErrorDescription/$'
    AddressRelations.ErrorDescription(#CX) := #XML_VALUE
  VALUE 'AddressRelations/AddressRelation/ContactID//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/ContactID'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/ContactID/$'
    AddressRelations.ContactID(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressRelations/AddressRelation/CN//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/CN'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/CN/$'
    AddressRelations.CN(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressRelations/AddressRelation/LastUpdatedDate//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/LastUpdatedDate'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/LastUpdatedDate/$'
    AddressRelations.LastUpdatedDate(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressRelations/AddressRelation/LastUpdatedTime//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/LastUpdatedTime'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/LastUpdatedTime/$'
    AddressRelations.LastUpdatedTime(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressRelations/AddressRelation/LastUpdatedUser//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/LastUpdatedUser'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/LastUpdatedUser/$'
    AddressRelations.LastUpdatedUser(#CX) := #XML_VALUE
  VALUE 'AddressRelations/AddressRelation/SystemSource//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/SystemSource'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/SystemSource/$'
    AddressRelations.SystemSource(#CX) := #XML_VALUE
  VALUE 'AddressRelations/AddressRelation/User//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/User'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/User/$'
    AddressRelations.User(#CX) := #XML_VALUE
  VALUE 'AddressRelations/AddressRelation/AddressPoolID//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/AddressPoolID'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/AddressPoolID/$'
    AddressRelations.AddressPoolID(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressRelations/AddressRelation/RelationID//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/RelationID'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/RelationID/$'
    AddressRelations.RelationID(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressRelations/AddressRelation/AddressTypeCode//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/AddressTypeCode'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/AddressTypeCode/$'
    AddressRelations.AddressTypeCode(#CX) := #XML_VALUE
  VALUE 'AddressRelations/AddressRelation/AddressLocationCode//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/AddressLocationCode'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/AddressLocationCode/$'
    AddressRelations.AddressLocationCode(#CX) := #XML_VALUE
  VALUE 'AddressRelations/AddressRelation/Source//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/Source'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/Source/$'
    AddressRelations.Source(#CX) := #XML_VALUE
  VALUE 'AddressRelations/AddressRelation/Undeliverable//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/Undeliverable'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/Undeliverable/$'
    AddressRelations.Undeliverable(#CX) := #XML_VALUE
  VALUE 'AddressRelations/AddressRelation/Protected//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/Protected'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/Protected/$'
    AddressRelations.Protected(#CX) := #XML_VALUE
  VALUE 'AddressRelations/AddressRelation/AttentionLine//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/AttentionLine'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/AttentionLine/$'
    AddressRelations.AttentionLine(#CX) := #XML_VALUE
  VALUE 'AddressRelations/AddressRelation/ClerkID//'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/ClerkID'
    IGNORE
  VALUE 'AddressRelations/AddressRelation/ClerkID/$'
    AddressRelations.ClerkID(#CX) := #XML_VALUE
  NONE
    IGNORE
END-DECIDE
END-SUBROUTINE
**
END
