* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
/** New Subprogram AUCNADM2.
/**
/** :author nguentchev
/*
/** Modified by:
/** RSE 06/19/2012 RE1 Write TR for non-CN contacts; add clerk ID
/** YAK 07/18/2012 YK1 Pass System Source to address validation program
/** NGG 07/18/2012 NG1 Pass share user request
DEFINE DATA
PARAMETER USING AUCAAR01
PARAMETER USING AUCAAD01
LOCAL USING GOADA001
LOCAL USING GOADA002
LOCAL USING GPRATR00
LOCAL
1 #CN-PARMS
  2 CN                   (N6)
  2 ERR                  (N4)
  2 ERR-DESC             (A78)
  2 MOD                  (A1)
1 #ADD               (I4) CONST <1>
1 #UPDATE            (I4) CONST <2>
1 #DELETE            (I4) CONST <3>
1 #CHECKFORUPDATES   (I4) CONST <4>
1 #GETBYTYPE         (I4) CONST <5>
1 #TYPESWITCH        (I4) CONST <6>
1 #NO-UPDATES        (I4) CONST <81>
1 BLANK              (A1) CONST <' '>
1 #PRIMARY-EXIST     (A40) CONST <'Primary address already exists'>
1 FUNCTION_CODE      (A) DYNAMIC CONST <'ADDRESS'>
1 #USER-ID           (A8)
1 #NOLOG             (L)
1 #UPDATED           (L)
1 #CassError         (A) DYNAMIC
*
END-DEFINE
*
IF AddressRelation.ActionType > 0
    OR Address.ActionType > 0
  #CassError := Address.ErrorDescription
  DECIDE ON FIRST VALUE OF AddressRelation.ActionType
    VALUE #DELETE          /* Relation delete
      CALLNAT 'AUCNARM1' AddressRelation
      PERFORM ADDR-TR-BEFORE
      TR_NAME  := FUNCTION-CONTACT-NAME(< AddressRelation.ContactID >)        
      TR_CLERK := AddressRelation.ClerkId                                          /* RE1 END
      CALLNAT 'GPRNTR00' FUNCTION_CODE TRAN_LOG_HEADER BEFORE_IMAGE AFTER_IMAGE
    VALUE #UPDATE
      PERFORM ADDR-TR-BEFORE
      AddressRelation.AddressPoolID := Address.AddressPoolID /* UI passed 0
      AddressRelation.ActionType := #CHECKFORUPDATES
      CALLNAT 'AUCNARM1' AddressRelation
      Address.ActionType := #CHECKFORUPDATES
      CALLNAT 'AUCNADM1' Address
      DECIDE FOR EVERY CONDITION
        WHEN Address.ErrorCode = 0
          PERFORM ADDR-VALIDATION
          PERFORM ADDR-UPDATE
        WHEN AddressRelation.ErrorCode = 0
          AddressRelation.ActionType := #UPDATE
          CALLNAT 'AUCNARM1' AddressRelation
        WHEN AddressRelation.ErrorCode = #TYPESWITCH  /* Switch address type
          AddressRelation.ActionType := #TYPESWITCH
          CALLNAT 'AUCNARM1' AddressRelation
        WHEN AddressRelation.ErrorCode = #NO-UPDATES
          RESET AddressRelation.ErrorCode
        WHEN Address.ErrorCode = #NO-UPDATES
          RESET Address.ErrorCode
        WHEN NONE
          IGNORE
      END-DECIDE
    VALUE #ADD     /* New Address
      PERFORM ADDR-VALIDATION
      PERFORM ADDR-UPDATE
    NONE VALUE IGNORE
  END-DECIDE
END-IF
/*
DEFINE ADDR-VALIDATION
/*     ===============
RESET #ADDR-REL #ADDR-POOL
#ADDR-REL.CONTACT-ID        := AddressRelation.ContactID
#ADDR-REL.ADDRESS-POOL-ID   := AddressRelation.AddressPoolID
#ADDR-REL.ADDR-TYPE-CD      := AddressRelation.AddressTypeCode
#ADDR-REL.ADDR-LOCATION     := AddressRelation.AddressLocationCode
#ADDR-REL.ATTENTION-LINE    := AddressRelation.AttentionLine
#ADDR-REL.RETURNED-MAIL-IND := AddressRelation.Undeliverable
#ADDR-REL.PREVENT-OVER-IND  := AddressRelation.Protected
#ADDR-REL.ADDRESS-SOURCE    := AddressRelation.Source
#ADDR-POOL.ADDRESS-POOL-ID  := Address.AddressPoolID
#ADDR-POOL.STREET           := Address.Street
#ADDR-POOL.UNIT             := Address.Unit
#ADDR-POOL.CITY             := Address.City
#ADDR-POOL.STATE-CODE       := Address.StateCode
#ADDR-POOL.ZIP-CODE         := Address.ZipCode
#ADDR-POOL.COUNTRY-CODE     := Address.CountryCode
#ADDR-POOL.INTL-REGION      := Address.IntlRegion
#ADDR-POOL.POSTAL-CODE      := Address.PostalCode
#ADDR-POOL.URBANIZATION     := Address.Urbanization
#ADDR-POOL.ADDR-VALID-IND   := Address.AddressValidIndicator
IF #ADDR-POOL.COUNTRY-CODE = BLANK
  #ADDR-POOL.COUNTRY-CODE := 'US'
END-IF
IF AddressRelation.SystemSource = BLANK    /* NG1
  AddressRelation.SystemSource := 'AUC'
END-IF
CALLNAT 'GOADN003' #ADDR-POOL #ADDR-REL AddressRelation.ClerkId
  Address.ErrorDescription
  #ADDRESS-UI
  AddressRelation.SystemSource   /* YK1
IF #ERRORS
  Address.ErrorCode := 999
END-IF
END-SUBROUTINE
*
DEFINE ADDR-UPDATE
/*     ===========
IF Address.ErrorCode = 0
  PERFORM ADDR-TR-BEFORE
  CALLNAT 'GOADN001' #ADDR-POOL #ADDR-REL AddressRelation.ClerkId
    AddressRelation.ErrorDescription
    #UPDATED
    Address.Share        /* User request for cont sharing  NG1
  IF #UPDATED
*    IF TR_ID_NUMBER NE 0  /* TR after image                                       /* RE1
    BEFORE_IMAGE.ADDRESS-POOL-ID  := #ADDR-POOL.ADDRESS-POOL-ID
    TR_NAME := 'ADDR_AFTER'
    TR_CLERK := AddressRelation.ClerkId                                             
    CALLNAT 'AUCNARTR' TRAN_LOG_HEADER
      BEFORE_IMAGE
      AFTER_IMAGE
      AddressRelation.ContactID
    IF AddressRelation.CN NE 0                                                     /* RE1
      #CN-PARMS.CN := TR_ID_NUMBER
*       CALLNAT 'GOSTAN01'              /* Synch addresses
*         #CN-PARMS
      IF AddressValidIndicator NE 'Y'
          AND AddressFormatTypeCode = 'D'
        #USER-ID := AddressRelation.User
        CALLNAT 'ADVN0003' TR_ID_NUMBER
          #CassError
          #USER-ID
          Address.Street
          Address.Unit
          Address.City
          Address.StateCode
          Address.ZipCode
      END-IF
    END-IF
*  END-IF                                                                          /* RE1
    RESET AddressRelation.ActionType
    AddressRelation.AddressPoolID := #ADDR-POOL.ADDRESS-POOL-ID
    CALLNAT 'AUCNARM1' AddressRelation
    RESET Address.ActionType
    Address.ContactID := AddressRelation.ContactID
    Address.AddressPoolID := #ADDR-POOL.ADDRESS-POOL-ID
    CALLNAT 'AUCNADM1' Address
  END-IF
END-IF
END-SUBROUTINE
*
DEFINE ADDR-TR-BEFORE
/*     ==============
**IF AddressRelation.CN NE 0   /* TR before image                    /* RE1 START
**  TR_ID_NUMBER := AddressRelation.CN
IF AddressRelation.CN NE 0   /* TR before image
  TR_ID_NUMBER := AddressRelation.CN
ELSE
  TR_ID_NUMBER     := F-GET-PARENT-CN(<AddressRelation.ContactID>)
  TR_CONTACT_ID    := F-GET-CONTACT-ID(<TR_ID_NUMBER>)
END-IF                                                               /* RE1 END
BEFORE_IMAGE.ADDRESS-POOL-ID  := Address.AddressPoolID
BEFORE_IMAGE.DATE-LAST-UPDATE := Address.LastUpdatedDate
BEFORE_IMAGE.ADDR-TYPE-CD     := AddressRelation.AddressTypeCode
TR_NAME  := 'ADDR_BEFORE'
CALLNAT 'AUCNARTR' TRAN_LOG_HEADER
  BEFORE_IMAGE
  AFTER_IMAGE
  AddressRelation.ContactID
**END-IF                                                             /* RE1
END-SUBROUTINE
*
END
