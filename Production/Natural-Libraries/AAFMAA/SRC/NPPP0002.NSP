* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
************************************************************************
* NPPP0002 - Send E-mail Reminder
* DESCRIPTION
* This program is reading database and extracting all the policies with
* outstanding First Placement Fee 20 days after policy was issued.
* Extracted Data saved into the file and FTP to the windows server.
* Windows program will read the data and send e-mail reminder.
* 
* * * * * * * * * * * * *  Modification Log * * * * * * * * * * * * * *
* TMT  05/04/2014  TT1  CONTACT NORMALIZATION - EMAILS
* YAK  03/09/2017  YK1  Change index file for DALe structure  
************************************************************************
*
DEFINE DATA
LOCAL USING GPRL0001      /* General Processes Property
LOCAL USING GPRL0002      /* Index File XML Structure
LOCAL USING NPPA0003      /* Policy Data to extract for e-mail (EMAIL-INFORMATION)
LOCAL USING NPPL0003      /* E-mail XML file structure         (EMAIL-RECIPIENT)
LOCAL USING NPPL0004      /* E-mail Application Property
LOCAL USING GPRA0003      /* Error Log
LOCAL USING OBJLSTAT
LOCAL
1 XML             (A) DYNAMIC
1 XML-END         (A) DYNAMIC
1 #OUTPUT-RECORD  (A1000)
1 #POL-SEQ        (A1)
1 REDEFINE #POL-SEQ
  2 #POL-SEQ-N    (N1)
1 #UNIX-FILE-NAME (A) DYNAMIC
1 #WIN-FILE-NAME  (A) DYNAMIC
1 #HEADER        (L)
1 #REC-OUT       (N4)
1 #MAX-REC        (N5)  INIT <100>
*
1 OUT             (A500)
1 #DATN           (A8)
1 REDEFINE #DATN
  2 #YYYY         (A4)
  2 #MM           (A2)
  2 #DD           (A2)
1 OUTDYN (A) DYNAMIC
1 OBJLEN (I4)
1 OBJEND (I4)
1 OBJSTART (I4)
1 OBJLINE (I4)
1 #TAB (A1) INIT <H'09'>
*
1 #CX             (I4)
1 #CY             (I4)
1 #CZ             (I4)
1 #CGA-ID         (N6)
1 #CREATION-DATE  (D)
1 #I              (I2)

1 #EMAIL-DATE-A    (A8)
1 REDEFINE #EMAIL-DATE-A
  2 #EMAIL-DATE     (N8)
1 #MEMBER-KEY     (A7)
1 REDEFINE #MEMBER-KEY
  2 #ID-NUMBER (N6)
  2 #MEMBER-FLAG  (A1)
1 #MEMBER-CN      (A6)
1 #FOUND          (L)
1 EMAIL-ADDRESS   (A60)
*
END-DEFINE
*
* Input file with outstanding FPF from Policy Print
COMPRESS #UNIX-DIR #FPF-DUE-FILE INTO #UNIX-FILE-NAME leaving no
DEFINE WORK FILE 1 #UNIX-FILE-NAME
* File with e-mails information to be sent today
COMPRESS #UNIX-DIR #EMAIL-FILE INTO #UNIX-FILE-NAME leaving no
* Remove file from previous run
CALLNAT 'GPRN0002' #RM-SCRIPT-NAME #UNIX-DIR #EMAIL-FILE
DEFINE WORK FILE 2 #UNIX-FILE-NAME TYPE 'ASCII-COMPRESSED'
* Intermediate FPF file to save information for future
COMPRESS #UNIX-DIR #FPF-DUE-FILE-WAIT INTO #UNIX-FILE-NAME leaving no
DEFINE WORK FILE 3 #UNIX-FILE-NAME TYPE 'ASCII-COMPRESSED'
* E-mail index file for DAL upload
COMPRESS #UNIX-DIR #EMAIL-INDEX-FILE INTO #UNIX-FILE-NAME leaving no
* Remove file from previous run
CALLNAT 'GPRN0002' #RM-SCRIPT-NAME #UNIX-DIR #EMAIL-INDEX-FILE
DEFINE WORK FILE 4 #UNIX-FILE-NAME TYPE 'ASCII-COMPRESSED'
*
WRITE 'begin process...'
*
RESET DOCUMENTS
EXPAND ARRAY DOCUMENT TO (*:#MAX-REC)
#CREATION-DATE := *DATX - 20                             /* Format D
MOVE EDITED #CREATION-DATE (EM=YYYYMMDD) TO #EMAIL-DATE-A
*
READ WORK FILE 1  EMAIL-INFORMATION
  DECIDE FOR FIRST CONDITION
    WHEN EMAIL-INFORMATION.OWNER-EMAIL = ' '
      IGNORE
    WHEN #EMAIL-DATE >= EMAIL-INFORMATION.CREATION-DATE
      PERFORM CHECK-OUTSTANDING-FPF
    WHEN #EMAIL-DATE < CREATION-DATE
      WRITE WORK FILE 3 EMAIL-INFORMATION
    WHEN NONE
      IGNORE
  END-DECIDE
*
  IF #REC-OUT > #MAX-REC
    #MAX-REC := #MAX-REC + 100
    RESIZE ARRAY DOCUMENT TO (*:#MAX-REC)
  END-IF
*
END-WORK
*
IF #REC-OUT NE 0
  #HEADER := FALSE
  PERFORM WRITE-HEADER
  CLOSE WORK FILE 2
  CLOSE WORK FILE 3
*
  C@DOCUMENT := #REC-OUT
  RESIZE ARRAY DOCUMENT TO (*:C@DOCUMENT)
  RESET #OUTPUT-RECORD XML
  INCLUDE GPRCS002 "XML" "#CX" "#CY" "#CZ"
  PERFORM WRITE-INDEX-FILE
* Check on which server process is running (Test/Prod)
  IF F-IS-DEV(<>)
    #EMAIL-WINDOWS-DIR := #EMAIL-WINDOWS-BACKUP-DIR
  END-IF
*
  #DATN := *DATN
*
  COMPRESS #UNIX-DIR #EMAIL-FILE INTO #UNIX-FILE-NAME leaving no
  COMPRESS #EMAIL-WINDOWS-DIR #EMAIL-FILE INTO #WIN-FILE-NAME leaving no
  CALLNAT 'GPRN0002' #FTP-SCRIPT-NAME #UNIX-FILE-NAME #WIN-FILE-NAME
  COMPRESS #EMAIL-WINDOWS-BACKUP-DIR #EMAIL-FILE '_' #DATN INTO #WIN-FILE-NAME leaving no
  CALLNAT 'GPRN0002' #FTP-SCRIPT-NAME #UNIX-FILE-NAME #WIN-FILE-NAME
*
  COMPRESS #UNIX-DIR #EMAIL-INDEX-FILE INTO #UNIX-FILE-NAME leaving no
  COMPRESS #EMAIL-WINDOWS-DIR #EMAIL-INDEX-FILE INTO #WIN-FILE-NAME leaving no
  CALLNAT 'GPRN0002' #FTP-SCRIPT-NAME #UNIX-FILE-NAME #WIN-FILE-NAME
  COMPRESS #EMAIL-WINDOWS-BACKUP-DIR #EMAIL-INDEX-FILE '_' #DATN INTO #WIN-FILE-NAME leaving no
  CALLNAT 'GPRN0002' #FTP-SCRIPT-NAME #UNIX-FILE-NAME #WIN-FILE-NAME
*
END-IF
*
CALLNAT 'GPRN0002' #MV-SCRIPT-NAME #UNIX-DIR #FPF-DUE-FILE
CALLNAT 'GPRN0002' #CP-SCRIPT-NAME #UNIX-DIR #FPF-DUE-FILE-WAIT #FPF-DUE-FILE
CLOSE WORK FILE 22
CALLNAT 'GPRN0002' #EMAIL-SCRIPT-NAME #ERROR-LOG-FILE
WRITE 'process ended'
*
***************************************
DEFINE SUBROUTINE CHECK-OUTSTANDING-FPF
***************************************
*
SEPARATE EMAIL-INFORMATION.POLICY-NUMBER INTO #MEMBER-CN #POL-SEQ
  WITH DELIMITER '-'
#ID-NUMBER := VAL(#MEMBER-CN)
READ(1) ST-V WITH MEMBER-KEY = #MEMBER-KEY
  IF #POL-SEQ-N NE NUM-MBRSHIPS(#POL-SEQ-N)
    WRITE 'PURGED POLICY FOR CN ' ID-NUMBER
    PERFORM FIND-POLICY-INDEX
  END-IF
  #FOUND := TRUE
  RESET EMAIL-ADDRESS                                               /* TT1
  EMAIL-ADDRESS := F-PREF-EMAIL(<ST-V.MEMBER-CONTACT-ID>)           /* TT1
  IF X-FIRST-PLACE-FEE(#POL-SEQ-N) > 0 AND EMAIL-ADDRESS NE ' '     /* TT1
    MOVE EDITED X-FIRST-PLACE-FEE(#POL-SEQ-N) (EM=ZZZZZZ9.99) TO
      EMAIL-INFORMATION.FPF-AMOUNT-DUE
  ELSE
    ESCAPE ROUTINE
  END-IF
END-READ
*
IF NOT #FOUND
  COMPRESS ' CN ' #MEMBER-CN 'does not exist on Status file' INTO ERROR-MESSAGE
  ERROR-PROGRAM := *PROGRAM
  CALLNAT 'GPRN0003' ERROR-LOG
  ESCAPE ROUTINE
END-IF
EXAMINE DOCUMENTS.POL-NUM(*) FOR EMAIL-INFORMATION.POLICY-NUMBER INDEX #I
IF #I NE 0
  COMPRESS 'Duplicate Policy Number for e-mail' EMAIL-INFORMATION.POLICY-NUMBER INTO ERROR-MESSAGE
  ERROR-PROGRAM := *PROGRAM
  CALLNAT 'GPRN0003' ERROR-LOG
  ESCAPE ROUTINE
END-IF
*
#REC-OUT := #REC-OUT + 1
IF #REC-OUT = 1
  #HEADER := TRUE
  PERFORM WRITE-HEADER
END-IF
*
MOVE BY NAME EMAIL-INFORMATION TO EMAIL-RECIPIENT
COMPRESS '$' *TRIM(EMAIL-RECIPIENT.FPF-AMOUNT-DUE) INTO EMAIL-RECIPIENT.FPF-AMOUNT-DUE
OWNER-NAME := SALUTATION
EMAIL-RECIPIENT.TEMPLATE-NAME := #PREMIUM-REMINDER-TEMPLATE
RESET #OUTPUT-RECORD XML
INCLUDE NPPCS003 "XML" "#CX" "#CY" "#CZ"
#OUTPUT-RECORD := XML
WRITE WORK FILE 2 #OUTPUT-RECORD
*
DOCUMENTS.CN(#REC-OUT)                := EMAIL-INFORMATION.DAL-CN
DOCUMENTS.POL-NUM(#REC-OUT)           := EMAIL-INFORMATION.POLICY-NUMBER
* DOCUMENTS.DOCTYPE(#REC-OUT) := #EMAIL-DOCTYPE                         /* YK1
DOCUMENTS.DOCTITLE(#REC-OUT)          := #EMAIL-DOCTYPE                 /* YK1 
DOCUMENTS.ORGANIZATION(#REC-OUT)      := 'AAFMAA'                       /* YK1
DOCUMENTS.MEMBER-ACCESSIBLE(#REC-OUT) := 'FALSE'                        /* YK1 
DOCUMENTS.TEMPLATENAME (#REC-OUT)     := #PREMIUM-REMINDER-TEMPLATE
*
#DATN   := *DATN
COMPRESS #MM '/' #DD '/' #YYYY INTO
  DOCUMENTS.SUBMITDATE(#REC-OUT) LEAVING NO
COMPRESS DOCUMENTS.POL-NUM(#REC-OUT) #EMAIL-NAME-SUFFIX
  INTO DOCUMENTS.FILENAME(#REC-OUT) LEAVING NO
DOCUMENTS.DESCRIPTION(#REC-OUT) := #EMAIL-DOCUMENT-DESCRIPTION
*
END-SUBROUTINE
*
***********************************
DEFINE SUBROUTINE FIND-POLICY-INDEX
************************************
*
FOR #I = 1 TO 9
  IF NUM-MBRSHIPS(#I) = #POL-SEQ-N
    #POL-SEQ-N := #I
    ESCAPE BOTTOM
  END-IF
END-FOR
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE WRITE-HEADER
******************************
*
IF #HEADER
  RESET #OUTPUT-RECORD XML
  #OUTPUT-RECORD := '<?xml version="1.0" encoding="utf-8" ?>'
  WRITE WORK FILE 2 #OUTPUT-RECORD
  #OUTPUT-RECORD := '<EmailRecipients>'
  WRITE WORK FILE 2 #OUTPUT-RECORD
ELSE
  #OUTPUT-RECORD := '</EmailRecipients>'
  WRITE WORK FILE 2 #OUTPUT-RECORD
END-IF
END-SUBROUTINE
**********************************
DEFINE SUBROUTINE WRITE-INDEX-FILE
**********************************
*
OBJSTART := 1
COMPRESS XML H'0A' INTO XML
EXAMINE xml FOR "<DOCUMENTS><" REPLACE WITH "<DOCUMENTS>" - H'0A' -"<"
EXAMINE xml FOR "></DOCUMENTS>" REPLACE WITH ">" - H'0A' -"</DOCUMENTS>"
EXAMINE xml FOR "</DOCUMENT><DOCUMENT>" REPLACE WITH "</DOCUMENT>" - H'0A' -"<DOCUMENT>"
EXAMINE xml FOR H'0A' GIVING POSITION OBJEND
REPEAT WHILE OBJEND NE 0
  IF OBJSTART GT 0 THEN
    ADD OBJSTART TO OBJEND
  END-IF
  OBJLEN := OBJEND - OBJSTART -1
  IF OBJLEN > 0 THEN
    OUTDYN := SUBSTRING(xml, OBJSTART, OBJLEN)
    FOR OBJLINE = 1 TO *LENGTH(OUTDYN) STEP 500
      OUT := SUBSTR (OUTDYN,OBJLINE)
      WRITE WORK FILE 4 OUT
    END-FOR
  END-IF
  OBJSTART := OBJEND
  IF OBJSTART GT *LENGTH(xml)
    ESCAPE BOTTOM
  END-IF
  EXAMINE SUBSTRING(xml,OBJSTART) FOR H'0A' GIVING POSITION OBJEND
END-REPEAT
CLOSE WORK FILE 4
END-SUBROUTINE
*
END
