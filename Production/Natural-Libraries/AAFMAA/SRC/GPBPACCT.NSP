* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
**************************************************************************
* NAME         : GPBPACCT                                                *
* AUTHOR       : Copyright: Electronic Data Systems                      *
* DESCRIPTION  : Create monthly accounting files                         *
**************************************************************************
*                                                                        * 
**************************************************************************
*                       MODIFICATION LOG                                 *
* USER   DATE        TAG     REASON                                      *
* PAM    10/04/2011  None    Program Written                             *
* VXT    07/13/2012  VT1     Add cash-code B , D, and P.                 *
* vxt    08/13/2012  vt2     Add GL account 4118, 2337 and 2338          *
* vxt    11/26/2012  vt3     Add 8110 GL Account                         *
* vxt    12/16/2013  vt4     Add new GL account numbers /ticket 2447/    *
* vxt    03/23/2016  vt5     /Ticket 4252 - change GL code for service   *
* vxt    11/18/2016  vt6     /Ticket 1947/ -fix GL account for gpl loans *
**************************************************************************
*
DEFINE DATA
*
LOCAL USING OBJLACRG       /* Accounting Register
LOCAL
1 st-v view of a-status                             /* vt4 \/
  2 id-number
  2 plan (9)                                        /* vt4 /\
*
1 #ACCOUNT-NUMBER         (A4)
1 #ACCOUNT-DESCRIPTION    (A25)
1 #D-ID                   (A10)
1 #D-DATE                 (A10)
1 #D-DEBIT                (A20)
1 #D-CREDIT               (A20)
*
1 #ID                     (N6)
1 #DATE                   (N8)
1 #DEBIT                  (N11.2)
1 #CREDIT                 (N11.2)
*
1 #SG-CATEGORY-1          (A2)
1 #sg-category-2          (a2)                   /* vt4a
1 #TXN-CODE               (A6)
1 #I1                     (I2)
1 #T-I                    (I2)
1 #IT-I                   (I4)
*
1 #OUT                    (A250)
1 #TAB                    (A1)  INIT <H'09'>
*
1 #START-DATE             (N8)
1 #END-DATE               (N8)
*
1 #TRANSACTION-TABLE      (28)                            /* vt2 was 9   /* vt3 was 12 /* vt5 was 27
  2 #4012                  (A4)  INIT <'4012'>    /* 1
  2 #4014                  (A4)  INIT <'4014'>
  2 #4016                  (A4)  INIT <'4016'>
  2 #4116                  (A4)  INIT <'4116'>
  2 #2235                  (A4)  INIT <'2235'>
  2 #2236                  (A4)  INIT <'2236'>
  2 #1105                  (A4)  INIT <'1105'>
  2 #1110                  (A4)  INIT <'1110'>
  2 #1120                  (A4)  INIT <'1120'>
  2 #4118                  (a4)  INIT <'4118'>              /* vt2 \/
  2 #2237                  (a4)  INIT <'2237'>
  2 #2238                  (a4)  INIT <'2238'>              /* vt2 /\
  2 #8110                  (a4)  INIT <'8110'>              /* vt3
  2 #4021                  (a4)  INIT <'4021'>   /* 14             /* vt4 \/
  2 #4022                  (a4)  INIT <'4022'>
  2 #4023                  (a4)  INIT <'4023'>
  2 #4024                  (a4)  INIT <'4024'>
  2 #4025                  (a4)  INIT <'4025'>
  2 #4026                  (a4)  INIT <'4026'>
  2 #4027                  (a4)  INIT <'4027'>
  2 #4028                  (a4)  INIT <'4028'>
  2 #4031                  (a4)  INIT <'4031'>
  2 #4032                  (a4)  INIT <'4032'>
  2 #4033                  (a4)  INIT <'4033'>
  2 #4034                  (a4)  INIT <'4034'>
  2 #4035                  (a4)  INIT <'4035'>
  2 #4036                  (a4)  INIT <'4036'>
  2 #4112                  (a4)  INIT <'4112'>            /* vt4 /\
  2 #4115                  (a4)  INIT <'4115'>            /* vt5

*
1 REDEFINE #TRANSACTION-TABLE
  2 #TRAN-CODE-OCC         (29)                             /* vt2 was 9  /* vt3 was 12 vt5 was 28
    3 #TRAN-CODE            (A4)
*
1 #NUM-TRANS              (P11)
1 #TOTAL-DEBIT            (N11.2)
1 #TOTAL-CREDIT           (N11.2)
1 #TOTAL-TABLE            (100000)
  2 #MEMBER-ID             (N6)
  2 #TRAN-DATE             (N8)
  2 #TRAN-TYPE             (A30)
  2 #DEBIT-AMT             (N11.2)
  2 #CREDIT-AMT            (N11.2)
*
1 #MONTH-TABLE
  2 #JAN                   (A20)  INIT <'JANUARY'>
  2 #FEB                   (A20)  INIT <'FEBRUARY'>
  2 #MAR                   (A20)  INIT <'MARCH'>
  2 #APR                   (A20)  INIT <'APRIL'>
  2 #MAY                   (A20)  INIT <'MAY'>
  2 #JUN                   (A20)  INIT <'JUNE'>
  2 #JUL                   (A20)  INIT <'JULY'>
  2 #AUG                   (A20)  INIT <'AUGUST'>
  2 #SEP                   (A20)  INIT <'SEPTEMBER'>
  2 #OCT                   (A20)  INIT <'OCTOBER'>
  2 #NOV                   (A20)  INIT <'NOVEMBER'>
  2 #DEC                   (A20)  INIT <'DECEMBER'>
*
1 REDEFINE #MONTH-TABLE
  2 #MONTH-OCC             (12)
    3 #MONTH                (A20)
*
1 #FILE                   (N2)
*
1 #PARM-DATE              (A10)
1 REDEFINE #PARM-DATE
  2 #PARM-MM               (A2)
  2 #PARM-/                (A1)
  2 #PARM-DD               (A2)
  2 #PARM-/-2              (A1)
  2 #PARM-YYYY             (A4)
*
1 #ME-RUN-DATE-N          (N8)
1 REDEFINE #ME-RUN-DATE-N
  2 #ME-RUN-DATE-A         (A8)
1 REDEFINE #ME-RUN-DATE-N
  2 #ME-RUN-DATE-YYYY      (N4)
  2 #ME-RUN-DATE-MM        (N2)
  2 #ME-RUN-DATE-DD        (N2)
*
1 #pol-num                 (a16)                                        /* vt4
1 #plan                    (a3)                                         /* vt4
1 #k                       (i2)                                         /* vt4
1 #datn                    (n8)                     /* vt5
END-DEFINE
************************************************************************
*
DEFINE WORK FILE 1  TYPE 'ASCII-COMPRESSED'
DEFINE WORK FILE 2  TYPE 'ASCII-COMPRESSED'
DEFINE WORK FILE 3  TYPE 'ASCII-COMPRESSED'
DEFINE WORK FILE 4  TYPE 'ASCII-COMPRESSED'
DEFINE WORK FILE 5  TYPE 'ASCII-COMPRESSED'
DEFINE WORK FILE 6  TYPE 'ASCII-COMPRESSED'
DEFINE WORK FILE 7  TYPE 'ASCII-COMPRESSED'
DEFINE WORK FILE 8  TYPE 'ASCII-COMPRESSED'
DEFINE WORK FILE 9  TYPE 'ASCII-COMPRESSED'
define work file 10 type 'ASCII-COMPRESSED'             /* vt2 \/
define work file 11 type 'ASCII-COMPRESSED'
define work file 12 type 'ASCII-COMPRESSED'             /* vt2 /\
define work file 13 type 'ASCII-COMPRESSED'                            /* vt4 \/
define work file 15 type 'ASCII-COMPRESSED'
define work file 16 type 'ASCII-COMPRESSED'
define work file 17 type 'ASCII-COMPRESSED'
define work file 18 type 'ASCII-COMPRESSED'
define work file 19 type 'ASCII-COMPRESSED'
define work file 20 type 'ASCII-COMPRESSED'
define work file 21 type 'ASCII-COMPRESSED'
define work file 22 type 'ASCII-COMPRESSED'
define work file 23 type 'ASCII-COMPRESSED'
define work file 24 type 'ASCII-COMPRESSED'
define work file 25 type 'ASCII-COMPRESSED'
define work file 26 type 'ASCII-COMPRESSED'
define work file 27 type 'ASCII-COMPRESSED'
define work file 28 type 'ASCII-COMPRESSED'
define work file 29 type 'ASCII-COMPRESSED'
define work file 30 type 'ASCII-COMPRESSED'                           /* vt4 /\
define work file 31 type 'ASCII-COMPRESSED'                           /* vt5
*
READ  WORK FILE 30  ONCE #PARM-DATE                      /* vt2 was 10  /* vt5 was 29
COMPRESS #PARM-YYYY #PARM-MM #PARM-DD INTO #ME-RUN-DATE-A LEAVING NO
#END-DATE := #ME-RUN-DATE-N
*
SUBTRACT 1 FROM #ME-RUN-DATE-MM
IF #ME-RUN-DATE-MM = 0
  #ME-RUN-DATE-MM := 12
  SUBTRACT 1 FROM #ME-RUN-DATE-YYYY
END-IF
*
#START-DATE := #ME-RUN-DATE-N
*
WRITE 'Start = ' #START-DATE
WRITE 'End   = ' #END-DATE
FOR #T-I 1 TO 29                                       /* vt2 was 9    /* vt4 was 12   /* vt5 was 28
  RESET #NUM-TRANS #TOTAL-DEBIT #TOTAL-CREDIT #TOTAL-TABLE (*)
*
  READ ACCT-REG-V BY ACCT-REG-V.TRANSACTION-DATN FROM #START-DATE
    IF ACCT-REG-V.TRANSACTION-DATN GE #END-DATE
      ESCAPE BOTTOM
    END-IF
*
    IF C*SUNGARD-INFO = 0 OR ACCT-REG-V.TXN-CODE = 'ADCR' OR = 'RDCR'
      RESET #SG-CATEGORY-1 #DATE #DEBIT #CREDIT #ACCOUNT-NUMBER #sg-category-2            /* vt4a
      COMPRESS ACCT-REG-V.TXN-CODE #SG-CATEGORY-1 INTO #TXN-CODE LEAVING NO
      #ACCOUNT-NUMBER := FUNCTION-ACCT-NUMBER(<#TXN-CODE>)(1)
*
      if (#start-date ge 20140101 )                        /* vt4  \/
        if  acct-reg-v.txn-code = 'PREP' or = 'PRER' or = 'FPFP' or = 'FPFR' or = 'FPRP' or = 'DUEP' or = 'DUER' or = 'RIDP' or = 'RIDR' or = 'DISC'
          IF #SG-CATEGORY-1 <> 'SS'                                     /* vt5
            PERFORM GET-NEW-ACCT-NUM
          else                                                          /* vt5\/
            if #datn ge 20160301
              #ACCOUNT-NUMBER := 4115
              #ACCOUNT-DESCRIPTION := 'SAS Service'
            end-if                                                      /* vt5/\
          END-IF
        end-if
      end-if                                             /* vt4  /\
      IF ACCT-REG-V.TXN-CODE = 'ADDL'
          AND ACCT-REG-V.SEQUENCE-NUM = 2
        #ACCOUNT-NUMBER := '4315'
      END-IF
*
      if (acct-reg-v.txn-code = 'NEWL' or = 'ADDL' )          /* vt6 11/18/2016 \/
          and #sg-category-1 = 'GP'
          #ACCOUNT-NUMBER := '1105'
      end-if                                                  /* vt6 11/18/2016 /\
*
      IF #ACCOUNT-NUMBER = #TRAN-CODE (#T-I)
        #ID       := ACCT-REG-V.ID-NUMBER
        #DATE     := ACCT-REG-V.TRANSACTION-DATN
        IF ACCT-REG-V.DEBIT-AMOUNT NE 0
          #DEBIT  := ACCT-REG-V.DEBIT-AMOUNT
        END-IF
*
        IF ACCT-REG-V.CREDIT-AMOUNT NE 0
          #CREDIT := ACCT-REG-V.CREDIT-AMOUNT
        END-IF
*
        PERFORM LOAD-TRANSACTION
      END-IF
    ELSE
      FOR #I1 = 1 TO C*SUNGARD-INFO
        RESET #DATE #DEBIT #CREDIT #ACCOUNT-NUMBER
        #SG-CATEGORY-1 := SG-CATEGORY-1 (#I1)
        #sg-category-2 := sg-category-2(#i1)                /* vt4a
        IF #SG-CATEGORY-1 = '**' OR ACCT-REG-V.TXN-CODE = 'BADJ'
          RESET #SG-CATEGORY-1
        END-IF
*
        COMPRESS ACCT-REG-V.TXN-CODE #SG-CATEGORY-1 INTO #TXN-CODE LEAVING NO
        #ACCOUNT-NUMBER := FUNCTION-ACCT-NUMBER(<#TXN-CODE>)(1)
*
        if (#start-date ge 20140101 )                        /* vt4  \/
          if  acct-reg-v.txn-code = 'PREP' or =  'PRER' or = 'FPFP' or = 'FPFR' or = 'FPRP' or = 'RIDP' or = 'RIDR' or = 'DUEP' or = 'DUER' or = 'DISC'
            IF #SG-CATEGORY-1 <> 'SS'                                     /* vt5
              PERFORM GET-NEW-ACCT-NUM
            else                                                          /* vt5\/
              if #datn ge 20160301
                #ACCOUNT-NUMBER := 4115
                #ACCOUNT-DESCRIPTION := 'SAS Service'
              end-if                                                      /* vt5/\
            END-IF
          end-if
        end-if                                               /* vt4  /\
*
        IF ACCT-REG-V.TXN-CODE = 'ADDL'
            AND ACCT-REG-V.SEQUENCE-NUM = 2
          #ACCOUNT-NUMBER := '4315'
        END-IF
*
     if (acct-reg-v.txn-code = 'NEWL' or = 'ADDL' )          /* vt6 11/18/2016 \/
          and #sg-category-1 = 'GP'
          #ACCOUNT-NUMBER := '1105'
      end-if                                                  /* vt6 11/18/2016 /\
*
        IF #ACCOUNT-NUMBER = #TRAN-CODE (#T-I)
          #ID         := ACCT-REG-V.ID-NUMBER
          #DATE       := ACCT-REG-V.TRANSACTION-DATN
*
          IF ACCT-REG-V.CREDIT-AMOUNT NE 0
            IF #SG-CATEGORY-1 = 'UN'
                AND ACCT-REG-V.SG-AMOUNT (#I1) LE 0
              #DEBIT  := ACCT-REG-V.SG-AMOUNT (#I1)
            ELSE
              #CREDIT := ACCT-REG-V.SG-AMOUNT (#I1)
            END-IF
          END-IF
*
          IF ACCT-REG-V.DEBIT-AMOUNT NE 0
            #DEBIT    := ACCT-REG-V.SG-AMOUNT (#I1)
          END-IF
*
          PERFORM LOAD-TRANSACTION
        END-IF
      END-FOR
    END-IF
  END-READ
*
  #FILE := #T-I
  MOVE EDITED #ME-RUN-DATE-YYYY (EM=9999) TO #OUT
  COMPRESS #MONTH (#ME-RUN-DATE-MM) #OUT INTO #OUT
  PERFORM WRITE-WORK-FILE
  RESET #OUT
*
  COMPRESS #TAB #TAB #TAB
    'Debit Amt'    #TAB
    'Credit Amt' INTO #OUT LEAVING NO
  PERFORM WRITE-WORK-FILE
  RESET #OUT
*
  MOVE EDITED #TOTAL-DEBIT  (EM=ZZ,ZZZ,ZZZ,ZZZ.99) TO #D-DEBIT
  MOVE EDITED #TOTAL-CREDIT (EM=ZZ,ZZZ,ZZZ,ZZZ.99) TO #D-CREDIT
  COMPRESS 'Totals' #TAB #TAB #TAB
    #D-DEBIT #TAB
    #D-CREDIT INTO #OUT
  PERFORM WRITE-WORK-FILE
  RESET #OUT
  PERFORM WRITE-WORK-FILE
*
  COMPRESS 'Member ID'    #TAB
    'Trans Date'   #TAB
    'Acct Number'  #TAB
    'Debit Amt'    #TAB
    'Credit Amt'   #TAB
    'Type' INTO #OUT LEAVING NO
  PERFORM WRITE-WORK-FILE
  RESET #OUT
*
  FOR #IT-I 1 TO #NUM-TRANS
    RESET #D-ID #D-DATE #D-DEBIT #D-CREDIT
    MOVE EDITED #MEMBER-ID (#IT-I) (EM=999999)   TO #D-ID
    MOVE EDITED #TRAN-DATE (#IT-I) (EM=99999999) TO #D-DATE
    IF #DEBIT-AMT (#IT-I) NE 0
      MOVE EDITED #DEBIT-AMT (#IT-I)(EM=Z,ZZZ,ZZ9.99)  TO #D-DEBIT
    END-IF
*
    IF #CREDIT-AMT (#IT-I) NE 0
      MOVE EDITED #CREDIT-AMT (#IT-I)(EM=Z,ZZZ,ZZ9.99) TO #D-CREDIT
    END-IF
*
    COMPRESS #D-ID              #TAB
      #D-DATE            #TAB
      #TRAN-CODE (#T-I)  #TAB
      #D-DEBIT           #TAB
      #D-CREDIT          #TAB
      #TRAN-TYPE (#IT-I) INTO #OUT LEAVING NO
    PERFORM WRITE-WORK-FILE
    RESET #OUT
  END-FOR
END-FOR
*
************************************************************************
DEFINE SUBROUTINE LOAD-TRANSACTION
************************************************************************
*
ADD +1 TO #NUM-TRANS
#IT-I := #NUM-TRANS
*
#MEMBER-ID (#IT-I)     := #ID
#TRAN-DATE (#IT-I)     := #DATE
*
IF #DEBIT NE 0
  ADD #DEBIT TO #TOTAL-DEBIT
  #DEBIT-AMT (#IT-I)   := #DEBIT
END-IF
*
IF #CREDIT NE 0
  ADD #CREDIT TO #TOTAL-CREDIT
  #CREDIT-AMT (#IT-I)  := #CREDIT
END-IF
*
DECIDE FOR FIRST CONDITION
  WHEN ACCT-REG-V.CASH-CODE = 'E'
    #TRAN-TYPE (#IT-I) := 'EZPAY'
  WHEN ACCT-REG-V.CASH-CODE = 'G'
    #TRAN-TYPE (#IT-I) := 'ALLOTMENT'
  WHEN ACCT-REG-V.CASH-CODE = 'C'
    #TRAN-TYPE (#IT-I) := 'CREDIT CARD'
  WHEN ACCT-REG-V.CASH-CODE = 'A'
    #TRAN-TYPE (#IT-I) := 'ADJUSTMENT'
  WHEN ACCT-REG-V.CASH-CODE = 'I'
    #TRAN-TYPE (#IT-I) := 'CHECK SCAN'
  when acct-reg-v.cash-code = 'P'                          /* vt1   \/
    #tran-type (#it-i) := 'PAY'
  when acct-reg-v.cash-code = 'B'
    #tran-type (#it-i) := 'CSV'
  when acct-reg-v.cash-code = 'X'
    #tran-type (#it-i) := 'XFR'
  when acct-reg-v.cash-code = 'D'
    #tran-type (#it-i) := 'DEATH'                          /* vt1   \/
  WHEN NONE
    #TRAN-TYPE (#IT-I) := 'CASH'
END-DECIDE
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE WRITE-WORK-FILE
************************************************************************
*
DECIDE FOR FIRST CONDITION
  WHEN #FILE = 1
    WRITE WORK FILE 1 #OUT
  WHEN #FILE = 2
    WRITE WORK FILE 2 #OUT
  WHEN #FILE = 3
    WRITE WORK FILE 3 #OUT
  WHEN #FILE = 4
    WRITE WORK FILE 4 #OUT
  WHEN #FILE = 5
    WRITE WORK FILE 5 #OUT
  WHEN #FILE = 6
    WRITE WORK FILE 6 #OUT
  WHEN #FILE = 7
    WRITE WORK FILE 7 #OUT
  WHEN #FILE = 8
    WRITE WORK FILE 8 #OUT
  WHEN #FILE = 9
    WRITE WORK FILE 9 #OUT
  WHEN #FILE = 10                          /* vt2 \/
    WRITE WORK FILE 10 #OUT
  WHEN #FILE = 11
    WRITE WORK FILE 11 #OUT
  WHEN #FILE = 12
    WRITE WORK FILE 12 #OUT                /* vt2 /\
  WHEN #FILE = 13                          /* vt2 \/
    WRITE WORK FILE 13 #OUT
  when #file = 14
    write work file 14 #out
  when #file = 15
    write work file 15 #out
  WHEN #FILE = 16
    WRITE WORK FILE 16 #OUT                               /* vt4 \/
  WHEN #FILE = 17
    WRITE WORK FILE 17 #OUT
  WHEN #FILE = 18
    WRITE WORK FILE 18 #OUT
  WHEN #FILE = 19
    WRITE WORK FILE 19 #OUT
  WHEN #FILE = 20
    WRITE WORK FILE 20 #OUT
  WHEN #FILE = 21
    WRITE WORK FILE 21 #OUT
  WHEN #FILE = 22
    WRITE WORK FILE 22 #OUT
  WHEN #FILE = 23
    WRITE WORK FILE 23 #OUT
  WHEN #FILE = 24
    WRITE WORK FILE 24 #OUT
  WHEN #FILE = 25
    WRITE WORK FILE 25 #OUT
  WHEN #FILE = 26
    WRITE WORK FILE 26 #OUT
  WHEN #FILE = 27
    WRITE WORK FILE 27 #OUT
  WHEN #FILE = 28
    WRITE WORK FILE 28 #OUT                 /* vt4 /\
  WHEN #FILE = 29                           /* vt5
    WRITE WORK FILE 29 #OUT                 /* vt5
  WHEN NONE
    WRITE WORK FILE 31 #OUT                /* vt2 was 10  /* VT4 WAS 15 /* vt5 was 30
END-DECIDE
*
END-SUBROUTINE
*
*****************                                          /* vt4 \/
define subroutine get-new-acct-num
*****************
*
reset #pol-num #plan
find st-v with st-v.id-number = ACCT-REG-V.id-number
  for #k 1 9
    callnat 'GPLNMSXX' #pol-num ACCT-REG-V.id-number #k
    if #pol-num = ACCT-REG-V.policy-number
      move st-v.plan(#k) to #plan
      escape bottom
    end-if
  end-for
end-find
*
if #plan = 'RT' and #sg-category-2 = 'LT'      /* vt4a \/
  move #sg-category-2 to #plan
end-if                                         /* vt4a /\
*
if function-term-policy(<#plan>)
  decide on first value of #plan
    value 'LT'

      if #sg-category-1 = '1Y'
        #ACCOUNT-NUMBER := 4021
      else
        if #sg-category-1 = 'RN'
          #ACCOUNT-NUMBER := 4031
        end-if
      end-if
    value 'RT'
      if #sg-category-1 = '1Y'
        #ACCOUNT-NUMBER := 4023
      else
        if #sg-category-1 = 'RN'
          #ACCOUNT-NUMBER := 4033
        end-if
      end-if
    value 'EZ'
      if #sg-category-1 = '1Y'
        #ACCOUNT-NUMBER := 4024
      else
        if #sg-category-1 = 'RN'
          #ACCOUNT-NUMBER := 4034
        end-if
      end-if
    none value
      if #sg-category-1 = '1Y'
        #ACCOUNT-NUMBER := 4022
      else
        if #sg-category-1 = 'RN'
          #ACCOUNT-NUMBER := 4032
        end-if
      end-if
  end-decide
else
  IF VAWL-TRUE(<#plan>)
      or (#plan = mask(NN'F')) or ( #plan = mask(N'P'))
    if #sg-category-1 = '1Y'
      #ACCOUNT-NUMBER := 4026
    else
      if #sg-category-1 = 'RN'
        #ACCOUNT-NUMBER := 4036
      end-if
    end-if
  else
    decide on first value of #plan
      value 'GPL' , 'GP2'
        if #sg-category-1 = '1Y'
          #ACCOUNT-NUMBER := 4025
        else
          if #sg-category-1 = 'RN'
            #ACCOUNT-NUMBER := 4035
          end-if
        end-if
      value 'AL'
        if #sg-category-1 = '1Y'
          #ACCOUNT-NUMBER := 4028
        end-if
      value 'SO'
        if #sg-category-1 = 'SO'
          #ACCOUNT-NUMBER := 4112
        end-if
      none value
        ignore
    end-decide
  end-if
end-if
*
if #sg-category-1 = 'SP' and #sg-category-2 ne 'AL'
  #ACCOUNT-NUMBER := 4027
end-if
*
if #sg-category-1 = 'SP' and #sg-category-2 eq 'AL'
  #ACCOUNT-NUMBER := 4028
end-if
*
end-subroutine                                             /* vt4 /\
*
END
