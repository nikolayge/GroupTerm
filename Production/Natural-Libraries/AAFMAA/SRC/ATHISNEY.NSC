* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*****************************************************************
*                                                               *
* New COPYCODE member: ATHISNEY created by ACCORD on: 02/09/05  *
*                                                               *
* SAG-AB 20061016     Changed evaluation of min csv to preserve precision
* EDS-PM 20070207     Re-adjusted minimum cash value display for test*
*****************************************************************
*
DEFINE SUBROUTINE CALC-NEW-END-YR-VALUES
*
IF USE-X-CALCS = 'Y'
  PERFORM CALC-NEW-END-YR-VALUES-X
  ESCAPE ROUTINE
END-IF
*
MOVE IS-ISS-AGE TO TE-ISS-X
SUBTRACT 13 FROM TE-ISS-X
MOVE TE-ISS-X TO TE-ATT-X
ADD IS-DURATION TO TE-ATT-X
IF TE-ATT-X > 87
  MOVE 87 TO TE-ATT-X
END-IF
*
IF IS-TYPE = 'OL'
  MOVE 83 TO TE-PUP-X
ELSE
  MOVE IS-ISS-AGE TO TE-PUP-X
  SUBTRACT 13 FROM TE-PUP-X
  IF IS-TYPE = '30'
    ADD 30 TO TE-PUP-X
  ELSE
    IF IS-TYPE = '20'
      ADD 20 TO TE-PUP-X
    ELSE
      ADD 7 TO TE-PUP-X
    END-IF
  END-IF
END-IF
*
MOVE TE-ISS-X TO TF-ISS-X
ADD 14 TO TF-ISS-X
MOVE TE-ATT-X TO TF-ATT-X
ADD 14 TO TF-ATT-X
MOVE TE-PUP-X TO TF-PUP-X
ADD 14 TO TF-PUP-X
*
IF IS-PAID-UP-SW = 'Y'
  RESET IS-WORK-PREM
ELSE
  MOVE IS-ANN-PREM TO IS-WORK-PREM
END-IF
*
***************************************************************
*  AROUND MAY 1990 AFTER ALL POLICIES HAVE A CORRECTED
*  MINIMUM CASH VALUE MAKE ALL MIN CASH VALUES BE CALCULATED
*  WITH THE FORMULA USING THE PREVIOUS YEARS MIN CASH VALUE   *
***************************************************************
*
IF IS-PAID-UP-SW = 'Y'
  IF IS-ISS-YYYY > 1988
    assign  is-work-f = IS-WORK-PREM                              /* SAG-AB 20061016 start
    compute is-work-f = is-work-f * IS-NET-PREM-RATIO
    compute is-work-f = is-work-f + IS-MIN-CSV
    assign  is-work-g = TF-DX(TF-ATT-X - 1)
    compute is-work-g = is-work-g / TF-DX(TF-ATT-X)
    compute is-work-f = is-work-f * is-work-g
    assign  is-work-g = TF-MX(TF-ATT-X - 1)
    compute is-work-g = is-work-g - TF-MX(TF-ATT-X)
    compute is-work-g = is-work-g / TF-DX(TF-ATT-X)
    compute is-work-g = is-work-g * IS-FAC-AMT
    compute rounded is-work-c = is-work-f - is-work-g
**    COMPUTE ROUNDED IS-WORK-C = ((IS-MIN-CSV + (IS-WORK-PREM * IS-NET-PREM-RATIO))
**       * (TF-DX(TF-ATT-X - 1) / TF-DX(TF-ATT-X)))
**      - (((TF-MX(TF-ATT-X - 1) - TF-MX(TF-ATT-X)) / TF-DX(TF-ATT-X)) * IS-FAC-AMT)
    COMPUTE ROUNDED IS-MIN-CSV = IS-WORK-C * 1
  ELSE
    assign  is-work-f = IS-WORK-PREM                              /* SAG-AB 20061016 continue
    compute is-work-f = is-work-f * IS-NET-PREM-RATIO
    compute is-work-f = is-work-f + IS-MIN-CSV
    assign  is-work-g = TE-DX(TE-ATT-X - 1)
    compute is-work-g = is-work-g / TE-DX(TE-ATT-X)
    compute is-work-f = is-work-f * is-work-g
    assign  is-work-g = TE-MX(TE-ATT-X - 1)
    compute is-work-g = is-work-g - TE-MX(TE-ATT-X)
    compute is-work-g = is-work-g / TE-DX(TE-ATT-X)
    compute is-work-g = is-work-g * IS-FAC-AMT
    compute rounded is-work-c = is-work-f - is-work-g
**    COMPUTE ROUNDED IS-WORK-C = ((IS-MIN-CSV + (IS-WORK-PREM * IS-NET-PREM-RATIO))
**       * (TE-DX(TE-ATT-X - 1) / TE-DX(TE-ATT-X)))
**      - (((TE-MX(TE-ATT-X - 1) - TE-MX(TE-ATT-X)) / TE-DX(TE-ATT-X)) * IS-FAC-AMT)
    COMPUTE ROUNDED IS-MIN-CSV = IS-WORK-C * 1
  END-IF
ELSE
  IF IS-ISS-YYYY > 1988
    ASSIGN  IS-WORK-F  = TF-MX(TF-ATT-X)                   /* SAG-AB 20061016 continue
    COMPUTE IS-WORK-F  = IS-WORK-F / TF-DX(TF-ATT-X)
    COMPUTE IS-WORK-F  = IS-WORK-F * IS-FAC-AMT
    ASSIGN  IS-WORK-G  = TF-NX (TF-ATT-X)
    COMPUTE IS-WORK-G  = IS-WORK-G - TF-NX (TF-PUP-X)
    COMPUTE IS-WORK-G  = IS-WORK-G / TF-DX(TF-ATT-X)
    COMPUTE IS-WORK-G  = IS-WORK-G * IS-ANN-PREM                  /*  EDS-PM 20070207
    COMPUTE IS-WORK-G  = IS-WORK-G * IS-NET-PREM-RATIO            /*  EDS-PM 20070207
    COMPUTE ROUNDED IS-WORK-C = IS-WORK-F - IS-WORK-G             /*  EDS-PM 20070207
*    COMPUTE IS-WORK-F  = IS-WORK-F - IS-WORK-G                   /*  EDS-PM 20070207
*    COMPUTE IS-WORK-F  = IS-WORK-F * IS-ANN-PREM                 /*  EDS-PM 20070207
*    COMPUTE ROUNDED IS-WORK-C  = IS-WORK-F * IS-NET-PREM-RATIO   /*  EDS-PM 20070207
*
**    COMPUTE ROUNDED IS-WORK-C = (IS-FAC-AMT * (TF-MX(TF-ATT-X) / TF-DX(TF-ATT-X)))
**      -  ((TF-NX (TF-ATT-X) - TF-NX (TF-PUP-X)) / TF-DX(TF-ATT-X))
**       * IS-ANN-PREM * IS-NET-PREM-RATIO
    COMPUTE ROUNDED IS-MIN-CSV = IS-WORK-C * 1
  ELSE
    ASSIGN  IS-WORK-F  = TE-MX(TE-ATT-X)                   /* SAG-AB 20061016 continue
    COMPUTE IS-WORK-F  = IS-WORK-F / TE-DX(TE-ATT-X)
    COMPUTE IS-WORK-F  = IS-WORK-F * IS-FAC-AMT
    ASSIGN  IS-WORK-G  = TE-NX (TE-ATT-X)
    COMPUTE IS-WORK-G  = IS-WORK-G - TE-NX (TE-PUP-X)
    COMPUTE IS-WORK-G  = IS-WORK-G / TE-DX(TE-ATT-X)
    COMPUTE IS-WORK-G  = IS-WORK-G * IS-ANN-PREM                  /*  EDS-PM 20070207
    COMPUTE IS-WORK-G  = IS-WORK-G * IS-NET-PREM-RATIO            /*  EDS-PM 20070207
    COMPUTE ROUNDED IS-WORK-C = IS-WORK-F - IS-WORK-G             /*  EDS-PM 20070207   
*    COMPUTE IS-WORK-F  = IS-WORK-F - IS-WORK-G                   /*  EDS-PM 20070207
*    COMPUTE IS-WORK-F  = IS-WORK-F * IS-ANN-PREM                 /*  EDS-PM 20070207
*    COMPUTE ROUNDED IS-WORK-C  = IS-WORK-F * IS-NET-PREM-RATIO   /*  EDS-PM 20070207
*
**    COMPUTE ROUNDED IS-WORK-C = (IS-FAC-AMT * (TE-MX(TE-ATT-X) / TE-DX(TE-ATT-X)))
**      - ((TE-NX (TE-ATT-X) - TE-NX (TE-PUP-X)) / TE-DX(TE-ATT-X))
**       * IS-ANN-PREM * IS-NET-PREM-RATIO                 /* SAG-AB 20061016 END
    COMPUTE ROUNDED IS-MIN-CSV = IS-WORK-C * 1
  END-IF
END-IF
*
IF IS-ISS-YYYY > 1988
  COMPUTE ROUNDED IS-WORK-B = IS-FAC-AMT * (TF-MX(TF-ATT-X) / TF-DX(TF-ATT-X))
ELSE
  COMPUTE ROUNDED IS-WORK-B = IS-FAC-AMT * (TE-MX(TE-ATT-X) / TE-DX(TE-ATT-X))
END-IF
*
IF IS-MIN-CSV > IS-WORK-B
  MOVE IS-WORK-B TO IS-MIN-CSV
END-IF
IF (IS-MIN-CSV > IS-FAC-AMT) OR ((IS-ISS-AGE + IS-DURATION) > 95)
  MOVE IS-FAC-AMT TO IS-MIN-CSV
END-IF
MOVE IS-FAC-AMT TO IS-MIN-DB
MOVE IS-NXT-CSV TO IS-CSV
*
IF IS-PAID-UP-SW = 'Y'
  MOVE IS-EOM-DB TO IS-DB
ELSE
  MOVE IS-EOM-DB TO IS-DB
END-IF
IF L-LN = 'LN'
  PERFORM CALC-LIAB-RSV
END-IF
*
IF IS-PROJ-SW = 'Y'
  ESCAPE ROUTINE
END-IF
*
IF   ((IS-TYPE = '20') AND ((IS-DURATION + 1) > 20))
    OR ((IS-TYPE = '30') AND ((IS-DURATION + 1) > 30))
    OR ((IS-TYPE = '7')  AND ((IS-DURATION + 1) > 7))
    OR ((IS-TYPE = 'OL') AND ((IS-ISS-AGE + IS-DURATION + 1) > 96))
  RESET IS-WORK-PREM
END-IF
*
ADD 1 TO TE-ATT-X
IF TE-ATT-X > 87
  MOVE 87 TO TE-ATT-X
END-IF
*
MOVE TE-ATT-X TO TF-ATT-X
ADD 14 TO TF-ATT-X
*
IF IS-ISS-YYYY > 1988
  assign  is-work-f = IS-WORK-PREM                              /* SAG-AB 20061016 start
  compute is-work-f = is-work-f * IS-NET-PREM-RATIO
  compute is-work-f = is-work-f + IS-MIN-CSV
  assign  is-work-g = TF-DX(TF-ATT-X - 1)
  compute is-work-g = is-work-g / TF-DX(TF-ATT-X)
  compute is-work-f = is-work-f * is-work-g
  assign  is-work-g = TF-MX(TF-ATT-X - 1)
  compute is-work-g = is-work-g - TF-MX(TF-ATT-X)
  compute is-work-g = is-work-g / TF-DX(TF-ATT-X)
  compute is-work-g = is-work-g * IS-FAC-AMT
  compute rounded is-work-c = is-work-f - is-work-g
**  COMPUTE ROUNDED IS-WORK-C = ((IS-MIN-CSV + (IS-WORK-PREM * IS-NET-PREM-RATIO))
**     * (TF-DX(TF-ATT-X - 1) / TF-DX(TF-ATT-X)))
**    - (((TF-MX(TF-ATT-X - 1) - TF-MX(TF-ATT-X)) / TF-DX(TF-ATT-X)) * IS-FAC-AMT)
  COMPUTE ROUNDED IS-NXT-YR-MIN-CSV = IS-WORK-C * 1
ELSE
  assign  is-work-f = IS-WORK-PREM                              /* SAG-AB 20061016 continue
  compute is-work-f = is-work-f * IS-NET-PREM-RATIO
  compute is-work-f = is-work-f + IS-MIN-CSV
  assign  is-work-g = TE-DX(TE-ATT-X - 1)
  compute is-work-g = is-work-g / TE-DX(TE-ATT-X)
  compute is-work-f = is-work-f * is-work-g
  assign  is-work-g = TE-MX(TE-ATT-X - 1)
  compute is-work-g = is-work-g - TE-MX(TE-ATT-X)
  compute is-work-g = is-work-g / TE-DX(TE-ATT-X)
  compute is-work-g = is-work-g * IS-FAC-AMT
  compute rounded is-work-c = is-work-f - is-work-g
**  COMPUTE ROUNDED IS-WORK-C = ((IS-MIN-CSV + (IS-WORK-PREM * IS-NET-PREM-RATIO))
**     * (TE-DX(TE-ATT-X - 1) / TE-DX(TE-ATT-X)))
**    - (((TE-MX(TE-ATT-X - 1) - TE-MX(TE-ATT-X)) / TE-DX(TE-ATT-X)) * IS-FAC-AMT)
  COMPUTE ROUNDED IS-NXT-YR-MIN-CSV = IS-WORK-C * 1            /* SAG-AB 20061016 end
END-IF
*
IF IS-ISS-YYYY > 1988
  COMPUTE ROUNDED IS-WORK-B = IS-FAC-AMT * (TF-MX(TF-ATT-X) / TF-DX(TF-ATT-X))
ELSE
  COMPUTE ROUNDED IS-WORK-B = IS-FAC-AMT * (TE-MX(TE-ATT-X) / TE-DX(TE-ATT-X))
END-IF
*
IF (IS-NXT-YR-MIN-CSV > IS-WORK-B)
  MOVE IS-WORK-B TO IS-NXT-YR-MIN-CSV
END-IF
*
IF (IS-NXT-YR-MIN-CSV > IS-FAC-AMT) OR ((IS-ISS-AGE + IS-DURATION + 1) > 95)
  MOVE IS-FAC-AMT TO IS-NXT-YR-MIN-CSV
END-IF
*
END-SUBROUTINE
*
********************************************************************************
*
