* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
************************************************************************************
* Program  :  ATHPAGER                                                             *
*                                                                                  *
* Function : Create monthly report for all outstanding AIL/EIL loan applications   *
*                                                                                  *
* 05/04/2011 VXT Initialy created                                                  *
************************************************************************************
*
define data local
1 status view of a-status
  2 id-number
  2 member-contact-id
  2 issue-date   (9)
  2 x-alt-lp-ind (9)
  2 x-alt-lp-date (9)
*
1 contact view of a-contacts
  2 contact-id
  2 first-name
  2 middle-name
  2 last-name
*
local
1 #pol-num      (a16)
1 #name         (a70)
1 #tot-rec      (p7)
1 #no-contacts  (p7)
1 #curr-date    (n8)
1 #work-date    (n8)
1 redefine #work-date
  2 #work-date-yyyy (a4) 
  2 #work-date-mm   (a2) 
  2 #work-date-dd   (a2) 
1 #alt-lp-date   (a10)
1 #issue-date    (a10) 
1 #out-file     (a500)
1 #TAB          (a1) init<H'09'>
1 #i            (i2)
1 #description  (a10) 
1 #monthly-aged-report  (A) DYNAMIC INIT
  <'/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/MonthlyAgedReport.txt'>
*
end-define
*
DEFINE WORK FILE 1 #monthly-aged-report  TYPE 'ASCII-COMPRESSED'
*                  ATTRIBUTES 'APPEND'
*
format(1) ls=133 ps=66
write (1) title left 'PROGRAM:' *program
  8x 'Outstanding AIL/EIL CAP Loans' 5x 'DATE:' *DAT4U 5x 'TIME:' *timx 5x 'PAGE:' *page-number(1) //
write (1) notitle 'Member' 5x 'Name'65x 'Issue' 4x 'Policy' 6x 'AIL/EIL' 'Date AIL/EIL'
  / 'Number' 74x 'Date' 5x 'Number' 15x 'created' / '-' (124)
*
#curr-date := *datn
*
compress 'CN'             #TAB
  'Name'                  #TAB
  'Issue Date'            #TAB
  'Policy Number'         #TAB
  'AIL/EIL'               #TAB
  'Date AIL/EIL created'  #TAB
  into #out-file leaving no
write work 1 #out-file
*
read status by ISN
  for #i 1 to 9
    if x-alt-lp-ind(#i) eq 'L' or = 'E'
      add 1 to #tot-rec
      reset #name
      if x-alt-lp-date(#i) ne 0
        move status.x-alt-lp-date(#i) to #work-date
        compress #work-date-mm '/' #work-date-dd '/' #work-date-yyyy
          into #alt-lp-date leaving no
      else
        reset #alt-lp-date
      end-if
      if issue-date(#i) ne 0 
        move status.issue-date(#i) to #work-date 
        compress #work-date-mm '/' #work-date-dd '/' #work-date-yyyy 
          into #issue-date  leaving no 
      else 
        reset #issue-date 
      end-if 
      if x-alt-lp-ind(#i) = 'L'                                        
      move 'Allotment' to #description                                 
      end-if 
      if x-alt-lp-ind(#i) = 'E' 
      move 'EZ-Pay' to #description 
      end-if 
      find contact with contact-id = member-contact-id
        if no
          add 1 to #no-contacts
          write 'no rec on contact file for ' id-number
          escape bottom
        end-norec
        compress first-name middle-name last-name into #name
      end-find
*
      callnat 'gplnmsxx' #pol-num status.id-number #i
*
      write (1) status.id-number
        #name
       #issue-date 
        #pol-num
        status.x-alt-lp-ind(#i)
        #alt-lp-date
*
      compress status.id-number         #TAB
        #name                    #TAB
        #issue-date              #TAB 
        #pol-num                 #TAB
        #description             #TAB 
        #alt-lp-date             #TAB
        into #out-file leaving no
      write work 1 #out-file
    end-if
  end-for
  at end of data
    write ' total number of outstanding AIL/EIL records  ' #tot-rec  /
      'records not found on Contact file       ' #no-contacts
  end-enddata
end-read
end




