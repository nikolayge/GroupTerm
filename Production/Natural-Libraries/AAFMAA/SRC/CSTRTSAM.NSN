* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID : CSTRTSAM
*
* UPDATER FOR AM STRT TRAN (START ALLOTMENT - OLD TRAN CODE 414)
*******************************************
*                       MODIFICATION LOG
* USER DATE       TAG  REASON
* DRW  03212005   DW1  Allow Alot Start on an inactive member
* PAM  03/23/2009 PM2  Remove policy adjustments
* DRW 06/27/2009  DW3  Stop modification of AUX-DEBIT-CREDIT-AMT
* YAK 10/15/2012  YK1  Use function to identify Level Term II plans
*******************************************
DEFINE DATA
PARAMETER USING C2500AAM
*
PARAMETER
1 #ST-V-STATUS            (A1/9)
1 #ST-V-PAY-STATUS        (A2/9)
1 #ST-V-MODE              (A1/9)
1 #ST-V-PLAN              (A3/9)
1 REDEFINE #ST-V-PLAN
 2 #ST-V-PLAN-OCC    (9)
  3 #ST-V-PLAN-A2   (A2)
  3 REDEFINE #ST-V-PLAN-A2
   4 #ST-V-PLAN-N2  (N2)
  3 REDEFINE #ST-V-PLAN-A2
   4 #ST-V-PLAN-N1  (N1)
  3 REDEFINE #ST-V-PLAN-A2
   4 #ST-V-PLAN-A1  (A1)
  3 #ST-V-PLAN-SUFF (A1)
*
1 #ST-V-ISSUE-DATE        (N8/9)
1 REDEFINE #ST-V-ISSUE-DATE
 2 #ST-V-ISSUE-DATE-GR    (9)
  3 #ST-V-ISSUE-DATE-YYYY  (N4)
  3 #ST-V-ISSUE-DATE-MM    (N2)
  3 #ST-V-ISSUE-DATE-DD    (N2)
*
1 #ST-V-PAID-TO-DATE      (N8/9)
1 REDEFINE #ST-V-PAID-TO-DATE
 2 #ST-V-PAID-TO-DATE-GR  (9)
  3 #ST-V-PAID-TO-DATE-YYYY (N4)
  3 #ST-V-PAID-TO-DATE-MM   (N2)
  3 #ST-V-PAID-TO-DATE-DD   (N2)
1 REDEFINE #ST-V-PAID-TO-DATE       /* PM2
 2 #ST-V-PAID-TO-DATE-GR-2   (9)    /* PM2
 3 #ST-V-PAID-TO-DATE-YYYYMM (N6)   /* PM2
 3 #ST-V-PAID-TO-DATE-DD-2   (N2)   /* PM2
*
1 #ST-V-PAID-UP-DATE      (N8/9)
1 REDEFINE #ST-V-PAID-UP-DATE
 2 #ST-V-PAID-UP-DATE-GR  (9)
  3 #ST-V-PAID-UP-DATE-YYYY (N4)
  3 #ST-V-PAID-UP-DATE-MM   (N2)
  3 #ST-V-PAID-UP-DATE-DD   (N2)
*
1 #ST-V-ANNUAL-PREM       (P5.2/9)
1 #ST-V-MTD-ACV-PREM-ADJ  (P7.2/9)
1 #ST-V-MONTH-ALLOC-AMT   (P7.2/9)                /*tt1
1 #ST-V-CONV-DURATION     (P3/9)
1 #ST-V-ALOT-AMT          (P5.2)
1 #ST-V-ALOT-SW           (A1)
1 #ST-V-STOP-DATE         (N8)
1 #ST-V-DEBIT-CREDIT-AMT  (P7.2)
1 #ST-V-AUX-DEBIT-CREDIT-AMT (P7.2)
1 #ST-V-FIRST-PLACE-FEE   (P7.2/9)
1 #ST-V-ALT-LP-AMT        (P5.2/9)
1 #ST-V-ALT-LP-AMT-2      (P5.2/9)
1 #ST-V-ALT-LP-IND        (A1/9)  /* PM2
1 #ST-V-ALT-LP-IND-2      (A1/9)  /* PM2
1 #ST-V-BILL-ADJUST       (P5.2/9)
1 #ST-V-PAD-CODE          (A1)
1 #ST-V-DUES-ALL-PAID-IND (A1)
1 #ST-V-DUES-BALANCE      (P5.2)
1 #ST-V-DUES-FPF          (P3.2)
1 #ST-V-DUES-TOT-PAID     (P5.2)
1 #ST-V-INTRO-FLAG        (A1)
*
1 #ILN1       (I2)
1 #ILN2       (I2)
1 #UPDATE-MODE (L)
1 #TT-EFF-DT   (P8)
*
LOCAL
*
1 #SVC-FEE    (P3.2)
1 #SVC-FEE-SP (N3.2) INIT <450.00>
1 #SVC-FEE-2P (N2.2) INIT <18.50>
1 #SVC-FEE-3P (N2.2) INIT <12.50>
1 #SVC-FEE-4P (N1.2) INIT <9.50>
1 #SVC-FEE-5P (N1.2) INIT <7.50>
1 #SVC-FEE-6P (N1.2) INIT <6.50>
1 #SVC-FEE-7P (N1.2) INIT <6.00>
1 #SVC-FEE-10 (N1.2) INIT <4.50>
1 #SVC-FEE-20 (N1.2) INIT <3.00>
1 #SVC-FEE-30 (N1.2) INIT <2.50>
1 #SVC-FEE-OL (N1.2) INIT <2.00>
1 #SVC-FEE-TM (N1.2) INIT <2.00>
*
1 #WHOLE-DOLLARS      (N6)
1 #SCN-FACE           (N6)
1 #SCN-1035-EXCH      (N5)
1 #SCN-LUMP-SUM       (N5)
1 #CALC-FAC-AMT-TEXT  (A32)
*
1 #TODAY-YYYYMMDD
 2 #TODAY-YYYY           (N4)
 2 #TODAY-MM             (N2)
 2 #TODAY-DD             (N2)
1 REDEFINE #TODAY-YYYYMMDD
 2 #TODAY-YYYYMMDD-N     (N8)
1 REDEFINE #TODAY-YYYYMMDD      /* PM2
 2 #TODAY-YYYYMM         (N6)   /* PM2
 2 #TODAY-DD-2           (N2)   /* PM2
*
1 #EFF-YYYYMMDD
 2 #EFF-YYYY           (N4)
 2 #EFF-MM             (N2)
 2 #EFF-DD             (N2)
1 REDEFINE #EFF-YYYYMMDD
 2 #EFF-YYYYMMDD-N     (N8)
*
1 #I1           (I2)
1 #I2           (I2)
1 #I3           (I2)
1 #TRAN-ENTERED (L)    /* TO INDICATE IF AT LEAST 1 WAS ENTERED
1 #POLICY-FOUND (L)    /* TO INDICATE IF MATCHING POLICY WAS FOUND
1 #AT-LEAST-1-G-POL   (L) /* TO INDICATE IF AT LEAST 1 G POL WAS FND
1 #CAP-MBR            (L) /* has a cap policy
1 #PMT-75-PCT-EDIT-AMT (P5.2)
1 #PMT-ADJ-AMT         (P5.2)
1 #PAID-UP-402  (L)    /* TO INDICATE IF 1 PAID-UP ON A 402
1 #HOLD-PD-THRU-DATE (P8)
1 #GOOD-402     (L)    /* TO INDICATE IF 1 GOOD 402 LINE
1 #PMT-75-PCT-EDIT-DONE (L)  /* TO INDICATE IF 75 % EDIT ALREADY DONE
1 #DISP-MSG            (A75)    /* ERROR LINE MESSAGES
1 #ID-N6               (N6)
1 REDEFINE #ID-N6
 2 #ID-A6              (A6)
1 #DAILY-INT-AMT       (P3.5)    /* CALCULATED DAILY INTEREST AMT
1 #TOTAL-AMT           (P8.2)
1 #TOTAL-AMT-DISP      (A11)
1 #SUB-TOTAL-AMT       (P8.2)
1 #TMP-TOTAL-AMT       (P8.2)
1 #TOTAL-MODAL-PREMIUM (P5.2)
1 #MODAL-PREMIUM       (P5.2)
1 #REMAINING-TRAN-AMT  (P5.2)
1 #START-PROT-LINE     (P2)
1 #LAST-ID-READ        (P6)
1 #ISN                 (P8)
1 #HOLD-TIME           (P7)    /* SAME TIME FOR FILE AND TRLOG UPDATE
1 #WORK-MM             (P2)
1 #TOTAL-AMOUNT-DIFF   (P5.2)
1 #TOTAL-AMT-DUES-DIFF (P5.2)
1 #WORK-DIFF           (P5.2)
1 #WORK-DUES-DIFF      (P5.2)
1 #PD-THRU-MM          (P4)
1 #WORK-LAST-MM        (P4)
1 #LAST-MON-MM         (P4)
1 #LAST-MON-YYYY       (P4)
1 #FST-X        (I2)
*
END-DEFINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
FOR #FST-X 1 TO 9   /* get 1st active pol
  IF #ST-V-STATUS (#FST-X) = 'D'
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF #FST-X GT 9
  MOVE 1 TO #FST-X
END-IF
*
* if #ST-V-PAD-CODE NE ' '   /* removed 1/1997 as per LCC
*   IF #UPDATE-MODE                  /* BACKOUT TRANSACTION *
*     BACKOUT TRANSACTION            /* IF IN UPDATE MODE   *
*   END-IF                           /* *********************
*   REINPUT 'TO START ALLOTMENT PAD-CODE MUST BE BLANK'
*   MARK *#SCR-TRAN-CODE (#ILN1)
* END-IF
*
IF #SCR-TRAN-AMT (#ILN1) = 0
  REINPUT 'Trans Amount cannot = ZERO'
  MARK *#SCR-TRAN-AMT (#ILN1)
END-IF
*
IF #SCR-TRAN-AMT (#ILN1) GT 9999.99
  REINPUT 'Trans Amount exceeds $9,999.99'
  MARK *#SCR-TRAN-AMT (#ILN1)
END-IF
*
MOVE *DATN TO #TODAY-YYYYMMDD-N
*
* * * * * * * * * * * START ALLOTMENT  * * * * * * * * * * *  STRT - 414
*
IF #ST-V-ALOT-AMT NE 0
  IF #UPDATE-MODE                  /* BACKOUT TRANSACTION *
    BACKOUT TRANSACTION            /* IF IN UPDATE MODE   *
  END-IF                           /* *********************
  REINPUT 'ALLOTMENT AMOUNT NOT ZERO'
  MARK *#SCR-TRAN-CODE (#ILN1)
END-IF
*
* MOVE #TT-EFF-DT TO #ST-V-STOP-DATE  /* removed 9/13/2001
RESET #TOTAL-MODAL-PREMIUM
RESET #TOTAL-AMOUNT-DIFF
RESET #TOTAL-AMT-DUES-DIFF
*
MOVE #TT-EFF-DT TO #EFF-YYYYMMDD-N
*
IF #EFF-MM = 1
  MOVE 12 TO #LAST-MON-MM
  COMPUTE #LAST-MON-YYYY = #EFF-YYYY - 1
ELSE
  COMPUTE #LAST-MON-MM = #EFF-MM - 1
  MOVE #EFF-YYYY TO #LAST-MON-YYYY
END-IF
*
RESET #AT-LEAST-1-G-POL
FOR #I1 1 TO 9
  IF #ST-V-CONV-DURATION   (#I1) = 999
    MOVE TRUE TO #CAP-MBR
  END-IF
*
  IF   (#ST-V-STATUS (#I1) = 'D')
   AND (#ST-V-MODE (#I1) = 'G')
    MOVE TRUE TO #AT-LEAST-1-G-POL
  END-IF
*
  IF #ST-V-ALT-LP-IND (#I1) = '9'                               /* PM2
   AND #ST-V-STATUS   (#I1) = 'D'                               /* PM2
    #ST-V-ALT-LP-IND (#I1) := '2'                               /* PM2
  END-IF                                                        /* PM2
*
  IF #ST-V-ALT-LP-IND-2 (#I1) = '9'                             /* PM2
   AND #ST-V-STATUS     (#I1) = 'D'                             /* PM2
    #ST-V-ALT-LP-IND-2 (#I1) := '2'                             /* PM2
  END-IF                                                        /* PM2
*
  IF  (#ST-V-STATUS (#I1) NE 'D')
   OR (#ST-V-MODE   (#I1) NE 'G')
   OR (#ST-V-PAY-STATUS (#I1) GT '40')
      ESCAPE TOP
  END-IF
*
  IF #ST-V-PAID-TO-DATE-YYYYMM (#I1) NE #TODAY-YYYYMM           /* PM2
    IF #UPDATE-MODE                  /* BACKOUT TRANSACTION *   /* PM2
      BACKOUT TRANSACTION            /* IF IN UPDATE MODE   *   /* PM2
    END-IF                           /* *********************   /* PM2
    REINPUT 'ALL POLICIES PAYING VIA ALLOTMENT MUST BE CURRENT' /* PM2
    MARK *#SCR-TRAN-CODE (#ILN1)                                /* PM2
  END-IF                                                        /* PM2
*
  IF #ST-V-BILL-ADJUST (#I1) NE 0                               /* PM2
   OR #ST-V-FIRST-PLACE-FEE (#I1) NE 0                          /* PM2
    IF #UPDATE-MODE                  /* BACKOUT TRANSACTION *   /* PM2
      BACKOUT TRANSACTION            /* IF IN UPDATE MODE   *   /* PM2
    END-IF                           /* *********************   /* PM2
    REINPUT 'A POLICY PAYING VIA ALLOTMENT HAS OUTSTANDING BADJ/FPF' /* PM2
    MARK *#SCR-TRAN-CODE (#ILN1)                                /* PM2
  END-IF                                                        /* PM2
*
  IF #ST-V-FIRST-PLACE-FEE (#I1) = 0
    MOVE '22' TO #ST-V-PAY-STATUS (#I1) /* FPF PAID/PP
  ELSE
    MOVE '20' TO #ST-V-PAY-STATUS (#I1) /* FPF not PAID/fpwp
  END-IF
END-FOR /*(0227)
*
MOVE #SCR-TRAN-AMT (#ILN2) TO #ST-V-ALOT-AMT                    /* PM2
*                                                               /* PM2
*  COMPUTE #TOTAL-MODAL-PREMIUM = #TOTAL-MODAL-PREMIUM          /* PM2
*     + (#ST-V-ANNUAL-PREM (#I1) / 12)                          /* PM2
*  RESET #WORK-DIFF #WORK-DUES-DIFF                             /* PM2
*  IF   (#ST-V-PAID-TO-DATE-YYYY (#I1) = #LAST-MON-YYYY)  /* IF PAID THRU /* PM2
*   AND (#ST-V-PAID-TO-DATE-MM   (#I1) = #LAST-MON-MM)    /* PRIOR MONTH  /* PM2
*    IGNORE                                                     /* PM2
*  ELSE                                                         /* PM2
*    MOVE #ST-V-PAID-TO-DATE-MM (#I1) TO #PD-THRU-MM            /* PM2
*                                                               /* PM2
*    MOVE #LAST-MON-MM TO #WORK-LAST-MM                         /* PM2
*    IF #LAST-MON-YYYY GT #ST-V-PAID-TO-DATE-YYYY (#I1)         /* PM2
*      COMPUTE #WORK-LAST-MM = #LAST-MON-MM                     /* PM2
*           + (12 * (#LAST-MON-YYYY - #ST-V-PAID-TO-DATE-YYYY (#I1)))   /* PM2
*    ELSE                                                       /* PM2
*      IF #ST-V-PAID-TO-DATE-YYYY (#I1) GT #LAST-MON-YYYY       /* PM2
*        COMPUTE #PD-THRU-MM = #PD-THRU-MM                      /* PM2
*             + (12 * (#ST-V-PAID-TO-DATE-YYYY (#I1) - #LAST-MON-YYYY)) /* PM2
*      END-IF                                                   /* PM2
*    END-IF                                                     /* PM2
*                                                               /* PM2
*    PERFORM CALC-DUES                                          /* PM2
*    COMPUTE #WORK-DIFF = (#ST-V-ANNUAL-PREM (#I1) / 12)        /* PM2
*                           * (#WORK-LAST-MM - #PD-THRU-MM)     /* PM2
*    COMPUTE #WORK-DUES-DIFF = #SVC-FEE * (#WORK-LAST-MM - #PD-THRU-MM) /* PM2
*  END-IF                                                       /* PM2
*                                                               /* PM2
*  MOVE #TODAY-MM   TO #ST-V-PAID-TO-DATE-MM (#I1)              /* PM2
*  MOVE 15          TO #ST-V-PAID-TO-DATE-DD (#I1)              /* PM2
*  MOVE #TODAY-YYYY TO #ST-V-PAID-TO-DATE-YYYY (#I1)            /* PM2
*
* IF  (((#EFF-MM = 12)  /* removed 5/2/2004
*  AND (#ST-V-PAID-UP-DATE-YYYY (#I1) = #EFF-YYYY + 1)
*  AND (#ST-V-PAID-UP-DATE-MM   (#I1) = 01))
*   OR ((#EFF-MM NE 12)
*  AND (#ST-V-PAID-UP-DATE-YYYY (#I1) = #EFF-YYYY)
*  AND (#ST-V-PAID-UP-DATE-MM   (#I1) = #EFF-MM + 1)))
*     AND ((#ST-V-ISSUE-DATE (#I1) LT 19970101)
*      OR  (#ST-V-MONTH-ALLOC-AMT (#I1) = 999.99))
*   COMPUTE ROUNDED #WORK-DIFF = #WORK-DIFF
*        - (((#ST-V-ANNUAL-PREM (#I1) / 12) / 30)
*             * (#ST-V-PAID-UP-DATE-DD (#I1) - 1))
*   COMPUTE ROUNDED #WORK-DUES-DIFF = #WORK-DUES-DIFF
*        - ((#SVC-FEE / 30) * (#ST-V-PAID-UP-DATE-DD (#I1) - 1))
* END-IF
*  ADD #WORK-DIFF TO #TOTAL-AMOUNT-DIFF                         /* PM2
*  ADD #WORK-DUES-DIFF TO #TOTAL-AMT-DUES-DIFF                  /* PM2
*
*    ADJUST ACV ADj
*  IF   (NOT #ST-V-PLAN (#I1) = 'LT' OR = 'RT' OR = 'SO')       /* PM2
*   AND ((#ST-V-PLAN-A1 (#I1) LT 'U') OR (#ST-V-PLAN-A1 (#I1) GT 'Z'))/* PM2
*                                                               /* PM2
*    IF #I1 NE 1            /* FILLUP PRECEEDING MULTIPLE FIELDS /* PM2
*      COMPUTE #I3 = #I1 - 1                                    /* PM2
*      FOR #I2 1 TO #I3                                         /* PM2
*        IF #ST-V-MTD-ACV-PREM-ADJ (#I2) = 0                    /* PM2
*          MOVE 9999999.99 TO #ST-V-MTD-ACV-PREM-ADJ (#I2)      /* PM2
*        END-IF                                                 /* PM2
*      END-FOR                                                  /* PM2
*    END-IF                                                     /* PM2
*                                                               /* PM2
*    IF #ST-V-MTD-ACV-PREM-ADJ (#I1) = 9999999.99               /* PM2
*      RESET #ST-V-MTD-ACV-PREM-ADJ (#I1)                       /* PM2
*    END-IF                                                     /* PM2
*                                                               /* PM2
*    COMPUTE #MODAL-PREMIUM = #ST-V-ANNUAL-PREM (#I1) / 12      /* PM2
*    ADD #MODAL-PREMIUM TO #ST-V-MTD-ACV-PREM-ADJ (#I1)         /* PM2
*
* below removed 8/7/95 as per lcc*******************
* IF   (#WORK-DIFF LT 0)                           *
*  AND (#ST-V-PAY-STATUS (#I1) NE '12')            *
*   ADD #WORK-DIFF TO #ST-V-MTD-ACV-PREM-ADJ (#I1) *
* END-IF                                           *
* **************************************************
*    IF #ST-V-MTD-ACV-PREM-ADJ (#I1) = 0                        /* PM2
*      MOVE 9999999.99 TO #ST-V-MTD-ACV-PREM-ADJ (#I1)          /* PM2
*    END-IF                                                     /* PM2
*  END-IF                                                       /* PM2
*                                                               /* PM2
*  IF #ST-V-FIRST-PLACE-FEE (#I1) = 0                           /* Pm2
*    MOVE '22' TO #ST-V-PAY-STATUS (#I1) /* FPF PAID/PP         /* PM2
*  ELSE                                                         /* PM2
*    MOVE '20' TO #ST-V-PAY-STATUS (#I1) /* FPF not PAID/fpwp   /* PM2
*  END-IF                                                       /* PM2
*                                                               /* PM2
*  ADD #ST-V-BILL-ADJUST (#I1) TO #ST-V-DEBIT-CREDIT-AMT        /* PM2
*  RESET #ST-V-BILL-ADJUST (#I1)                                /* PM2
* END-FOR /*(0227)                                              /* PM2
*
* BELOW MAY NEED TO BE TEMPORARILY BYPASSED
* IF NOT #AT-LEAST-1-G-POL   /* Perm removed 3/21/2005         /* DW1
*   IF #UPDATE-MODE                  /* BACKOUT TRANSACTION/*
*    PERFORM BACKOUT-TXN            /* IF IN UPDATE MODE   *
*   END-IF                           /* *********************
*   REINPUT 'MODE G POLICIES MUST EXIST TO START ALLOTMENT'
*   MARK *#SCR-TRAN-CODE (#ILN1)
* END-IF
*
* ADD #TOTAL-AMOUNT-DIFF TO #ST-V-DEBIT-CREDIT-AMT             /* PM2
* ADD #TOTAL-AMT-DUES-DIFF TO #ST-V-DUES-BALANCE               /* PM2
*                                                              /* PM2
* ADD #ST-V-DUES-FPF        TO #ST-V-DUES-BALANCE              /* PM2
* RESET #ST-V-DUES-FPF                                         /* PM2
* MOVE #SCR-TRAN-AMT (#ILN2) TO #ST-V-ALOT-AMT                 /* PM2
*                                                              /* PM2
* MOVE #FST-X TO #I1                                           /* PM2
* PERFORM CALC-DUES                                            /* PM2
* ADD #SVC-FEE TO #ST-V-DUES-TOT-PAID                          /* PM2
* COMPUTE #REMAINING-TRAN-AMT = #SCR-TRAN-AMT (#ILN1) - #SVC-FEE/* PM2
* FOR #I1 1 TO 9/* PM2
*   SUBTRACT #ST-V-ALT-LP-AMT   (#I1) FROM #REMAINING-TRAN-AMT /* PM2
*   SUBTRACT #ST-V-ALT-LP-AMT-2 (#I1) FROM #REMAINING-TRAN-AMT /* PM2
* END-FOR                                                      /* PM2
*                                                              /* PM2
* IF #TOTAL-MODAL-PREMIUM NE #REMAINING-TRAN-AMT               /* PM2
*   SUBTRACT #TOTAL-MODAL-PREMIUM FROM #REMAINING-TRAN-AMT     /* PM2
*   IF #REMAINING-TRAN-AMT LT 0                                /* PM2
*     MOVE '-' TO #SCR-AMT-FLAG (#ILN1)                        /* PM2
*   ELSE                                                       /* PM2
*     MOVE '+' TO #SCR-AMT-FLAG (#ILN1)                        /* PM2
*   END-IF                                                     /* PM2
*                                                              /* PM2
*   SUBTRACT #REMAINING-TRAN-AMT FROM #ST-V-DEBIT-CREDIT-AMT   /* PM2
* END-IF
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-DUES
* * * * * * * * * * * * * *
*
RESET #SVC-FEE
IF  (#ST-V-ISSUE-DATE (#I1) LT 19970101)
 OR (#ST-V-MONTH-ALLOC-AMT (#I1) = 999.99)
 OR (#ST-V-INTRO-FLAG = 'S' OR = 'K' OR = 'G'
                   OR = 'O' OR = 'P' OR = 'Q')
 OR (#ST-V-DUES-ALL-PAID-IND = 'Y')
 OR (#I1 NE #FST-X)
   ESCAPE ROUTINE
END-IF
*
DECIDE ON FIRST VALUE #ST-V-PLAN-A2 (#I1)
  VALUE 'OL' MOVE #SVC-FEE-OL TO #SVC-FEE
* VALUE 'RT' MOVE #SVC-FEE-TM TO #SVC-FEE          /* YK1
* VALUE 'LT' MOVE #SVC-FEE-TM TO #SVC-FEE          /* YK1
  VALUE 'SP' MOVE #SVC-FEE-SP TO #SVC-FEE
  VALUE '2P' MOVE #SVC-FEE-2P TO #SVC-FEE
  VALUE '3P' MOVE #SVC-FEE-3P TO #SVC-FEE
  VALUE '4P' MOVE #SVC-FEE-4P TO #SVC-FEE
  VALUE '5P' MOVE #SVC-FEE-5P TO #SVC-FEE
  VALUE '6P' MOVE #SVC-FEE-6P TO #SVC-FEE
  VALUE '7P' MOVE #SVC-FEE-7P TO #SVC-FEE
  VALUE '8P' MOVE #SVC-FEE-7P TO #SVC-FEE
  VALUE '9P' MOVE #SVC-FEE-7P TO #SVC-FEE
  VALUE '20' MOVE #SVC-FEE-20 TO #SVC-FEE
  VALUE '30' MOVE #SVC-FEE-30 TO #SVC-FEE
  NONE        IGNORE
END-DECIDE
*
* IF (#ST-V-PLAN-A1 (#I1) GE 'U') AND (#ST-V-PLAN-A1 (#I1) LE 'Z')         /* YK1
IF FUNCTION-TERM-POLICY(<#ST-V-PLAN(#I1)>)                                 /* YK1
  MOVE #SVC-FEE-TM TO #SVC-FEE
END-IF
*
IF (#SVC-FEE = 0) AND (#ST-V-PLAN-A2 (#I1) = MASK (NN))
    IF #ST-V-PLAN-N2 (#I1) LE 19 MOVE #SVC-FEE-10 TO #SVC-FEE ELSE
    IF #ST-V-PLAN-N2 (#I1) LE 29 MOVE #SVC-FEE-20 TO #SVC-FEE ELSE
    IF #ST-V-PLAN-N2 (#I1) LE 34 MOVE #SVC-FEE-30 TO #SVC-FEE ELSE
                                 MOVE #SVC-FEE-OL TO #SVC-FEE
  END-IF END-IF END-IF
END-IF
*
END-SUBROUTINE
*
END
