* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
**************************************************************************
* SUBPROGRAM-ID: DNXUN001
* DESCRIPTION: RANK MAINTENANCE
**************************************************************************
*        MODIFICATION LOG
**************************************************************************
* USER   DATE      TAG  REASON
* NGG  12/09/2010  None Creation
**************************************************************************
*
DEFINE DATA
PARAMETER
1 #ISN              (P8)
1 #CLERK-ID         (A3)
1 #MODE             (A1)
1 #MSG              (A72)
LOCAL USING A-CTDATA
LOCAL USING GPRA0004                /* Parameters passed to write transaction log
LOCAL
1 #CONTACT-ID       (N8)
1 #MEMBER-ID-NUMBER (N6)
1 #RANK-ID          (N6)

1 CONTACT-V VIEW OF A-CONTACTS
  2 CONTACT-ID
  2 ID-NUMBER
  2 FIRST-NAME
  2 MIDDLE-NAME
  2 LAST-NAME
  2 SUFFIX
  2 RANK-ID
  2 RANK-PROTECT
  2 RANK-PROTECT-DATE
  2 REDEFINE RANK-PROTECT-DATE
    3 #PROTECT-DATE-YY         (A4)
    3 #PROTECT-DATE-MM         (A2)
    3 #PROTECT-DATE-DD         (A2)
  2 MILITARY-STATUS
  2 LAST-RANK-DATE-UPD
  2 LAST-RANK-USER-UPD
  2 PREV-RANK-ID
  2 SPECIAL-PAY-IND
  2 LAST-USER-UPD
  2 LAST-DATE-UPD
  2 LAST-TIME-UPD
*
1 RANK-V VIEW OF A-RANK-REFERENCE
  2 RANK-ID
  2 PAY-GRADE
  2 MILITARY-BRANCH
  2 MILITARY-ID
  2 RANK-DESCRIPTION
  2 SPECIAL-PAY-IND
  2 RANK-ABBR
  2 RANK-IN-SAS
  2 MESSAGE-NBR
*
1 STATUS-V VIEW OF A-STATUS
  2 MEMBER-CONTACT-ID
  2 DATE-RETIRED
  2 REDEFINE DATE-RETIRED
    3 #DATE-RET-YY             (A4)
    3 #DATE-RET-MM             (A2)
    3 #DATE-RET-DD             (A2)
  2 REDEFINE DATE-RETIRED
    3 #DATE-RETIRED-A          (A8)
  2 DATE-OF-RANK
  2 REDEFINE DATE-OF-RANK
    3 #DATE-RANK-YY            (A4)
    3 #DATE-RANK-MM            (A2)
    3 #DATE-RANK-DD            (A2)
  2 REDEFINE DATE-OF-RANK
    3 #DATE-OF-RANK-A          (A8)
  2 PRIOR-DATE-OF-RANK
  2 REDEFINE PRIOR-DATE-OF-RANK
    3 #PDATE-RANK-YY           (A4)
    3 #PDATE-RANK-MM           (A2)
    3 #PDATE-RANK-DD           (A2)
  2 REDEFINE PRIOR-DATE-OF-RANK
    3 #PRIOR-DATE-OF-RANK-A    (A8)
  2 RANK
  2 MILITARY-STATUS
  2 MILITARY-SERVICE
  2 RETIRED-PAY-AMT
  2 MIL-SBP-OPT
  2 CHIEF-OF-STAFF-IND
*
1 CODES VIEW OF A-GEN-TABLE
  2 GEN-ALPHA-VALUE
  2 GEN-NUMBER-VALUE
  2 ADDL-INFO
  2 REDEFINE ADDL-INFO
    3 #ADDL-INFO-1             (A50)
    3 #ADDL-INFO-2             (A50)
    3 #ADDL-INFO-3             (A50)
*
1 TERM-V VIEW OF A-TERMINALS
  2 COMMENTS
*
1 CONT-REL-V VIEW OF A-CONTACT-RELATIONSHIPS
  2 CONTACT-1-ID
  2 ROLE-2-CD
*
1 #MAP-CV                      (C)
1 #RANK-MIL-ID-CV              (C)
1 #RANK-ABBR-CV                (C)
1 #PREV-RANK-ABBR-CV           (C)
1 #DOP                         (A8)
1 REDEFINE #DOP
  2 #DOP-N                     (N8)
1 REDEFINE #DOP
  2 #DOP-MM                    (A2)
  2 #DOP-DD                    (A2)
  2 #DOP-YY                    (A4)
1 #PREV-DOP                    (A8)
1 REDEFINE #PREV-DOP
  2 #PREV-DOP-N                (N8)
1 REDEFINE #PREV-DOP
  2 #PREV-DOP-MM               (A2)
  2 #PREV-DOP-DD               (A2)
  2 #PREV-DOP-YY               (A4)
1 #YYYYMMDD                    (A8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMMDD-N                (N8)
1 #YYYYMMDD-2                  (A8)
1 REDEFINE #YYYYMMDD-2
  2 #YYYYMMDD-2-N              (N8)
1 #H1                          (A78)
1 #H2                          (A78)
1 #MILITARY-BRANCH             (A50)
1 #MILITARY-STATUS-DESC        (A20)
1 #PAY-GRADE                   (A3)
1 #PREV-RANK-DATE              (A8)
1 #PREV-PAY-GRADE              (A3)
1 #RANK-DESC                   (A45)
1 #RANK-PROTECTION-DESC        (A20)
1 #RANK-PROTECT-DATE           (A8)
1 #DATE-RETIRED                (A8)
1 REDEFINE #DATE-RETIRED
  2 #DATE-RETIRED-N            (N8)
1 REDEFINE #DATE-RETIRED
  2 #DATE-RETIRED-MM           (A2)
  2 #DATE-RETIRED-DD           (A2)
  2 #DATE-RETIRED-YY           (A4)
1 #SPC-PAY-IND                 (A1)
1 #MESSAGE-NBR                 (N3)
1 #PREV-RANK-ABBR              (A10)
1 #PREV-RANK-DESC              (A45)
1 #RANK-ID-2                   (A10)
1 #PREV-RANK-ID                (N6)
1 #PREV-RANK-ID-2              (A6)
1 #RANK-ABBR-2                 (A10)
1 #LAST-DATE-UPD               (A10)
1 #LAST-USER-UPD               (A20)
1 #CN-TEXT                     (A2)
1 #CI-TEXT                     (A2)
1 #DEL-TEXT                    (A3)
1 #ADD-TEXT                    (A3)
1 #SPC-PAY-IND-TXT             (A3)
1 #FMTD-NAME                   (A33)
1 #SSN                         (A11)
1 #DOB                         (A10)
1 #DOD                         (A10)
1 #UPDATE-FILES                (L)
1 #REMARKS                     (A70/3)
1 #POS                         (N2)
1 #N                           (N2)
1 #END                         (N2)
1 #SECURED                     (A1)
1 #VALID                       (L)
1 #BYPASS                      (L)
1 #RANK-LOWERED                (L)
1 #FIRST-DISPLAY               (L)
1 #SECOND-DISPLAY              (L)
1 #SAVE-RANK-MIL-ID            (A3)
1 #SAVE-RANK-ABBR              (A10)
1 #SAVE-RANK-ID                (N6)
1 #SAVE-PAY-GRADE              (A3)
1 #SAVE-RANK-PROTECTION        (A1)
1 #SAVE-RANK-STATUS            (A1)
1 #SAVE-DATE-RETIRED           (A8)
1 #SAVE-DOP                    (A8)
1 #SAVE-PREV-RANK-ID           (N6)
1 #SAVE-PDOP                   (A8)
1 #SAVE-PREV-RANK-ABBR         (A10)
1 #SAVE-PREV-PAY-GRADE         (A3)
1 #NEW-RANK-ID                 (N6)
1 #RANK-IN-SAS                 (A3)
1 #TEXT-1                      (A50)
1 #TEXT-2                      (A50)
1 #TEXT-3                      (A50)
1 #RESPONSE                    (A1)
1 #DATN                        (N8)
1 REDEFINE #DATN
  2 #DATN-YY                   (A4)
  2 #DATN-MM                   (A2)
  2 #DATN-DD                   (A2)
1 #CODES
  2  #RANK-MIL-ID              (A3)
  2  #RANK-STATUS              (A1)
  2  #RANK-ABBR                (A10)
  2  #RANK-PROTECTION          (A1)
1 #CODE-NAMES
  2  #RANK-MIL-ID-TXT          (A50)
  2  #RANK-STATUS-TXT          (A64)
  2  #RANK-ABBR-TXT            (A20)
  2  #RANK-PROTECTION-TXT      (A20)
*  
1 #prefix-title                (a25)          /* vt 02/01/2012 need to catalog the module
1 redefine #prefix-title
  2 #prefix-title-parm         (a10)
1 #pref-cv                     (c)
1 #prefix-title-desc           (a40)
1 #prefix-title-desc-msg       (a36)
1 #prefix-title-text           (a16)
1 #id-number                   (n6)           /* vt end
*
1 XML_SERIALZE_OUTPUT (A) DYNAMIC
1 #CSV-LINE           (A) DYNAMIC
1 #CRM-Result         (A) DYNAMIC
1 #Contact            (I4) CONST <2>
1 #SPECIAL-GUY        (L)
1 #PARM1              (A) DYNAMIC
1 #PARM2              (A10)
1 #RETURN-FLAG        (L)
*
1 P_PARMS
  2 P_ERROR_NUM (I4) /*ERROR NUMBER
  2 P_ERROR_LINE (I4) /*ERROR LINE
  2 P_ERROR_PROGRAM (A32)
  2 P_ERROR_LIB (A32)
  2 P_ERROR_DBID (I4)
  2 P_ERROR_FNR (I4)
  2 P_ERROR_TIME (T)
  2 P_ERROR_PGM_TYPE (A1)
  2 P_ERROR_PGM_TYPE_LONG (A11)
  2 P_ERROR_LANG (I4)
  2 P_ERROR_LEVEL (I4)
  2 P_ERROR_CLASS (I1)
  2 P_ERROR_TYPE (I1)
END-DEFINE
*
DEFINE WINDOW SPI-Text
  SIZE 11 * 53
  BASE 10/3
  FRAMED ON POSITION SYMBOL AUTO
*
DEFINE WINDOW Contact
  SIZE 20 * 74
  BASE 4/3
  FRAMED ON POSITION SYMBOL AUTO
*
RESET #MSG
GET CONTACT-V #ISN
#CONTACT-ID := CONTACT-V.CONTACT-ID
#RANK-ID    := CONTACT-V.RANK-ID
IF F-CONTACT-INFO(<#CONTACT-ID,F-CONTACT-DATA>)
  IGNORE
END-IF
*
SET KEY ENTR NAMED 'Save'
SET KEY PF1=HELP
SET KEY PF3 NAMED 'Exit'
SET KEY PF7 NAMED 'Prev'
SET KEY PF8 NAMED 'Next'
SET KEY PF12 NAMED 'Reln'
*
CALLNAT 'ADRN0004' #CONTACT-ID #H1 #H2
*
IF #CONT-ID-NUMBER > 0
  MOVE 'CN' TO #CN-TEXT
END-IF
MOVE 'CI' TO #CI-TEXT
*
REPEAT
  IF NOT #BYPASS
    PERFORM COLLECT-DATA
    IF #CONT-ID-NUMBER > 0
      CALLNAT 'ADRN0009'
        #CONTACT-ID
        #RANK-ID
        CONTACT-V.ID-NUMBER
        #PAY-GRADE
        #SPC-PAY-IND
        #CODES #CODE-NAMES
    END-IF
    IF #SPC-PAY-IND = 'Y'
      MOVE 'Yes' TO #SPC-PAY-IND-TXT
    ELSE
      MOVE 'No' TO #SPC-PAY-IND-TXT
    END-IF
    MOVE #RANK-MIL-ID TO #SAVE-RANK-MIL-ID
    IF #RANK-ID = 9999
      RESET #RANK-ID
    END-IF
    MOVE #RANK-ID TO #SAVE-RANK-ID
    MOVE #RANK-ABBR TO #SAVE-RANK-ABBR
    MOVE #PAY-GRADE TO #SAVE-PAY-GRADE
    MOVE #RANK-PROTECTION TO #SAVE-RANK-PROTECTION
    MOVE #RANK-STATUS TO #SAVE-RANK-STATUS
    MOVE #DATE-RETIRED TO #SAVE-DATE-RETIRED
    MOVE #DOP TO #SAVE-DOP
    MOVE #PREV-DOP TO #SAVE-PDOP
    MOVE #PREV-RANK-ABBR TO #SAVE-PREV-RANK-ABBR
    MOVE #PREV-RANK-ID TO #SAVE-PREV-RANK-ID
  END-IF
*
  IF #CONT-ID-NUMBER > 0
    INPUT WITH TEXT #MSG USING MAP 'ADRM0008'
  ELSE
    INPUT WITH TEXT #MSG USING MAP 'ADRM0009'
  END-IF
*
  RESET #MSG
*
  IF *PF-KEY = 'PF3' OR= 'PF7' OR= 'PF8'
    SET WINDOW OFF
    ESCAPE ROUTINE
  END-IF
*
  IF #RETURN-FLAG
    RESET #VALID
    FIND CODES WITH SEC-KEY = 'CODE024'
      IF GEN-ALPHA-VALUE = #RANK-MIL-ID OR
          (#CONT-ID-NUMBER = 0 AND #RANK-MIL-ID = MASK(.'  ') AND SUBSTR(GEN-ALPHA-VALUE,1,1) = #RANK-MIL-ID)
        MOVE TRUE TO #VALID
        ESCAPE BOTTOM
      END-IF
    END-FIND
    IF NOT #VALID
      SET WINDOW OFF
      RESET #RETURN-FLAG
      REINPUT 'Invalid Branch. Please use look-up.'
        MARK *#RANK-MIL-ID
    END-IF
    REINPUT USING HELP
      MARK *#RANK-ABBR
  END-IF
*
  IF *PF-KEY = 'PF12'
    CALLNAT 'GPF12SXX' #CONTACT-ID
    ESCAPE TOP
  END-IF
*
  IF #MAP-CV NOT MODIFIED AND
      #RANK-MIL-ID-CV NOT MODIFIED AND
      #RANK-ABBR-CV NOT MODIFIED AND
      #PREV-RANK-ABBR-CV NOT MODIFIED AND
      #PAY-GRADE = #SAVE-PAY-GRADE AND
      NOT #BYPASS
    REINPUT 'No changes made. Press PF3 to exit.'
  ELSE
    PERFORM VALIDATE-FIELDS
    IF #BYPASS
      SET CONTROL 'N'
      ESCAPE TOP
    END-IF
    PERFORM ADD/UPDATE-RECORD
  END-IF
END-REPEAT
******************************
DEFINE SUBROUTINE COLLECT-DATA
******************************
MOVE (AD=U) TO #MAP-CV #RANK-MIL-ID-CV #RANK-ABBR-CV #PREV-RANK-ABBR-CV
RESET #SPECIAL-GUY

MOVE PREV-RANK-ID TO #PREV-RANK-ID
FIND RANK-V WITH RANK-ID = PREV-RANK-ID
  MOVE RANK-ABBR TO #PREV-RANK-ABBR
  MOVE PAY-GRADE TO #PREV-PAY-GRADE
  MOVE RANK-DESCRIPTION TO #PREV-RANK-DESC
  IF *INIT-USER = 'guentch' OR= 'rasekhi' OR= 'XZBSL7' OR= 'RESTABI' OR= 'SVERMA'
    COMPRESS '{' RANK-ID '}' INTO #PREV-RANK-ID-2 LEAVING NO
  END-IF
END-FIND
FIND RANK-V WITH RANK-ID = #RANK-ID
  MOVE MILITARY-ID TO #RANK-MIL-ID
  MOVE MILITARY-BRANCH TO #RANK-MIL-ID-TXT
  MOVE RANK-ABBR TO #RANK-ABBR
  MOVE PAY-GRADE TO #PAY-GRADE
  MOVE RANK-DESCRIPTION TO #RANK-DESC
  MOVE MESSAGE-NBR TO #MESSAGE-NBR
  IF *INIT-USER = 'guentch' OR= 'rasekhi' OR= 'XZBSL7' OR= 'RESTABI' OR= 'SVERMA'
    COMPRESS '{' RANK-ID INTO #RANK-ID-2 LEAVING NO
  END-IF
END-FIND
MOVE RANK-PROTECT TO #RANK-PROTECTION
IF RANK-PROTECT-DATE > 0
  COMPRESS #PROTECT-DATE-MM #PROTECT-DATE-DD #PROTECT-DATE-YY INTO #RANK-PROTECT-DATE LEAVING NO
ELSE
  RESET #RANK-PROTECT-DATE
END-IF
MOVE MILITARY-STATUS TO #RANK-STATUS
IF SPECIAL-PAY-IND = ' '
  MOVE 'N' TO #SPC-PAY-IND
ELSE
  MOVE SPECIAL-PAY-IND TO #SPC-PAY-IND
END-IF
FIND (1) TERM-V WITH CLERK-ID = LAST-USER-UPD
  MOVE COMMENTS TO #LAST-USER-UPD
END-FIND
MOVE LAST-DATE-UPD TO #LAST-DATE-UPD
FIND STATUS-V WITH ID-NUMBER = CONTACT-V.ID-NUMBER
  IF NO RECORD FOUND
    COMPRESS #RANK-ID-2 '}' INTO #RANK-ID-2 LEAVING NO
    ESCAPE BOTTOM
  END-NOREC
  MOVE MILITARY-SERVICE TO #RANK-MIL-ID
  IF DATE-RETIRED > 0
    COMPRESS #DATE-RET-MM #DATE-RET-DD #DATE-RET-YY INTO #DATE-RETIRED LEAVING NO
  END-IF
  IF DATE-OF-RANK > 0
    COMPRESS #DATE-RANK-MM #DATE-RANK-DD #DATE-RANK-YY INTO #DOP LEAVING NO
  END-IF
  IF PRIOR-DATE-OF-RANK > 0
    COMPRESS #PDATE-RANK-MM #PDATE-RANK-DD #PDATE-RANK-YY INTO #PREV-DOP LEAVING NO
  END-IF
  IF *INIT-USER = 'guentch' OR= 'rasekhi' OR= 'XZBSL7' OR= 'RESTABI' OR= 'SVERMA'
    COMPRESS #RANK-ID-2 RANK INTO #RANK-ID-2
    COMPRESS #RANK-ID-2 '}' INTO #RANK-ID-2 LEAVING NO
  END-IF

END-FIND
*
END-SUBROUTINE
*********************************
DEFINE SUBROUTINE VALIDATE-FIELDS
*********************************
IF #RANK-MIL-ID = ' '
  REINPUT 'Enter Branch'
    MARK *#RANK-MIL-ID
END-IF
*
RESET #VALID
FIND CODES WITH SEC-KEY = 'CODE024'
  IF GEN-ALPHA-VALUE = #RANK-MIL-ID OR
      (#CONT-ID-NUMBER = 0 AND #RANK-MIL-ID = MASK(.'  ') AND SUBSTR(GEN-ALPHA-VALUE,1,1) = #RANK-MIL-ID)
    MOVE TRUE TO #VALID
    ESCAPE BOTTOM
  END-IF
END-FIND
IF NOT #VALID
  REINPUT 'Invalid Branch. Please use look-up.'
    MARK *#RANK-MIL-ID
END-IF
*
IF #RANK-ABBR = ' '
  REINPUT 'Enter Rank.'
    MARK *#RANK-ABBR
END-IF
*
RESET #VALID #MESSAGE-NBR
READ RANK-V
  IF SUBSTR(MILITARY-ID,1,1) = SUBSTR(#RANK-MIL-ID,1,1) AND
      *TRANSLATE(#RANK-ABBR,UPPER) = *TRANSLATE(RANK-ABBR,UPPER)
    MOVE TRUE TO #VALID
    MOVE RANK-ID TO #NEW-RANK-ID
    MOVE MESSAGE-NBR TO #MESSAGE-NBR
    ESCAPE BOTTOM
  END-IF
END-READ
IF NOT #VALID
  REINPUT 'Invalid Rank for this Branch. Please use look-up.'
    MARK *#RANK-ABBR
END-IF
*
IF #CONT-ID-NUMBER > 0
  RESET #FIRST-DISPLAY
  IF #MESSAGE-NBR > 0 AND (#RANK-MIL-ID-CV MODIFIED OR #PAY-GRADE NE #SAVE-PAY-GRADE)
      AND NOT #BYPASS
    MOVE TRUE TO #FIRST-DISPLAY
    PERFORM DISPLAY-SPI-TEXT
    IF *PF-KEY = 'PF3'
      IGNORE
    ELSE
      MOVE TRUE TO #BYPASS
      ESCAPE ROUTINE
    END-IF
  END-IF
END-IF
*
IF #CONT-GENDER-CD = 'F' AND *TRANSLATE(#RANK-ABBR,UPPER) = 'MR'
  REINPUT 'SEX and RANK mismatch'
    MARK *#RANK-ABBR
ELSE
  IF #CONT-GENDER-CD = 'M'
      AND (*TRANSLATE(#RANK-ABBR,UPPER) = 'MIS' OR = 'MRS' OR = 'MS')
    REINPUT 'SEX and RANK mismatch'
      MARK *#RANK-ABBR
  END-IF
END-IF
*
IF #RANK-ABBR NE #SAVE-RANK-ABBR OR #PAY-GRADE NE #SAVE-PAY-GRADE
  IF #MESSAGE-NBR > 0 AND #PAY-GRADE NE #SAVE-PAY-GRADE
    MOVE #RANK-ID TO #NEW-RANK-ID
    IF #MESSAGE-NBR = 100
      MOVE TRUE TO #SPECIAL-GUY
    END-IF
  ELSE
    READ RANK-V
      IF SUBSTR(MILITARY-ID,1,1) = SUBSTR(#RANK-MIL-ID,1,1) AND
          *TRANSLATE(#RANK-ABBR,UPPER) = *TRANSLATE(RANK-ABBR,UPPER)
        MOVE RANK-ID TO #NEW-RANK-ID
        ESCAPE BOTTOM
      END-IF
    END-READ
  END-IF
END-IF
*
IF #CONT-ID-NUMBER = 0          /* When member has no CN, then below fields don't apply
  RESET #BYPASS
  ESCAPE ROUTINE
END-IF
*
IF #DOP > ' ' AND #DOP-N NE MASK(MMDDYYYY)
  REINPUT 'Invalid date format'
    MARK *#DOP
END-IF
*
COMPRESS #DOP-YY #DOP-MM #DOP-DD INTO #YYYYMMDD LEAVING NO
IF #YYYYMMDD-N GT *DATN
  REINPUT 'Future Rank Date invalid'
    MARK *#DOP
END-IF
*
IF #RANK-PROTECTION = ' '
  REINPUT 'Enter Rank Protection'
    MARK *#RANK-PROTECTION
END-IF
*
#MSG := FUNCTION-CV-CHECK (<'026',#RANK-PROTECTION>)
IF #MSG NE ' '
  REINPUT #MSG
    MARK *#RANK-PROTECTION
END-IF
*
IF #RANK-PROTECTION NE #SAVE-RANK-PROTECTION
  COMPRESS #DATN-MM #DATN-DD #DATN-YY INTO #RANK-PROTECT-DATE
    LEAVING NO
END-IF
*
IF #RANK-STATUS = ' '
  REINPUT 'Enter Military Status'
    MARK *#RANK-STATUS
END-IF
*
#MSG := FUNCTION-CV-CHECK (<'025',#RANK-STATUS>)
IF #MSG NE ' '
  REINPUT #MSG
    MARK *#RANK-STATUS
END-IF
*
IF #RANK-STATUS = 'A' AND #DATE-RETIRED > ' '
  REINPUT 'Military Status cannot be "A" if Retirement Date exists'
    MARK *#DATE-RETIRED
END-IF
*
IF #DATE-RETIRED > ' ' AND #DATE-RETIRED-N NE MASK(MMDDYYYY)
  REINPUT 'Invalid date format'
    MARK *#DATE-RETIRED
END-IF
*
COMPRESS #DATE-RETIRED-YY #DATE-RETIRED-MM #DATE-RETIRED-DD TO #YYYYMMDD LEAVING NO
IF #DATE-RETIRED > ' ' AND #YYYYMMDD-N > *DATN
  REINPUT 'Future Retirement Date invalid'
    MARK *#DATE-RETIRED
END-IF
*
IF #DATE-RETIRED NE ' ' AND #DOP NE ' '
  COMPRESS #DATE-RETIRED-YY #DATE-RETIRED-MM #DATE-RETIRED-DD TO #YYYYMMDD LEAVING NO
  COMPRESS #DOP-YY #DOP-MM #DOP-DD INTO #YYYYMMDD-2 LEAVING NO
  IF #YYYYMMDD-2-N GE #YYYYMMDD-N
    REINPUT 'Promotion Date must be before Retirement Date'
      MARK *#DOP
  END-IF
END-IF
*
IF #PREV-RANK-ABBR = #RANK-ABBR
  REINPUT 'Current Rank must be different from Previous Rank'
    MARK *#RANK-ABBR
END-IF
*
IF #PREV-RANK-ABBR = ' '
  RESET #PREV-RANK-ID #PREV-RANK-DESC #PREV-PAY-GRADE #PREV-RANK-ID-2
END-IF
*
IF #PREV-RANK-ABBR NE ' ' AND #PREV-RANK-ABBR NE #SAVE-PREV-RANK-ABBR
  RESET #VALID #MESSAGE-NBR
  READ RANK-V
    IF SUBSTR(MILITARY-ID,1,1) = SUBSTR(#RANK-MIL-ID,1,1) AND
        *TRANSLATE(#PREV-RANK-ABBR,UPPER) = *TRANSLATE(RANK-ABBR,UPPER)
      MOVE TRUE TO #VALID
      MOVE MESSAGE-NBR TO #MESSAGE-NBR
      ESCAPE BOTTOM
    END-IF
  END-READ
  IF NOT #VALID
    REINPUT 'Invalid Rank for this Branch. Please use look-up.'
      MARK *#PREV-RANK-ABBR
  END-IF
*
  RESET #SECOND-DISPLAY
  IF #MESSAGE-NBR > 0 AND (#RANK-MIL-ID-CV MODIFIED OR #PREV-PAY-GRADE NE #SAVE-PREV-PAY-GRADE)
      AND NOT #BYPASS
    MOVE TRUE TO #SECOND-DISPLAY
    PERFORM DISPLAY-SPI-TEXT
    IF *PF-KEY = 'PF3'
      IGNORE
    ELSE
      MOVE TRUE TO #BYPASS
      ESCAPE ROUTINE
    END-IF
  END-IF
*
  IF #PREV-RANK-ABBR NE ' ' AND
      (#PREV-RANK-ABBR NE #SAVE-PREV-RANK-ABBR OR #PREV-PAY-GRADE NE #SAVE-PREV-PAY-GRADE)
    IF #MESSAGE-NBR > 0 AND #PREV-PAY-GRADE NE #SAVE-PREV-PAY-GRADE
      MOVE #RANK-ID TO #PREV-RANK-ID
    ELSE
      READ RANK-V
        IF SUBSTR(MILITARY-ID,1,1) = SUBSTR(#RANK-MIL-ID,1,1) AND
            *TRANSLATE(RANK-ABBR,UPPER) = *TRANSLATE(#PREV-RANK-ABBR,UPPER)
          MOVE RANK-ID TO #PREV-RANK-ID
          ESCAPE BOTTOM
        END-IF
      END-READ
    END-IF
  END-IF
END-IF
*
IF #PREV-DOP > ' ' AND #PREV-DOP-N NE MASK(MMDDYYYY)
  REINPUT 'Invalid date format'
    MARK *#PREV-DOP
END-IF
*
COMPRESS #PREV-DOP-YY #PREV-DOP-MM #PREV-DOP-DD INTO #YYYYMMDD LEAVING NO
IF #PREV-DOP > ' ' AND #YYYYMMDD-N > *DATN
  REINPUT 'Future Promotion Date invalid'
    MARK *#PREV-DOP
END-IF
*
IF #DOP NE ' ' AND #PREV-DOP NE ' '
  COMPRESS #PREV-DOP-YY #PREV-DOP-MM #PREV-DOP-DD INTO #YYYYMMDD LEAVING NO
  COMPRESS #DOP-YY #DOP-MM #DOP-DD INTO #YYYYMMDD-2 LEAVING NO
  IF #YYYYMMDD-N GE #YYYYMMDD-2-N
    REINPUT 'Previous Promotion Date must be before Promotion Date'
      MARK *#PREV-DOP
  END-IF
END-IF
*
IF #DATE-RETIRED NE ' ' AND #PREV-DOP NE ' '
  COMPRESS #DATE-RETIRED-YY #DATE-RETIRED-MM #DATE-RETIRED-DD INTO #YYYYMMDD LEAVING NO
  COMPRESS #PREV-DOP-YY #PREV-DOP-MM #PREV-DOP-DD INTO #YYYYMMDD-2 LEAVING NO
  IF #YYYYMMDD-2-N GE #YYYYMMDD-N
    REINPUT 'Previous Promotion Date must be before Retirement Date'
      MARK *#PREV-DOP
  END-IF
END-IF
RESET #BYPASS
*
END-SUBROUTINE
**********************************
DEFINE SUBROUTINE DISPLAY-SPI-TEXT
**********************************
RESET #TEXT-1 #TEXT-2 #TEXT-3
MOVE 'N' TO #RESPONSE
FIND CODES WITH SEC-KEY = 'CODE027'
  IF GEN-NUMBER-VALUE = #MESSAGE-NBR
    MOVE #ADDL-INFO-1 TO #TEXT-1
    MOVE #ADDL-INFO-2 TO #TEXT-2
    MOVE #ADDL-INFO-3 TO #TEXT-3
    ESCAPE BOTTOM
  END-IF
END-FIND
*
SET WINDOW 'SPI-Text'
INPUT WINDOW='SPI-Text' USING MAP 'ADRM0010'
*
IF *PF-KEY = 'PF3'
  IF #FIRST-DISPLAY
    MOVE #SAVE-RANK-ID TO #NEW-RANK-ID
    MOVE #SAVE-RANK-ABBR TO #RANK-ABBR
  ELSE
    MOVE #SAVE-PREV-RANK-ID TO #PREV-RANK-ID
    MOVE #SAVE-PREV-RANK-ABBR TO #PREV-RANK-ABBR
  END-IF
  SET WINDOW OFF
  ESCAPE ROUTINE
END-IF
*
IF NOT (#RESPONSE = 'Y' OR = 'N' OR = 'U')
  REINPUT 'Invalid response'
    MARK *#RESPONSE
END-IF
*
IF #FIRST-DISPLAY
  MOVE #RANK-ABBR TO #RANK-ABBR-2
ELSE
  MOVE #PREV-RANK-ABBR TO #RANK-ABBR-2
END-IF
READ RANK-V
  IF SUBSTR(MILITARY-ID,1,1) = SUBSTR(#RANK-MIL-ID,1,1) AND
      *TRANSLATE(RANK-ABBR,UPPER) = *TRANSLATE(#RANK-ABBR-2,UPPER)
    IF #FIRST-DISPLAY AND (SPECIAL-PAY-IND = #RESPONSE OR SPECIAL-PAY-IND = 'U')
      MOVE RANK-ID TO #RANK-ID
      MOVE SPECIAL-PAY-IND TO #SPC-PAY-IND
      IF #SPC-PAY-IND = 'U'
        IF #RESPONSE = 'N'
          MOVE 'N' TO #SPC-PAY-IND
        ELSE
          MOVE 'Y' TO #SPC-PAY-IND
        END-IF
      END-IF
      MOVE PAY-GRADE TO #PAY-GRADE
      ESCAPE BOTTOM
    END-IF
    IF #SECOND-DISPLAY AND SPECIAL-PAY-IND = #RESPONSE
      MOVE RANK-ID TO #PREV-RANK-ID
      MOVE PAY-GRADE TO #PREV-PAY-GRADE
      ESCAPE BOTTOM
    END-IF
  END-IF
END-READ
*
SET WINDOW OFF
*
END-SUBROUTINE
***********************************
DEFINE SUBROUTINE ADD/UPDATE-RECORD
**********************************
IF #RANK-MIL-ID = #SAVE-RANK-MIL-ID AND
    #RANK-ID = #SAVE-RANK-ID AND
    #RANK-ABBR = #SAVE-RANK-ABBR AND
    #PAY-GRADE = #SAVE-PAY-GRADE AND
    #RANK-PROTECTION = #SAVE-RANK-PROTECTION AND
    #RANK-STATUS = #SAVE-RANK-STATUS AND
    #DATE-RETIRED = #SAVE-DATE-RETIRED AND
    #DOP = #SAVE-DOP AND
    #PREV-DOP = #SAVE-PDOP AND
    #PREV-RANK-ABBR = #SAVE-PREV-RANK-ABBR
  ESCAPE ROUTINE
END-IF
*
PERFORM UPDATE-STATUS/TRANS-REG
*
END TRANSACTION
*
COMPRESS 'Record successfully updated' #MSG INTO #MSG
*
END-SUBROUTINE
*****************************************
DEFINE SUBROUTINE UPDATE-STATUS/TRANS-REG
*****************************************
*
RESET #MSG
FIND CONTACT-V WITH CONTACT-ID = #CONTACT-ID
**  DISPLAY  #PREV-RANK-ID #SAVE-PREV-RANK-ID #SAVE-RANK-ID
  IF #PREV-RANK-ID NE #SAVE-PREV-RANK-ID
    MOVE #PREV-RANK-ID TO PREV-RANK-ID
  END-IF
  IF (#RANK-ID NE #NEW-RANK-ID) OR (#RANK-ID NE #SAVE-RANK-ID)
    MOVE RANK-ID TO PREV-RANK-ID
    IF #RANK-ID NE #NEW-RANK-ID
      MOVE #NEW-RANK-ID  TO RANK-ID #RANK-ID
    ELSE
      MOVE #RANK-ID  TO RANK-ID
    END-IF
    MOVE #CLERK-ID TO LAST-RANK-USER-UPD
    MOVE *DATN TO LAST-RANK-DATE-UPD
  END-IF
  IF #CONT-ID-NUMBER > 0
    MOVE #RANK-STATUS TO MILITARY-STATUS
    MOVE #SPC-PAY-IND TO SPECIAL-PAY-IND
    MOVE #RANK-PROTECTION TO RANK-PROTECT
    IF #RANK-PROTECTION = 'N'
      RESET RANK-PROTECT-DATE
    ELSE
      IF #RANK-PROTECTION NE #SAVE-RANK-PROTECTION
        MOVE *DATN TO RANK-PROTECT-DATE
      END-IF
    END-IF
  END-IF
  MOVE #CLERK-ID TO LAST-USER-UPD
  MOVE *DATN TO LAST-DATE-UPD
  MOVE *TIMN TO LAST-TIME-UPD
  UPDATE
END-FIND
*
IF (SUBSTR(#RANK-MIL-ID,1,1) = 'V' OR = 'E')  OR
    (SUBSTR(#SAVE-RANK-MIL-ID,1,1) = 'V' OR = 'E') OR
    (#RANK-ABBR = 'MR' OR = 'MRS' OR = 'MS') OR
    (#SAVE-RANK-ABBR = 'MR' OR = 'MRS' OR = 'MS')
  IGNORE
ELSE
  IF #RANK-ID < #SAVE-RANK-ID AND #RANK-ABBR NE #SAVE-RANK-ABBR
    MOVE TRUE TO #RANK-LOWERED
  END-IF
END-IF
*
FIND STATUS-V WITH ID-NUMBER = CONTACT-V.ID-NUMBER
  FIND RANK-V WITH RANK-ID = CONTACT-V.RANK-ID
    MOVE RANK-IN-SAS TO RANK
  END-FIND
  MOVE #RANK-MIL-ID TO MILITARY-SERVICE
  MOVE #RANK-STATUS TO MILITARY-STATUS
  IF #DATE-RETIRED =  ' '
    RESET DATE-RETIRED
  ELSE
    COMPRESS #DATE-RETIRED-YY #DATE-RETIRED-MM #DATE-RETIRED-DD TO #DATE-RETIRED-A LEAVING NO
  END-IF
  IF #RANK-ABBR NE #SAVE-RANK-ABBR AND NOT #RANK-LOWERED
    MOVE DATE-OF-RANK TO PRIOR-DATE-OF-RANK
    IF #DOP NE ' '
      COMPRESS #DOP-YY #DOP-MM #DOP-DD INTO #YYYYMMDD-2 LEAVING NO
      IF DATE-OF-RANK NE #YYYYMMDD-2-N
        COMPRESS #DOP-YY #DOP-MM #DOP-DD INTO #DATE-OF-RANK-A LEAVING NO
      ELSE
        RESET #DOP DATE-OF-RANK
        MOVE '(DOP is missing)' TO #MSG
        SET CONTROL 'T8/11'
      END-IF
    ELSE
      MOVE '(DOP is missing)' TO #MSG
      SET CONTROL 'T8/11'
    END-IF
    RESET #PREV-DOP
  ELSE
    IF #DOP = ' '
      RESET DATE-OF-RANK
    ELSE
      COMPRESS #DOP-YY #DOP-MM #DOP-DD INTO #DATE-OF-RANK-A LEAVING NO
    END-IF
    IF #PREV-DOP = ' '
      RESET PRIOR-DATE-OF-RANK
    ELSE
      COMPRESS #PREV-DOP-YY #PREV-DOP-MM #PREV-DOP-DD INTO #PRIOR-DATE-OF-RANK-A LEAVING NO
    END-IF
  END-IF
  DECIDE FOR FIRST CONDITION
    WHEN CHIEF-OF-STAFF-IND = ' ' AND #RANK-PROTECTION = 'Y'
      MOVE 'R' TO CHIEF-OF-STAFF-IND
    WHEN CHIEF-OF-STAFF-IND = 'R' AND #RANK-PROTECTION = 'N'
      RESET CHIEF-OF-STAFF-IND
    WHEN NONE
      IGNORE
  END-DECIDE
  IF #SPECIAL-GUY
    MOVE 'Y' TO CHIEF-OF-STAFF-IND
  END-IF
  UPDATE (0805)
END-FIND
*
IF #RANK-LOWERED
  IF #MSG NE ' '
    MOVE '(DOP is missing. Rank is lowered)' TO #MSG
  ELSE
    MOVE '(Rank is lowered)' TO #MSG
  END-IF
END-IF
RESET #RANK-LOWERED #LOG-DESCRIPTION #FIELD-DESCRIPTION(*)
*
IF #CONT-ID-NUMBER = 0
  #LOG-DESCRIPTION    := 'CB-RANK-M'
  #TR-NAME            := FUNCTION-DISP-CT-NAME(<FIRST-NAME,MIDDLE-NAME,LAST-NAME,SUFFIX>)
  #TR-ID-NUMBER         := #MEMBER-ID-NUMBER
  FIND STATUS-V WITH ID-NUMBER = #MEMBER-ID-NUMBER
  END-FIND
  FIND CONT-REL-V WITH CONTACT-2-ID = #CONTACT-ID
    IF CONTACT-1-ID = STATUS-V.MEMBER-CONTACT-ID
      DECIDE ON FIRST VALUE OF ROLE-2-CD
        VALUE 'S'
          MOVE 'SPS-NAME' TO #FIELD-DESCRIPTION(1)
        VALUE 'X'
          MOVE 'FSP-NAME' TO #FIELD-DESCRIPTION(1)
        VALUE 'K', 'G', 'D'
          MOVE 'DEP-NAME' TO #FIELD-DESCRIPTION(1)
        VALUE 'A','B','E','F','I','P','R','T','O','H','Z'
          MOVE 'OTH-NAME' TO #FIELD-DESCRIPTION(1)
        NONE
          IGNORE
      END-DECIDE
    END-IF
  END-FIND
  #OLD-DATA(1)          := #TR-NAME
  #NEW-DATA(1)          := #TR-NAME
  PERFORM WRITE-TRANS-REG
ELSE
  #LOG-DESCRIPTION    := 'CG-RANK-M'
  #TR-NAME            := #CONT-FMTD-NAME
  #TR-ID-NUMBER       := #CONT-ID-NUMBER
END-IF
#TR-CLERK-ID          := #CLERK-ID
#TR-DATE-LAST-UPDATE  := *DATN
*
IF #RANK-MIL-ID NE #SAVE-RANK-MIL-ID
  #OLD-DATA(1)          := #SAVE-RANK-MIL-ID
  #FIELD-DESCRIPTION(1) := 'MIL-ID'
  #NEW-DATA(1)          := #RANK-MIL-ID
  PERFORM WRITE-TRANS-REG
END-IF
*
IF #RANK-ABBR NE #SAVE-RANK-ABBR
  #OLD-DATA(1)          := #SAVE-RANK-ABBR
  #FIELD-DESCRIPTION(1) := 'RANK-ABBR'
  #NEW-DATA(1)          := #RANK-ABBR
  IF #SAVE-PAY-GRADE NE ' ' OR #PAY-GRADE NE ' '
    #OLD-DATA(2)          := #SAVE-PAY-GRADE
    #FIELD-DESCRIPTION(2) := 'PAY-GRADE'
    #NEW-DATA(2)          := #PAY-GRADE
  END-IF
  PERFORM WRITE-TRANS-REG
END-IF
*
IF #DOP NE #SAVE-DOP
  #OLD-DATA(1)          := #SAVE-DOP
  #FIELD-DESCRIPTION(1) := 'DOP'
  #NEW-DATA(1)          := #DOP
  PERFORM WRITE-TRANS-REG
END-IF
*
IF #RANK-STATUS NE #SAVE-RANK-STATUS
  #OLD-DATA(1)          := #SAVE-RANK-STATUS
  #FIELD-DESCRIPTION(1) := 'MIL-STATU'
  #NEW-DATA(1)          := #RANK-STATUS
  PERFORM WRITE-TRANS-REG
END-IF
*
IF #DATE-RETIRED NE #SAVE-DATE-RETIRED
  #OLD-DATA(1)          := #SAVE-DATE-RETIRED
  #FIELD-DESCRIPTION(1) := 'RET-DATE'
  #NEW-DATA(1)          := #DATE-RETIRED
  PERFORM WRITE-TRANS-REG
END-IF
*
IF #RANK-PROTECTION NE #SAVE-RANK-PROTECTION
  #OLD-DATA(1)          := #SAVE-RANK-PROTECTION
  #FIELD-DESCRIPTION(1) := 'RANK-PROT'
  #NEW-DATA(1)          := #RANK-PROTECTION
  PERFORM WRITE-TRANS-REG
END-IF
*
IF #PREV-RANK-ABBR NE #SAVE-PREV-RANK-ABBR
  #OLD-DATA(1)          := #SAVE-PREV-RANK-ABBR
  #FIELD-DESCRIPTION(1) := 'PRV-RANK'
  #NEW-DATA(1)          := #PREV-RANK-ABBR
  IF #SAVE-PREV-PAY-GRADE NE ' ' OR #PREV-PAY-GRADE NE ' '
    #OLD-DATA(2)          := #SAVE-PREV-PAY-GRADE
    #FIELD-DESCRIPTION(2) := 'PRV-PAY-G'
    #NEW-DATA(2)          := #PREV-PAY-GRADE
  END-IF
  PERFORM WRITE-TRANS-REG
END-IF
*
IF #PREV-DOP NE #SAVE-PDOP
  #OLD-DATA(1)          := #SAVE-PDOP
  #FIELD-DESCRIPTION(1) := 'PDOP'
  #NEW-DATA(1)          := #PREV-DOP
  PERFORM WRITE-TRANS-REG
END-IF
*
END-SUBROUTINE
*********************************
DEFINE SUBROUTINE WRITE-TRANS-REG
*********************************
CALLNAT 'GPRN0004'
  #TR-FIELDS #SYNC-FIELD-TABLE(*)
  #OLD-DATA-TABLE(*) #NEW-DATA-TABLE(*)
RESET #FIELD-DESCRIPTION(*)
*
END-SUBROUTINE
*
ON ERROR
  CALLNAT 'USR2001N' P_PARMS  /* Get the actual error line details
  COMPRESS 'Application error' P_ERROR_NUM 'In program' P_ERROR_PROGRAM
    'Error line' P_ERROR_LINE
    INTO #MSG
  INPUT //// #MSG (AD=IO)
    / 'Please call production support'
  #MSG := 'PF3'
  ESCAPE ROUTINE
END-ERROR

END

