* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPMSD2 - DFAS/AAFMAA ALLOTMENT MISMATCH (part 2)
*
************************************************************************
*     MODIFICATION LOG
* USER DATE       TAG  REASON
* RSE  09/29/2009 RE1  Change PROCESS-IND logic for Unification
************************************************************************
DEFINE DATA
LOCAL
*
1 #PAY-FILE     (A9)
1 #NUM-DFAS-MISMATCH   (P5)
1 #TOT-DFAS-MISMATCH   (P7.2)
*
1 PAYS-FILE       (A9)
*
1 ST-V VIEW OF A-STATUS
 2 ID-NUMBER
 2 REDEFINE ID-NUMBER
  3 ID-NUMBER-A   (A6)
 2 PROCESS-IND
 2 SSN
 2 ALOT-AMT
 2 X-ALT-LP-AMT   (9)
 2 X-ALT-LP-AMT-2 (9)
 2 X-ALT-LP-IND   (9)
 2 X-ALT-LP-IND-2 (9)
 2 STATUS         (9)
 2 MODE           (9)
 2 ISSUE-DATE     (9)
 2 PAY-STATUS     (9)
 2 ANNUAL-PREM    (9)
 2 PAID-TO-DATE   (9)
 2 REDEFINE PAID-TO-DATE
  3 PAID-TO-DATE-OCC   (9)
   4 PAID-TO-DATE-YYYYMM   (N6)
   4 PAID-TO-DATE-DD       (N2)
 2 PAID-UP-DATE   (9)
 2 REDEFINE PAID-UP-DATE
  3 PAID-UP-DATE-OCC   (9)
   4 PAID-UP-DATE-YYYYMM   (N6)
   4 PAID-UP-DATE-DD       (N2)
*
1 ALOT-REC    (A45)
1 REDEFINE ALOT-REC
 2 AL-SSN-A    (A9)
 2 REDEFINE AL-SSN-A
  3 AL-SSN     (N9)
 2 AL-SERV     (A1)
 2 AL-STATUS   (A1)
 2 AL-AMOUNT-A (A6)
 2 REDEFINE AL-AMOUNT-A
  3 AL-AMOUNT  (N4.2)
 2 AL-NAME     (A22)
 2 AL-EFF-DT   (N06)
*
1 #COUNTERS
 2 #RECS-READ        (P5)
 2 #RECS-SELECTED    (P5)
 2 #CNT              (P5)
 2 #CNT-2            (P7)
 2 #CNT-3            (P7)
 2 #CNT-4            (P7)
 2 #CNT-5            (P7)
 2 #CNT-6            (P7)
 2 #CNT-7            (P7)
 2 #I1               (I2)
 2 #I2               (I2)
 2 #I3               (I2)
 2 #I4               (I2)
 2 #I5               (I2)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM        (N6)
  2 REDEFINE #YYYYMM
   3 #YYYY          (N4)
   3 #MM            (N2)
  2 #DD            (N2)
*
1 #NEXT-MONTH-YYYYMM    (N6)
1 #CURR-YYYYMMDD  (N8)
1 REDEFINE #CURR-YYYYMMDD
 2 #CURR-YYYYMM   (N6)
 2 #CURR-DD       (N2)
1 #DFAS-SSN     (N9)
1 REDEFINE #DFAS-SSN
 2 #DFAS-SSN-A  (A9)
1 #DFAS-IN      (P5)
*
1 #PAYS-SSN     (N9)
1 REDEFINE #PAYS-SSN
 2 #PAYS-SSN-A  (A9)
1 #PAYS-IN      (P5)
*
END-DEFINE
* * * * * * * * * * * * * * * * *
*
FORMAT  LS=133 PS=76
WRITE   TITLE LEFT 'PROGRAM: ' *PROGRAM 5X    /* not now used
          'DFAS Mismatch Exceptions'
                      5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (2) LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X    /* not now used
          'Rpt 3- AAFMAA Allotment Mismatches'
                      5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
MOVE *DATN TO #CURR-YYYYMMDD
MOVE *DATN TO #YYYYMMDD
ADD 1 TO #MM
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
MOVE #YYYYMM TO #NEXT-MONTH-YYYYMM
*
READ ST-V BY SSN
*  IF  (PROCESS-IND = 'S' OR = 'C')            RE1
  IF  (PROCESS-IND = 'C')                   /* RE1
    OR AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)   /* RE1      
    ESCAPE TOP
  END-IF
*
  IF ALOT-AMT NE 0
    FOR #I1 1 TO 9
      IF   (STATUS (#I1) = 'D')
       AND (MODE (#I1) = 'G')
       AND (PAY-STATUS  (#I1) = '20' OR = '22')
*         use below if after m/e and system date is next month
       AND (PAID-TO-DATE-YYYYMM (#I1) NE #NEXT-MONTH-YYYYMM)
       AND (PAID-UP-DATE-YYYYMM (#I1) NE #NEXT-MONTH-YYYYMM)
*         use below if after m/e but system date still last month
*      AND (PAID-TO-DATE-YYYYMM (#I1) NE #CURR-YYYYMM)
*      AND (PAID-UP-DATE-YYYYMM (#I1) NE #CURR-YYYYMM)
        WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'paid-to date not current'
               PAID-TO-DATE (#I1) PAID-UP-DATE (#I1)
      END-IF
    END-FOR
  ELSE
    FOR #I1 1 TO 9
      IF X-ALT-LP-IND (#I1) = '1' OR = '2'
        IF X-ALT-LP-AMT (#I1) NE 0
          WRITE ST-V.ID-NUMBER 'No Alot Amt but has Fixed ALP/AIP'
             X-ALT-LP-AMT (#I1)
        END-IF
      END-IF
*
      IF X-ALT-LP-IND-2 (#I1) = '1' OR = '2'
        IF X-ALT-LP-AMT-2 (#I1) NE 0
          WRITE ST-V.ID-NUMBER 'No Alot Amt but has Variable ALP/AIP'
             X-ALT-LP-AMT (#I1)
        END-IF
      END-IF
*
      IF   (STATUS (#I1) = 'D')
       AND (MODE (#I1) = 'G')
       AND (PAY-STATUS  (#I1) = '20' OR = '22')
        WRITE ST-V.ID-NUMBER 'No Alot Amt but has FPWT/PP mode G'
           PAY-STATUS (#I1) ANNUAL-PREM (#I1)
      END-IF
    END-FOR
*
    ESCAPE TOP
  END-IF
*
  REPEAT UNTIL #DFAS-SSN GE ST-V.SSN
    PERFORM READ-DFAS
*
*   IF   (#DFAS-SSN LT ST-V.SSN)
*    AND (#DFAS-SSN NE 0)
*     WRITE #DFAS-SSN 'DFAS ssn less than ST' ST-V.SSN
*   END-IF
  END-REPEAT
*
  REPEAT UNTIL #PAYS-SSN GE ST-V.SSN
    PERFORM READ-PAYS
*   IF   (#PAYS-SSN LT ST-V.SSN)
*    AND (#PAYS-SSN NE 0)
*     WRITE #PAYS-SSN 'PAYS-ssn less than ST' ST-V.SSN
*   END-IF
  END-REPEAT
*
  IF  (ST-V.SSN = #DFAS-SSN)
   OR (ST-V.SSN = #PAYS-SSN)
*    WRITE ST-V.SSN 'This ST ssn = either' #DFAS-SSN 'or' #PAYS-SSN
    ESCAPE TOP
  END-IF
*
  ADD ALOT-AMT TO #TOT-DFAS-MISMATCH
  ADD 1        TO #NUM-DFAS-MISMATCH
*
  ADD 1 TO #CNT-2
  DISPLAY (2) #CNT-2
   'SSN'         ST-V.SSN
   'CN'          ST-V.ID-NUMBER
   'Alot/Amt'    ALOT-AMT
*
END-READ
*
WRITE 'DFAS in                  =' #DFAS-IN
WRITE 'PAYS in                  =' #PAYS-IN
WRITE 'num-DFAS non-matches     =' #NUM-DFAS-MISMATCH
WRITE 'TOT-DFAS non-matches     =' #TOT-DFAS-MISMATCH
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE READ-DFAS
* * * * * * * * * * * * * *
*
IF #DFAS-SSN = 999999999
  ESCAPE ROUTINE
END-IF
*
READ WORK 2 ONCE RECORD ALOT-REC
  AT END
    MOVE '999999999' TO #DFAS-SSN-A
    ESCAPE ROUTINE
  END-ENDFILE
*
IF AL-SSN-A = #DFAS-SSN-A
  WRITE AL-SSN-A 'Duplicate SSN on DFAS file' AL-AMOUNT
END-IF
*
ADD 1 TO #DFAS-IN
MOVE AL-SSN-A TO #DFAS-SSN-A
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE READ-PAYS
* * * * * * * * * * * * * *
*
IF #PAYS-SSN = 999999999
  ESCAPE ROUTINE
END-IF
*
READ WORK 3 ONCE RECORD PAYS-FILE
  AT END
    MOVE '999999999' TO #PAYS-SSN-A
    ESCAPE ROUTINE
  END-ENDFILE
*
IF PAYS-FILE = #PAYS-SSN-A
  WRITE PAYS-FILE 'Duplicate SSN on PAYS file'
END-IF
*
ADD 1 TO #PAYS-IN
MOVE PAYS-FILE TO #PAYS-SSN-A
*
END-SUBROUTINE
*
END
