* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: D3810PSU
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK.BENEFIT-ANALYSIS-BLOCK
LOCAL USING GONERLXX
LOCAL USING GWAGELXX
LOCAL USING D3810LSU      /* VIEW OF STATUS BEFORE UPDATE
LOCAL
*
1 TR-V VIEW OF A-TRANSACTION-REGISTER
 2 ID-NUMBER             (N6)
 2 PROCESS-IND           (A1)  /* PM - 06/2000 - SPLIT COMPANIES
 2 NAME                  (A25)
 2 DATE-LAST-UPDATE      (N8)
 2 TERMINAL-ID           (A8)
 2 CLERK-ID              (A3)
 2 TRANSACTION-DATN      (P9)
 2 TRANSACTION-TIMN      (P7)
 2 OLD-DATA              (A125/1)
*
1 #SCR-TYPE-LABEL          (A6)  INIT <'CHANGE'>
1 #SCR-TYPE-LABEL-CV       (C)   /* CNTL VAR FOR ABOVE FIELD
1 #SCR-CV                  (C)
1 #SCR-NAME                (A30)
1 #SCR-SSN                 (A11)
1 #SCR-DOB                 (A8)
1 #SCR-PEBD                (A8)
1 #SCR-BASD-LAB            (A6)
1 #SCR-BASD                (A8)
1 #SCR-DOP                 (A8)
1 #SCR-PRV-DOP             (A8)
1 #SCR-SEP-RET-LAB         (A8)
1 #SCR-SEP-RET-DT          (A8)
1 #SCR-AGE-22-YYYY         (N4)
1 #SCR-START-YYYY          (N4)
1 #SCR-AGE-65-YYYY         (N4)
1 #SCR-RET-YR-AMT          (N5)  /* ACT PAY IN RETIRE YEAR
1 #SCR-LST-FM-DM      (A9)
1 #SCR-LST-FM-DC      (A9)
1 #SCR-LST-FM-DD      (A9)
1 #SCR-LST-FM-DP      (A9)
1 #SCR-LST-FM-SU      (A9)
*
1 #SCR-WAGE               (N5/60)
1 REDEFINE #SCR-WAGE
 2 #SCR-WAGE-ROW-1        (N5/60)
1 REDEFINE #SCR-WAGE
 2 #SCR-WAGE-ROW-2        (N5/60)
1 REDEFINE #SCR-WAGE
 2 #SCR-WAGE-ROW-3        (N5/60)
1 REDEFINE #SCR-WAGE
 2 #SCR-WAGE-ROW-4        (N5/60)
1 REDEFINE #SCR-WAGE
 2 #SCR-WAGE-ROW-5        (N5/60)
1 REDEFINE #SCR-WAGE
 2 #SCR-WAGE-ROW-6        (N5/60)
*
1 #SCR-FLAGS-G            (A60)
1 REDEFINE #SCR-FLAGS-G
 2 #SCR-FLAG              (A1/60)
*
1 #WYYYYMMDD
 2 #WYYYY
   3 #WCENT    (N2)
   3 REDEFINE #WCENT
    4 #WCENT-A (A2)
   3 #WYY      (N2)
   3 REDEFINE #WYY
    4 #WYY-A   (A2)
 2 REDEFINE #WYYYY
   3 #WYYYY-N  (N4)
 2 #WMM      (N2)
 2 REDEFINE #WMM
  3 #WMM-A   (A2)
 2 #WDD      (N2)
 2 REDEFINE #WDD
  3 #WDD-A   (A2)
1 REDEFINE #WYYYYMMDD
 2 #WYYYYMMDD-N (N8)
*
1 #WMMDDYY
 2 #WMM      (N2)
 2 #WDD      (N2)
 2 #WCENT    (N2)
 2 #WYY      (N2)
1 REDEFINE #WMMDDYY
 2 #WMMDDYY-A (A8)
*
1 #W-DATE-EDITED (A9)
1 #MONTHS (A36)  INIT
   <'JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'>
1 REDEFINE #MONTHS
 2 #MON       (A3/12)
*
1 #I1           (I2)
1 #I2           (I2)
1 #ISO          (I2)
1 #LOW-YYYY     (N4)
1 #HIGH-YYYY    (N4)
1 #PROCESS-YYYY (P4)
1 #ILO          (I2)
1 #LOWEST-YYYY  (N4)
1 #FIELD-CHANGED         (L)
1 #LAST-YR-WAS-NOT-MAX   (L)
*
1 #MAX-EXCEEDED-MSG-G
 2 #MAX-EX-1      (A32) INIT <'ENTERED WAGE EXCEEDS MAXIMUM OF '>
 2 #MAX-EX-WAGE   (N5)
 2 #MAX-EX-2      (A10) INIT <' FOR YEAR '>
 2 #MAX-EX-YEAR   (N4)
1 REDEFINE #MAX-EXCEEDED-MSG-G
 2 #MAX-EXCEEDED-MSG  (A51)
*
1 #BAD-FLAG-WAGE-MSG-G
 2 #BAD-1      (A5) INIT <'YEAR '>
 2 #BAD-YEAR   (N4)
 2 #BAD-MSG    (A51)
1 REDEFINE #BAD-FLAG-WAGE-MSG-G
 2 #BAD-MESSAGE  (A60)
1 #YN    (A1)
1 #TEXT  (A78)
1 #DO-U-REALLY  (A60)
*
END-DEFINE
* * * * * * * * * *
INCLUDE GONERCXX
* * * * * * * * * *
*
IF #CGA-SCR-SUFFIX = 'CLR'
  MOVE '*' TO #CGA-SCR-COMMAND
  MOVE 'N' TO #YN
  MOVE 'Change to "Y" to clear' TO #TEXT
  COMPRESS 'Do you really wish to "CLEAR" wage info from CN' #CGA-ID
                           INTO #DO-U-REALLY
  INPUT TEXT #TEXT MARK *#YN USING MAP 'D3811MSU'
*
  IF #CGA-SCR-COMMAND NE '*'
    FETCH 'G1000PXX'
  END-IF
*
  RESET #TEXT #CGA-SCR-SUFFIX
  IF #YN = 'Y' OR = 'y'
    GET STATUS-UPDATE-VIEW #CGA-ISN
    MOVE 'SU-WAGE HISTORY CLEAR' TO TR-V.OLD-DATA (1)
    PERFORM WRITE-TR-LOG-REC
*
    RESET LOW-YEAR-IN-TABLE
    MOVE *DATN TO LAST-FM-DATE-WH
    MOVE *DATN TO DTS-DATN
    MOVE TR-V.TRANSACTION-TIMN TO DTS-TIMN
    RESET WHT-YEAR (*)
    RESET WHT-WAGE (*)
    RESET WHT-FLAG (*)
    UPDATE (0148)
    END TRANSACTION
*
    COMPRESS 'Wages cleared from CN' #CGA-ID INTO #TEXT
  ELSE
    COMPRESS 'Wage clear bypassed on CN' #CGA-ID INTO #TEXT
  END-IF
*
  INPUT TEXT #TEXT USING MAP 'G1000MXX'
  FETCH 'G1000PXX'
END-IF
*
FIND (1) ST-V WITH MEMBER-KEY = #CGA-ID-G
END-FIND
*
FIND (1) FR-V WITH MEMBER-KEY = #CGA-ID-G
END-FIND
*
MOVE #CGA-WH-LOW-YEAR TO #SCR-START-YYYY
*
IF #CGA-WAGE-HIST-EXISTED
  MOVE 'CHANGE' TO #SCR-TYPE-LABEL
ELSE
  MOVE 'CREATE' TO #SCR-TYPE-LABEL
  MOVE (AD=I)  TO #SCR-TYPE-LABEL-CV
END-IF
*
IF #CGA-MIL-SERV = 'F'
  MOVE 'TAFMSD' TO #SCR-BASD-LAB
ELSE
  MOVE '  BASD' TO #SCR-BASD-LAB
END-IF
*
IF #CGA-MIL-STAT = 'R'
  COMPRESS #CGA-NAME ', RET' INTO #SCR-NAME LEAVING NO SPACE
ELSE
  MOVE #CGA-NAME TO #SCR-NAME
END-IF
*
MOVE EDITED #CGA-SSN (EM=999-99-9999) TO #SCR-SSN
*
IF #CGA-MIL-STAT = 'C'
  MOVE 'SEP-DATE' TO #SCR-SEP-RET-LAB
ELSE
  MOVE 'RET-DATE' TO #SCR-SEP-RET-LAB
END-IF
*
MOVE #CGA-DOB                 TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYY-A               TO #SCR-DOB
*
MOVE #CGA-BASD                TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYY-A               TO #SCR-BASD
*
MOVE #CGA-PEBD                TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYY-A               TO #SCR-PEBD
*
MOVE #CGA-DT-PROM-TO-CUR-RANK TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYY-A               TO #SCR-DOP
*
MOVE #CGA-SEP-RET-DT          TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYY-A               TO #SCR-SEP-RET-DT
*
MOVE #CGA-WAGE-HIST-LAST-UPDATE TO #WYYYYMMDD-N
PERFORM DATE-REFORMAT
MOVE #W-DATE-EDITED           TO #SCR-LST-FM-SU
*
MOVE ST-V.LAST-FM-DATE TO #WYYYYMMDD-N
PERFORM DATE-REFORMAT
MOVE #W-DATE-EDITED TO #SCR-LST-FM-DM
*
MOVE FR-V.DP-LAST-FM-DATE TO #WYYYYMMDD-N
PERFORM DATE-REFORMAT
MOVE #W-DATE-EDITED TO #SCR-LST-FM-DC
*
MOVE FR-V.DOCU-LAST-FM-DATE TO #WYYYYMMDD-N
PERFORM DATE-REFORMAT
MOVE #W-DATE-EDITED TO #SCR-LST-FM-DD
*
MOVE FR-V.INS-LAST-FM-DATE TO #WYYYYMMDD-N
PERFORM DATE-REFORMAT
MOVE #W-DATE-EDITED TO #SCR-LST-FM-DP
*
COMPUTE #SCR-AGE-22-YYYY = #CGA-DOB-YYYY + 22
COMPUTE #SCR-AGE-65-YYYY = #CGA-DOB-YYYY + 65
MOVE #CGA-WAGE-HIST-RET-AMT TO #SCR-RET-YR-AMT
*
IF #CGA-SCR-ID LT 100
  MOVE (AD=P) TO #SCR-CV
  MOVE
  'USE "SS" OVERRIDE FOR "SU" ASSUMPTIONS ON SAMPLES'
                                           TO #CGA-BA-ERR-MSG
  INPUT TEXT #CGA-BA-ERR-MSG USING MAP 'D3810MSU'
  FETCH 'G1000PXX'
END-IF
*
* * * * * * * * * BUILD BOTTOM PORTION OF SCREEN * * * * * *
*
PERFORM BUILD-WAGES-ONTO-SCREEN
*
MOVE '*'          TO #CGA-SCR-COMMAND
MOVE #CGA-ORIG-ID TO #CGA-SCR-ID
INPUT TEXT #CGA-BA-ERR-MSG USING MAP 'D3810MSU'
*
IF #CGA-SCR-COMMAND = 'RF'
  MOVE 'D3000PBA' TO #CGA-NEXT-PROGRAM
  END TRANSACTION
  ESCAPE ROUTINE
ELSE
  IF #CGA-SCR-COMMAND NE '*'
    END TRANSACTION
    FETCH 'G1000PXX'
  END-IF
END-IF
* * * * * * EDIT WAGES AND FLAGS ENTERED * * * * * * * * * * *
*
MOVE #W-I-NUMBER-OF-YEARS TO #I2     /* SET #I2 TO END OF WAGE INFO TBL
MOVE 1951 TO #PROCESS-YYYY           /* SET TO 1ST YEAR OF SU SCREEN
RESET #LOWEST-YYYY                   /* RESET LOWEST ENTERED YEAR
*
FOR #I1 1 TO 60   /* TOTAL ENTRIES ON SCREEN
*
  IF #I2 = 0
    IF #SCR-WAGE (#I1) NE 0
      REINPUT 'WAGES CANNOT BE ENTERED INTO A FUTURE YEAR'
      MARK *#SCR-WAGE (#I1)
    ELSE
      IF #SCR-FLAG (#I1) NE ' '
        REINPUT 'WAGE FLAGS CANNOT BE ENTERED INTO A FUTURE YEAR'
        MARK *#SCR-FLAGS-G
      ELSE
        ESCAPE TOP
      END-IF
    END-IF
  END-IF
*
  IF   (#LOWEST-YYYY = 0)
   AND (#CGA-DOB-YYYY + 22 LE #PROCESS-YYYY)   /* WE'VE HIT AGE 22
    MOVE #PROCESS-YYYY TO #LOWEST-YYYY
  END-IF
*
  IF (#LOWEST-YYYY = 0)
   AND ((#SCR-WAGE (#I1) NE 0) OR (#SCR-FLAG (#I1) NE ' '))
    MOVE #PROCESS-YYYY TO #LOWEST-YYYY        /* SET NEW LOWEST YEAR
  END-IF
*
  IF  #PROCESS-YYYY = #CGA-SEP-RET-YYYY
    IF #SCR-RET-YR-AMT GT #W-I-MAX-FICA-WAGE (#I2)
     REINPUT 'ACTIVE DUTY WAGES IN RETIRE YEAR EXCEED MAX FOR THAT YEAR'
      MARK *#SCR-RET-YR-AMT
    END-IF
*
    IF (#CGA-SEP-RET-MMDD = 0101) AND (#SCR-RET-YR-AMT NE 0)
     AND (#CGA-MIL-STAT = 'R')
    REINPUT 'ACTIVE DUTY WAGES IN RETIRE YEAR INVALID IF RETIRED JAN 01'
      MARK *#SCR-RET-YR-AMT
    END-IF
*
*   below removed 02/26/2001 as per  BJS
*   IF (#CGA-SEP-RET-MMDD NE 0101) AND (#SCR-RET-YR-AMT = 0)
*    AND (#CGA-MIL-STAT = 'R')
*     REINPUT 'ACTIVE DUTY WAGES IN RETIRE YEAR REQUIRED'
*     MARK *#SCR-RET-YR-AMT
*   END-IF
*
  END-IF
*
  IF #SCR-WAGE (#I1) = 99999                 /* HANDLE MAX REQUEST
    MOVE #W-I-MAX-FICA-WAGE (#I2) TO #SCR-WAGE  (#I1)
  END-IF
*
  IF #SCR-WAGE (#I1) GT #W-I-MAX-FICA-WAGE (#I2)
    MOVE #W-I-MAX-FICA-WAGE (#I2) TO #MAX-EX-WAGE
    MOVE #PROCESS-YYYY       TO #MAX-EX-YEAR
    REINPUT #MAX-EXCEEDED-MSG
    MARK *#SCR-WAGE (#I1)
  END-IF
*
  IF #SCR-FLAG (#I1) = ' ' OR = 'M' OR = 'X' OR = 'E' OR = 'F'
    IGNORE
  ELSE
    MOVE #PROCESS-YYYY TO #BAD-YEAR
    MOVE ' HAS INVALID WAGE FLAG' TO #BAD-MSG
    REINPUT #BAD-MESSAGE
    MARK *#SCR-FLAGS-G
  END-IF
*
*                    ALLOW ZERO WAGES FOR FLAG 'E' AND 'F' AND ' '
  IF (#SCR-WAGE (#I1) = 0) AND (#SCR-FLAG(#I1) = 'M' OR = 'X')
    MOVE #PROCESS-YYYY TO #BAD-YEAR
    MOVE ' HAS WAGE FLAG WITH NO WAGE' TO #BAD-MSG
    REINPUT #BAD-MESSAGE
    MARK *#SCR-WAGE (#I1)
  END-IF
*
  IF (#SCR-WAGE (#I1) = #W-I-MAX-FICA-WAGE (#I2))  /* RESET FLAG
   AND (#SCR-FLAG (#I1) NE 'F')                    /* IF WAGE = MAX
   AND (#SCR-FLAG (#I1) NE 'X')                    /* & NOT F OR X
    IF  #SCR-WAGE (#I1) NE #CGA-WAGE-AMT (#I2)  /* IF MBR-SERV CHANGED
      MOVE 'X' TO #SCR-FLAG (#I1)          /* MAX NEVER CHANGE IT
    ELSE
      MOVE 'M' TO #SCR-FLAG (#I1)
    END-IF
  END-IF
*
  IF (#SCR-WAGE (#I1) LT #W-I-MAX-FICA-WAGE (#I2))  /* RESET FLAG IF
   AND (#SCR-FLAG (#I1) = 'M' OR = 'X')            /* WAGE LESS THAN MAX
    RESET #SCR-FLAG (#I1)
  END-IF
*
  ADD 1 TO #PROCESS-YYYY
  SUBTRACT 1 FROM #I2
*
END-FOR /*(0283)
*
*
* * * * * * * READ STATUS FOR UPDATE AND * * * * * * * * * * *
* * * * * * * INSURE RECORD HASN'T BEEN UPDATED ALREADY * * *
*
GET STATUS-UPDATE-VIEW #CGA-ISN
*
IF  (DTS-DATN NE #CGA-UPDT-DATE)      /* MAKE SURE RECORD HAS'T
 OR (DTS-TIMN NE #CGA-UPDT-TIME)      /* SUBSEQUENTLY BEEN UPDATED
  END TRANSACTION
  MOVE (AD=P) TO #SCR-CV
  MOVE 'RECORD HAS CONCURRENTLY BEEN UPDATED - PRESS ENTER TO RETRY'
                               TO #CGA-BA-ERR-MSG
  MOVE #CGA-ORIG-COMMAND TO #CGA-SCR-COMMAND
  MOVE #CGA-ORIG-ID      TO #CGA-SCR-ID
  INPUT TEXT #CGA-BA-ERR-MSG USING MAP 'G1000MXX'
  FETCH 'G1000PXX'
END-IF
* * * * * * * MOVE UPDATED INFO TO UPDATE VIEW * * * * * * * *
*
IF #LOWEST-YYYY = 1957       /* ALLOW ZERO WAGES FROM 1951 THRU 1956
  MOVE 1951 TO #LOWEST-YYYY
END-IF
*
IF #LOWEST-YYYY = 0
  MOVE 0 TO #I2
ELSE
  COMPUTE #I2 = #CGA-TODAY-YYYY-N - #LOWEST-YYYY + 1 /* LOWEST
END-IF
*
MOVE 1951 TO #PROCESS-YYYY           /* SET TO 1ST YEAR OF SU SCREEN
*
FOR #I1 1 TO 55   /* TOTAL ENTRIES ON SCREEN
*
  IF #I2 = 0            /* WE'VE REACHED THE CURRENT YEAR
    ESCAPE BOTTOM
  END-IF
*
  IF #PROCESS-YYYY LT #LOWEST-YYYY  /* NOT YET TO LOWEST YEAR
    ADD 1 TO #PROCESS-YYYY
    ESCAPE TOP
  END-IF
*
  IF   (#SCR-WAGE  (#I1) NE #CGA-WAGE-AMT (#I2))  /* IF WAGE WAS CHANGED
   AND (#SCR-WAGE  (#I1) LT #CGA-WAGE-MAX (#I2))   /* AND LT MAX
    MOVE ' '              TO #SCR-FLAG (#I1)      /* RESET FLAG TO BLANK
  END-IF
*
  IF   (#SCR-WAGE  (#I1) = #CGA-WAGE-AMT (#I2))  /* IF WAGE NOT CHANGED
   AND (#SCR-WAGE  (#I1) LT #CGA-WAGE-MAX (#I2)) /* AND LT MAX
   AND (#CGA-WAGE-FLAG (#I2) = ' ')              /* AND FLAG WAS ' '
   AND (#SCR-FLAG (#I1) = 'E')                   /* NEW FLAG = E
    MOVE ' '              TO #SCR-FLAG (#I1)      /* RESET FLAG TO BLANK
  END-IF
*
  IF   (#PROCESS-YYYY = #CGA-SEP-RET-YYYY)       /* RETIRE YEAR
   AND (RETIREMENT-AMNT = 0)                     /* RET AMT NOT PRESENT
   AND (#SCR-RET-YR-AMT NE 0)                    /* NEW RET YR AMT > 0
   AND (#SCR-WAGE (#I1) = #CGA-WAGE-AMT (#I2))   /* WAGES NOT CHANGED
   AND (WHT-WAGE (#I2) = 0) /* not already entered added 3/99 bjs
    MOVE TRUE TO #FIELD-CHANGED
    MOVE #PROCESS-YYYY    TO WHT-YEAR (#I2)
    MOVE 'E'              TO WHT-FLAG (#I2)      /* INDICATE ESTIMATE
    MOVE #SCR-RET-YR-AMT  TO WHT-WAGE (#I2)      /* ENTER ACT DUTY WAGES
  ELSE
*
    IF  (#SCR-FLAG  (#I1) NE WHT-FLAG (#I2))
     OR (#SCR-WAGE  (#I1) NE WHT-WAGE (#I2))
     OR (#PROCESS-YYYY    NE WHT-YEAR (#I2))
     OR (NOT #CGA-WAGE-HIST-EXISTED)
      MOVE TRUE TO #FIELD-CHANGED
      MOVE #PROCESS-YYYY    TO WHT-YEAR (#I2)
      MOVE #SCR-FLAG  (#I1) TO WHT-FLAG (#I2)
      MOVE #SCR-WAGE  (#I1) TO WHT-WAGE (#I2)
    END-IF
  END-IF
*
  ADD 1 TO #PROCESS-YYYY
  SUBTRACT 1 FROM #I2
END-FOR /*(0409)
*
IF  (#SCR-RET-YR-AMT NE #CGA-WAGE-HIST-RET-AMT)
 OR (NOT #CGA-WAGE-HIST-EXISTED)
  MOVE TRUE TO #FIELD-CHANGED
  MOVE #SCR-RET-YR-AMT TO RETIREMENT-AMNT
END-IF
*
IF #LOWEST-YYYY = 0
  RESET RETIREMENT-AMNT WHT-YEAR (*) WHT-WAGE (*) WHT-FLAG (*)
END-IF
*
FOR #I1 1 TO #CGA-NUM-WAGE-HIST-YRS  /* RESET DROPPED YEARS
  IF WHT-YEAR (#I1) LT #LOWEST-YYYY
    RESET WHT-YEAR (#I1) WHT-FLAG (#I1) WHT-WAGE (#I1)
  END-IF
END-FOR
*
* * * * * * * * REMOVE MAXED WAGES FROM TABLE TO SAVE SPACE * * * * * *
*
RESET #I2       /* NEW INDEX FOR WAGE HISTORY
FOR #I1 1 TO 60
  IF WHT-YEAR (#I1) = 0    /* END OF WAGES ENTERED
    ESCAPE BOTTOM
  END-IF
*
  IF WHT-FLAG (#I1) = 'M'
    MOVE TRUE TO #FIELD-CHANGED
    ESCAPE TOP
  END-IF
*
  ADD 1 TO #I2
  IF #I1 NE #I2
    MOVE WHT-YEAR (#I1) TO WHT-YEAR (#I2)
    MOVE WHT-WAGE (#I1) TO WHT-WAGE (#I2)
    MOVE WHT-FLAG (#I1) TO WHT-FLAG (#I2)
  END-IF
END-FOR
*
IF #I2 GT 0
  MOVE WHT-YEAR (#I2) TO #LOWEST-YYYY
ELSE
  RESET #LOWEST-YYYY
END-IF
*
ADD 1 TO #I2        /* RESET ALL WAGES AFTER LAST NON MAX WAGE
FOR #I1 #I2 TO 60
  RESET WHT-YEAR (#I1)
  RESET WHT-WAGE (#I1)
  RESET WHT-FLAG (#I1)
END-FOR
*
IF (#FIELD-CHANGED) OR (#LOWEST-YYYY = 0)
 OR (#LOWEST-YYYY NE LOW-YEAR-IN-TABLE)
*
  MOVE 'SU-WAGE HISTORY UPDATE' TO TR-V.OLD-DATA (1)
  PERFORM WRITE-TR-LOG-REC
*
  MOVE #LOWEST-YYYY TO LOW-YEAR-IN-TABLE
  MOVE *DATN TO LAST-FM-DATE-WH
  MOVE *DATN TO DTS-DATN
  MOVE TR-V.TRANSACTION-TIMN TO DTS-TIMN
  UPDATE RECORD (0382)       /* UPDATE THE STATUS FILE
ELSE
  REINPUT 'NO UPDATES REQUESTED'
END-IF
*
END TRANSACTION
*
MOVE (AD=P) TO #SCR-CV
MOVE 'SI'         TO #CGA-SCR-COMMAND
MOVE #CGA-ORIG-ID TO #CGA-SCR-ID
INPUT TEXT 'TRANSACTION COMPLETED - PRESS ENTER TO DISPLAY ''SI'''
  USING MAP 'D3810MSU'
*
IF #CGA-SCR-COMMAND = 'SI'
  MOVE 'SI' TO #CGA-ORIG-COMMAND
  MOVE 'D3000PBA' TO #CGA-NEXT-PROGRAM
  ESCAPE ROUTINE
ELSE
  FETCH 'G1000PXX'
END-IF
*
* * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-WAGES-ONTO-SCREEN
*
MOVE #CGA-NUM-WAGE-HIST-YRS TO #I2   /* SET #I2 TO END OF WAGE HISTORY
MOVE 1951 TO #PROCESS-YYYY           /* SET TO 1ST YEAR OF SU SCREEN
*
FOR #I1 1 TO 55
*
IF #I2 = 0
  ESCAPE BOTTOM
END-IF
*
IF #PROCESS-YYYY LT #CGA-WAGE-YR (#I2)
  ADD 1 TO #PROCESS-YYYY
  ESCAPE TOP
END-IF
*
MOVE #CGA-WAGE-FLAG (#I2) TO #SCR-FLAG (#I1)
MOVE #CGA-WAGE-AMT  (#I2) TO #SCR-WAGE (#I1)
ADD 1 TO #PROCESS-YYYY
SUBTRACT 1 FROM #I2
*
END-FOR /*(0545)
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FLIP-DATE
MOVE BY NAME #WYYYYMMDD TO #WMMDDYY
IF #WMMDDYY-A = '000000'
  MOVE ' ' TO #WMMDDYY-A
END-IF
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE DATE-REFORMAT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
IF (#WYYYYMMDD.#WMM GT 00) AND (#WYYYYMMDD.#WMM LT 13)
  MOVE #WYYYYMMDD.#WMM TO #I1
  MOVE EDITED #WYYYYMMDD.#WDD (EM=99) TO #WYYYYMMDD.#WDD-A
  COMPRESS #WYYYYMMDD.#WDD-A #MON (#I1) #WYYYYMMDD.#WCENT-A
           #WYYYYMMDD.#WYY-A INTO #W-DATE-EDITED LEAVING NO
ELSE
  MOVE '    ?    ' TO #W-DATE-EDITED
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE WRITE-TR-LOG-REC
* * * * * * * * * * * * * * * * * * * *
*
MOVE #CGA-ID     TO TR-V.ID-NUMBER
MOVE #CGA-NAME   TO TR-V.NAME
MOVE LAST-FM-DATE-WH TO TR-V.DATE-LAST-UPDATE
MOVE STATUS-UPDATE-VIEW.PROCESS-IND TO TR-V.PROCESS-IND /* PM - 06/2000
MOVE *INIT-ID           TO TR-V.TERMINAL-ID
MOVE #CGA-CLERK         TO TR-V.CLERK-ID
MOVE *DATN              TO TR-V.TRANSACTION-DATN
MOVE *TIMN              TO TR-V.TRANSACTION-TIMN
*
STORE TR-V
*
END-SUBROUTINE
*
END
