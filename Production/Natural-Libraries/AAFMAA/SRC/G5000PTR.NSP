* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 2
* <Natural Source Header
* --------------------------------------------------------------
* PROGRAM-ID: G5000PTR
*  THIS PROGRAM DISPLAYS THE TRANS-REGISTER FILE FOR COMMAND TR
* ---------------------------------------------------------------
*
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE      TAG     REASON                                      *
*                                                                      *
* PAM    06082004  PM1     Made change to allow 200 total entries.     *
* PAM    11192004  PM2     Added CEB and PAM to see coomand counts by  *
*                          user.                                       *
* TDM    12072004  TM1     ADDED COUNTS LOGIC                          *
* TDM    12072004  TM2     ADDED MSD LOGIC                             *
*                                                                      *
* PAM    01052005  PM3     Adjusted security - allow AAFMAA to see 'C' *
*                          types - disallow AFSC to see 'D' and 'O'.   *
* PAM    05032005  PM4     Use first 9 digits of NAME field as SSN     *
*                          for APFP/APFR transactions - compare to ID. *
* DRW    05122005  DW5     Show CASH-CODE (C) on screen as CCRD        *
*                          also show cash-codes's $ & 'A'              *
* DRW    06282005  DW6 Add ID-NUMBER Descriptor processing             *
* PAM    07062005  PM7 Loop through 999999 (APFR/APFP) to check SSN's  *
* DRW    07112005  DW8 PRE-READ TRANS IF CN OR 999999 IS ENTERED & SORT*
* TDM    07122005  TM3 ADDED SECURITY LOGIC FOR AFSC                   *
* TDM    07182005  TM4 CHG AUTH FROM SKM TO SLB                        *
* PAM    07192005  PM5 Remove PM4 / PM7 SSN logic for APFP/APFR        *
* DRW    09262005  DW9 show new limits of TR Storage                   *
* SAG    11252005  RH1 SS - Replaced call to assembler program WAASSRT1*
*                      with Natural subprogram SAGSRT12.               *
* TDM    12152005  TM5 UPDATED CLERK IDS FOR AFSC                      *
* PAM    02032006  PM10 Changed deafults for Kathie Ballard            *
* TDM    04182006  TM6 UPDATED CLERK IDS FOR AFSC - ADDED DSW          *
* DRW    04182006  DW11 Compress NEW and Prior Info on TR T Layout     *
* DRW    04182006  DW12 Add SYNCED-FIELDS to TR File                   *
* DRW    05102006  DW13 Use both OLD & NEW to determine Command        *
* PAM    20070329  PM14 Stop deleting transactions - freeze start date *
* DRW    06122007  DW15 Remove AFSC Security Check from Command Count  *
*                       chk (Not Inplemented yet)                      *
* PAM    01072008  PM16 Adjusted display for month-end transactions    *
* PAM    01082008  PM17 Increased ISN from 6 bytes to 8 bytes          *
* DRW  03/21/2008  DW18 New TR A Screen layout                         *
* DRW  03/27/2008  DW19 Modify G/L # or TRAN-code on selected cases    *
* DRW  04/03/2008  DW20 Add '*' on TA if Out of Balance & suffix OOB to*
*                       see only them                                  *
* DRW  04/10/2008  DW21 Add Batch TA to create an extract file         *
* DRW  04/14/2008  DW22 Add TA Peachtree Extract File                  *
* DRW  04/15/2008  DW34 Add Cash-code NSF (N)                          *
* DRW  04/25/2008  DW35 Add TA BAT Processing (Process by AM batches)  *
* DRW  04/28/2008  DW36 Add CASH-CODE XFR & PAY (X/P)                  *
* DRW  05/01/2008  DW37 Do not display STOP/START trans on TA          *
* DRW  05/05/2008  DW38 Streamline Sort Linkage SAGSRT13-add db/cr sort*
* DRW  05/08/2008  DW39 Setup TA BAT Linkake from C2500PAM             *
* DRW  05/13/2008  DW40 Back out PM10 - Make KHB like all else         *
* PAM  05/23/2008  PM23 Include Policy # in BADJ net-out logic         *
* DRW  06/11/2008  DW41 Add Sundard OOB processing for TA              *
* DRW  06/13/2008  DW42 After the TA following an AM go to a GM screen *
* DRW 07/23/2008   DW43 Only Show Syncronization Info if Suffix is     *
*                       'SYN'                                          *
* DRW 12/26/2008   DW44 Add Suf SL1 & SL2 used in ATHPAUDS to extract  *
*                       sel CN's                                       *
* PAM 03/20/2009   PM45 Changed Batch ID to include seconds            *
* PAM 03/23/2009   PM46 Removed '999999' limitation on batch id's      *
* PAM 04/01/2009   PM47 Increase batch number of transactions          *
* YAK 04/02/2009   YAK  Read ACCT-REG by CLERK-DATE instead of DATE    *
*                       when coming from AM                            *
* DRW 04/12/2009 DW48 Add USER-OOMPANY and Month-END display to TR scr *
* DRW 04/27/2009 DW49 Fix G/L Acct # when a PREP follows a BADJ on TA  *
* PAM 06/18/2009 PM50 Added ACH return screen                          *
* PAM 06/29/2009 PM51 Add Credit Card Comamnd type                     *
* DRW 09/04/2009 DW52 AFFL Unification                                 *
* RSE 11/01/2009 RE1    Add 'SV', 'ALB', and 'LR' to valid ID's        *
* PAM 02/09/2010 PM53 Increased table from 30 to 50 entries            *
* PAM 06/03/2010 PM54 Fixed PRE-READ error with commands               *
* PAM 12/10/2010 PM55 Added new cash code for invoices                 *
* vxt 02/06/2012 vt1  Added T cash code for Collection CAP loans       *
* vxt 02/22/2012 vt2  Change the cash code (from $ to L and M(for CAP loans) *
* vxt 04/12/2012 vt3  Add cash-codes for CSV(B) and Death benefits (D) *
* VXT 08/23/2012 vt4  Replaced PAM with VXT                            *
* YAK 10/16/2012 YK1 Use function to identify Level Term II plans      *
* YAK 10/16/2012 YK2 Add cash code for Accelerated Death Benefit       *
* vxt 12/13/2013 vt5 Add the new GL account numbers                    *
* vxt 03/17/2014 vt6 /Ticket 2664/                                     *
* YAK 04/07/2014 YK3 Add cash code for electronic checks               *
* bz  7/29/2014      OI-2916 (Add suffix sha to show shared addresses
* bz  10/9/2014      OI-3078 (Change for cash code assigment)
* vxt 03/02/2016 vt7 Ticket 4252 - New GL code for SAS service         *
************************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX
LOCAL
1 #SEL-PROCESS   (L)   /* DW44
1 #SHOW-SYNC     (L)    /* DW43
1 #FND-SYNC     (L) /* DW12
1 #TR-SORT-TBL       (800)   /* DW8
  2 #TR-DATN (N8)
  2 #TR-TIMN (N7)
  2 #ISN     (N8)
*
1 #SRT-PARM          /* DW8
  2 #SRT-NUM-ENTRIES  (I2)
  2 #SRT-ENTRY-LENGTH (I2) INIT <23>
  2 #SRT-KEY-LENGTH   (I2) INIT <15>
  2 #SRT-KEY-POSITION (I2) INIT <0>  /* DATN/TIMN
  2 #SRT-SORT-TYPE    (A1) INIT <'A'>
1 #MAX-ENTRIES   (P5) INIT <800>
*
1 #SCR-CMND     (A8/21)
1 #SCR-CMND-CNT (P5/21)
1 #SCR-TOT-CMNDS (P5)
1 #CMND         (A2)
1 #PROCESS-TYPE (A1)
1 #SHOW-SUNGARD (A1) INIT <'N'>
1 #AMT-12       (A12)
1 #AMT-11       (A11)
1 #TOT-SG     (P9.2)
1 #SCR-AFSC-CNTS (P5)
1 #SCR-AAFM-CNTS (P5)
1 #SCR-TEXT1     (A24)
1 #SCR-TEXT2     (A24)
*
1 TRLOG VIEW OF A-TRANSACTION-REGISTER
  2 ID-NUMBER        (N6)
  2 PROCESS-IND      (A1) /* PM - 06/2000 - SPLIT COMPANIES
  2 USER-COMPANY     (A1)                                           /* DW18
  2 NAME             (A25)
  2 REDEFINE NAME
    3 NAME20 (A20)
  2 DATE-LAST-UPDATE (N8)
  2 TERMINAL-ID      (A8)
  2 REDEFINE TERMINAL-ID
    3 TERM4 (A4)
  2 CLERK-ID         (A3)
  2 TRANSACTION-DATN (P9)
  2 TRANSACTION-TIMN (P7)
*
  2 C*CHANGED-DATA-TABLE
  2 OLD-DATA         (A125/32)
  2 REDEFINE OLD-DATA
    3 OLD-DATA-G        (32)
      4 OLD-DATA-1-65   (A65)
      4 OLD-DATA-66-125 (A60)
  2 NEW-DATA         (A125/32)
  2 REDEFINE NEW-DATA
    3 NEW-DATA-G        (32)
      4 NEW-DATA-1-65   (A65)
      4 NEW-DATA-66-125 (A60)
  2 SYNC-FLD-NUM      (60)    /* DW12
  2 SYNC-FLD-OLD-DATA (60)
  2 SYNC-FLD-NEW-DATA (60)
*
1 TR-V VIEW OF A-TRANSACTION-REGISTER
  2 ID-NUMBER        (N6)
  2 PROCESS-IND      (A1) /* PM - 06/2000 - SPLIT COMPANIES
  2 CLERK-ID         (A3)
  2 TRANSACTION-DATN (P9)
  2 TRANSACTION-TIMN (P7)
*
  2 OLD-DATA         (A125/1)
  2 REDEFINE OLD-DATA
    3 OLD-DATA-G        (1)
      4 OLD-DATA-3      (A3)
      4 OLD-DATA-122    (A122)
  2 NEW-DATA         (A125/1)
  2 REDEFINE NEW-DATA
    3 NEW-DATA-G        (1)
      4 NEW-DATA-3      (A3)
      4 NEW-DATA-122    (A122)
*
1 ACCT-REG VIEW OF A-ACCOUNTING-REGISTER
  2 ID-NUMBER        (N6)
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A     (A6)
  2 PROCESS-IND      (A1) /* PM - 06/2000 - SPLIT COMPANIES
  2 USER-COMPANY     (A1)                                        /* DW48
  2 NAME             (A25)
  2 REDEFINE NAME                                                 /* PM4
    3 NAME-SSN        (A9)                                         /* PM4
    3 REDEFINE NAME-SSN                                            /* PM4
      4 NAME-SSN-N     (N9)                                         /* PM4
    3 NAME-REST       (A16)                                        /* PM4
  2 TERMINAL-ID      (A8)
  2 DATE-LAST-ACCT-UPDATE (N8)
  2 CLERK-ID         (A3)
  2 TRANSACTION-DATN (P9)
  2 TRANSACTION-TIMN (P7)
  2 TXN-CODE         (A4)
  2 SEQUENCE-NUM     (N1)
  2 TXN-ACCT-NUMBER  (N3)
  2 ACCT-DATE        (N8)
  2 DEBIT-AMOUNT     (P7.2)
  2 CREDIT-AMOUNT    (P7.2)
  2 DESCRIPTION      (A20)
  2 REDEFINE DESCRIPTION
    3 DESC-YYYY            (A4)
    3 DESC-1               (A1)
    3 DESC-MM              (A2)
    3 DESC-2               (A1)
    3 DESC-DD              (A2)
  2 REDEFINE DESCRIPTION
    3 DESC-MM-X            (A2)
    3 DESC-DD-X            (A2)
    3 DESC-YYYY-X          (A4)
  2 REDEFINE DESCRIPTION
    3 DESC-YYYY-Y          (A4)
    3 DESC-MM-Y            (A2)
    3 DESC-DD-Y            (A2)
  2 REDEFINE DESCRIPTION
    3 DESC-CAP             (A8)
    3 DESC-MM-CAP          (A2)
    3 DESC-DD-CAP          (A2)
    3 DESC-YYYY-CAP        (A4)
  2 REDEFINE DESCRIPTION
    3 DESC-IRT             (A10)
    3 DESC-MM-IRT          (A2)
    3 DESC-DD-IRT          (A2)
    3 DESC-YYYY-IRT        (A4)
  2 MONTH-END             (A1)     /* DW48
  2 MESSAGE-CODE     (A1)
  2 AALP-FLAG        (A1)
  2 CASH-CODE        (A1)
  2 POLICY-NUMBER    (A16)                                        /* PM16
  2 SG-CATEGORY-1    (A2/15)
  2 SG-CATEGORY-2    (A2/15)
  2 SG-AMOUNT        (N6.2/15)
*
1 ST-V VIEW OF A-STATUS                                           /* PM4
  2 ID-NUMBER         (N6)
  2 SSN               (N9)
  2 PROCESS-IND       (A1)
  2 INTRO-FLAG        (A1)
  2 STATUS          (9)
  2 PLAN            (9)
  2 REDEFINE PLAN
    3 PLAN-OCC       (9)
      4 PLAN-A1         (A1)
      4 PLAN-A2         (A2)
  2 ISSUE-DATE      (9)
*
1 #DATE-YYYYMMDD     (N9)
1 REDEFINE #DATE-YYYYMMDD
  2 #DATE-FILL        (A1)
  2 #DATE-YYYY        (A4)
  2 #DATE-MM          (A2)
  2 #DATE-DD          (A2)
  2 REDEFINE #DATE-DD
    3 #DATE-DD-N       (N2)
*
1 #TIME-HHMMSSX      (N7)
1 REDEFINE #TIME-HHMMSSX
  2 #TIME-HH          (A2)
  2 REDEFINE #TIME-HH
    3 #TIME-HH-N       (N2)
  2 #TIME-MM          (A2)
  2 #TIME-SS          (A2)
  2 #TIME-X           (A1)
*
1 #W-CLERK-DATE-KEY   (A8)
1 REDEFINE #W-CLERK-DATE-KEY
  2 #LIST-CLERK       (A3)
  2 #W-DATE           (P9)
*
1 #TITLE-LINE-R
  2 #TL-NAM       (A20)
  2 #TL-3         (A2) INIT <' #'>
  2 #TL-CHANGE    (N2)
  2 #TL-4         (A1)
  2 #TL-CLERK     (A3)
  2 #TL-5         (A1)
  2 #TL-DATE      (A10)
  2 #TL-6         (A1)
  2 #TL-TIME      (A5)
  2 #TL-7         (A1)
  2 #TL-AM-PM     (A2)
  2 #TL-8         (A7) INIT <' L-UPD '>
  2 #TL-LST-UPD-DATE (A10)
1 REDEFINE #TITLE-LINE-R
  2 #TITLE-LINE   (A65)
*
1 #TITLE-LINE-A-1
  2 #TL1-1A       (A3) INIT <'ID '>
  2 #TL1-ID-NO    (A6)
  2 #FIL-1A1          (A1)     /*   WAS   A2     /* DW48
  2 #TL1-USER-COMPANY (A1)                       /* DW48
  2 #FIL-1A2          (A1)                       /* DW48
  2 #TL1-1        (A4) INIT <'CLK '>
  2 #TL-CLRK-ID   (A3)
  2 #FIL-1B       (A1)
  2 #TL2-1        (A9) INIT <'DTE-UPDT '>
  2 #TL-UPDT      (A10)
  2 #FIL-1C       (A1)
  2 #TL2A-1       (A8) INIT <'TIM-UPD '>   /* WAS A8 TIM-UPDT     DW18
  2 #TL-TIM-UPDT  (A5)
  2 #FIL-1D       (A1)
  2 #TL-TIM-AM-PM (A2)
  2 #FIL-1E       (A1)
  2 #TL-3-1       (A7) INIT <'TXN-CD '>
  2 #TL-TXN-CODE  (A4)
  2 #FIL-1F       (A2)
  2 #TL-4-1       (A7) INIT <'SEQ-NM '>
  2 #TL-SEQ-NUM   (A1)
1 REDEFINE #TITLE-LINE-A-1
  2 #TITLE-LINE-1 (A78)
*
1 #TITLE-LINE-A-2
  2 #TL1-2        (A5) INIT <'NAME '>
  2 #TL-NAME      (A25)
  2 #FIL-2A       (A2)
  2 #TL2-2        (A9) INIT <'ACCT-NO  '>
  2 #TL-ACCT-NO   (A3)
  2 #FIL-2B       (A9)
  2 #TL-CASH      (A4)
  2 #FIL-2C       (A3)
  2 #TL-3-2       (A10) INIT <'ACCT-DATE '>
  2 #TL-ACCT-DATE (A8)
1 REDEFINE #TITLE-LINE-A-2
  2 #TITLE-LINE-2 (A78)
*
1 #TITLE-LINE-A-3
  2 #TL1-3        (A13) INIT <'DT-LAST-UPDT '>
  2 #TL-LST-UPDT  (A8)
  2 #FIL-3A       (A10)
  2 #TL2-3        (A6) INIT <'DB AMT'>
  2 #TL-DB-AMT    (A11)
  2 #FIL-3B       (A13)
  2 #TL-3-3       (A6) INIT <'CR AMT'>
  2 #TL-CR-AMT    (A11)
1 REDEFINE #TITLE-LINE-A-3
  2 #TITLE-LINE-3 (A78)
*
1 #TITLE-LINE-A-4                                     /* PM16
  2 #TL1-4        (A5) INIT <'DESC '>                  /* PM16
  2 #TL-DESC      (A20)                                /* PM16
  2 #FIL-4A       (A2)                                 /* PM16
  2 #TL2-4        (A7) INIT <'POL-NO '>                /* PM16
  2 #TL-POL-NUM   (A16)                                /* PM16
  2 #FIL-4B       (A3)                                 /* PM16
  2 #TL3-4        (A10) INIT <'MESS-CODE '>            /* PM16
  2 #TL-MESS-CODE (A1)                                 /* PM16
  2 #FIL-4C       (A3)                                 /* PM16
  2 #TL4-4        (A10) INIT <'AALP-FLAG '>            /* PM16
  2 #TL-AALP-FLAG (A1)                                 /* PM16
*
1 REDEFINE #TITLE-LINE-A-4
  2 #TITLE-LINE-4 (A78)
*
1 #GENERAL-LINE      (A78)
1 REDEFINE #GENERAL-LINE                             /* DW18
  2 #GL-CN                   (N6)
  2 #GL-FIL-1                (A1)
  2 #GL-NAME                 (A25)
  2 #GL-FIL-3                (A1)
  2 #GL-EFF-DATE             (A10)
  2 #GL-FIL-4                (A1)
  2 #GL-TRN-DATE             (A10)
  2 #GL-FIL-5                (A1)
  2 #GL-TRN-TIME             (A5)
  2 #GL-FIL-6                (A1)
  2 #GL-TRN-TIME-AM-PM       (A2)
  2 #GL-FIL-7                (A1)
  2 #GL-USER-COMPANY         (A1)                /* DW48
  2 #GL-FIL-7A               (A1)                /* DW48
  2 #GL-CLERK                (A3)
  2 #GL-FIL-8                (A1)
  2 #GL-PAY-CODE             (A4)
  2 #GL-FIL-9                (A1)
  2 #GL-AST                  (A1)
  2 #GL-FIL-10               (A1)   /* USED to show MONTH-END from file  /* DW48
*
1 #DETAIL-LINE      (A78)
1 REDEFINE #DETAIL-LINE                             /* DW18
  2 #DL-FIL-1                (A2)
  2 #DL-POL-NUM              (A16)
  2 #DL-FIL-2                (A1)
  2 #DL-ACCT-NUM             (A4)
  2 #DL-FIL-4                (A1)
  2 #DL-TRAN-CODE            (A4)
  2 #DL-FIL-5                (A1)
  2 #DL-DEBIT-AMT            (A12)
  2 #DL-FIL-6                (A1)
  2 #DL-CREDIT-AMT           (A12)
  2 #DL-FIL-7                (A1)
  2 #DL-DESC                 (A20)
  2 #DL-FIL-8                (A3)
*
1 #DETAIL-LINE-STORE-AREA (A101/50)  /* 30 Max trans per Entry      /* DW18 PM53
1 REDEFINE #DETAIL-LINE-STORE-AREA
  2 #DETAIL-LINE-STORE-OCC      (50)                                 /* PM53
    3 #DLS-DB-CR-SORT       (A1)  /* For Sorting 1 = Debit 2 = Credit /* DW38
    3 #DLS-ACCT-NUM-SORT    (A4)  /* For sorting  (G/L Acct Number)
    3 #DETAIL-LINE-STORE    (A78)
    3 REDEFINE #DETAIL-LINE-STORE
      4 #DLS-FIL-1                (A2)
      4 #DLS-POL-NUM              (A16)
      4 #DLS-FIL-2                (A1)
      4 #DLS-ACCT-NUM             (A4)
      4 #DLS-FIL-4                (A1)
      4 #DLS-TRAN-CODE            (A4)
      4 #DLS-FIL-5                (A1)
      4 #DLS-DEBIT-AMT            (A12)
      4 #DLS-FIL-6                (A1)
      4 #DLS-CREDIT-AMT           (A12)
      4 #DLS-FIL-7                (A1)
      4 #DLS-DESC                 (A20)
      4 #DLS-FIL-8                (A3)
    3 #DLS-CREDIT      (N7.2)
    3 #DLS-DEBIT       (N7.2)
*
1 #DLS-TOT-CREDIT    (N7.2)
1 #DLS-TOT-DEBIT     (N7.2)
*
1 #SCN-REGISTER-TYPE   (A1)
1 #SCN-LINE     (A65/1:22)
1 #SCN-LINE2    (A78/1:22)
1 #SCN-LINE-A   (C/1:22)
1 #SCN-LINE-HDR (A11/1:22)
1 #TRX               (I2)
1 #LINES-NEEDED      (P3)
1 #LINES-REMAINING   (P3)
1 #SCN-ROW           (I2)
1 #SCN-ID            (N6)
1 REDEFINE #SCN-ID                                                /* PM4
  2 #SCN-ID-A         (A6)                                         /* PM4
1 #SCN-COMMAND       (A2)
1 #NUM-FOUND         (P9)                              /* vt was P6 01/15/2013
*
* 1 #1ST-ISN-TBL       (N6/90)                                    /* PM1
1 #1ST-ISN-TBL       (N8/200)                                     /* PM1 PM17
1 #HOLD-ISN          (N8)                                         /* PM17
1 #CURR-ISN          (N8)                                         /* PM17
1 #IPG               (I2)
1 #I1                (I2)
1 #I2                (I2)
1 #I3                (I2)
1 #I4                (I2)
1 #I5                (I2)
1 #I6                (I2)
1 #I7                (I2)
*
1 #START-DT          (N8)
1 REDEFINE #START-DT
  2 #START-DT-A        (A8)
1 REDEFINE #START-DT
  2 #SD-MM      (A2)
  2 #SD-DD      (A2)
  2 #SD-YYYY    (A4)
*
1 #END-DT          (N8)
1 REDEFINE #END-DT
  2 #END-DT-A        (A8)
1 REDEFINE #END-DT
  2 #ED-MM      (A2)
  2 #ED-DD      (A2)
  2 #ED-YYYY    (A4)
*
1 #1ST-DT          (N8)
1 REDEFINE #1ST-DT
  2 #1ST-DT-A        (A8)
1 REDEFINE #1ST-DT
  2 #1D-MM      (N2)
  2 #1D-DD      (N2)
  2 #1D-YYYY    (N4)
*
1 #AM-START-TIME   (N7)          /* DW39
1 REDEFINE #AM-START-TIME
  2 #AM-START-TIME-HH    (N2)
  2 #AM-START-TIME-MM    (N2)
  2 #AM-START-TIME-SECS  (N3)
*
1 #FROZEN-START-DATE (N8)  INIT <03012006>                       /* PM14
1 #CLERK-ID          (A3)
1 #START-TIME-HR  (N2)
1 REDEFINE #START-TIME-HR
  2 #START-TIME-HR-A (A2)
1 #START-TIME-MIN  (N2)
1 REDEFINE #START-TIME-MIN
  2 #START-TIME-MIN-A (A2)
*
1 #END-TIME-HR    (N2)
1 REDEFINE #END-TIME-HR
  2 #END-TIME-HR-A (A2)
*
1 #END-TIME-MIN   (N2)
1 REDEFINE #END-TIME-MIN
  2 #END-TIME-MIN-A (A2)
*
1 #TRLOG-START-DT    (N8)
1 REDEFINE #TRLOG-START-DT
  2 #TRLOG-START-DT-A   (A8)
*
1 #TRLOG-END-DT      (N8)
1 REDEFINE #TRLOG-END-DT
  2 #TRLOG-END-DT-A    (A8)
*
1 #TRLOG-START-TIME  (N7)
1 REDEFINE #TRLOG-START-TIME
  2 #TRLOG-START-TIME-A (A7)
1 #TRLOG-END-TIME  (N7)
1 REDEFINE #TRLOG-END-TIME
  2 #TRLOG-END-TIME-A (A7)
*
1 #ID-NUMBER         (N6)                                         /* TM1
1 #AFSC-CNTS         (P5)                                         /* TM1
1 #AAFM-CNTS         (P5)                                         /* TM1
1 #DELETE-CNT        (P7)
1 #REC-READ-CNT      (P7)
1 #HOLD-TODAY-DATE   (N8)
1 REDEFINE #HOLD-TODAY-DATE
  2 #HTD-YYYY          (A4)
  2 #HTD-MM            (A2)
  2 #HTD-DD            (A2)
1 #PROCESS-IND        (A1)                                        /* PM3
1 #TRANS-COMPANY-ID   (A1)                                        /* PM3
*
1 #LINE-COUNT        (P7)
1 #PAGESIZE          (P7)
1 #LAST-RECORD       (L)
*
1 #CNT-CB       (P5)
1 #CNT-BD       (P5)
1 #CNT-FM       (P5)
1 #CNT-DM       (P5)
1 #CNT-CG       (P5)
1 #CNT-NM       (P5)
1 #CNT-AI       (P5)
1 #CNT-DD       (P5)
1 #CNT-DA       (P5)
1 #CNT-DC       (P5)
1 #CNT-DP       (P5)
1 #CNT-CI       (P5)
1 #CNT-CA       (P5)
1 #CNT-DS       (P5)
1 #CNT-VA       (P5)
1 #CNT-AM       (P5)
1 #CNT-DN       (P5)
1 #CNT-DF       (P5)
1 #CNT-SU       (P5)
1 #CNT-UP       (P5)
1 #CNT-ELSE     (P5)
*
1 #CNT-BY-DAY  (P5/31)
1 #TOT-CNT-BY-DAY  (P5)
1 #CNT-MSD-BY-DAY  (P5/31)                                        /* TM2
1 #TOT-MSD-CNT-BY-DAY (P5)                                        /* TM2
*
1 #NEW-LAYOUT       (L)          /* DW18
1 #ONLY-OOB         (L)
1 #DB-CR            (A2)
1 #TERM             (L)
1 #P7-2             (P7.2)
1 #LAST-GL-CN       (N6)
1 #LAST-GL-CLERK    (A3)
1 #LAST-GL-TRN-DATE (P9)
1 #LAST-GL-TRN-TIME (P7)
1 #LAST-GL-CASH-CODE (A1)
1 #POL#             (A16)
1 #NUM-DTLS         (N3)
1 #NET              (N7.2)
1 #TEXT             (A75)
1 #TEXT-TR          (A75)
*
1 #YYYYMMDD              (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMMDD-A           (A8)
1 REDEFINE #YYYYMMDD
  2 #YYYY                 (N4)
  2 #MM                   (N2)
  2 #DD                   (N2)
*
1  #SUN-TRAN            (A4)
1  #SUN-ACCT-NUM-IN     (A4)/* BLANK HERE
1  #SUN-CAT-1           (A2)
1  #SUN-AMT-SIGN        (A1)
1 #sun-cat-2            (a2)                                 /* vt5
*
1  #SUN-ACCT-NUM        (A4)
1  #SUN-AMT-D-C         (A1)
1  #SUN-CN              (N6)
1  #SUN-AMT             (N6.2)
1  #SUN-SOURCE          (A2)
*
1 #SRT-PARM-2                              /* DW18
* 2 #SRT-NUM-ENTRIES-2  (I2)       /* DW38
* 2 #SRT-ENTRY-LENGTH-2 (I2)
* 2 #SRT-KEY-LENGTH-2   (I2) INIT <4>
* 2 #SRT-KEY-POSITION-2 (I2) INIT <0>
  2 #SRT-SORT-TYPE-2    (A1) INIT <'A'>
*
1 #TAB              (A1) INIT <H'09'>
1 #TA-EXTRACT       (A200)              /* DW21
1 #BATCH-ID         (A21)              /* PM45
1 #TIMN             (N7)
1 REDEFINE #TIMN
  2 #TIMN-4          (A6)               /* PM45
  2 #TIMN-3          (A1)               /* PM45
1 #PEACHTREE        (A80)      /* DW22
1 #NUM-PEACH        (N7)
1 #AMT-DISP         (A13)
1 #AMT              (N7.2)
1 #GL-TRAN-DATN     (N8)
1 #GL-TRAN-TIMN     (N7)
*
1 #BATCH-TBL        (30) /* 1 for every G/L Number          /* DW35
  2 #BAT-GL-NUM            (A4)
  2 #BAT-DEBIT-AMT         (N7.2)
  2 #BAT-CREDIT-AMT        (N7.2)
  2 #BAT-NUM-TRANS         (N4)             /* PM47 - was N3
*
1 #BATCH-X          (I2)
1 #PROC-BY-BATCH    (L)
1 #BATCH-DEBIT-AMT-DISP  (A13)
1 #BATCH-CREDIT-AMT-DISP (A13)
1 #GL-NUM         (A4)
1 #DB-CR-SORT     (A10)
1 #FROM-AM         (L)
1 #SG-UNBAL        (L)        /* DW41
1 #pol-num         (a16)                           /* vt5
1 #k               (I2)                            /* vt5
1 #plan            (a3)                            /* vt5
*
1 New-SCR-ID      (N9)
1 p_MSG           (A) DYNAMIC
1 p_Last_Date     (N8)
END-DEFINE
********************************************************************************
INCLUDE GONERCXX
*
* write '#CGA-SCR-COMMAND-TR' #CGA-SCR-COMMAND
*       '#CGA-SCR-SUFFIX-TR'  #CGA-SCR-SUFFIX
* WRITE 'top of G5000PTR  *device =' *DEVICE 'user-comp=' #cga-USER-COMPANY
*
IF *DEVICE = 'BATCH'              /* Rqst for a TA Extract File   DW21
  INPUT #CGA-SCR-SUFFIX #CGA-SCR-ID #TRLOG-START-DT #TRLOG-END-DT
*          /* #IF will be Zero or selected CN for only 1 suffix will be ALL or ???
  MOVE 'TA' TO #CGA-SCR-COMMAND #CGA-ORIG-COMMAND
  MOVE #CGA-SCR-ID     TO #CGA-ORIG-ID
  MOVE #CGA-SCR-SUFFIX TO #CGA-ORIG-SUFFIX
*
  IF #CGA-SCR-SUFFIX NE 'SL2'  /* Not the 1st call from ATHPAUDS    /* DW44
    COMPRESS 'CN'
      #TAB 'Name'
      #TAB 'EFF-Date'
      #TAB 'Tran-date'
      #TAB 'Tran-Time'
      #TAB 'Clerk'
      #TAB 'Pay-Code'
      #TAB 'Pol-Num'
      #TAB 'GL Num'
      #TAB 'Tran-Code'
      #TAB 'Debit-Amt'
      #TAB 'Credit-Amt'
      #TAB 'Desc'
      #TAB 'Batch-ID'
      INTO #TA-EXTRACT LEAVING NO
    WRITE WORK FILE 1 #TA-EXTRACT
*
    MOVE '1,2,3,4,5,6,7,8' TO #PEACHTREE    /* DW22
    WRITE WORK 2 #PEACHTREE
    ADD 1 TO #NUM-PEACH
  END-IF
*
  IF #CGA-SCR-SUFFIX = MASK ('SL')      /* DW44
    MOVE TRUE TO #SEL-PROCESS
    MOVE 'ALL' TO #CGA-SCR-SUFFIX #CGA-ORIG-SUFFIX
  END-IF
END-IF
*
IF #CGA-SCR-SUFFIX = 'SYN'        /* Show SYNC Info    DW43
  MOVE TRUE TO #SHOW-SYNC
  RESET #CGA-SCR-SUFFIX #CGA-ORIG-SUFFIX
END-IF
*
IF #CGA-SCR-SUFFIX = 'SHA'              /*  bz
  PERFORM sbr_GET_Mem                  /*  bz
  IF New-SCR-ID <> 0                   /*  bz
    #CGA-SCR-ID := New-SCR-ID          /*  bz
    #CGA-ID     := New-SCR-ID          /*  bz
    #CGA-SCR-SUFFIX := ' '             /*  bz
  END-IF                               /*  bz
  #TEXT-TR := p_Msg                  /*  bz
  #CGA-SCR-SUFFIX := ' '             /*  bz
ELSE                                    /*  bz
  #TEXT-TR := ' '                      /*  bz
  p_Last_Date := 0                     /*  bz
END-IF                                  /*  bz

MOVE '00' TO #START-TIME-HR-A
MOVE '00' TO #START-TIME-MIN-A
MOVE '24' TO #END-TIME-HR-A
MOVE '00' TO #END-TIME-MIN-A
*
IF #CGA-SCR-COMMAND = 'TA'     /* DW18
  MOVE TRUE TO #NEW-LAYOUT
*
  IF #CGA-SCR-SUFFIX = 'BAT'   /* Processing by batch         /* DW35
      OR = 'EZ*' OR = 'BT*'   /* Coming from C2500PAM        /* DW39 PM50
    IF #CGA-SCR-SUFFIX = 'BT*' OR = 'EZ*'                     /* DW39 PM50
      MOVE TRUE TO #FROM-AM
      MOVE #CGA-MF-SCR-PARM-1-N TO #AM-START-TIME
      MOVE #AM-START-TIME-HH TO #START-TIME-HR  #END-TIME-HR
      MOVE #AM-START-TIME-MM TO #START-TIME-MIN #END-TIME-MIN
      ADD 1 TO #END-TIME-MIN  /* if it is 60 now that is okay
    END-IF
    IF NOT #CGA-SCR-SUFFIX = 'EZ*'                            /* PM50
      MOVE TRUE TO #PROC-BY-BATCH
      MOVE 'Processing by BATCH' TO #TEXT
    END-IF                                                    /* PM50
    RESET #CGA-SCR-SUFFIX #CGA-ORIG-SUFFIX
  END-IF
*
  IF #CGA-SCR-SUFFIX = 'OOB'       /* Only show Out of Balance Trans   DW20
    MOVE TRUE TO #ONLY-OOB
    RESET #CGA-SCR-SUFFIX #CGA-ORIG-SUFFIX
    MOVE 'Only showing Out Of Balance Trans' TO #TEXT
  END-IF
END-IF
*
RESET #DETAIL-LINE-STORE-AREA (*)      /* DW18
ASSIGN #SCN-ROW = 1
*
IF #NEW-LAYOUT                       /* DW18
  ASSIGN #LINES-REMAINING = 20
ELSE
  ASSIGN #LINES-REMAINING = 21
END-IF
*
IF *DEVICE NE 'BATCH'                      /* DW21
  MOVE *DATN TO #HOLD-TODAY-DATE
  COMPRESS #HTD-MM #HTD-DD #HTD-YYYY INTO #START-DT-A LEAVING NO SPACE
  MOVE #START-DT TO #END-DT
  IF p_Last_Date <> 0 #START-DT := p_Last_Date END-IF           /*  bz
*
  #1ST-DT  :=  #FROZEN-START-DATE                                  /* PM14
* MOVE #START-DT   TO #1ST-DT                                    /* PM14
* MOVE 01    TO   #1D-DD                                         /* PM14
* SUBTRACT 8 FROM #1D-MM
* SUBTRACT 12 FROM #1D-MM                                        /* DW9 PM14
*
* IF #1D-MM LT 1                                                 /* PM14
*   ADD 12 TO #1D-MM                                             /* PM14
*   SUBTRACT 1 FROM #1D-YYYY                                     /* PM14
* END-IF                                                         /* PM14
*
*  IF #CGA-CLERK = 'KHB'                     /* PM10 / DW40
*    MOVE #1ST-DT TO #START-DT                                      /* PM10
*  END-IF                                                           /* PM10
END-IF
*
MOVE '*' TO #CGA-SCR-COMMAND
*
IF #CGA-CLERK = 'DRW' OR = 'VXT' OR = 'TDM'           /* vt4
  MOVE 'Y' TO #SHOW-SUNGARD
END-IF
*
* write '#CGA-SCR-COMMAND-TA' #CGA-SCR-COMMAND
* write '#CGA-SCR-SUFFIX-TA' #CGA-SCR-SUFFIX
* write '#CGA-CLERK-TA' #CGA-CLERK
REPEAT
  RESET #TR-SORT-TBL (*)
  MOVE 1 TO #SCN-ROW    /* DW8
  MOVE 'D' TO #PROCESS-TYPE   /* (D=DETAIL S=SUMMARY C=COMMAND T=TOTALS)
*
  IF #CGA-SCR-ID NE 0
    MOVE #CGA-SCR-ID TO #SCN-ID
  END-IF
*
  IF #FROM-AM                               /* YAK
    #CLERK-ID := #CGA-CLERK                 /* YAK
  ELSE                                      /* YAK
    IF  (#CGA-SCR-SUFFIX = 'A' OR = 'T')
        OR (#CGA-SCR-SUFFIX = ' ')
      MOVE 'ALL' TO #CLERK-ID
    ELSE
      MOVE #CGA-SCR-SUFFIX TO #CLERK-ID
    END-IF
  END-IF                                    /* YAK
*
  IF #CGA-SCR-SUFFIX = 'A' OR = 'T'
    MOVE #CGA-SCR-SUFFIX TO #SCN-REGISTER-TYPE
  ELSE
    IF #CGA-CLERK  = 'ELB'   OR = 'EWD' OR = 'SNM'   /* vt removed 'LCC', 'MBW'
        OR = 'EJM' OR = 'CYB' OR = 'MEP' OR = 'KHB'       /* PM10
      MOVE 'A' TO #SCN-REGISTER-TYPE
    ELSE
      MOVE 'T' TO #SCN-REGISTER-TYPE
    END-IF
  END-IF
*
  IF #NEW-LAYOUT                     /* DW18
    IF *DEVICE NE 'BATCH'                         /* DW21
        AND NOT #FROM-AM                                         /* DW39
      INPUT TEXT #TEXT MARK *#CLERK-ID USING MAP 'G5006MTR'
    END-IF
*
    MOVE 'A' TO #SCN-REGISTER-TYPE
    MOVE 'D' TO #PROCESS-TYPE
  ELSE
    INPUT TEXT #TEXT-TR MARK *#SCN-REGISTER-TYPE USING MAP 'G5000MTR'
  END-IF
*
  IF #CGA-SCR-COMMAND NE '*'
    FETCH 'G1000PXX'
  END-IF
*
  IF NOT #SCN-REGISTER-TYPE = 'A' OR = 'T'
    REINPUT 'Invalid Register Type; Must be A or T'
      MARK *#SCN-REGISTER-TYPE
  END-IF
*
  IF NOT #PROCESS-TYPE = 'D' OR = 'S' OR = 'C' OR = 'T'
    REINPUT 'Must be "D" or "S" or "C" or "T"'
      MARK *#PROCESS-TYPE
  END-IF
*
  IF (#PROCESS-TYPE = 'T') AND (#SD-MM NE #ED-MM)
    REINPUT 'Totals by day must be within 1 month'
      MARK *#START-DT
  END-IF
*
  IF   (NOT #CGA-CLERK = 'DRW' OR = 'BJS' OR = 'KEC' OR = 'TDM'
      OR = 'CEB' OR = 'VXT' OR = 'MAS' OR = 'WDS')  /* PM2   /* vt4
      AND (#PROCESS-TYPE = 'C')
    MOVE 'ALL' TO #CLERK-ID
  END-IF
*
  IF #CLERK-ID = ' '
    REINPUT 'USER-ID is required'
      MARK *#CLERK-ID
  END-IF
*
  IF *DEVICE NE 'BATCH'                     /* DW21
    IF #START-DT NE MASK(MMDDYYYY)
      REINPUT 'Date must be format MMDDYYYY'
        MARK *#START-DT
    END-IF
*
    IF #END-DT NE MASK(MMDDYYYY)
      REINPUT 'Date must be format MMDDYYYY'
        MARK *#END-DT
    END-IF
*
    COMPRESS #SD-YYYY #SD-MM #SD-DD
      INTO #TRLOG-START-DT-A LEAVING NO SPACE
    COMPRESS #ED-YYYY #ED-MM #ED-DD
      INTO #TRLOG-END-DT-A LEAVING NO SPACE
  END-IF
*
  IF #START-TIME-HR > 24
    REINPUT 'Hour cannot be greater than 24'
      MARK *#START-TIME-HR
  END-IF
*
  IF #END-TIME-HR > 24
    REINPUT 'Hour cannot be greater than 24'
      MARK *#END-TIME-HR
  END-IF
*
  IF #START-TIME-MIN > 60
    REINPUT 'Minute cannot exceed 60'
      MARK *#START-TIME-MIN
  END-IF
*
  IF #END-TIME-MIN > 60
    REINPUT WITH 'Minute cannot exceed 60'
      MARK *#END-TIME-MIN
  END-IF
*
  COMPRESS #START-TIME-HR-A #START-TIME-MIN-A '000'
    INTO #TRLOG-START-TIME-A LEAVING NO SPACE
  COMPRESS #END-TIME-HR-A #END-TIME-MIN-A '000'
    INTO #TRLOG-END-TIME-A LEAVING NO SPACE
*
  IF #TRLOG-END-TIME < #TRLOG-START-TIME
    REINPUT 'End Time cannot be less than Start Time'
      MARK *#END-TIME-HR
  END-IF
*
  MOVE #CLERK-ID TO #LIST-CLERK
  MOVE #TRLOG-START-DT TO #W-DATE
*
  IF #LIST-CLERK = 'ALL'
    RESET #LIST-CLERK
  END-IF
*
  IF   (#PROCESS-TYPE = 'T')  /* krm rqsted this 5/5/99
      AND (NOT #CGA-CLERK = 'DRW' OR = 'BMG' OR = 'BJS' OR = 'KRM'
      OR = 'EMD'  OR = 'RAD' OR = 'JJK' OR = 'WDS' OR = 'WRL'   /* vt removed 'MBW'
      OR = 'TDM' OR = 'VXT' OR = 'MAS')          /* vt4
    REINPUT 'User not authorized to use Total Option'
      MARK *#PROCESS-TYPE
  END-IF
*
  IF   (#PROCESS-TYPE = 'T')            /* WDS RQSTED THIS 8/24/04 - TM2
      AND (#CLERK-ID = 'MSD')                                        /* TM2
      AND (NOT #CGA-CLERK = 'DRW' OR = 'WDS' OR = 'MAS' OR = 'KRM'   /* TM2
      OR = 'BJS' OR = 'JKM' OR = 'TDM' OR = 'VXT')                /* TM2   /* vt4
    REINPUT 'User not authorized to use Total/Summary Option'     /* TM2
      MARK *#PROCESS-TYPE                                           /* TM2
  END-IF                                                          /* TM2
*
  IF (#PROCESS-TYPE = 'C')                                        /* TM2
      AND (#CLERK-ID = 'MSD')                                        /* TM2
    REINPUT 'Clerk ID "MSD" not valid with Option "C" '           /* TM2
      MARK *#PROCESS-TYPE                                           /* TM2
  END-IF                                                          /* TM2
*
* write '#SCN-REGISTER-TYPE' #SCN-REGISTER-TYPE
* write '#PROCESS-TYPE'      #PROCESS-TYPE
* write '#CLERK-ID'          #CLERK-ID
* write '#SCN-ID'            #SCN-ID
  REPEAT
    IF  (#SCN-REGISTER-TYPE = 'T')           /* REQUEST FOR TRANS REG
        AND (#PROCESS-TYPE NE 'C')
      IF #CLERK-ID = 'ALL' OR = 'MSD'     /* READ ONLY BY TRANS DATE TM2
        IF #SCN-ID NE 0     /* Read by ID-NUMBER         /* DW6
* ******************************<<<<<<<<<<<<<<<<<<
          PERFORM PRE-READ-MAINTENANCE              /* DW8
*           CALL 'WAASSRT1' #TR-DATN (1) #SRT-PARM  /* DW8    /* SAG RH1 11252005 SS
          CALLNAT 'SAGSRT12' #TR-SORT-TBL(*) #SRT-PARM        /* SAG RH1 11252005 SS
* DISPLAY #SRT-NUM-ENTRIES #ISN(1:9) #TR-DATN(1:9) #TR-TIMN (1:9)
* ITE #SRT-SORT-TYPE #SRT-ENTRY-LENGTH #SRT-KEY-LENGTH #SRT-KEY-POSITION
          FOR #I2 1 TO #SRT-NUM-ENTRIES             /* DW8
            GET TRLOG #ISN (#I2)
            PERFORM SHOW-SYNCED-FIELDS    /* DW12                /* DW52
*
            MOVE TRLOG.PROCESS-IND TO #PROCESS-IND
            MOVE TRLOG.ID-NUMBER   TO #ID-NUMBER                /* TM1
            MOVE #ISN (#I2) TO #CURR-ISN
            PERFORM DO-TRLOG
          END-FOR                                   /* DW8
*
          MOVE TRUE TO #LAST-RECORD
          PERFORM DISPLAY-SCREEN
*
          ESCAPE BOTTOM /* (0918) end of repeat     /* DW8
        ELSE                           /* READ ONLY BY TRANS DATE
          READ TRLOG BY TRANSACTION-DATN
              FROM #TRLOG-START-DT THRU #TRLOG-END-DT
            PERFORM SHOW-SYNCED-FIELDS   /* DW12        /* DW52
*
            MOVE TRLOG.PROCESS-IND TO #PROCESS-IND               /* PM3
            MOVE TRLOG.CLERK-ID    TO #TL-CLERK                  /* TM3
            PERFORM CHECK-SECURITY                               /* PM3
*
            MOVE TRLOG.ID-NUMBER TO #ID-NUMBER                   /* TM1
            MOVE *ISN TO #CURR-ISN
            PERFORM DO-TRLOG
*
            IF #CGA-SCR-COMMAND = MASK ('-')    /* BACK UP 1 PAGE
              ESCAPE BOTTOM
            END-IF
          END-READ
        END-IF
      ELSE                             /* READ BY CLERK/TRANS DATE
        READ TRLOG BY CLERK-DATE-KEY FROM #W-CLERK-DATE-KEY
          PERFORM SHOW-SYNCED-FIELDS   /* DW12      DW52
*
          MOVE TRLOG.PROCESS-IND TO #PROCESS-IND                  /* PM3
          MOVE TRLOG.CLERK-ID    TO #TL-CLERK                     /* TM3
          PERFORM CHECK-SECURITY                                  /* PM3
*
          IF  (TRANSACTION-DATN > #TRLOG-END-DT)   /* STOP AT END OF
              OR (CLERK-ID NE #CLERK-ID)              /* DATE OR CLERK
            ESCAPE BOTTOM
          END-IF
*
          IF TRANSACTION-TIMN > #TRLOG-END-TIME    /* TIME TEST
            ESCAPE TOP
          END-IF
*
          MOVE TRLOG.ID-NUMBER TO #ID-NUMBER                      /* TM1
          MOVE *ISN TO #CURR-ISN
          PERFORM DO-TRLOG
*
          IF #CGA-SCR-COMMAND = MASK ('-')    /* BACK UP 1 PAGE
            ESCAPE BOTTOM
          END-IF
        END-READ
      END-IF
    ELSE
      IF #SCN-REGISTER-TYPE = 'A'       /* REQUEST FOR ACCT REG
          AND (#PROCESS-TYPE NE 'C')
        IF #CLERK-ID = 'ALL'
          IF #SCN-ID NE 0     /* Read by ID-NUMBER         /* DW6
* ******************************<<<<<<<<<<<<<<<<<<
            PERFORM PRE-READ-ACCOUNTING               /* DW8
*           CALL 'WAASSRT1' #TR-DATN (1) #SRT-PARM     /* DW8   /* SAG RH1 11252005 SS
            CALLNAT 'SAGSRT12' #TR-SORT-TBL(*) #SRT-PARM        /* SAG RH1 11252005 SS
            FOR #I2 1 TO #SRT-NUM-ENTRIES             /* DW8
              GET ACCT-REG #ISN (#I2)
              MOVE ACCT-REG.PROCESS-IND TO #PROCESS-IND
              MOVE ACCT-REG.CLERK-ID    TO #TL-CLERK              /* TM3
              MOVE #ISN (#I2) TO #CURR-ISN
              PERFORM DO-ACCTG
            END-FOR                                   /* DW8
*
            MOVE TRUE TO #LAST-RECORD
            IF #NEW-LAYOUT                            /* DW18
              PERFORM PROCESS-PRIOR-TR-ENTRY
            END-IF
*
            MOVE TRUE TO #LAST-RECORD
            PERFORM DISPLAY-SCREEN
*
            ESCAPE BOTTOM /* (0918) end of repeat     /* DW8
          ELSE                           /* READ ONLY BY TRANS DATE
*          write 'reading by transaction date'
            READ ACCT-REG BY TRANSACTION-DATN
                FROM #TRLOG-START-DT THRU #TRLOG-END-DT
*
              MOVE ACCT-REG.PROCESS-IND TO #PROCESS-IND           /* PM3
              MOVE ACCT-REG.CLERK-ID    TO #TL-CLERK              /* TM3
              PERFORM CHECK-SECURITY                              /* PM3
*
              MOVE *ISN TO #CURR-ISN
              PERFORM DO-ACCTG
*
              IF #CGA-SCR-COMMAND = MASK ('-')    /* BACK UP 1 PAGE
                ESCAPE BOTTOM
              END-IF
            END-READ
*
            MOVE TRUE TO #LAST-RECORD
            IF #NEW-LAYOUT                            /* DW18
              PERFORM PROCESS-PRIOR-TR-ENTRY
              MOVE TRUE TO #LAST-RECORD
              PERFORM DISPLAY-SCREEN
            END-IF
          END-IF
        ELSE                             /* READ BY CLERK/TRANS DATE
*        write 'reading by clerk name and transaction date'
          READ ACCT-REG BY CLERK-DATE-KEY FROM #W-CLERK-DATE-KEY
*
            MOVE ACCT-REG.PROCESS-IND TO #PROCESS-IND             /* PM3
            MOVE ACCT-REG.CLERK-ID    TO #TL-CLERK                /* TM3
            PERFORM CHECK-SECURITY                                /* PM3
*
            IF  (TRANSACTION-DATN > #TRLOG-END-DT)  /* STOP AT END OF
                OR (CLERK-ID NE #CLERK-ID)              /* DATE OR CLERK
              ESCAPE BOTTOM
            END-IF
*
            IF TRANSACTION-TIMN > #TRLOG-END-TIME    /* TIME TEST
              ESCAPE TOP
            END-IF
*
            MOVE *ISN TO #CURR-ISN
            PERFORM DO-ACCTG
*
            IF #CGA-SCR-COMMAND = MASK ('-')    /* BACK UP 1 PAGE
              ESCAPE BOTTOM
            END-IF
          END-READ
*
          MOVE TRUE TO #LAST-RECORD
*
          IF #NEW-LAYOUT                            /* DW18
            PERFORM PROCESS-PRIOR-TR-ENTRY
            MOVE TRUE TO #LAST-RECORD
            PERFORM DISPLAY-SCREEN
          END-IF
        END-IF
      ELSE       /* must be a count request
        IF #CLERK-ID = 'ALL'
          READ TR-V  BY TRANSACTION-DATN
              FROM #TRLOG-START-DT THRU #TRLOG-END-DT
*
            MOVE TR-V.PROCESS-IND TO #PROCESS-IND                /* TM3
            MOVE TR-V.CLERK-ID    TO #TL-CLERK                   /* TM3
            PERFORM CHECK-SECURITY  /* DW15 (Comment it out)    /* TM3
*
            MOVE TR-V.ID-NUMBER TO #ID-NUMBER                    /* TM3
            MOVE *ISN TO #CURR-ISN
            PERFORM DO-TRLOG                /*   <<<<<<<<<<<<<<<<<< TM3
          END-READ
        ELSE                             /* READ BY CLERK/TRANS DATE
          READ TR-V  BY CLERK-DATE-KEY FROM #W-CLERK-DATE-KEY
*
            MOVE TR-V.PROCESS-IND TO #PROCESS-IND                 /* PM3
            MOVE TR-V.CLERK-ID    TO #TL-CLERK                    /* TM3
            PERFORM CHECK-SECURITY                                /* PM3
*
            IF  (TR-V.TRANSACTION-DATN > #TRLOG-END-DT)
                OR (TR-V.CLERK-ID NE #CLERK-ID)
              ESCAPE BOTTOM
            END-IF
*
            IF (TR-V.TRANSACTION-TIMN > #TRLOG-END-TIME)
              ESCAPE TOP
            END-IF
*
            MOVE TR-V.ID-NUMBER TO #ID-NUMBER                     /* TM1
            MOVE *ISN TO #CURR-ISN
            PERFORM DO-TRLOG
          END-READ
        END-IF
      END-IF
    END-IF
*
    IF #PROCESS-TYPE = 'C'   /* REQUEST FOR counts
      RESET #I1
*
      DECIDE FOR EVERY CONDITION
        WHEN #CNT-CB NE 0
          ADD 1 TO #I1
          MOVE 'CB' TO #SCR-CMND        (#I1)
          MOVE #CNT-CB TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-BD NE 0
          ADD 1 TO #I1
          MOVE 'BD' TO #SCR-CMND        (#I1)
          MOVE #CNT-BD TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-FM NE 0
          ADD 1 TO #I1
          MOVE 'FM' TO #SCR-CMND        (#I1)
          MOVE #CNT-FM TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-DM NE 0
          ADD 1 TO #I1
          MOVE 'DM' TO #SCR-CMND        (#I1)
          MOVE #CNT-DM TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-CG NE 0
          ADD 1 TO #I1
          MOVE 'CG' TO #SCR-CMND        (#I1)
          MOVE #CNT-CG TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-UP NE 0
          ADD 1 TO #I1
          MOVE 'UP' TO #SCR-CMND        (#I1)
          MOVE #CNT-UP TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-NM NE 0
          ADD 1 TO #I1
          MOVE 'NM' TO #SCR-CMND        (#I1)
          MOVE #CNT-NM TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-AI NE 0
          ADD 1 TO #I1
          MOVE 'AI' TO #SCR-CMND        (#I1)
          MOVE #CNT-AI TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-DD NE 0
          ADD 1 TO #I1
          MOVE 'DD' TO #SCR-CMND        (#I1)
          MOVE #CNT-DD TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-DA NE 0
          ADD 1 TO #I1
          MOVE 'DA' TO #SCR-CMND        (#I1)
          MOVE #CNT-DA TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-DC NE 0
          ADD 1 TO #I1
          MOVE 'DC' TO #SCR-CMND        (#I1)
          MOVE #CNT-DC TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-DP NE 0
          ADD 1 TO #I1
          MOVE 'DP' TO #SCR-CMND        (#I1)
          MOVE #CNT-DP TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-CI NE 0
          ADD 1 TO #I1
          MOVE 'CI' TO #SCR-CMND        (#I1)
          MOVE #CNT-CI TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-CA NE 0
          ADD 1 TO #I1
          MOVE 'CA' TO #SCR-CMND        (#I1)
          MOVE #CNT-CA TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-DS NE 0
          ADD 1 TO #I1
          MOVE 'DS' TO #SCR-CMND        (#I1)
          MOVE #CNT-DS TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-VA NE 0
          ADD 1 TO #I1
          MOVE 'VA' TO #SCR-CMND        (#I1)
          MOVE #CNT-VA TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-AM NE 0
          ADD 1 TO #I1
          MOVE 'AM' TO #SCR-CMND        (#I1)
          MOVE #CNT-AM TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-DN NE 0
          ADD 1 TO #I1
          MOVE 'DN' TO #SCR-CMND        (#I1)
          MOVE #CNT-DN TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-DF NE 0
          ADD 1 TO #I1
          MOVE 'DF' TO #SCR-CMND        (#I1)
          MOVE #CNT-DF TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-SU NE 0
          ADD 1 TO #I1
          MOVE 'SU' TO #SCR-CMND        (#I1)
          MOVE #CNT-SU TO #SCR-CMND-CNT (#I1)
        WHEN #CNT-ELSE NE 0
          ADD 1 TO #I1
          MOVE 'ALL ELSE' TO #SCR-CMND  (#I1)
          MOVE #CNT-ELSE TO #SCR-CMND-CNT (#I1)
        WHEN NONE IGNORE
      END-DECIDE
*
      ADD #SCR-CMND-CNT (*) TO #SCR-TOT-CMNDS
      ADD #AFSC-CNTS        TO #SCR-AFSC-CNTS                     /* TM1
      ADD #AAFM-CNTS        TO #SCR-AAFM-CNTS                     /* TM1
*
*     IF #CGA-USER-COMPANY = 'B' OR = 'S'                         /* TM1
      IF #CGA-USER-COMPANY = 'S'  /* User is AFFL                 /* DW52
        COMPRESS 'Total AFSC ONLY  Counts:   ' INTO #SCR-TEXT1    /* TM1
        COMPRESS 'Total AAFM GF/PL Counts:   ' INTO #SCR-TEXT2    /* TM1
      ELSE
        RESET #SCR-TEXT1 #SCR-TEXT2 #SCR-AFSC-CNTS #SCR-AAFM-CNTS /* tm1
      END-IF
*
      MOVE 'TR' TO #CGA-SCR-COMMAND
      INPUT USING MAP 'G5003MTR'
*
      FETCH 'G1000PXX'
    END-IF
*
    IF #PROCESS-TYPE = 'T'   /* REQUEST FOR totals by day
      MOVE 'This FUNCTION is not operable, it was only used by AFSC'
        TO #TEXT
      INPUT TEXT #TEXT USING MAP 'G1000MXX'
*     IF  (#CLERK-ID = 'MSD')               /* TM2            /* dw52
*       AND ((#CGA-CLERK = 'WDS' OR = 'MAS')                       /* TM2
*       OR (#CGA-USER-COMPANY = 'B'))                              /* TM2
*        MOVE #CNT-MSD-BY-DAY(*) TO #CNT-BY-DAY(*)                 /* TM2
*        MOVE #TOT-MSD-CNT-BY-DAY TO #TOT-CNT-BY-DAY               /* TM2
*      END-IF
*
*      MOVE 'TR' TO #CGA-SCR-COMMAND
*      INPUT USING MAP 'G5004MTR'
*
      FETCH 'G1000PXX'
    END-IF
*
    IF #CGA-SCR-COMMAND NE MASK ('-')
*     IF   (#CGA-SCR-ID NE 0)    /* removed 6/99 as per elb
*      AND (#NUM-FOUND = 0)
*       RESET #CGA-SCR-ID #CGA-SCR-SUFFIX
*       ESCAPE BOTTOM
*     END-IF
*

      MOVE TRUE TO #LAST-RECORD
      PERFORM DISPLAY-SCREEN
*
      IF #CGA-SCR-COMMAND NE MASK ('-')
        ESCAPE BOTTOM
      END-IF
    END-IF
*
    IF #IPG NE 1
      SUBTRACT 1 FROM #IPG        /* GET PRIOR SCREEN
    END-IF
*
    MOVE #1ST-ISN-TBL (#IPG) TO #HOLD-ISN
    SUBTRACT 1 FROM #IPG
    MOVE '*' TO #CGA-SCR-COMMAND
*
    IF *DEVICE = 'BATCH'           /* DW21
      ESCAPE BOTTOM
    END-IF
  END-REPEAT
*
  IF *DEVICE = 'BATCH'           /* DW21
    ESCAPE BOTTOM
  END-IF
END-REPEAT
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE DO-TRLOG
* * * * * * * * * * * * * *
*
IF   (#HOLD-ISN NE 0)                      /* BACK UP 1 SCREEN
    AND (#CURR-ISN NE #HOLD-ISN)
  ESCAPE ROUTINE
END-IF
RESET #HOLD-ISN                            /* TO INDICATE FOUND
*
IF #PROCESS-TYPE NE  'C'
  MOVE TRLOG.OLD-DATA (1) TO TR-V.OLD-DATA (1)
  MOVE TRLOG.NEW-DATA (1) TO TR-V.NEW-DATA (1)
END-IF
*
IF NEW-DATA-3 (1) = MASK ('BD-')
  MOVE 'BD' TO #CMND
ELSE
  IF NEW-DATA-3 (1) = MASK ('DM-')
    MOVE 'DM' TO #CMND
  ELSE
    IF NEW-DATA-3 (1) = MASK ('CG-')
      MOVE 'CG' TO #CMND
    ELSE
      IF NEW-DATA-3 (1) = MASK ('FM-')
          OR OLD-DATA-3 (1) = MASK ('FM-')
        MOVE 'FM' TO #CMND
      ELSE
        IF NEW-DATA-3 (1) = MASK ('DP')
          MOVE 'DP' TO #CMND
        ELSE
          IF OLD-DATA-3 (1) = MASK ('DD-')
              OR NEW-DATA-3 (1) = MASK ('DD-')    /* DW13
            MOVE 'DD' TO #CMND
          ELSE
            IF NEW-DATA-3 (1) = MASK ('DC-')
              MOVE 'DC' TO #CMND
            ELSE
              IF NEW-DATA-3 (1) = MASK ('NM-')
                MOVE 'NM' TO #CMND
              ELSE
                IF OLD-DATA-3 (1) = MASK ('AI-')
                  MOVE 'AI' TO #CMND
                ELSE
                  IF OLD-DATA-3 (1) = MASK ('CI-')
                    MOVE 'CI' TO #CMND
                  ELSE
                    IF NEW-DATA-3 (1) = MASK ('CA-')
                      MOVE 'CA' TO #CMND
                    ELSE
                      IF OLD-DATA-3 (1) = MASK ('DS-')
                        MOVE 'DS' TO #CMND
                      ELSE
                        IF OLD-DATA-3 (1) = MASK ('VA-')
                          MOVE 'VA' TO #CMND
                        ELSE
                          IF OLD-DATA-3 (1) = MASK ('AM-')
                            MOVE 'AM' TO #CMND
                          ELSE
                            IF OLD-DATA-3 (1) = MASK ('DN-')
                                OR NEW-DATA-3 (1) = MASK ('DN-') /* DW13
                              MOVE 'DN' TO #CMND
                            ELSE
                              IF NEW-DATA-3 (1) = MASK ('DF-')
                                MOVE 'DF' TO #CMND
                              ELSE
                                IF OLD-DATA-3 (1) = MASK ('SU-')
                                  MOVE 'SU' TO #CMND
                                ELSE
                                  IF OLD-DATA-3 (1) = MASK ('DA-')
                                    MOVE 'DA' TO #CMND
                                  ELSE
                                    IF NEW-DATA-3 (1) = MASK ('UP-')
                                      MOVE 'UP' TO #CMND
                                    ELSE
                                      IF NEW-DATA-3 (1) = MASK ('CB-')
                                        MOVE 'CB' TO #CMND
                                      ELSE
                                        IF NEW-DATA-3 (1) = MASK ('CC-')  /* PM51
                                          MOVE 'CC' TO #CMND              /* PM51
                                        ELSE                              /* PM51
                                          MOVE '??' TO #CMND
                                        END-IF                            /* PM51
                                      END-IF
                                    END-IF
                                  END-IF
                                END-IF
                              END-IF
                            END-IF
                          END-IF
                        END-IF
                      END-IF
                    END-IF
                  END-IF
                END-IF
              END-IF
            END-IF
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
END-IF
*
IF #PROCESS-TYPE  = 'C'   /* REQUEST FOR counts
  IF  (TR-V.TRANSACTION-DATN < #TRLOG-START-DT)
      OR (TR-V.TRANSACTION-DATN > #TRLOG-END-DT)
      OR (TR-V.TRANSACTION-TIMN < #TRLOG-START-TIME)
      OR (TR-V.TRANSACTION-TIMN > #TRLOG-END-TIME)
    ESCAPE ROUTINE
  END-IF
ELSE
  IF  (TRLOG.TRANSACTION-DATN < #TRLOG-START-DT)
      OR (TRLOG.TRANSACTION-DATN > #TRLOG-END-DT)
      OR (TRLOG.TRANSACTION-TIMN < #TRLOG-START-TIME)
      OR (TRLOG.TRANSACTION-TIMN > #TRLOG-END-TIME)
      OR ((#SCN-ID NE 0) AND (#SCN-ID NE TRLOG.ID-NUMBER))
      OR ((#SCN-COMMAND NE ' ') AND (#SCN-COMMAND NE #CMND))
    ESCAPE ROUTINE
  END-IF
END-IF
*
ADD 1 TO #NUM-FOUND
*
IF #PROCESS-TYPE = 'T'     /* rqst for total counts by day
  MOVE TRLOG.TRANSACTION-DATN TO #DATE-YYYYMMDD
  ADD 1 TO #CNT-BY-DAY (#DATE-DD-N)
  ADD 1 TO #TOT-CNT-BY-DAY
*
  IF TRLOG.CLERK-ID = 'JMJ' OR = 'WDS' OR = 'MAS'                 /* TM5
      OR = 'TSS' OR = 'RAS' OR = 'SCC' OR = 'DSW'                    /* TM6
    ADD 1 TO #CNT-MSD-BY-DAY (#DATE-DD-N)                         /* TM2
    ADD 1 TO #TOT-MSD-CNT-BY-DAY                                  /* TM2
  END-IF
*
  ESCAPE TOP
END-IF
*
DECIDE ON FIRST VALUE OF #CMND
  VALUE 'CB' ADD 1 TO #CNT-CB
  VALUE 'BD' ADD 1 TO #CNT-BD
  VALUE 'DM' ADD 1 TO #CNT-DM
  VALUE 'CG' ADD 1 TO #CNT-CG
  VALUE 'FM' ADD 1 TO #CNT-FM
  VALUE 'DP' ADD 1 TO #CNT-DP
  VALUE 'DD' ADD 1 TO #CNT-DD
  VALUE 'DC' ADD 1 TO #CNT-DC
  VALUE 'NM' ADD 1 TO #CNT-NM
  VALUE 'AI' ADD 1 TO #CNT-AI
  VALUE 'CI' ADD 1 TO #CNT-CI
  VALUE 'CA' ADD 1 TO #CNT-CA
  VALUE 'DS' ADD 1 TO #CNT-DS
  VALUE 'VA' ADD 1 TO #CNT-VA
  VALUE 'AM' ADD 1 TO #CNT-AM
  VALUE 'DN' ADD 1 TO #CNT-DN
  VALUE 'DF' ADD 1 TO #CNT-DF
  VALUE 'SU' ADD 1 TO #CNT-SU
  VALUE 'DA' ADD 1 TO #CNT-DA
  VALUE 'UP' ADD 1 TO #CNT-UP
  NONE       ADD 1 TO #CNT-ELSE
END-DECIDE
*
IF #PROCESS-TYPE = 'C'   /* REQUEST FOR counts
  IF (TR-V.CLERK-ID = 'EMD' OR = 'DKD' OR = 'JKM'                 /* TM1
      OR = 'BJS' OR = 'KRM' OR = 'WDS' OR = 'JMJ' OR = 'TSS'         /* TM5
      OR = 'SLB' OR = 'MAS' OR = 'RAS' OR = 'JAB' OR = 'PJC'         /* TM5
      OR = 'MMP' OR = 'SCC' OR = 'DSW')                              /* TM6
    IF #ID-NUMBER > 599999 AND #ID-NUMBER < 700000                /* TM1
      ADD 1 TO #AFSC-CNTS                                         /* TM1
    ELSE                                                          /* TM1
      IF #ID-NUMBER > 1900                                        /* TM1
        ADD 1 TO #AAFM-CNTS                                       /* TM1
      END-IF                                                      /* TM1
    END-IF                                                        /* TM1
  END-IF                                                          /* TM1
*
* DISPLAY 'ABOUT TO ESCAPE DO TRLOG - ' #AFSC-CNTS  #AAFM-CNTS
  ESCAPE ROUTINE
END-IF
*
RESET #LAST-RECORD
*
IF #PROCESS-TYPE = 'S'
  MOVE 1 TO #LINES-NEEDED
ELSE
  COMPUTE #LINES-NEEDED = (TRLOG.C*CHANGED-DATA-TABLE * 4) + 1
END-IF
*
IF  (#LINES-NEEDED GT #LINES-REMAINING AND #LINES-NEEDED < 22)
    OR (#LINES-NEEDED >= 22 AND #SCN-ROW > 16)
  PERFORM DISPLAY-SCREEN
*
  IF #CGA-SCR-COMMAND = MASK ('-')
    ESCAPE ROUTINE
  END-IF
END-IF
*
IF #SCN-ROW = 1
  ADD 1 TO #IPG
  MOVE #CURR-ISN TO #1ST-ISN-TBL (#IPG)
END-IF
*
* MOVE RIGHT TRLOG.ID-NUMBER TO #SCN-LINE-HDR (#SCN-ROW)
* COMPRESS #CMND TRLOG.ID-NUMBER INTO #SCN-LINE-HDR (#SCN-ROW)   /* DW48
COMPRESS #CMND TRLOG.ID-NUMBER TRLOG.USER-COMPANY                /* DW48
  INTO #SCN-LINE-HDR (#SCN-ROW)
MOVE TRLOG.CLERK-ID TO #TL-CLERK
*
MOVE TRLOG.TRANSACTION-DATN TO #DATE-YYYYMMDD
COMPRESS #DATE-MM #DATE-DD #DATE-YYYY INTO #TL-DATE WITH '-'
MOVE TRLOG.TRANSACTION-TIMN TO #TIME-HHMMSSX
MOVE 'AM' TO #TL-AM-PM
*
IF #TIME-HH-N GT 11
  MOVE 'PM' TO #TL-AM-PM
END-IF
*
* IF #TIME-HH-N GT 12   /* removed 11/25 as per SLL
*   SUBTRACT 12 FROM #TIME-HH-N
* END-IF
*
COMPRESS #TIME-HH #TIME-MM INTO #TL-TIME WITH ':'
MOVE TRLOG.DATE-LAST-UPDATE TO #DATE-YYYYMMDD
COMPRESS #DATE-MM #DATE-DD #DATE-YYYY INTO #TL-LST-UPD-DATE WITH '-'
*
MOVE NAME20 TO #TL-NAM
ASSIGN #TL-CHANGE = TRLOG.C*CHANGED-DATA-TABLE
MOVE #TITLE-LINE TO #SCN-LINE(#SCN-ROW)
MOVE (AD=I) TO #SCN-LINE-A(#SCN-ROW)
COMPUTE #SCN-ROW = #SCN-ROW + 1
COMPUTE #LINES-REMAINING = #LINES-REMAINING - 1
*
IF #PROCESS-TYPE = 'S'
  ESCAPE ROUTINE
END-IF
*
FOR #TRX 1 TO TRLOG.C*CHANGED-DATA-TABLE
  IF #SCN-ROW > 18
    PERFORM DISPLAY-SCREEN
  END-IF
*
  MOVE 'PRIOR DATA:' TO #SCN-LINE-HDR(#SCN-ROW)
  MOVE OLD-DATA-1-65(#TRX) TO #SCN-LINE(#SCN-ROW)
  ADD 1 TO #SCN-ROW                                          /* DW11
  SUBTRACT 1 FROM #LINES-REMAINING                           /* DW11
*
  IF OLD-DATA-66-125(#TRX) NE ' '
    MOVE 'PRIOR DATA:' TO #SCN-LINE-HDR(#SCN-ROW)            /* DW11
    MOVE OLD-DATA-66-125(#TRX) TO #SCN-LINE(#SCN-ROW)
    ADD 1 TO #SCN-ROW                                        /* DW11
    SUBTRACT 1 FROM #LINES-REMAINING                         /* DW11
  END-IF
*
* COMPUTE #SCN-ROW = #SCN-ROW + 2                           /* DW11
  MOVE 'NEW DATA:  ' TO #SCN-LINE-HDR(#SCN-ROW)
  MOVE NEW-DATA-1-65(#TRX) TO #SCN-LINE(#SCN-ROW)
  ADD 1 TO #SCN-ROW                                          /* DW11
  SUBTRACT 1 FROM #LINES-REMAINING                           /* DW11
*
  IF NEW-DATA-66-125(#TRX) NE ' '
    MOVE 'NEW DATA:' TO #SCN-LINE-HDR(#SCN-ROW)              /* DW11
    MOVE NEW-DATA-66-125(#TRX) TO #SCN-LINE(#SCN-ROW)
    ADD 1 TO #SCN-ROW                                         /* DW11
    SUBTRACT 1 FROM #LINES-REMAINING                           /* DW11
  END-IF
* COMPUTE #SCN-ROW = #SCN-ROW + 2                           /* DW11
* COMPUTE #LINES-REMAINING = #LINES-REMAINING - 4
END-FOR
*
END-SUBROUTINE /* (1268)
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE DO-ACCTG
* * * * * * * * * * * * * * * *
*
IF   (#HOLD-ISN NE 0)                      /* BACK UP 1 SCREEN
    AND (#CURR-ISN NE #HOLD-ISN)
  ESCAPE ROUTINE
END-IF
RESET #HOLD-ISN                            /* TO INDICATE FOUND
*
IF #SCN-ID = 0 OR = ACCT-REG.ID-NUMBER
  IGNORE
ELSE
  ESCAPE ROUTINE
END-IF
*
IF  (ACCT-REG.TRANSACTION-DATN < #TRLOG-START-DT)
    OR (ACCT-REG.TRANSACTION-DATN > #TRLOG-END-DT)
    OR (ACCT-REG.TRANSACTION-TIMN < #TRLOG-START-TIME)
    OR (ACCT-REG.TRANSACTION-TIMN > #TRLOG-END-TIME)
  ESCAPE ROUTINE
END-IF
*
ADD 1 TO #NUM-FOUND
*
RESET #LAST-RECORD
*
IF #NEW-LAYOUT                                      /* DW18
  PERFORM DO-NEW-TA-LAYOUT
  ESCAPE ROUTINE
END-IF
*
COMPUTE #LINES-NEEDED = 5
*
IF  (#LINES-NEEDED GT #LINES-REMAINING AND #LINES-NEEDED < 22)
    OR (#LINES-NEEDED >= 22 AND #SCN-ROW > 16)
  PERFORM DISPLAY-SCREEN
*
  IF #CGA-SCR-COMMAND = MASK ('-')
    ESCAPE ROUTINE
  END-IF
*
END-IF
*
IF #SCN-ROW = 1
  ADD 1 TO #IPG
  MOVE #CURR-ISN TO #1ST-ISN-TBL (#IPG)
END-IF
*
MOVE ACCT-REG.ID-NUMBER         TO #TL1-ID-NO
MOVE ACCT-REG.USER-COMPANY      TO #TL1-USER-COMPANY     /* DW48
*
MOVE ACCT-REG.CLERK-ID          TO #TL-CLRK-ID
*
MOVE ACCT-REG.TRANSACTION-DATN TO #DATE-YYYYMMDD
COMPRESS #DATE-MM #DATE-DD #DATE-YYYY INTO #TL-UPDT WITH '-'
MOVE ACCT-REG.TRANSACTION-TIMN TO #TIME-HHMMSSX
MOVE 'AM' TO #TL-TIM-AM-PM
IF #TIME-HH-N GT 11
  MOVE 'PM' TO #TL-TIM-AM-PM
END-IF
* IF #TIME-HH-N GT 12
*   SUBTRACT 12 FROM #TIME-HH-N
* END-IF
COMPRESS #TIME-HH #TIME-MM INTO #TL-TIM-UPDT WITH ':'
*
MOVE ACCT-REG.TXN-CODE          TO #TL-TXN-CODE
MOVE ACCT-REG.SEQUENCE-NUM      TO #TL-SEQ-NUM
MOVE #TITLE-LINE-1              TO #SCN-LINE2(#SCN-ROW)
MOVE (AD=I)                     TO #SCN-LINE-A(#SCN-ROW)
COMPUTE #SCN-ROW = #SCN-ROW + 1
COMPUTE #LINES-REMAINING = #LINES-REMAINING - 1
MOVE ACCT-REG.NAME              TO #TL-NAME
MOVE EDITED ACCT-REG.TXN-ACCT-NUMBER (EM=ZZ9) TO #TL-ACCT-NO
*
#TL-CASH := CASHCD(<ACCT-REG.CASH-CODE>)           /*  bz OI-3078
*
MOVE ACCT-REG.ACCT-DATE         TO #TL-ACCT-DATE
MOVE #TITLE-LINE-2              TO #SCN-LINE2(#SCN-ROW)
MOVE (AD=I)                     TO #SCN-LINE-A(#SCN-ROW)
COMPUTE #SCN-ROW = #SCN-ROW + 1
COMPUTE #LINES-REMAINING = #LINES-REMAINING - 1
MOVE ACCT-REG.DATE-LAST-ACCT-UPDATE                TO #TL-LST-UPDT
MOVE EDITED ACCT-REG.DEBIT-AMOUNT (EM=-ZZZZZZ9.99)  TO #TL-DB-AMT
MOVE EDITED ACCT-REG.CREDIT-AMOUNT (EM=-ZZZZZZ9.99) TO #TL-CR-AMT
MOVE #TITLE-LINE-3              TO #SCN-LINE2(#SCN-ROW)
MOVE (AD=I)                     TO #SCN-LINE-A(#SCN-ROW)
COMPUTE #SCN-ROW = #SCN-ROW + 1
COMPUTE #LINES-REMAINING = #LINES-REMAINING - 1
MOVE ACCT-REG.DESCRIPTION       TO #TL-DESC
MOVE ACCT-REG.POLICY-NUMBER     TO #TL-POL-NUM             /* PM16
MOVE ACCT-REG.MESSAGE-CODE      TO #TL-MESS-CODE
MOVE ACCT-REG.AALP-FLAG         TO #TL-AALP-FLAG
MOVE #TITLE-LINE-4              TO #SCN-LINE2(#SCN-ROW)
MOVE (AD=I)                     TO #SCN-LINE-A(#SCN-ROW)
COMPUTE #SCN-ROW = #SCN-ROW + 1
COMPUTE #LINES-REMAINING = #LINES-REMAINING - 1
*
IF   (#SHOW-SUNGARD NE 'N')
    AND (SG-AMOUNT (1) NE 0)
  RESET #TOT-SG
  FOR #I5 1 TO 15
    IF SG-AMOUNT (#I5) NE 0
      ADD SG-AMOUNT (#I5) TO #TOT-SG
      MOVE EDITED SG-AMOUNT (#I5) (EM=-ZZZ,ZZZ.99) TO #AMT-11
      MOVE LEFT #AMT-11 TO #AMT-11
      COMPRESS #SCN-LINE2 (#SCN-ROW)
        SG-CATEGORY-1 (#I5) SG-CATEGORY-2 (#I5) #AMT-11
        INTO #SCN-LINE2 (#SCN-ROW)
    END-IF
  END-FOR
*
  IF   (#TOT-SG NE ACCT-REG.DEBIT-AMOUNT)
      AND (#TOT-SG NE ACCT-REG.CREDIT-AMOUNT)
    COMPRESS '*UNBAL SG breakout' #SCN-LINE2(#SCN-ROW)
      INTO #SCN-LINE2(#SCN-ROW)
  ELSE
    COMPRESS 'SG breakout' #SCN-LINE2(#SCN-ROW)
      INTO #SCN-LINE2(#SCN-ROW)
  END-IF
*
  COMPUTE #SCN-ROW = #SCN-ROW + 1
  COMPUTE #LINES-REMAINING = #LINES-REMAINING - 1
END-IF
*
RESET #SCN-LINE2(#SCN-ROW)
COMPUTE #SCN-ROW = #SCN-ROW + 1
COMPUTE #LINES-REMAINING = #LINES-REMAINING - 1
*
END-SUBROUTINE /* (1539)
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE DO-NEW-TA-LAYOUT                 /* DW18
* * * * * * * * * * * * * * * *
*
* General Info
*
IF   (ACCT-REG.CREDIT-AMOUNT = 0)    /* Empty Trans
    AND (ACCT-REG.DEBIT-AMOUNT  = 0)
    AND (ACCT-REG.SG-AMOUNT (1) = 0)
    AND (ACCT-REG.TXN-CODE NE MASK ('FLN'))
  ESCAPE ROUTINE
END-IF
*
IF ACCT-REG.TXN-CODE = 'STOP' OR = 'STRT'               /* DW37
  ESCAPE TOP
END-IF
*
IF   (ACCT-REG.ID-NUMBER        = #LAST-GL-CN)      /* Same transaction
    AND (ACCT-REG.CLERK-ID         = #LAST-GL-CLERK)
    AND (ACCT-REG.TRANSACTION-DATN = #LAST-GL-TRN-DATE)
    AND (ACCT-REG.TRANSACTION-TIMN = #LAST-GL-TRN-TIME)
    AND (ACCT-REG.CASH-CODE        = #LAST-GL-CASH-CODE)
    AND (ACCT-REG.ID-NUMBER NE 999999)
  IGNORE
ELSE
  PERFORM PROCESS-PRIOR-TR-ENTRY
  PERFORM STORE-GENERAL-INFO           /* DW35
END-IF
*
* Detail Info
*
RESET #DETAIL-LINE
*
* * * * * * * * * * * * * * * * *
RESET #DB-CR
IF ACCT-REG.DEBIT-AMOUNT NE 0
  MOVE 'DB' TO #DB-CR
  MOVE '1' TO #DB-CR-SORT               /* DW38
ELSE
  MOVE 'CR' TO #DB-CR
  MOVE '2' TO #DB-CR-SORT               /* DW38
END-IF
*
PERFORM GET-POL-NUMBER
*
IF ACCT-REG.DEBIT-AMOUNT = 0
  RESET #DL-DEBIT-AMT
ELSE
  MOVE EDITED ACCT-REG.DEBIT-AMOUNT (EM=-ZZZZ,ZZ9.99) TO #DL-DEBIT-AMT
END-IF
*
IF ACCT-REG.CREDIT-AMOUNT = 0
  RESET #DL-CREDIT-AMT
ELSE
  MOVE EDITED ACCT-REG.CREDIT-AMOUNT (EM=-ZZZZ,ZZ9.99) TO #DL-CREDIT-AMT
END-IF
*
MOVE ACCT-REG.DESCRIPTION TO #DL-DESC
*
IF ACCT-REG.AALP-FLAG NE ' '   /* SAL? is now shown on the TR "T" screen
  COMPRESS #DL-DESC 'Flag=' ACCT-REG.AALP-FLAG INTO #DL-DESC
END-IF
*
MOVE ACCT-REG.TXN-CODE TO #DL-TRAN-CODE
MOVE #DL-TRAN-CODE     TO #SUN-TRAN
*
IF SG-AMOUNT (1) = 0
  MOVE #DL-TRAN-CODE TO #SUN-TRAN
  RESET #SUN-CAT-1
  PERFORM GET-GL-ACCT-NUM
  MOVE #SUN-ACCT-NUM TO #DL-ACCT-NUM
*
*   store DETAIL Line
  ADD 1 TO #I4
*
  MOVE #DB-CR-SORT  TO #DLS-DB-CR-SORT       (#I4)    /* DW38
  MOVE #DL-ACCT-NUM TO #DLS-ACCT-NUM-SORT    (#I4)
  MOVE #DETAIL-LINE TO #DETAIL-LINE-STORE    (#I4)
  MOVE ACCT-REG.DEBIT-AMOUNT  TO #DLS-DEBIT  (#I4)
  MOVE ACCT-REG.CREDIT-AMOUNT TO #DLS-CREDIT (#I4)
*
  IF #PROC-BY-BATCH                    /* DW35
    PERFORM STORE-BATCH-INFO
  END-IF
ELSE
  RESET #TOT-SG
  FOR #I5 1 TO 15
    MOVE ACCT-REG.TXN-CODE TO #DL-TRAN-CODE  /* Reset to original DW49
    IF SG-AMOUNT (#I5) NE 0
      ADD SG-AMOUNT (#I5) TO #TOT-SG
      RESET #DL-CREDIT-AMT #DL-DEBIT-AMT
      MOVE #DL-TRAN-CODE TO #SUN-TRAN
      MOVE SG-CATEGORY-1 (#I5) TO #SUN-CAT-1
      move sg-category-2 (#i5) to #sun-cat-2                    /* vt5
      PERFORM GET-GL-ACCT-NUM
      MOVE #SUN-ACCT-NUM TO #DL-ACCT-NUM
*
      IF   (#DL-TRAN-CODE = 'PREP' OR = 'PRER')                    /* DW19
          AND (#SUN-ACCT-NUM = '2235')           /* Must be a prep with a "UN" (BADJ)
        MOVE 'BADJ' TO #DL-TRAN-CODE
      END-IF
*
      IF   (#DL-TRAN-CODE = 'DUEP' OR = 'DUER')                    /* vt5 \/
          AND (#SUN-ACCT-NUM = '2235')
        MOVE 'BADJ' TO #DL-TRAN-CODE
      END-IF                                                      /* vt5 /\
*
      MOVE SG-AMOUNT (#I5) TO #P7-2
*
      ADD 1 TO #I4
*
      IF #DB-CR = 'DB'
        IF #P7-2 LT 0
          MULTIPLY #P7-2 BY -1
          MOVE EDITED #P7-2 (EM=-ZZZZ,ZZ9.99) TO #AMT-12
          MOVE #AMT-12 TO #DL-CREDIT-AMT
          MOVE #P7-2 TO #DLS-CREDIT (#I4)
          MOVE 2 TO #DLS-DB-CR-SORT (#I4)       /* DW38
        ELSE
          MOVE EDITED #P7-2 (EM=-ZZZZ,ZZ9.99) TO #AMT-12
          MOVE #AMT-12 TO #DL-DEBIT-AMT
          MOVE #P7-2   TO #DLS-DEBIT (#I4)
          MOVE 1 TO #DLS-DB-CR-SORT  (#I4)       /* DW38
        END-IF
      ELSE
        IF #P7-2 LT 0
          MULTIPLY #P7-2 BY -1
          MOVE EDITED #P7-2 (EM=-ZZZZ,ZZ9.99) TO #AMT-12
          MOVE #AMT-12 TO #DL-DEBIT-AMT
          MOVE #P7-2   TO #DLS-DEBIT (#I4)
          MOVE 1 TO #DLS-DB-CR-SORT  (#I4)       /* DW38
        ELSE
          MOVE EDITED #P7-2 (EM=-ZZZZ,ZZ9.99) TO #AMT-12
          MOVE #AMT-12 TO #DL-CREDIT-AMT
          MOVE #P7-2   TO #DLS-CREDIT (#I4)
          MOVE 2 TO #DLS-DB-CR-SORT (#I4)       /* DW38
        END-IF
      END-IF
*        store DETAIL Line
      MOVE #DL-ACCT-NUM TO #DLS-ACCT-NUM-SORT   (#I4)
      MOVE #DETAIL-LINE TO #DETAIL-LINE-STORE   (#I4)
*
      IF #PROC-BY-BATCH                                 /* DW35
        PERFORM STORE-BATCH-INFO
      END-IF
    END-IF
  END-FOR
*
  IF   (#TOT-SG NE ACCT-REG.DEBIT-AMOUNT)        /* DW41
      AND (#TOT-SG NE ACCT-REG.CREDIT-AMOUNT)
    MOVE TRUE TO #SG-UNBAL
  END-IF
END-IF
*
*    Below data not used
* MOVE ACCT-REG.SEQUENCE-NUM      TO #dl-SEQ
* MOVE ACCT-REG.DATE-LAST-ACCT-UPDATE  TO #TL-LST-UPDT
* MOVE ACCT-REG.MESSAGE-CODE      TO #TL-MESS-CODE
* MOVE ACCT-REG.AALP-FLAG         TO #TL-AALP-FLAG
*
MOVE ACCT-REG.ID-NUMBER        TO #LAST-GL-CN
MOVE ACCT-REG.CLERK-ID         TO #LAST-GL-CLERK
MOVE ACCT-REG.TRANSACTION-DATN TO #LAST-GL-TRN-DATE
MOVE ACCT-REG.TRANSACTION-TIMN TO #LAST-GL-TRN-TIME
MOVE ACCT-REG.CASH-CODE        TO #LAST-GL-CASH-CODE
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE STORE-BATCH-INFO            /* DW35
* * * * * * * * * * * * * * * * * *
*
FOR #BATCH-X 1 TO 30
  MOVE #DLS-ACCT-NUM (#I4) TO #GL-NUM
  IF #DLS-ACCT-NUM (#I4) = ' '
    MOVE '9999' TO #GL-NUM
  END-IF
*
  IF  (#BAT-GL-NUM (#BATCH-X) = ' ')
      OR (#BAT-GL-NUM (#BATCH-X) = #GL-NUM)
    MOVE #GL-NUM         TO #BAT-GL-NUM    (#BATCH-X)
    ADD #DLS-CREDIT(#I4) TO #BAT-CREDIT-AMT(#BATCH-X)
    ADD #DLS-DEBIT (#I4) TO #BAT-DEBIT-AMT (#BATCH-X)
    ADD 1                TO #BAT-NUM-TRANS (#BATCH-X)
    ESCAPE BOTTOM
  END-IF
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE STORE-GENERAL-INFO
* * * * * * * * * * * * * * * * * *
*
RESET #GENERAL-LINE

IF NOT #PROC-BY-BATCH                   /* DW35
  MOVE ACCT-REG.ID-NUMBER TO #GL-CN
  MOVE ACCT-REG.NAME      TO #GL-NAME
*
  MOVE ACCT-REG.ACCT-DATE TO #DATE-YYYYMMDD
  COMPRESS #DATE-MM #DATE-DD #DATE-YYYY INTO #GL-EFF-DATE WITH '-'
END-IF
*
MOVE ACCT-REG.TRANSACTION-DATN TO #GL-TRAN-DATN            /* DW22
MOVE ACCT-REG.TRANSACTION-DATN TO #DATE-YYYYMMDD
COMPRESS #DATE-MM #DATE-DD #DATE-YYYY INTO #GL-TRN-DATE WITH '-'
*
MOVE ACCT-REG.TRANSACTION-TIMN TO #GL-TRAN-TIMN            /* DW22
MOVE ACCT-REG.TRANSACTION-TIMN TO #TIME-HHMMSSX
COMPRESS #TIME-HH #TIME-MM INTO #GL-TRN-TIME WITH ':'
*
MOVE 'AM' TO #GL-TRN-TIME-AM-PM
IF #TIME-HH-N GT 11
  MOVE 'PM' TO #GL-TRN-TIME-AM-PM
END-IF
*
MOVE ACCT-REG.USER-COMPANY TO #GL-USER-COMPANY              /* DW48
*
MOVE ACCT-REG.CLERK-ID TO #GL-CLERK

#GL-PAY-CODE := CASHCD(<ACCT-REG.CASH-CODE>)   /* bz OI-3078

RESET #GL-FIL-10                      /* DW48
IF ACCT-REG.MONTH-END = 'Y'
  MOVE 'M' TO #GL-FIL-10
END-IF                                /* END DW48
*
MOVE #GL-TRAN-DATN TO #YYYYMMDD
MOVE #GL-TRAN-TIMN TO #TIMN
*
COMPRESS #GL-PAY-CODE #YYYYMMDD-A #TIMN-4 #GL-CLERK INTO #BATCH-ID LEAVING NO
*
MOVE #GL-TRAN-DATN TO #YYYYMMDD
MOVE #GL-TRAN-TIMN TO #TIMN
*
COMPRESS #GL-PAY-CODE #YYYYMMDD-A #TIMN-4 #GL-CLERK INTO #BATCH-ID LEAVING NO
*
IF #PROC-BY-BATCH                    /* DW35
  MOVE #BATCH-ID TO #GL-NAME
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
******************************
DEFINE SUBROUTINE GET-POL-NUMBER        /* DW18
******************************
*
IF ACCT-REG.TXN-CODE = 'ADCR' OR = 'RDCR'
  RESET #DL-POL-NUM
  ESCAPE ROUTINE
END-IF
*
RESET #YYYYMMDD
FIND (1) ST-V WITH MEMBER-KEY = ACCT-REG.ID-NUMBER-A
  FOR #I1 1 TO 9
    IF STATUS (#I1) = 'D'
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-FIND
*
IF (#I1 = 0) OR (#I1 GT 9)
  MOVE 1 TO #I1
END-IF
*
IF ACCT-REG.DESCRIPTION = MASK (MMDDYYYY)
  COMPRESS DESC-YYYY-X DESC-MM-X DESC-DD-X INTO #YYYYMMDD-A LEAVING NO
ELSE
  IF ACCT-REG.DESCRIPTION = MASK (YYYYMMDD)
    COMPRESS DESC-YYYY-Y DESC-MM-Y DESC-DD-Y INTO #YYYYMMDD-A LEAVING NO
  ELSE
    IF ACCT-REG.DESCRIPTION = MASK ('IRT')
      COMPRESS DESC-YYYY-IRT DESC-MM-IRT DESC-DD-IRT
        INTO #YYYYMMDD-A LEAVING NO
    ELSE
      IF ACCT-REG.DESCRIPTION = MASK ('CAP MBR')
        COMPRESS DESC-YYYY-CAP DESC-MM-CAP DESC-DD-CAP
          INTO #YYYYMMDD-A LEAVING NO
      ELSE
        IF ACCT-REG.DESCRIPTION = MASK (YYYY'/'MM'/'DD)
          COMPRESS DESC-YYYY DESC-MM DESC-DD INTO #YYYYMMDD-A LEAVING NO
        END-IF
      END-IF
    END-IF
  END-IF
END-IF
*
IF ACCT-REG.POLICY-NUMBER NE ' '
  MOVE ACCT-REG.POLICY-NUMBER TO #DL-POL-NUM
ELSE
  IF #YYYYMMDD-A = MASK (YYYYMMDD)
    FOR #I1 1 TO 9
      RESET #TERM
*     IF  (PLAN (#I1) = 'LT' OR = 'RT')                            /* YK1
*         OR ((PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z'))   /* YK1
      IF FUNCTION-TERM-POLICY(<PLAN(#I1)>)                         /* YK1
        MOVE TRUE TO #TERM
      END-IF
*
      IF  ((ST-V.ISSUE-DATE (#I1) = #YYYYMMDD)
          AND (ACCT-REG.AALP-FLAG = 'T') AND #TERM)
          OR ((ST-V.ISSUE-DATE (#I1) = #YYYYMMDD)
          AND (ACCT-REG.AALP-FLAG = 'W') AND NOT #TERM)
          OR ((ST-V.ISSUE-DATE (#I1) = #YYYYMMDD)
          AND (NOT ACCT-REG.AALP-FLAG = 'W' OR =' T'))
        ESCAPE BOTTOM
      END-IF
    END-FOR
*
    IF #I1 GT 9
      MOVE 1 TO #I1
    END-IF
  END-IF
*
  CALLNAT 'GPLNMSXX' #POL# ACCT-REG.ID-NUMBER #I1 /* build POL-#
  MOVE #POL# TO #DL-POL-NUM
END-IF
*
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE GET-GL-ACCT-NUM        /* DW18
******************************
*
IF #SUN-CAT-1 = '**'
  RESET #SUN-CAT-1
END-IF
*
IF   (#SUN-TRAN = 'BADJ')
    AND (#SUN-CAT-1 = 'UN')
  RESET #SUN-CAT-1
END-IF
*
IF   (#SUN-TRAN = 'ADCR' OR = 'RDCR')
    AND (#SUN-CAT-1 = 'DC')
  RESET #SUN-CAT-1
END-IF
*
* WRITE 'line 3906 call ATHS03P2' #SUN-TRAN #SUN-ACCT-NUM-IN #SUN-CAT-1
*   'amt=' #SUN-AMT
CALLNAT 'ATHS03P2'
  #SUN-TRAN
  #SUN-ACCT-NUM-IN  /* BLANK HERE
  #SUN-CAT-1
  #SUN-AMT-SIGN
*
  #SUN-ACCT-NUM
  #SUN-AMT-D-C
  #SUN-CN
  #SUN-AMT
  #SUN-SOURCE
*
IF   (#DL-TRAN-CODE = 'ADDL')                    /* DW19
    AND (ACCT-REG.SEQUENCE-NUM = 2)
  MOVE '4315' TO #SUN-ACCT-NUM
  MOVE 'INTV' TO #DL-TRAN-CODE
END-IF
*
if #trlog-start-dt  ge 20140101                                                     /* vt5
    or (acct-reg.transaction-datn ge 20140101)                                           /* vt5
  if #sun-tran = 'PREP' or = 'PRER'  or = 'FPFP' or = 'FPFR'  or = 'FPRP' or = 'RIDP' or = 'RIDR' or = 'DUEP' or = 'DUER' or = 'DISC'            /* vt5
    perform get-new-gl-act-num                                           /* vt5
    if #sun-cat-1 = 'SS'                                                 /* vt7 \/
        and( #trlog-start-dt ge 20160301 or  (acct-reg.transaction-datn ge 20160301))
      #sun-acct-num := 4115
    end-if                                                              /* vt7 /\
  end-if                                                                 /* vt5
end-if                                                                   /* vt5
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE PROCESS-PRIOR-TR-ENTRY    /* DW18
* * * * * * * * * * * * * * * * * * * *
*
* write 'top of process prior' #LAST-GL-CN 'last-rec=ind=' #last-record
*  'last-rec-ind=' #last-record
IF #LAST-GL-CN = 0    /* 0 = 1st time
  ESCAPE ROUTINE
END-IF
*
FOR #I4 1 TO 50                             /* PM53
  IF #DETAIL-LINE-STORE (#I4) = ' '
    ESCAPE BOTTOM
  END-IF
*
  IF #DLS-TRAN-CODE (#I4) = 'BADJ'        /* #i4 is 1st BABJ
*                Clear both BADJ entries if duplicates exists
    COMPUTE #I5 = #I4 + 1
    FOR #I5 #I5 TO 50                         /* PM53
      IF   (#DLS-TRAN-CODE (#I5) = 'BADJ')    /* #i5 is 2nd BADJ
          AND (#DLS-CREDIT (#I5) = #DLS-DEBIT  (#I4))  /* Opposing trans
          AND (#DLS-DEBIT  (#I5) = #DLS-CREDIT (#I4))
          AND (#DLS-POL-NUM (#I5) = #DLS-POL-NUM (#I4))                 /* PM23
        RESET #DETAIL-LINE-STORE (#I4) #DETAIL-LINE-STORE (#I5)
*
        FOR #I6 #I4 TO 50        /* Start at 1st BADJ  PM53
          IF   (#I6 GT #I5)      /* End after 2nd BADJ
              AND (#DETAIL-LINE-STORE (#I7) = ' ')
            ESCAPE BOTTOM
          END-IF
*
          IF #DETAIL-LINE-STORE (#I6) = ' '  /* Compress Table
            FOR #I7 #I6 TO 39                /* PM53
              IF   (#I7 GT #I5)      /* End after 2nd BADJ
                  AND (#DETAIL-LINE-STORE (#I7) = ' ')
                ESCAPE BOTTOM
              END-IF
*
              MOVE #DLS-DB-CR-SORT   (#I7 + 1)                       /* DW38
                TO #DLS-DB-CR-SORT   (#I7)
              MOVE #DLS-ACCT-NUM-SORT(#I7 + 1) TO #DLS-ACCT-NUM-SORT(#I7)
              MOVE #DETAIL-LINE-STORE(#I7 + 1) TO #DETAIL-LINE-STORE(#I7)
              MOVE #DLS-CREDIT       (#I7 + 1) TO #DLS-CREDIT       (#I7)
              MOVE #DLS-DEBIT        (#I7 + 1) TO #DLS-DEBIT        (#I7)
            END-FOR
*
            RESET #DLS-DB-CR-SORT    (50)               /* DW38 PM53
            RESET #DLS-ACCT-NUM-SORT (50)
            RESET #DETAIL-LINE-STORE (50)
            RESET #DLS-CREDIT        (50)
            RESET #DLS-DEBIT         (50)
          END-IF
        END-FOR
      END-IF
    END-FOR
    ESCAPE BOTTOM
  END-IF
END-FOR
*
FOR #I4 1 TO 50 /* Accum Debit & Credit for balanceing   /* PM53
  IF #DETAIL-LINE-STORE (#I4) = ' '
    ESCAPE BOTTOM
  END-IF
  ADD #DLS-CREDIT (#I4) TO #DLS-TOT-CREDIT
  ADD #DLS-DEBIT  (#I4) TO #DLS-TOT-DEBIT
END-FOR
SUBTRACT 1 FROM #I4
*
RESET #GL-AST
IF #DLS-TOT-CREDIT NE #DLS-TOT-DEBIT
  IF #GL-PAY-CODE = 'ADJ'                         /*  bz OI-3078
    MOVE '*' TO #GL-AST
  ELSE                  /* Create a CASH trans on the TA to balance it
    ADD 1 TO #I4
*
    IF #DLS-TOT-CREDIT = 0
      MOVE #DLS-TOT-DEBIT TO #P7-2
      MOVE EDITED #P7-2 (EM=-ZZZZ,ZZ9.99) TO #AMT-12
      MOVE #AMT-12 TO #DLS-CREDIT-AMT (#I4)
      MOVE #P7-2   TO #DLS-CREDIT     (#I4)
      RESET           #DLS-DEBIT      (#I4)
      MOVE 2 TO #DLS-DB-CR-SORT       (#I4)    /* DW38
    ELSE
      IF #DLS-TOT-DEBIT = 0
        MOVE #DLS-TOT-CREDIT TO #P7-2
        MOVE EDITED #P7-2 (EM=-ZZZZ,ZZ9.99) TO #AMT-12
        MOVE #AMT-12 TO #DLS-DEBIT-AMT (#I4)
        MOVE #P7-2   TO #DLS-DEBIT     (#I4)
        RESET           #DLS-CREDIT    (#I4)
        MOVE 1 TO #DLS-DB-CR-SORT      (#I4)    /* DW38
      ELSE
        COMPUTE #NET = #DLS-TOT-DEBIT - #DLS-TOT-CREDIT
        IF #NET LT 0
          MULTIPLY #NET BY -1
          MOVE #NET TO #P7-2
          MOVE EDITED #P7-2 (EM=-ZZZZ,ZZ9.99) TO #AMT-12
          MOVE #AMT-12 TO #DLS-DEBIT-AMT (#I4)
          MOVE #P7-2   TO #DLS-DEBIT     (#I4)
          RESET           #DLS-CREDIT    (#I4)
          MOVE 1 TO #DLS-DB-CR-SORT       (#I4)    /* DW38
        ELSE
          MOVE #NET TO #P7-2
          MOVE EDITED #P7-2 (EM=-ZZZZ,ZZ9.99) TO #AMT-12
          MOVE #AMT-12 TO #DLS-CREDIT-AMT (#I4)
          MOVE #P7-2   TO #DLS-CREDIT     (#I4)
          RESET           #DLS-DEBIT      (#I4)
          MOVE 2 TO #DLS-DB-CR-SORT       (#I4)    /* DW38
        END-IF
      END-IF
    END-IF
*
    IF #GL-PAY-CODE = 'XFR'                   /* DW35
      MOVE '2234' TO #DLS-ACCT-NUM (#I4) #DLS-ACCT-NUM-SORT (#I4)
      MOVE 'SUSP' TO #DLS-TRAN-CODE (#I4)
    ELSE
      MOVE '1010' TO #DLS-ACCT-NUM (#I4) #DLS-ACCT-NUM-SORT (#I4)
      MOVE 'CASH' TO #DLS-TRAN-CODE (#I4)
    END-IF
*
    RESET          #DLS-DESC  (#I4)
    ADD #DLS-CREDIT (#I4) TO #DLS-TOT-CREDIT
    ADD #DLS-DEBIT  (#I4) TO #DLS-TOT-DEBIT
*
    IF #PROC-BY-BATCH                          /* DW35
      PERFORM STORE-BATCH-INFO
    END-IF
  END-IF
END-IF
*
IF #ONLY-OOB
    AND ((#GL-AST NE '*') AND (NOT #SG-UNBAL))              /* DW20   DW41
  RESET #I4 #DETAIL-LINE-STORE-AREA (*) #DLS-TOT-CREDIT #DLS-TOT-DEBIT
  ESCAPE ROUTINE
END-IF
*
IF #SG-UNBAL             /* Sungard OOB                  DW41
  MOVE '#' TO #GL-AST
END-IF
*
RESET #SG-UNBAL                              /* DW41
*
IF #PROC-BY-BATCH                   /* DW35
  IF   (ACCT-REG.TRANSACTION-DATN = #LAST-GL-TRN-DATE)      /* Same batch
      AND (ACCT-REG.TRANSACTION-TIMN = #LAST-GL-TRN-TIME)
      AND (ACCT-REG.CASH-CODE        = #LAST-GL-CASH-CODE)
      AND (ACCT-REG.CLERK-ID         = #LAST-GL-CLERK)
*  AND (ACCT-REG.ID-NUMBER NE 999999)                       /* PM46
      AND (NOT #LAST-RECORD)
    RESET #I4 #DETAIL-LINE-STORE-AREA (*) #DLS-TOT-CREDIT #DLS-TOT-DEBIT
*   write 'escape routine same batch'
    ESCAPE ROUTINE  /* Continue with same batch
  END-IF
*
  RESET #DETAIL-LINE-STORE-AREA (*) #DLS-CREDIT (*) #DLS-DEBIT (*)
*
  FOR #BATCH-X 1 TO 30       /* Find how many G/L entries
    IF #BAT-GL-NUM (#BATCH-X) = ' '
      RESET #DETAIL-LINE-STORE-AREA (#BATCH-X) /* Clear remaining lines
      ESCAPE TOP
    ELSE
      RESET #BATCH-DEBIT-AMT-DISP #BATCH-CREDIT-AMT-DISP
*
      IF (#BAT-DEBIT-AMT(#BATCH-X) NE 0) AND (#BAT-CREDIT-AMT(#BATCH-X) NE 0)
        IF #BAT-DEBIT-AMT (#BATCH-X) GT #BAT-CREDIT-AMT (#BATCH-X)
          SUBTRACT #BAT-CREDIT-AMT (#BATCH-X) FROM #BAT-DEBIT-AMT (#BATCH-X)
          RESET #BAT-CREDIT-AMT (#BATCH-X)
        ELSE
          SUBTRACT #BAT-DEBIT-AMT (#BATCH-X) FROM #BAT-CREDIT-AMT (#BATCH-X)
          RESET #BAT-DEBIT-AMT (#BATCH-X)
        END-IF
      END-IF
*
      IF #BAT-DEBIT-AMT (#BATCH-X) NE 0
        MOVE EDITED #BAT-DEBIT-AMT  (#BATCH-X)(EM=-ZZZZ,ZZ9.99)
          TO #BATCH-DEBIT-AMT-DISP
      END-IF
*
      IF #BAT-CREDIT-AMT (#BATCH-X) NE 0
        MOVE EDITED #BAT-CREDIT-AMT (#BATCH-X) (EM=-ZZZZ,ZZ9.99)
          TO #BATCH-CREDIT-AMT-DISP
      END-IF
*
      IF #BAT-DEBIT-AMT (#BATCH-X) NE 0                           /* DW38
        MOVE 1 TO #DLS-DB-CR-SORT  (#BATCH-X)    /* DW38
      ELSE
        MOVE 2 TO #DLS-DB-CR-SORT  (#BATCH-X)    /* DW38
      END-IF
*
      MOVE #BAT-GL-NUM(#BATCH-X) TO #DLS-ACCT-NUM-SORT(#BATCH-X) /*For sorting
      RESET #DLS-POL-NUM   (#BATCH-X)
      MOVE #BAT-GL-NUM(#BATCH-X)TO #DLS-ACCT-NUM  (#BATCH-X)
      RESET #DLS-TRAN-CODE (#BATCH-X)
      MOVE #BATCH-DEBIT-AMT-DISP  TO #DLS-DEBIT-AMT  (#BATCH-X)
      MOVE #BATCH-CREDIT-AMT-DISP TO #DLS-CREDIT-AMT (#BATCH-X)
      COMPRESS 'Num Trans =' #BAT-NUM-TRANS(#BATCH-X) TO #DLS-DESC(#BATCH-X)
      ADD #BAT-DEBIT-AMT  (#BATCH-X) TO #DLS-DEBIT  (#BATCH-X)
      ADD #BAT-CREDIT-AMT (#BATCH-X) TO #DLS-CREDIT (#BATCH-X)
      MOVE #BATCH-X TO #NUM-DTLS
    END-IF
  END-FOR
ELSE
  MOVE #I4 TO #NUM-DTLS
END-IF
*
CALLNAT 'SAGSRT13' #DETAIL-LINE-STORE-AREA (*) #SRT-PARM-2  /* SORT
*
IF *DEVICE NE 'BATCH'                          /* DW21
  COMPUTE #LINES-NEEDED = #NUM-DTLS + 1  /* 1 for for general line
*
  IF #LINES-NEEDED GT #LINES-REMAINING
    IF #LAST-RECORD
      RESET #LAST-RECORD
    END-IF
*
    PERFORM DISPLAY-SCREEN
*
    IF #CGA-SCR-COMMAND = MASK ('-')
      ESCAPE ROUTINE
    END-IF
  END-IF
*
* Move ACCOUNTING TRANS TO SCREEN and display IT
*
  IF #SCN-ROW = 1
    ADD 1 TO #IPG
    MOVE #CURR-ISN TO #1ST-ISN-TBL (#IPG)
  END-IF
*
  MOVE #GENERAL-LINE TO #SCN-LINE2 (#SCN-ROW)
  MOVE (AD=I)        TO #SCN-LINE-A(#SCN-ROW)
  ADD 1 TO #SCN-ROW
  COMPUTE #LINES-REMAINING = #LINES-REMAINING - 1
END-IF
*
FOR #I4 1 TO 50                                 /* PM53
  IF #DETAIL-LINE-STORE (#I4) = ' '
    ESCAPE TOP
  END-IF
*
  IF *DEVICE = 'BATCH'                          /* DW21
    PERFORM WRITE-TA-EXTRACT
    ESCAPE TOP
  END-IF
*
  IF #LINES-REMAINING = 0                       /* PM53
    PERFORM DISPLAY-SCREEN                      /* PM53
    IF #CGA-SCR-COMMAND = MASK ('-')            /* PM53
      ESCAPE ROUTINE                            /* PM53
    END-IF                                      /* PM53
  END-IF                                        /* PM53
*
  MOVE #DETAIL-LINE-STORE (#I4) TO #SCN-LINE2 (#SCN-ROW)
  MOVE (AD=I)                   TO #SCN-LINE-A(#SCN-ROW)
  ADD 1 TO #SCN-ROW
  COMPUTE #LINES-REMAINING = #LINES-REMAINING - 1
END-FOR
*
IF *DEVICE NE 'BATCH'                          /* DW21
  ADD 1 TO #SCN-ROW                            /* Blank line between CN's
  COMPUTE #LINES-REMAINING = #LINES-REMAINING - 1
END-IF
*
RESET #I4 #DETAIL-LINE-STORE-AREA (*) #DLS-TOT-CREDIT #DLS-TOT-DEBIT
RESET #BAT-GL-NUM    (*)
  #BAT-CREDIT-AMT(*)
  #BAT-DEBIT-AMT (*)
  #BAT-NUM-TRANS (*)
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE WRITE-TA-EXTRACT    /* DW21
* * * * * * * * * * * * * * * * * *
*
* write 'G5000PTR line 4420 TOP of Write-ta-extract'
COMPRESS #GL-CN
  #TAB #GL-NAME
  #TAB #GL-EFF-DATE
  #TAB #GL-TRN-DATE
  #TAB #GL-TRN-TIME #GL-TRN-TIME-AM-PM
  #TAB #GL-CLERK
  #TAB #GL-PAY-CODE
  #TAB #DLS-POL-NUM    (#I4)
  #TAB #DLS-ACCT-NUM   (#I4)
  #TAB #DLS-TRAN-CODE  (#I4)
  #TAB #DLS-DEBIT-AMT  (#I4)
  #TAB #DLS-CREDIT-AMT (#I4)
  #TAB #DLS-DESC       (#I4)
  #TAB #BATCH-ID
  INTO #TA-EXTRACT LEAVING NO
WRITE WORK FILE 1 #TA-EXTRACT
*
IF #DLS-DEBIT (#I4) NE 0                  /* DW22
  MOVE EDITED #DLS-DEBIT (#I4) (EM=ZZZZZZZ.99) TO #AMT-DISP

ELSE
  COMPUTE #AMT = #DLS-CREDIT (#I4) * -1
  MOVE EDITED #AMT (EM=-ZZZZZZZ.99) TO #AMT-DISP
END-IF
MOVE LEFT #AMT-DISP TO #AMT-DISP
*
COMPRESS #GL-TRN-DATE                /* DW22
  ',' #BATCH-ID
  ',' '4'
  ',' #DLS-ACCT-NUM (#I4) '-00'
  ','
  ',' #AMT-DISP
  ','
  INTO #PEACHTREE LEAVING NO
WRITE WORK 2 #PEACHTREE
ADD 1 TO #NUM-PEACH
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE DISPLAY-SCREEN
* * * * * * * * * * * * * * * * *
*
IF *DEVICE = 'BATCH'                    /* Dw21
  ESCAPE ROUTINE
END-IF
*
IF #LAST-RECORD
  MOVE #CGA-ORIG-COMMAND TO #CGA-SCR-COMMAND
* RESET #CGA-SCR-ID
  RESET #CGA-SCR-SUFFIX
  MOVE (AD=I) TO #SCN-LINE-A (22)
  MOVE 'Last Screen' TO #SCN-LINE  (22)
    #SCN-LINE2 (22)
  COMPRESS #TEXT '- Last Screen' INTO #TEXT             /* DW35
*
  IF #NUM-FOUND = 0
    COMPRESS #SCN-LINE(22) '- No Transactions Found' INTO #SCN-LINE (22)
    COMPRESS #SCN-LINE2(22) '-No Transactions Found' INTO #SCN-LINE2(22)
  END-IF
ELSE
  MOVE 'Press ENTER to continue' TO #SCN-LINE  (22)
    #SCN-LINE2 (22)
  MOVE (AD=I) TO #SCN-LINE-A (22)
END-IF
*
IF #SCN-REGISTER-TYPE EQ 'T'
  INPUT USING MAP 'G5001MTR'
ELSE
  IF #NEW-LAYOUT                           /* DW18
    IF #LAST-RECORD AND #FROM-AM              /* DW42
      MOVE 'GM' TO #CGA-SCR-COMMAND
    END-IF
*
    INPUT TEXT #TEXT USING MAP 'G5005MTR'
  ELSE
    INPUT USING MAP 'G5002MTR'
  END-IF
END-IF
*
IF #CGA-SCR-COMMAND = MASK ('-')
  IGNORE
ELSE
  IF #CGA-SCR-COMMAND NE '*'
    FETCH 'G1000PXX'
  END-IF
END-IF
*
RESET #SCN-LINE    (1:22)
RESET #SCN-LINE2   (1:22)
RESET #SCN-LINE-HDR(1:22)
RESET #SCN-LINE-A  (1:22)
ASSIGN #SCN-ROW = 1
*
IF #NEW-LAYOUT                       /* DW18
  ASSIGN #LINES-REMAINING = 20
ELSE
  ASSIGN #LINES-REMAINING = 21
END-IF
*
END-SUBROUTINE /* (2357)
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-SECURITY   /* PM3
* * * * * * * * * * * * * * * * *
*
* WRITE 'top of check-security'
* WRITE 'lin 4740' ACCT-REG.ID-NUMBER TRLOG.ID-NUMBER TR-V.ID-NUMBER
*   'PI=' #PROCESS-IND
*   'cga-usrr-comp=' #CGA-USER-COMPANY
*   'usr-comp=' #cga-USER-COMPANY 'TR ACCT User COMP=' ACCT-REG.USER-COMPANY
*   'new/old-data=' TRLOG.NEW-DATA-1-65 (1) TRLOG.OLD-DATA-1-65 (1)
*   'new/old-data=' TR-V.NEW-DATA-3 (1) TR-V.OLD-DATA-3 (1)
*    'TRmaint =' TRLOG.USER-COMPANY
*
IF #SCN-REGISTER-TYPE = 'T'        /* REQUEST FOR TRANS REG   /* DW52
  IF #CGA-USER-COMPANY = 'I'
    IF  (TR-V.NEW-DATA-3 (1)     = MASK ('FM-'))
        OR (TR-V.OLD-DATA-3 (1)     = MASK ('FM-'))
        OR (TRLOG.NEW-DATA-1-65 (1) = MASK ('FM-'))
        OR (TRLOG.OLD-DATA-1-65 (1) = MASK ('FM-'))
      ESCAPE TOP
    END-IF
  END-IF
*
  ESCAPE ROUTINE   /* Now Both Companies sees ALL OTHER Maintenance recs
END-IF
*
IF #CGA-USER-COMPANY = 'S'     /* An AFFL user                /* DW52
  IF ACCT-REG.USER-COMPANY NE 'S'
    WRITE 'Bypass aafm' ACCT-REG.ID-NUMBER 'user-comp' ACCT-REG.USER-COMPANY
    ESCAPE TOP
  END-IF
ELSE
  IF ACCT-REG.USER-COMPANY = 'S'
    WRITE 'Bypass afsc' ACCT-REG.ID-NUMBER 'user-comp' ACCT-REG.USER-COMPANY
    ESCAPE TOP
  END-IF
END-IF
*
* IF #PROCESS-TYPE = 'S' OR = 'D'                 /* TM3   /* DW52
*   DECIDE FOR FIRST CONDITION
*     WHEN #CGA-USER-COMPANY = 'B'
*       IGNORE
*     WHEN #CGA-USER-COMPANY = 'I'
*       IF NOT #PROCESS-IND = 'G' OR = 'I' OR = ' ' OR = 'D' OR = 'O'
*                             OR = 'C'
*         ESCAPE TOP
*       END-IF
*     WHEN #CGA-USER-COMPANY = 'S'
*       IF NOT #PROCESS-IND = 'G' OR = 'S'
*         ESCAPE TOP
*       END-IF
*     WHEN NONE
*       IGNORE
*   END-DECIDE
* ELSE                                                              /* TM3
*   IF #PROCESS-TYPE = 'T' OR = 'C'                                 /* TM3
*     CALLNAT 'GCLIDSXX' USING #TL-CLERK                            /* TM3
*                            #TRANS-COMPANY-ID                      /* TM3
*     IF #TRANS-COMPANY-ID NE 'S'                                   /* TM3
*       ESCAPE TOP                                                  /* TM3
*     END-IF                                                        /* TM3
*   END-IF                                                          /* TM3
* END-IF                                                            /* TM3
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE PRE-READ-ACCOUNTING    /* DW8
* * * * * * * * * * * * * * * *
*
RESET #SRT-NUM-ENTRIES
READ ACCT-REG BY ID-NUMBER FROM #SCN-ID        /* DW6
  IF ACCT-REG.ID-NUMBER GT #SCN-ID
    ESCAPE BOTTOM
  END-IF
*
  IF  (ACCT-REG.TRANSACTION-DATN < #TRLOG-START-DT)
      OR (ACCT-REG.TRANSACTION-DATN > #TRLOG-END-DT)
      OR (ACCT-REG.TRANSACTION-TIMN < #TRLOG-START-TIME)
      OR (ACCT-REG.TRANSACTION-TIMN > #TRLOG-END-TIME)
    ESCAPE TOP
  END-IF
*
  IF #SRT-NUM-ENTRIES GE #MAX-ENTRIES
    WRITE 'Exceeds max TR sorted entries CALL EDS'
    ESCAPE ROUTINE
  END-IF
*
  ADD 1 TO #SRT-NUM-ENTRIES
  MOVE *ISN                      TO #ISN     (#SRT-NUM-ENTRIES)
  MOVE ACCT-REG.TRANSACTION-DATN TO #TR-DATN (#SRT-NUM-ENTRIES)
  MOVE ACCT-REG.TRANSACTION-TIMN TO #TR-TIMN (#SRT-NUM-ENTRIES)
END-READ
* DISPLAY #SRT-NUM-ENTRIES #ISN(1:9) #TR-DATN(1:9) #TR-TIMN (1:9)
* ITE #SRT-SORT-TYPE #SRT-ENTRY-LENGTH #SRT-KEY-LENGTH #SRT-KEY-POSITION
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE PRE-READ-MAINTENANCE   /* DW8
* * * * * * * * * * * * * * * *
*
RESET #SRT-NUM-ENTRIES
*
READ TRLOG BY ID-NUMBER FROM #SCN-ID        /* DW6
  IF TRLOG.ID-NUMBER GT #SCN-ID
    ESCAPE BOTTOM
  END-IF
*
  IF  (TRLOG.TRANSACTION-DATN < #TRLOG-START-DT)
      OR (TRLOG.TRANSACTION-DATN > #TRLOG-END-DT)
      OR (TRLOG.TRANSACTION-TIMN < #TRLOG-START-TIME)
      OR (TRLOG.TRANSACTION-TIMN > #TRLOG-END-TIME)
*   OR ((#SCN-COMMAND NE ' ') AND (#SCN-COMMAND NE #CMND))  /* PM54
    ESCAPE TOP
  END-IF
*
  IF   (#CGA-USER-COMPANY = 'I')                        /* DW52
      AND (TRLOG.USER-COMPANY = 'S')
      AND ((TRLOG.NEW-DATA-1-65 (1) = MASK ('FM-'))
      OR (TRLOG.OLD-DATA-1-65 (1) = MASK ('FM-')))
    ESCAPE TOP
  END-IF
*
  IF #SRT-NUM-ENTRIES GE #MAX-ENTRIES
    WRITE 'Exceeds max TR sorted entries CALL EDS'
    ESCAPE ROUTINE
  END-IF
*
  ADD 1 TO #SRT-NUM-ENTRIES
  MOVE *ISN                      TO #ISN  (#SRT-NUM-ENTRIES)
  MOVE TRLOG.TRANSACTION-DATN TO #TR-DATN (#SRT-NUM-ENTRIES)
  MOVE TRLOG.TRANSACTION-TIMN TO #TR-TIMN (#SRT-NUM-ENTRIES)
END-READ
* DISPLAY #SRT-NUM-ENTRIES #ISN(1:9) #TR-DATN(1:9) #TR-TIMN (1:9)
* RTE #SRT-SORT-TYPE #SRT-ENTRY-LENGTH #SRT-KEY-LENGTH #SRT-KEY-POSITION
*
END-SUBROUTINE
*
* * * * * * * *
DEFINE SUBROUTINE SHOW-SYNCED-FIELDS   /* DW12                 DW52
* * * * * * * *
*
* WRITE 'top of sync show'
IF (#CGA-CLERK =   'VXT' OR = 'KEC'  OR = 'LR' OR = 'ALB')   /* RE1 vt4 removed 'SV' and DRW
    AND #SHOW-SYNC                                         /* DW43
    AND (((#SCN-ID = 0) AND (#SCN-COMMAND = ' '))
    OR    (#SCN-ID = TRLOG.ID-NUMBER))
  RESET #FND-SYNC
  FOR #I3 1 TO 60
    IF SYNC-FLD-NUM (#I3) = 0
      ESCAPE BOTTOM
    END-IF
*
    MOVE TRUE TO #FND-SYNC
*     DISPLAY 'CN' TRLOG.ID-NUMBER
*       #I3 (EM=Z9)
*       'I/S' TRLOG.USER-COMPANY                   /* DW52
*       'CLK/ID' TRLOG.CLERK-ID
*       'DATN' TRLOG.TRANSACTION-DATN
*       'TIMN' TRLOG.TRANSACTION-TIMN
*       'FLD/NUM' SYNC-FLD-NUM(#I3)
*       'OLD/DATA' SYNC-FLD-OLD-DATA(#I3) (EM=XXXXXXXXXXXXXXXXX)
*       'NEW/DATA' SYNC-FLD-NEW-DATA(#I3) (EM=XXXXXXXXXXXXXXXXX)
  END-FOR
*
  IF #FND-SYNC
    WRITE '******'
  END-IF
END-IF
*
END-SUBROUTINE                         /* END DW52
*
*****************
define subroutine get-new-gl-act-num                             /* vt5
*****************
*
reset #pol-num #plan
find st-v with st-v.id-number = acct-reg.id-number
  for #k 1 9
    callnat 'GPLNMSXX' #pol-num acct-reg.id-number #k
    if #pol-num = acct-reg.policy-number
      move st-v.plan(#k) to #plan
      escape bottom
    end-if
  end-for
end-find
*
if #plan = 'RT' and #sun-cat-2 = 'LT'      /* vt6 \/
  move #sun-cat-2 to #plan
end-if                                     /* vt6 /\
*
if function-term-policy(<#plan>)
  decide on first value of #plan
    value 'LT'
      if #sun-cat-1 = '1Y'
        #sun-acct-num := 4021
      else
        if #sun-cat-1 = 'RN'
          #sun-acct-num := 4031
        end-if
      end-if
    value 'RT'
      if #sun-cat-1 = '1Y'
        #sun-acct-num := 4023
      else
        if #sun-cat-1 = 'RN'
          #sun-acct-num := 4033
        end-if
      end-if
    value 'EZ'
      if #sun-cat-1 = '1Y'
        #sun-acct-num := 4024
      else
        if #sun-cat-1 = 'RN'
          #sun-acct-num := 4034
        end-if
      end-if
    none value
      if #sun-cat-1 = '1Y'
        #sun-acct-num := 4022
      else
        if #sun-cat-1 = 'RN'
          #sun-acct-num := 4032
        end-if
      end-if
  end-decide
else
  IF VAWL-TRUE(<#plan>)
      or (#plan = mask(NN'F')) or ( #plan = mask(N'P'))
    if #sun-cat-1 = '1Y'
      #sun-acct-num := 4026
    else
      if #sun-cat-1 = 'RN'
        #sun-acct-num := 4036
      end-if
    end-if
  else
    decide on first value of #plan
      value 'GPL' , 'GP2'
        if #sun-cat-1 = '1Y'
          #sun-acct-num := 4025
        else
          if #sun-cat-1 = 'RN'
            #sun-acct-num := 4035
          end-if
        end-if
      value 'AL'
        if #sun-cat-1 = '1Y'
          #sun-acct-num := 4028
        end-if
      value 'SO'
        if #sun-cat-1 = 'SO'
          #sun-acct-num := 4112
        end-if
      none value
        ignore
    end-decide
  end-if
end-if
*
if #sun-cat-1 = 'SP' and #sun-cat-2 ne 'AL'    /* vt 11/19/2014
  #sun-acct-num := 4027
end-if
*
if #sun-cat-1 = 'SP'  and #sun-cat-2 eq 'AL'  /* vt 11/19/2014
  #sun-acct-num := 4028
end-if
*
end-subroutine
* = = = = = = = = = = = = = = = = = = = = = = = = =
DEFINE sbr_GET_Mem                                             /*  bz1
CALLNAT 'G50SHATR' #CGA-SCR-ID New-SCR-ID p_MSG p_Last_Date  /*  bz1
END-SUBROUTINE                                                 /*  bz1
END
