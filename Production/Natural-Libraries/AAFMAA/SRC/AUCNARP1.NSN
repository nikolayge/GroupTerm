* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCNARP1'
*
* DESCRIPTION
*   XML Parser implementationfor file:
*   null
*   using PARSE XML statement and datastructure 'AUCAAR01'
*
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
LOCAL USING AUCAAR01
LOCAL USING AUCAAD01
LOCAL USING PARSER-X
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
*
LOCAL
1 #TRUE              (A4) CONST <'TRUE'>
1 BLANK              (A1) CONST <' '>
1 #PARSE-ERROR       (I4) CONST <-7>
1 #NATURAL-ERROR     (I4) CONST <-3>
1 #ERROR-LOG         (I4) CONST <3>
*
1 #XML-TEMP          (A)   DYNAMIC
1 #UPDATED           (L)
1 #NOLOG             (L)
1 #LEN               (I4)
1 #ZIP-CODE          (A9) 1 REDEFINE #ZIP-CODE
  2 #ZIP5    (N5)
  2 #ZIP4    (N4)
1 REDEFINE #ZIP-CODE
  2 #ZIPN    (N9)
1 #CONTACT-SYNCH     (I4) CONST <2>
1 #STATUS-ISN        (P8) CONST <0>
END-DEFINE
*
ASSIGN #LEN := *LENGTH (#XML_INPUT)
IF #LEN <= 0
  AddressRelation.ErrorCode := #Parse-error
  AddressRelation.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNARS1' #XML_OUTPUT AddressRelation
  ESCAPE ROUTINE
END-IF
RESET AddressRelation
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
AddressRelation.ErrorCode := #PARSE-ERROR
AddressRelation.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNARS1' #XML_OUTPUT AddressRelation
END-SUBROUTINE
*
DEFINE SUBROUTINE CALLBACK
/*                ========
IF XML_PARSER_CONTENT_IS_EMPTY THEN
  IGNORE
ELSE
  #XML_VALUE := *TRIM (#XML_VALUE)
  MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
  PERFORM PARSE-DOCUMENT
END-IF
END-SUBROUTINE
*
#XML_OUTPUT := BLANK
Address.ContactID  := AddressRelation.ContactID
AddressRelation.CN := F-GET-CN (< AddressRelation.ContactID >)
IF AddressRelation.ActionType > 0
    OR Address.ActionType > 0
  CALLNAT 'AUCNADM2' AddressRelation Address
  IF AddressRelation.ErrorCode = 0
      AND Address.ErrorCode = 0
    END TRANSACTION
    CALLNAT 'MBRDATA'
      #STATUS-ISN
      #XML_OUTPUT
      #XML_PATH     /* Only output
      #XML_VALUE    /* Queue response
      #CONTACT-SYNCH
      AddressRelation.ContactID
    CALLNAT 'AUCNADG1' AddressRelation.ContactID #XML_OUTPUT
  ELSE
    BACKOUT TRANSACTION
    COMPRESS #XML_OUTPUT '<AddressRelations'
      '>' INTO #XML_OUTPUT LEAVING NO
    CALLNAT 'AUCNARS1' #XML-TEMP AddressRelation
    COMPRESS #XML_OUTPUT #XML-TEMP INTO #XML_OUTPUT
    COMPRESS #XML_OUTPUT  '</AddressRelations'
      '>' INTO #XML_OUTPUT LEAVING NO
  END-IF
ELSE   /* Get Request
  COMPRESS #XML_OUTPUT '<AddressRelation'
    '>' INTO #XML_OUTPUT LEAVING NO
  AddressRelation.AddressPoolID := Address.AddressPoolID
  CALLNAT 'AUCNARM1' AddressRelation
  CALLNAT 'AUCNADM1' Address
  CALLNAT 'AUCNARS1' #XML-TEMP AddressRelation
  COMPRESS #XML_OUTPUT #XML-TEMP INTO #XML_OUTPUT
  CALLNAT 'AUCNADS1' #XML-TEMP Address
  COMPRESS #XML_OUTPUT #XML-TEMP INTO #XML_OUTPUT
  COMPRESS #XML_OUTPUT  '</AddressRelation'
    '>' INTO #XML_OUTPUT LEAVING NO
END-IF
*
* ------------------------------------------------- CALL THE PARSER
DEFINE PARSE-DOCUMENT
/*     ==============
**PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE #XML_VALUE
*
DECIDE ON FIRST #XML_PATH
  VALUE 'AddressRelation//'
    IGNORE
  VALUE 'AddressRelation'
    RESET INITIAL AddressRelation
  VALUE 'AddressRelation/ActionType//'
    IGNORE
  VALUE 'AddressRelation/ActionType'
    IGNORE
  VALUE 'AddressRelation/ActionType/$'
    AddressRelation.ActionType := VAL(#XML_VALUE)
  VALUE 'AddressRelation/ErrorCode//'
    IGNORE
  VALUE 'AddressRelation/ErrorCode'
    IGNORE
  VALUE 'AddressRelation/ErrorCode/$'
    AddressRelation.ErrorCode := VAL(#XML_VALUE)
  VALUE 'AddressRelation/ErrorDescription//'
    IGNORE
  VALUE 'AddressRelation/ErrorDescription'
    IGNORE
  VALUE 'AddressRelation/ErrorDescription/$'
    AddressRelation.ErrorDescription := #XML_VALUE
  VALUE 'AddressRelation/ContactID//'
    IGNORE
  VALUE 'AddressRelation/ContactID'
    IGNORE
  VALUE 'AddressRelation/ContactID/$'
    AddressRelation.ContactID := VAL(#XML_VALUE)
  VALUE 'AddressRelation/CN//'
    IGNORE
  VALUE 'AddressRelation/CN'
    IGNORE
  VALUE 'AddressRelation/CN/$'
    AddressRelation.CN := VAL(#XML_VALUE)
  VALUE 'AddressRelation/LastUpdatedDate//'
    IGNORE
  VALUE 'AddressRelation/LastUpdatedDate'
    IGNORE
  VALUE 'AddressRelation/LastUpdatedDate/$'
    AddressRelation.LastUpdatedDate := VAL(#XML_VALUE)
  VALUE 'AddressRelation/LastUpdatedTime//'
    IGNORE
  VALUE 'AddressRelation/LastUpdatedTime'
    IGNORE
  VALUE 'AddressRelation/LastUpdatedTime/$'
    AddressRelation.LastUpdatedTime := VAL(#XML_VALUE)
  VALUE 'AddressRelation/LastUpdatedUser//'
    IGNORE
  VALUE 'AddressRelation/LastUpdatedUser'
    IGNORE
  VALUE 'AddressRelation/LastUpdatedUser/$'
    AddressRelation.LastUpdatedUser := #XML_VALUE
  VALUE 'AddressRelation/SystemSource//'
    IGNORE
  VALUE 'AddressRelation/SystemSource'
    IGNORE
  VALUE 'AddressRelation/SystemSource/$'
    AddressRelation.SystemSource := #XML_VALUE
  VALUE 'AddressRelation/User//'
    IGNORE
  VALUE 'AddressRelation/User'
    IGNORE
  VALUE 'AddressRelation/User/$'
    IF #XML_VALUE NE BLANK
      AddressRelation.ClerkID := FUNCTION-WEB-USER(<#XML_VALUE>)(1)
      AddressRelation.User := FUNCTION-WEB-USER(<#XML_VALUE>)(2)
    END-IF
  VALUE 'AddressRelation/AddressPoolID//'
    IGNORE
  VALUE 'AddressRelation/AddressPoolID'
    IGNORE
  VALUE 'AddressRelation/AddressPoolID/$'
    AddressRelation.AddressPoolID := VAL(#XML_VALUE)
  VALUE 'AddressRelation/RelationID//'
    IGNORE
  VALUE 'AddressRelation/RelationID'
    IGNORE
  VALUE 'AddressRelation/RelationID/$'
    AddressRelation.RelationID := VAL(#XML_VALUE)
  VALUE 'AddressRelation/AddressTypeCode//'
    IGNORE
  VALUE 'AddressRelation/AddressTypeCode'
    IGNORE
  VALUE 'AddressRelation/AddressTypeCode/$'
    AddressRelation.AddressTypeCode := #XML_VALUE
  VALUE 'AddressRelation/AddressLocationCode//'
    IGNORE
  VALUE 'AddressRelation/AddressLocationCode'
    IGNORE
  VALUE 'AddressRelation/AddressLocationCode/$'
    AddressRelation.AddressLocationCode := #XML_VALUE
  VALUE 'AddressRelation/Source//'
    IGNORE
  VALUE 'AddressRelation/Source'
    IGNORE
  VALUE 'AddressRelation/Source/$'
    AddressRelation.Source := #XML_VALUE
  VALUE 'AddressRelation/Undeliverable//'
    IGNORE
  VALUE 'AddressRelation/Undeliverable'
    IGNORE
  VALUE 'AddressRelation/Undeliverable/$'
    IF #XML_VALUE = #TRUE
      AddressRelation.Undeliverable := 'Y'
    ELSE
      AddressRelation.Undeliverable := 'N'
    END-IF
  VALUE 'AddressRelation/Protected//'
    IGNORE
  VALUE 'AddressRelation/Protected'
    IGNORE
  VALUE 'AddressRelation/Protected/$'
    IF #XML_VALUE = #TRUE
      AddressRelation.Protected := 'Y'
    ELSE
      AddressRelation.Protected := 'N'
    END-IF
  VALUE 'AddressRelation/AttentionLine//'
    IGNORE
  VALUE 'AddressRelation/AttentionLine'
    IGNORE
  VALUE 'AddressRelation/AttentionLine/$'
    AddressRelation.AttentionLine := #XML_VALUE
  NONE
    PERFORM PARSE-ADDRESS
END-DECIDE
*
END-SUBROUTINE
*
DEFINE PARSE-ADDRESS
/*     =============
DECIDE ON FIRST #XML_PATH
  VALUE 'AddressRelation/Address//'
    IGNORE
  VALUE 'AddressRelation/Address'
    IGNORE
  VALUE 'AddressRelation/Address/ActionType//'
    IGNORE
  VALUE 'AddressRelation/Address/ActionType'
    IGNORE
  VALUE 'AddressRelation/Address/ActionType/$'
    Address.ActionType := VAL(#XML_VALUE)
  VALUE 'AddressRelation/Address/ErrorCode//'
    IGNORE
  VALUE 'AddressRelation/Address/ErrorCode'
    IGNORE
  VALUE 'AddressRelation/Address/ErrorCode/$'
    Address.ErrorCode := VAL(#XML_VALUE)
  VALUE 'AddressRelation/Address/ErrorDescription//'
    IGNORE
  VALUE 'AddressRelation/Address/ErrorDescription'
    IGNORE
  VALUE 'AddressRelation/Address/ErrorDescription/$'
    Address.ErrorDescription := #XML_VALUE
  VALUE 'AddressRelation/Address/ContactID//'
    IGNORE
  VALUE 'AddressRelation/Address/ContactID'
    IGNORE
  VALUE 'AddressRelation/Address/ContactID/$'
    Address.ContactID := VAL(#XML_VALUE)
  VALUE 'AddressRelation/Address/CN//'
    IGNORE
  VALUE 'AddressRelation/Address/CN'
    IGNORE
  VALUE 'AddressRelation/Address/CN/$'
    Address.CN := VAL(#XML_VALUE)
  VALUE 'AddressRelation/Address/LastUpdatedDate//'
    IGNORE
  VALUE 'AddressRelation/Address/LastUpdatedDate'
    IGNORE
  VALUE 'AddressRelation/Address/LastUpdatedDate/$'
    Address.LastUpdatedDate := VAL(#XML_VALUE)
  VALUE 'AddressRelation/Address/LastUpdatedTime//'
    IGNORE
  VALUE 'AddressRelation/Address/LastUpdatedTime'
    IGNORE
  VALUE 'AddressRelation/Address/LastUpdatedTime/$'
    Address.LastUpdatedTime := VAL(#XML_VALUE)
  VALUE 'AddressRelation/Address/LastUpdatedUser//'
    IGNORE
  VALUE 'AddressRelation/Address/LastUpdatedUser'
    IGNORE
  VALUE 'AddressRelation/Address/LastUpdatedUser/$'
    Address.LastUpdatedUser := #XML_VALUE
  VALUE 'AddressRelation/Address/SystemSource//'
    IGNORE
  VALUE 'AddressRelation/Address/SystemSource'
    IGNORE
  VALUE 'AddressRelation/Address/SystemSource/$'
    Address.SystemSource := #XML_VALUE
  VALUE 'AddressRelation/Address/User//'
    IGNORE
  VALUE 'AddressRelation/Address/User'
    IGNORE
  VALUE 'AddressRelation/Address/User/$'
    IF #XML_VALUE NE BLANK
      Address.User := FUNCTION-WEB-USER(<#XML_VALUE>)(2)
    END-IF
  VALUE 'AddressRelation/Address/AddressPoolID//'
    IGNORE
  VALUE 'AddressRelation/Address/AddressPoolID'
    IGNORE
  VALUE 'AddressRelation/Address/AddressPoolID/$'
    Address.AddressPoolID := VAL(#XML_VALUE)
  VALUE 'AddressRelation/Address/Street//'
    IGNORE
  VALUE 'AddressRelation/Address/Street'
    IGNORE
  VALUE  'AddressRelation/Address/Street/![CDATA['
    Address.Street := #XML_VALUE
  VALUE  'AddressRelation/Address/Street/$'
    Address.Street := #XML_VALUE
  VALUE 'AddressRelation/Address/Unit//'
    IGNORE
  VALUE 'AddressRelation/Address/Unit'
    IGNORE
  VALUE 'AddressRelation/Address/Unit/![CDATA['
    Address.Unit := #XML_VALUE
  VALUE 'AddressRelation/Address/Unit/$'
    Address.Unit := #XML_VALUE
  VALUE 'AddressRelation/Address/City//'
    IGNORE
  VALUE 'AddressRelation/Address/City'
    IGNORE
  VALUE 'AddressRelation/Address/City/$'
    Address.City := #XML_VALUE
  VALUE 'AddressRelation/Address/StateCode//'
    IGNORE
  VALUE 'AddressRelation/Address/StateCode'
    IGNORE
  VALUE 'AddressRelation/Address/StateCode/$'
    Address.StateCode := #XML_VALUE
  VALUE 'AddressRelation/Address/ZipCode//'
    IGNORE
  VALUE 'AddressRelation/Address/ZipCode'
    IGNORE
  VALUE 'AddressRelation/Address/ZipCode/$'
    ASSIGN #LEN := *LENGTH (#XML_VALUE)
    IF #LEN > 0
      IF #LEN < 6
        #ZIP5 := VAL(#XML_VALUE)
        RESET #ZIP4
      ELSE
        #ZIPN := VAL(#XML_VALUE)
      END-IF
      Address.ZipCode := #ZIPN
    END-IF
  VALUE 'AddressRelation/Address/CountryCode//'
    IGNORE
  VALUE 'AddressRelation/Address/CountryCode'
    IGNORE
  VALUE 'AddressRelation/Address/CountryCode/$'
    Address.CountryCode := #XML_VALUE
  VALUE 'AddressRelation/Address/IntlRegion//'
    IGNORE
  VALUE 'AddressRelation/Address/IntlRegion'
    IGNORE
  VALUE 'AddressRelation/Address/IntlRegion/$'
    Address.IntlRegion := #XML_VALUE
  VALUE 'AddressRelation/Address/PostalCode//'
    IGNORE
  VALUE 'AddressRelation/Address/PostalCode'
    IGNORE
  VALUE 'AddressRelation/Address/PostalCode/$'
    Address.PostalCode := #XML_VALUE
  VALUE 'AddressRelation/Address/Urbanization//'
    IGNORE
  VALUE 'AddressRelation/Address/Urbanization'
    IGNORE
  VALUE 'AddressRelation/Address/Urbanization/$'
    Address.Urbanization := #XML_VALUE
  VALUE 'AddressRelation/Address/AddressFormatTypeCode//'
    IGNORE
  VALUE 'AddressRelation/Address/AddressFormatTypeCode'
    IGNORE
  VALUE 'AddressRelation/Address/AddressFormatTypeCode/$'
    Address.AddressFormatTypeCode := #XML_VALUE
  VALUE 'AddressRelation/Address/AddressValidIndicator//'
    IGNORE
  VALUE 'AddressRelation/Address/AddressValidIndicator'
    IGNORE
  VALUE 'AddressRelation/Address/AddressValidIndicator/$'
    IF #XML_VALUE = #TRUE
      Address.AddressValidIndicator := 'Y'
    ELSE
      Address.AddressValidIndicator := 'N'
    END-IF
  VALUE 'AddressRelation/Address/Share//'
    IGNORE
  VALUE 'AddressRelation/Address/Share'
    IGNORE
  VALUE 'AddressRelation/Address/Share/$'
    IF #XML_VALUE = #TRUE
      Address.Share := 'Y'
    ELSE
      Address.Share := 'N'
    END-IF
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END
