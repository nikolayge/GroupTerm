* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCNRLP1'
*
* DESCRIPTION
*   XML Parser implementationfor file:
*   null
*   using PARSE XML statement and datastructure 'AUCARL01'
*
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
LOCAL USING AUCACR01
LOCAL USING AUCAPI01
LOCAL USING AUCAAR01
LOCAL USING AUCAAD01
LOCAL USING AUCAER01
LOCAL USING GOPHA001
LOCAL USING GOEMA001
LOCAL USING PARSER-X
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
*
LOCAL
1 #PARENT-CONTACT   (N8)
1 #LEN              (I4)
1 #PARSE-ERROR      (I4) CONST <-7>
1 #CX               (I4)
1 Email                           /* MC structure
  2 CN (N6)
  2 ContactID (N8)
  2 UserID (A) DYNAMIC
  2 SystemSource (A) DYNAMIC
  2 ActionType_1 (A) DYNAMIC
  2 ErrorCode (A3)
  2 ErrorDescription (A) DYNAMIC
  2 C@EmailInfo (I2)
  2 EmailInfo (1:*)
    3 ActionType (A) DYNAMIC
    3 EmailID    (N8)
    3 EmailType  (A) DYNAMIC
    3 EmailAddress (A) DYNAMIC
    3 EmailPreferredInd (A) DYNAMIC
    3 EmailProtectedInd (A) DYNAMIC
    3 EmailUndeliverableInd (A) DYNAMIC
    3 EmailStartDate (N8)
    3 EmailEndDate (N8)
    3 EmailStatus (A) DYNAMIC
    3 EmailStatusDate (N8)
    3 Remarks (A) DYNAMIC
    3 LastUpdatedDate (N8)
    3 LastUpdatedTime (N7)
    3 LastUpdatedUser (A8)
    3 ShowRemarks (A1)
1 Phone                           /* MC structure
  2 CN (N6)
  2 ContactID (N8)
  2 UserID (A) DYNAMIC
  2 SystemSource (A) DYNAMIC
  2 ActionType_1 (A) DYNAMIC
  2 ErrorCode (A3)
  2 ErrorDescription (A) DYNAMIC
  2 C@Phone (I2)
  2 PhoneInfo (1:*)
    3 ActionType (A) DYNAMIC
    3 PhoneID (N8)
    3 PhoneType (A) DYNAMIC
    3 Type (A) DYNAMIC
    3 AreaCode (N3)
    3 DialNumber (N20)
    3 Extension (N6)
    3 PreferredInd (A) DYNAMIC
    3 InvalidInd (A) DYNAMIC
    3 BestCallTime (A) DYNAMIC
    3 StartDate (N8)
    3 EndDate (N8)
    3 Remarks (A) DYNAMIC
    3 LastUpdatedDate (N8)
    3 LastUpdatedTime (N7)
    3 LastUpdatedUser (A8)
*
1 #GET              (I4)  CONST <0>
1 #ADD              (I4)  CONST <1>
1 #TRUE             (A4)  CONST <'TRUE'>
1 #FALSE            (A5)  CONST <'FALSE'>
1 #UPDATE           (I4)  CONST <2>
1 #DELETE           (I4)  CONST <3>
1 #ADDRELATION      (I4)  CONST <4>
1 #UPDATEDIF        (I4)  CONST <4>
1 BLANK             (A1)  CONST <' '>
1 #XML_TEMP         (A)   DYNAMIC
1 #UNSUPPORTED      (A) DYNAMIC CONST <'UNSUPPORTED REQUEST'>
1 #FAMILY           (A) DYNAMIC CONST <'FAMILY'>
1 #UPDATED          (L)
*
END-DEFINE
* ----------------------------------------------------------------
RESET ContactRelation
#AUCerror.ErrorTag := 'ContactRelations'
ASSIGN #LEN := *LENGTH (#XML_INPUT)
IF #LEN <= 0
  ContactRelation.ErrorCode := #PARSE-ERROR
  ContactRelation.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNRLS1' #XML_OUTPUT ContactRelation
  ESCAPE ROUTINE
END-IF
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
ContactRelation.ErrorCode := #PARSE-ERROR
ContactRelation.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNRLS1' #XML_OUTPUT ContactRelation
END-SUBROUTINE
*
DEFINE SUBROUTINE CALLBACK
/*                ========
IF XML_PARSER_CONTENT_IS_EMPTY THEN
  IGNORE
ELSE
  #XML_VALUE := *TRIM (#XML_VALUE)
  MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
END-IF
PERFORM PARSE-DOCUMENT
END-SUBROUTINE
*
IF ContactRelation.ActionType = #GET
  #XML_OUTPUT := ' '
  COMPRESS #XML_OUTPUT '<?xml version="1.0" encoding="' *CODEPAGE '"?>'
    INTO #XML_OUTPUT LEAVING NO
  ContactRelation.RelationType  := 'M'
  CALLNAT 'AUCNCRM1' ContactRelation    /* Get Relation
  CALLNAT 'AUCNCRS1' #XML_TEMP ContactRelation
  COMPRESS #XML_OUTPUT #XML_TEMP INTO #XML_OUTPUT
ELSE
  DECIDE ON FIRST VALUE OF ContactRelation.ActionType
    VALUE #DELETE
      CALLNAT 'AUCNCRM1' ContactRelation      /* Delete Relation only
    VALUE #ADDRELATION
      ContactRelation.Contact2Id := ContactRelation.ContactId
      ContactRelation.ContactId  := PersonalInfo.ContactId
      ContactRelation.ActionType := #ADD
      CALLNAT 'AUCNCRM1' ContactRelation      /* Add Relation only
      #AUCerror.ErrorCode := ContactRelation.ErrorCode
      #AUCerror.ErrorDescription := ContactRelation.ErrorDescription
    VALUE #ADD
      PERFORM ADD-CONTACT-DATA
    VALUE #UPDATE
      CALLNAT 'AUCNCRM1' ContactRelation      /* Update Relation only
      #AUCerror.ErrorCode := ContactRelation.ErrorCode
      #AUCerror.ErrorDescription := ContactRelation.ErrorDescription
    NONE VALUE
      #AUCerror.ErrorCode := 3
      #AUCerror.ErrorDescription := #UNSUPPORTED
      CALLNAT 'AUCNERS1' #XML_OUTPUT #AUCerror
      ESCAPE ROUTINE
  END-DECIDE
  IF #AUCerror.ErrorCode = 0    
    CALLNAT 'MBRCRC' ContactRelation.Contact2ID #FAMILY
    CALLNAT 'AUCNCRG1' ContactRelation.Contact2ID
      #XML_OUTPUT    /* Send back all relations
    END TRANSACTION
  ELSE
    BACKOUT TRANSACTION
    CALLNAT 'AUCNERS1' #XML_OUTPUT #AUCerror
  END-IF
END-IF
*
DEFINE ADD-CONTACT-DATA
/*     ================
PersonalInfo.ActionType := ContactRelation.ActionType
PersonalInfo.User       := ContactRelation.User
CALLNAT 'AUCNPIM1' PersonalInfo         /* Manage Contact
IF PersonalInfo.ErrorCode = 0
ContactRelation.Contact2ID := ContactRelation.ContactID  /* Left-parent contact
  ContactRelation.ContactID := PersonalInfo.ContactID
  CALLNAT 'AUCNCRM1' ContactRelation    /* Manage Relation
END-IF
IF PersonalInfo.ErrorCode NE 0
  #AUCerror.ErrorCode := PersonalInfo.ErrorCode
  #AUCerror.ErrorDescription := PersonalInfo.ErrorDescription
ELSE
  IF ContactRelation.ErrorCode NE 0
    #AUCerror.ErrorCode := ContactRelation.ErrorCode
    #AUCerror.ErrorDescription := ContactRelation.ErrorDescription
  END-IF
END-IF
***               Call address, phones and email add new modules
IF #AUCerror.ErrorCode = 0
  IF Address.Street NE BLANK
    AddressRelation.ContactId := PersonalInfo.ContactID
    AddressRelation.User      := ContactRelation.User
    Address.User              := ContactRelation.User
    AddressRelation.ActionType := #ADD
    Address.ActionType := #ADD
    CALLNAT 'AUCNADM2' AddressRelation Address
    IF AddressRelation.ErrorCode NE 0
      #AUCerror.ErrorCode := AddressRelation.ErrorCode
      #AUCerror.ErrorDescription := AddressRelation.ErrorDescription
    ELSE
      IF Address.ErrorCode NE 0
        #AUCerror.ErrorCode := Address.ErrorCode
        #AUCerror.ErrorDescription := Address.ErrorDescription
      END-IF
    END-IF
  END-IF
END-IF
IF #AUCerror.ErrorCode = 0
  Phone.ActionType_1 := '1'
  Phone.ErrorCode    := '0'
  Phone.ContactId    := PersonalInfo.ContactID
  Phone.SystemSource := ContactRelation.SystemSource
  FOR #CX 1 TO C@Phone
    Phone.ActionType (#CX) := '1'
  END-FOR
  CALLNAT 'MBCN0042' Phone
  IF Phone.ErrorDescription NE BLANK
    #AUCerror.ErrorCode := 333
    #AUCerror.ErrorDescription := Phone.ErrorDescription
    ESCAPE BOTTOM
  END-IF
END-IF
IF #AUCerror.ErrorCode = 0
  Email.ActionType_1 := '1'
  Email.ErrorCode    := '0'
  Email.ContactId    := PersonalInfo.ContactID
  Email.SystemSource := ContactRelation.SystemSource
  FOR #CX 1 TO C@EmailInfo
    Email.ActionType (#CX) := '1'
  END-FOR
  CALLNAT 'MBCN0052' Email
  IF Email.ErrorDescription NE BLANK
    #AUCerror.ErrorCode := 333
    #AUCerror.ErrorDescription := Email.ErrorDescription
    ESCAPE BOTTOM
  END-IF
END-IF
END-SUBROUTINE
* ------------------------------------------------- CALL THE PARSER
* PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE #XML_VALUE
*
DEFINE PARSE-DOCUMENT
/*     ==============
DECIDE ON FIRST #XML_PATH
  VALUE 'ContactRelation//'
    IGNORE
  VALUE 'ContactRelation'
    RESET INITIAL ContactRelation
  VALUE 'ContactRelation/ActionType//'
    IGNORE
  VALUE 'ContactRelation/ActionType'
    IGNORE
  VALUE 'ContactRelation/ActionType/$'
    ContactRelation.ActionType := VAL(#XML_VALUE)
  VALUE 'ContactRelation/ErrorCode//'
    IGNORE
  VALUE 'ContactRelation/ErrorCode'
    IGNORE
  VALUE 'ContactRelation/ErrorCode/$'
    ContactRelation.ErrorCode := VAL(#XML_VALUE)
  VALUE 'ContactRelation/ErrorDescription//'
    IGNORE
  VALUE 'ContactRelation/ErrorDescription'
    IGNORE
  VALUE 'ContactRelation/ErrorDescription/$'
    ContactRelation.ErrorDescription := #XML_VALUE
  VALUE 'ContactRelation/ContactID//'
    IGNORE
  VALUE 'ContactRelation/ContactID'
    IGNORE
  VALUE 'ContactRelation/ContactID/$'
    ContactRelation.ContactID := VAL(#XML_VALUE)
  VALUE 'ContactRelation/CN//'
    IGNORE
  VALUE 'ContactRelation/CN'
    IGNORE
  VALUE 'ContactRelation/CN/$'
    ContactRelation.CN := VAL(#XML_VALUE)
  VALUE 'ContactRelation/LastUpdatedDate//'
    IGNORE
  VALUE 'ContactRelation/LastUpdatedDate'
    IGNORE
  VALUE 'ContactRelation/LastUpdatedDate/$'
    ContactRelation.LastUpdatedDate := VAL(#XML_VALUE)
  VALUE 'ContactRelation/LastUpdatedTime//'
    IGNORE
  VALUE 'ContactRelation/LastUpdatedTime'
    IGNORE
  VALUE 'ContactRelation/LastUpdatedTime/$'
    ContactRelation.LastUpdatedTime := VAL(#XML_VALUE)
  VALUE 'ContactRelation/LastUpdatedUser//'
    IGNORE
  VALUE 'ContactRelation/LastUpdatedUser'
    IGNORE
  VALUE 'ContactRelation/LastUpdatedUser/$'
    ContactRelation.LastUpdatedUser := #XML_VALUE
  VALUE 'ContactRelation/SystemSource//'
    IGNORE
  VALUE 'ContactRelation/SystemSource'
    IGNORE
  VALUE 'ContactRelation/SystemSource/$'
    ContactRelation.SystemSource := #XML_VALUE
  VALUE 'ContactRelation/User//'
    IGNORE
  VALUE 'ContactRelation/User'
    IGNORE
  VALUE 'ContactRelation/User/$'
    AddressRelation.ClerkID := FUNCTION-WEB-USER(<#XML_VALUE>)(1)
    ContactRelation.User := FUNCTION-WEB-USER(<#XML_VALUE>)(2)
    Email.UserID := #XML_VALUE
    Phone.UserID := #XML_VALUE
  VALUE 'ContactRelation/RelationID//'
    IGNORE
  VALUE 'ContactRelation/RelationID'
    IGNORE
  VALUE 'ContactRelation/RelationID/$'
    ContactRelation.RelationID := VAL(#XML_VALUE)
  VALUE 'ContactRelation/CurrentRelationshipCode//'
    IGNORE
  VALUE 'ContactRelation/CurrentRelationshipCode'
    IGNORE
  VALUE 'ContactRelation/CurrentRelationshipCode/$'
    ContactRelation.CurrentRelationshipCode := #XML_VALUE
  VALUE 'ContactRelation/RelationType//'
    IGNORE
  VALUE 'ContactRelation/RelationType'
    IGNORE
  VALUE 'ContactRelation/RelationType/$'
    ContactRelation.RelationType := #XML_VALUE
  VALUE 'ContactRelation/DependentStatusCode//'
    IGNORE
  VALUE 'ContactRelation/DependentStatusCode'
    IGNORE
  VALUE 'ContactRelation/DependentStatusCode/$'
    ContactRelation.DependentStatusCode := #XML_VALUE
  VALUE 'ContactRelation/Remarks//'
    IGNORE
  VALUE 'ContactRelation/Remarks'
    IGNORE
  VALUE 'ContactRelation/Remarks/$'
    ContactRelation.Remarks := #XML_VALUE
  VALUE 'ContactRelation/DateOfMarriage//'
    IGNORE
  VALUE 'ContactRelation/DateOfMarriage'
    IGNORE
  VALUE 'ContactRelation/DateOfMarriage/$'
    ContactRelation.DateOfMarriage := VAL(#XML_VALUE)
  VALUE 'ContactRelation/MarriageCertificateCode//'
    IGNORE
  VALUE 'ContactRelation/MarriageCertificateCode'
    IGNORE
  VALUE 'ContactRelation/MarriageCertificateCode/$'
    ContactRelation.MarriageCertificateCode := #XML_VALUE
  VALUE 'ContactRelation/DateOfDivorce//'
    IGNORE
  VALUE 'ContactRelation/DateOfDivorce'
    IGNORE
  VALUE 'ContactRelation/DateOfDivorce/$'
    ContactRelation.DateOfDivorce := VAL(#XML_VALUE)
  VALUE 'ContactRelation//'
    IGNORE
  VALUE 'ContactRelation'
    RESET INITIAL PersonalInfo
  VALUE 'ContactRelation/PersonalInfo//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/ActionType//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/ActionType'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/ActionType/$'
    PersonalInfo.ActionType := VAL(#XML_VALUE)
  VALUE 'ContactRelation/PersonalInfo/ErrorCode//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/ErrorCode'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/ErrorCode/$'
    PersonalInfo.ErrorCode := VAL(#XML_VALUE)
  VALUE 'ContactRelation/PersonalInfo/ErrorDescription//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/ErrorDescription'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/ErrorDescription/$'
    PersonalInfo.ErrorDescription := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/ContactID//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/ContactID'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/ContactID/$'
    PersonalInfo.ContactID := VAL(#XML_VALUE)
  VALUE 'ContactRelation/PersonalInfo/CN//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/CN'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/CN/$'
    PersonalInfo.CN := VAL(#XML_VALUE)
  VALUE 'ContactRelation/PersonalInfo/LastUpdatedDate//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/LastUpdatedDate'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/LastUpdatedDate/$'
    PersonalInfo.LastUpdatedDate := VAL(#XML_VALUE)
  VALUE 'ContactRelation/PersonalInfo/LastUpdatedTime//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/LastUpdatedTime'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/LastUpdatedTime/$'
    PersonalInfo.LastUpdatedTime := VAL(#XML_VALUE)
  VALUE 'ContactRelation/PersonalInfo/LastUpdatedUser//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/LastUpdatedUser'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/LastUpdatedUser/$'
    PersonalInfo.LastUpdatedUser := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/SystemSource//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/SystemSource'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/SystemSource/$'
    PersonalInfo.SystemSource := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/User//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/User'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/User/$'
    PersonalInfo.User := FUNCTION-WEB-USER(<#XML_VALUE>)(2)
  VALUE 'ContactRelation/PersonalInfo/ContactType//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/ContactType'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/ContactType/$'
    PersonalInfo.ContactType := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/SSN//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/SSN'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/SSN/$'
    PersonalInfo.SSN := VAL(#XML_VALUE)
  VALUE 'ContactRelation/PersonalInfo/SSNProtectedDate//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/SSNProtectedDate'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/SSNProtectedDate/$'
    PersonalInfo.SSNProtectedDate := VAL(#XML_VALUE)
  VALUE 'ContactRelation/PersonalInfo/SSNProtected//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/SSNProtected'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/SSNProtected/$'
    IF #XML_VALUE = #TRUE
      PersonalInfo.SSNProtected := 'Y'
    END-IF
    IF #XML_VALUE = #FALSE
      PersonalInfo.SSNProtected := 'N'
    END-IF
  VALUE 'ContactRelation/PersonalInfo/Prefix//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/Prefix'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/Prefix/$'
    PersonalInfo.Prefix := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/Gender//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/Gender'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/Gender/$'
    PersonalInfo.Gender := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/DateOfBirth//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/DateOfBirth'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/DateOfBirth/$'
    PersonalInfo.DateOfBirth := VAL(#XML_VALUE)
  VALUE 'ContactRelation/PersonalInfo/BirthCode//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/BirthCode'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/BirthCode/$'
    PersonalInfo.BirthCode := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/DateOfDeath//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/DateOfDeath'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/DateOfDeath/$'
    PersonalInfo.DateOfDeath := VAL(#XML_VALUE)
  VALUE 'ContactRelation/PersonalInfo/DeathCode//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/DeathCode'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/DeathCode/$'
    PersonalInfo.DeathCode := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/FirstName//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/FirstName'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/FirstName/$'
    PersonalInfo.FirstName := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/LastName//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/LastName'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/LastName/$'
    PersonalInfo.LastName := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/MiddleName//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/MiddleName'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/MiddleName/$'
    PersonalInfo.MiddleName := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/Suffix//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/Suffix'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/Suffix/$'
    PersonalInfo.Suffix := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/Remarks//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/Remarks'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/Remarks/$'
    PersonalInfo.Remarks := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/OrganizationName//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/OrganizationName'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/OrganizationName/$'
    PersonalInfo.OrganizationName := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/WebsiteURL//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/WebsiteURL'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/WebsiteURL/$'
    PersonalInfo.WebsiteURL := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/OrganizationEstablishedDate//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/OrganizationEstablishedDate'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/OrganizationEstablishedDate/$'
    PersonalInfo.OrganizationEstablishedDate := VAL(#XML_VALUE)
  VALUE 'ContactRelation/PersonalInfo/OrganizationCertificateCode//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/OrganizationCertificateCode'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/OrganizationCertificateCode/$'
    PersonalInfo.OrganizationCertificateCode := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/IntroFlag//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/IntroFlag'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/IntroFlag/$'
    PersonalInfo.IntroFlag := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/NameChangeCode//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/NameChangeCode'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/NameChangeCode/$'
    PersonalInfo.NameChangeCode := #XML_VALUE
  VALUE 'ContactRelation/PersonalInfo/Insured//'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/Insured'
    IGNORE
  VALUE 'ContactRelation/PersonalInfo/Insured/$'
    IF #XML_VALUE = #TRUE
      PersonalInfo.Insured := 1
    END-IF
    IF #XML_VALUE = #FALSE
      PersonalInfo.Insured := 0
    END-IF
  VALUE 'ContactRelation/AddressRelation/AddressPoolID//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/AddressPoolID'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/AddressPoolID/$'
    AddressRelation.AddressPoolID := VAL(#XML_VALUE)
  VALUE 'ContactRelation/AddressRelation/RelationID//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/RelationID'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/RelationID/$'
    AddressRelation.RelationID := VAL(#XML_VALUE)
  VALUE 'ContactRelation/AddressRelation/AddressTypeCode//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/AddressTypeCode'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/AddressTypeCode/$'
    AddressRelation.AddressTypeCode := #XML_VALUE
  VALUE 'ContactRelation/AddressRelation/AddressLocationCode//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/AddressLocationCode'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/AddressLocationCode/$'
    AddressRelation.AddressLocationCode := #XML_VALUE
  VALUE 'ContactRelation/AddressRelation/Source//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Source'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Source/$'
    AddressRelation.Source := #XML_VALUE
  VALUE 'ContactRelation/AddressRelation/Undeliverable//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Undeliverable'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Undeliverable/$'
    IF #XML_VALUE = #TRUE
      AddressRelation.Undeliverable := 'Y'
    ELSE
      AddressRelation.Undeliverable := 'N'
    END-IF
  VALUE 'ContactRelation/AddressRelation/Protected//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Protected'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Protected/$'
    IF #XML_VALUE = #TRUE
      AddressRelation.Protected := 'Y'
    ELSE
      AddressRelation.Protected := 'N'
    END-IF
  VALUE 'ContactRelation/AddressRelation/AttentionLine//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/AttentionLine'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/AttentionLine/$'
    AddressRelation.AttentionLine := #XML_VALUE
  VALUE 'ContactRelation/AddressRelation/Address/AddressPoolID//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/AddressPoolID'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/AddressPoolID/$'
    Address.AddressPoolID := VAL(#XML_VALUE)
  VALUE 'ContactRelation/AddressRelation/Address/Street//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/Street'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/Street/$'
    Address.Street := #XML_VALUE
  VALUE 'ContactRelation/AddressRelation/Address/Unit//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/Unit'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/Unit/$'
    Address.Unit := #XML_VALUE
  VALUE 'ContactRelation/AddressRelation/Address/City//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/City'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/City/$'
    Address.City := #XML_VALUE
  VALUE 'ContactRelation/AddressRelation/Address/StateCode//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/StateCode'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/StateCode/$'
    Address.StateCode := #XML_VALUE
  VALUE 'ContactRelation/AddressRelation/Address/ZipCode//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/ZipCode'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/ZipCode/$'
    Address.ZipCode := VAL(#XML_VALUE)
  VALUE 'ContactRelation/AddressRelation/Address/CountryCode//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/CountryCode'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/CountryCode/$'
    Address.CountryCode := #XML_VALUE
  VALUE 'ContactRelation/AddressRelation/Address/IntlRegion//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/IntlRegion'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/IntlRegion/$'
    Address.IntlRegion := #XML_VALUE
  VALUE 'ContactRelation/AddressRelation/Address/PostalCode//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/PostalCode'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/PostalCode/$'
    Address.PostalCode := #XML_VALUE
  VALUE 'ContactRelation/AddressRelation/Address/Urbanization//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/Urbanization'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/Urbanization/$'
    Address.Urbanization := #XML_VALUE
 VALUE 'ContactRelation/AddressRelation/Address/AddressFormatTypeCode//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/AddressFormatTypeCode'
    IGNORE
 VALUE 'ContactRelation/AddressRelation/Address/AddressFormatTypeCode/$'
    Address.AddressFormatTypeCode := #XML_VALUE
 VALUE 'ContactRelation/AddressRelation/Address/AddressValidIndicator//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/AddressValidIndicator'
    IGNORE
 VALUE 'ContactRelation/AddressRelation/Address/AddressValidIndicator/$'
    IF #XML_VALUE = #TRUE
      Address.AddressValidIndicator := 'Y'
    ELSE
      Address.AddressValidIndicator := 'N'
    END-IF
  VALUE 'ContactRelation/AddressRelation/Address/Share//'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/Share'
    IGNORE
  VALUE 'ContactRelation/AddressRelation/Address/Share/$'
    Address.Share := #XML_VALUE
  VALUE 'ContactRelation/Phones/Phone//'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone'
    ADD 1 TO C@Phone
    #CX := C@Phone
    EXPAND ARRAY PhoneInfo TO (1:#CX)
  VALUE 'ContactRelation/Phones/Phone/DialNumber//'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/DialNumber'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/DialNumber/$'
    IF #XML_VALUE IS (N20)
      Phone.DialNumber(#CX) := VAL(#XML_VALUE)
    END-IF
  VALUE 'ContactRelation/Phones/Phone/AreaCode//'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/AreaCode'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/AreaCode/$'
    IF #XML_VALUE IS (N3)
      Phone.AreaCode(#CX) := VAL(#XML_VALUE)
    END-IF
  VALUE 'ContactRelation/Phones/Phone/PhoneType//'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/PhoneType'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/PhoneType/$'
    Phone.PhoneType(#CX) := #XML_VALUE
  VALUE 'ContactRelation/Phones/Phone/Type//'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/Type'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/Type/$'
    Phone.Type(#CX) := #XML_VALUE
  VALUE 'ContactRelation/Phones/Phone/Preferred//'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/Preferred'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/Preferred/$'
    IF #XML_VALUE = #TRUE
      Phone.PreferredInd (#CX) := 'Y'
    ELSE
      Phone.PreferredInd (#CX) := 'N'
    END-IF
  VALUE 'ContactRelation/Phones/Phone/Extension//'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/Extension'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/Extension/$'
    IF #XML_VALUE IS (N6)
      Phone.Extension(#CX) := VAL(#XML_VALUE)
    END-IF
  VALUE 'ContactRelation/Phones/Phone/InvalidInd//'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/InvalidInd'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/InvalidInd/$'
    IF #XML_VALUE = #TRUE
      Phone.InvalidInd(#CX) := 'Y'
    ELSE
      Phone.InvalidInd(#CX) := 'N'
    END-IF
  VALUE 'ContactRelation/Phones/Phone/BestCallTime//'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/BestCallTime'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/BestCallTime/$'
    Phone.BestCallTime(#CX) := #XML_VALUE
  VALUE 'ContactRelation/Phones/Phone/Remarks//'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/Remarks'
    IGNORE
  VALUE 'ContactRelation/Phones/Phone/Remarks/$'
    Phone.Remarks(#CX) := #XML_VALUE
  VALUE 'ContactRelation/Email//'
    IGNORE
  VALUE 'ContactRelation/Email'
    ADD 1 TO C@EmailInfo
    #CX := C@EmailInfo
    EXPAND ARRAY EmailInfo TO (1:#CX)
  VALUE 'ContactRelation/Email/EmailPreferred//'
    IGNORE
  VALUE 'ContactRelation/Email/EmailPreferred'
    IGNORE
  VALUE 'ContactRelation/Email/EmailPreferred/$'
    IF #XML_VALUE = #TRUE
      Email.EmailPreferredInd (#CX) := 'Y'
    ELSE
      Email.EmailPreferredInd (#CX) := 'N'
    END-IF
  VALUE 'ContactRelation/Email/EmailType//'
    IGNORE
  VALUE 'ContactRelation/Email/EmailType'
    IGNORE
  VALUE 'ContactRelation/Email/EmailType/$'
    Email.EmailType (#CX) := #XML_VALUE
  VALUE 'ContactRelation/Email/EmailAddress//'
    IGNORE
  VALUE 'ContactRelation/Email/EmailAddress'
    IGNORE
  VALUE 'ContactRelation/Email/EmailAddress/$'
    Email.EmailAddress (#CX):= #XML_VALUE
  VALUE 'ContactRelation/Email/Protected/$'
    IF #XML_VALUE = #TRUE
      Email.EmailProtectedInd (#CX) := 'Y'
    ELSE
      Email.EmailProtectedInd (#CX) := 'N'
    END-IF
  VALUE 'ContactRelation/Email/Remarks//'
    IGNORE
  VALUE 'ContactRelation/Email/Remarks'
    IGNORE
  VALUE 'ContactRelation/Email/Remarks/$'
    Email.Remarks (#CX) := #XML_VALUE
  VALUE 'ContactRelation/Email/ShowRemarks//'
    IGNORE
  VALUE 'ContactRelation/Email/ShowRemarks'
    IGNORE
  VALUE 'ContactRelation/Email/ShowRemarks/$'
    Email.ShowRemarks (#CX) := #XML_VALUE
  VALUE 'ContactRelation/Email/EmailUndeliverable//'
    IGNORE
  VALUE 'ContactRelation/Email/EmailUndeliverable'
    IGNORE
  VALUE 'ContactRelation/Email/EmailUndeliverable/$'
    IF #XML_VALUE = #TRUE
      Email.EmailUndeliverableInd (#CX) := 'Y'
    ELSE
      Email.EmailUndeliverableInd (#CX) := 'N'
    END-IF
  VALUE 'ContactRelation/Email/EmailStatus//'
    IGNORE
  VALUE 'ContactRelation/Email/EmailStatus'
    IGNORE
  VALUE 'ContactRelation/Email/EmailStatus/$'
    Email.EmailStatus (#CX) := #XML_VALUE
  VALUE 'ContactRelation/Email/EmailStatusDate//'
    IGNORE
  VALUE 'ContactRelation/Email/EmailStatusDate'
    IGNORE
  VALUE 'ContactRelation/Email/EmailStatusDate/$'
    Email.EmailStatusDate (#CX) := VAL(#XML_VALUE)
  VALUE 'ContactRelation/Email/EmailStartDate//'
    IGNORE
  VALUE 'ContactRelation/Email/EmailStartDate'
    IGNORE
  VALUE 'ContactRelation/Email/EmailStartDate/$'
    Email.EmailStartDate (#CX) := VAL(#XML_VALUE)
  VALUE 'ContactRelation/Email/EmailEndDate//'
    IGNORE
  VALUE 'ContactRelation/Email/EmailEndDate'
    IGNORE
  VALUE 'ContactRelation/Email/EmailEndDate/$'
    Email.EmailEndDate (#CX) := VAL(#XML_VALUE)
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END
