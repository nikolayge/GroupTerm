* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 2
* <Natural Source Header
* PROGRAM-ID: ATHPIALA - Apply Starts/Stops to AAFMAA
* Allotment START/STOP/CHANGE processor
*   ATHPIALN must follow ATHPIALA
************************************************************************
*                       MODIFICATION LOG
* USER DATE      TAG     REASON
* DRW  09282004  DW1  add CREDIT CARD processing
* DRW  11982004  DW2  reset alot-chg-auth & date when alot stops
* DRW  02012005  DW3  chg status from a to r even if ins-only
* DRW  02272005  DW4  Allow Allotment to start on AT-PENDING
* DRW  02282005  DW5  stop Alp's even if there is no mode G's
* DRW  03212005  DW6  Show AT-Pending Starts on Mismatch report
* DRW  05112005  DW7  Do not adj xtra-prems paid if mbr owes us money
* DRW  05122005  DW8  Add #CMBX to pass Combo code
* DRW  05122005  DW9  Make cash-code "A" (Adjust) for stop/start trans
* DRW  06292005  DW10 Show DB/CR - BADJ Adjustments
* DRW  07012005  DW11 Fix alotment needed problem
* DRW  07182005  DW12 Shift format of Scr-Eff-Date
* DRW  07182005  DW13 Create Acct TR if DB/CR or BADJ chges
* DRW  07182005  DW14 Update Acct-upd date on starts as well as stops
* PAM  12222005  PM15 removed DW7 changes for December month-end
* DRW  03302006  DW16 Write Tr if status or ret date chges
* DRW  05072006  DW17 Remove ALOT-SW logic
* DRW  06082006  DW18 Fix strt when a mbr has FBR (Rider)& lnkd mbr does not
*                    ie cn141377 & 141379
* DRW  08042006  DW19 Add Status chg SYNC to TRLOG
* DRW  04052007  DW20 Chg AIP's to MIP's even if Mod is not 'G' (Not Done)
* DRW  04132007  DW21 On a Stop If Alot Auth Code is S reset it to N not Y
* DRW  04252007  DW22 Add AIP Waiting (AIW) '9' Processing
* DRW  04252007  DW23 Only chg Mode to G on existing Mode G/M (Not A/S/Q)
* DRW  04252007  DW24 Stop removing AIP/ALP & mode on stop/start if a Chg occurs
* DRW  04252007  DW25 No more adjusting TOT-PREMS-PAID
* DRW  04272007  DW26 Add Exception File
* YAK  07302007  YK1  Add new report with records with Mode change
*                     from G to Q and allotment authorization 'Y'
* DRW  08012007  DW27 Bypass TR Recs & Stop Detail entries if Prior Alot = Zero
* DRW  08312007  DW28 Include AIP/ALP in ALOT Mismatch Processing
* PAM  09042007  PM29 Adjust UPDATE reference for linked members
* PAM  09052007  PM30 Include AIP/ALP on allotment start calculations
* YAK  09102007  YK2  Populate ALOT-CHG-AUTH-DATE when changing
*                     ALOT-CHG-AUTH
* PAM  09202007  PM31 Remove AIP/ALP on allotment changes if the total
*                     allotment amount is not enough to cover everything
*                     (premiums + linked premiums + AIPS
* DRW  09272007  DW32 Add Alot Auth Indicator to Report 4 & 5 (Alot Mismatches)
* DRW  09272007  DW33 Bypass TR Recs & Start Detail entries if Alot-amt = Zero
* DRW  10202007  DW34 Set to MIP if Allotment stops
* PAM  10242007  PM35 Adjust Automatic Loan payments to payoff amounts
* DRW  11082007  DW36 Reset Spc Code if already Retired and spc code = X
* DRW 11/30/2007 DW37 For Linked Policies Use paid-to-date when checking Mode G
*   above (DW37) Backed OUT
* DRW 01/17/2008 DW38 Add AIP Waiting (AIL) 'L' CAP Loan-Only Processing
* DRW 01/28/2008 DW39 Add interface to FA to get Alottment amt
* DRW 03/27/2008 DW40 check for ALOT changing on Linked checking
* DRW 04/07/2008 DW41 Add TIMN to C2522SAM Linkage so all trans have same time
* DRW 06/06/2008 DW42 Add ALOT-CHG-AUTH "A" checking
* DRW 06/10/2008 DW43 Chg ALOT-CHG-AUTH to "A" if Active to Retired
* DRW 06/27/2008 DW44 Calc PD-UP Partial Months Premium
* DRW 06/30/2008 DW45 Remove 'Would have' Message
* PAM ??/??/???  PM99 One time adjustment for linked member starts with DUES
*                     temporary solution only (later commented out)
* DRW 08/28/2008 DW46 Gen Plus Processing
* DRW 09/05/2008 DW47 Restore DW37 (check pd-to date to determine processing)
* DRW 09/15/2008 DW48 Do not change mode G to Q on a stop if pd-to in future
* DRW 09/29/2008 DW49 Do not remove MIP on a Start if Allot Amt is sufficient
* DRW 10/31/2008 DW50 Fix Index problem with linked records checking pd to dt
* DRW 11/05/2008 DW51 Check Future Dated policies for Start amt Check
* DRW 11/07/2008 DW52 Use AT rec to calc CAP AIP amt to add to Start Amt
* DRW 12/10/2008 DW53 Add AT AIP-ADJ to linkage to Function-laon-payment
* DRW 02/27/2009 DW54 Chk for DUES for linked pols when calcing tot amt due
* DRW 02/27/2009 DW55 Fix Accum of #tot-alot for Paid-up-pols
* PAM 03/09/2009 PM56 Removed reference to old LP indicators
* DRW 06/27/2009 DW57 Remove Modification of AUX-DEBIT-CREDIT-AMT
* DRW 09/22/2009 DW58 SVC-FEE CALC  /  PROCESS-IND / Number-memberships /600000
* vxt 05/04/2011 vt1  Add a new report for CAP loans when the premium was not paid.
*                     and create the file when the AS-AMT is ne #TOT-AMT .
* vxt 07/27/2011 vt2  adding logic to issue the loans which are calculated
*                     with wrong due amount
* vxt 12/16/2011 vt3  FIx the new allotment amount logic.(Tck# 751)
* NGG 02/14/2012 NG1  Premier services
* vxt 07/03/2012 vt4  Fix the issue with not resetting the values of premier services.
* YAK 10/09/2012 YK3  Use function to identify Level Term II plans
* YAK 02/20/2012 YK4  Process $1 discount for EZ Term plan
* TMT 01/13/2014 TT1  ADDED GP2 POLICY SUPPORT
* TMT 06/10/2014 TT2  CONTACT NORMALIZATION - DOB AND SEX
* vxt 09/04/2014 vt5  Move the term refund amount to BADJ amt /Ticket 2939/
* vxt 02/02/2015 vt7  Fix the issue with wrong RTRC transaction creation - Ticket 3326
* vxt 12/24/2015 vt8  Ticket 4059 - fix  allotment allocations
* bz-Name 07/07/2017     Fine Names
* vxt 12/07/2017 vt9  /Ticket 6441/ Add comment to the CAP report
************************************************************************
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING C2500AAM
LOCAL USING GPRA0005                     /* emai-information                vt1
LOCAL USING GPRL0001                       /* Init properties               vt1
LOCAL USING SVCA0003                          /* NG1
LOCAL
1 #MSG                (A) DYNAMIC             /* NG1
*
1 #EXTRA-AMT-NEEDED-FOR-FUTURE  (N5.2)        /* DW51
1 #USE-FUTURE-PD-THRU           (L)
*
1 #LINKED-REC-PROCESSED  (L)      /* DW40
1 #RETURN-TO-RET-STATUS    (L)    /* DW26
1 #CURR-ALOT-A    (A7)                /* DW39
1 REDEFINE #CURR-ALOT-A
  2 #CURR-ALOT     (N5.2)
1 #NEW-ALOT       (N5.2)              /* DW39
*
1 #HOLD-MOD-PREM    (N7.2)
1 #PRIOR-ALOT-AMT    (N7.2)    /* DW27
1 #SFX   (I2)
1 #OLD-RET-DATE     (N8)   /* DW19
1 #OLD-MIL-STAT     (A1)
1 #PRIOR-BADJ  (P5.2)   /* DW10
1 #BADJ-ADJ    (P5.2)
1 #PRIOR-DB-CR (P5.2)
1 #DB-CR-ADJ   (P5.2)
1 #ADJ-DESC        (A40)  /* DW10    /* vt5 was A50 \/
1 #prior-term-ref  (p5.2)
1 #term-ref-adj    (p5.2)
1 #tot-trmf-amt    (p5.2)
1 #k               (i2)              /* vt5         /\
*
1 #EXCEPTIONS   (A80)   /* DW26
1 #EXCP         (A60)
1 #TAB       (A1) INIT <H'09'>
*
* Linkage to C2522SAM below    /* DW13
1 #SOURCE-PROG  (A8)   /* Prog sending Info
1 #EFF-DT       (N8)
1 #ILN1       (I2)
1 #TR-CD      (A4)
1 #ADJ-AMT    (N5.2)
1 #OLD-FPF         (N7.2)
1 #NEW-FPF         (N7.2)
1 #LAST-DATE-UPDATE (N8)
1 #NEW-DATE-UPDATE  (N8)
1 #ISSUE-DATE      (N8)   /* issue date of affected policy
1 #SCR-TRAN-COD    (A4)   /* TRAN Code if from CI
1 #CMBX            (A4)   /* Used to send indicator to C2522sam for Desc
1 #BANKRUPT          (L)
1 #CLERK           (A3)
1 #TIMN            (N7)               /* DW41
*
1 #JCL-PARM       (A10)
1 REDEFINE #JCL-PARM
  2 #JCL-MM            (N2)   /* DATE PARM 03/01/1999
  2 #JCL-X1            (A1)
  2 #JCL-DD            (N2)
  2 #JCL-X2            (A1)
  2 #JCL-YYYY          (N4)
*
1 #PARM-YYYYMMDD  (N8)
1 REDEFINE #PARM-YYYYMMDD
  2 #PARM-YYYYMM    (N6)
  2 REDEFINE #PARM-YYYYMM
    3 #PARM-YYYY      (N4)
    3 #PARM-MM        (N2)
* 1 #3-MONS-IN-FUTURE-YYYYMM  (N6)
1 #SUBTYPE    (A1)
*
1 #ITR1     (I2)  /* DW16
1 #WORK   (N5.2)
1 REDEFINE #WORK
  2 #WORK-1 (N5)
  2 #REM    (N2)
*
1 #TODA          (N8)  /* DW16
*
1 TR-V VIEW OF A-TRANSACTION-REGISTER   /* DW16
  2 ID-NUMBER         (N6)
  2 PROCESS-IND       (A1)
  2 NAME              (A25)
  2 DATE-LAST-UPDATE  (N8)
  2 TERMINAL-ID       (A8)
  2 CLERK-ID          (A3)
  2 TRANSACTION-DATN  (P9)
  2 TRANSACTION-TIMN  (P7)
  2 OLD-DATA          (A125/20)
  2 NEW-DATA          (A125/20)
  2 SYNC-FLD-NUM      (60)      /* DW19
  2 SYNC-FLD-OLD-DATA (60)
  2 SYNC-FLD-NEW-DATA (60)
*
1 #TR-REG-ACT-TO-RETIRED   /* DW16
  2 #TR-REG-ACT-TO-RET       (A26) INIT <'CG-DFAS ACTIVE TO RETIRED '>
  2 #TR-REG-MIL-STATUS       (A2)
  2 #TR-REG-RET-DATE         (N8)
1 REDEFINE #TR-REG-ACT-TO-RETIRED
  2 #TR-REG-A-R     (A36)
*
1 #TR-REG-SPECIAL-CODE-X         /* DW36
  2 #TR-REG-SPC-COD-LBL         (A23) INIT <'CG-DFAS SPC-CODE X Chg '>
  2 #TR-REG-SPC-CODE            (A1)
1 REDEFINE #TR-REG-SPECIAL-CODE-X
  2 #TR-REG-SPC-CODE-X    (A24)

1 ST-V VIEW OF A-STATUS
  2 DTS-DATN
  2 DTS-TIMN
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID                                    /* vt1
  2 PROCESS-IND
  2 SSN
  2 LINKED-CN      (40)
  2 REDEFINE LINKED-CN
    3 LINKED-CN-A   (A6/40)
  2 WIDOW-FLAG
  2 INTRO-FLAG
  2 CHIEF-OF-STAFF-IND             /* DW36
*  2 DATE-OF-BIRTH                 /* TT2
  2 MILITARY-SERVICE
  2 MILITARY-STATUS
  2 DATE-OF-DEATH
  2 DATE-RETIRED
  2 DATE-ACCT-UPDATE
  2 NAME
  2 X-FIRST-PLACE-FEE   (9)
  2 ALOT-AMT
  2 ALOT-CHG-AUTH                     /* DW2
  2 ALOT-CHG-AUTH-DATE                /* YK2
  2 ALOT-CHG-DATE                     /* DW2
  2 STOP-DATE
  2 X-LOAN-AMOUNT    (9)
  2 X-LOAN-AMOUNT-2  (9)
  2 X-LOAN-DATE     (9)
  2 X-LOAN-DATE-2   (9)
  2 X-ALT-LP-IND    (9)
  2 X-ALT-LP-IND-2  (9)
  2 X-ALT-LP-AMT    (9)
  2 X-ALT-LP-AMT-2  (9)
  2 X-ALT-LP-DATE   (9)                               /* vt1
  2 DEBIT-CREDIT-AMT
  2 AUX-DEBIT-CREDIT-AMT
  2 DUES-BALANCE
  2 DUES-ALL-PAID-IND
  2 X-BILL-ADJUST  (9)
  2 DUES-FPF
  2 DUES-TOT-PAID
  2 NUMBER-MEMBERSHIPS
  2 ISSUE-DATE          (9)
  2 STATUS              (9)
  2 PAY-STATUS          (9)
  2 RID-PLAN            (9)
  2 PLAN                (9)
  2 REDEFINE PLAN
    3 PLAN-OCC      (9)
      4 PLAN-A3
        5 PLAN-A1   (A1)
        5 PLAN-N2   (N2)
      4 REDEFINE PLAN-A3
        5 PLAN-A2   (A2)
        5 PLAN-FILL (A1)
  2 MONTH-ALLOC-AMT     (9)
  2 MODE                (9)
  2 OWNERSHIP-FLAG      (9)
  2 ANNUAL-PREM         (9)
  2 PAID-TO-DATE        (9)
  2 REDEFINE PAID-TO-DATE
    3 PAID-TO-DATE-OCC  (9)
      4 PAID-TO-DATE-YYYYMM  (N6)
      4 REDEFINE PAID-TO-DATE-YYYYMM
        5 PAID-TO-DATE-YYYY   (N4)
        5 PAID-TO-DATE-MM     (N2)
      4 PAID-TO-DATE-DD     (N2)
  2 PAID-UP-DATE        (9)
  2 REDEFINE PAID-UP-DATE
    3 PAID-UP-DATE-OCC  (9)
      4 PAID-UP-DATE-YYYYMM (N6)
      4 REDEFINE PAID-UP-DATE-YYYYMM
        5 PAID-UP-DATE-YYYY   (N4)
        5 PAID-UP-DATE-MM     (N2)
      4 PAID-UP-DATE-DD     (N2)
  2 MTD-ACV-PREM-ADJ    (9)
  2 CONV-DURATION       (9)
  2 TOT-PREMIUMS-PAID    (9)
  2 C*out-term-ref-group                                  /* vt5 \/
  2 OUT-TERM-REF-GROUP      (10)
    3 OUT-TERM-REF-AMOUNT               (N7.2)
    3 OUT-TERM-REF-YEAR                 (N4.0)
    3 NEW-POL-ISS-DATE                  (N8.0)
    3 OUT-TERM-REF-ENTRY-DATE           (N8.0)
    3 NEW-TERM-POL-NBR                  (A16)             /* vt5 /\
*
1 LK-V VIEW OF A-STATUS
  2 ID-NUMBER      (N6)
  2 MEMBER-CONTACT-ID        /* TT2
  2 INTRO-FLAG
  2 WIDOW-FLAG
*  2 DATE-OF-BIRTH           /* TT2
  2 ALOT-AMT
* 2 ALT-LP-IND               /* PM56
* 2 ALT-LP-IND-2             /* PM56
* 2 ALT-LP-AMT               /* PM56
* 2 ALT-LP-AMT-2             /* PM56
  2 DEBIT-CREDIT-AMT
  2 NUMBER-MEMBERSHIPS
  2 STATUS              (9)
  2 PAY-STATUS          (9)
  2 PLAN                (9)
  2 MODE                (9)
  2 ANNUAL-PREM         (9)
  2 ISSUE-DATE          (9)
  2 MONTH-ALLOC-AMT     (9)
  2 PAID-TO-DATE        (9)
  2 REDEFINE PAID-TO-DATE
    3 PAID-TO-DATE-OCC (9)
      4 PAID-TO-DATE-YYYYMM (N6)
      4 REDEFINE PAID-TO-DATE-YYYYMM
        5 PAID-TO-DATE-YYYY (N4)
        5 PAID-TO-DATE-MM   (N2)
      4 PAID-TO-DATE-DD   (N2)
  2 PAID-UP-DATE        (9)
  2 REDEFINE PAID-UP-DATE
    3 PAID-UP-DATE-OCC  (9)
      4 PAID-UP-DATE-YYYYMM (N6)
      4 REDEFINE PAID-UP-DATE-YYYYMM
        5 PAID-UP-DATE-YYYY   (N4)
        5 PAID-UP-DATE-MM     (N2)
      4 PAID-UP-DATE-DD     (N2)
  2 OWNERSHIP-FLAG      (9)
*
1 STARTS-STOPS-REC  (A80)
1 REDEFINE STARTS-STOPS-REC
  2 AS-CN           (N6)
  2 AS-SERVICE      (A1)   /* A or F
  2 AS-SSN          (N9)
  2 REDEFINE AS-SSN
    3 AS-SSN-A       (A9)
  2 AS-TYPE         (A1)   /* 1 = stop / 2 = start
  2 AS-REAS-CODE    (A2)
  2 AS-STATUS       (A1)   /* A or R
  2 AS-BLANKET-CODE (A3)
  2 AS-EFF-DATE     (A4)   /* YYMM
  2 AS-TERM-DATE    (A4)   /* YYMM
  2 AS-AMOUNT       (P9.2) /* takes 6 bytes
  2 AS-NAME         (A20)
  2 AS-FILL-1       (A14)
*
1 NT-V VIEW OF A-NOTES
  2 ID-NUMBER
  2 NOTE-TEXT    (60)
  2 REDEFINE NOTE-TEXT
    3 NOTE-TEXT-OCC  (60)
      4 NOTE-TEXT-60           (A60)
      4 REDEFINE NOTE-TEXT-60
        5 NOTE-TEXT-FILL1        (A14)
        5 NOTE-TEXT-ALOT-PAYS-CN (A6)
        5 NOTE-TEXT-FILL2        (A40)
      4 REDEFINE NOTE-TEXT-60
        5 NOTE-TEXT-FILL3           (A17)
        5 NOTE-TEXT-ALOT-PAID-BY-CN (A6)
        5 NOTE-TEXT-FILL4           (A37)
*
1 NT2-V VIEW OF A-NOTES
  2 ID-NUMBER
  2 NOTE-TEXT    (60)
*
1 AT-V VIEW OF A-APPL-TRACKING
  2 INTRO-FLAG
  2 SSN
  2 CAP-IND
  2 CAP-LOAN-AMT      /* DW52
  2 CAP-TERM
  2 ACTION-FLAG       /* DW52
  2 ALLOT-STRT-AMT    /* DW53
*
1 #LOAN-PMT     (N3.2)          /* DW52
1 NEW-RETIREES  (A6)
1 REDEFINE NEW-RETIREES
  2 NR-ID-NUMBER  (N6)
*
1 #LAST-ACTIVE-STOP   (N6)
*
1 #SVC-FEE    (N3.2)  /* Was N2.2             /* DW54
1 #SVC-FEE-SP (N3.2) INIT <450.00>
1 #SVC-FEE-2P (N2.2) INIT <18.50>
1 #SVC-FEE-3P (N2.2) INIT <12.50>
1 #SVC-FEE-4P (N1.2) INIT <9.50>
1 #SVC-FEE-5P (N1.2) INIT <7.50>
1 #SVC-FEE-6P (N1.2) INIT <6.50>
1 #SVC-FEE-7P (N1.2) INIT <6.00>
1 #SVC-FEE-10 (N1.2) INIT <4.50>
1 #SVC-FEE-20 (N1.2) INIT <3.00>
1 #SVC-FEE-30 (N1.2) INIT <2.50>
1 #SVC-FEE-OL (N1.2) INIT <2.00>
1 #SVC-FEE-TM (N1.2) INIT <2.00>
1 #ALOT-DIFF           (N5.2)
1 #FOUND-LINKED-CN     (L)
1 #DOING-LINKED-CN     (L)
1 #STOP-STRT   (A5)
1 #ALOT-AMT-TO-PRT     (P5.2)
1 #TOT-MODAL-PREMIUM   (P5.2)
1 #TOTAL-AMOUNT-DIFF   (P5.2)
1 #TOTAL-AMT-DUES-DIFF (P5.2)
1 #WORK-DUES-DIFF      (P5.2)
1 #MODAL-PREMIUM       (P5.2)
1 #WORK-DIFF           (P5.2)
1 #PD-THRU-MM          (N2)
1 #WORK-LAST-MM        (N2)
1 #4-MONS-AGO          (N8)
1 #END-OF-LAST-MON     (N8)
1 #LAST-MON-YYYYMMDD   (N8)
1 REDEFINE #LAST-MON-YYYYMMDD
  2 #LAST-MON-YYYYMM   (N6)
1 REDEFINE #LAST-MON-YYYYMMDD
  2 #LAST-MON-YYYY       (N4)
  2 #LAST-MON-MM         (N2)
  2 #LAST-MON-DD         (N2)
1 #TOT-ALOT             (N5.2)
1 #FST-X                (I2)
1 #REMAINING-TRAN-AMT   (N5.2)
1 #AMT-DISP    (A8)
1 #NOTE-TEXT (A60/10)
1 #INT      (I2)
1 #PAYOR-CN        (N6)
1 REDEFINE #PAYOR-CN
  2 #PAYOR-CN-A (A6)
1 #PAYEE-CN        (N6)
1 REDEFINE #PAYEE-CN
  2 #PAYEE-CN-A (A6)
1 #FOUND-PAYOR     (L)
1 #FOUND-PAYEE     (L)
1 #FOUND-A-MATCH   (L)
1 #LK-CN    (N6/10)
1 REDEFINE #LK-CN
  2 #LK-CN-A (A6/10)
1 #LK-AMT   (N5.2/10)
1 #REMOVE-LOAN-PMT    (L)                          /* PM31
*
1 #G-PREM         (N5.2)
* 1 #TOT-G-PREM     (N5.2)
1 #NEW-BILL-TO    (N8)
1 #COUNTERS
  2 #RECS-READ        (P5)
  2 #RECS-SELECTED    (P5)
  2 #CNT              (P5)
  2 #CNT-2            (P5)
  2 #CNT-3            (P5)
  2 #CNT-4            (P5)
  2 #CNT-5            (P5)
  2 #CNT-6            (P5)
  2 #CNT-7            (P5)
  2 #I1               (I2)
  2 #I2               (I2)
  2 #I3               (I2)
  2 #I4               (I2)
  2 #I5               (I2)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM        (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY          (N4)
    3 #MM            (N2)
  2 #DD            (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A        (A4)
  2 #MM-A          (A2)
  2 #DD-A          (A2)
*
1 #TOT-MBR-G        (P5.2)
1 #TOT-LNK-G        (P5.2)
1 #LNK-G            (P5.2)
1 #MONS-DIFF        (P3)
1 #PREM-DIFF        (P5.2)
1 #MONS             (P3)
1 #REMAINDER        (P3.2)
*
1 #TOT-STOPS-IN     (N5)
1 #TOT-STARTS-IN    (N5)
1 #TOT-STOPS-OUT    (N5)
1 #TOT-STARTS-OUT   (N5)
1 #ERROR        (A55)
1 #REJECT       (L)
1 #AMT-6-DISP   (A6)
1 #FOUND-SSN    (L)
1 #ST-ISN       (P8)
1 #HAS-FBR      (L)
1 #FOUND-AT     (L)
1 #LAST-STOP-READ-ISN (P8)
1 #LAST-STOP-READ-SSN (N9)
1 #TOT-DB-CR   (N5.2)
1 #FORCE-A         (L)     /* DW43
*
* below is linkage to GRIDCSXX
1 #ID         (N6)
1 REDEFINE #ID
  2 #ID-A      (A6)
* THE FOLLOWING INPUT IS PASSED ONLY ON AN "AT" FOR A NEW RIDER
1 #AT-RID-ATTACH-FAC-AMT (N6.2) /* Only if attached to the new "AT"
1 #AT-RID-ATTACH-PLAN    (A3)   /*    policy not yet created
1 #AT-RID-PLAN           (A2/5) /* New rider plan
1 #AT-RID-ATTACH-ISS-DT  (N8/5) /* Only if attached to an existing pol
* output below  (ex = existing)
1 #AT-TOT-FBR-PREM        (N3.2)
1 #EX-FBR-PREM-BY-LINE    (N3.2/9)
1 #EX-SPS-DB-BY-LINE      (N6/9)
1 #EX-DEP-DB-BY-LINE      (N6/9)
1 #EX-EACH-DEP-DB-BY-LINE (N6/9)
1 #NUM-ELIG-CHILDREN      (N2)
1 #NUM-ELIG-CHILDREN-UNDER-6-MON (N2)
1 #TOT-CHILD-DB      (N6)
1 #RID-TEXT          (A78)
* above is linkage to GRIDCSXX
1 #POL-NUM           (A16)                                     /* vt1  \/
1 #OUT-FILE           (A250)
1 #OUT-FILE1          (A500)
* 1 #loan-funded        (a3) INIT<'LOF'>
1 #CONTACT-ID         (N8)
1 #E-MAIL             (A70)
1 #LOAN-CANCELLED       (A3) INIT<'CPD'>
1 #RANK-ABBR                           (A) DYNAMIC
1 #LETTER-ENV                          (A) DYNAMIC
1 #SALUTATION                          (A) DYNAMIC
1 #SALUTATION-WITH-NAME                (A) DYNAMIC
1 #OWNER-NAME             (A75)
1 #RESTRICTED-MAIL-CODE             (A1) CONST <'E'>
1 #INS-MAIL-CODE                    (A1)
1 #RESTRICTED-EMAIL                 (A3) CONST <'XXX'>
1 #ID-NUMBER1                      (N6)
1 #ISSUE-DATE-1                    (A10)
1 #PAID-TO-DATE                    (A10)
1 #X-ALT-LP-DATE                   (A10)
1 #WORK-DATE                       (N8)
1 REDEFINE #WORK-DATE
  2 #WORK-DATE-YYYY                  (N4)
  2 #WORK-DATE-MM                    (N2)
  2 #WORK-DATE-DD                    (N2)                  /* vt1 /\
*
1 #ID-NUMBER    (N6)
1 #DATE1        (N8)
*
1 #NXT-MON-YYYYMMDD-A             (A8)                    /* vt3 \/
1 REDEFINE #NXT-MON-YYYYMMDD-A
  2 #NXT-MON-YYYYMMDD             (N8)
  2 REDEFINE #NXT-MON-YYYYMMDD
    3 #NXT-MON-YYYYMM             (N6)
    3 #NXT-MON-DD                 (N2)
1 #WORK-DATE-D                     (D)                     /* vt3 /\
1 #EZ-TERM                        (A3) CONST <'EZ '>       /* YK4
1 DATE-OF-BIRTH                   (N8.0)       /* TT2
*
1 #comment                        (a31)                   /* vt9
1 #new-Aip-amt                    (n7.2)                  /* vt9
*
END-DEFINE
* * * * * * * * * * * * * * * * *
*
DEFINE WORK FILE 7 #EMAIL-MONTHLY-FILE TYPE 'ASCII-COMPRESSED'           /* vt1
  ATTRIBUTES 'APPEND'                                                    /* vt1
*
WRITE 'top of ATHPIALA'    /* DW99
WRITE 'Current TIMN=' *TIMN
MOVE *TIMN TO #TIMN                     /* DW41
IF *TIMN LT 1200000  /* midnite till 12 noon (normal job time) /* DW16
  MOVE *DATN TO #YYYYMMDD     /* *datn - 1 is considered today
  SUBTRACT 1 FROM #DD
*
  IF #DD LT 1
    SUBTRACT 1 FROM #MM
    IF #MM LT 1
      ADD 12 TO #MM
      SUBTRACT 1 FROM #YYYY
    END-IF
*
    IF #MM = 02
      COMPUTE #WORK = #YYYY / 4  /* check leap year
      IF #REM = 0
        MOVE 29 TO #DD
      ELSE
        MOVE 28 TO #DD
      END-IF
    ELSE
      IF #MM = 04 OR = 06 OR = 09 OR = 11
        MOVE 30 TO #DD
      ELSE
        MOVE 31 TO #DD
      END-IF
    END-IF
  END-IF
*
  MOVE #YYYYMMDD TO #TODA
ELSE                  /* noon till midnite (if job is run early)
  MOVE *DATN TO #TODA
END-IF
WRITE 'PROCESSing date=' #TODA
*
READ WORK 1 ONCE RECORD #JCL-PARM
*
MOVE #JCL-YYYY TO #YYYY
MOVE #JCL-MM   TO #MM
MOVE #JCL-DD   TO #DD
MOVE #YYYYMMDD TO #PARM-YYYYMMDD
*
MOVE #PARM-YYYYMMDD TO #NXT-MON-YYYYMMDD-A                         /* vt3 \/
MOVE EDITED #NXT-MON-YYYYMMDD-A TO #WORK-DATE-D  (EM=YYYYMMDD)
ADD 31 TO #WORK-DATE-D
MOVE EDITED #WORK-DATE-D (EM=YYYYMMDD) TO #NXT-MON-YYYYMMDD-A
WRITE '='  #NXT-MON-YYYYMM                                         /* vt3 /\
*
MOVE #PARM-YYYYMMDD TO #YYYYMMDD
MOVE 15 TO #DD
SUBTRACT 1 FROM #MM
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
*
MOVE #YYYYMMDD TO #LAST-MON-YYYYMMDD
*
MOVE #PARM-YYYYMMDD TO #YYYYMMDD
MOVE 15 TO #DD
ADD 3 TO #MM
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD  1 TO #YYYY
END-IF
*
MOVE #YYYYMMDD TO #NEW-BILL-TO
*
MOVE #PARM-YYYYMMDD TO #YYYYMMDD
SUBTRACT 4 FROM #MM
IF #MM LT 12
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
*
MOVE #YYYYMMDD TO #4-MONS-AGO
*
MOVE #LAST-MON-YYYYMMDD TO #YYYYMMDD
IF #MM = 2
  MOVE 28 TO #DD
ELSE
  IF #MM = 4 OR = 6 OR = 9 OR = 11
    MOVE 30 TO #DD
  ELSE
    MOVE 31 TO #DD
  END-IF
END-IF
*
MOVE #YYYYMMDD TO #END-OF-LAST-MON
*
* MOVE #PARM-YYYYMMDD TO #YYYYMMDD
* ADD 3 TO #MM
* IF #MM GT 12
*   SUBTRACT 12 FROM #MM
*   ADD 1 TO #YYYY
* END-IF
* MOVE #YYYYMM TO #3-MONS-IN-FUTURE-YYYYMM
*
COMPRESS 'CN'      #TAB                                    /* vt1 \/
  'Name'           #TAB
  'Issue Date'     #TAB
  'Policy Number'  #TAB
  'AIL/EIL'        #TAB
  'Date AIL/EIL created'  #TAB
  'Paid-to-date'   #TAB
  INTO  #OUT-FILE1 LEAVING NO
WRITE WORK 5 #OUT-FILE1                                          /* vt1 /\
COMPRESS #ID-NUMBER #TAB                                     /* vt1 06292011 \/
  #DATE1            #TAB
  #DATE1            #TAB
  #WORK-DIFF        #TAB
  INTO #OUT-FILE LEAVING NO
WRITE WORK 6 #OUT-FILE                                       /* vt1 06292011 /\
*
FORMAT     LS=133 PS=76
WRITE      TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Allotment Stops and Starts Exceptions'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (2) LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Allotment Stops and Starts'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (3) LS=133 PS=76
WRITE  (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Allotment Rejects and Exceptions'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (4) LS=133 PS=76
WRITE  (4) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Allotment Starts with Amount Mismatches'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (5) LS=133 PS=76
WRITE  (5) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Allotment CAP Starts with Amount Mismatches'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (6) LS=133 PS=76
WRITE  (6) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Allotment STOPS for deceased member with CREDITS'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (7) LS=133 PS=76
WRITE  (7) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
*  'DB/CR BADJ Adjustments'                          /* vt5
  'DB/CR Term-Ref BADJ Adjustments'                  /* vt5
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (8) LS=133 PS=76
WRITE  (8) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X    /* YK1
  'Records with Mode change from "G" to "Q" with Allotment Authorization "Y"'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
COMPRESS 'CN'                         /* DW26
  #TAB 'ISS-Date'
  #TAB 'Exception Message'
  INTO #EXCEPTIONS LEAVING NO
WRITE WORK 4 #EXCEPTIONS
WRITE (8) #EXCEPTIONS
*                                            NG1
RESET PARM-SVC
PARM-SVC.ACTION        := 'GET'
PARM-SVC.SVC-PLAN      := 'PSM'
PARM-SVC.TRANSACTION-DATN := #PARM-YYYYMMDD
*                                            NG1
READ WORK 2 RECORD STARTS-STOPS-REC
  ADD 1 TO #RECS-READ
*
  RESET #REJECT
  RESET #FOUND-SSN
*
* IF (AS-TYPE = '2')
*  AND (AS-SSN = #LAST-STOP-READ-SSN)
*   MOVE TRUE TO #FOUND-SSN
* ELSE

  FIND ST-V WITH SSN = AS-SSN
*     IF  (ST-V.PROCESS-IND = 'S' OR = 'C') /*bypass AFSC & all CONTACTs
*     IF  (ST-V.PROCESS-IND = 'S')       /* bypass AFSC            /* DW58
    IF  ((ST-V.PROCESS-IND = 'C')  /* bypass all 'C's except    DW4
        AND (ST-V.INTRO-FLAG NE 'A'))       /* AT-PENDING's     DW4
      ESCAPE TOP
    END-IF
*
    IF   (ST-V.PROCESS-IND = 'C')                           /* DW4
        AND (ST-V.INTRO-FLAG = 'A')       /* AT-PENDING's         DW4
      IF AS-TYPE = '2'                                      /* DW4
*         WRITE AS-SSN ST-V.ID-NUMBER 'Allotment Start to an AT-PENDING'
        WRITE (3) AS-SSN ST-V.ID-NUMBER
          'Allotment Start to an AT-PENDING' AS-AMOUNT (EM=Z,ZZZ.99)
      ELSE
*         WRITE AS-SSN ST-V.ID-NUMBER 'Allotment Stop to an AT-PENDING'
        WRITE (3) AS-SSN ST-V.ID-NUMBER
          'Allotment Stop to an AT-PENDING' AS-AMOUNT (EM=Z,ZZZ.99)
      END-IF
    END-IF
*
    MOVE TRUE TO #FOUND-SSN
    MOVE *ISN TO #ST-ISN
  END-FIND
* END-IF
*
  IF NOT #FOUND-SSN    /* AAFMAA SSN does not exist
    RESET ST-V
*
    RESET #FOUND-AT
    FIND AT-V WITH SSN = AS-SSN
      IF AT-V.INTRO-FLAG = 'V'
        ESCAPE TOP
      END-IF
*
      MOVE TRUE TO #FOUND-AT
    END-FIND
*
    IF #FOUND-AT
      MOVE 'STOP/START rej - ST SSN not found but is an AT' TO #ERROR
    ELSE
      IF  (#PARM-YYYYMMDD= 20040701)
          AND (AS-SSN = 516111195 OR = 516111395)
        WRITE 'bypassed SSN non match' AS-SSN
        ESCAPE TOP
      ELSE
        MOVE 'STOP/START rej - SSN not found' TO #ERROR
      END-IF
    END-IF
*
    PERFORM PRINT-ERROR
    ESCAPE TOP
  END-IF
*
  RESET #FORCE-A                            /* DW43
  IF AS-TYPE = '1'    /* stop
    ADD 1 TO #TOT-STOPS-IN
    PERFORM ALLOTMENT-STOP
  END-IF
*
  RESET DATE-OF-BIRTH                                                   /* TT2
  DATE-OF-BIRTH := GET-DATE-OF-BIRTH(<ST-V.MEMBER-CONTACT-ID>)          /* TT2
*
  IF AS-TYPE = '2'    /* start
    ADD 1 TO #TOT-STARTS-IN
    PERFORM ALLOTMENT-START
  END-IF
*
  END TRANSACTION
*
  IF #FORCE-A                          /* DW43
    MOVE 'EDS' TO #CGA-CLERK
    MOVE TRUE TO #FORCE-A
    CALLNAT 'GAUTHSXX' ST-V.ID-NUMBER      /*Set ALOT-CHG-AUTH to A
      #CGA-CLERK #FORCE-A
    RESET #FORCE-A
  END-IF
END-WORK
*
WRITE (6) '                         ___________'
WRITE (6) 'Total=                    ' #TOT-DB-CR
WRITE 'total stops in   =' #TOT-STOPS-IN
WRITE 'total starts in  =' #TOT-STARTS-IN
WRITE 'total stops done =' #TOT-STOPS-OUT
WRITE 'total starts done=' #TOT-STARTS-OUT
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ALLOTMENT-STOP
* * * * * * * * * * * * * * * * * *
*
IF AS-REAS-CODE = '**'   /* act to ret retired with same amt
  ESCAPE ROUTINE
END-IF
*
GET ST-V #ST-ISN
MOVE #ST-ISN TO #LAST-STOP-READ-ISN
MOVE ST-V.SSN TO #LAST-STOP-READ-SSN
*
* IF ST-V.ALOT-AMT NE AS-AMOUNT
*   MOVE 'STOP rej - DFAS Alot must match AAFMAA Alot' TO #ERROR
*   PERFORM PRINT-ERROR
*   ESCAPE ROUTINE
* END-IF
*
MOVE ST-V.ALOT-AMT TO #TOT-ALOT
*
FIND (1) NT-V WITH ID-NUMBER = ST-V.ID-NUMBER
  FOR #I2 1 TO 60
    IF NT-V.NOTE-TEXT (#I2) = MASK ('*#ALOT:PAYS')
      FIND LK-V WITH MEMBER-KEY = NOTE-TEXT-ALOT-PAYS-CN (#I2)
        ADD LK-V.ALOT-AMT TO #TOT-ALOT
      END-FIND
    END-IF
  END-FOR
END-FIND
*
IF AS-AMOUNT NE #TOT-ALOT
  MOVE EDITED #TOT-ALOT (EM=Z,ZZZ.99) TO #AMT-DISP
  COMPRESS 'STOP rej - DFAS not = AAFM Amt of' #AMT-DISP
    INTO #ERROR
  PERFORM PRINT-ERROR
  ESCAPE ROUTINE
END-IF
*
PERFORM UPDATE-REC-WITH-STOP
*
IF ALOT-CHG-AUTH = 'S'            /* DW2
  MOVE 'N' TO ALOT-CHG-AUTH      /* Was 'Y'    /* DW21
  RESET ALOT-CHG-DATE
  ALOT-CHG-AUTH-DATE := #YYYYMMDD   /* YK2
END-IF
*
IF AS-STATUS = 'A'   /* active stop
  MOVE ST-V.ID-NUMBER TO #LAST-ACTIVE-STOP
END-IF
*
UPDATE (0833)
*
FIND (1) NT-V WITH ID-NUMBER = ST-V.ID-NUMBER
  FOR #I2 1 TO 60
    IF NT-V.NOTE-TEXT (#I2) = MASK ('*#ALOT:PAYS')
      FIND ST-V WITH MEMBER-KEY = NOTE-TEXT-ALOT-PAYS-CN (#I2)
        PERFORM UPDATE-REC-WITH-STOP
*
        UPDATE (0880)                           /* PM29
      END-FIND
    END-IF
  END-FOR
END-FIND
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE UPDATE-REC-WITH-STOP
* * * * * * * * * * * * * * * * * * *
*
IF ST-V.ID-NUMBER = 109259      /* DW99
  WRITE '***** 109259 line 1528 doing stop for ' ST-V.ID-NUMBER
END-IF

RESET #BANKRUPT
FIND NT2-V WITH ID-NUMBER = ST-V.ID-NUMBER
  FOR #I5 1 TO 60
    IF NT2-V.NOTE-TEXT (#I5) = MASK ('*Mbr in bnkrptcy')
      WRITE AS-SSN ST-V.ID-NUMBER 'Stop of a BANKRUPT member'
      MOVE TRUE TO #BANKRUPT
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-FIND
*
MOVE #PARM-YYYYMMDD TO ST-V.STOP-DATE
MOVE ST-V.ALOT-AMT  TO #ALOT-AMT-TO-PRT
MOVE ST-V.ALOT-AMT  TO #PRIOR-ALOT-AMT    /* DW27
RESET                   ST-V.ALOT-AMT
*
* RESET #TOT-G-PREM #TOT-MODAL-PREMIUM
FOR #I1 1 TO 9
  IF   (ST-V.STATUS (#I1) = 'D')
      AND (ST-V.PAID-UP-DATE-YYYYMM (#I1) LT #PARM-YYYYMM) /* pd-up
      AND (ST-V.PAY-STATUS (#I1) LT '40')
    WRITE AS-SSN ST-V.ID-NUMBER ST-V.ISSUE-DATE(#I1)
      '*** STOP - pdup but not pay-stat 42'
  END-IF
*
*  IF (AS-REAS-CODE = '##')                            /* DW24 PM31
*   AND (STATUS (#I1) = 'D')                           /* PM31
*    IF ((ST-V.X-ALT-LP-IND   (#I1) = '1' OR = '2')    /* PM31
*     OR  (ST-V.X-ALT-LP-IND-2 (#I1) = '1' OR = '2'))  /* PM31
*      MOVE 'Mode would have become M or Q and ALP reset' TO #EXCP  /* DW26 PM31
*                                                      /* PM31
*      COMPRESS ST-V.ID-NUMBER                         /* DW26 PM31
*        #TAB ST-V.ISSUE-DATE (#I1)                    /* PM31
*        #TAB #EXCP                                    /* PM31
*            INTO #EXCEPTIONS LEAVING NO               /* PM31
*      WRITE WORK 4 #EXCEPTIONS                        /* PM31
*    END-IF                                            /* PM31
*  END-IF                                              /* PM31
*
  IF AS-REAS-CODE NE '##'    /* ## means a start follows this stop   /* DW24
    IF   (ST-V.CONV-DURATION (#I1) = 999)   /* DW5
        AND (ST-V.X-LOAN-AMOUNT (#I1) GT 5.00) /* must match ATHPIALN
        AND (NOT #BANKRUPT)
*    AND (MODE (#I1) = 'G')  /* Removed - Now we can make mip with any mode   DW34
      IF MODE (#I1) NE 'G'
        IF   (ST-V.X-ALT-LP-IND (#I1) = '1' OR = '2')
            AND (ST-V.X-ALT-LP-AMT (#I1) NE 0)
          MOVE '6' TO ST-V.X-ALT-LP-IND (#I1)
          WRITE ST-V.ID-NUMBER 'STOP for CAP w NON Mode G w loan to become MIP'
        END-IF
        ESCAPE TOP
      END-IF                                                  /* END DW34
*
      WRITE ST-V.ID-NUMBER 'STOP for CAP w Mode G w loan to become MIP'
      IGNORE   /* These will become MIP's
    ELSE
      IF ST-V.X-ALT-LP-IND (#I1) = '1' OR = '2'   /* DW5
*       ADD ST-V.X-ALT-LP-AMT (#I1) TO #TOT-MODAL-PREMIUM
        WRITE ST-V.ID-NUMBER 'ALP fixed removed due to ALOT STOP' MODE (#I1)
          CONV-DURATION (#I1) X-LOAN-AMOUNT (#I1)
        RESET ST-V.X-ALT-LP-IND (#I1)
        RESET ST-V.X-ALT-LP-AMT (#I1)
      END-IF
*
      IF ST-V.X-ALT-LP-IND-2 (#I1) = '1' OR = '2'  /* DW5
*      ADD ST-V.X-ALT-LP-AMT-2 (#I1) TO #TOT-MODAL-PREMIUM
        WRITE ST-V.ID-NUMBER 'ALP var removed due to ALOT STOP' MODE (#I1)
          CONV-DURATION (#I1) X-LOAN-AMOUNT-2 (#I1)
        RESET ST-V.X-ALT-LP-IND-2 (#I1)
        RESET ST-V.X-ALT-LP-AMT-2 (#I1)
      END-IF
    END-IF
  END-IF
*
  IF   (ST-V.MODE (#I1) NE 'G')
      OR (ST-V.STATUS (#I1) NE 'D')
      OR (ST-V.PAY-STATUS (#I1) GT '41')
      OR (ST-V.PAID-UP-DATE-YYYYMM (#I1) LT #PARM-YYYYMM) /* pd-up
    ESCAPE TOP
  END-IF
*
  IF ST-V.PAY-STATUS (#I1) = '41'
    MOVE '42' TO ST-V.PAY-STATUS (#I1)
    ESCAPE TOP
  END-IF
*
  COMPUTE #G-PREM = ST-V.ANNUAL-PREM (#I1) / 12
  IF ST-V.PLAN(#I1) = #EZ-TERM                           /* YK4
    #G-PREM := #G-PREM - 1                               /* YK4
  END-IF                                                 /* YK4
*
  IF  (AS-REAS-CODE = '##')    /* ## means a start follows this stop   /* DW24
      OR (ST-V.PAID-TO-DATE (#I1) GE #PARM-YYYYMMDD) /* Future pd-to-date   /* DW48
    IF   (ST-V.PAID-TO-DATE (#I1) GE #PARM-YYYYMMDD)    /* DW48
        AND (AS-REAS-CODE NE '##')    /* ## means a start follows this stop   /* DW24
      WRITE ST-V.ID-NUMBER 'Standalone STOP with future pd-to - did not chg to Q'
    END-IF
    MOVE '21' TO ST-V.PAY-STATUS (#I1)
*
    ESCAPE TOP
  END-IF
  reset #term-ref-adj #prior-term-ref              /* vt6 10/08/2014
    #tot-trmf-amt                                    /* vt7 02/02/2015
*  ADD #G-PREM TO #TOT-G-PREM
*    on caps w loan > 5.00 chg AIP to MIP & chg mode to 'M' if only STOP
  IF   (ST-V.CONV-DURATION (#I1) = 999)
      AND (ST-V.X-LOAN-AMOUNT (#I1) GT 5.00) /* must match ATHPIALN
***      AND (NOT #BANKRUPT)                                 /* vt5
*
    if   VAWL-TRUE (<st-v.plan(#i1)>)                        /* vt5
      ignore                                                 /* vt5
    else                                                     /* vt5
      perform get-term-ref                                   /* vt5
    end-if                                                   /* vt5
    write 'CAP' '=' st-v.id-number '=' #tot-trmf-amt
    IF (ST-V.DEBIT-CREDIT-AMT NE 0 )
        or (#tot-trmf-amt ne 0 )                                 /* vt5
      MOVE ST-V.X-BILL-ADJUST (#I1) TO #PRIOR-BADJ      /* DW10
      MOVE ST-V.DEBIT-CREDIT-AMT    TO #PRIOR-DB-CR
      compute #prior-term-ref := #tot-trmf-amt * -1        /* vt5
      move  #tot-trmf-amt     to #term-ref-adj             /* vt5
      MOVE ST-V.DEBIT-CREDIT-AMT TO #BADJ-ADJ
      add #prior-term-ref        to #badj-adj              /* vt5
      COMPUTE #DB-CR-ADJ = ST-V.DEBIT-CREDIT-AMT * -1
      MOVE 'SPMM' TO #CMBX  /* STOP MODE to M              /* DW13
      COMPRESS 'STOP-CAP Mod to M' ST-V.ISSUE-DATE(#I1)
        INTO #ADJ-DESC
      PERFORM DB-CR-BADJ-ADJUSTMENT                     /* DW10
    END-IF
*
    MOVE 'M' TO ST-V.MODE (#I1)
    ADD ST-V.DEBIT-CREDIT-AMT TO ST-V.X-BILL-ADJUST (#I1)
    add #prior-term-ref       to st-v.x-bill-adjust (#i1)         /* vt5
    RESET ST-V.DEBIT-CREDIT-AMT
    perform reset-term-ref                                        /* vt5
*
    IF   (ST-V.X-ALT-LP-IND (#I1) NE '0')
        AND (ST-V.X-ALT-LP-AMT (#I1) NE 0)
      MOVE '6' TO ST-V.X-ALT-LP-IND (#I1)
    END-IF
*
    IF ST-V.PAY-STATUS (#I1) = '12'
      MOVE '20' TO ST-V.PAY-STATUS (#I1)
    END-IF
*
    IF ST-V.PAY-STATUS (#I1) = '21'
      MOVE '22' TO ST-V.PAY-STATUS (#I1)
    END-IF
  ELSE
    reset #term-ref-adj #prior-term-ref                /* vt7 02/02/2015
      #tot-trmf-amt                                    /* vt7 02/02/2015
*   below added 6/29/2001 as per khb
    IF (ST-V.CONV-DURATION (#I1) NE 999)
        or (st-v.conv-duration(#i1) eq 999 and st-v.x-loan-amount(#i1) = 0) /* vt6 10/02/2014
      if   VAWL-TRUE (<st-v.plan(#i1)>)                               /* vt5
        ignore                                                        /* vt5
      else                                                            /* vt5
        perform get-term-ref                                          /* vt5
      end-if                                                          /* vt5
      write 'no cap or cap with no loan' '=' st-v.id-number '=' #tot-trmf-amt
      IF (ST-V.DEBIT-CREDIT-AMT NE 0)
          or (#tot-trmf-amt ne 0 )                                      /* vt5
        MOVE ST-V.X-BILL-ADJUST (#I1) TO #PRIOR-BADJ /* DW10
        MOVE ST-V.DEBIT-CREDIT-AMT    TO #PRIOR-DB-CR
        compute #prior-term-ref := #tot-trmf-amt * -1                 /* vt5
        move  #tot-trmf-amt     to #term-ref-adj                      /* vt5
        MOVE ST-V.DEBIT-CREDIT-AMT TO #BADJ-ADJ
        add #prior-term-ref        to #badj-adj                       /* vt5
        COMPUTE #DB-CR-ADJ = ST-V.DEBIT-CREDIT-AMT * -1
        MOVE 'SPMQ' TO #CMBX  /* STOP MODE to Q                /* DW13
        COMPRESS 'STOP-Mod to Q' ST-V.ISSUE-DATE(#I1) INTO #ADJ-DESC
        PERFORM DB-CR-BADJ-ADJUSTMENT              /* DW10
        ADD ST-V.DEBIT-CREDIT-AMT TO ST-V.X-BILL-ADJUST (#I1)
        add #prior-term-ref       to st-v.x-bill-adjust (#i1)         /* vt5
        RESET ST-V.DEBIT-CREDIT-AMT
        perform reset-term-ref                                        /* vt5
      END-IF
    END-IF
*
    IF ST-V.MODE (#I1) = 'G' AND                              /* YK1
        (ST-V.ALOT-CHG-AUTH = 'Y' OR = 'S' OR = 'A') /* YK1   DW42
      COMPRESS ST-V.ID-NUMBER #TAB ST-V.ISSUE-DATE (#I1)     /* YK1
        #TAB ST-V.MILITARY-STATUS #TAB 'Mode changed from G to Q'
        INTO #EXCEPTIONS LEAVING NO
      WRITE (8) #EXCEPTIONS                                  /* YK1
    END-IF
    MOVE 'Q'  TO ST-V.MODE (#I1)        /* CONVERT TO MODE Q
*
    IF ST-V.PAY-STATUS (#I1) NE '20'   /* fpwt
      MOVE '22' TO ST-V.PAY-STATUS (#I1)  /* PP
    END-IF
  END-IF
END-FOR
*
* ADD #TOT-G-PREM TO #TOT-MODAL-PREMIUM
*
MOVE *DATN                 TO ST-V.DTS-DATN
MOVE *TIMN                 TO ST-V.DTS-TIMN
*
IF #PRIOR-ALOT-AMT NE 0      /* DW27
  PERFORM PROCESS-ACCT-REG-STOP-STRT
  PERFORM PRINT-STOP-START
  ADD 1 TO #TOT-STOPS-OUT
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ALLOTMENT-START
* * * * * * * * * * * * * * * * * *
*
GET ST-V #ST-ISN
*
IF AS-REAS-CODE = '**'   /* act to ret retired with same amt
  PERFORM ACT-TO-RET
*
  UPDATE (1110)
  ESCAPE ROUTINE
END-IF
*
reset st-v.alot-amt      /* vt8  \/  12/24/2015   !!!!!!!!!!!!!!!!!!!!!!!!
* IF ST-V.ALOT-AMT NE 0
*   MOVE 'START rej - AAFMAA Alot must be zero' TO #ERROR
*   PERFORM PRINT-ERROR
*   ESCAPE ROUTINE
* END-IF                 /* VT8 /\
*
MOVE 'BTR' TO #CGA-SCR-SUFFIX #CGA-ORIG-SUFFIX /* BTR returns amt from FA /* DW39
*                   and gets 'Current" (not 2 months from now) alot amt needed
*
* write st-v.id-number 'Go To FA'
MOVE 'FA' TO #CGA-SCR-COMMAND      #CGA-ORIG-COMMAND
MOVE ST-V.ID-NUMBER TO #CGA-SCR-ID #CGA-ORIG-ID
MOVE #ST-ISN TO #CGA-ISN
RESET #CGA-MF-SCR-PARM-1-N
FETCH RETURN 'C2800PFA'           /* GET NEW ALOT
*

MOVE #CGA-MF-ORIG-PARM-1 TO #CURR-ALOT-A
COMPUTE #NEW-ALOT = #CGA-MF-SCR-PARM-1-N / 100                       /* END DW39

*
FOR #FST-X 1 TO 9   /* get 1st active pol
  IF ST-V.STATUS (#FST-X) = 'D'
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF #FST-X GT 9
  MOVE 1 TO #FST-X
END-IF
*
RESET #TOT-ALOT #HAS-FBR
RESET #USE-FUTURE-PD-THRU #EXTRA-AMT-NEEDED-FOR-FUTURE      /* DW51
*
FOR #I1 1 TO 9
  IF   (ST-V.STATUS (#I1) = 'D')
      AND (RID-PLAN (#I1) NE ' ')
    MOVE TRUE TO #HAS-FBR
  END-IF
END-FOR
*
IF #HAS-FBR
  MOVE ST-V.ID-NUMBER TO #ID
  CALLNAT 'GRIDCSXX' USING
    #ID
    #AT-RID-ATTACH-FAC-AMT
    #AT-RID-ATTACH-PLAN
    #AT-RID-PLAN            (1:5)
    #AT-RID-ATTACH-ISS-DT   (1:5)
    #AT-TOT-FBR-PREM
    #EX-FBR-PREM-BY-LINE    (1:9)
    #EX-SPS-DB-BY-LINE      (1:9)
    #EX-DEP-DB-BY-LINE      (1:9)
    #EX-EACH-DEP-DB-BY-LINE (1:9)
    #NUM-ELIG-CHILDREN
    #NUM-ELIG-CHILDREN-UNDER-6-MON
    #TOT-CHILD-DB
    #RID-TEXT
*
  IF #RID-TEXT NE ' '
    WRITE AS-SSN ST-V.ID-NUMBER 'FBR ERROR MESSAGE' #RID-TEXT
  END-IF
END-IF
*
IF ST-V.ID-NUMBER = 109259      /* DW99
  WRITE '***** 109259 line 2040 doing' ST-V.ID-NUMBER
END-IF

FOR #I1 1 TO 9

  IF   (ST-V.STATUS (#I1) = 'D')                              /* DW51
      AND (ST-V.PAY-STATUS (#I1) LE '40')
      AND (ST-V.PAID-UP-DATE-YYYYMM(#I1) GE #PARM-YYYYMM)
      AND (ST-V.PAID-TO-DATE-YYYYMM (#I1) GE #PARM-YYYYMM) /* paid in adv probably a
      AND (ST-V.MODE (#I1) = 'G' OR = 'M')                 /* New policy
    ADD (ST-V.ANNUAL-PREM (#I1) / 12) TO #EXTRA-AMT-NEEDED-FOR-FUTURE
    IF ST-V.PLAN(#I1) = #EZ-TERM                                        /* YK4
      #EXTRA-AMT-NEEDED-FOR-FUTURE := #EXTRA-AMT-NEEDED-FOR-FUTURE - 1  /* YK4
    END-IF                                                              /* YK4
  END-IF                                                      /* END DW51
*

  IF   (ST-V.STATUS (#I1) = 'D')
      AND (ST-V.PAY-STATUS (#I1) LE '40')
      AND (ST-V.PAID-UP-DATE-YYYYMM(#I1) GE #PARM-YYYYMM)   /* DW11
      AND (ST-V.PAID-TO-DATE-YYYYMM (#I1) LT #PARM-YYYYMM) /*not paid in adv /*DW37
*             above reinstated 9/5/2008                                DW47
*
*   IF ST-V.MODE (#I1) = 'A' OR = 'S' OR = 'Q'        /* DW23 PM31
*     COMPRESS 'Pol w mode' ST-V.MODE(#I1) 'bypassed on start' TO #EXCP /* DW26 PM31
*                                                     /* PM31
*     COMPRESS ST-V.ID-NUMBER                         /* DW26
*       #TAB ST-V.ISSUE-DATE (#I1)                    /* PM31
*       #TAB #EXCP                                    /* PM31
*           INTO #EXCEPTIONS LEAVING NO               /* PM31
*     WRITE WORK 4 #EXCEPTIONS                        /* PM31
*   END-IF                                            /* PM31
*
    IF   ((ST-V.ISSUE-DATE (#I1) LT 19970101) /* OLD/NEW     /* DW44
        OR (ST-V.MONTH-ALLOC-AMT (#I1) = 999.99))
        AND (ST-V.PAID-UP-DATE-YYYYMM (#I1) = #PARM-YYYYMM) /* nxt Mon
        AND (ST-V.PAY-STATUS(#I1) LE '40')
        AND (ST-V.MODE (#I1) = 'G' OR = 'M')
      IF ST-V.PLAN (#I1) = 'OL' OR = 'SO' OR = 'GPL' OR = 'GP2'        /* TT1      /* DW46
        MOVE DATE-OF-BIRTH TO #YYYYMMDD                                /* TT2
      ELSE
        MOVE ST-V.ISSUE-DATE (#I1) TO #YYYYMMDD
      END-IF
      SUBTRACT 1 FROM #DD
      COMPUTE ROUNDED #HOLD-MOD-PREM = (ST-V.ANNUAL-PREM(#I1) / 12)
        * #DD / 30
      WRITE 'OLD/NEW paid-up-this Month' ST-V.ISSUE-DATE (#I1)
        'Num days =' #DD 'prem=' #HOLD-MOD-PREM
      ADD #HOLD-MOD-PREM TO #TOT-ALOT
    ELSE                                                 /* END DW44
*     IF ST-V.MODE (#I1) = 'G' OR = 'M' OR = 'A' OR = 'S' OR = 'Q'  /* DW23
      IF   (ST-V.MODE (#I1) = 'G' OR = 'M')                        /* DW23
        ADD (ST-V.ANNUAL-PREM (#I1) / 12) TO #TOT-ALOT
        IF ST-V.PLAN(#I1) = #EZ-TERM                           /* YK4
          #TOT-ALOT := #TOT-ALOT - 1                           /* YK4
        END-IF                                                 /* YK4
      END-IF
    END-IF
*
    IF #HAS-FBR
      ADD #EX-FBR-PREM-BY-LINE (#I1) TO #TOT-ALOT
    END-IF
*
    PERFORM CALC-DUES
    ADD #SVC-FEE TO #TOT-ALOT
*
    IF ST-V.OWNERSHIP-FLAG (#I1) = 'N'
      WRITE (2) ST-V.ID-NUMBER AS-SSN
        ST-V.ISSUE-DATE (#I1) 'Has Non-Mbr Owner'
    END-IF
  END-IF
*
  IF AS-REAS-CODE NE '##'  /* A Standalone START              /* DW24
*   IF ST-V.X-ALT-LP-IND    (#I1) = '1' OR = '2' OR = '6'         /* DW49
    IF   (ST-V.X-ALT-LP-IND (#I1) = '1' OR = '2') /* DO Not stop the MIP
      RESET ST-V.X-ALT-LP-IND (#I1)
      RESET ST-V.X-ALT-LP-AMT (#I1)
      WRITE ST-V.ID-NUMBER AS-SSN
        'Fixed Interest ALP zapped due to start'
    END-IF
*
    IF   (ST-V.X-ALT-LP-IND (#I1) = '6')  /* If MIP and sufficient ALOT   /*DW49
        AND (AS-AMOUNT GE (ST-V.X-ALT-LP-AMT (#I1) + #NEW-ALOT)) /* make it an AIP
      MOVE '2' TO ST-V.X-ALT-LP-IND (#I1)
      MOVE 'Fixed MIP (6) chged to AIP (2)' TO #EXCP
      COMPRESS ST-V.ID-NUMBER
        #TAB ST-V.ISSUE-DATE (#I1)
        #TAB #EXCP
        INTO #EXCEPTIONS LEAVING NO
      WRITE WORK 4 #EXCEPTIONS
      WRITE ST-V.ID-NUMBER AS-SSN #EXCP
    END-IF                                                /* END DW49
*
    IF ST-V.X-ALT-LP-IND-2  (#I1) = '1' OR = '2'
      RESET ST-V.X-ALT-LP-IND-2 (#I1)
      RESET ST-V.X-ALT-LP-AMT-2 (#I1)
      WRITE ST-V.ID-NUMBER AS-SSN
        'Variable Interest ALP zapped due to start'
    END-IF
  END-IF
*
  IF ST-V.X-ALT-LP-IND (#I1) = 'L' /*AIP Waiting for CAP - Loan-only (AIL)  /*DW38
*   * if (st-v.paid-to-date-yyyymm(#i1) eq #last-mon-yyyymm)   /* vt2 07272011 vt3
*    IF (ST-V.PAID-TO-DATE-YYYYMM(#I1) GE #NXT-MON-YYYYMM)                  /* vt3
*      ADD #EXTRA-AMT-NEEDED-FOR-FUTURE TO #NEW-ALOT               /* new PM99  ???????
*    END-IF                                                  /* vt2 07272011
*
    WRITE ST-V.ID-NUMBER 'AIL Processing' '=' ST-V.X-ALT-LP-AMT (#I1) / '=' AS-AMOUNT '=' #NEW-ALOT /
      '=' #EXTRA-AMT-NEEDED-FOR-FUTURE
*
*    if st-v.x-alt-lp-amt (#i1) gt (AS-AMOUNT - st-v.alot-amt) /*Diff must be >= AIL
*   if st-v.x-alt-lp-amt (#i1) gt (AS-AMOUNT - #curr-alot) /*Diff must be >= AIL /*DW39
    IF  (AS-AMOUNT LT #NEW-ALOT) /*New ALOT must = or exceed Amt needed from FA /*DW39
        OR (ST-V.PAID-TO-DATE-YYYYMM (#I1) LT #LAST-MON-YYYYMM AND ST-V.PAY-STATUS (#I1) LT '40')
        OR (ST-V.X-FIRST-PLACE-FEE(#I1) NE 0 )                   /* vt1
      WRITE ST-V.ID-NUMBER 'AIL bypassed AIL=' ST-V.X-ALT-LP-AMT (#I1) 'Insuff or delq'    /* vt1
      IF (ST-V.PAID-TO-DATE-YYYYMM (#I1) LT #LAST-MON-YYYYMM )    /* vt1
        PERFORM CREATE-REPORT                                     /* vt1
        PERFORM CREATE-EMAIL                                      /* vt1
      END-IF                                                      /* vt1
    ELSE
      WRITE ST-V.ID-NUMBER 'AIL becomes AIP (X)'
      #new-aip-amt := AS-amount - #new-alot                                            /* vt9  \/
      if #new-aip-amt ne 0
        #comment := 'Will adjust monthly loan amount'
      else
        reset #comment
      end-if                                                                           /* vt9  /\
      MOVE '*' TO ST-V.X-ALT-LP-IND (#I1)   /* To tell ATHPCPLN to give loan
      MOVE 'Fixed AIL Waiting (L) chged to AIP (2)' TO #EXCP  /* DW26
*
      COMPRESS ST-V.ID-NUMBER                         /* DW26
        #TAB ST-V.ISSUE-DATE (#I1)
        #TAB #EXCP
        INTO #EXCEPTIONS LEAVING NO
      WRITE WORK 4 #EXCEPTIONS

    END-IF
  END-IF
*
  IF ST-V.X-ALT-LP-IND (#I1) = '9'   /* AIP Waiting for INCREASE      /*DW22
    MOVE '2' TO ST-V.X-ALT-LP-IND (#I1)
    MOVE 'Fixed AIP Waiting (AIW)(9) chged to AIP (2)' TO #EXCP  /* DW26
*
    COMPRESS ST-V.ID-NUMBER                         /* DW26
      #TAB ST-V.ISSUE-DATE (#I1)
      #TAB #EXCP
      INTO #EXCEPTIONS LEAVING NO
    WRITE WORK 4 #EXCEPTIONS
  END-IF
*
  IF ST-V.X-ALT-LP-IND-2 (#I1) = '9'   /* AIP Waiting for INCREASE      /*DW22
    MOVE '2' TO ST-V.X-ALT-LP-IND-2 (#I1)
    MOVE 'Variable AIP Waiting (AIW)(9) chged to AIP (2)' TO #EXCP  /* DW26
*
    COMPRESS ST-V.ID-NUMBER                         /* DW26
      #TAB ST-V.ISSUE-DATE (#I1)
      #TAB #EXCP
      INTO #EXCEPTIONS LEAVING NO
    WRITE WORK 4 #EXCEPTIONS
  END-IF
*
  IF  ST-V.X-ALT-LP-IND (#I1) = '1' OR = '2' /* Do Not include '*' /* PM35  DW38
      OR ST-V.X-ALT-LP-IND-2 (#I1) = '1' OR = '2'       /* PM35
    CALLNAT 'ATHSIALA'                               /* PM35
      ST-V.ID-NUMBER                                 /* PM35
      ST-V.X-ALT-LP-AMT (#I1)                        /* PM35
      ST-V.X-ALT-LP-IND (#I1)                        /* PM35
      ST-V.X-ALT-LP-AMT-2 (#I1)                      /* PM35
      ST-V.X-ALT-LP-IND-2 (#I1)                      /* PM35
      #I1                                            /* PM35
   END-IF                                             /* PM35
*
  IF ST-V.X-ALT-LP-IND    (#I1) = '1' OR = '2' OR = '*'     /* DW28 PM30 DW38
    ADD ST-V.X-ALT-LP-AMT (#I1) TO #TOT-ALOT
  END-IF
*
  IF ST-V.X-ALT-LP-IND-2  (#I1) = '1' OR = '2'       /* DW28 PM30
    ADD ST-V.X-ALT-LP-AMT-2 (#I1) TO #TOT-ALOT
  END-IF
*
  IF  (ST-V.ISSUE-DATE(#I1) = #PARM-YYYYMMDD)  /*New Cap pol      DW52
      AND (CONV-DURATION (#I1) = 999)    /* CAP policy
      AND (ST-V.X-ALT-LP-AMT (#I1) = 0)   /* No AIP yet
    FIND AT-V WITH SSN = AS-SSN
      IF  (AT-V.INTRO-FLAG = 'V')
          OR (AT-V.CAP-IND NE 'Y')
          OR (AT-V.ACTION-FLAG NE 'A')
        ESCAPE TOP
      END-IF
*
      RESET #LOAN-PMT  /* GET AIP AMOUNT from AT record
      IF CAP-IND = 'Y' AND (CAP-LOAN-AMT NE 0)
        #LOAN-PMT :=
          FUNCTION-LOAN-PAYMENT(<CAP-LOAN-AMT,CAP-TERM,ALLOT-STRT-AMT>) /* DW53
      END-IF
*
      ADD #LOAN-PMT TO #TOT-ALOT    /* this AIP is expected
      IF #LOAN-PMT NE 107.25
        WRITE ST-V.ID-NUMBER '#### AIP not 107.25 add' #LOAN-PMT 'to' #TOT-ALOT
      END-IF
    END-FIND
  END-IF                                                    /* DW52
END-FOR
*                                        NG1  Start
PARM-SVC.SVC-MEMBER-ID := ST-V.ID-NUMBER
CALLNAT 'SVCN0003' PARM-SVC #MSG
if #msg = ' '                                          /* vt4
  IF PARM-SVC.SVC-MODE = 'G'
      AND PARM-SVC.SVC-PAY-UP NE 'Y'
    ADD PARM-SVC.SVC-AMOUNT-DUE TO #TOT-ALOT
  END-IF
end-if                                                /* vt4
* write st-v.id-number '=' #tot-alot                    /* vt4
*                                        NG1  End
*    check for sps/gen linked pols
RESET #FOUND-LINKED-CN
RESET #I3 #LK-CN (*) #LK-AMT (*)
FOR #I1 1 TO 30
  IF LINKED-CN (#I1) = 0
    ESCAPE BOTTOM
  END-IF
*
  IF ST-V.ID-NUMBER = 109259      /* DW99
    WRITE '***** 109259 line 2340 looping thru linked recs' LINKED-CN (#I1)
  END-IF
  RESET #G-PREM
  RESET #LINKED-REC-PROCESSED   /* DW40
  FIND (1) LK-V WITH MEMBER-KEY = LINKED-CN-A (#I1)
    IF LK-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
      RESET DATE-OF-BIRTH                                                   /* TT2
      DATE-OF-BIRTH := GET-DATE-OF-BIRTH(<LK-V.MEMBER-CONTACT-ID>)          /* TT2
      FOR #I2 1 TO 9
*       IF   (LK-V.STATUS (#I2) = 'D')                    /* DW23 PM31
*        AND  (LK-V.MODE (#I2) = 'A' OR = 'S' OR = 'Q')   /* PM31
*        AND (LK-V.PAY-STATUS (#I2) LE '40')              /* PM31
*         COMPRESS 'LK Pol w mode' LK-V.MODE(#I2) 'bypassed on start'  /* DW26 PM31
*              INTO #EXCP                                 /* PM31
*                                                         /* PM31
*         COMPRESS LK-V.ID-NUMBER                         /* DW26 PM31
*           #TAB LK-V.ISSUE-DATE (#I2)                    /* PM31
*           #TAB #EXCP                                    /* PM31
*               INTO #EXCEPTIONS LEAVING NO               /* PM31
*         WRITE WORK 4 #EXCEPTIONS                        /* PM31
*       END-IF                                            /* PM31
*
        IF   (LK-V.STATUS (#I2) = 'D')                              /* DW51
            AND (LK-V.PAY-STATUS (#I2) LE '40')
            AND (LK-V.PAID-UP-DATE-YYYYMM(#I2) GE #PARM-YYYYMM)
            AND (LK-V.PAID-TO-DATE-YYYYMM (#I2) GE #PARM-YYYYMM) /* paid in adv
            AND (LK-V.MODE (#I2) = 'G' OR = 'M')            /* probably a New policy
          ADD (LK-V.ANNUAL-PREM (#I2) / 12) TO #EXTRA-AMT-NEEDED-FOR-FUTURE
          IF LK-V.PLAN(#I2) = #EZ-TERM                                        /* YK4
            #EXTRA-AMT-NEEDED-FOR-FUTURE := #EXTRA-AMT-NEEDED-FOR-FUTURE - 1  /* YK4
          END-IF                                                              /* YK4
        END-IF                                                      /* END DW51
*
        IF   (LK-V.STATUS (#I2) = 'D')
*        AND (LK-V.MODE (#I2) = 'G' OR = 'M' OR = 'A' OR = 'S' OR = 'Q') /* DW23
            AND (LK-V.MODE (#I2) = 'G' OR = 'M')                            /* DW23
            AND (LK-V.PAY-STATUS (#I2) LE '40')
            AND (LK-V.PAID-TO-DATE-YYYYMM(#I2) LT #PARM-YYYYMM) /*not pd in adv DW37
            AND (LK-V.PAID-UP-DATE-YYYYMM(#I2) GE #PARM-YYYYMM) /* added 10/2008 DW50
*    above reinstated 9/5/2008 and index fixed 10/31/2008 (was #i1)    DW47/DW50
          MOVE TRUE TO #FOUND-LINKED-CN
          MOVE TRUE TO #LINKED-REC-PROCESSED                  /* DW40
          IF   ((LK-V.ISSUE-DATE (#I2) LT 19970101) /* OLD/NEW     /* DW44
              OR (LK-V.MONTH-ALLOC-AMT (#I2) = 999.99))
              AND (LK-V.PAID-UP-DATE-YYYYMM (#I2) = #PARM-YYYYMM) /* nxt Mon
              AND (LK-V.PAY-STATUS(#I2) LE '40')
              AND (LK-V.MODE (#I2) = 'G' OR = 'M')
            IF LK-V.PLAN (#I2) = 'OL' OR = 'SO' OR = 'GPL' OR = 'GP2'     /* TT1  /* DW46
              MOVE DATE-OF-BIRTH TO #YYYYMMDD                             /* TT2
            ELSE
              MOVE LK-V.ISSUE-DATE (#I2) TO #YYYYMMDD
            END-IF
            SUBTRACT 1 FROM #DD
            COMPUTE ROUNDED #HOLD-MOD-PREM = (LK-V.ANNUAL-PREM(#I2) / 12)
              * #DD / 30
            WRITE 'OLD/NEW SPS/GEN pd-up-this Month' LK-V.ISSUE-DATE (#I2)
              'Num days =' #DD 'prem=' #HOLD-MOD-PREM
            ADD #HOLD-MOD-PREM TO #G-PREM       /* WAS #TOT-ALOT    DW55
            ADD #HOLD-MOD-PREM TO #TOT-ALOT
          ELSE                                                 /* END DW44
            ADD (LK-V.ANNUAL-PREM (#I2) / 12) TO #G-PREM
            ADD (LK-V.ANNUAL-PREM (#I2) / 12) TO #TOT-ALOT
            IF LK-V.PLAN(#I2) = #EZ-TERM                           /* YK4
              #G-PREM   := #G-PREM - 1                             /* YK4
              #TOT-ALOT := #TOT-ALOT - 1                           /* YK4
            END-IF                                                 /* YK4
          END-IF

        END-IF
*       Dues are not needed here since this is only SPS and GEN
*
        IF ST-V.ID-NUMBER = 109259      /* DW99
          WRITE '***** 109259 line 2442 tot-alot = ' #TOT-ALOT LK-V.ID-NUMBER
        END-IF
      END-FOR
*
      IF #LINKED-REC-PROCESSED             /* DW40
        ADD 1 TO #I3
        MOVE LK-V.ID-NUMBER TO #LK-CN (#I3)
        MOVE #G-PREM        TO #LK-AMT (#I3)
      END-IF
    END-IF
  END-FIND
END-FOR
*  check for alot-linked mbrs
FIND (1) NT-V WITH ID-NUMBER = ST-V.ID-NUMBER
  FOR #I2 1 TO 60
    IF NT-V.NOTE-TEXT (#I2) = MASK ('*#ALOT:PAYS')
      RESET #FOUND-A-MATCH
      FOR #I5 1 TO 10
        IF NOTE-TEXT-ALOT-PAYS-CN (#I2) = #LK-CN-A (#I5)
          MOVE TRUE TO #FOUND-A-MATCH
          ESCAPE BOTTOM
        END-IF
      END-FOR
*
      IF #FOUND-A-MATCH
        ESCAPE TOP
      END-IF
*
      FIND LK-V WITH MEMBER-KEY = NOTE-TEXT-ALOT-PAYS-CN (#I2)
        RESET DATE-OF-BIRTH                                                   /* TT2
        DATE-OF-BIRTH := GET-DATE-OF-BIRTH(<LK-V.MEMBER-CONTACT-ID>)          /* TT2
        FOR #I4 1 TO 9
*         IF   (LK-V.STATUS (#I4) = 'D')                   /* DW23 PM31
*          AND  (LK-V.MODE (#I4) = 'A' OR = 'S' OR = 'Q')  /* PM31
*          AND (LK-V.PAY-STATUS (#I4) LE '40')             /* PM31
*           COMPRESS 'LK Pol w mode' LK-V.MODE(#I4) 'bypassed on strt'  /* DW26 PM31
*              INTO #EXCP                                  /* PM31
*                                                          /* PM31
*           COMPRESS LK-V.ID-NUMBER                        /* DW26 PM31
*             #TAB LK-V.ISSUE-DATE (#I1)                   /* PM31
*             #TAB #EXCP                                   /* PM31
*                 INTO #EXCEPTIONS LEAVING NO              /* PM31
*           WRITE WORK 4 #EXCEPTIONS                       /* PM31
*         END-IF                                           /* PM31
*
          IF   (LK-V.STATUS (#I4) = 'D')                              /* DW51
              AND (LK-V.PAY-STATUS (#I4) LE '40')
              AND (LK-V.PAID-UP-DATE-YYYYMM(#I4) GE #PARM-YYYYMM)
              AND (LK-V.PAID-TO-DATE-YYYYMM (#I4) GE #PARM-YYYYMM) /* paid in adv
              AND (LK-V.MODE (#I4) = 'G' OR = 'M')          /* probably a New policy
            ADD (LK-V.ANNUAL-PREM (#I4) / 12) TO #EXTRA-AMT-NEEDED-FOR-FUTURE
            IF LK-V.PLAN(#I4) = #EZ-TERM                                           /* YK4
              #EXTRA-AMT-NEEDED-FOR-FUTURE := #EXTRA-AMT-NEEDED-FOR-FUTURE - 1     /* YK4
            END-IF                                                                 /* YK4
          END-IF                                                      /* END DW51
*
          IF   (LK-V.STATUS (#I4) = 'D')
*          AND (LK-V.MODE(#I4) = 'G' OR = 'M' OR = 'A' OR = 'S' OR = 'Q') /* DW23
              AND (LK-V.MODE(#I4) = 'G' OR = 'M')                            /* DW23
              AND (LK-V.PAY-STATUS (#I4) LE '40')
              AND (LK-V.PAID-UP-DATE-YYYYMM (#I4) GE #PARM-YYYYMM) /*not pu
              AND (LK-V.PAID-TO-DATE-YYYYMM (#I4) LT #PARM-YYYYMM) /* DW37/DW50
*     above reinstated 9/5/2008 and index fixed (was #i1) 10/31/2008    DW47/DW50

            MOVE TRUE TO #FOUND-LINKED-CN
            IF   ((LK-V.ISSUE-DATE (#I4) LT 19970101) /* OLD/NEW     /* DW44
                OR (LK-V.MONTH-ALLOC-AMT (#I4) = 999.99))
                AND (LK-V.PAID-UP-DATE-YYYYMM (#I4) = #PARM-YYYYMM) /* nxt Mon
                AND (LK-V.PAY-STATUS(#I4) LE '40')
                AND (LK-V.MODE (#I4) = 'G' OR = 'M')
              IF LK-V.PLAN (#I4) = 'OL' OR = 'SO' OR = 'GPL' OR = 'GP2'     /* DW46
                MOVE DATE-OF-BIRTH TO #YYYYMMDD                        /* TT2
              ELSE
                MOVE LK-V.ISSUE-DATE (#I4) TO #YYYYMMDD
              END-IF
              SUBTRACT 1 FROM #DD
              COMPUTE ROUNDED #HOLD-MOD-PREM = (LK-V.ANNUAL-PREM(#I4) / 12)
                * #DD / 30
              WRITE 'OLD/NEW SPS/GEN pd-up-this Month' LK-V.ISSUE-DATE (#I4)
                'Num days =' #DD 'prem=' #HOLD-MOD-PREM
              ADD #HOLD-MOD-PREM TO #G-PREM       /* WAS #TOT-ALOT    DW55
              ADD #HOLD-MOD-PREM TO #TOT-ALOT
            ELSE                                                 /* END DW44
              ADD (LK-V.ANNUAL-PREM (#I4) / 12) TO #G-PREM
              ADD (LK-V.ANNUAL-PREM (#I4) / 12) TO #TOT-ALOT
              IF LK-V.PLAN(#I4) = #EZ-TERM                           /* YK4
                #G-PREM   := #G-PREM - 1                             /* YK4
                #TOT-ALOT := #TOT-ALOT - 1                           /* YK4
              END-IF                                                 /* YK4
            END-IF
          END-IF
*
          CALLNAT 'GDUESSXX' LK-V.ID-NUMBER #I4 #SVC-FEE   /* DW54
          ADD #SVC-FEE TO #TOT-ALOT                        /* DW54
        END-FOR
*
*        IF LK-V.ID-NUMBER = 104189/* PM99
*          ADD +2.00 TO #TOT-ALOT  /* PM99
*        END-IF                    /* PM99
*
*
        ADD 1 TO #I3
        MOVE LK-V.ID-NUMBER TO #LK-CN  (#I3)
        MOVE #G-PREM        TO #LK-AMT (#I3)
*                                        NG1  Start
        PARM-SVC.SVC-MEMBER-ID := LK-V.ID-NUMBER
        CALLNAT 'SVCN0003' PARM-SVC #MSG
        if #msg = ' '                                 /* vt1
          IF PARM-SVC.SVC-MODE = 'G'
              AND PARM-SVC.SVC-PAY-UP NE 'Y'
            ADD PARM-SVC.SVC-AMOUNT-DUE TO #TOT-ALOT
          END-IF
        end-if                                        /* vt1
*                                        NG1  End
*        write '3210 line' '=' st-v.id-number '=' #tot-alot                    /* vt1
      END-FIND
    END-IF
  END-FOR
END-FIND
*
IF #EXTRA-AMT-NEEDED-FOR-FUTURE NE 0                      /* DW51
  WRITE ST-V.ID-NUMBER '**** Future amts exist for' #EXTRA-AMT-NEEDED-FOR-FUTURE
    'DFAS start amt =' AS-AMOUNT
  IF AS-AMOUNT GE #TOT-ALOT + #EXTRA-AMT-NEEDED-FOR-FUTURE
    ADD #EXTRA-AMT-NEEDED-FOR-FUTURE TO #TOT-ALOT
    MOVE TRUE TO #USE-FUTURE-PD-THRU
    WRITE ST-V.ID-NUMBER '**** Future dated pols will be processed'
      'New tot-alot needed= ' #TOT-ALOT
  END-IF
END-IF                                                /* END DW51
*
if st-v.id-number = 55552        /* vt8 12/30/2015 \/ temporary fix . Need to be removed after the ME run at the end of 12/2015 !
  add +3.00 to #tot-alot
end-if                           /* vt8 12/30/2015 /\
*
COMPUTE #ALOT-DIFF = AS-AMOUNT - #TOT-ALOT    /* vt 06302011

*
IF AS-AMOUNT NE #TOT-ALOT
*
  IF ST-V.INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q'
    IF ST-V.ISSUE-DATE (1) NE #PARM-YYYYMMDD /*ignore brand new CAP pols
      ADD 1 TO #CNT-5
       DISPLAY (5) #CNT-5
        'CN'                ST-V.ID-NUMBER
        'SSN'               AS-SSN-A
        'INT/FLG'           ST-V.INTRO-FLAG
        'ALOT/AUTH'         ST-V.ALOT-CHG-AUTH                   /* DW32
        'DFAS/Alot/Amt'     AS-AMOUNT
        'AAFMAA/Alot-Amt'   #TOT-ALOT
        'Issue/Date'        ST-V.ISSUE-DATE (1)
*       'Loan/Amt'          ST-V.LOAN-AMOUNT
        'Linked/CN'         ST-V.LINKED-CN (1)
        'Comment'           #comment                                            /* vt9  
        reset #comment                                                          /* vt9  
    END-IF
  ELSE
    ADD 1 TO #CNT-4
    DISPLAY (4) #CNT-4
      'CN'                ST-V.ID-NUMBER
      'SSN'               AS-SSN-A
      'INT/FLG'           ST-V.INTRO-FLAG
      'ALOT/AUTH'         ST-V.ALOT-CHG-AUTH                   /* DW32
      'DFAS/Alot/Amt'     AS-AMOUNT
      'AAFMAA/Alot-Amt'   #TOT-ALOT
      'Linked/CN'         ST-V.LINKED-CN (1)
*
    FOR #I3 1 TO 10
      IF #LK-CN (#I3) NE 0
        WRITE (4) '   Linked CN to above =' #LK-CN (#I3)
          'Alot Amt = ' #LK-AMT (#I3)
      END-IF
    END-FOR
  END-IF
END-IF
*
RESET #DOING-LINKED-CN
PERFORM UPDATE-REC-WITH-START
PERFORM ACT-TO-RET
*
UPDATE (1110)
*
IF AS-AMOUNT GE #TOT-ALOT
  MOVE ST-V.ID-NUMBER TO #PAYOR-CN     /* save payor
  FOR #I3 1 TO 10
    IF #LK-CN (#I3) = 0
      ESCAPE BOTTOM
    END-IF
*
    FIND ST-V WITH MEMBER-KEY = #LK-CN-A (#I3)
      IF #LK-CN (#I3) = 109685 OR = 109691 OR = 139554 OR = 109259      /* DW99
        WRITE '***** 109259 line 2732 update start' ST-V.ID-NUMBER
      END-IF
*
      RESET #HAS-FBR    /* DW18
*
      FOR #I1 1 TO 9      /* DW18
        IF   (ST-V.STATUS (#I1) = 'D')
            AND (RID-PLAN (#I1) NE ' ')
          MOVE TRUE TO #HAS-FBR
        END-IF
      END-FOR
*
      IF #HAS-FBR    /* DW18
        MOVE ST-V.ID-NUMBER TO #ID
        CALLNAT 'GRIDCSXX' USING
          #ID
          #AT-RID-ATTACH-FAC-AMT
          #AT-RID-ATTACH-PLAN
          #AT-RID-PLAN            (1:5)
          #AT-RID-ATTACH-ISS-DT   (1:5)
          #AT-TOT-FBR-PREM
          #EX-FBR-PREM-BY-LINE    (1:9)
          #EX-SPS-DB-BY-LINE      (1:9)
          #EX-DEP-DB-BY-LINE      (1:9)
          #EX-EACH-DEP-DB-BY-LINE (1:9)
          #NUM-ELIG-CHILDREN
          #NUM-ELIG-CHILDREN-UNDER-6-MON
          #TOT-CHILD-DB
          #RID-TEXT
*
        IF #RID-TEXT NE ' '
          WRITE AS-SSN ST-V.ID-NUMBER 'FBR ERROR MESSAGE' #RID-TEXT
        END-IF
      END-IF
*
      MOVE ST-V.ID-NUMBER TO #PAYEE-CN     /* save payee
      MOVE TRUE TO #DOING-LINKED-CN
      PERFORM UPDATE-REC-WITH-START
*
      UPDATE (1670)
*
      RESET #FOUND-PAYOR #FOUND-PAYEE
*
      FIND (1) NT-V WITH ID-NUMBER = #PAYOR-CN
        FOR #I2 1 TO 60
          IF   (NT-V.NOTE-TEXT (#I2) = MASK ('*#ALOT:PAYS'))
              AND (NOTE-TEXT-ALOT-PAYS-CN (#I2) = #PAYEE-CN-A)
            MOVE TRUE TO #FOUND-PAYEE
*            WRITE AS-SSN
*             'found payee on payor"s rec' #PAYOR-CN #PAYEE-CN
            ESCAPE BOTTOM
          END-IF
        END-FOR
      END-FIND
*
      IF NOT #FOUND-PAYEE
*        WRITE AS-SSN  'not found payee' #PAYOR-CN #PAYEE-CN
        COMPRESS '*#ALOT:PAYS CN' #PAYEE-CN-A
          INTO #NOTE-TEXT (1) LEAVING NO
        MOVE 1 TO #INT
        MOVE 'EDS' TO #CLERK
        CALLNAT 'E4205SDM' #PAYOR-CN
          #INT
          #CLERK
          #NOTE-TEXT (1:10)
        WRITE AS-SSN #PAYOR-CN 'NX msg Created' #NOTE-TEXT (1)
      END-IF
*
      FIND (1) NT-V WITH ID-NUMBER = #PAYEE-CN
        FOR #I2 1 TO 60
          IF   (NT-V.NOTE-TEXT (#I2) = MASK ('*#ALOT:PAID BY'))
              AND (NOTE-TEXT-ALOT-PAID-BY-CN (#I2) = #PAYOR-CN-A)
            MOVE TRUE TO #FOUND-PAYOR
*            WRITE AS-SSN
*             'found payor on payer"s rec' #PAYOR-CN #PAYEE-CN
            ESCAPE BOTTOM
          END-IF
        END-FOR
      END-FIND
*
      IF NOT #FOUND-PAYOR
        COMPRESS '*#ALOT:PAID BY CN' #PAYOR-CN-A
          INTO #NOTE-TEXT (1) LEAVING NO
        MOVE 1 TO #INT
        MOVE 'EDS' TO #CLERK
        CALLNAT 'E4205SDM' #PAYEE-CN
          #INT
          #CLERK
          #NOTE-TEXT (1:10)
        WRITE AS-SSN #PAYEE-CN 'NX msg Created' #NOTE-TEXT (1)
      END-IF
    END-FIND
  END-FOR
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE ACT-TO-RET
* * * * * * * * * * * * * *
*
MOVE TRUE TO #FORCE-A           /* CHG ALOT-CHG-AUTH to A    /* DW43
*
IF   (ST-V.PROCESS-IND = 'C')     /* bypass all 'C's except   DW3
    AND (ST-V.INTRO-FLAG NE 'A')       /* AT-PENDING's     DW4
  ESCAPE ROUTINE
END-IF
*
RESET #RETURN-TO-RET-STATUS                      /* DW36
*
IF (ST-V.MILITARY-STATUS = 'R') AND (CHIEF-OF-STAFF-IND = 'X')  /* DW36
  MOVE TRUE TO #RETURN-TO-RET-STATUS
END-IF
*
IF   (AS-STATUS = 'R')
    AND ((ST-V.MILITARY-STATUS = 'A') /* ret start but mbr is act
    OR  #RETURN-TO-RET-STATUS)                                  /* DW36

*
  RESET #SFX
  RESET TR-V             /* DW16
  RESET SYNC-FLD-NUM (*) SYNC-FLD-OLD-DATA (*) SYNC-FLD-NEW-DATA (*)
  MOVE ST-V.PROCESS-IND TO TR-V.PROCESS-IND
  MOVE ST-V.ID-NUMBER   TO TR-V.ID-NUMBER
  MOVE ST-V.NAME        TO TR-V.NAME
  MOVE ST-V.DATE-ACCT-UPDATE  TO TR-V.DATE-LAST-UPDATE
  MOVE *INIT-ID         TO TR-V.TERMINAL-ID
  MOVE 'EDS'            TO TR-V.CLERK-ID
  MOVE #TODA            TO TR-V.TRANSACTION-DATN
  MOVE 2310000          TO TR-V.TRANSACTION-TIMN
*      to follow ATHPLAPS
  MOVE 1 TO #ITR1
*
  IF #RETURN-TO-RET-STATUS                                /* DW36
    MOVE 'X' TO #TR-REG-SPC-CODE
    MOVE #TR-REG-SPC-CODE-X TO TR-V.OLD-DATA (#ITR1)
    RESET #TR-REG-SPC-CODE
    MOVE #TR-REG-SPC-CODE-X TO TR-V.NEW-DATA (#ITR1)
*
    RESET ST-V.CHIEF-OF-STAFF-IND                           /* DW36
  ELSE
    MOVE DATE-RETIRED    TO #TR-REG-RET-DATE
    MOVE MILITARY-STATUS TO #TR-REG-MIL-STATUS
    MOVE #TR-REG-A-R TO TR-V.OLD-DATA (#ITR1)
*
    MOVE ST-V.DATE-RETIRED    TO #OLD-RET-DATE   /* DW19
    MOVE ST-V.MILITARY-STATUS TO #OLD-MIL-STAT
    IF ST-V.DATE-RETIRED = 0
      MOVE #LAST-MON-YYYYMMDD TO #YYYYMMDD
      MOVE 01 TO #DD
      MOVE #YYYYMMDD TO ST-V.DATE-RETIRED
*     WRITE ST-V.SSN
*        ST-V.ID-NUMBER 'Ret Date entered as' #YYYYMMDD
*         'INT FLG=' INTRO-FLAG
    END-IF
*
    MOVE 'R' TO ST-V.MILITARY-STATUS
*
    MOVE DATE-RETIRED    TO #TR-REG-RET-DATE
    MOVE MILITARY-STATUS TO #TR-REG-MIL-STATUS
    MOVE #TR-REG-A-R TO TR-V.NEW-DATA (#ITR1)
*
    IF ST-V.MILITARY-STATUS NE #OLD-MIL-STAT   /* DW19
      ADD 1 TO #SFX
      MOVE 16 TO SYNC-FLD-NUM(#SFX)
      MOVE #OLD-MIL-STAT        TO SYNC-FLD-OLD-DATA(#SFX)
      MOVE ST-V.MILITARY-STATUS TO SYNC-FLD-NEW-DATA(#SFX)
    END-IF
*
    IF ST-V.DATE-RETIRED NE #OLD-RET-DATE
      ADD 1 TO #SFX
      MOVE 59 TO SYNC-FLD-NUM(#SFX)
      MOVE #OLD-RET-DATE     TO SYNC-FLD-OLD-DATA(#SFX)
      MOVE ST-V.DATE-RETIRED TO SYNC-FLD-NEW-DATA(#SFX)
    END-IF
  END-IF
*
  STORE TR-V    /* DW16
*  WRITE ST-V.SSN 'proc-ind=' PROCESS-IND
*     ST-V.ID-NUMBER 'Status changed to Retire on chg from Recalled to Act Duty'
*
  IF   (ST-V.PROCESS-IND = 'G' OR = 'S')  /* G/F or affl      /* DW3   DW58
      AND (NOT #RETURN-TO-RET-STATUS)                     /* DW36
    MOVE ST-V.ID-NUMBER TO NR-ID-NUMBER
    WRITE WORK 3 NEW-RETIREES
  END-IF
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE UPDATE-REC-WITH-START
* * * * * * * * * * * * * * * * * * * *
*
IF ST-V.ID-NUMBER = 109685 OR = 109691 OR = 139554 OR = 109259      /* DW99
  WRITE '***** 109259 line 3122 top of update rec w start' ST-V.ID-NUMBER
END-IF

RESET #TOT-MODAL-PREMIUM
RESET #TOTAL-AMOUNT-DIFF
RESET #TOTAL-AMT-DUES-DIFF #WORK-DUES-DIFF
*
RESET #REMOVE-LOAN-PMT                                        /* PM31
* IF #ALOT-DIFF < 0                                           /* PM31
IF #ALOT-DIFF < -5.00                                         /* PM35
  #REMOVE-LOAN-PMT := TRUE                                    /* PM31
END-IF                                                        /* PM31
*
FOR #I1 1 TO 9
  IF   (ST-V.STATUS (#I1) = 'D')
      AND (ST-V.PAID-UP-DATE-YYYYMM (#I1) LT #PARM-YYYYMM) /* pd-up
      AND (ST-V.PAY-STATUS (#I1) LT '40')
    WRITE AS-SSN ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1)
      '*** START - pdup but not pay-stat 42'
  END-IF
*
* * * * * * * * * *
* Check for ALP Processing prior to Mode test
  IF   (ST-V.X-ALT-LP-IND (#I1) = '1' OR = '2' OR = '*')    /* PM31 DW38
      AND (ST-V.STATUS (#I1) = 'D')
    IF #REMOVE-LOAN-PMT                                          /* PM31
        AND ST-V.X-ALT-LP-IND (#I1) NE '*'         /* DW38
      RESET ST-V.X-ALT-LP-AMT (#I1)                              /* PM31
        ST-V.X-ALT-LP-IND (#I1)                              /* PM31
      ADD ST-V.X-ALT-LP-AMT (#I1) TO #ALOT-DIFF                  /* PM31
*
      MOVE 'AIP/ALP (fixed) removed on allotment start' TO #EXCP /* PM31
      COMPRESS ST-V.ID-NUMBER #TAB                               /* PM31
        ST-V.ISSUE-DATE (#I1) #TAB                        /* PM31
        #EXCP                                             /* PM31
        INTO #EXCEPTIONS LEAVING NO                            /* PM31
      WRITE WORK 4 #EXCEPTIONS                                   /* PM31
    ELSE                                                         /* PM31
      ADD ST-V.X-ALT-LP-AMT (#I1) TO #TOT-MODAL-PREMIUM          /* PM30
    END-IF                                                       /* PM31
  END-IF                                                         /* PM31
*
*
  IF   (ST-V.X-ALT-LP-IND-2 (#I1) = '1' OR = '2')               /* PM31
      AND (ST-V.STATUS (#I1) = 'D')
    IF #REMOVE-LOAN-PMT                                          /* PM31
      RESET ST-V.X-ALT-LP-AMT-2 (#I1)                            /* PM31
        ST-V.X-ALT-LP-IND-2 (#I1)                            /* PM31
      ADD ST-V.X-ALT-LP-AMT-2 (#I1) TO #ALOT-DIFF                /* PM31
*
      MOVE 'AIP/ALP (variable) removed on allotment start'       /* PM31
        TO #EXCP                                                 /* PM31
      COMPRESS ST-V.ID-NUMBER #TAB                               /* PM31
        ST-V.ISSUE-DATE (#I1) #TAB                        /* PM31
        #EXCP                                             /* PM31
        INTO #EXCEPTIONS LEAVING NO                            /* PM31
      WRITE WORK 4 #EXCEPTIONS                                   /* PM31
    ELSE                                                         /* PM31
      ADD ST-V.X-ALT-LP-AMT-2 (#I1) TO #TOT-MODAL-PREMIUM        /* PM30
    END-IF                                                       /* PM31
  END-IF                                                         /* PM31
*
* * * * * * * *
  IF  (ST-V.STATUS (#I1) NE 'D')
*  OR (NOT ST-V.MODE   (#I1) = 'G' OR = 'M' OR = 'A' OR = 'S' OR = 'Q') /* DW23
      OR (NOT ST-V.MODE   (#I1) = 'G' OR = 'M')                           /* DW23
*   or (#doing-linked-cn and                                           /* DW37
*      (st-v.paid-to-date-yyyymm (#i1) ge #parm-yyyymm)) /* MBR pd in adv /* DW37
      OR ((ST-V.PAID-TO-DATE-YYYYMM (#I1) GE #PARM-YYYYMM) /* pd in adv /* DW37
*             above reinstated 9/5/2008                                DW47
      AND (NOT #USE-FUTURE-PD-THRU))   /* use future if needed       DW51
      OR (ST-V.PAID-UP-DATE-YYYYMM (#I1) LT #PARM-YYYYMM) /* pd-up
*  OR (ST-V.PAID-UP-DATE-YYYYMM (#I1) LE #PARM-YYYYMM) /* pd-up
*  OR (ST-V.OWNERSHIP-FLAG (#I1) = 'N')
*   ABOVE REMOVED 7/17/2001 AS PER KHB
      OR (ST-V.PAY-STATUS (#I1) GT '40')
    IF ST-V.ID-NUMBER = 109685 OR = 109691 OR = 139554 OR = 109259      /* DW99
      WRITE '***** 109259 line 3292 escape from linked update ' ST-V.ID-NUMBER
    END-IF
    ESCAPE TOP
  END-IF
*
  RESET DATE-OF-BIRTH                                                   /* TT2
  DATE-OF-BIRTH := GET-DATE-OF-BIRTH(<ST-V.MEMBER-CONTACT-ID>)          /* TT2
*
  IF   ((ST-V.ISSUE-DATE (#I1) LT 19970101) /* OLD/NEW     /* DW44
      OR (ST-V.MONTH-ALLOC-AMT (#I1) = 999.99))
      AND (ST-V.PAID-UP-DATE-YYYYMM (#I1) = #PARM-YYYYMM) /* nxt Mon
      AND (ST-V.PAY-STATUS(#I1) LE '40')
      AND (ST-V.MODE (#I1) = 'G' OR = 'M')
    IF ST-V.PLAN (#I1) = 'OL' OR = 'SO' OR = 'GPL' OR = 'GP2'        /* DW46
      MOVE DATE-OF-BIRTH TO #YYYYMMDD                                /* TT2
    ELSE
      MOVE ST-V.ISSUE-DATE (#I1) TO #YYYYMMDD
    END-IF
    SUBTRACT 1 FROM #DD
    COMPUTE ROUNDED #HOLD-MOD-PREM = (ST-V.ANNUAL-PREM(#I1) / 12)
      * #DD / 30
    WRITE 'OLD/NEW paid-up-this Month' ST-V.ISSUE-DATE (#I1)
      'Num days =' #DD 'prem=' #HOLD-MOD-PREM
    ADD #HOLD-MOD-PREM TO #TOT-MODAL-PREMIUM
  ELSE    /*                                                 /* END DW44
    ADD (ST-V.ANNUAL-PREM (#I1) / 12) TO #TOT-MODAL-PREMIUM
    IF ST-V.PLAN(#I1) = #EZ-TERM                             /* YK4
      #TOT-MODAL-PREMIUM := #TOT-MODAL-PREMIUM - 1          /* YK4
    END-IF                                                   /* YK4
  END-IF
*
  PERFORM CALC-DUES
  ADD #SVC-FEE TO #TOT-MODAL-PREMIUM
*
  IF #HAS-FBR
    ADD #EX-FBR-PREM-BY-LINE (#I1) TO #TOT-MODAL-PREMIUM
  END-IF
*
  RESET #WORK-DIFF
  IF   (ST-V.PAID-TO-DATE-YYYY (#I1) = #LAST-MON-YYYY)  /* IF PAID THRU
      AND (ST-V.PAID-TO-DATE-MM   (#I1) = #LAST-MON-MM)    /* PRIOR MONTH
    IGNORE
  ELSE
    MOVE ST-V.PAID-TO-DATE-MM (#I1) TO #PD-THRU-MM
*
    MOVE #LAST-MON-MM TO #WORK-LAST-MM
    IF #LAST-MON-YYYY GT ST-V.PAID-TO-DATE-YYYY (#I1)
      COMPUTE #WORK-LAST-MM = #LAST-MON-MM
        + (12 * (#LAST-MON-YYYY - ST-V.PAID-TO-DATE-YYYY (#I1)))
    ELSE
      IF ST-V.PAID-TO-DATE-YYYY (#I1) GT #LAST-MON-YYYY
        COMPUTE #PD-THRU-MM = #PD-THRU-MM
          + (12 * (ST-V.PAID-TO-DATE-YYYY (#I1) - #LAST-MON-YYYY))
      END-IF
    END-IF
*
    PERFORM CALC-DUES
    COMPUTE #WORK-DIFF = (ST-V.ANNUAL-PREM (#I1) / 12)
      * (#WORK-LAST-MM - #PD-THRU-MM)
    COMPUTE #WORK-DUES-DIFF = #SVC-FEE * (#WORK-LAST-MM - #PD-THRU-MM)
    IF ST-V.PLAN(#I1) = #EZ-TERM                                                       /* YK4
      #WORK-DIFF := #WORK-DIFF - (#WORK-LAST-MM - #PD-THRU-MM)                         /* YK4
    END-IF                                                                             /* YK4
  END-IF
*    below removed 5/3/2004
* IF   (ST-V.PAID-UP-DATE-YYYY (#I1) = #PARM-YYYY)
*  AND (ST-V.PAID-UP-DATE-MM   (#I1) = #PARM-MM)
*  AND ((ST-V.ISSUE-DATE       (#I1) LT 19970101)  /* added 12/22/2003
*   OR  (ST-V.MONTH-ALLOC-AMT   (#I1) = 999.99))
*   COMPUTE ROUNDED #WORK-DIFF = #WORK-DIFF
*        - (((ST-V.ANNUAL-PREM (#I1) / 12) / 30)
*             * (ST-V.PAID-UP-DATE-DD (#I1) - 1))
*   COMPUTE ROUNDED #WORK-DUES-DIFF = #WORK-DUES-DIFF
*        - ((#SVC-FEE / 30) * (ST-V.PAID-UP-DATE-DD (#I1) - 1))
* END-IF
*
*  IF   (#WORK-DIFF LT 0)  /* AAFMAA owes member on this wl pol  DW25 DW45
*   AND (NOT PLAN (#I1) = 'LT' OR = 'RT')
*   AND ((PLAN-A1 (#I1) LT 'U') OR (PLAN-A1 (#I1) GT 'Z'))
*    COMPRESS #WORK-DIFF 'would have been added to TOT-PR-PR'    /* DW26
*       INTO #EXCP
*
*    COMPRESS ST-V.ID-NUMBER                         /* DW26
*        #TAB ST-V.ISSUE-DATE (#I1)
*        #TAB #EXCP
*            INTO #EXCEPTIONS LEAVING NO
*    WRITE WORK 4 #EXCEPTIONS
*  END-IF
*
*  IF   (#WORK-DIFF LT 0)  /* AAFMAA owes member on this wl pol    /* DW25
*   *********************
*   AND (NOT PLAN (#I1) = 'LT' OR = 'RT')
*   AND ((PLAN-A1 (#I1) LT 'U') OR (PLAN-A1 (#I1) GT 'Z'))
*  AND (X-FIRST-PLACE-FEE (#I1) LE 0) /* mbr owes us     /* DW7 PM15
*  AND (X-BILL-ADJUST     (#I1) LE 0) /* mbr owes us     /* DW7 PM15
*  AND (DEBIT-CREDIT-AMT        LE 0) /* mbr owes us     /* DW7 PM15
*
*          subtracting a negative will really make result higher
*    SUBTRACT #WORK-DIFF FROM TOT-PREMIUMS-PAID (#I1)
*    WRITE ST-V.ID-NUMBER ST-V.SSN
*      'WL Strt w aafm owing mbr -xtr-prem paid=' TOT-PREMIUMS-PAID (#I1)
*      'pd-to=' ST-V.PAID-TO-DATE (#I1)
*  ELSE
  IF #WORK-DIFF NE 0
    IF ST-V.X-ALT-LP-IND(#I1) = '*'                         /* vt1  \/
      COMPRESS ST-V.ID-NUMBER   #TAB
        ST-V.X-ALT-LP-DATE(#I1) #TAB
        ST-V.ISSUE-DATE (#I1)   #TAB
        #WORK-DIFF              #TAB
        INTO #OUT-FILE
      WRITE WORK 6 #OUT-FILE
    ELSE                                                   /* vt1 /\
      MOVE ST-V.X-BILL-ADJUST (#I1) TO #PRIOR-BADJ /* DW10
      MOVE ST-V.DEBIT-CREDIT-AMT    TO #PRIOR-DB-CR
      ADD #WORK-DIFF TO #TOTAL-AMOUNT-DIFF
      MOVE #WORK-DIFF TO #DB-CR-ADJ
      RESET #BADJ-ADJ
      reset #term-ref-adj                                   /* vt7
      MOVE 'STPT' TO #CMBX   /* START PD-TO ADJUST           /* DW13
      COMPRESS 'Start-Prem Adj due to PD-TO-Dt' ST-V.ISSUE-DATE(#I1)
        INTO #ADJ-DESC
      PERFORM DB-CR-BADJ-ADJUSTMENT              /* DW10
    END-IF                                                 /* vt1
  END-IF
*  END-IF                                                     /* DW25
  ADD #WORK-DUES-DIFF TO #TOTAL-AMT-DUES-DIFF
*
  MOVE #LAST-MON-YYYYMMDD TO ST-V.PAID-TO-DATE (#I1)   /* this assumes
*                               /* this job is run just before month/end
*
  IF ST-V.ID-NUMBER = 109685 OR = 109691 OR = 139554 OR = 109259      /* DW99
    WRITE '***** 109259 line 3492 making it Pp 22' ST-V.ID-NUMBER
  END-IF

  IF ST-V.X-FIRST-PLACE-FEE (#I1) = 0
    MOVE '22' TO ST-V.PAY-STATUS (#I1) /* FPF PAID/PP
  ELSE
    IF ST-V.ISSUE-DATE (#I1) GE #4-MONS-AGO
      MOVE '20' TO ST-V.PAY-STATUS (#I1) /* FPF not PAID/fpwp
    ELSE
      MOVE '22' TO ST-V.PAY-STATUS (#I1) /* FPF PAID/PP
    END-IF
  END-IF
*
* IF ST-V.MODE (#I1) = 'M' or = 'A' OR = 'S' OR = 'Q'     /* DW23
  IF ST-V.MODE (#I1) = 'M'                                /* DW23
*   WRITE AS-SSN ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1)
*           'Has changed MODE from' ST-V.MODE (#I1) 'to "G"'
    MOVE 'G' TO ST-V.MODE (#I1)
  END-IF
*
  IF ST-V.X-BILL-ADJUST (#I1) NE 0
    MOVE ST-V.X-BILL-ADJUST (#I1) TO #PRIOR-BADJ /* DW10
    MOVE ST-V.DEBIT-CREDIT-AMT    TO #PRIOR-DB-CR
    MOVE ST-V.X-BILL-ADJUST (#I1) TO #DB-CR-ADJ
    COMPUTE #BADJ-ADJ = ST-V.X-BILL-ADJUST (#I1)  * -1
    MOVE 'STBA' TO #CMBX   /* START BADJ Adjust            /* DW13
    COMPRESS 'START-BADJ Adj' ST-V.ISSUE-DATE(#I1) INTO #ADJ-DESC
    PERFORM DB-CR-BADJ-ADJUSTMENT              /* DW10
    ADD ST-V.X-BILL-ADJUST (#I1) TO ST-V.DEBIT-CREDIT-AMT
*   WRITE ST-V.SSN ST-V.ID-NUMBER 'BADJ adj' ST-V.X-BILL-ADJUST(#I1)
    RESET ST-V.X-BILL-ADJUST (#I1)
  END-IF
END-FOR /*(1870)
*                                        NG1  Start
PARM-SVC.SVC-MEMBER-ID := ST-V.ID-NUMBER
CALLNAT 'SVCN0003' PARM-SVC #MSG
if #msg = ' '                                 /* vt4
  IF PARM-SVC.SVC-MODE = 'G'
      AND PARM-SVC.SVC-PAY-UP NE 'Y'
    ADD PARM-SVC.SVC-AMOUNT-DUE TO #TOT-MODAL-PREMIUM
  END-IF
end-if                                       /* vt4
* write '3991 line' st-v.id-number '=' #tot-alot                    /* vt4
*                                        NG1  End
*
* IF #TOTAL-AMOUNT-DIFF NE 0
*   WRITE ST-V.SSN ST-V.ID-NUMBER PLAN (1:3)
*    'strt w adj DB/CR' #TOTAL-AMOUNT-DIFF
*    'DUES' #TOTAL-AMT-DUES-DIFF 'CURR-DB/CR' DEBIT-CREDIT-AMT
* END-IF
*
ADD #TOTAL-AMOUNT-DIFF   TO ST-V.DEBIT-CREDIT-AMT
ADD #TOTAL-AMT-DUES-DIFF TO ST-V.DUES-BALANCE
*
* IF #TOTAL-AMOUNT-DIFF NE 0
IF (#TOTAL-AMOUNT-DIFF NE 0) AND (#TOTAL-AMT-DUES-DIFF NE 0)
  WRITE ST-V.SSN ST-V.ID-NUMBER PLAN (1:3)
    'strt w adj DB/CR & dues' #TOTAL-AMOUNT-DIFF
    'DUES' #TOTAL-AMT-DUES-DIFF 'NEW-DB/CR' DEBIT-CREDIT-AMT
END-IF
*
*   below added 8/13/2001
IF  (#FOUND-LINKED-CN AND (NOT #DOING-LINKED-CN) /* to handle setting
*               AND (AS-AMOUNT = #TOT-ALOT))     /*  main mbr allotment
*               AND (AS-AMOUNT GT #TOT-ALOT))     /*  wromg on 3/1/2004
    AND (AS-AMOUNT GE #TOT-ALOT))     /*  main mbr allotment
    OR #DOING-LINKED-CN                        /* to handle linked cn's
  MOVE #TOT-MODAL-PREMIUM TO ST-V.ALOT-AMT
  IF NOT #DOING-LINKED-CN
      AND (#ALOT-DIFF GT 0)
    ADD #ALOT-DIFF TO ST-V.ALOT-AMT /* handle addl alot amt
    WRITE ST-V.ID-NUMBER 'Extra Alot amt applied to member' #ALOT-DIFF
      'New Alot=' ST-V.ALOT-AMT
  END-IF
ELSE     /* do linked policies
  MOVE AS-AMOUNT TO ST-V.ALOT-AMT
END-IF
*
MOVE *DATN                 TO ST-V.DTS-DATN
MOVE *TIMN                 TO ST-V.DTS-TIMN         /* DW14
*
MOVE ST-V.ALOT-AMT TO #ALOT-AMT-TO-PRT
*
IF #ALOT-AMT-TO-PRT NE 0                     /* DW33
  PERFORM PROCESS-ACCT-REG-STOP-STRT
  PERFORM PRINT-STOP-START
  ADD 1 TO #TOT-STARTS-OUT
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-DUES
* * * * * * * * * * * * * *
*
* if st-v.id-number = 91411  /* PM99
*   #fst-x := 1              /* PM99
* end-if                     /* PM99
*
RESET #SVC-FEE
IF  (ST-V.ISSUE-DATE (#I1) LT 19970101)
    OR (ST-V.MONTH-ALLOC-AMT (#I1) = 999.99)
    OR (ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
    OR = 'O' OR = 'P' OR = 'Q')
    OR (ST-V.DUES-ALL-PAID-IND = 'Y')
    OR (#I1 NE #FST-X)
    OR (ST-V.PROCESS-IND NE 'G')           /* MUST BE G/F         DW258
  ESCAPE ROUTINE
END-IF
*
DECIDE ON FIRST VALUE ST-V.PLAN-A2 (#I1)
  VALUE 'OL' MOVE #SVC-FEE-OL TO #SVC-FEE
* VALUE 'RT' MOVE #SVC-FEE-TM TO #SVC-FEE       /* YK3
* VALUE 'LT' MOVE #SVC-FEE-TM TO #SVC-FEE       /* YK3
  VALUE 'SP' MOVE #SVC-FEE-SP TO #SVC-FEE
  VALUE '2P' MOVE #SVC-FEE-2P TO #SVC-FEE
  VALUE '3P' MOVE #SVC-FEE-3P TO #SVC-FEE
  VALUE '4P' MOVE #SVC-FEE-4P TO #SVC-FEE
  VALUE '5P' MOVE #SVC-FEE-5P TO #SVC-FEE
  VALUE '6P' MOVE #SVC-FEE-6P TO #SVC-FEE
  VALUE '7P' MOVE #SVC-FEE-7P TO #SVC-FEE
  VALUE '8P' MOVE #SVC-FEE-7P TO #SVC-FEE
  VALUE '9P' MOVE #SVC-FEE-7P TO #SVC-FEE
  VALUE '20' MOVE #SVC-FEE-20 TO #SVC-FEE
  VALUE '30' MOVE #SVC-FEE-30 TO #SVC-FEE
  NONE        IGNORE
END-DECIDE
*
* IF (ST-V.PLAN-A1 (#I1) GE 'U') AND (ST-V.PLAN-A1 (#I1) LE 'Z')         /* YK3
IF FUNCTION-TERM-POLICY(<ST-V.PLAN(#I1)>)                                /* YK3
  MOVE #SVC-FEE-TM TO #SVC-FEE
END-IF
*
IF (#SVC-FEE = 0) AND (ST-V.PLAN-A2 (#I1) = MASK (NN))
  IF ST-V.PLAN-N2 (#I1) LE 19 MOVE #SVC-FEE-10 TO #SVC-FEE ELSE
    IF ST-V.PLAN-N2 (#I1) LE 29 MOVE #SVC-FEE-20 TO #SVC-FEE ELSE
      IF ST-V.PLAN-N2 (#I1) LE 34 MOVE #SVC-FEE-30 TO #SVC-FEE ELSE
        MOVE #SVC-FEE-OL TO #SVC-FEE
      END-IF END-IF END-IF
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE PRINT-STOP-START
* * * * * * * * * * * * * * * * *
*
IF AS-TYPE = '1'
  MOVE 'STOP' TO #STOP-STRT
*
  IF   (DATE-OF-DEATH NE 0)
      AND (DEBIT-CREDIT-AMT LT 0)
    ADD DEBIT-CREDIT-AMT TO #TOT-DB-CR
    ADD 1 TO #CNT-6
    DISPLAY (6) #CNT-6  (EM=ZZZ9)
      'SSN'           AS-SSN-A
      'CN'            ST-V.ID-NUMBER
      'DB-CR/AMT'     ST-V.DEBIT-CREDIT-AMT
      'INT/FlG'       ST-V.INTRO-FLAG
      'MIL/ID'        ST-V.MILITARY-SERVICE
      'ACT/RET'       AS-STATUS
      'DFAS/Amt'      AS-AMOUNT  (EM=Z,ZZZ.99)
      'Receiver/Name' ST-V.NAME (EM=XXXXXXXXXXXXXXX)
      'Linked/CN'     ST-V.LINKED-CN (1)
  END-IF
ELSE
  MOVE 'START' TO #STOP-STRT
END-IF
*
ADD 1 TO #CNT-2
DISPLAY (2) #CNT-2  (EM=ZZZ9)
  'SSN'           AS-SSN-A
  'STOP/STRT'     #STOP-STRT
  '1st/Mode'      ST-V.MODE (1)
* 'Loan/Amt'      ST-V.LOAN-AMOUNT
  'INT/FlG'       ST-V.INTRO-FLAG
  'Serv'          AS-SERVICE
  'ACT/RET'       AS-STATUS
  'DFAS/Amt'      AS-AMOUNT  (EM=Z,ZZZ.99)
  'Mbr/Name'      AS-NAME    (EM=XXXXXXXXXXXXXXX)
  'CN'            ST-V.ID-NUMBER
  'AAFM/Alot/Amt' #ALOT-AMT-TO-PRT (EM=Z,ZZZ.99)
  'Receiver/Name' ST-V.NAME (EM=XXXXXXXXXXXXXXX)
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE PRINT-ERROR
* * * * * * * * * * * * * * * *
*
MOVE TRUE TO #REJECT
ADD 1 TO #CNT-3
DISPLAY (3) #CNT-3  (EM=ZZ9)
  'SSN'         AS-SSN-A
  'CN'          ST-V.ID-NUMBER
  'ST/SP'       AS-TYPE
  'DFAS/Amount' AS-AMOUNT  (EM=Z,ZZZ.99)
  'Error'       #ERROR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE PROCESS-ACCT-REG-STOP-STRT  /* DW13
* * * * * * * * * * * * * * * * *
*
IF AS-TYPE = '1'
  MOVE 'STOP' TO #TR-CD
ELSE
  MOVE 'STRT' TO #TR-CD
END-IF
*
MOVE #ALOT-AMT-TO-PRT TO #ADJ-AMT
RESET #CMBX     /* No DESRIPTION on TR REC
PERFORM CALL-C2522SAM
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE DB-CR-BADJ-ADJUSTMENT   /* DW10
* * * * * * * * * * * * * * * * * * *
*
IF AS-TYPE = '1'
  MOVE 'STOP' TO #TR-CD
ELSE
  MOVE 'STRT' TO #TR-CD
END-IF
*
ADD 1 TO #CNT-7
DISPLAY (7) #CNT-7 'CN' ST-V.ID-NUMBER
  'Tran/Code'      #TR-CD
  'Prior/DB-CR'    #PRIOR-DB-CR    (EM=-ZZ,ZZZ.99)
  'DB-CR/ADJ'      #DB-CR-ADJ      (EM=-ZZ,ZZZ.99)
  'Prior/Term-ref' #PRIOR-term-ref (em=-zz,zzz.99)     /* vt5
  'Term-ref/ADJ'   #Term-ref-adj   (em=-zz,zzz.99)     /* vt5
  'Prior/BADJ'     #PRIOR-BADJ     (EM=-ZZ,ZZZ.99)
  'BADJ/ADJ'       #BADJ-ADJ       (EM=-ZZ,ZZZ.99)
  'CMBX'           #CMBX
  'Desc'           #ADJ-DESC
*
IF #DB-CR-ADJ NE 0                      /* DW13
  MOVE #DB-CR-ADJ TO #ADJ-AMT
  IF #DB-CR-ADJ GT 0
    MOVE 'RDCR' TO #TR-CD
  ELSE
    MOVE 'ADCR' TO #TR-CD
  END-IF
*
  PERFORM CALL-C2522SAM
END-IF
*
write 'line 4620 - before RTRC and ATRC trans'  '=' st-v.id-number '=' #term-ref-adj
if #term-ref-adj ne 0                                             /* vt5 \/
  move #term-ref-adj to #adj-amt
  if #term-ref-adj gt 0
    move 'RTRC' to #tr-cd
  else
    move 'ATRC' to #tr-cd
  end-if
  perform call-c2522sam
end-if
* reset #term-ref-adj  #prior-term-ref                      /* vt6  removed on 10/08/2014
write 'cleared term-ref-adj ' '=' st-v.id-number '=' #term-ref-adj   /* vt5 /\
*
IF #BADJ-ADJ NE 0                       /* DW13
  MOVE #BADJ-ADJ TO #ADJ-AMT
  MOVE 'BADJ' TO #TR-CD
  PERFORM CALL-C2522SAM
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALL-C2522SAM   /* DW13
* * * * * * * * * * * * * * * *
*
MOVE ST-V.DATE-ACCT-UPDATE TO #LAST-DATE-UPDATE
MOVE #PARM-YYYYMMDD TO ST-V.DATE-ACCT-UPDATE #NEW-DATE-UPDATE #EFF-DT
*
MOVE 'ATHPIALA' TO #SOURCE-PROG
*
IF #TR-CD = 'STOP' OR = 'STRT'
  RESET #ISSUE-DATE
ELSE
  MOVE ST-V.ISSUE-DATE (#I1) TO #ISSUE-DATE
END-IF
*
MOVE 'EDS' TO #CLERK
RESET #SCR-TRAN-COD
*
CALLNAT 'C2522SAM'
  #CGA-SCR-COMMAND
  #CGA-SCR-ID
  #CGA-SCR-SUFFIX
  #CLERK
  ST-V.ID-NUMBER
  #SOURCE-PROG
  #EFF-DT
  #TR-CD
  #ADJ-AMT
  #OLD-FPF
  #NEW-FPF
  #LAST-DATE-UPDATE
  #NEW-DATE-UPDATE
  #ISSUE-DATE
  #SCR-TRAN-COD
  #CMBX
  #TIMN                     /* DW41
WRITE 'tr acct' ST-V.ID-NUMBER #TR-CD #ADJ-AMT #NEW-DATE-UPDATE
  'iss-dt=' #ISSUE-DATE
*
END-SUBROUTINE
*
*****************                               /* vt1 \/
DEFINE SUBROUTINE CREATE-REPORT
*****************
*
RESET #ISSUE-DATE-1 #X-ALT-LP-DATE #PAID-TO-DATE
CALLNAT 'gplnmsxx' #POL-NUM ST-V.ID-NUMBER #I1
*
MOVE ST-V.ISSUE-DATE(#I1) TO #WORK-DATE
COMPRESS #WORK-DATE-MM '/' #WORK-DATE-DD '/' #WORK-DATE-YYYY
  INTO #ISSUE-DATE-1 LEAVING NO
*
MOVE ST-V.X-ALT-LP-DATE (#I1) TO #WORK-DATE
COMPRESS #WORK-DATE-MM '/' #WORK-DATE-DD '/' #WORK-DATE-YYYY
  INTO #X-ALT-LP-DATE LEAVING NO
*
MOVE ST-V.PAID-TO-DATE(#I1) TO #WORK-DATE
COMPRESS #WORK-DATE-MM '/' #WORK-DATE-DD '/' #WORK-DATE-YYYY
  INTO #PAID-TO-DATE LEAVING NO
*
COMPRESS ST-V.ID-NUMBER     #TAB
  ST-V.NAME                 #TAB
  #ISSUE-DATE-1             #TAB
  #POL-NUM                  #TAB
  ST-V.X-ALT-LP-IND (#I1)   #TAB
  #X-ALT-LP-DATE            #TAB
  #PAID-TO-DATE             #TAB
  INTO #OUT-FILE1 LEAVING NO
WRITE WORK 5 #OUT-FILE1
*
END-SUBROUTINE
*
*****************
DEFINE SUBROUTINE CREATE-EMAIL
*****************
*
RESET EMAIL-INFORMATION
TEMPLATE-TYPE := #LOAN-CANCELLED
*
#ID-NUMBER1 := ST-V.ID-NUMBER

DAL-CN         := ST-V.ID-NUMBER
PENDING-CN     := ST-V.ID-NUMBER
MOVE ST-V.MEMBER-CONTACT-ID TO #CONTACT-ID
#SALUTATION-WITH-NAME := 'S1'
CALLNAT 'GPRS0CNT' #CONTACT-ID #SALUTATION-WITH-NAME
* #SALUTATION-WITH-NAME := EDIT_NAME_LOWCASE (< #SALUTATION-WITH-NAME >) /*  bz-Name
#OWNER-NAME := #SALUTATION-WITH-NAME
OWNER-NAME := #OWNER-NAME
*
#E-MAIL := FUNCTION-PREFFERED-EMAIL (< #CONTACT-ID >)
OWNER-EMAIL := #E-MAIL
*
IF #INS-MAIL-CODE = #RESTRICTED-MAIL-CODE
  OWNER-EMAIL     := #RESTRICTED-EMAIL
END-IF
*
CALLNAT 'gplnmsxx' #POL-NUM #ID-NUMBER1 #I1
POLICY-NUMBER := #POL-NUM
WRITE WORK FILE 7 EMAIL-INFORMATION
*
END-SUBROUTINE                                             /* vt1 /\
*
*****************
define subroutine get-term-ref                      /* vt5 \/
*****************
reset #tot-trmf-amt #prior-term-ref    /* vt6
for #k 1  C*out-term-ref-group
  if OUT-TERM-REF-AMOUNT(#k) ne 0
    add OUT-TERM-REF-AMOUNT(#k) to #tot-trmf-amt
  end-if
end-for
end-subroutine
*
*****************
define subroutine reset-term-ref
*****************
reset #tot-trmf-amt
reset    OUT-TERM-REF-AMOUNT        (*)
  OUT-TERM-REF-YEAR                 (*)
  NEW-POL-ISS-DATE                  (*)
  OUT-TERM-REF-ENTRY-DATE           (*)
  NEW-TERM-POL-NBR                  (*)
*
end-subroutine
*                                                   /* vt5 /\
END
