* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* A00P0800 Report: CNs with Total DB over 800K
* bz 10/10/2012
* TMT 10/10/2014  tt1  Annuity Life Stabilization
* ---------------------------------------------------------------------------------------
DEFINE DATA
LOCAL USING GPRL0EML
LOCAL
1 ST-V VIEW OF A-STATUS
   2 ID-NUMBER
   2 REDEFINE ID-NUMBER
    3 CN-A1           (A1)
    3 CN_A5           (A5)
   2 MEMBER-CONTACT-ID
   2 PROCESS-IND 
   2 INTRO-FLAG 
   2 NUMBER-MEMBERSHIPS
   2 C*ACTIVE-SEGMENTS
   2 ACTIVE-SEGMENTS(9)
     3 FACE-AMOUNT  (EM=Z,ZZZ,ZZ9.99)
     3 PAY-STATUS 
     3 PLAN   
     3 STATUS        
     3 ISSUE-DATE   (EM=9999-99-99)
     3 PAID-UP-DATE (EM=9999-99-99)
     3 NUM-MBRSHIPS
     3 POL-NUM-PRE
     3 POL-NUM-SUF
*************************
1 #CN        (N6) INIT <0>
1 #DATN      (N8) 
1 #SUFF      (A3) 
1 Res
  2 #LOAN-BAL   (N7.2/9)
  2 #LOAN-BAL-2 (N7.2/9)
  2 #ACC-INT    (N7.2/9)
  2 #ACC-INT-2  (N7.2/9)
  2 #CSV        (N7.2/9)
  2 #CVALUE     (N7.2/9)
  2 #LVALUE     (N7.2/9)
  2 #MCSV       (N7.2/9)
  2 #DB         (N7.2/9) (EM=Z,ZZZ,ZZ9.99)
  2 #ANN-PREM   (N7.2/9)
  2 #FACE-AMT   (N7.2/9)   
  2 #TPP        (N7.2/9)   
***********************************
1  v_PN             (I1)     INIT  <1>
1  f_Rep            (A80)    INIT <"/usr/SAG/AAFMAA/batch/workfiles/WORK/POL_800.TXT">
1  f_Name           (A)      DYNAMIC  INIT <'POL_800.TXT'>
1  v_RC             (I4)
*
1  dm                   (A1)     INIT  <H'09'>
1 #i                    (I2)
1 v_Total               (N7.2) (EM=Z,ZZZ,ZZ9.99) 
1 c_Tot                 (N3) 
1 c_Tot_1               (N3) 
1 c_Tot_2               (N3) 
1 c_Tot_3               (N3) 
1 c_New                 (N3) 
1 v_Last_Good_Pol       (I2) 
*
1 v_A16                 (A16) 
1 v_A120                (A120)
1 l_Got_New             (L)
1 v_From_A              (A8)
1 v_From                (N8)
1 v_D                   (D) INIT <*DATX>
*
1  FTP_Script    (A) DYNAMIC INIT <'/usr/SAG/AAFMAA/batch/workfiles/PROD/PGM/ftpSAS'>
* 1  DIR_Win       (A) DYNAMIC INIT <'ftp/TEST'>                  /*  --db Test
1  DIR_Win       (A) DYNAMIC INIT <'ftp/NewBiz/exceeds_face'>     /*  --db
1  shcmd         (A) DYNAMIC
1  v_A           (A) DYNAMIC
1  v_A78         (A78)
1  v_N2          (N2) INIT <31>        
END-DEFINE
***********************************
ON ERROR
  WRITE  *PROGRAM "Err-ln:" *ERROR-LINE "Err:" *ERROR-NR / ST-V.ID-NUMBER #i
  ESCAPE ROUTINE
END-ERROR
  FORMAT PS=22   
*  p_TO    := 'bzaslavskiy@aafmaa.com'                            /*       --db  Test
  p_TO    := 'cbrown@aafmaa.com,cperez@aafmaa.com,bzaslavskiy@aafmaa.com'           /*       --db 
 
 IF *DEVICE <> 'BATCH'
    v_PN := 1   v_RC := PRT_FN_PUT(<v_PN, f_Rep>)
 ELSE
     IF *DATA <> 0 INPUT v_A78  PRINT(0) '1' v_A78
        IF v_A78 = MASK(99) MOVE EDITED v_A78 TO v_N2 (EM=99) END-IF
     END-IF
     IF *DATA <> 0 INPUT v_A78 PRINT(0) '2' v_A78  f_Name  := v_A78  END-IF         
     IF *DATA <> 0 INPUT v_A78 PRINT(0) '3' v_A78  DIR_Win := v_A78  END-IF     
     IF *DATA <> 0 INPUT v_A78 PRINT(0) '4' v_A78  p_TO    := v_A78  END-IF         
*     IF *DATA <> 0 INPUT v_A78 PRINT(0) '5' v_A78  p_CC    := v_A78  END-IF   
 END-IF
 FORMAT(1) LS = 161 PS = 250
 v_D := v_D - v_N2
 MOVE EDITED v_D (EM=YYYYMMDD) TO v_From_A
 MOVE EDITED v_From_A TO v_From (EM=99999999)
 WRITE(1)  NOTITLE  *PROGRAM 'ver.1.2' *DATX *TIMX 5x '-- CNs with total Death Benefits over 800K --' 5x 
                   'Env PROD:' F-IS-DEV(<>) (EM=YES/NO) GET_DBN(<>)(AL=3) //
       'Policy          '  dm 'Plan ' dm 'Face amount' dm 'Death Benefit' dm 'Issue Date ' dm 'Paid up date    ' dm 'Total DB' 

SETA. SETTIME
READ  ST-V BY ID-NUMBER FROM   1900   /* 86754 TO 89728  
     IF (PROCESS-IND ='S' OR = 'C' ) OR
         NUMBER-MEMBERSHIPS = 0
         ESCAPE TOP 
     END-IF
    RESET v_Total
*
  RESET RES
  #CN :=   ID-NUMBER
  #DATN := *DATN
  #SUFF := 'NTP'
  CALLNAT 'CVALUSXX'  #CN  #SUFF #DATN
                    #LOAN-BAL   (*)  #LOAN-BAL-2 (*)  #ACC-INT    (*)
                    #ACC-INT-2  (*)  #CSV        (*)  #CVALUE     (*)
                    #LVALUE     (*)  #MCSV       (*)  #DB         (*)
                    #ANN-PREM   (*)  #FACE-AMT   (*)  #TPP        (*)    
*    
    l_Got_New := FALSE
    FOR #i = 1 TO C*ACTIVE-SEGMENTS
       IF STATUS(#i) <> 'D' ESCAPE TOP END-IF
      
       IF   (  PLAN(#i) = 'OL' 
         AND (FACE-AMOUNT(#i) >= 800000 AND FACE-AMOUNT(#i) <= 850000 ))
         OR 
          ( IS-ANNUITY-LIFE(<PLAN(#i)>)   /* TT1
         AND (FACE-AMOUNT(#i) >= 800000 AND FACE-AMOUNT(#i) <= 900000 ))
         ESCAPE TOP 
       END-IF
       IF ISSUE-DATE(#i) >= v_FROM     l_Got_New := TRUE END-IF
*       v_Total := v_Total + FACE-AMOUNT(#i)
        v_Total := v_Total + #DB(#i)
        v_Last_Good_Pol := #i
    END-FOR
    
    DECIDE FOR EVERY CONDITION  
        WHEN v_Total <= 800000 ESCAPE TOP
        WHEN v_Total > 800000 c_Tot := c_Tot + 1 
        WHEN v_Total > 800000 AND v_Total <= 850000 c_Tot_1 := c_Tot_1 + 1 
        WHEN v_Total > 850000 AND v_Total <= 900000 c_Tot_2 := c_Tot_2 + 1 
        WHEN v_Total > 900000  c_Tot_3 := c_Tot_3 + 1 
        WHEN NONE IGNORE
    END-DECIDE
 
    FOR #i = 1 TO C*ACTIVE-SEGMENTS
       IF STATUS(#i) <> 'D' ESCAPE TOP END-IF
       IF ISSUE-DATE(#i) GE 19941201
          COMPRESS ID-NUMBER '-' NUM-MBRSHIPS(#i)         INTO v_A16 LEAVING NO SPACE          
        ELSE
          COMPRESS POL-NUM-PRE(#i) CN_A5 POL-NUM-SUF(#i)  INTO v_A16 LEAVING NO SPACE
        END-IF
        MOVE LEFT v_A16 TO v_A16

       IF NOT l_Got_New ESCAPE TOP END-IF

      IF #i <  v_Last_Good_Pol
        WRITE(1) v_A16 dm PLAN(#i) dm FACE-AMOUNT(#i)dm #DB(#i) dm ISSUE-DATE(#i) dm PAID-UP-DATE(#i) 
      ELSE   
        c_New := c_New + 1
        WRITE(1) v_A16 dm PLAN(#i) dm FACE-AMOUNT(#i) dm #DB(#i) dm ISSUE-DATE(#i) dm PAID-UP-DATE(#i) dm v_Total
      END-IF
    END-FOR    
  END-READ

 COMPRESS '(' v_N2 ')' INTO v_A LEAVING NO SPACE
 PRINT (1) NOTITLE / 'Date range:' v_D (EM=MM/DD/YYYY) '-' *DAT4U v_A ' RunTime:'  *TIMD(SETA.) (EM=ZZh:Z9min:99sec:9) //
 'Over   800k'    c_Tot   'New:' c_New  /
 '800k - 850k'    c_Tot_1   / 
 '850k - 900k'    c_Tot_2   /
 'Over   900k'    c_Tot_3   
 CLOSE PRINTER (1)    

 PERFORM sbr_FTP
 PERFORM sbr_EML

* =====================================================================
DEFINE sbr_FTP
   COMPRESS FTP_Script  f_Rep  'X'  DIR_Win INTO shcmd
   call 'shcmd' shcmd
   v_RC :=  RET('shcmd')
   IF v_RC <> 0
      PRINT (0) 'FTP Error. Code:' v_RC
   END-IF              
END-SUBROUTINE
* =====================================================================
DEFINE sbr_EML
  COMPRESS  "'" 'CNs Exceeded Total DB 800K    Total:' c_Tot 'New:' c_New "'" INTO p_SUBJ
  MOVE EDITED v_D (EM=MM/DD/YYYY) TO v_A
  COMPRESS '-- CNs with Total Death Benefits > 800,000' 'Date range' v_A '-'
            *DAT4U '(' v_N2 ') Days' INTO p_MSG(01)
  COMPRESS '   Policies excluded from calculation:'       INTO p_MSG(03)
  COMPRESS '       Plan = OL Face amount 800,000-850,000' INTO p_MSG(04)
  COMPRESS '       Plan = AL Face amount 800,000-900,000' INTO p_MSG(05)  
  COMPRESS '   Over      800,000 : '  c_Tot  'New' c_New INTO p_MSG (07)  
  COMPRESS '   800,000 - 850,000 : '  c_Tot_1 INTO p_MSG(08)  
  COMPRESS '   850,000 - 900,000 : '  c_Tot_2 INTO p_MSG(09)  
  COMPRESS '   Over      900,000 : '  c_Tot_3 INTO p_MSG(10)  
  COMPRESS '\\192.168.50.71\' DIR_Win '/' f_Name  INTO  DIR_Win LEAVING NO SPACE
  COMPRESS 'Link to report:' DIR_Win INTO p_MSG(12)
  IF v_RC <> 0
    COMPRESS p_MSG(12) '(!)-FTP Executed with error-(!)' v_RC INTO p_MSG(12)
  END-IF  
  CALLNAT 'GPRS0EML' p_EMAIL 
  IF p_rc > 0 
     PRINT 'Send Email returns Error Code:' p_rc 
  END-IF
END-SUBROUTINE
END
