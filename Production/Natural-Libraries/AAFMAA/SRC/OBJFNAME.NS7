* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
************************************************************************
* NAME         : OBJFNAME                                              *
* AUTHOR       : Copyright: Electronic Data Systems                    *
* DESCRIPTION  : Return full name                                      *
************************************************************************
*
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE      TAG     REASON                                      *
* PAM    02112008  None    Program Written                             *
************************************************************************
*
DEFINE FUNCTION FUNCTION-FULL-NAME RETURNS (A25) BY VALUE
DEFINE DATA
PARAMETER
1 #INPUT-NAME      (A25)
*
LOCAL
*
1 #NAME            (A25)
*
1 #NAME-TABLE      (25)
 2 #NAME-SPLIT     (A25)
*
1 #FIRST-MID-TABLE (25)
 2 #FIRST-MI       (A25)
 2 REDEFINE #FIRST-MI
  3 #MI-T1         (A1)
  3 #MI-REST       (A24)
*
1 #I1              (I2)
1 #I2              (I2)
*
1 #SUFFIX-TABLE    
 2 #I              (A3)  INIT <'I'>
 2 #II             (A3)  INIT <'II'>
 2 #III            (A3)  INIT <'III'>
 2 #IV             (A3)  INIT <'IV'>
 2 #V              (A3)  INIT <'V'>
*    
END-DEFINE
************************************************************************
*
RESET #NAME-SPLIT (*)
*
SEPARATE #INPUT-NAME LEFT INTO #NAME-SPLIT (*) WITH DELIMITER ','
*
SEPARATE #NAME-SPLIT (2) LEFT INTO #FIRST-MI (*) WITH DELIMITER ' '
*
#FIRST-MI (1) := FUNCTION-UPPER-LOWER (<#FIRST-MI (1)>)
*
#NAME := #FIRST-MI (1)
*
IF #MI-T1 (2)  NE ' '
  RESET #MI-REST (2)
  COMPRESS #NAME #MI-T1 (2) INTO #NAME
END-IF
*
FOR #I1 3 TO 25
  IF #FIRST-MI (#I1) = ' '
    ESCAPE BOTTOM
  END-IF
*
  COMPRESS #NAME #FIRST-MI (#I1) INTO #NAME
*
END-FOR
*
#NAME-SPLIT (1) := FUNCTION-UPPER-LOWER (<#NAME-SPLIT (1)>)
COMPRESS #NAME #NAME-SPLIT (1) INTO #NAME
*
FOR #I1 3 TO 25
  IF #NAME-SPLIT (#I1) = ' '
    ESCAPE BOTTOM
  END-IF
*
  IF NOT #NAME-SPLIT (#I1) = #I OR = #II OR = #III OR = #IV OR = #V
    #NAME-SPLIT (#I1) := FUNCTION-UPPER-LOWER (<#NAME-SPLIT (#I1)>)
  END-IF
*
  COMPRESS #NAME ',' INTO #NAME LEAVING NO
  COMPRESS #NAME #NAME-SPLIT (#I1) INTO #NAME
*
END-FOR
*
FUNCTION-FULL-NAME := #NAME
*
END-FUNCTION
*
END
