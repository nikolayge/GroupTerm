* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* <Natural Source Header
/** New Subprogram RTEN0008. Refactoring CO logic
/**
/** :author nguentchev
/**
DEFINE DATA
PARAMETER
1 MEMBER-CONTACT-ID  (N8)
1 #SEGMENT           (I2)
1 #SMOKER-FLAG       (A1)
1 #ISSUE-DATE        (N8) 1 REDEFINE #ISSUE-DATE
  2 ISSUE-DATE-CENT-A (A2)
  2 ISSUE-DATE-YY (N2)
  2 ISSUE-DATE-MM (N2)
  2 ISSUE-DATE-DD (N2)
1 #ISSUE-AGE         (A2)
1 REDEFINE #ISSUE-AGE
  2 #ISSUE-AGE-N  (N2)
1 #PLAN                (A3)
1 REDEFINE #PLAN
  2 #PLAN-2            (A2)
  2 REDEFINE #PLAN-2
    3 #PLAN-N2          (N2)
  2 REDEFINE #PLAN-2
    3 #PLAN-A1          (A1)
  2 REDEFINE #PLAN-2
    3 #PLAN-N1          (N1)
    3 #PLAN-2ND-1       (A1)
  2 #PLAN-1            (A1)
1 #ANNUAL-PREM         (P5.2)
1 #TO-PLAN             (A3)   /* incr from a2 11/2000
1 REDEFINE #TO-PLAN
  2 #TO-PLAN-N2         (N2)
1 REDEFINE #TO-PLAN
  2 #TO-PLAN-N1         (N1)
1 REDEFINE #TO-PLAN
  2 #TO-PLAN-A1         (A1)
1 #TRAN-YYYYMMDD     (N8)
1 REDEFINE #TRAN-YYYYMMDD
  2 #TRAN-YYYYMM     (N6)
  2 REDEFINE #TRAN-YYYYMM
    3 #TRAN-YYYY     (N4)
    3 #TRAN-MM       (N2)
  2 #TRAN-DD         (N2)
1 #LUMP-SUM            (N6.2)
1 #NU-ANN-PREM         (N7.2) /* OUT
/*
LOCAL USING ATHISMTD
LOCAL
1 #VER-DATE           (N8) CONST <20151231>
1 #DISP-X             (I2)   /* DISPLACEMENT INDEX
1 #PD-UP-AGE          (P3)
1 #DESIRED-TERM       (N3)
1 #ORIGINAL-TERM      (N3)
1 #MORT-RATE-1        (P11.7)
1 #att-date  (n8/101)
1 #ATT-AGE   (P3/101)
1 #MORT-RATE (P4.3/101)
1 #QX        (P0.7/101)
1 #LX        (P8.5/101)
1 #DX-X      (P7.5/101)
1 #DX        (P9.5/101)
1 #NX        (P9.5/101)
1 #PV        (P9.7)
1 #WORK-X    (P7.7)
1 #YYYYMMDD    (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM   (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY     (N4)
    3 #MM       (N2)
  2 #DD       (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A   (A4)
  2 #MM-A     (A2)
  2 #DD-A     (A2)
1 #att-date-work  (n8)
*
1 CNT-V VIEW OF A-CONTACTS
  2 CONTACT-ID
  2 ID-NUMBER
  2 GENDER-CD
  2 DATE-OF-BIRTH
1 #SM-X    (I2)
1 #DUR-X   (I2)
1 #ATT-X   (I2)
1 #ATT-XX  (I2)
1 #ISS-X   (I2)
1 #I2      (I2)
1 #PD-UP-INDX-USED (I2)
1 #ATT-AGE-AT-BEG  (I2)
1 #ATT-INDX-USED   (I2)
1 #DOB     (N8)
1 REDEFINE #DOB
  2 #DOB-YYYYMM    (N6)
  2 REDEFINE #DOB-YYYYMM
    3 #DOB-YYYY     (N4)
    3 #DOB-MM       (N2)
  2 #DOB-DD        (N2)
*
1 #CURR-YR-MONS        (N2)
1 #CURR-ANNU-FACT      (P5.7)
1 #NEXT-ANNU-FACT      (P5.7)
1 #INTERP-ANNU-FACT    (P5.7)
1 #NU-PD-UP-AGE        (P3)
1 #NU-CURR-ANNU-FACT   (P5.7)
1 #NU-NEXT-ANNU-FACT   (P5.7)
1 #NU-INTERP-ANNU-FACT (P5.7)
1 #NU-MON-PREM         (N5.2)
1 REDEFINE #NU-MON-PREM
  2 #NU-MON-PREM-6     (N6)
  2 #NU-MON-PREM-C     (N1)    /* CENTS
1 #VERSION             (A1)
1 #AGE                 (P3)
1 #DURATION            (P3)
1 #TITLES (A9/6) INIT <
  'Duration ',
  'MortRate ',
  'Qx...... ',
  'Lx...... ',
  'Dx...... ',
  'Nx...... '
  >
END-DEFINE
*
IF #SMOKER-FLAG  = 'S'
  MOVE 2 TO #SM-X
ELSE
  MOVE +1 TO #SM-X
END-IF
FIND (1) CNT-V WITH CONTACT-ID = MEMBER-CONTACT-ID
  IF NO RECORDS FOUND
    ESCAPE BOTTOM
  END-NOREC
  #DOB  := CNT-V.DATE-OF-BIRTH
  IF CNT-V.ID-NUMBER = 0 OR #SEGMENT = 0
    IF #ISSUE-DATE > #VER-DATE
      #VERSION := '4'
    END-IF
  ELSE
    CALLNAT 'RTEN0004'
      CNT-V.ID-NUMBER
      #SEGMENT
      #VERSION   /* OUT
  END-IF
END-FIND
*
RESET #DUR-X
RESET #MORT-RATE (*)
*
MOVE #ISSUE-DATE TO #YYYYMMDD
SUBTRACT 1 FROM #YYYY
MOVE #YYYYMMDD TO #ATT-DATE-WORK
*
FOR #ATT-X #ISSUE-AGE-N TO 100
  ADD 1 TO #DUR-X
  COMPUTE #ISS-X = #ISSUE-AGE-N + 1
  MOVE #ATT-DATE-WORK TO #YYYYMMDD
  ADD 1 TO #YYYY
  MOVE #YYYYMMDD TO #ATT-DATE-WORK
  MOVE #YYYYMMDD TO #ATT-DATE (#DUR-X)
*
*   MOVE #DUR-X TO #ATT-XX
*   IF #ATT-XX GT 16
*     COMPUTE #ISS-X = #ISS-X + (#ATT-XX - 16)
*     MOVE 16 TO #ATT-XX
*     IF #ISS-X GT 86
*       MOVE 86 TO #ISS-X
*     END-IF
*   END-IF
*   MOVE TD-MORT (#SM-X, #ISS-X, #ATT-XX) TO #MORT-RATE (#DUR-X)
* *
  FOR #I2 1 TO 2
    MOVE #DUR-X TO #ATT-XX
    IF #ATT-XX GT +16
      IF #I2 = 2
        ADD 1 TO #ISS-X
      ELSE
        COMPUTE #ISS-X = #ISS-X + (#ATT-XX - 16)
      END-IF
      MOVE +16 TO #ATT-XX
      IF #ISS-X GT +86
        MOVE +86 TO #ISS-X
      END-IF
    END-IF
*
    IF #VERSION = '4'
      #AGE := #ISSUE-AGE-N
      #DURATION := #DUR-X
      CALLNAT 'RTEN0003'
        MEMBER-CONTACT-ID
        #SMOKER-FLAG
        CNT-V.GENDER-CD
        #AGE
        #DURATION
        #MORT-RATE-1 /* OUT
      ADD #MORT-RATE-1 TO #MORT-RATE (#DUR-X)
    ELSE
      ADD TD-MORT (#SM-X, #ISS-X, #ATT-XX) TO #MORT-RATE (#DUR-X)
    END-IF
*
    IF #I2 = 1
      IF #DUR-X LE 16
        ADD 1 TO #ISS-X
      END-IF
    ELSE
      IF #DUR-X LE 16
        SUBTRACT 1 FROM #ISS-X
      END-IF
      DIVIDE 2 INTO #MORT-RATE (#DUR-X)
    END-IF
  END-FOR
*
  MOVE #ATT-X TO #ATT-AGE (#DUR-X)
  COMPUTE ROUNDED #QX (#DUR-X) = (#MORT-RATE (#DUR-X) * .65) / 1000
*
  IF #DUR-X = 1
    MOVE 10000000 TO #LX (1)
  ELSE
    COMPUTE ROUNDED #LX (#DUR-X) = #LX (#DUR-X - 1) - #DX-X (#DUR-X - 1)
  END-IF
*
  COMPUTE ROUNDED #DX-X (#DUR-X) = #QX (#DUR-X) * #LX (#DUR-X)
  COMPUTE ROUNDED #WORK-X = (1 / 1.0525) ** (#DUR-X - 1)
  COMPUTE ROUNDED #DX (#DUR-X) = #LX (#DUR-X) * #WORK-X
END-FOR
*
MOVE #DX (#DUR-X) TO #NX (#DUR-X) /* fill in att age 100
SUBTRACT 1 FROM #DUR-X
FOR #ATT-X #DUR-X TO 1 STEP -1
  COMPUTE #NX (#ATT-X) = #NX (#ATT-X + 1) + #DX (#ATT-X)
END-FOR
*
IF #TO-PLAN = 'OL'  OR = 'GPL' OR= 'GP2'
  COMPUTE #DESIRED-TERM = 100 - #ISSUE-AGE-N
ELSE
  IF #TO-PLAN = MASK (NN)
    MOVE #TO-PLAN-N2 TO #DESIRED-TERM
  ELSE
    IF  (#TO-PLAN = MASK (N'P'))
        OR (#TO-PLAN = MASK (N'F'))
      MOVE #TO-PLAN-N1 TO #DESIRED-TERM
    END-IF
  END-IF
END-IF
*
IF #PLAN-2 = 'OL' OR = 'GPL' OR= 'GP2'
  COMPUTE #ORIGINAL-TERM = 100 - #ISSUE-AGE-N
ELSE
  IF #PLAN-2 = MASK (NN)
    MOVE #PLAN-N2 TO #ORIGINAL-TERM
  ELSE
    MOVE #PLAN-N1 TO #ORIGINAL-TERM
  END-IF
END-IF
*
COMPUTE #DISP-X = #ISSUE-AGE-N - 1
COMPUTE #PD-UP-AGE = #ISSUE-AGE-N + #ORIGINAL-TERM
MOVE #TRAN-YYYYMMDD TO #YYYYMMDD
*
#DOB := GET-DATE-OF-BIRTH (< MEMBER-CONTACT-ID >)
*
MOVE #TRAN-YYYYMMDD TO #YYYYMMDD
IF #TRAN-MM LT ISSUE-DATE-MM   /* get correct month with the yr
  ADD 12 TO #MM
END-IF
*
SUBTRACT ISSUE-DATE-MM FROM #MM
MOVE #MM   TO #CURR-YR-MONS
*
MOVE #TRAN-YYYYMMDD TO #YYYYMMDD
IF #TRAN-MM LT #DOB-MM   /* get correct year
  ADD 1 TO #YYYY      /* TO FIX ATTAINED PROBLEM
END-IF
*
SUBTRACT #DOB-YYYYMM FROM #YYYYMM
*
COMPUTE #PD-UP-INDX-USED = #PD-UP-AGE - #DISP-X
*
MOVE #TRAN-YYYYMMDD TO #YYYYMMDD  /* COMPUTE ATT AGE AT BEG OF POL YR /* DW10
SUBTRACT #CURR-YR-MONS FROM #MM
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
SUBTRACT #DOB-YYYYMM FROM #YYYYMM
MOVE #YYYY TO #ATT-AGE-AT-BEG
COMPUTE #ATT-INDX-USED = #ATT-AGE-AT-BEG - #DISP-X
*
COMPUTE ROUNDED #CURR-ANNU-FACT =
  (#NX (#ATT-INDX-USED) - #NX (#PD-UP-INDX-USED))
  / #DX (#ATT-INDX-USED)
COMPUTE ROUNDED #NEXT-ANNU-FACT =
  (#NX (#ATT-INDX-USED + 1) - #NX (#PD-UP-INDX-USED))
  / #DX (#ATT-INDX-USED + 1)
COMPUTE ROUNDED #INTERP-ANNU-FACT =
  ((12 - #CURR-YR-MONS) / 12 * #CURR-ANNU-FACT)
  + (#CURR-YR-MONS / 12 * #NEXT-ANNU-FACT)
COMPUTE ROUNDED #PV = #ANNUAL-PREM * #INTERP-ANNU-FACT
*
IF #TO-PLAN = 'AP'
  RESET #NU-MON-PREM
  MOVE ROUNDED #PV TO #NU-ANN-PREM  /* Amount due on PUAP
ELSE
  COMPUTE #NU-PD-UP-AGE = #ISSUE-AGE-N + #DESIRED-TERM
  COMPUTE ROUNDED #NU-CURR-ANNU-FACT =
    (#NX (#ATT-INDX-USED) - #NX (#NU-PD-UP-AGE - #DISP-X))
    / #DX (#ATT-INDX-USED)
  COMPUTE ROUNDED #NU-NEXT-ANNU-FACT =
    (#NX (#ATT-INDX-USED + 1) - #NX (#NU-PD-UP-AGE - #DISP-X))
    / #DX (#ATT-INDX-USED + 1)
  COMPUTE ROUNDED #NU-INTERP-ANNU-FACT =
    ((12 - #CURR-YR-MONS) / 12 * #NU-CURR-ANNU-FACT)
    + (#CURR-YR-MONS / 12 * #NU-NEXT-ANNU-FACT)
  COMPUTE ROUNDED #NU-MON-PREM =
    (#PV - #LUMP-SUM) / (#NU-INTERP-ANNU-FACT * 12)
  IF #NU-MON-PREM-C NE 0
    ADD .10 TO #NU-MON-PREM
  END-IF
  RESET #NU-MON-PREM-C
  COMPUTE #NU-ANN-PREM = #NU-MON-PREM * 12
END-IF
/*
* PRINT *PROGRAM 'Version:' #VERSION
* PRINT #TITLES(*)
* ADD 1 TO #DUR-X
* FOR #ATT-X 1 TO #DUR-X
*   PRINT
*   #ATT-X #MORT-RATE (#ATT-X) #QX (#ATT-X) #LX (#ATT-X)
*     #DX (#ATT-X) #NX (#ATT-X) 
* END-FOR
* PRINT 
*   / 'PV................:' #PV
*   / 'AnnualPremium.....:' #NU-ANN-PREM
*   / 'CurrentAnnuFactor.:' #CURR-ANNU-FACT
*   / 'NextAnnuFactor....:' #NEXT-ANNU-FACT
*   / 'InterpAnnuFactor..:' #INTERP-ANNU-FACT
*   / 'NUCurAnnuFactor...:' #NU-CURR-ANNU-FACT
*   / 'NUNextAnnuFactor..:' #NU-NEXT-ANNU-FACT
*   / 'NUInterAnnuFactor.:' #NU-INTERP-ANNU-FACT
*   / 'MonthlyPremium....:' #NU-MON-PREM
END
