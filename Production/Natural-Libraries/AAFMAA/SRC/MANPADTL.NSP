* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
/** Program: POLCYDTL
/** Purpose: To populate annuitized policy detail
/** BY: JOCELYN
/** DATE: 4/20/2015
/** Rewriten by NG 4/5/2016
****** MODIFICATIONS ***********************************************
* NAME     DATE     TAG     DESCRIPTION
* YF1    20170901   YF1     Fixed ONE-MP-DATE AND ONE-MONTH-PENSION
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
**LOCAL USING MANL0001
LOCAL
*
1 #CALCULATED
  2 #NUMBER-WD       (I4)
  2 #NUM-POL-WD      (I4)
  2 #TOTAL-POL-WD    (N7.2)
  2 #RESIDUAL        (N7.2)
  2 #PAID            (N7.2)
  2 #TOTAL-WD        (N7.2)
  2 #LAST-POL-WD     (N7.2)
  2 #LAST-WITHDRAWAL (N7.2)
  2 #GROSS           (N7.2)
  2 #GROSS-TAXABLE   (N7.2)
  2 #PRO-RATE-MP     (N7.2)
1 #SCR-DATA
  2 POLICY-NBR        (A16)
  2 #INTRST-RATE      (A4)
  2 ISSUE-DATE        (N8)
  2 REDEFINE ISSUE-DATE
    3 #YYYY  (N4)
    3 #MM    (N2)
    3 #DD    (N2)
  2 SETTLEMENT-OPTION (A2)
  2 ANNUITANT-STATUS  (A1)
  2 START-DATE        (A10)
  2 PRINCIPAL         (A12)
  2 MONTHLY-PENSION   (A12)
  2 ANNUAL-PAYMENT    (A12)
  2 InitialInterest   (A12)
  2 THIRTHEEN-CHECK   (A12)
  2 RESERVE           (A12)
  2 INITIAL-PAYMENT   (A12)
  2 TOTAL-PAID        (A12)
  2 RESIDUAL          (A12)
  2 PAID-UP-DATE      (A10)
  2 DEPOSIT           (A12)
  2 WITHDRAWAL        (A12)
  2 TOTAL-WD          (A12)
  2 NUMBER-WD         (A2) 2 REDEFINE NUMBER-WD
    3 NUMBER-WD-N (N2)
  2 NEW-WD            (A12)
  2 TAXABLE           (A12)
*
1 ANNUITANTS VIEW OF A-ANNUITANTS
  2 POLICY-NUMBER     (A16)
  2 CONTACT-ID        (N8.0)
  2 REFERENCE-CN      (N6.0)
  2 ANNUITANT-STATUS  (A1)
  2 SETTLEMENT-OPTION (A2)
  2 MONTHLY-PENSION   (N7.2)
  2 PRINCIPAL         (N7.2)
  2 ANNUAL-PAYMENT    (N7.2)
  2 RESERVE-AMOUNT    (N7.2)
  2 WITHDRAWALS       (N7.2)
  2 INITIAL-PAYMENT   (N7.2)
  2 INITIAL-INTEREST  (N7.2)
  2 DEPOSIT           (N7.2)
  2 T13TH-CHECK       (N7.2)
  2 TAXABLE           (N7.2)
  2 WITHDRAWAL-DATE   (N8)
  2 ONE-MONTH-PENSION (N7.2)
  2 ONE-MP-DATE       (N8.0) 2 REDEFINE ONE-MP-DATE
    3 ONE-YYYY (N4)
    3 ONE-MM   (N2)
    3 ONE-DD   (N2)
  2 START-DATE      (N8) 2 REDEFINE START-DATE
    3 YYYY (A4)
    3 MM   (A2)
    3 DD   (A2)
  2 PAID-UP-DATE (N8.0) 2 REDEFINE PAID-UP-DATE
    3 YYYY-1 (A4)
    3 MM-1   (A2)
    3 DD-1   (A2)
*
1 AU-V VIEW OF A-ANNUITANTS
  2 ADD-USER (A8)
  2 ADD-DATE (N8.0)
  2 ADD-TIME (N7.0)
  2 LAST-UPD-USER (A8)
  2 LAST-UPD-DATE (N8.0)
  2 LAST-UPD-TIME (N7.0)
  2 POLICY-NUMBER     (A16)
  2 CONTACT-ID        (N8.0)
  2 REFERENCE-CN      (N6.0)
  2 ANNUITANT-STATUS  (A1)
  2 SETTLEMENT-OPTION (A2)
  2 MONTHLY-PENSION   (N7.2)
  2 PRINCIPAL         (N7.2)
  2 ANNUAL-PAYMENT    (N7.2)
  2 RESERVE-AMOUNT    (N7.2)
  2 WITHDRAWALS       (N7.2)
  2 T13TH-CHECK       (N7.2)
  2 INITIAL-PAYMENT   (N7.2)
  2 INITIAL-INTEREST  (N7.2)
  2 DEPOSIT           (N7.2)
  2 TAXABLE           (N7.2)
  2 WITHDRAWAL-DATE   (N8)
  2 ONE-MONTH-PENSION (N7.2)
  2 ONE-MP-DATE       (N8.0)
  2 START-DATE        (N8.0)
  2 PAID-UP-DATE      (N8.0)
  2 CHECK-NUMBER      (A10)
*
1 HU-V VIEW OF A-ANNU-HISTORY
  2 POLICY-NUMBER (A16)
  2 CONTACT-ID (N8.0)
  2 ANNUITANT-STATUS (A1)
  2 SETTLEMENT-OPTION (A2)
  2 MONTHLY-PENSION (N7.2)
  2 PRINCIPAL       (N7.2)
  2 ANNUAL-PAYMENT  (N7.2)
  2 RESERVE-AMOUNT  (N7.2)
  2 WITHDRAWALS     (N7.2)
  2 WITHDRAWAL-DATE (N8)
  2 ONE-MONTH-PENSION (N7.2)
  2 ONE-MP-DATE       (N8.0)
  2 REFERENCE-CN (N6.0)
  2 START-DATE (N8.0) 2 REDEFINE START-DATE
    3 YYYY (A4)
    3 MM   (A2)
    3 DD   (A2)
  2 PAID-UP-DATE  (N8) 2 REDEFINE PAID-UP-DATE
    3 YYYY-1 (A4)
    3 MM-1   (A2)
    3 DD-1   (A2)
  2 INITIAL-PAYMENT (N7.2)
  2 NOTES (A70/1:2)
  2 ADD-USER (A8)
  2 ADD-DATE (N8.0) 2 REDEFINE ADD-DATE
    3 AD-YYYY  (A4)
    3 AD-MM    (A2)
    3 AD-DD    (A2)
  2 ADD-TIME (N7.0)
  2 LAST-UPD-USER (A8)
  2 LAST-UPD-DATE (N8.0) 2 REDEFINE LAST-UPD-DATE
    3 #YYYY (A4)
    3 #MM   (A2)
    3 #DD   (A2)
  2 LAST-UPD-TIME (N7.0)
  2 DEPOSIT         (N7.2)
  2 T13TH-CHECK     (N7.2)
  2 TOTAL-WD        (N7.2)
  2 NUMBER-WD       (N4)
  2 RESIDUAL        (N7.2)
  2 TOTAL-PAID      (N7.2)
  2 TAXABLE         (N7.2)
  2 CHECK-NUMBER  (A10)
*
1 CONTACT-V VIEW OF A-CONTACTS
  2 CONTACT-TYPE (A1)
  2 ID-NUMBER  (N6)
  2 CONTACT-ID (N8)
  2 GENDER-CD  (A1)
  2 SSN        (N9)
  2 DATE-OF-BIRTH (N8)
  2 REDEFINE DATE-OF-BIRTH
    3 YYYY (N4)
    3 MM   (N2)
    3 DD   (N2)
  2 DATE-OF-DEATH
  2 REDEFINE DATE-OF-DEATH
    3 DEATH-YYYY (A4)
    3 DEATH-MM   (A2)
    3 DEATH-DD   (A2)
*
1 #RESERVE            (N7.2)
1 #DEPOSIT            (N7.2)
1 #ADDRESS            (A43/4)
1 #AGE                (N3.0)
1 #TODAY-A            (A10)
1 #SCR-TERMID         (A12)
1 #ANNU-DATE   (A8) 1 REDEFINE #ANNU-DATE
  2 YYYY       (A4)
1 #ISSUE-DATE  (N8)

1 #TODAY       (N8)
1 REDEFINE #TODAY
  2 #YYYY  (N4)
  2 #MM    (N2)
  2 #DD    (N2)
1 REDEFINE #TODAY
  2 #YYYY-A (A4)
*
1 #DAYS-IN-MONTH (N2) CONST <30>
1 #INTEREST-ONLY (A2) CONST <'IO'>
1 #VALID-TYPES (A2/8) CONST <'A1','A2','IO','LA','LT','L1','L2','L3'>
1 #BPCALC      (A2/5) CONST <'L1','L2','L3','LA','IO'>
1 #VALID-STATUS (A1/4) CONST <'A','C','D','P'>
1 #VALID-CODES  (A3/4) CONST <'MB','GCJ','MJM','YXF'>
* 'ERROR... A minimum residual of $10,000 is required for withdrawals',
* 'ERROR... The minimum withdrawal is $5,000',
* 'Warning... The minimum withdrawal is $5,000',
1 #MSG-LIST           (A/14)  DYNAMIC INIT <
  'Invalid Type... Valid codes are A1, A2 , IO , LA, LT, L1, L2, L3',
  'Invalid Status... Valid codes are A, C, D, P',
  'Invalid Date... Date must be mm/dd/yyyy',
  'Invalid Amount.. Field must be numeric',
  'Invalid Annuity type... Valid type is Interest-Only',
  'ERROR... Annual Withdrawal Limit Reached',
  'Warning... Annual Withdrawal Limit Reached',
 'Warning... A minimum residual of $10,000 is required for withdrawals',
  'Withdrawal is greater than residual',
  'Only "IO" available for trusts',
  'ERROR...withdrawal is less than $0',
  'Amount is less than $0',
  'There are withdrawals from this policy'
  >
*
1 BLANK (A1) CONST <' '>
1 #MSG                (A60)
1 #DOB                (A10)
1 #DOD                (A10)
1 #ID                 (A10)
1 #PR                 (N0.5)
1 #CONTROL-VARS-WITHDRAWAL            (C)
1 #POS  (I4)
1 #CV-NUM (N2) CONST <15>
1 #CV
  2 #CONTROL-VARS-SETTLEMENT-OPTION     (C)
  2 #CONTROL-VARS-ANNUITANT-STATUS      (C)
  2 #CONTROL-VARS-START-DATE            (C)
  2 #CONTROL-VARS-PRINCIPAL             (C)
  2 #CONTROL-VARS-MONTHLY-PENSION       (C)
  2 #CONTROL-VARS-ANNUAL-PAYMENT        (C)
  2 #CONTROL-VARS-INI-INTEREST          (C)
  2 #CONTROL-VARS-THIRTHEEN-CHECK       (C)
  2 #CONTROL-VARS-RESERVE-AMOUNT        (C)
  2 #CONTROL-VARS-INITIAL-PAYMENT       (C)
  2 #CONTROL-VARS-TOTAL-PAID            (C)
  2 #CONTROL-VARS-RESIDUAL              (C)
  2 #CONTROL-VARS-PAID-UP-DATE          (C)
  2 #CONTROL-VARS-DEPOSIT               (C)
  2 #CONTROL-VARS-TAXABLE               (C)
1 REDEFINE #CV
  2 #CV-A (C/#CV-NUM)
1 #CV-SAVE            (C/#CV-NUM)
1 #ERRORS             (L)
1 #ERROR-NBR          (I4)
1 #CODE-DESCRIPTION   (A24)
1 #GENERATION-NBR     (N7)
1 #NV (A12) 1 REDEFINE #NV
  2 #NV-A (A1/12)
1 #CONFIRM-WITHDRAWAL  (A1)
1 #CONFIRM-DELETE      (A1)
1 J    (I4)
1 L    (I4)
1 W    (N7.2)
*
END-DEFINE
*
SET KEY PF3 NAMED "Exit"
SET KEY PF4 NAMED 'FHist'
SET KEY PF5 NAMED "Hist"
SET KEY PF11 NAMED 'Del'
*
DEFINE WINDOW CONFIRM-WITHDRAWAL
  SIZE 8 * 68
  BASE 13/2
  FRAMED ON POSITION SYMBOL AUTO
/*
DEFINE WINDOW Confirm-Delete
  SIZE 8 * 68
  BASE 13/2
  FRAMED ON POSITION SYMBOL AUTO
/*
COMPRESS *INIT-USER '-' #CGA-CLERK INTO #SCR-TERMID LEAVING NO
MOVE *DAT4U TO #TODAY-A
MOVE *DATN TO #TODAY
MOVE '*' TO #CGA-SCR-COMMAND
*
CONTACT-V.CONTACT-ID := #CGA-SCR-ID
#CGA-SCR-ID := #CGA-ORIG-ID     /* PASSED CN
#SCR-DATA.ISSUE-DATE := #CGA-MF-SCR-PARM-1-N
IF #SCR-DATA.ISSUE-DATE >= 20150101
  #INTRST-RATE := '3.5%'
ELSE
  #INTRST-RATE := '4.0%'
END-IF
MOVE LEFT JUSTIFIED #CGA-SCR-COMMAND TO #CGA-SCR-COMMAND
CALLNAT 'ADRN0016' CONTACT-V.CONTACT-ID
  #ADDRESS (*)
*
FIND CONTACT-V WITH CONTACT-ID = CONTACT-V.CONTACT-ID
  IF NO RECORDS FOUND
    #MSG := 'No contact record found'
    ESCAPE BOTTOM
  END-NOREC
  IF CONTACT-V.CONTACT-TYPE NE 'O'
    #AGE := #TODAY.#YYYY - CONTACT-V.YYYY
    IF #TODAY.#MM < CONTACT-V.MM
      #AGE := #AGE - 1
    ELSE IF #TODAY.#MM = CONTACT-V.MM AND #TODAY.#DD < CONTACT-V.DD
        #AGE := #AGE - 1
      END-IF
    END-IF
    IF CONTACT-V.DATE-OF-DEATH > 0
     COMPRESS CONTACT-V.DEATH-MM CONTACT-V.DEATH-DD CONTACT-V.DEATH-YYYY
        INTO #DOD WITH DELIMITER '/'
    ELSE
      RESET #DOD
    END-IF
  END-IF
  COMPRESS CONTACT-V.MM CONTACT-V.DD CONTACT-V.YYYY INTO #DOB
    WITH DELIMITER '/'
END-FIND
*
PERFORM POPULATE-DATA
#POS := POS (#SCR-DATA.SETTLEMENT-OPTION)
*
RPT.
REPEAT
  MOVE (AD=DP) TO #CV-A (*) #CONTROL-VARS-WITHDRAWAL
  DECIDE ON FIRST VALUE OF ANNUITANTS.ANNUITANT-STATUS
    VALUE 'A'
      MOVE (AD=U)  TO #CV-A (*) /* #CONTROL-VARS-WITHDRAWAL
      MOVE (AD=DP) TO #CONTROL-VARS-ANNUAL-PAYMENT
      MOVE (AD=DP) TO #CONTROL-VARS-INI-INTEREST
      MOVE (AD=DP) TO #CONTROL-VARS-TOTAL-PAID
      MOVE (AD=DP) TO #CONTROL-VARS-RESIDUAL
      IF ANNUITANTS.SETTLEMENT-OPTION = 'LT'
        MOVE (AD=DP) TO #CONTROL-VARS-THIRTHEEN-CHECK
      END-IF
    VALUE 'D','P','C'
      MOVE (AD=U) TO #CONTROL-VARS-ANNUITANT-STATUS
        #CONTROL-VARS-PAID-UP-DATE
    NONE VALUE
      IGNORE
  END-DECIDE
  #CV-SAVE (*) := #CV-A (*)
*
  INPUT TEXT #MSG MARK #POS USING MAP 'MANMPDTL'
  DECIDE ON FIRST VALUE OF *PF-KEY
    VALUE 'PF3'
      ESCAPE BOTTOM(RPT.)
    VALUE 'PF4'
      PERFORM FIELD-HISTORY
    VALUE 'PF5'
      PERFORM BROWSE-HISTORY
    VALUE 'PF11'
      PERFORM DELETE-ANNU-RECORD
      #CGA-SCR-COMMAND := 'AZ'
      ESCAPE BOTTOM(RPT.)
    VALUE 'ENTR'
      IF #CGA-SCR-COMMAND NE '*'
        FETCH 'G1000PXX'
      END-IF
      PERFORM DATA-VALIDATION
      IF #ERRORS
        ESCAPE TOP
      END-IF
      PERFORM ANNUITY-EDITS
      PERFORM POPULATE-DATA
    NONE VALUE
      IGNORE
  END-DECIDE
END-REPEAT
*
#CGA-SCR-ID := CONTACT-V.CONTACT-ID
FETCH 'MANPDTL'
*
DEFINE ANNUITY-EDITS
/*     -------------
IF #CV-A (*) MODIFIED
    OR #SCR-DATA.NEW-WD NE BLANK
  GET AU-V #CGA-ISN
  IF #GENERATION-NBR = 0  /* First edit
    CALLNAT 'MANNHST' #CGA-ISN #GENERATION-NBR #TODAY
  END-IF
  IF #SCR-DATA.NEW-WD EQ BLANK
    RESET ANNUITANTS.WITHDRAWALS
  END-IF
  MOVE BY NAME ANNUITANTS TO AU-V

  IF AU-V.WITHDRAWALS > 0
    AU-V.CHECK-NUMBER := GET-NEXT-CH-NUM (<>)
    AU-V.RESERVE-AMOUNT  :=AU-V.RESERVE-AMOUNT - AU-V.WITHDRAWALS
    AU-V.WITHDRAWAL-DATE := #TODAY
*
    #PRO-RATE-MP := ( #TODAY.#DD * AU-V.MONTHLY-PENSION )
      / #DAYS-IN-MONTH
*
    RESET AU-V.MONTHLY-PENSION AU-V.TAXABLE
      #SCR-DATA.NEW-WD
    CALLNAT 'MANNBPA'
      AU-V.REFERENCE-CN
      AU-V.POLICY-NUMBER
      AU-V.SETTLEMENT-OPTION
      AU-V.RESERVE-AMOUNT
      GENDER-CD
      #AGE
      AU-V.MONTHLY-PENSION
      AU-V.TAXABLE
      #MSG
*
    IF #MSG = BLANK
      #PRO-RATE-MP := #PRO-RATE-MP
        + ( (#DAYS-IN-MONTH - #TODAY.#DD) * AU-V.MONTHLY-PENSION )
        / #DAYS-IN-MONTH
      AU-V.ONE-MONTH-PENSION := #PRO-RATE-MP
      AU-V.ONE-MP-DATE := #TODAY
    END-IF
  END-IF

  AU-V.LAST-UPD-DATE := *DATN
  AU-V.LAST-UPD-USER := *USER
  AU-V.LAST-UPD-TIME := *TIMN
  UPDATE
  END TRANSACTION
END-IF

END-SUBROUTINE
/*
DEFINE POPULATE-DATA
/*     -------------
GET ANNUITANTS #CGA-ISN
/*
CALLNAT 'MANNGET'
  #CGA-ISN
  #TODAY
  #CALCULATED
  ANNUITANTS
/*
MOVE EDITED #NUM-POL-WD (EM=Z9) TO #SCR-DATA.NUMBER-WD
**MOVE EDITED #NUMBER-WD (EM=Z9) TO #SCR-DATA.NUMBER-WD
IF ANNUITANTS.START-DATE = 0
  #SCR-DATA.START-DATE := #TODAY
END-IF
*
COMPRESS ANNUITANTS.MM ANNUITANTS.DD ANNUITANTS.YYYY INTO
  #SCR-DATA.START-DATE WITH DELIMITER '/'
COMPRESS #SCR-DATA.#MM #SCR-DATA.#DD #SCR-DATA.#YYYY INTO #ID WITH DELIMITER '/'
MOVE ANNUITANTS.POLICY-NUMBER     TO #SCR-DATA.POLICY-NBR
MOVE ANNUITANTS.SETTLEMENT-OPTION TO #SCR-DATA.SETTLEMENT-OPTION
MOVE ANNUITANTS.ANNUITANT-STATUS  TO #SCR-DATA.ANNUITANT-STATUS
/*
MOVE EDITED ANNUITANTS.PRINCIPAL  (EM=Z,ZZZ,ZZ9.99)
  TO #SCR-DATA.PRINCIPAL
/*
IF ANNUITANTS.YYYY = #TODAY.#YYYY-A
  MOVE EDITED ANNUITANTS.INITIAL-PAYMENT (EM=Z,ZZZ,ZZ9.99)
    TO #SCR-DATA.INITIAL-PAYMENT
ELSE
  RESET #SCR-DATA.INITIAL-PAYMENT
END-IF
/*
IF ANNUITANTS.ONE-MONTH-PENSION > 0
    AND ANNUITANTS.ONE-MM = #TODAY.#MM
  MOVE EDITED ANNUITANTS.ONE-MONTH-PENSION (EM=Z,ZZZ,ZZ9.99)
    TO #SCR-DATA.MONTHLY-PENSION
ELSE
  MOVE EDITED ANNUITANTS.MONTHLY-PENSION (EM=Z,ZZZ,ZZ9.99)
    TO #SCR-DATA.MONTHLY-PENSION
END-IF
/*
MOVE EDITED ANNUITANTS.T13TH-CHECK  (EM=Z,ZZZ,ZZ9.99)
  TO #SCR-DATA.THIRTHEEN-CHECK
/*
COMPRESS ANNUITANTS.MM-1 ANNUITANTS.DD-1 ANNUITANTS.YYYY-1
  INTO #SCR-DATA.PAID-UP-DATE WITH DELIMITER '/'
/*
IF ANNUITANTS.YYYY = #TODAY.#YYYY-A
  #DEPOSIT := ANNUITANTS.PRINCIPAL
ELSE
  #DEPOSIT := 0
END-IF
MOVE EDITED #DEPOSIT (EM=Z,ZZZ,ZZ9.99) TO #SCR-DATA.DEPOSIT
/*
MOVE EDITED ANNUITANTS.ANNUAL-PAYMENT (EM=Z,ZZZ,ZZ9.99)
  TO #SCR-DATA.ANNUAL-PAYMENT
/*
MOVE EDITED ANNUITANTS.RESERVE-AMOUNT (EM=Z,ZZZ,ZZ9.99)
  TO #SCR-DATA.RESERVE
/*
IF ANNUITANTS.SETTLEMENT-OPTION = #INTEREST-ONLY
  #SCR-DATA.TAXABLE := #SCR-DATA.MONTHLY-PENSION
ELSE
  MOVE EDITED ANNUITANTS.TAXABLE  (EM=Z,ZZZ,ZZ9.99)
    TO #SCR-DATA.TAXABLE
END-IF
/*

MOVE EDITED #TOTAL-POL-WD (EM=Z,ZZZ,ZZ9.99) TO #SCR-DATA.TOTAL-WD
MOVE EDITED #LAST-POL-WD (EM=NZZZZ,ZZ9.99) TO #SCR-DATA.WITHDRAWAL
/*
MOVE EDITED #RESIDUAL (EM=Z,ZZZ,ZZ9.99) TO #SCR-DATA.RESIDUAL
*
MOVE EDITED #GROSS-TAXABLE (EM=Z,ZZZ,ZZ9.99) TO #SCR-DATA.TOTAL-PAID
*
END-SUBROUTINE
*
DEFINE DATA-VALIDATION
/*     ---------------
RESET #MSG #ERRORS
FOR J 1 TO #CV-NUM
  IF #CV-A ( J ) MODIFIED
    #CV-SAVE ( J ) := #CV-A ( J )
  END-IF
END-FOR
#CV-A (*) := #CV-SAVE (*)
*
DECIDE FOR EVERY CONDITION
  WHEN #CONTROL-VARS-SETTLEMENT-OPTION MODIFIED
    #POS := POS (#SCR-DATA.SETTLEMENT-OPTION)
    IF #SCR-DATA.SETTLEMENT-OPTION EQ #VALID-TYPES (*)
      IF CONTACT-V.CONTACT-TYPE EQ 'O'
          AND #SCR-DATA.SETTLEMENT-OPTION NE 'IO'
        #ERRORS := TRUE
        #ERROR-NBR := 10
        #MSG  := #MSG-LIST ( #ERROR-NBR )
      ELSE
        ANNUITANTS.SETTLEMENT-OPTION := #SCR-DATA.SETTLEMENT-OPTION
      END-IF
    ELSE
      #ERRORS := TRUE
      #ERROR-NBR := 1
      #MSG  := #MSG-LIST ( #ERROR-NBR )
    END-IF
    IF #SCR-DATA.SETTLEMENT-OPTION NE 'IO'
        AND #TOTAL-POL-WD > 0
      #ERRORS := TRUE
      #ERROR-NBR := 13
      #MSG  := #MSG-LIST ( #ERROR-NBR )
    END-IF
    IF #ERRORS
      ESCAPE ROUTINE
    END-IF
  WHEN #CONTROL-VARS-ANNUITANT-STATUS MODIFIED
    IF #SCR-DATA.ANNUITANT-STATUS EQ #VALID-STATUS (*)
      ANNUITANTS.ANNUITANT-STATUS := #SCR-DATA.ANNUITANT-STATUS
    ELSE
      #POS := POS (#SCR-DATA.ANNUITANT-STATUS)
      #ERRORS := TRUE
      #ERROR-NBR := 2
      #MSG  := #MSG-LIST ( #ERROR-NBR )
      ESCAPE ROUTINE
    END-IF
  WHEN #CONTROL-VARS-START-DATE MODIFIED
    IF #SCR-DATA.START-DATE EQ MASK(MM'/'DD'/'YYYY)
      ANNUITANTS.YYYY := SUBSTR(#SCR-DATA.START-DATE,7,4)
      ANNUITANTS.MM := SUBSTR(#SCR-DATA.START-DATE,1,2)
      ANNUITANTS.DD := SUBSTR(#SCR-DATA.START-DATE,4,2)
    ELSE
      #POS := POS (#SCR-DATA.START-DATE)
      #ERRORS := TRUE
      #ERROR-NBR := 3
      #MSG  := #MSG-LIST ( #ERROR-NBR )
      ESCAPE ROUTINE
    END-IF
  WHEN #CONTROL-VARS-PRINCIPAL MODIFIED
    #NV := #SCR-DATA.PRINCIPAL
    PERFORM REMOVE-COMMAS
    IF #ERRORS
      #POS := POS (#SCR-DATA.PRINCIPAL)
      ESCAPE ROUTINE
    ELSE
      ANNUITANTS.PRINCIPAL := W
    END-IF
  WHEN #CONTROL-VARS-THIRTHEEN-CHECK MODIFIED
    #NV := #SCR-DATA.THIRTHEEN-CHECK
    PERFORM REMOVE-COMMAS
    IF NOT #ERRORS
      ANNUITANTS.T13TH-CHECK := W
    ELSE
      #POS := POS (#SCR-DATA.THIRTHEEN-CHECK)
      ESCAPE ROUTINE
    END-IF
  WHEN #CONTROL-VARS-RESIDUAL MODIFIED
    #NV := #SCR-DATA.RESIDUAL
    PERFORM REMOVE-COMMAS
    IF #ERRORS
      #POS := POS (#SCR-DATA.RESIDUAL)
      ESCAPE ROUTINE
    ELSE
      #SCR-DATA.RESIDUAL := W
    END-IF
  WHEN #CONTROL-VARS-MONTHLY-PENSION MODIFIED
    #NV := #SCR-DATA.MONTHLY-PENSION
    PERFORM REMOVE-COMMAS
    IF NOT #ERRORS
      IF ANNUITANTS.ONE-MM = #TODAY.#MM
        ANNUITANTS.ONE-MONTH-PENSION := W
        ANNUITANTS.ONE-MP-DATE := *DATN
      ELSE
        ANNUITANTS.MONTHLY-PENSION := W
      END-IF
    ELSE
      #POS := POS (#SCR-DATA.MONTHLY-PENSION)
      ESCAPE ROUTINE
    END-IF
  WHEN #CONTROL-VARS-ANNUAL-PAYMENT MODIFIED
    #POS := POS (#SCR-DATA.ANNUAL-PAYMENT)
    #NV := #SCR-DATA.ANNUAL-PAYMENT
    PERFORM REMOVE-COMMAS
    IF NOT #ERRORS
      ANNUITANTS.ANNUAL-PAYMENT := W
    ELSE
      #POS := POS (#SCR-DATA.ANNUAL-PAYMENT)
      ESCAPE ROUTINE
    END-IF

  WHEN #CONTROL-VARS-INI-INTEREST MODIFIED
    #NV := #SCR-DATA.InitialInterest
    PERFORM REMOVE-COMMAS
    IF NOT #ERRORS
      ANNUITANTS.INITIAL-INTEREST := W
    ELSE
      #POS := POS (#SCR-DATA.InitialInterest)
      ESCAPE ROUTINE
    END-IF

  WHEN #CONTROL-VARS-RESERVE-AMOUNT MODIFIED
    #NV := #SCR-DATA.RESERVE
    PERFORM REMOVE-COMMAS
    IF NOT #ERRORS
      ANNUITANTS.RESERVE-AMOUNT := W
    ELSE
      #POS := POS (#SCR-DATA.RESERVE)
      ESCAPE ROUTINE
    END-IF
  WHEN #CONTROL-VARS-INITIAL-PAYMENT MODIFIED
    #NV := #SCR-DATA.INITIAL-PAYMENT
    PERFORM REMOVE-COMMAS
    IF NOT #ERRORS
      ANNUITANTS.INITIAL-PAYMENT := W
    ELSE
      #POS := POS (#SCR-DATA.INITIAL-PAYMENT)
      ESCAPE ROUTINE
    END-IF

/*  WHEN #CONTROL-VARS-TOTAL-PAID MODIFIED

/*  WHEN #CONTROL-VARS-RESIDUAL MODIFIED

  WHEN #CONTROL-VARS-PAID-UP-DATE MODIFIED
    IF #SCR-DATA.PAID-UP-DATE EQ MASK(MM'/'DD'/'YYYY)
      ANNUITANTS.YYYY-1 := SUBSTR(#SCR-DATA.PAID-UP-DATE,7,4)
      ANNUITANTS.MM-1 := SUBSTR(#SCR-DATA.PAID-UP-DATE,1,2)
      ANNUITANTS.DD-1 := SUBSTR(#SCR-DATA.PAID-UP-DATE,4,2)
      IF ANNUITANTS.YYYY-1 NE #TODAY.#YYYY-A
        RESET ANNUITANTS.RESERVE-AMOUNT
          ANNUITANTS.T13TH-CHECK
      END-IF
    ELSE
      #POS := POS (#SCR-DATA.PAID-UP-DATE)
      #ERRORS := TRUE
      #ERROR-NBR := 3
      #MSG  := #MSG-LIST ( #ERROR-NBR )
      ESCAPE ROUTINE
    END-IF
  WHEN #CONTROL-VARS-DEPOSIT MODIFIED
    #NV := #SCR-DATA.DEPOSIT
    PERFORM REMOVE-COMMAS
    IF NOT #ERRORS
      ANNUITANTS.DEPOSIT := W
    ELSE
      #POS := POS (#SCR-DATA.DEPOSIT)
      ESCAPE ROUTINE
    END-IF
  WHEN #CONTROL-VARS-TAXABLE MODIFIED
    #NV := #SCR-DATA.TAXABLE
    PERFORM REMOVE-COMMAS
    IF NOT #ERRORS
      ANNUITANTS.TAXABLE := W
    ELSE
      #POS := POS (#SCR-DATA.TAXABLE)
      ESCAPE ROUTINE
    END-IF
  WHEN NONE IGNORE
END-DECIDE
/*
/*   Remove withdrawals from detail screen
/* 
IF #SCR-DATA.NEW-WD NE BLANK
  PERFORM CHECK-WITHDRAWALS
/* For IO annuities calculate Monthly Payment and Tax Amount based on Reserve
  IF ANNUITANTS.RESERVE-AMOUNT > 0
      AND ANNUITANTS.WITHDRAWALS > 0
    RESET ANNUITANTS.TAXABLE ANNUITANTS.MONTHLY-PENSION
      ANNUITANTS.ONE-MONTH-PENSION
      ANNUITANTS.ONE-MP-DATE
    CALLNAT 'MANNBPA'
      ANNUITANTS.REFERENCE-CN
      ANNUITANTS.POLICY-NUMBER
      ANNUITANTS.SETTLEMENT-OPTION
      ANNUITANTS.RESERVE-AMOUNT
      GENDER-CD
      #AGE
      ANNUITANTS.MONTHLY-PENSION
      ANNUITANTS.TAXABLE
      #MSG
    ANNUITANTS.ONE-MONTH-PENSION := ANNUITANTS.MONTHLY-PENSION
    ANNUITANTS.ONE-MP-DATE := *DATN
  END-IF
END-IF
*
/* Annuity life and interest only  <'L1','L2','L3','LA','IO'>
*
IF ANNUITANTS.SETTLEMENT-OPTION = #BPCALC(*)
  IF #CONTROL-VARS-SETTLEMENT-OPTION MODIFIED
      OR #CONTROL-VARS-PRINCIPAL MODIFIED
*      OR ANNUITANTS.MONTHLY-PENSION = 0       /* NG99
    IF ANNUITANTS.RESERVE-AMOUNT <= 0
      ANNUITANTS.RESERVE-AMOUNT := ANNUITANTS.PRINCIPAL
    END-IF
    IF ANNUITANTS.RESERVE-AMOUNT > 0
      RESET ANNUITANTS.TAXABLE ANNUITANTS.MONTHLY-PENSION
      CALLNAT 'MANNBPA'
        ANNUITANTS.REFERENCE-CN
        ANNUITANTS.POLICY-NUMBER
        ANNUITANTS.SETTLEMENT-OPTION
        ANNUITANTS.RESERVE-AMOUNT
        GENDER-CD
        #AGE
        ANNUITANTS.MONTHLY-PENSION
        ANNUITANTS.TAXABLE
        #MSG
    END-IF
  END-IF
END-IF

IF ANNUITANTS.ANNUITANT-STATUS = 'A' 
    AND ANNUITANTS.MONTHLY-PENSION = 0
  IF ANNUITANTS.RESERVE-AMOUNT > 0
    RESET ANNUITANTS.TAXABLE ANNUITANTS.MONTHLY-PENSION
    CALLNAT 'MANNBPA'
      ANNUITANTS.REFERENCE-CN
      ANNUITANTS.POLICY-NUMBER
      ANNUITANTS.SETTLEMENT-OPTION
      ANNUITANTS.RESERVE-AMOUNT
      GENDER-CD
      #AGE
      ANNUITANTS.MONTHLY-PENSION
      ANNUITANTS.TAXABLE
      #MSG
  END-IF
END-IF

END-SUBROUTINE
*
DEFINE BROWSE-HISTORY
/*     --------------
#CGA-SCR-ID := CONTACT-V.CONTACT-ID
FETCH RETURN 'MANPHIST'
END-SUBROUTINE
/*
DEFINE FIELD-HISTORY
/*     --------------
L := *CURS-LINE
J := *CURS-COL
IF L = 19 AND J > 35
  IF #SCR-DATA.SETTLEMENT-OPTION NE #INTEREST-ONLY
    #POS := POS (#SCR-DATA.NEW-WD)
    #ERROR-NBR := 5
    #ERRORS := TRUE
    #MSG  := #MSG-LIST ( #ERROR-NBR )
    RESET #SCR-DATA.NEW-WD
  ELSE
    #CGA-SCR-ID := CONTACT-V.CONTACT-ID
    #CGA-POLICY-NUMBER := AU-V.POLICY-NUMBER
    FETCH RETURN 'MANPHSTF'
  END-IF
ELSE
  IF L = 14 AND J < 30
    #CGA-SCR-ID := CONTACT-V.CONTACT-ID
    #CGA-MF-SCR-PARM-2 := 'MONTH'
    FETCH RETURN 'MANPHSTM'
  END-IF
END-IF
END-SUBROUTINE
/*
DEFINE REMOVE-COMMAS
/*     -------------
RESET L
FOR J 1 TO 12
  IF #NV-A (J) = BLANK OR= ','
    ESCAPE TOP
  END-IF
  ADD 1 TO L
  #NV-A (L) := #NV-A (J)
  IF J > L
    RESET #NV-A (J)
  END-IF
END-FOR
IF #NV IS (N7.2)
  W := VAL ( #NV )
ELSE
  #ERRORS := TRUE
  #ERROR-NBR := 4
  #MSG  := #MSG-LIST ( #ERROR-NBR )
END-IF
IF W < 0
  #ERRORS := TRUE
  #ERROR-NBR := 12
  #MSG  := #MSG-LIST ( #ERROR-NBR )
END-IF
END-SUBROUTINE
/*
DEFINE DELETE-ANNU-RECORD
/*     ------------------
SET WINDOW 'Confirm-Delete'
#CONFIRM-WITHDRAWAL := 'N'
INPUT WINDOW='Confirm-Delete' USING MAP 'MANMDEL'
IF #CONFIRM-DELETE = 'Y'
  GET AU-V #CGA-ISN
  DELETE
  END TRANSACTION
END-IF
SET WINDOW OFF
#CGA-SCR-ID := CONTACT-V.CONTACT-ID
FETCH 'MANPDTL'
END-SUBROUTINE
/*
DEFINE CHECK-WITHDRAWALS
/*     -----------------
IF #SCR-DATA.SETTLEMENT-OPTION NE #INTEREST-ONLY
  #POS := POS (#SCR-DATA.NEW-WD)
  #ERROR-NBR := 5
  #ERRORS := TRUE
  #MSG  := #MSG-LIST ( #ERROR-NBR )
  RESET #SCR-DATA.NEW-WD
  ESCAPE ROUTINE
END-IF
/*
#NV := #SCR-DATA.NEW-WD
PERFORM REMOVE-COMMAS
IF NOT #ERRORS AND W > 0
  ANNUITANTS.WITHDRAWALS :=  W
ELSE
  #POS := POS (#SCR-DATA.NEW-WD)
  RESET #SCR-DATA.NEW-WD
  ESCAPE ROUTINE
END-IF
IF #RESIDUAL < ANNUITANTS.WITHDRAWALS
  #POS := POS (#SCR-DATA.NEW-WD)
  #ERROR-NBR := 9
  #ERRORS := TRUE
  #MSG  := #MSG-LIST ( #ERROR-NBR )
  RESET  #SCR-DATA.NEW-WD
  #NV := #SCR-DATA.WITHDRAWAL
  PERFORM REMOVE-COMMAS
  ANNUITANTS.WITHDRAWALS := VAL ( #NV )
  ESCAPE ROUTINE
END-IF
/*
IF #RESIDUAL < 10000
    AND ANNUITANTS.WITHDRAWALS > 0
*       IF #CGA-CLERK EQ #VALID-CODES (*)
  #POS := POS (#SCR-DATA.NEW-WD)
  #ERRORS := FALSE
  #ERROR-NBR := 8 /* WARNING MSG
  #MSG  := #MSG-LIST ( #ERROR-NBR )
*       ELSE
*         #POS := POS (#SCR-DATA.NEW-WD)
*         #ERROR-NBR := 6
*         #ERRORS := TRUE
*         #MSG  := #MSG-LIST ( #ERROR-NBR )
*         RESET #SCR-DATA.NEW-WD
*         ESCAPE ROUTINE
*       END-IF
END-IF
/*
IF #SCR-DATA.NUMBER-WD-N >= 2
    AND ANNUITANTS.WITHDRAWALS > 0
  IF #CGA-CLERK EQ #VALID-CODES (*)
    #POS := POS (#SCR-DATA.NEW-WD)
    #ERRORS := FALSE
    #ERROR-NBR := 7
    #MSG  := #MSG-LIST ( #ERROR-NBR )
  ELSE
    #POS := POS (#SCR-DATA.NEW-WD)
    #ERROR-NBR := 6
    #ERRORS := TRUE
    #MSG  := #MSG-LIST ( #ERROR-NBR )
    RESET  #SCR-DATA.NEW-WD
    #NV := #SCR-DATA.WITHDRAWAL
    PERFORM REMOVE-COMMAS
    ANNUITANTS.WITHDRAWALS := VAL ( #NV )
    ESCAPE ROUTINE
  END-IF
END-IF
/*
SET WINDOW 'Confirm-Withdrawal'
#CONFIRM-WITHDRAWAL := 'N'
INPUT WINDOW='Confirm-Withdrawal' USING MAP 'MANMCONF'
SET WINDOW OFF
IF #CONFIRM-WITHDRAWAL = 'N'
  RESET  #SCR-DATA.NEW-WD
  #NV := #SCR-DATA.WITHDRAWAL
  PERFORM REMOVE-COMMAS
  ANNUITANTS.WITHDRAWALS := VAL ( #NV )
END-IF
END-SUBROUTINE
END
