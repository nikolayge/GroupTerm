* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
** PROGRAM-ID     ZFIXACTP
** REMARKS-MEMBER ACTIVE-DUTY-PAY-YTD UPDATE
**         PROGRAM CALLED BY ATHP05P0
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* PAM  03112005 PM1  Reset display fields for GRANKSXX                 *
************************************************************************
DEFINE DATA
* GLOBAL USING ATHG05P0
LOCAL  USING GCAPSLXX
LOCAL
1 ST-V VIEW OF A-STATUS
 2 ID-NUMBER
 2 SSN
 2 PROCESS-IND
 2 INTRO-FLAG
 2 DATE-OF-DEATH
 2 DATE-RETIRED
 2 RANK
 2 CHIEF-OF-STAFF-IND
 2 MILITARY-STATUS
 2 MILITARY-SERVICE
 2 SOC-SEC-ST-DATE
 2 ACTIVE-DUTY-PAY-YTD
 2 ACTIVE-DUTY-BASE-DATE
 2 BASE-PAY-EF-DATE
 2 NUMBER-MEMBERSHIPS
 2 WHT-WAGE (2)
 2 WHT-YEAR (2)
*
1 MIL-PAY-VIEW VIEW OF A-MILITARY-PAY
 2 EFF-DATE
 2 PAYS-BY-RANK  (30)
  3 PAY  (15)
*
1 #OLD-AMT     (P5)
1 #CNT-2     (N5)
1 #CNT-3     (N5)
1 #REAL-PAY              (P7)
1 #SU-AMT         (P5)
1 #HOLD-PAY              (P7)
1 #WORK-MM               (N2)
*
1 #EFF-DATE      (N8)
1 #WORK-BASD             (N8)
1 REDEFINE  #WORK-BASD
  2 #WB-YYYY             (N4)
  2 #WB-MM               (N2)
  2 #WB-DD               (N2)
*
1 #WORK-PEBD             (N8)
1 REDEFINE  #WORK-PEBD
 2 #WP-YYYY             (N4)
 2 #WP-MM               (N2)
 2 #WP-DD               (N2)
*
1 #WYYYYMMDD-LOW
 2 #WYYYY-LOW   (N4)
 2 #WMM-LOW     (N2)
 2 #WDD-LOW     (N2)
1 REDEFINE #WYYYYMMDD-LOW
 2 #WYYYYMMDD-LOW-N (N8)
*
1 #WYYYYMMDD-HIGH
 2 #WYYYY-HIGH  (N4)
 2 #WMM-HIGH    (N2)
 2 #WDD-HIGH    (N2)
1 REDEFINE #WYYYYMMDD-HIGH
 2 #WYYYYMMDD-HIGH-N (N8)
1 REDEFINE #WYYYYMMDD-HIGH
 2 #DATE-DIFF        (N8)
*
1 DATE-GOOD             (A1)
*
*** FIELDS FOR 'GRANKSXX'
1 #DUMMY-COMMAND        (A2) INIT<'XX'>
1 #INVALID              (L)
1 #RANK-DISPL           (P2)
1 #RANK-LIT             (A23)
1 #RANK-DISPLAY         (A5)
***
1 #I1                   (I2)
1 #PTE-IDX              (I2)
1 #YOP-IDX              (I2)
*
1 YR-INDEX      (I2)
*
1 YEAR-RANGE    (15)
  2 RANGE-YYYY  (N4)
    INIT (1) <0002>
    (2)      <0003>
    (3)      <0004>
    (4)      <0006>
    (5)      <0008>
    (6)      <0010>
    (7)      <0012>
    (8)      <0014>
    (9)      <0016>
    (10)     <0018>
    (11)     <0020>
    (12)     <0022>
    (13)     <0024>
    (14)     <0026>
    (15)     <9999>
  2 YEAR-COLUMN (N2)
    INIT (1) <01>
    (2)      <02>
    (3)      <03>
    (4)      <04>
    (5)      <05>
    (6)      <06>
    (7)      <07>
    (8)      <08>
    (9)      <09>
    (10)     <10>
    (11)     <11>
    (12)     <12>
    (13)     <13>
    (14)     <14>
    (15)     <15>
END-DEFINE
*
FORMAT (2) LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
          'Reset SU 2004 Wages'
                      5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (3) LS=133 PS=76
WRITE  (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
          'Old Members still flagged as Active'
                      5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
READ ST-V BY MEMBER-KEY FROM '038225'
*
IF   (ST-V.DATE-OF-DEATH GT 0)                   /* DEAD
 OR  (ST-V.PROCESS-IND = 'I' OR = 'D' OR = 'O' OR = 'C')
 OR  (ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G')
 OR  (ST-V.MILITARY-SERVICE = 'AR' OR = 'FR'     /* GUARD/RESV
                                OR = 'MR' OR = 'NR'
                                OR = 'AG' OR = 'FG')
 OR ((ST-V.ACTIVE-DUTY-BASE-DATE = 0)            /* BASD AND PEBD
      AND (ST-V.BASE-PAY-EF-DATE = 0))               /* MISSING
  ESCAPE TOP
END-IF
*
IF   (ST-V.MILITARY-STATUS = 'R' OR = 'C')    /* NOT ACTIVE
 AND (ST-V.CHIEF-OF-STAFF-IND NE 'X') /* NOT RECALLED TO ACT DUTY
  ESCAPE TOP
END-IF
*
IF   ((ACTIVE-DUTY-BASE-DATE NE 0)
 AND  (ACTIVE-DUTY-BASE-DATE LT 19750101))
 OR ((BASE-PAY-EF-DATE NE 0)
  AND (BASE-PAY-EF-DATE LT 19750101))
  AND (NUMBER-MEMBERSHIPS NE 0)
  ADD 1 TO #CNT-3
  DISPLAY (3) #CNT-3 'CN' ST-V.ID-NUMBER
END-IF
*
IF SOC-SEC-ST-DATE NE 0
  ESCAPE TOP
END-IF
*
MOVE ST-V.ACTIVE-DUTY-BASE-DATE TO #WORK-BASD
MOVE ST-V.BASE-PAY-EF-DATE      TO #WORK-PEBD
*
IF #WORK-BASD = 0
  MOVE #WORK-PEBD TO #WORK-BASD
END-IF
*
IF #WORK-PEBD = 0
  MOVE #WORK-BASD TO #WORK-PEBD
END-IF
*
IF #WB-DD NE 01
  MOVE 01 TO #WB-DD
  ADD 01 TO #WB-MM
  IF #WB-MM GT 12
    MOVE 01 TO #WB-MM
    ADD 01 TO #WB-YYYY
  END-IF
END-IF
*
IF #WP-DD NE 01
  MOVE 01 TO #WP-DD
  ADD 01 TO #WP-MM
  IF #WP-MM GT 12
    MOVE 01 TO #WP-MM
    ADD 01 TO #WP-YYYY
  END-IF
END-IF
*
* IF  (STATUS-VIEW.RANK = '2LT')                /* PROMOTE 2LT TO 1LT
* AND (#C-LAST-MON-YYYYMMDD GE (#WORK-BASD + 20000)) /* IF PAST BASD 2ND
*   MOVE #C-LAST-MON-YYYYMMDD TO STATUS-VIEW.DATE-OF-RANK /* ANNIVERSAR
*   MOVE '1LT' TO STATUS-VIEW.RANK
* END-IF
*
MOVE 0 TO #WORK-MM
*
* IF #WP-YYYY = #C-LAST-MON-YYYY
IF #WP-YYYY GT 2004
  WRITE ST-V.ID-NUMBER 'ytd pay not calced' #WP-YYYY
  ESCAPE TOP
END-IF
*
IF #WP-YYYY = 2004
*  IF #WP-MM GT #C-LAST-MON-MM
*    ESCAPE TOP
*  ELSE
*    SUBTRACT #WP-MM FROM #C-LAST-MON-MM GIVING #WORK-MM
    SUBTRACT #WP-MM FROM 12 GIVING #WORK-MM
    ADD 1 TO #WORK-MM
*  END-IF
ELSE
*  MOVE #C-LAST-MON-MM TO #WORK-MM
  MOVE 12 TO #WORK-MM
END-IF
*
RESET #RANK-DISPL #RANK-LIT #RANK-DISPLAY                         /* PM1
CALLNAT 'GRANKSXX' #DUMMY-COMMAND ST-V.RANK
       ST-V.MILITARY-SERVICE #INVALID
       #RANK-DISPL #RANK-LIT #RANK-DISPLAY
*
IF #INVALID OR #RANK-DISPL = 99
  ESCAPE ROUTINE
END-IF
*
MOVE #RANK-DISPL TO #PTE-IDX
*
IF #EFF-DATE = 0
  FOR #I1 1 TO #NUM-FED-MAX-ENTRIES
*   IF #FED-MAX-YR (#I1) LT #C-RUN-DT-YYYYMMDD
    IF #FED-MAX-YR (#I1) LT 20040701
      MOVE #FED-MAX-YR (#I1) TO #EFF-DATE
      FIND (1)  MIL-PAY-VIEW WITH EFF-DATE = #EFF-DATE
        MOVE #FED-MAX-AMT (#I1) TO #EFF-DATE    /* SAVE FED-CAP HERE
      END-FIND
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-IF
*
PERFORM S4200-SET-YEARS-INDEX
*
IF DATE-GOOD = 'N'
  ESCAPE ROUTINE
END-IF
*
MOVE ST-V.ACTIVE-DUTY-PAY-YTD TO #HOLD-PAY
*
IF MIL-PAY-VIEW.PAY (#PTE-IDX, #YOP-IDX) GT #EFF-DATE /* EFF-DATE IS MAX
  COMPUTE ROUNDED #REAL-PAY = #EFF-DATE / 10
ELSE
  COMPUTE ROUNDED #REAL-PAY = MIL-PAY-VIEW.PAY(#PTE-IDX, #YOP-IDX) / 10
END-IF
ADD #REAL-PAY TO #HOLD-PAY
*
WRITE ST-V.ID-NUMBER
    'basd=' ACTIVE-DUTY-BASE-DATE 'pebd=' BASE-PAY-EF-DATE
     'file act-pay=' ST-V.ACTIVE-DUTY-PAY-YTD
      'rank=' ST-V.RANK 'displ=' #RANK-DISPL
      'calced act-pay=' #REAL-PAY 'mons =' #WORK-MM
*
IF ST-V.ACTIVE-DUTY-PAY-YTD = 0
  MULTIPLY #HOLD-PAY BY #WORK-MM
END-IF
*
IF #HOLD-PAY GT 99999
  MOVE 99999 TO #HOLD-PAY
END-IF
*
MOVE #HOLD-PAY TO ST-V.ACTIVE-DUTY-PAY-YTD
*
IF ST-V.ACTIVE-DUTY-PAY-YTD GT 87900
  MOVE 87900 TO #SU-AMT
ELSE
 MOVE ST-V.ACTIVE-DUTY-PAY-YTD TO #SU-AMT
END-IF
WRITE 'new SU act duty-pay=' ST-V.ACTIVE-DUTY-PAY-YTD
      'SU amt =' #SU-AMT
*
IF WHT-YEAR (2) NE 2004
  WRITE (2) ST-V.ID-NUMBER 'not 2004 it is' WHT-YEAR (2)
ELSE
  ADD 1 TO #CNT-2
  DISPLAY (2) #CNT-2 ST-V.ID-NUMBER
    'Old/Amt'  WHT-WAGE (2)
    'New/Amt'  #SU-AMT
    'Mons'     #WORK-MM
    'MIL/SERV' MILITARY-SERVICE
         RANK
         SSN
    'BASD'  ACTIVE-DUTY-BASE-DATE
    'PEBD'  BASE-PAY-EF-DATE
*
  MOVE #SU-AMT TO WHT-WAGE (2)
END-IF
*
END-READ
*
*****************************************************************
*      4 2 0 0 - S E T - Y E A R S - I N D E X                  *
*****************************************************************
DEFINE SUBROUTINE S4200-SET-YEARS-INDEX
*
MOVE ' '    TO DATE-GOOD
*
MOVE #WORK-PEBD           TO #WYYYYMMDD-LOW-N
* MOVE #C-LAST-MON-YYYYMMDD TO #WYYYYMMDD-HIGH-N
MOVE 20050701 TO #WYYYYMMDD-HIGH-N
PERFORM CALC-DATE-DIFF
*
FOR YR-INDEX +1 TO +15
  IF #WYYYY-HIGH LT RANGE-YYYY (YR-INDEX)
    MOVE YEAR-COLUMN (YR-INDEX) TO #YOP-IDX
    MOVE 'Y' TO DATE-GOOD
    ESCAPE ROUTINE
  END-IF
END-FOR
*
**    AT END
WRITE (1) *PROGRAM 5X 'BAD-DATE-TABLE'
MOVE 'N' TO DATE-GOOD
*
END-SUBROUTINE  /* (0311)
*****************************************************************
DEFINE SUBROUTINE CALC-DATE-DIFF
*****************************************************************
*
IF #WDD-LOW GT #WDD-HIGH
  SUBTRACT 1 FROM #WMM-HIGH
  ADD      1 TO   #WDD-HIGH
  IF #WMM-HIGH = 02
    ADD 28 TO #WDD-HIGH
  ELSE
    IF #WMM-HIGH = 04 OR = 06 OR = 09 OR = 11
      ADD 30 TO #WDD-HIGH
    ELSE
      ADD 31 TO #WDD-HIGH
    END-IF
  END-IF
END-IF
*
IF #WMM-LOW GT #WMM-HIGH
  SUBTRACT 1 FROM #WYYYY-HIGH
  ADD 12 TO #WMM-HIGH
END-IF
*
SUBTRACT #WYYYYMMDD-LOW-N FROM #WYYYYMMDD-HIGH-N
*
END-SUBROUTINE /* (0334)
*
END
