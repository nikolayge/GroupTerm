* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 2
* <Natural Source Header
* PROGRAM-ID: ATHPEXCP - CRITICAL ERRORS & EXCEPTIONS
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE      TAG     REASON                                      *
* DRW    09282004  DW1     add CREDIT CARD processing                  *
* DRW    03052005  DW2     add AL (Annuity Life) Processing            *
* DRW    03312005  DW3     add alp/aip amt to gawt file                *
* DRW    05062005  DW4     search for apl's which need mode chg        *
* DRW    07212005  DW5     search for TRADE UP Note to do TOT-FACE test*
* DRW    07272005  DW6     Stats for pd-to-date day                    *
* DRW    11072005  DW7 ADD DUES-PAID REPORT                            *
* DRW    11142005  DW8 Add Process-date to Linkage                     *
* SAG    12012005  RH1  SS - Replaced HEX constant '05' with HEX '09' ASCII
* DRW    01132006  DW9 Nu Rider checking                               *
* DRW    02252006  DW10 FTP file of BADJ gtr tham Modal-prem           *
* DRW    05102006  DW12 nx to khb to indicate files ftp'd              *
* DRW    08152006  DW13 add test for DB/CR for BIG BADF File           *
* DRW    08292006  DW14 show SO policies in exception report           *
* DRW    09062006  DW15 Add Paid-to Date to Big-Badj extract file      *
* DRW    11062006  DW16 show RT's with DB/CR                           *
* DRW    11172006  DW17 Show Neg ACV and dropping CSV                  *
* DRW    11282006  DW18 Select Notes to display                        *
* DRW    01102007  DW19 Show #mons left before overloan on CSV dropping*
* DRW    01242007  DW20 Check for 12 months drop on CSV dropping       *
* DRW    06282007  DW21 NX RLB as well as KHB                          *
* DRW    07162007  DW22 Check for DB/CR ne 0 as well as FPF & BADJ on EZ-PA check
* DRW    09272007  DW23 Add Excp for 'Has a loan on an inactive policy'*
* YAK    12052007  YK1  Remove hardcording for interest rates          *
*                       (Read GEN-TABLE through OBJNGENT)              *
* DRW    01282008  DW24 Create Exceptions Tab File                     *
* YAK    02052008  YK2  Change code to use FUNCTION-INT-RATE           *
*                         to get rate from GEN-TABLE                   *
* DRW  03/31/2008  DW25 Check for Zero SSN and pay-status PP mode G    *
* DRW  06/12/2008  DW26 Check Duration & Month-Ind                     *
* DRW  10/30/2008  DW27 Check Debit-Credit-Amt for AT Pending          *
* PAM  11/13/2008  PM28 Do not include EZPay Start guys                *
* DRW  12/3/2008   DW29 Show EIL/AIL/AIP WAITING on EXCP list          *
* DRW  12/8/2008   DW30 Add Entry for CAP pol with less than 107.25 AIP*
*                       and other EXCP.DTL changes                     *
* DRW 02/27/2009   DW31 Remove 'HAS xx AUTO Loan Pmt of ...' from excp *
*                       file                                           *
* PAM 03/04/2009   PM32 Removed EZPay prenote process                  *
* DRW 03/09/2009   DW33 Increase Notes occurance from 60 to 500        *
* PAM 03/17/2009   PM34 Replaced RLB with CEB                          *
* PAM 05/04/2009   PM35 Added UNDL to Big Badj Report                  *
* PAM 05/29/2009   PM36 Added UNDL term refund report                  *
* PAM 03/08/2010   PM37 Added exception for less than $5 cc loans      *
* PAM 05/14/2010   PM38 Added ABA error exceptions                     *
* YAK 10/09/2012   YK3  Use function to identify Level Term II plans
* TMT 10/16/2014   TT3  Annuity Life Harmonization
************************************************************************
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING CONTPDA1
LOCAL
*
* 1 #CURR-VAR-INT-RATE (P2.3) INIT <8.10>    /* YK1
1 #CURR-VAR-INT-RATE (P2.3)                  /* YK1
1 #1-YR-AGO-CSV   (N7.2)                     /* DW20
1 #1-YR-AGO-DB    (N7.2)
1 #1-MON-DROP   (L)
1 #1-YR-DROP    (L)
1 #1-MON-CSV-DROP (N7.2)
1 #TOT-P-I        (N7.2)
1 #STAT           (A4)                       /* DW20
*
1 #EXCEPTIONS       (A100)           /* DW24
1 #EXCP             (A75)
1 #PRIOR-YE        (N6)                      /* DW20
1 REDEFINE #PRIOR-YE
  2 #PRIOR-YE-YYYY  (N4)
  2 #PRIOR-YE-MM    (N2)
*
1 #1-MON-INT (N5.7)
1 #MONTHLY-INT  (N5.2)
1 #MON-CV-DROP  (N5.2)
1 #NUM-MONS-LEFT  (N7)
1 #CSV-AVAILABLE (N7.2)
1 #TOT-ALP       (N5.2)
1 #NOTE-TEXT  (A60/10) /* DW12
1 #TO-INIT    (A3)
1 #YOUNGEST-DEP-AGE   (N4)  /* DW9
1 #FBR-LTR-SENT       (L)
1 #PROCESS-DATE (N6)  /* DW7
1 #OO-2004  (P5)
1 #SEG-X    (I2)     /* DW7
1 #SVC-FEE  (N3.2)
1 #DUES-TM    (L)
1 #OO-DATE   (N8)
1 #PD-TO-DT  (N8/9)       /* DW6
1 #MODE-ASQ-DAYS (P5/31)  /* DW6
1 #TU         (L)    /* DW5
1 #MODAL-PREM (N7.2)
1 #P-I        (N7.2)
1 #SUFFIX     (A3)
1 REDEFINE #SUFFIX
  2 #SUFFIX-2   (A2)
  2 #SUFFIX-X   (N1)
1 #AS-OF-DT   (N8)
1 #LOAN-BAL   (N7.2/9)
1 #LOAN-BAL-2 (N7.2/9)
1 #ACC-INT    (N7.2/9)
1 #ACC-INT-2  (N7.2/9)
1 #CSV        (N7.2/9)
1 #CVALUE     (N7.2/9)
1 #LVALUE     (N7.2/9)
1 #MCSV       (N7.2/9)
1 #DB         (N7.2/9)
1 #ANN-PREMIUM (N7.2/9)
1 #FACE-AMT    (N7.2/9)
1 #TPP         (N7.2/9)
1 #CSV-P      (P7.2/9)
*
1 #UNDL        (A4)        /* PM35
1 #AMT         (P7.2)      /* DW3
1 #FIX-GTR-8   (P5)
1 #NON-A-F-ALOT  (P5)
1 #GAWT-W-ALOT  (A60)
1 #BIG-CR-BADJ (A60)       /* DW10
1 #EZPAY-FILE (A60)        /* DW11
1 #CSV-DROP-FILE (A120)    /* DW20
1 #LINKED-CN    (A1)
1 #TAB       (A1) INIT <H'09'>
1 #AMT-7  (A7)
1 #AMT-9  (A9)
1 #AMT-10  (A10)
1 #AMT-11  (A11)
1 #TOT-BADJ    (N5.2)
1 #TERM     (L/9)
1 #WL       (L/9)
1 #LAST-ISS-DT   (N8)
1 #LAST-X        (I2)
*
1 NT-V VIEW OF A-NOTES
  2 C*NOTE-TABLE                     /* DW33
  2 NOTE-TEXT   (A60/500)            /* Dw33
*
1 FR-V VIEW OF A-FIRS
  2 DEPN-DATE-OF-BIRTH   (14)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER      (N6)
  2 REDEFINE ID-NUMBER
    3 ID-NBR       (A6)
  2 MEMBER-CONTACT-ID                 /* TT1
  2 WIDOW-FLAG          (A1)
  2 LINKED-CN       (1)
  2 MEMBER-FLAG         (A1)
  2 SSN
  2 OTHER-COMPANY-ID
*   2 ADDRESS-CHG-CODE    /* PM35
  2 INTRO-FLAG
  2 PROCESS-IND
  2 RESTRICT-MBR-SW
  2 CAP-ENTRY-DATE
* 2 SEX
* 2 SEX-SP
  2 DUES-BALANCE
  2 DUES-FPF
  2 DEBIT-CREDIT-AMT
  2 X-BILL-ADJUST    (9)
  2 X-FIRST-PLACE-FEE(9)
* 2 TRIGGER-FLAG
* 2 FORMER-HUSBAND-SBP-AMT
* 2 SSN
* 2 VA-CLAIM-NUMBER
* 2 STATUS-CODE         (A1)
* 2 APPL-SOURCE         (A7)
* 2 TELE-NUMBER
* 2 NXT-OF-KIN-TELE-NUMBER
* 2 MEMBERSHIP-DRIVE    (A4)
* 2 REDEFINE MEMBERSHIP-DRIVE
*  3 MB-1              (A1)
*  3 MB-2              (A1)
*  3 MB-3              (A1)
*  3 MB-4              (A1)
* 2 ADDRESS-CHG-CODE    (A1)
* 2 ANNUAL-RPT-FLAG     (A1)
* 2 INTERNET-ADDR
* 2 REDEFINE INTERNET-ADDR
*  3 INTR-ADDR-X     (A1/60)
* 2 INTRO-FLAG          (A1)
* 2 TRIGGER-FLAG        (A2)
* 2 BIRTH-CERT-CODE
* 2 MARRIAGE-CERT-CODE
* 2 BIRTH-CERT-CODE-SP
* 2 DEATH-CERT-CODE
* 2 CHIEF-OF-STAFF-IND  (A1)
  2 PAD-CODE            (A1)
  2 PAD-ABA-NBR                     /* PM38
  2 CC-NUM
  2 CC-EXP-DT
* 2 DATE-BOOK           (A1)
* 2 RANK                (A3)
* 2 SSN                 (P9)
* 2 SSBP-PCT
* 2 O-E-DATE
* 2 MBR-SS
* 2 SOC-SEC-PIA
* 2 SERVICE-DATE-1405   (N8)
* 2 BASE-PAY-EF-DATE    (N8)
* 2 ACTIVE-DUTY-BASE-DATE (N8)
  2 MILITARY-SERVICE    (A3)
  2 MILITARY-STATUS
* 2 RETIRED-PAY-AMT
* 2 SS-BENEFIT-STATUS
* 2 VA-DISABILITY-PCT
* 2 VA-DISABLE-DATE
* 2 DISABILITY-PCT      (N1.2)
* 2 DATE-RETIRED        (N8)
* 2 REDEFINE DATE-RETIRED
*   3 DR-YYYY    (N4)
*   3 DR-MM      (N2)
*   3 DR-DD      (N2)
* 2 NEWSLETTER-CODE
* 2 PROXY
* 2 ANNUAL-RPT-FLAG
  2 NAME         (A25)
* 2 REDEFINE NAME
*  3 NAME-1      (A1/25)
* 2 HANDLE-FLAG  (A1)
* 2 ADDRESS-CHG-CODE
* 2 S-ADDRESS-CODE (A1)
* 2 S-ADDRESS-1  (A25)
* 2 S-ADDRESS-2  (A25)
* 2 S-ADDRESS-3  (A25)
* 2 ADDRESS-1    (A25)
* 2 ADDRESS-2    (A25)
* 2 ADDRESS-3    (A25)
* 2 S-ZIP-CODE   (N9)
*   2 ZIP-CODE     (N9)
* 2 REDEFINE ZIP-CODE
*  3 ZIP-CODE-5  (N5)
*  3 ZIP-CODE-4  (N4)
* 2 NAME-SP
* 2 DATE-OF-BIRTH-SP
* 2 REDEFINE DATE-OF-BIRTH-SP
*  3 DOB-SP-YYYY (N4)
*  3 DOB-SP-MMDD (N4)
* 2 BIRTH-CERT-CODE     (A1)
* 2 BIRTH-CERT-CODE-SP  (A1)
* 2 MARRIAGE-CERT-CODE  (A1)
  2 ALOT-AMT
* 2 STOP-DATE
* 2 DTS-DATN
* 2 DATE-OTHER-UPDATE
* 2 DATE-ACCT-UPDATE
* 2 REDEFINE DATE-ACCT-UPDATE
*  3 DAU-YYYYMM         (N6)
*  3 DAU-DD             (N2)
  2 X-ALT-LP-IND           (9)
  2 X-ALT-LP-AMT           (9)
  2 X-ALT-LP-IND-2         (9)
  2 X-ALT-LP-AMT-2         (9)
  2 X-LOAN-AMOUNT         (P5.2/9)
  2 X-LOAN-AMOUNT-2       (P7.2/9)
  2 X-LOAN-DATE-2         (N8/9)
  2 EZPAY-START           (9)                       /* PM28
* 2 REDEFINE LOAN-DATE-2
*  3 LOAN-DATE-2-YYYY     (N4)
*  3 LOAN-DATE-2-MM       (N2)
*  3 LOAN-DATE-2-DD       (N2)
* 2 OLD-LOAN-AMT        (P5.2)
  2 X-LOAN-DATE           (N8/9)
* 2 REDEFINE LOAN-DATE
*  3 LOAN-DATE-YYYY     (N4)
*  3 LOAN-DATE-MM       (N2)
*  3 LOAN-DATE-DD       (N2)
  2 X-INTEREST-RATE      (N2.3/9)
  2 X-ACCUM-INTEREST     (9)
  2 X-ACCUM-INTEREST-2   (9)
* 2 STATUS-CODE-SP       (A1)
* 2 FORMER-SPOUSE-STATUS (A1)
* 2 FORMER-SPOUSE-NAME   (A25)
* 2 DATE-OF-DIVORCE      (N8)
* 2 DATE-OF-DIVORCE  (N8)
* 2 FORMER-SPOUSE-DATE-OF-DIVORCE  (N8)
* 2 DATE-OF-MARRIAGE (N8)
* 2 FORMER-SPOUSE-DATE-OF-MARRIAGE (N8)
* 2 MIL-SBP-OPT         (A1)
* 2 MIL-SBP-AMT         (P5)
* 2 RETIRED-PAY-AMT     (P5)
*   2 DATE-OF-BIRTH-SP    (N8)
*   2 DATE-OF-BIRTH       (N8)
* 2 REDEFINE DATE-OF-BIRTH
*  3 DOB-YYYY          (N4)
*  3 DOB-MMDD          (N4)
* 2 DATE-OF-DEATH       (N8)
* 2 REDEFINE DATE-OF-DEATH
*  3 DOD-YYYY          (N4)
*  3 DOD-MM            (N2)
*  3 DOD-DD            (N2)
* 2 DUES-BALANCE
* 2 DUES-FPF
  2 NUMBER-MEMBERSHIPS
  2 MTD-ACV-PREM-ADJ (9)
  2 MTD-ACV-INT-ADJ (9)
  2 MTD-ACV-COI-ADJ (9)
* 2 COST-BASIS     (9)
* 2 ORIG-COST-BASIS     (9)
  2 DATE-ENTERED    (9)
  2 REDEFINE DATE-ENTERED
    3 DAT-ENT-OCC    (9)
      4 DATE-ENTERED-YYYYMM (N6)
      4 DATE-ENTERED-DD     (N2)
  2 BILL-TO-DATE      (N8/9)
  2 PAID-TO-DATE      (N8/9)
  2 REDEFINE PAID-TO-DATE
    3 PD-TO-DT-OCC    (9)
      4 PD-TO-DT-YYYYMM (N6)
      4 REDEFINE PD-TO-DT-YYYYMM
        5 PD-TO-DT-YYYY  (N4)
        5 PD-TO-DT-MM    (N2)
      4 PD-TO-DT-DD     (N2)
  2 SPLIT-IND         (9)
  2 ISSUE-DATE          (N8/9)
  2 REDEFINE ISSUE-DATE
    3 ISSUE-DATE-OCC     (9)
      4 ID-YYYYMM  (N6)
      4 ID-DD      (N2)
  2 PAID-UP-DATE        (9)
  2 REDEFINE PAID-UP-DATE
    3 PD-UP-DT-OCC    (9)
      4 PD-UP-DT-YYYYMM (N6)
      4 REDEFINE PD-UP-DT-YYYYMM
        5 PD-UP-DT-YYYY  (N4)
        5 PD-UP-DT-MM    (N2)
      4 PD-UP-DT-DD     (N2)
  2 PAY-STATUS          (9)
* 2 TOT-PREMIUMS-PAID   (N7.2/9)
  2 PREM-RATING         (9)
  2 SMOKER-FLAG         (9)
  2 ANNUAL-PREM         (9)
  2 ACC-CASH-VALUE      (9)
  2 CASH-VALUE          (9)
  2 NXT-MON-CASH-VALUE  (9)
  2 NUM-MBRSHIPS        (9)
  2 EXPIRY-DAY          (9)
  2 FACE-AMOUNT         (9)
  2 ISSUE-AGE           (9)
* 2 MONTH-ALLOC-AMT     (9)
  2 CONV-DURATION       (9)
  2 LAST-DURATION       (9)
  2 DURATION            (9)
  2 MONTH-IND           (9)
* 2 PREM-DEFICIENCY     (9)
  2 DEATH-BENEFIT       (9)
  2 NXT-MON-DEATH-BENEFIT (9)
  2 MONTH-ALLOC-AMT     (9)
  2 PLAN                (9)
  2 REDEFINE PLAN
    3 PLAN-OCC  (9)
      4 PLAN-A1    (A1)
      4 PLAN-A2    (A2)
  2 STATUS              (9)
  2 MODE                (9)
  2 OWNERSHIP-FLAG      (9)
  2 RID-PLAN            (9)
  2 RID-EFF-DT          (9)
  2 RID-PD-TO           (9)
  2 RID-BALANCE
* 2 FIRS-LOCATION-CODE  (9)
* 2 MTD-ACV-PREM-ADJ    (9)
* 2 LOW-YEAR-IN-TABLE
* 2 WHT-YEAR            (60)
* 2 WHT-WAGE            (60)
* 2 WHT-FLAG            (60)
*
1 ST-SSN-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 OTHER-COMPANY-ID
  2 SSN
  2 PROCESS-IND
*
1 VA-V VIEW OF A-VA-HISTORY    /* DW20
  2 RECORD-KEY      (N15)
  2 REDEFINE RECORD-KEY
    3 ID-NO      (N6)
    3 ISS-DT     (N8)
    3 SPL-IND    (N1)
  2 YEAR-MONTH-M          (13)
  2 ACCUM-CASH-VALUE-M    (13)
  2 CASH-VALUE-M          (13)
  2 DEATH-BENEFIT-M       (13)
*
1 #RECORD-KEY   (N15)
1 REDEFINE #RECORD-KEY
  2 #RK-ID      (N6)
  2 #RK-ISS-DT  (N8)
  2 #RK-SPL-IND (N1)
*
1 AT-SSN-V VIEW OF A-APPL-TRACKING
  2 SSN
  2 INTRO-FLAG
  2 ID-NUMBER
*
1 #COUNTERS
  2 #RECS-READ        (P7)
  2 #RECS-SELECTED    (P7)                   /* vt was p5 20130403
  2 #CNT              (P5)
  2 #CNT-2            (P5)
  2 #CNT-3            (P5)
  2 #CNT-4            (P5)
  2 #CNT-5            (P5)
  2 #CNT-6            (P5)
  2 #CNT-7            (P5)
  2 #CNT-8            (P5)
  2 #CNT-9            (P5)
  2 #CNT-10           (P5)
  2 #CNT-11           (P5)
  2 #CNT-12           (P5)
  2 #CNT-13           (P5)
  2 #CNT-14           (P5)
  2 #CNT-15           (P5)
  2 #CNT-16           (P5)
  2 #CNT-17           (P5)
  2 #I1               (I2)
  2 #I2               (I2)
  2 #I3               (I2)
  2 #APL-DUE          (L)
  2 #CSV-POLS         (N3)
  2 #POLS             (N3)
  2 #ALL-POLS         (N3)
*
1 #MSG             (A40)
1 #FUTURE-DATED    (L)
1 #COI-ADJ         (N3.2/9)
1 #NXT-X           (I2)    /* index of nxt pol to adj
1 #NXT-PRM-ADJ     (P1.2)
1 #OO-EFF-DATE     (N8)
1 #DEGF-EFF-DATE     (N8)
*
1 #TOT-FACE         (P7.2)
1 #TOT-MON-PREM     (P6.2)
1 #HAS-MODE-E       (L)
1 #HAS-MODE-G       (L)
1 #HAS-MODE-ASQ     (L)
1 #INVALID          (L)
1 #ERR-MSG          (A60)
1 #RANK-DISPL       (P2)
1 #MBR-RANK-DISPL   (P2)
1 #RANK-LIT         (A23)
1 #RANK-DISPLAY     (A5)
1 #COMMAND          (A2) INIT <'BA'>
1 #FOUND-COMBO-ST   (L)
1 #FOUND-COMBO-AT   (L)
*
1 #MONS           (P5)
1 #MOD-PRM        (N7.2)
1 #AVL-CV     (N7.2)
*
1 #RUN-DATE    (N8)
1 REDEFINE #RUN-DATE
  2 #RUN-DATE-YYYYMM (N6)
  2 REDEFINE #RUN-DATE-YYYYMM
    3 #RUN-DATE-YYYY   (N4)
    3 #RUN-DATE-MM     (N2)
  2 #RUN-DATE-DD     (N2)
*
1 #RUN-DT-1-MO (N6)
1 #RUN-DT-3-MO (N6)
*
1 #CURR-DATE   (N8)
1 REDEFINE #CURR-DATE
  2 #CURR-YYYYMM  (N6)
  2 REDEFINE #CURR-YYYYMM
    3 #CURR-YYYY  (N4)
    3 #CURR-MM    (N2)
  2 #CURR-DD    (N2)
*
1 #YYYYMMDD    (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY   (N4)
    3 #MM     (N2)
  2 #DD     (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYYMMDD-A   (A8)
*
1 #TODAY-YYYYMMDD      (N8)   /* DW26
1 REDEFINE #TODAY-YYYYMMDD
  2 #TODAY-YYYYMM  (N6)
  2 REDEFINE #TODAY-YYYYMM
    3 #TODAY-YYYY    (N4)
    3 #TODAY-MM      (N2)
  2 #TODAY-DD      (N2)
*
1 #ISS-DT-YYYYMMDD      (N8)   /* DW26
1 REDEFINE #ISS-DT-YYYYMMDD
  2 #ISS-DT-YYYYMM  (N6)
  2 REDEFINE #ISS-DT-YYYYMM
    3 #ISS-DT-YYYY    (N4)
    3 #ISS-DT-MM      (N2)
  2 #ISS-DT-DD      (N2)
*
1 #CAP-LOAN      (L)
1 #CAP-LOANS     (P5)
1 #FIXED-LOANS   (P5/2)   /* 1=before 6/21/1988 2= all else
1 #VAR-LOANS     (P5/2)   /* 1=before 6/21/1988 2= all else
1 #MBRS-W-LOANS  (P5)
1 #NUM-LOANS     (P5)
1 #1-LN-1-POL    (P5)
1 #2-LN-1-POL    (P5)
1 #1-LN-MULT-POL (P5)
1 #2-LN-MULT-POL (P5)
1 #TOT-FIXED-LOANS  (P7)
1 #TOT-VAR-LOANS  (P7)
*
1 #INPUT-RECORD           (A6)   /* PM36
1 #UNDL-FILE              (A60)  /* PM36
1 #NUM-UNDL               (P5)   /* PM36
1 #UNDL-TERM-REFUND-TABLE (2000) /* PM36
  2 #UNDL-CN               (A6)   /* PM36
  2 REDEFINE #UNDL-CN             /* PM36
    3 #UNDL-CN-N            (N6)   /* PM36
1 #UNDL-IDX               (I4)   /* PM36
1 #UNDL-FOUND             (L)    /* PM36
*
1 #WORK-ABA-NUM           (A9)   /* PM38
1 REDEFINE #WORK-ABA-NUM         /* PM38
  2 #ABA-NUM-1             (A1)   /* PM38
  2 #ABA-NUM-REST          (A8)   /* PM38
*
1 #DATE-OF-BIRTH          (N8.0)   /* TT1
1 #DATE-OF-BIRTH-SP       (N8.0)   /* TT1
1 #SPOUSE-SEX             (A1)     /* TT1
END-DEFINE
*
*******************************************************************
FORMAT  LS=133 PS=76
WRITE   TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'EXCEPTIONS                    '
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (2) LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Exceptions for Kathie/Rick to Check'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (3) LS=133 PS=76
WRITE  (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Opted Out Policies'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (4) LS=133 PS=76
WRITE  (4) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'ACCUM INTEREST with no loan'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (5) LS=133 PS=76
WRITE  (5) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Has Alotment going but has a GAWT'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (6) LS=133 PS=76
WRITE  (6) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Pad-Code Pending which will postpone EZ-Pay start'       /* PM32
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (7) LS=133 PS=76
WRITE  (7) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Pad-Code Pending ready for EZ-Pay start'                 /* PM32
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (8) LS=133 PS=76
WRITE  (8) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'LT members who have gone past age to lower death benefit'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (9) LS=133 PS=76
WRITE  (9) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Mixed MODE "G" and "A/S/Q" or "E" or mismatched BADJ'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (10) LS=133 PS=76
WRITE  (10) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Delq Policy but has neg DB/CR'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (11) LS=133 PS=76
WRITE  (11) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Dues Paying Policies'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (12) LS=133 PS=76
WRITE  (12) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Rider Policies'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (13) LS=133 PS=76
WRITE  (13) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'DE/GF Policies'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (14) LS=133 PS=76
WRITE  (14) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Mismatched Process-Ind / Intro-Flag and Other-company'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (15) LS=133 PS=76
WRITE  (15) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Members with missing SSN'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (16) LS=133 PS=76
WRITE  (16) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Pad-Code P/D/L/V/X/Z EZ-Pay soon-to be"s'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (17) LS=133 PS=76
WRITE  (17) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Cash Value Dropping'
  5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
COMPRESS 'CN'
  #TAB 'ALOT-AMT'
  #TAB 'PAY-STAT'
  #TAB 'Mon-Prem'
  #TAB 'Linked'
  INTO #GAWT-W-ALOT LEAVING NO
WRITE WORK 1 #GAWT-W-ALOT
*
COMPRESS 'CN'        /* DW10
  #TAB 'ISS-DATE'
  #TAB 'PD-TO-Date'    /* DW15
  #TAB 'BADJ'
  #TAB 'Modal-prem'
  #TAB 'MODE'
  #TAB 'PLAN'
  #TAB 'DB-CR'
  #TAB 'UNDL ADD'      /* PM35
  INTO #BIG-CR-BADJ LEAVING NO
WRITE WORK 2 #BIG-CR-BADJ
*
COMPRESS 'CN'        /* DW11
  #TAB 'ISS-DATE'
  #TAB 'FPF'
  #TAB 'BADJ'
  #TAB 'Modal-prem'
  #TAB 'MODE'
  #TAB 'PLAN'
  #TAB 'DB-CR'
  INTO #EZPAY-FILE LEAVING NO
WRITE WORK 3 #EZPAY-FILE
*
COMPRESS 'CN'        /* DW20
  #TAB 'ISS-DT'
  #TAB 'PLN'
  #TAB 'MOD'
  #TAB 'PAY-STAT'
  #TAB 'ISS-AG'
  #TAB 'Avl-CSV'
  #TAB 'MON-CSV-DROP'
  #TAB 'NUM-MONS-LEFT'
  #TAB 'Tot-Prin-Int'
  #TAB 'Mon-Int'
  #TAB 'Tot-Alp'
  INTO #CSV-DROP-FILE LEAVING NO
WRITE WORK 4 #CSV-DROP-FILE
*
COMPRESS 'CN'        /* DW24
  #TAB 'Exception'
  INTO #EXCEPTIONS LEAVING NO
WRITE WORK 5 #EXCEPTIONS
*
#UNDL-FILE := 'Term Refunds in BADJ/DBCR that are no longer Undeliverable' /* PM36
WRITE WORK 7 #UNDL-FILE          /* PM36
RESET #UNDL-FILE                 /* PM36
*
COMPRESS 'CN'                    /* PM36
  #TAB 'ISS-DATE'                /* PM36
  #TAB 'BADJ'                    /* PM36
  #TAB 'DB-CR'                   /* PM36
  INTO #UNDL-FILE LEAVING NO /* PM36
WRITE WORK 7 #UNDL-FILE          /* PM36
RESET #UNDL-FILE                 /* PM36
*
* PERFORM LOAD-UNDL-TMRF-TABLE     /* PM36
*
MOVE *DATN TO #CURR-DATE
MOVE *DATN TO #RUN-DATE
ADD 1 TO #RUN-DATE-MM
IF #RUN-DATE-MM GT 12
  MOVE 1 TO #RUN-DATE-MM
  ADD 1 TO #RUN-DATE-YYYY
END-IF
MOVE 1 TO #RUN-DATE-DD
*
MOVE #RUN-DATE TO #YYYYMMDD
SUBTRACT 3 FROM #MM
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
*
MOVE #YYYYMM TO #RUN-DT-3-MO
*
MOVE #RUN-DATE TO #YYYYMMDD
SUBTRACT 1 FROM #MM
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
*
MOVE #YYYYMM TO #RUN-DT-1-MO
*
MOVE *DATN TO #YYYYMMDD     /* DW20
SUBTRACT 1 FROM #MM
SUBTRACT 1 FROM #YYYY
*
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
*
MOVE #YYYYMM TO #PRIOR-YE
WRITE 'Prior-Ye date for CSV drop test =' #PRIOR-YE   /* DW20
*
#CURR-VAR-INT-RATE := FUNCTION-INT-RATE(<'RATE5AB'>)  /* YK2
*
* read ST-V BY NAME-KEY
READ ST-V BY MEMBER-KEY FROM '001900'   /* 001900
* READ ST-V PHYSICAL
  ADD 1 TO #RECS-READ
*
* write 'just read' st-v.id-number
*  if #recs-read gt 100
*    escape bottom
*  end-if
*
  IF   (ALOT-AMT NE 0)               /* DW25
      AND (SSN = 0)                       /* This causes ALOT mismatches
    COMPRESS '## Alot Amt Not = Zero with no SSN - will cause ALOT out of Balance'
      INTO #EXCP
    COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
    WRITE WORK 5 #EXCEPTIONS
    WRITE (2) ST-V.ID-NUMBER #EXCP
  END-IF
*
  FOR #I1 1 TO 9   /* To include Terminated Pols      /* DW23
    IF  (STATUS (#I1) = 'D')                /* DW26
*    AND (NOT PLAN (#I1) = 'LT' OR = 'RT' OR = 'SO')          /* DW26   YK3
*    AND (NOT ((PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z')))   /* YK3
        AND (NOT PLAN (#I1) = 'SO')
        AND (NOT FUNCTION-TERM-POLICY(<PLAN(#I1)>))                     /* YK3
        AND (DATE-ENTERED-YYYYMM (#I1) NE #CURR-YYYYMM)
      MOVE ISSUE-DATE (#I1) TO #ISS-DT-YYYYMMDD
      MOVE *DATN            TO #TODAY-YYYYMMDD
*
      IF #ISS-DT-MM GT #TODAY-MM
        SUBTRACT 1 FROM #TODAY-YYYY /* to Get correct Last-Duration
        ADD 12 TO #TODAY-MM
      END-IF
*
      SUBTRACT #ISS-DT-YYYYMM FROM #TODAY-YYYYMM
*
      IF   LAST-DURATION (#I1) NE #TODAY-YYYY
        WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'BAD Last Duration'
          LAST-DURATION (#I1) #TODAY-YYYY 'date-ent=' DATE-ENTERED (#I1)
        COMPRESS '## Bad Last Duration' LAST-DURATION (#I1) #TODAY-YYYY
          INTO #EXCP
        COMPRESS ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1) #TAB #EXCP
          INTO #EXCEPTIONS
        WRITE WORK 5 #EXCEPTIONS
        WRITE (2) ST-V.ID-NUMBER #EXCP
      END-IF
*
      ADD 1 TO #TODAY-YYYY  /* Duration is always 1 more than Last Duration
      IF   DURATION (#I1) NE #TODAY-YYYY
        WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'BAD V/A Duration'
          DURATION (#I1) #TODAY-YYYY 'date-ent=' DATE-ENTERED (#I1)
        COMPRESS '## Bad V/A Duration' DURATION (#I1) #TODAY-YYYY  INTO #EXCP
        COMPRESS ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1) #TAB #EXCP
          INTO #EXCEPTIONS
        WRITE WORK 5 #EXCEPTIONS
        WRITE (2) ST-V.ID-NUMBER #EXCP
      END-IF
*
      IF MONTH-IND (#I1) NE #TODAY-MM
        WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'BAD Month-IND'
          MONTH-IND (#I1) #TODAY-MM 'date-ent=' DATE-ENTERED (#I1)
        COMPRESS '## Bad Month-Ind' MONTH-IND (#I1) #TODAY-MM  INTO #EXCP
        COMPRESS ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1) #TAB #EXCP
          INTO #EXCEPTIONS
        WRITE WORK 5 #EXCEPTIONS
        WRITE (2) ST-V.ID-NUMBER #EXCP
      END-IF
    END-IF                              /* END DW26
*
    IF  IS-ANNUITY-LIFE(<PLAN(#I1)>)  /* DW2   /* TT3
      WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1)'is an AL (Annuity Life) Pol'
        'Status=' STATUS (#I1)
    END-IF
*
    IF X-ALT-LP-IND (#I1) = 'L' OR = 'E' OR = '9'   /* AIL policy    DW29
      COMPRESS '## Has Fixed Auto Loan Pmt of' X-ALT-LP-AMT (#I1)
        'with Code of' X-ALT-LP-IND (#I1)   INTO #EXCP
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
*      WRITE WORK 5 #EXCEPTIONS                    /* DW31
      WRITE (2) ST-V.ID-NUMBER #EXCP
    ELSE
      IF   (CONV-DURATION (#I1) = 999)   /* CAP policy          /* DW30
          AND (X-ALT-LP-AMT (#I1) GT 0)
          AND (X-ALT-LP-AMT (#I1) LT 100.00)
          AND (X-LOAN-AMOUNT (#I1) GT 1000)
          AND (ISSUE-DATE (#I1) GT (*DATN - 10000))  /* within 2 years
        COMPRESS '## New Cap loan with less than 100.00 Pmt' X-ALT-LP-AMT (#I1)
          'with Code of' X-ALT-LP-IND (#I1)   INTO #EXCP
        COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
        WRITE WORK 5 #EXCEPTIONS
        WRITE (2) ST-V.ID-NUMBER #EXCP
      END-IF
    END-IF
*
    IF X-ALT-LP-IND-2 (#I1) = 'L' OR = 'E' OR = '9'   /* AIL policy    DW29
      COMPRESS '## Has Variable Auto Loan of' X-ALT-LP-AMT-2 (#I1)
        'with Code of' X-ALT-LP-IND-2 (#I1)   INTO #EXCP
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
*     WRITE WORK 5 #EXCEPTIONS                   /* DW31
      WRITE (2) ST-V.ID-NUMBER #EXCP
    END-IF
*
    IF   (STATUS (#I1) NE 'D')       /* DW23
        AND   ((X-LOAN-AMOUNT   (#I1) NE 0)
        OR  (X-LOAN-AMOUNT-2 (#I1) NE 0))
      COMPRESS '## Loan exists on an Inactive policy'           /* DW24
        X-LOAN-AMOUNT (#I1) X-LOAN-AMOUNT-2 (#I1) INTO #EXCP
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
      WRITE WORK 5 #EXCEPTIONS
      WRITE (2) ST-V.ID-NUMBER #EXCP
    END-IF
  END-FOR
*

  IF (ST-V.ID-NUMBER LE 1900)
*  OR (ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G')
*  OR (ST-V.DOB-SP-MMDD LT 0924)
*  OR (ST-V.DOB-SP-MMDD GT 0929)
      OR (ST-V.WIDOW-FLAG = 'Y')        /* MBR ALREADY DEAD
      OR (ST-V.NUMBER-MEMBERSHIPS = 0)       /* MBR INACTIVE
      OR (ST-V.PROCESS-IND = 'C')             /* contact entities
*  OR (ST-V.ZIP-CODE = 0)   /* NO FOREIGN SPS APPS (CAN'T SEPARATE)
*  OR (ST-V.ADDRESS-CHG-CODE = 'U' OR = 'V')  /* UNDELIVERABLE
*  OR ((ST-V.LAST-DURATION (1) = 0)  /* MBR IS A 1ST YEAR MEMBER
*      AND (ST-V.ISSUE-DATE (1) GT *DATN - 10000)) /* WITHIN 1 YEAR
    ESCAPE TOP
  END-IF
*
  IF ST-V.SSN = 0
    ADD 1 TO #CNT-15
    DISPLAY (15) #CNT-15 ST-V.ID-NUMBER ST-V.NAME
      'Proc/Ind' ST-V.PROCESS-IND 'Int/Flag' ST-V.INTRO-FLAG
  END-IF
*
  RESET #TU                       /* DW5
  FIND NT-V WITH ID-NUMBER = ST-V.ID-NUMBER    /* DW5
    FOR #I1 1 TO C*NOTE-TABLE                              /* DW33
      IF NOTE-TEXT (#I1) = MASK (.....................'IS A TRADE-UP')
        MOVE TRUE TO #TU                       /* DW5
*       ESCAPE BOTTOM
      END-IF
*
*     IF NOTE-TEXT(#I1) = MASK ('EXPENSE COST HAS BEEN ADJUSTED') /*DW18
*       WRITE ST-V.ID-NUMBER 'COI ADJ-PR-IND=' PROCESS-IND INTRO-FLAG
*     END-IF
    END-FOR
  END-FIND
*
  ADD 1 TO #RECS-SELECTED
*
  MOVE ST-V.FACE-AMOUNT (*) TO #FACE-AMT (*)
  MOVE *DATN TO #AS-OF-DT
  RESET  #SUFFIX
  CALLNAT 'CVALUSXX'
    ST-V.ID-NUMBER
    #SUFFIX
    #AS-OF-DT
    #LOAN-BAL   (1:9)
    #LOAN-BAL-2 (1:9)
    #ACC-INT    (1:9)
    #ACC-INT-2  (1:9)
    #CSV        (1:9)
    #CVALUE     (1:9)
    #LVALUE     (1:9)
    #MCSV       (1:9)
    #DB         (1:9)
    #ANN-PREMIUM  (1:9)
    #FACE-AMT   (1:9)
    #TPP        (1:9)
*
  IF   (ALOT-AMT GT 0)
*  AND (NOT MILITARY-SERVICE = 'A' OR = 'F' OR = ' ')
      AND (NOT MILITARY-SERVICE = 'A' OR = 'F')
*   WRITE ST-V.ID-NUMBER MILITARY-STATUS MILITARY-SERVICE
*        'NON army/airf alot'
    ADD 1 TO #NON-A-F-ALOT
  END-IF
*
  IF DUES-BALANCE GT 100
    COMPRESS '## Dues balance =' DUES-BALANCE INTO #EXCP    /* DW24
    COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
    WRITE WORK 5 #EXCEPTIONS
    WRITE (2) ST-V.ID-NUMBER #EXCP
  END-IF
*
  IF DUES-FPF GT 36
    COMPRESS '## Dues FPF =' DUES-FPF INTO #EXCP            /* DW24
    COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
    WRITE WORK 5 #EXCEPTIONS
    WRITE (2) ST-V.ID-NUMBER #EXCP
  END-IF
*
  IF NOT ST-V.PAD-CODE = ' ' OR = 'R' OR = 'S'                          /* PM38
      AND ST-V.PAD-ABA-NBR NE ' '                                          /* PM38
    #WORK-ABA-NUM    := ST-V.PAD-ABA-NBR                                /* PM38
    IF NOT #ABA-NUM-1 = '0' OR = '1' OR = '2' OR = '3'                  /* PM38
      COMPRESS '## Invalid ABA Number = ' #WORK-ABA-NUM INTO #EXCP      /* PM38
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS               /* PM38
      WRITE WORK 5 #EXCEPTIONS                                          /* PM38
      WRITE (2) ST-V.ID-NUMBER #EXCP                                    /* PM38
    END-IF                                                              /* PM38
  END-IF                                                                /* PM38
*
  IF MILITARY-SERVICE = 'EMP'
    WRITE ST-V.ID-NUMBER 'EMPLOYEE' NAME PLAN (1) FACE-AMOUNT (1)
  END-IF
*
  IF PROCESS-IND = 'D'   /* DE/GF member
    ADD 1 TO #CNT-13
    DISPLAY (13) #CNT-13 ST-V.ID-NUMBER 'Trade/Up' #TU
      'DB/CR' DEBIT-CREDIT-AMT
*
    FOR #I1 1 TO 9
      IF STATUS (#I1) = 'D'
        WRITE (13) '     ' #I1 ISSUE-DATE (#I1) PLAN (#I1) MODE (#I1)
      END-IF
    END-FOR
  END-IF
*
  IF PROCESS-IND = 'O'   /* opted-out member
    MOVE *DATN TO #YYYYMMDD         /* DW8
    MOVE #YYYYMM TO #PROCESS-DATE
    ADD 1 TO #CNT-3
*
    CALLNAT 'GOPTOSXX'
      ST-V.ID-NUMBER
      #PROCESS-DATE
      STATUS          (1:9)
      PAY-STATUS      (1:9)
      ISSUE-DATE      (1:9)
      MONTH-ALLOC-AMT (1:9)
      FACE-AMOUNT     (1:9)
      NUM-MBRSHIPS    (1:9)
      EXPIRY-DAY      (1:9)
      #COI-ADJ        (1:9)
      #NXT-X
      #NXT-PRM-ADJ
      #OO-EFF-DATE
      #DEGF-EFF-DATE
*
    IF #OO-EFF-DATE = 0
      WRITE ST-V.ID-NUMBER 'bad note - no OPT-OUT EFF DATE'
    END-IF
*
    DISPLAY (3) #CNT-3 ST-V.ID-NUMBER
      'O-O/DATE' #OO-EFF-DATE
      'DB/CR' DEBIT-CREDIT-AMT
*
    IF   (#OO-EFF-DATE GE 20051001)
        AND  (#OO-EFF-DATE LT 20051231)
      WRITE (3) '   Opted Out Between 10/1/2005 & 12/31/2005'
      ADD 1 TO #OO-2004
    END-IF
*
    FOR #I1 1 TO 9
      IF STATUS (#I1) = 'D'
        WRITE (3) '     ' #I1 ISSUE-DATE (#I1) PLAN (#I1) MODE (#I1)
      END-IF
    END-FOR
  END-IF
*
  RESET #TOT-BADJ #TOT-MON-PREM #LAST-ISS-DT #LAST-X #TERM (*) #WL (*)
  FOR #I1 1 TO 9
*   IF PLAN (#I1) = 'RT'   /* DW16
*    AND (STATUS (#I1) = 'D')
*    AND (DEBIT-CREDIT-AMT NE 0)
*     WRITE ST-V.ID-NUMBER 'RT policy with DB/CR' DEBIT-CREDIT-AMT
*            MODE (#I1)
*   END-IF
*
*   IF PLAN (#I1) = 'SO'   /* DW14
*    WRITE ST-V.ID-NUMBER 'is a SO (SERVICE-ONLY) Policy'
*    'Status=' STATUS (#I1)
*   END-IF
*
    IF STATUS (#I1) NE 'D'
      ESCAPE TOP
    END-IF
*
    IF X-ALT-LP-IND (#I1) = '8'                            /* CIP policy PM37
        AND #LOAN-BAL (#I1) + #ACC-INT (#I1) LT 5             /* PM37
      #EXCP := '## Has Fixed CIP less than $5'             /* PM37
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS  /* PM37
      WRITE WORK 5 #EXCEPTIONS                             /* PM37
    END-IF
*
    IF X-ALT-LP-IND-2 (#I1) = '8'                          /* CIP policy PM37
        AND #LOAN-BAL-2 (#I1) + #ACC-INT-2 (#I1) LT 5         /* PM37
      #EXCP := '## Has Variable CIP less than $5'          /* PM37
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS  /* PM37
      WRITE WORK 5 #EXCEPTIONS                             /* PM37
    END-IF
*
    IF PAID-TO-DATE (#I1) NE 0  /* DW6
      RESET #YYYYMMDD
      CALLNAT 'GPDTOSXX'
        ST-V.ISSUE-DATE (#I1)
        ST-V.MONTH-ALLOC-AMT (#I1)
        ST-V.PAID-TO-DATE (#I1)
        #YYYYMMDD
      MOVE #YYYYMMDD TO #PD-TO-DT (#I1)
    END-IF
*
*   IF ((PLAN (#I1) = 'RT' OR = 'LT')                      /* DW20   /* YK3
*    OR ((PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z')))         /* YK3
    IF FUNCTION-TERM-POLICY(<PLAN(#I1)>)                             /* YK3
      IGNORE
    ELSE
      IF   (ACC-CASH-VALUE (#I1) LT 0)   /* DW17
          AND (RESTRICT-MBR-SW NE 'Y')
          AND (PLAN (#I1) NE 'SO')
          AND (PAY-STATUS (#I1) NE '45')                 /* DW30
        COMPRESS '## Has Negative ACV' ISSUE-DATE (#I1) PLAN (#I1) 'PAY-STAT=' /* DW24
          PAY-STATUS (#I1) '-' ACC-CASH-VALUE (#I1) INTO #EXCP
        COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
        WRITE WORK 5 #EXCEPTIONS
        WRITE (2) ST-V.ID-NUMBER #EXCP
      END-IF
*
      RESET #1-YR-AGO-CSV #1-MON-DROP #1-YR-DROP       /* DW20
        #1-YR-AGO-DB #1-MON-CSV-DROP
*
      IF   (CASH-VALUE (#I1) LT NXT-MON-CASH-VALUE (#I1))   /* DW17
          AND (ID-YYYYMM  (#I1) LT #RUN-DT-3-MO)
          AND ((MODE (#I1) = 'G' OR = 'E' OR = '0')
          OR  (PAY-STATUS (#I1) GT '40'))                    /* DW20
        COMPUTE #MON-CV-DROP =
          NXT-MON-CASH-VALUE (#I1) - CASH-VALUE (#I1)
        MOVE TRUE TO #1-MON-DROP
      ELSE
        MOVE ST-V.ID-NUMBER   TO #RK-ID             /* DW20
        MOVE ISSUE-DATE (#I1) TO #RK-ISS-DT
        MOVE SPLIT-IND  (#I1) TO #RK-SPL-IND
        READ VA-V BY RECORD-KEY FROM #RECORD-KEY
          IF  (VA-V.ID-NO   NE ST-V.ID-NUMBER)
              OR (VA-V.ISS-DT  NE ST-V.ISSUE-DATE (#I1))
              OR (VA-V.SPL-IND NE ST-V.SPLIT-IND  (#I1))
            WRITE 'V/A not found -ST/VA'
              ST-V.ID-NUMBER ISSUE-DATE (#I1) ST-V.SPLIT-IND (#I1)
              '---' VA-V.ID-NO VA-V.ISS-DT VA-V.SPL-IND
            ESCAPE BOTTOM
          END-IF
*
          IF YEAR-MONTH-M (1) NE #PRIOR-YE
*           WRITE ST-V.ID-NUMBER '13 Mon ago not on V/A History'
            ESCAPE BOTTOM
          END-IF
*
          MOVE CASH-VALUE-M    (1) TO #1-YR-AGO-CSV
          MOVE DEATH-BENEFIT-M (1) TO #1-YR-AGO-DB
          ESCAPE BOTTOM
        END-READ
*
        IF   (#1-YR-AGO-CSV NE 0)                          /* DW20
            AND (CASH-VALUE (#I1) LT #1-YR-AGO-CSV)
            AND (NXT-MON-DEATH-BENEFIT (#I1) GE #1-YR-AGO-DB) /* To catch
*  use last db since it already has TDIv added             /* Splits
          COMPUTE #MON-CV-DROP =
            (#1-YR-AGO-CSV - CASH-VALUE (#I1)) / 12
          MOVE TRUE TO #1-YR-DROP
        END-IF
      END-IF
*
      IF #1-YR-DROP OR #1-MON-DROP
        RESET #MONTHLY-INT #TOT-ALP
        COMPUTE #TOT-P-I = X-LOAN-AMOUNT (#I1) + X-LOAN-AMOUNT-2 (#I1)
          + X-ACCUM-INTEREST (#I1) + X-ACCUM-INTEREST-2 (#I1)
        COMPUTE #CSV-AVAILABLE = CASH-VALUE (#I1)     /* DW19
          - X-LOAN-AMOUNT   (#I1) - X-ACCUM-INTEREST   (#I1)
          - X-LOAN-AMOUNT-2 (#I1) - X-ACCUM-INTEREST-2 (#I1)
        IF X-LOAN-AMOUNT (#I1) NE 0
          ADD X-ALT-LP-AMT   (#I1) TO #TOT-ALP
          COMPUTE ROUNDED #1-MON-INT =
            (X-LOAN-AMOUNT (#I1) * X-INTEREST-RATE (#I1) / 100 / 12)
          ADD #1-MON-INT TO #MONTHLY-INT
        END-IF
*
        IF X-LOAN-AMOUNT-2 (#I1) NE 0
          ADD X-ALT-LP-AMT-2 (#I1) TO #TOT-ALP
          COMPUTE ROUNDED #1-MON-INT =
            (X-LOAN-AMOUNT-2 (#I1) * #CURR-VAR-INT-RATE / 100 / 12)
          ADD #1-MON-INT TO #MONTHLY-INT
        END-IF
        COMPUTE #NUM-MONS-LEFT =
          #CSV-AVAILABLE / (#MONTHLY-INT + #MON-CV-DROP - #TOT-ALP)
*
        CALLNAT 'GPYSTSXX' PAY-STATUS (#I1) #STAT #INVALID #ERR-MSG
*
        ADD 1 TO #CNT-17
        DISPLAY (17) 'cnt/17' #CNT-17  (EM=ZZ9)
          'CN'               ST-V.ID-NUMBER
          'ISSUE/DATE'       ISSUE-DATE(#I1)
          'PLN'              PLAN (#I1)
          'Pa/ST'            #STAT
          'MD'               MODE (#I1)
          'ISS/AGE'          ISSUE-AGE (#I1)
          'FIXED/INT/RATE'   X-INTEREST-RATE (#I1) (EM=ZZ.999)
          'NUM/MONS/LEFT'    #NUM-MONS-LEFT  (EM=ZZZZZ)
          'CSV/AVAIL'        #CSV-AVAILABLE (EM=ZZZZZ.99)
          'Mnthly/INT'       #MONTHLY-INT   (EM=ZZZ.99)
          'Mnthly/CSV/DROP'  #MON-CV-DROP   (EM=ZZZ.99)
          '1-YR/AGO/CSV'     #1-YR-AGO-CSV  (EM=ZZZZZ.99)
          'TOT/ALP/PMT'      #TOT-ALP       (EM=ZZZZ.99)
*
        MOVE EDITED #CSV-AVAILABLE (EM=-ZZZZZZ.99) TO #AMT-11
        MOVE EDITED #TOT-P-I       (EM=-ZZZZZ.99)  TO #AMT-9
        MOVE EDITED #MONTHLY-INT   (EM=-ZZZ.99)    TO #AMT-7
        MOVE EDITED #TOT-ALP       (EM=-ZZ,ZZZ.99) TO #AMT-10
        MOVE LEFT #AMT-11 TO #AMT-11
        MOVE LEFT #AMT-9  TO #AMT-9
        MOVE LEFT #AMT-7  TO #AMT-7
        MOVE LEFT #AMT-10 TO #AMT-10
        COMPRESS ST-V.ID-NUMBER        /* DW20
          #TAB ISSUE-DATE (#I1)
          #TAB PLAN (#I1)
          #TAB MODE (#I1)
          #TAB #STAT
          #TAB ISSUE-AGE (#I1)
          #TAB #AMT-11    /* avl CSV
          #TAB #MON-CV-DROP
          #TAB #NUM-MONS-LEFT
          #TAB #AMT-9     /* fixed + var loan
          #TAB #AMT-7     /* monthly-interest
          #TAB #AMT-10    /* tot-alp
          INTO #CSV-DROP-FILE LEAVING NO
        WRITE WORK 4 #CSV-DROP-FILE            /* DW20
      END-IF
    END-IF
*
    IF MODE (#I1) = 'A' OR = 'S' OR = 'Q'   /* DW6
      MOVE #PD-TO-DT (#I1) TO #YYYYMMDD
      ADD 1 TO #MODE-ASQ-DAYS (#DD)
    END-IF
*
    ADD X-BILL-ADJUST (#I1) TO #TOT-BADJ
*
    IF PAY-STATUS (#I1) LT '40'
      COMPUTE #TOT-MON-PREM = #TOT-MON-PREM + (ANNUAL-PREM (#I1) / 12)
    END-IF
*
*   IF   (PLAN (#I1) = 'LT' OR = 'RT')                         /* YK3
*     OR ((PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z'))   /* YK3
    IF FUNCTION-TERM-POLICY(<PLAN(#I1)>)                       /* YK3
      MOVE TRUE TO #TERM (#I1)
    ELSE
      MOVE TRUE TO #WL (#I1)
    END-IF
*
*   DISPLAY ST-V.ID-NUMBER ISSUE-DATE(#I1) #TERM(#I1) #WL(#I1) #LAST-X
    IF (ISSUE-DATE (#I1) = #LAST-ISS-DT)
        AND (((#TERM (#I1)) AND (#TERM (#LAST-X)))  /* matched term
        OR  ((#WL   (#I1)) AND (#WL   (#LAST-X))))  /* matchxd wl
      WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'Dup Iss dt for TERM or W/L'
        'spl-ind"s=' SPLIT-IND (#I1) SPLIT-IND (#LAST-X)
        PLAN (#I1) PLAN (#LAST-X)
        MODE (#I1) MODE (#LAST-X)
        PAY-STATUS (#I1) PAY-STATUS (#LAST-X)
    END-IF
    MOVE ISSUE-DATE (#I1) TO #LAST-ISS-DT
    MOVE #I1 TO #LAST-X
*
    DECIDE ON FIRST VALUE MODE (#I1)    /* DW4
      VALUE 'A' MOVE ANNUAL-PREM (#I1) TO #MODAL-PREM
      VALUE '1' MOVE ANNUAL-PREM (#I1) TO #MODAL-PREM
      VALUE 'S' COMPUTE #MODAL-PREM = ANNUAL-PREM (#I1) / 2
      VALUE '2' COMPUTE #MODAL-PREM = ANNUAL-PREM (#I1) / 2
      VALUE 'Q' COMPUTE #MODAL-PREM = ANNUAL-PREM (#I1) / 4
      VALUE '4' COMPUTE #MODAL-PREM = ANNUAL-PREM (#I1) / 4
      NONE  COMPUTE #MODAL-PREM = ANNUAL-PREM (#I1) / 12
    END-DECIDE
*
    COMPUTE #P-I =
      #LOAN-BAL(#I1) + #LOAN-BAL-2(#I1) + #ACC-INT(#I1) + #ACC-INT-2(#I1)
*
    IF (PD-TO-DT-YYYYMM (#I1) = #RUN-DT-3-MO)    /* DW4
        AND (ST-V.CONV-DURATION (#I1) NE 999)
        AND ((#P-I + #MODAL-PREM) GT #CSV (#I1))
        AND ((#P-I + (ANNUAL-PREM (#I1) / 12)) LT #CSV (#I1))
        AND (MODE (#I1) = 'A' OR = 'S')
      COMPRESS ST-V.ID-NUMBER     /* DW24
        '## Mode can be chged to cause APL instead of LAPS cur' ISSUE-DATE (#I1)
        'mod' MODE (#I1) INTO #EXCP
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
      WRITE WORK 5 #EXCEPTIONS
      WRITE (2) ST-V.ID-NUMBER #EXCP
    END-IF
*
*    IF ((X-BILL-ADJUST (#I1) LT 0)                             /* DW10 DW99
*             AND ((X-BILL-ADJUST (#I1) * -1) GE #MODAL-PREM))
    IF (X-BILL-ADJUST (#I1) NE 0)                              /* DW99
        OR ((DEBIT-CREDIT-AMT LT 0)                               /* DW13
        AND ((DEBIT-CREDIT-AMT * -1) GE #MODAL-PREM))
      RESET #UNDL                                               /* PM35
      IF F-UNDEL-ADDRESS(<ST-V.MEMBER-CONTACT-ID>)              /* PM35      /* TT1
        #UNDL := 'UNDL'                                         /* PM35
      END-IF                                                    /* PM35
      MOVE EDITED X-BILL-ADJUST (#I1) (EM=-ZZZZZ.99)  TO #AMT-9
      MOVE EDITED #MODAL-PREM         (EM=ZZZZ.99)    TO #AMT-7
      MOVE EDITED DEBIT-CREDIT-AMT    (EM=-ZZ,ZZZ.99) TO #AMT-10
      MOVE LEFT #AMT-9  TO #AMT-9
      MOVE LEFT #AMT-7  TO #AMT-7
      MOVE LEFT #AMT-10 TO #AMT-10
      COMPRESS ST-V.ID-NUMBER        /* DW10
        #TAB ISSUE-DATE (#I1)
        #TAB PAID-TO-DATE (#I1)   /* DW15
        #TAB #AMT-9     /* BADJ
        #TAB #AMT-7     /* Modal-prem
        #TAB MODE (#I1)
        #TAB PLAN (#I1)
        #TAB #AMT-10    /* DB-CR-amt
        #TAB #UNDL                                               /* PM35
        INTO #BIG-CR-BADJ LEAVING NO
      WRITE WORK 2 #BIG-CR-BADJ
    END-IF
*
    IF   (MODE (#I1) = 'E')                                /* DW11
      IF (((X-BILL-ADJUST (#I1) NE 0)
          OR ((X-FIRST-PLACE-FEE (#I1) NE 0)
          AND (DATE-ENTERED-YYYYMM (#I1) GT #RUN-DT-3-MO))) /* PM28
          AND (EZPAY-START (#I1) NE 'Y'))                   /* PM28
          OR  ((DEBIT-CREDIT-AMT NE 0)                        /* DW22
          AND (ID-YYYYMM (#I1) GE #RUN-DT-3-MO))            /* DW22
        MOVE EDITED X-FIRST-PLACE-FEE (#I1) (EM=-ZZZZZ.99)  TO #AMT-11
        MOVE EDITED X-BILL-ADJUST (#I1) (EM=-ZZZZZ.99)  TO #AMT-9
        MOVE EDITED #MODAL-PREM         (EM=ZZZZ.99)    TO #AMT-7
        MOVE EDITED DEBIT-CREDIT-AMT    (EM=-ZZ,ZZZ.99) TO #AMT-10
        MOVE LEFT #AMT-11 TO #AMT-11
        MOVE LEFT #AMT-9  TO #AMT-9
        MOVE LEFT #AMT-7  TO #AMT-7
        MOVE LEFT #AMT-10 TO #AMT-10
        COMPRESS ST-V.ID-NUMBER        /* DW11
          #TAB ISSUE-DATE (#I1)
          #TAB #AMT-11    /* FPF
          #TAB #AMT-9     /* BADJ
          #TAB #AMT-7     /* Modal-prem
          #TAB MODE (#I1)
          #TAB PLAN (#I1)
          #TAB #AMT-10    /* DB-CR-amt
          INTO #EZPAY-FILE LEAVING NO
        WRITE WORK 3 #EZPAY-FILE
      END-IF
    END-IF
*
    IF (X-BILL-ADJUST (#I1)      GT 99999.99)
        OR (X-FIRST-PLACE-FEE (#I1) GT 99999.99)
        OR (X-BILL-ADJUST (#I1)     LT -99999.99)
        OR (X-FIRST-PLACE-FEE (#I1) LT -99999.99)
      WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'Big neg amt' -
        'BADJ' X-BILL-ADJUST (#I1) (EM=-ZZZ,ZZZ.99)
        'FPF' X-FIRST-PLACE-FEE (#I1)  (EM=-ZZZ,ZZZ.99)
    END-IF
  END-FOR
*
  IF   (DEBIT-CREDIT-AMT NE 0)                                      /* DW27
      AND (NUMBER-MEMBERSHIPS = 0)
    WRITE ST-V.ID-NUMBER 'Debit Credit in AT Pending'
    MOVE EDITED DEBIT-CREDIT-AMT    (EM=-ZZ,ZZZ.99) TO #AMT-10
    MOVE LEFT #AMT-10 TO #AMT-10
    COMPRESS ST-V.ID-NUMBER
      #TAB                            /* Was Issue date
      #TAB                            /* Was Paid-to-date
      #TAB                            /* Was BADJ
      #TAB                            /* Was Modal-prem
      #TAB                            /* Was Mode
      #TAB                            /* Was Plan
      #TAB #AMT-10    /* DB-CR-amt
      INTO #BIG-CR-BADJ LEAVING NO
    WRITE WORK 2 #BIG-CR-BADJ
  END-IF                                           /* END DW27
*
  IF  (DEBIT-CREDIT-AMT GT 99999.99)
      OR (DEBIT-CREDIT-AMT LT -99999.99)
    WRITE ST-V.ID-NUMBER 'Big DB/CR -'
      'DB/CR' DEBIT-CREDIT-AMT (EM=ZZZ,ZZZ.99)
  END-IF
*
  IF (DEBIT-CREDIT-AMT LT 0 OR #TOT-BADJ NE 0)                  /* PM36
      AND NOT F-UNDEL-ADDRESS(<ST-V.MEMBER-CONTACT-ID>)            /* PM36      /* TT1
*   PERFORM SEARCH-UNDL-TMRF-TABLE                              /* PM36
    IF #UNDL-FOUND                                              /* PM36
      MOVE EDITED #TOT-BADJ (EM=-ZZZZZ.99)  TO #AMT-9           /* PM36
      MOVE EDITED DEBIT-CREDIT-AMT (EM=-ZZ,ZZZ.99) TO #AMT-10   /* PM36
      MOVE LEFT #AMT-9  TO #AMT-9                               /* PM36
      MOVE LEFT #AMT-10 TO #AMT-10                              /* PM36
      COMPRESS ST-V.ID-NUMBER                                   /* PM36
        #TAB #AMT-9     /* BADJ                                 /* PM36
        #TAB #AMT-10    /* DB-CR-amt                            /* PM36
        INTO #UNDL-FILE LEAVING NO                           /* PM36
      WRITE WORK 7 #UNDL-FILE                                   /* PM36
    END-IF                                                      /* PM36
  END-IF                                                        /* PM36
*
  RESET #LINKED-CN
  IF LINKED-CN (1) NE 0
    MOVE 'Yes' TO #LINKED-CN
  END-IF
*
  IF ST-V.ID-NUMBER LT 600000
    IF PROCESS-IND = 'I' OR = 'D'
      IF NOT INTRO-FLAG = 'O' OR = 'P' OR = 'Q'
          OR = 'S' OR = 'K' OR = 'G'
        ADD 1 TO #CNT-14
        DISPLAY (14) #CNT-14 ST-V.ID-NUMBER INTRO-FLAG
          ST-V.OTHER-COMPANY-ID
      END-IF
    ELSE
      IF PROCESS-IND = 'G'
*       IF ST-V.ID-NUMBER GE 106030   /* pipelined after 7/1/2000
*         WRITE ST-V.ID-NUMBER 'Pipelined after 7/1/2000'
*       END-IF
*
        IF INTRO-FLAG = 'O' OR = 'P' OR = 'Q'
          ADD 1 TO #CNT-14
          DISPLAY (14) #CNT-14 ST-V.ID-NUMBER INTRO-FLAG
            ST-V.OTHER-COMPANY-ID
        END-IF
      ELSE
        IF PROCESS-IND = 'O'   /* Opted Out is sharing services
          IF NOT INTRO-FLAG = 'O' OR = 'P' OR = 'Q'
              OR = 'S' OR = 'K' OR = 'G'
            ADD 1 TO #CNT-14
            DISPLAY (14) #CNT-14 ST-V.ID-NUMBER INTRO-FLAG
              ST-V.OTHER-COMPANY-ID
          END-IF
        ELSE
          ADD 1 TO #CNT-14
          DISPLAY (14) #CNT-14 ST-V.ID-NUMBER INTRO-FLAG
            ST-V.OTHER-COMPANY-ID
        END-IF
      END-IF
    END-IF
  ELSE
    IF PROCESS-IND NE 'S'
      ADD 1 TO #CNT-14
      DISPLAY (14) #CNT-14 ST-V.ID-NUMBER INTRO-FLAG
        ST-V.OTHER-COMPANY-ID
    END-IF
*
    RESET #FOUND-COMBO-ST #FOUND-COMBO-AT
    FIND ST-SSN-V WITH SSN = ST-V.SSN
      IF ST-V.ID-NUMBER = ST-SSN-V.ID-NUMBER /* bypass same record
        ESCAPE TOP
      END-IF
*
      IF ST-SSN-V.PROCESS-IND = 'G' OR = 'S'
        ADD 1 TO #CNT-14
        DISPLAY (14) #CNT-14 ST-V.ID-NUMBER INTRO-FLAG
          ST-SSN-V.OTHER-COMPANY-ID
        WRITE (14) ST-V.ID-NUMBER 'Matching SSN with Int-Flag G/S on CN'
          ST-SSN-V.ID-NUMBER ST-V.SSN
      ELSE
        MOVE TRUE TO #FOUND-COMBO-ST
        ESCAPE BOTTOM
      END-IF
    END-FIND
*
    FIND AT-SSN-V WITH SSN = ST-V.SSN
      IF AT-SSN-V.INTRO-FLAG = 'S'
        ESCAPE TOP
      END-IF
*
      MOVE TRUE TO #FOUND-COMBO-AT
      ESCAPE BOTTOM
    END-FIND
*
    IF PLAN (1) = '2SC' OR = '3SC'
*     WRITE ST-V.SSN ST-V.ID-NUMBER ST-SSN-V.ID-NUMBER
*      'AFSC COMBO RECORD'
      IF NOT (#FOUND-COMBO-ST OR #FOUND-COMBO-AT)
        ADD 1 TO #CNT-14
        DISPLAY (14) #CNT-14 ST-V.ID-NUMBER INTRO-FLAG
          ST-SSN-V.OTHER-COMPANY-ID
        WRITE (14) ST-V.ID-NUMBER ST-V.SSN 'Missing AAFMAA Combo Record'
      END-IF
*
      IF #FOUND-COMBO-ST
          AND ((ST-V.ID-NUMBER NE ST-SSN-V.OTHER-COMPANY-ID)
          OR  (ST-V.OTHER-COMPANY-ID NE ST-SSN-V.ID-NUMBER)
          OR  (ST-V.OTHER-COMPANY-ID = 0))
        ADD 1 TO #CNT-14
        DISPLAY (14) #CNT-14 ST-V.ID-NUMBER INTRO-FLAG
          ST-V.OTHER-COMPANY-ID ST-SSN-V.OTHER-COMPANY-ID
        WRITE (14) ST-V.ID-NUMBER ST-SSN-V.ID-NUMBER ST-V.SSN
          'OTHER-COMPANY-ID Non-match'
          ST-V.OTHER-COMPANY-ID ST-SSN-V.OTHER-COMPANY-ID
      END-IF
    ELSE
      IF #FOUND-COMBO-ST OR #FOUND-COMBO-AT
        WRITE (14) ST-V.ID-NUMBER 'AFSC non-combo but AAFMAA rec exists'
      END-IF
      IF  (ST-V.OTHER-COMPANY-ID NE 0)
          OR (ST-SSN-V.OTHER-COMPANY-ID NE 0)
        ADD 1 TO #CNT-14
        DISPLAY (14) #CNT-14 ST-V.ID-NUMBER INTRO-FLAG
          ST-V.OTHER-COMPANY-ID ST-SSN-V.OTHER-COMPANY-ID
        WRITE (14) ST-V.ID-NUMBER ST-SSN-V.ID-NUMBER
          'OTHER-COMPANY-ID Entered for AFSC non-Combo'
      END-IF
    END-IF
  END-IF
*
  RESET #AVL-CV
  RESET #MOD-PRM #APL-DUE
  RESET #CSV-POLS #POLS #HAS-MODE-E #HAS-MODE-G #HAS-MODE-ASQ #TOT-FACE
  RESET #NUM-LOANS #ALL-POLS
  RESET #TOT-FIXED-LOANS #TOT-VAR-LOANS
*
  RESET PDA-CONTACT #DATE-OF-BIRTH #DATE-OF-BIRTH-SP #SPOUSE-SEX       /* TT1 BEGIN
  P-CONTACT-ID := ST-V.MEMBER-CONTACT-ID
  CALLNAT 'CONTS001' PDA-CONTACT #DATE-OF-BIRTH-SP #SPOUSE-SEX
  #DATE-OF-BIRTH := P-DATE-OF-BIRTH                                    /* TT1 END
  FOR #I1 1 TO 9
*   IF PAY-STATUS (#I1) = '45'
*     WRITE ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1) 'RPU'
*   END-IF
*
    IF   (PREM-RATING (#I1) NE ' ')
        AND (STATUS (#I1) = 'D')
      WRITE ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1) PLAN (#I1)
        'PREMIUM Rating' PREM-RATING (#I1)
        'ISS-AGE=' ISSUE-AGE (#I1)
    END-IF
*
    IF STATUS (#I1) NE ' '
      ADD 1 TO #ALL-POLS
    END-IF
*
    IF STATUS (#I1) NE 'D'
      IF  (X-LOAN-AMOUNT (#I1) NE 0)
          OR (X-LOAN-AMOUNT-2 (#I1) NE 0)
          OR (X-ACCUM-INTEREST (#I1) NE 0)
          OR (X-ACCUM-INTEREST-2 (#I1) NE 0)
        MOVE '## termed policy has loan' TO #EXCP    /* DW24
        COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
        WRITE WORK 5 #EXCEPTIONS
        WRITE (2) ST-V.ID-NUMBER #EXCP
      END-IF
*
      ESCAPE TOP
    END-IF
*
    IF   (X-INTEREST-RATE (#I1) GT 8.00)
        AND (X-LOAN-AMOUNT (#I1) GT (CASH-VALUE (#I1) * .75))
      ADD 1 TO #FIX-GTR-8
*     WRITE ST-V.ID-NUMBER 'Fixd rate is' X-INTEREST-RATE (#I1)
*        'Loan=' X-LOAN-AMOUNT (#I1) 'CSV=' CASH-VALUE (#I1)
*        'PD-to=' PAID-TO-DATE (#I1)
    END-IF
*
    IF ((X-ACCUM-INTEREST (#I1) LT 0)
        AND (X-LOAN-AMOUNT (#I1) + X-ACCUM-INTEREST (#I1) LT 5.00))
        OR ((X-ACCUM-INTEREST-2 (#I1) LT 0)
        AND (X-LOAN-AMOUNT-2 (#I1) + X-ACCUM-INTEREST-2 (#I1) LT 5.00))
      WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'Loan < $5 with neg int'
        X-ACCUM-INTEREST (#I1) (EM=-ZZZZ.99)
        X-ACCUM-INTEREST-2 (#I1) (EM=-ZZZZ.99)
    END-IF
*
    IF ((X-LOAN-AMOUNT    (#I1) NE 0)
        OR (X-ACCUM-INTEREST (#I1) NE 0))
        AND (X-LOAN-DATE (#I1) = 0)
      MOVE '## Fixed Loan Date Missing' TO #EXCP
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
      WRITE WORK 5 #EXCEPTIONS
      WRITE (2) ST-V.ID-NUMBER #EXCP
    END-IF
*
    IF ((X-LOAN-AMOUNT-2    (#I1) NE 0)
        OR (X-ACCUM-INTEREST-2 (#I1) NE 0))
        AND (X-LOAN-DATE-2 (#I1) = 0)
      COMPRESS '## Variable Loan date Missing' TO #EXCP         /* DW24
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
      WRITE WORK 5 #EXCEPTIONS
      WRITE (2) ST-V.ID-NUMBER #EXCP
    END-IF
*
    IF   (ALOT-AMT NE 0)
        AND (PAY-STATUS (#I1) = '12' OR = '21')
      ADD 1 TO #CNT-5
      DISPLAY (5) #CNT-5 ID-NUMBER ALOT-AMT PAY-STATUS(#I1)
      MOVE EDITED ALOT-AMT (EM=ZZZ.99) TO #AMT-7
      MOVE LEFT #AMT-7 TO #AMT-7
      MOVE #TOT-MON-PREM TO #AMT    /* DW3
*
      IF X-ALT-LP-IND (#I1) = '1' OR = '2'
        ADD X-ALT-LP-AMT (#I1) TO #AMT
      END-IF
*
      IF X-ALT-LP-IND-2 (#I1) = '1' OR = '2'
        ADD X-ALT-LP-AMT-2 (#I1) TO #AMT
      END-IF
      MOVE EDITED #AMT (EM=ZZZZZZ.99) TO #AMT-9  /* DW3
*
      MOVE LEFT #AMT-9 TO #AMT-9
      COMPRESS ID-NUMBER
        #TAB #AMT-7       /* ALOT AMT
        #TAB PAY-STATUS (#I1)
        #TAB #AMT-9       /* alot-amt
        #TAB #LINKED-CN
        INTO #GAWT-W-ALOT LEAVING NO
      WRITE WORK 1 #GAWT-W-ALOT
    END-IF
*
    IF  ((X-LOAN-AMOUNT (#I1) = 0)
        AND (X-ACCUM-INTEREST (#I1) NE 0))
        OR  ((X-LOAN-AMOUNT-2 (#I1) = 0)
        AND (X-ACCUM-INTEREST-2 (#I1) NE 0))
      ADD 1 TO #CNT-4
      DISPLAY (4) #CNT-4 ST-V.ID-NUMBER
        X-LOAN-DATE (#I1)   X-ACCUM-INTEREST   (#I1)
        X-LOAN-DATE-2 (#I1) X-ACCUM-INTEREST-2 (#I1)
    END-IF
*
    IF ISSUE-DATE (#I1) LT 19941201
      COMPUTE #TOT-FACE = #TOT-FACE + (NUM-MBRSHIPS (#I1) * 5000)
    ELSE
      ADD FACE-AMOUNT (#I1) TO #TOT-FACE
    END-IF
*
    IF  (FACE-AMOUNT (#I1) GT 810000)
        AND NOT #TU
        AND (NOT IS-ANNUITY-LIFE(< PLAN(#I1)>))            /* TT3
      COMPRESS '## NON-TU Face Amt exceeds 810,000' FACE-AMOUNT (#I1)
        INTO #EXCP /* DW24
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
      WRITE WORK 5 #EXCEPTIONS
      WRITE (2) ST-V.ID-NUMBER #EXCP
    END-IF
*
    IF FACE-AMOUNT (#I1) GT 700000    /* DW99
        AND #WL (#I1)
      WRITE ID-NUMBER 'Whole Life FACE AMT exceeds $700,000'
        FACE-AMOUNT (#I1)
    END-IF
*
    IF   (MODE (#I1) = 'A' OR = 'Q' OR = 'S' OR = 'M'
        OR = '1' OR = '4' OR = '2')
        AND (PAY-STATUS (#I1) LT '40')
      MOVE TRUE TO #HAS-MODE-ASQ
    END-IF
*
    IF   (MODE (#I1) = 'G')
        AND (PAY-STATUS (#I1) LT '40')
      MOVE TRUE TO #HAS-MODE-G
    END-IF
*
    IF  ((MODE (#I1) = 'E') AND (PAY-STATUS (#I1) LT '40'))
        OR (X-ALT-LP-IND   (#I1) = '3' OR = '4')
        OR (X-ALT-LP-IND-2 (#I1) = '3' OR = '4')
      MOVE TRUE TO #HAS-MODE-E
    END-IF
*
    IF   (MODE (#I1) = 'M')
        AND (PAY-STATUS (#I1) LT '40')
        AND (CONV-DURATION (#I1) NE 999)
        AND (NOT ST-V.ID-NUMBER = 93802)
        AND (NOT MILITARY-SERVICE = 'CG' OR = 'PHS')
      MOVE '## NON-CAP Mode M' TO #EXCP          /* DW24
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
      WRITE WORK 5 #EXCEPTIONS
      WRITE (2) ST-V.ID-NUMBER #EXCP
    END-IF
*
*   IF   (MODE (#I1) = '0' OR = '1' OR = '2' OR = '4')  /* DW1
*    AND (ST-V.ID-NUMBER LT 600000)          /* DW7   Removed 11/07/2005
*     ADD 1 TO #CNT-11
*     DISPLAY (11) #CNT-11 ST-V.ID-NUMBER
*        'ISS/Date'   ISSUE-DATE (#I1)
*        'CC #'       CC-NUM
*        'CC/EXP-DT'  CC-EXP-DT
*        'MD'         MODE (#I1)
*        'PD-TO/DATE' PAID-TO-DATE (#I1)
*        'Pay/Stat'   PAY-STATUS (#I1)
*        'FPF'        X-FIRST-PLACE-FEE (#I1)
*        'BADJ'       X-BILL-ADJUST (#I1)
*   END-IF
*
    RESET #SEG-X #SVC-FEE #DUES-TM   /* DW7
    FOR #I2 1 TO 9
      IF ST-V.STATUS (#I2) = 'D'
        MOVE #I2 TO #SEG-X
        ESCAPE BOTTOM
      END-IF
    END-FOR
*
    IF #I2 LE 9
      CALLNAT 'GDUESSXX' ST-V.ID-NUMBER #SEG-X #SVC-FEE  /* DW3
*
*     IF   (PLAN (#SEG-X) = 'RT' OR = 'LT')   /* DW3                  /* YK3
*      OR ((PLAN-A1 (#SEG-X) GE 'U') AND (PLAN-A1 (#SEG-X) LE 'Z'))   /* YK3
      IF FUNCTION-TERM-POLICY(<PLAN(#SEG-X)>)                         /* YK3
        MOVE TRUE TO #DUES-TM
      END-IF
    END-IF
*
    IF #SVC-FEE NE 0   /* DW3
      ADD 1 TO #CNT-11
      DISPLAY (11) #CNT-11 'CN' ST-V.ID-NUMBER
        'Proc/Ind' PROCESS-IND
        'Int/Flag' INTRO-FLAG
        PLAN (#SEG-X)
        MODE (#SEG-X)
        'Issue/Date' ISSUE-DATE (#SEG-X)
        #SVC-FEE
        'Pay/Stat' PAY-STATUS (#SEG-X)
    END-IF
*
    IF  ((MODE (#I1) = 'G')    /* G  PP must be curr month
        AND (ST-V.ID-NUMBER LT 600000)
        AND (PAY-STATUS (#I1) = '22')
        AND (PD-TO-DT-YYYYMM (#I1) NE #CURR-YYYYMM)
        AND (PD-UP-DT-YYYYMM (#I1) NE #CURR-YYYYMM))
      COMPRESS '## Mode G PP Paid-to-date error' INTO #EXCP        /* DW24
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
      WRITE WORK 5 #EXCEPTIONS
      WRITE (2) ST-V.ID-NUMBER #EXCP
    END-IF
*
    IF  ((MODE (#I1) = 'E' OR = '0' OR = '1' OR = '2' OR = '4') /* DW1
        AND (PAY-STATUS (#I1) = '22') /* E/CC PP must be curr mon or future
        AND (PD-TO-DT-YYYYMM (#I1) LT #CURR-YYYYMM)
        AND (PD-UP-DT-YYYYMM (#I1) NE #CURR-YYYYMM))
        AND (ST-V.ID-NUMBER LT 600000)
      COMPRESS '## Ez-Pay/Cred Crd Paid-to-date error - mode' MODE (#I1)  /* DW24
        INTO #EXCP
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
      WRITE WORK 5 #EXCEPTIONS
      WRITE (2) ST-V.ID-NUMBER #EXCP
    END-IF
*
    IF   (MODE (#I1) = 'E')
        AND ((PAY-STATUS (#I1) = '21')
        OR  ((PAY-STATUS (#I1) = '20') AND (X-FIRST-PLACE-FEE (#I1) = 0)))
      COMPRESS '## Mode E Pay-stat Err' PAY-STATUS (#I1) PAID-TO-DATE (#I1) /* DW24
        INTO #EXCP
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
      WRITE WORK 5 #EXCEPTIONS
      WRITE (2) ST-V.ID-NUMBER #EXCP
    END-IF
*
    IF  (X-ALT-LP-IND   (#I1) = '8')
        OR (X-ALT-LP-IND-2 (#I1) = '8')
      WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'Has alp code of "8" (CIP)'
    END-IF
*
    IF   (ALOT-AMT = 0)
        AND (((X-ALT-LP-IND (#I1) = '1' OR = '2')
        AND  (X-ALT-LP-AMT(#I1) NE 0))
        OR  ((X-ALT-LP-IND-2  (#I1) = ' 1' OR = '2')
        AND  (X-ALT-LP-AMT-2 (#I1) NE 0)))
      COMPRESS '## ALP with no ALLOT' ISSUE-DATE (#I1) X-ALT-LP-AMT (#I1)  /* DW24
        X-ALT-LP-AMT-2 (#I1)               INTO #EXCP
      COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
      WRITE WORK 5 #EXCEPTIONS
      WRITE (2) ST-V.ID-NUMBER #EXCP
    END-IF
*
    IF   (NOT PLAN (#I1) = 'LT' OR = 'RT')
        AND (ST-V.PROCESS-IND NE 'S')
*     IF (PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z')  /* YK3
      IF FUNCTION-TERM-POLICY(<PLAN(#I1)>)                  /* YK3
        IGNORE
      ELSE
        IF CONV-DURATION (#I1) = 999  /* cap policy
          IGNORE
        ELSE
          ADD 1 TO #CSV-POLS
        END-IF
      END-IF
    END-IF
    ADD 1 TO #POLS
*
    IF (PLAN (#I1) = 'LT')
      IF  ((SMOKER-FLAG (#I1) = 'N')
*            AND (DATE-OF-BIRTH LE (*DATN - 470000)))
          AND (#DATE-OF-BIRTH LE (*DATN - 500000)))
          OR  ((SMOKER-FLAG (#I1) = 'S')
*           AND (DATE-OF-BIRTH LE (*DATN - 370000)))
          AND (#DATE-OF-BIRTH LE (*DATN - 400000)))     /* TT1
        MOVE *DATN TO #YYYYMMDD
        SUBTRACT #DATE-OF-BIRTH FROM #YYYYMMDD          /* TT1
*
        ADD 1 TO #CNT-8
        DISPLAY (8) #CNT-8 ID-NUMBER
          'ISSUE/DATE' ISSUE-DATE (#I1)
          'SM/FLG'     SMOKER-FLAG (#I1)
          'AGE'        #YYYY
          'DOB'        #DATE-OF-BIRTH                    /* TT1
          'ORIG/DEATH/BENE' FACE-AMOUNT (#I1)
          NAME
*
        IF  ((SMOKER-FLAG (#I1) = 'N') AND (#YYYY GE 50))
            OR ((SMOKER-FLAG (#I1) = 'S') AND (#YYYY GE 40))
          WRITE (8)   '   ** COV DROPPED on above'
        END-IF
      END-IF
    END-IF
*
    IF RID-PLAN (#I1) NE ' '   /* DW9
      RESET #FBR-LTR-SENT
      FIND NT-V WITH ID-NUMBER = ST-V.ID-NUMBER
        FOR #I2 1 TO C*NOTE-TABLE                          /* DW33
          IF NOTE-TEXT (#I2) = MASK ('SENT FBR LTR')
            MOVE TRUE TO #FBR-LTR-SENT
            ESCAPE BOTTOM
          END-IF
        END-FOR
      END-FIND
*
      MOVE 99 TO #YOUNGEST-DEP-AGE     /* DW9
      FIND FR-V WITH MEMBER-KEY = ST-V.ID-NBR
        FOR #I3 1 TO 14
          IF DEPN-DATE-OF-BIRTH (#I3) NE 0
            MOVE *DATN TO #YYYYMMDD
            SUBTRACT DEPN-DATE-OF-BIRTH (#I3) FROM #YYYYMMDD
            IF #YYYY LT #YOUNGEST-DEP-AGE
              MOVE #YYYY TO #YOUNGEST-DEP-AGE
            END-IF
          END-IF
        END-FOR
      END-FIND
*
      IF  ((RID-PLAN (#I1) = MASK ('C'))    /* DW9
          AND (#YOUNGEST-DEP-AGE GE 20)) /* 1-year prior to ineligibility
          OR  ((RID-PLAN (#I1) NE MASK ('C'))
          AND (#DATE-OF-BIRTH-SP = 0)                                     /* TT1
          AND (#YOUNGEST-DEP-AGE GE 20)) /* 1-year prior to ineligibility
        IF #FBR-LTR-SENT
          WRITE ST-V.ID-NUMBER 'Rider with elig concerns-LTR SENT-'
            'plan=' RID-PLAN (#I1)
            'Yngest=' #YOUNGEST-DEP-AGE 'sps-dob=' #DATE-OF-BIRTH-SP      /* TT1
        ELSE
          COMPRESS '## Rider with Elig Concerns'                /* DW24
            INTO #EXCP
          COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
          WRITE WORK 5 #EXCEPTIONS
          WRITE (2) ST-V.ID-NUMBER #EXCP
        END-IF
      END-IF
*
      ADD 1 TO #CNT-12
      DISPLAY (12) #CNT-12  (EM=ZZZ9)
        'CN'           ST-V.ID-NUMBER
        'INT/FLG'      INTRO-FLAG
        'Rid/Pln'      RID-PLAN     (#I1)
        'POL/Eff-dt'   ISSUE-DATE   (#I1)
        'Rid/Eff-dt'   RID-EFF-DT   (#I1)
        'Yngst/Dep/Age'  #YOUNGEST-DEP-AGE
        'MD'           MODE         (#I1)
        'POL/Pd-to'    PAID-TO-DATE (#I1)
        'Rid/pd-to'    RID-PD-TO    (#I1)
        'POL/Bill/Date' BILL-TO-DATE (#I1)
        'POL/Pay/St'   PAY-STATUS   (#I1)
        'Rid/Balance'  RID-BALANCE
*
      IF  (RID-PD-TO(#I1) = PAID-TO-DATE (#I1))
          OR (RID-PD-TO(#I1) = BILL-TO-DATE (#I1))
        IGNORE
      ELSE
        COMPRESS '## Rider with bad pd-to-date mode' MODE (#I1)    /* DW24
          INTO #EXCP
        COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
        WRITE WORK 5 #EXCEPTIONS
        WRITE (2) ST-V.ID-NUMBER #EXCP
      END-IF
    END-IF
*
    ADD CASH-VALUE (#I1) TO #AVL-CV
*
    IF MTD-ACV-PREM-ADJ (#I1) NE 9999999.99
      ADD MTD-ACV-PREM-ADJ (#I1) TO #AVL-CV
    END-IF
*
    IF MTD-ACV-INT-ADJ (#I1) NE 99999.99
      ADD MTD-ACV-INT-ADJ (#I1) TO #AVL-CV
    END-IF
*
    IF MTD-ACV-COI-ADJ (#I1) NE 99999.99
      SUBTRACT MTD-ACV-COI-ADJ (#I1) FROM #AVL-CV
    END-IF
*
    IF MODE(#I1) = 'A' OR = '1'
      ADD ANNUAL-PREM (#I1) TO #MOD-PRM
    ELSE
      IF MODE(#I1) = 'S' OR = '2'
        COMPUTE #MOD-PRM = (ANNUAL-PREM (#I1) / 2) +  #MOD-PRM
      ELSE
        IF MODE(#I1) = 'Q' OR = '4'
          COMPUTE #MOD-PRM = (ANNUAL-PREM (#I1) / 4) +  #MOD-PRM
        ELSE
          COMPUTE #MOD-PRM = (ANNUAL-PREM (#I1) / 12) +  #MOD-PRM
        END-IF
      END-IF
    END-IF
*
    IF   (MODE (#I1) = 'A' OR = 'S' OR = 'Q')
        AND (PD-TO-DT-YYYYMM (#I1) = #RUN-DT-3-MO)
        AND (PAY-STATUS (#I1) LT '40')
        AND (PROCESS-IND NE 'S')
      MOVE TRUE TO #APL-DUE
    END-IF
*
    IF (PD-TO-DT-YYYYMM (#I1) LT #RUN-DT-1-MO)
        AND (PD-UP-DT-YYYYMM (#I1) NE #RUN-DT-1-MO)
        AND (PD-UP-DT-YYYYMM (#I1) NE #RUN-DATE-YYYYMM)
        AND (PAY-STATUS (#I1) LT '40')
        AND (DEBIT-CREDIT-AMT LT 0)
      ADD 1 TO #CNT-10
      DISPLAY (10) #CNT-10 ST-V.ID-NUMBER
        'ISSUE/DATE' ISSUE-DATE (#I1)
        'ANN/PREM'   ANNUAL-PREM (#I1)
        'PLN'        PLAN (#I1)
        'DB/CR'      DEBIT-CREDIT-AMT
        'PD-TO/DATE' PAID-TO-DATE (#I1)
        'PD-UP/DATE' PAID-UP-DATE (#I1)
    END-IF
*
    IF (PD-TO-DT-YYYYMM (#I1) LT #RUN-DT-3-MO)
        AND (PAY-STATUS (#I1) LT '40')
      MOVE *DATN TO #YYYYMMDD
      IF PD-TO-DT-MM (#I1) GT #MM
        ADD 12 TO #MM
        SUBTRACT 1 FROM #YYYY
      END-IF
      COMPUTE #MONS = ((#YYYY - PD-TO-DT-YYYY (#I1)) * 12)
        + (#MM - PD-TO-DT-MM (#I1))
    END-IF
*
    IF   (CONV-DURATION (#I1) = 999)
        AND (X-LOAN-AMOUNT (#I1) NE 0)
      ADD 1 TO #CAP-LOANS
    ELSE
      IF X-LOAN-AMOUNT (#I1) NE 0
        ADD 1 TO #NUM-LOANS
        IF X-LOAN-DATE (#I1) LT 19880621
          ADD 1 TO #FIXED-LOANS (1)
        ELSE
          ADD 1 TO #FIXED-LOANS (2)
        END-IF
      END-IF
*
      IF X-LOAN-AMOUNT-2 (#I1) NE 0
        ADD 1 TO #NUM-LOANS
        IF X-LOAN-DATE-2 (#I1) LT 19880621
          ADD 1 TO #VAR-LOANS (1)
        ELSE
          ADD 1 TO #VAR-LOANS (2)
        END-IF
      END-IF
    END-IF
*
    ADD X-LOAN-AMOUNT   (#I1) TO #TOT-FIXED-LOANS
    ADD X-LOAN-AMOUNT-2 (#I1) TO #TOT-VAR-LOANS
*
    SUBTRACT X-LOAN-AMOUNT    (#I1) FROM #AVL-CV
    SUBTRACT X-ACCUM-INTEREST (#I1) FROM #AVL-CV
*
    SUBTRACT X-LOAN-AMOUNT-2    (#I1) FROM #AVL-CV
    SUBTRACT X-ACCUM-INTEREST-2 (#I1) FROM #AVL-CV
*
    IF   (CONV-DURATION (#I1) = 999)
        AND (X-LOAN-AMOUNT (#I1) NE 0)
      IF CAP-ENTRY-DATE = 0
        COMPRESS '## CAP MBR with no Entry-date'                /* DW24
          INTO #EXCP
        COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
        WRITE WORK 5 #EXCEPTIONS
        WRITE (2) ST-V.ID-NUMBER #EXCP
      END-IF
    ELSE
      IF ((X-LOAN-AMOUNT (#I1) NE 0) OR (X-LOAN-AMOUNT-2 (#I1) NE 0))
        IF   (#AVL-CV LT 0)
          COMPRESS '## Overloaned by' #AVL-CV ISSUE-DATE (#I1)           /* DW24
            INTO #EXCP
          COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
          WRITE WORK 5 #EXCEPTIONS
          WRITE (2) ST-V.ID-NUMBER #EXCP
        END-IF
      END-IF
    END-IF
  END-FOR
*
  IF  (#HAS-MODE-G AND #HAS-MODE-ASQ)
      OR (#HAS-MODE-E AND #HAS-MODE-ASQ)
      OR (#HAS-MODE-G AND #HAS-MODE-E)
      OR  ((#TOT-BADJ NE 0) AND NOT #HAS-MODE-ASQ)
      OR  ((#TOT-BADJ NE 0) AND (DEBIT-CREDIT-AMT NE 0))
    ADD 1 TO #CNT-9
    DISPLAY (9) #CNT-9 ID-NUMBER
      'HAS/MODE-G'   #HAS-MODE-G
      'HAS/MODE-ASQ' #HAS-MODE-ASQ
      'HAS/MODE-E'   #HAS-MODE-E
      'Tot/Bill/Adjust' #TOT-BADJ
      'DB-CR'       DEBIT-CREDIT-AMT
  END-IF
*
  IF #NUM-LOANS NE 0
    ADD 1 TO #MBRS-W-LOANS
  END-IF
*
  IF   (#NUM-LOANS = 1)
      AND (#CSV-POLS = 1)
    ADD 1 TO #1-LN-1-POL
  ELSE
    IF   (#NUM-LOANS = 2)
        AND (#CSV-POLS = 1)
      ADD 1 TO #2-LN-1-POL
    ELSE
      IF   (#NUM-LOANS = 1)
          AND (#CSV-POLS GT 1)
        ADD 1 TO #1-LN-MULT-POL
      ELSE
        IF   (#NUM-LOANS = 2)
            AND (#CSV-POLS GT 1)
          ADD 1 TO #2-LN-MULT-POL
        END-IF
      END-IF
    END-IF
  END-IF
*
  IF (#TOT-FACE GT 850000)
      AND NOT #TU
    WRITE (2) ID-NUMBER '## NON-TU TOT FACE AMT exceeds 850,000' #TOT-FACE
  END-IF
*
  IF   (PAD-CODE = 'E')
      AND (#HAS-MODE-ASQ)
      AND (NOT #HAS-MODE-E)
    COMPRESS '## Pad-Code is "E" with Mode A/S/Q and no "E"'             /* DW24
      INTO #EXCP
    COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
    WRITE WORK 5 #EXCEPTIONS
    WRITE (2) ST-V.ID-NUMBER #EXCP
  END-IF
*
* IF (PAD-CODE = 'P' OR = 'N' OR = 'D' OR = 'L')
*   WRITE ID-NUMBER 'pad-code "P/N/D/L"' PAD-CODE
* END-IF
*
  IF PAD-CODE = 'P' OR = 'D' OR = 'L' OR = 'V' OR = 'X' OR = 'Z'
    ADD 1 TO #CNT-16
    DISPLAY (16) #CNT-16 'CN' ID-NUMBER
      'Pad/Code' PAD-CODE
      'Alot/Amt' ALOT-AMT
      'Inact' NUMBER-MEMBERSHIPS
  END-IF
*
  RESET #MSG #FUTURE-DATED
  IF PAD-CODE = 'V'  OR = 'X' OR = 'Z' OR = 'P' OR = 'D'              /* PM32
    FOR #I1 1 TO 9
      IF (MODE (#I1) = 'E') AND (STATUS (#I1) = 'D')
        COMPRESS '## EZ-PAY pending but has mode "E"' PAD-CODE        /* DW24
          INTO #EXCP
        COMPRESS ST-V.ID-NUMBER #TAB #EXCP INTO #EXCEPTIONS
        WRITE WORK 5 #EXCEPTIONS
        WRITE (2) ST-V.ID-NUMBER #EXCP
      END-IF
*
      IF   (STATUS (#I1) = 'D')
          AND (PAY-STATUS (#I1) LT '40')
          AND (((PAD-CODE = 'V' OR = 'P')                                /* PM32
          AND (PD-TO-DT-YYYYMM (#I1) GE #RUN-DATE-YYYYMM))
          OR  ((PAD-CODE = 'W')
          AND (PD-TO-DT-YYYYMM (#I1) GE #RUN-DATE-YYYYMM)
          AND (OWNERSHIP-FLAG (#I1) = 'N'))
          OR  ((PAD-CODE = 'X' OR = 'D')                                /* PM32
          AND (PD-TO-DT-YYYYMM (#I1) GE #RUN-DATE-YYYYMM)
          AND (OWNERSHIP-FLAG (#I1) = 'D')))
        MOVE TRUE TO #FUTURE-DATED
      END-IF
    END-FOR
*
    IF (PAD-CODE = 'V' OR = 'P') AND (ALOT-AMT NE 0)                  /* PM32
      MOVE 'Will delay start due to alot-amt' TO #MSG
    ELSE
      IF #FUTURE-DATED
        MOVE 'Will delay due to future dating' TO #MSG
      END-IF
    END-IF
*
    IF #MSG = ' '
      ADD 1 TO #CNT-7
      DISPLAY (7) #CNT-7 ID-NUMBER PAD-CODE ALOT-AMT
      FOR #I1 1 TO 9
        IF   (STATUS (#I1) = 'D')
            AND (PAY-STATUS (#I1) LT '40')
          WRITE (7) '      ' #I1 PAY-STATUS (#I1) 'Mode' MODE (#I1)
            'ANN-Prem' ANNUAL-PREM (#I1)
            'own-flag' OWNERSHIP-FLAG (#I1)
            'pd-to' PAID-TO-DATE (#I1)
            'ALP'   X-ALT-LP-IND (#I1) X-ALT-LP-AMT (#I1)
            'ALP-2' X-ALT-LP-IND-2 (#I1) X-ALT-LP-AMT-2 (#I1)
        END-IF
      END-FOR
    ELSE
      ADD 1 TO #CNT-6
      DISPLAY (6) #CNT-6 ID-NUMBER PAD-CODE ALOT-AMT #MSG
      FOR #I1 1 TO 9
        IF   (STATUS (#I1) = 'D')
            AND (PAY-STATUS (#I1) LT '40')
          WRITE (6) '      ' #I1 PAY-STATUS (#I1) 'Mode' MODE (#I1)
            'ANN-Prem' ANNUAL-PREM (#I1)
            'own-flag' OWNERSHIP-FLAG (#I1)
            'pd-to' PAID-TO-DATE (#I1)
            'ALP'   X-ALT-LP-IND (#I1) X-ALT-LP-AMT (#I1)
            'ALP-2' X-ALT-LP-IND-2 (#I1) X-ALT-LP-AMT-2 (#I1)
        END-IF
      END-FOR
    END-IF
  END-IF
*
* IF   ((#CSV-POLS GE 7)
*  AND ((#TOT-FIXED-LOANS NE 0) OR (#TOT-VAR-LOANS NE 0)))
  IF   (#ALL-POLS GE 8)
    WRITE ID-NUMBER 'Has' #ALL-POLS 'Tot-segs' #POLS 'Act-Pols'
      'With' #CSV-POLS 'W/L Pols with these loan(s)'
      #TOT-FIXED-LOANS #TOT-VAR-LOANS
  END-IF
*
  IF (#TOT-FIXED-LOANS GT 10000) AND (#TOT-VAR-LOANS GT 10000)
    WRITE ID-NUMBER 'Has Fixed & Var loans w tot GTR $10,000'
      'FIX=' #TOT-FIXED-LOANS 'VAR=' #TOT-VAR-LOANS
  END-IF
*
END-READ
*
WRITE  'RECS READ  ' #RECS-READ
WRITE  'RECS SEL   ' #RECS-SELECTED
WRITE 'OPTED-OUT between 7/2004 & 7/2005' #OO-2004
WRITE 'CAP LOANS               ='#CAP-LOANS
WRITE 'FIX LOANS pri 6/21/1988 ='#FIXED-LOANS (1)
WRITE 'FIX LOANS aft 6/20/1988 ='#FIXED-LOANS (2)
WRITE 'VAR LOANS pri 6/21/1988 ='#VAR-LOANS (1)
WRITE 'VAR LOANS aft 6/20/1988 ='#VAR-LOANS (2)
WRITE 'MBRS with loans         ='#MBRS-W-LOANS
WRITE 'MBRS w 1 lon 1 pol      ='#1-LN-1-POL
WRITE 'MBRS w 2 lon 1 pol      ='#2-LN-1-POL
WRITE 'MBRS w 1 lon mult pol   ='#1-LN-MULT-POL
WRITE 'MBRS w 2 lon mult pol   ='#2-LN-MULT-POL
WRITE 'alot but not army/airf' #NON-A-F-ALOT
WRITE 'Fxd loan > 8% near overloan' #FIX-GTR-8
*
WRITE 'Stats for Mode A/S/Q Paid-To-Day'
FOR #I1 1 TO 31                  /* DW6
  WRITE #I1 #MODE-ASQ-DAYS (#I1) (EM=ZZ,ZZ9)
END-FOR
*
MOVE 'Weekly GAWT/EXCP files have been FTP"d as follows:'
  TO #NOTE-TEXT (1) /* DW12
MOVE  '  ftp/polserv/???????.TXT' TO #NOTE-TEXT (2)
MOVE  '  ... gawt   ...big_badj  ... ezpa_w_fpf_badj' TO #NOTE-TEXT (3)
MOVE  '  ... CSV_Dropping ...exceptions' TO #NOTE-TEXT (4)
*
FOR #I1 1 TO 5
  WRITE #NOTE-TEXT (#I1)
END-FOR
*
MOVE 'EDS' TO #CGA-CLERK
MOVE '*NX' TO #CGA-SCR-SUFFIX
*
MOVE 'KHB' TO #TO-INIT
FETCH RETURN 'G4090PNX' #CGA-CLERK #TO-INIT #NOTE-TEXT (1:5) /* DW12
*
MOVE 'CEB' TO #TO-INIT                                       /* PM34
FETCH RETURN 'G4090PNX' #CGA-CLERK #TO-INIT #NOTE-TEXT (1:5) /* DW21

END TRANSACTION
*
*********************************************************************
DEFINE SUBROUTINE LOAD-UNDL-TMRF-TABLE                       /* PM36
*********************************************************************
*
READ WORK 6 #INPUT-RECORD
  ADD +1 TO #NUM-UNDL
  #UNDL-CN (#NUM-UNDL) := #INPUT-RECORD
END-WORK
*
END-SUBROUTINE
*
*********************************************************************
DEFINE SUBROUTINE SEARCH-UNDL-TMRF-TABLE                     /* PM36
*********************************************************************
*
RESET #UNDL-FOUND
FOR #UNDL-IDX 1 TO #NUM-UNDL
  IF #UNDL-CN-N (#UNDL-IDX) = ST-V.ID-NUMBER
    #UNDL-FOUND := TRUE
    ESCAPE BOTTOM
  END-IF
END-FOR
*
END-SUBROUTINE
*
END
