* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPVYE3 - VALUE-ADDED YEAR-END PROCESSING - STEP 3
*                        FORMAT IN-FORCE REPORTS AND
*                        CREATE ACTUARY EXTR TAPE/DISKETTE
*   <<<<< MUST HANDLE VAR TERM INS FOR 2000 YEAR-END <<<<<<<<<
*
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* PAM  05312005 PM1  Adjust AVL-TDIV for 124156 per RLB                *
* DRW 02/07/2008 DW1 bypass RPU policies on TPP exceeds CSV Report     *
* PAM 12/08/2009 PM2 Increased field size from 5.2 to 7.2              *
* PAM 04/21/2011 PM3 Removed paid-up logic from report                 *
* PAM 12/28/2011 PM4 Added gender to download files                    *
* YAK 10/11/2012 YK1 Use function to identify Level Term II plans      *
* vxt 12/12/2012 vt1 Extend the field size                             *
* vxt 12/30/2013 vt2 Extend the size of face-amt field
************************************************************************
DEFINE DATA
LOCAL
*
1 #JCL-PARM       (A17)
1 REDEFINE #JCL-PARM
 2 #JCL-FIL-1        (A13)          /* 'PROCESS YEAR='
 2 #JCL-PROCESS-YYYY (N4)           /* '1988'
*
1 #EXTR-RECORD
 2 #ID-NUMBER            (N6)       /* from v/a history rec
 2 REDEFINE #ID-NUMBER
  3 #ID-NUMBER-A         (A6)
 2 #ISSUE-DATE           (N8)
 2 REDEFINE #ISSUE-DATE
  3 #ISSUE-DATE-YYYY     (N4)
  3 #ISSUE-DATE-MM       (N2)
  3 #ISSUE-DATE-DD       (N2)
 2 #PLAN-HIST            (A3)
 2 #ISSUE-AGE            (A2)
 2 #DB-HIST              (N7.2)
 2 #ACV-HIST             (N7.2)
 2 #CV-HIST              (N7.2)
 2 #YTD-PREMIUMS-PAID    (N7.2)
 2 #YTD-INTEREST-PAID    (N5.2)
 2 #YTD-COI-PAID         (N5.2)
 2 #YTD-ACQ-PAID         (N4.2)
 2 #YTD-MNT-PAID         (N4.2)
 2 #TERM-CODE            (A3)
 2 #TERM-DATE            (N6)
 2 REDEFINE #TERM-DATE
  3 #TERM-DATE-YYYY      (N4)
  3 #TERM-DATE-MM        (N2)
 2 #PROR-LOAN-AMT        (N5.2)
 2 #SMOKER-FLAG-HIST     (A1)
 2 #USES-1996-PREMS      (A1)  /* Y if month-alloc-amt is 999.99
 2 #CAP-POLICY           (A1)  /* Y if conv-dur is 999
 2 #BEG-OF-YR-ACV        (N7.2)
 2 #BEG-OF-YR-DB         (N7.2)
************     above = 118 chars
 2 #PAY-STATUS           (A2)       /* from status record
 2 #NUM-SHIPS            (N1)
 2 #FACE-AMT             (N7.2)                    /* vt2 was n6.2
 2 #ANN-PREM             (N5.2)
 2 #MIN-CV               (N7.2)           /* vt1 08082012 was n6.2
 2 #NXT-YR-MIN-CV        (N7.2)           /* vt1 08082012 was n6.2  
 2 #INT-RATE             (N2.3)
 2 #MODE                 (A1)
*       below added 1997 y/e
 2 #INTRO-FLAG           (A1)
 2 #PLAN                 (A3)
 2 REDEFINE #PLAN
  3 #PLAN-A1    (A1)
  3 #PLAN-N2    (N2)
 2 #DOB                  (N8)
 2 #ACV                  (N7.2)
 2 #CSV                  (N7.2)
 2 #CONT-FUND            (N7.2)
 2 #CURR-ACQ             (N4.2)
 2 #MON-AMORT-ACQ        (N3.2)
 2 #DB                   (N7.2)
 2 #FIXED-LOAN           (N7.2)
 2 #FIXED-ACC-INT        (N5.2)
 2 #VAR-LOAN             (N7.2)
 2 #VAR-ACC-INT          (N5.2)
 2 #DB-CR                (N7.2)
 2 #PAID-TO-DT           (N8)
 2 #PAID-UP-DT           (N8)     /* a/o 1/1998
 2 #5-5-DEATH-BENEFIT    (N7.2)   /* a/o 4/1998
* below added 12/1998
 2 #PRORATED-LOAN        (N7.2)
 2 #CAP-POL-FLAG         (A1)
 2 #SMOKER-FLAG          (A1)
 2 #USES-1996-FLAG       (A1)
 2 #DUES-FLAG            (A1)
 2 #NXT-MON-CASH-VALUE   (N7.2)
 2 #NXT-MON-DEATH-BENEFIT (N7.2)
 2 #YTD-DUES-PAID        (N5.2)   /* + 203 = 321 chars  a/o  12/98
*       BELOW ADDED 1999 Y/E
 2 #RID-PLAN             (A2)
 2 REDEFINE #RID-PLAN
  3 #RID-PLAN-1          (A1)
  3 #RID-PLAN-2          (N1)
 2 #RID-EFF-DT           (N8)
 2 #RID-PD-TO            (N8)     /* + 18  = 339 CHARS  A/O  12/1999
*
****************** ABOVE = 221 CHARS
****************** TOTAL = 339 CHARS
*
1 #CAP-LOAN               (N7.2)
1 #CV                     (N7.2)
1 #AVL-TDIV               (N7.2)
*
1 #ACE-ACV       (A13)
1 #ACE-DB        (A13)
1 #ACE-YTD-PREMS (A13)
1 #CELL-SUMMARY-FILE   (A100)   /* for crooks
*
1 #VALUATION-TAPE-DISKETTE
 2 #VTD-ID-NUMBER        (N6)
 2 #VTD-PLAN             (A3)
 2 #VTD-ISSUE-DATE       (N8)
 2 #VTD-ISSUE-AGE        (A2)
 2 #VTD-GENDER-CD        (A1)        /* PM4
 2 #VTD-ANN-PREM         (N5.2)
 2 #VTD-MODE             (A1)
 2 #VTD-SMOKER-CODE      (A1)
 2 #VTD-DB               (N7.2)
 2 #VTD-ACV              (N7.2)
 2 #VTD-ACV-             (A1)
 2 #VTD-CSV              (N7.2)
 2 #VTD-CSV-             (A1)
 2 #VTD-CONT-FUND        (N7.2)
 2 #VTD-CONT-FUND-       (A1)
 2 #VTD-ACQ-BAL          (N4.2)
 2 #VTD-PROR-LOAN-AMT    (N7.2)       /* PM2
 2 #VTD-INT-RATE         (N2.3)
 2 #VTD-FAC-AMT          (N7.2)                 /* vt2 was n6.2
 2 #VTD-5-5-DB           (N7.2)
****************** above = 90 chars
*
1 ST-V VIEW OF A-STATUS               /* PM4
 2 MEMBER-CONTACT-ID                  /* PM4
1 CT-V VIEW OF A-CONTACTS             /* PM4
 2 GENDER-CD                          /* PM4
*
1 #COUNTERS
  2 #RECS-READ        (P7)
  2 #RECS-WRITTEN     (P7)
  2 #VAL-TP-DISK-OUT  (P7)
  2 #CNT              (P7)
  2 #I1               (I2)
  2 #I2               (I2)
  2 #I3               (I2)
  2 #CNT-5            (P5)
  2 #CNT-6            (P5)
*
 1 #LAST-PLAN         (A3)
 1 #LAST-ISS-YYYY     (N4)
 1 #LAST-ISS-AGE      (A2)
*
*    1 - IN FORCE CELL TOTALS
*    2 - IN FORCE SUB TOTALS
*    3 - IN FORCE GRAND TOTALS
*    4 - CV > ACV CELL TOTALS
*    5 - CV > ACV SUB TOTALS
*    6 - CV > ACV GRAND TOTALS
*    7 - TERMINATED SUB TOTALS
*    8 - TERMINATED GRAND TOTALS
*
1 #TOTALS            (8)
 2 #ACC-DB             (P13.2)
 2 #ACC-UNITS          (P7)
 2 #ACC-FAC-AMT        (P11.2)
 2 #ACC-ACV            (P13.2)
 2 #ACC-CV             (P13.2)
 2 #ACC-YTD-PREMS      (P11.2)
 2 #ACC-YTD-INT        (P11.2)
 2 #ACC-YTD-COI        (P11.2)
 2 #ACC-YTD-ACQ        (P11.2)
 2 #ACC-YTD-MNT        (P11.2)
 2 #ACC-PLANS          (P7)
 2 #ACC-PLANS-W-LOANS  (P7)
 2 #ACC-LOAN-AMT-CAP   (P11.2)
 2 #ACC-LOAN-AMT       (P11.2)
 2 #ACC-PP-PLANS       (P7)
 2 #ACC-ANN-PREM       (P9.2)
 2 #ACC-PU-PLANS       (P7)
 2 #ACC-CAP-LOANS      (P11.2)
 2 #ACC-CSV            (P12.2)       /* vt1 was p11.2
 2 #ACC-AVL-TDIV       (P11.2)
 2 #ACC-CONT-FUND      (P12.2)       /* vt1 was p11.2
 2 #ACC-ACQ-BAL        (P11.2)
 2 #ACC-DUES-POLS      (P7)
 2 #ACC-YTD-DUES       (P11.2)
*
1 #NET-DB       (P9.2)
1 #NET-ACV      (P9.2)
1 #PTD-PREMIUMS-PAID   (P7.2)
1 #TOT-PTD-PREMIUMS-PAID-1 (P11.2)
1 #TOT-CSV-1       (P11.2)
1 #TOT-ACV-1       (P11.2)
1 #TOT-FACE-AMT-1  (P11.2)
1 #TOT-CONT-FUND-1 (P11.2)
1 #TOT-CURR-ACQ-1  (P11.2)
1 #TOT-DB-1        (P11.2)
*
1 #TOT-CSV-2       (P11.2)
1 #TOT-ACV-2       (P11.2)
1 #TOT-FACE-AMT-2  (P11.2)
1 #TOT-CONT-FUND-2 (P11.2)
1 #TOT-CURR-ACQ-2  (P11.2)
1 #TOT-DB-2        (P11.2)
*
1 #TOT-RID-PLANS   (P5)
1 #TOT-RID-UNITS   (P5)
*
1 #DOL-9    (A09)      /* 99999,999
1 #DOL-15   (A15)      /* 999,999,999,999
*
1 #TERM-DT               (N6)
1 REDEFINE #TERM-DT
 2 #TERM-DT-YYYY         (N4)
 2 #TERM-DT-MM           (N2)
*
1 #IM    (I1)
1 #ID    (I1)
1 #IS    (I2)
*
1 #NUM-PMTS           (P5)
*
1 #DOD-YYYYMMDD-G
 2 #DOD-YYYYMM     (N6)
 2 REDEFINE #DOD-YYYYMM
  3 #DOD-YYYY         (N4)
  3 #DOD-MM           (N2)
 2 #DOD-DD           (N2)
1 REDEFINE #DOD-YYYYMMDD-G
 2 #DOD-YYYYMMDD     (N8)
*
1 #MONTHS (A36) INIT <'JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'>
1 REDEFINE #MONTHS
 2 #MONTH    (A3/12)
*
1 #DOD-DDMMMYY    (A7)
1 #DOD-MMM        (A3)
1 #FOUND-CAP-WL-LINE   (L)
1 #TOT-BEG-ACV   (P11.2)
1 #TOT-END-ACV   (P11.2)
1 #TIM-ID    (N6)
1 #TOT-TIM-ACV   (P11.2)
1 #TOT-TIM-DB    (P11.2)
1 #DIFF          (A6)
*
END-DEFINE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INPUT #JCL-PARM
*
* * * * * * * REPORT HEADER * * * * * *
FORMAT  LS=133 PS=76
WRITE  TITLE LEFT 'PROGRAM:' *PROGRAM 3X
   'FORMAT REPORT FOR YEAR-END V/A PROCESSING FOR' #JCL-PROCESS-YYYY
   3X 'DATE:' *DAT4U 2X 'TIME:' *TIMX 5X 'PAGE:' *PAGE-NUMBER /
FORMAT (2) LS=170 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM:' *PROGRAM 3X
   'IN-FORCE SUMMARY OF V/A PROCESSING FOR ' #JCL-PROCESS-YYYY
   3X 'DATE:' *DAT4U 2X 'TIME:' *TIMX 5X 'PAGE:' *PAGE-NUMBER (2) /
FORMAT (4) LS=133 PS=76
WRITE  (4) TITLE LEFT 'PROGRAM:' *PROGRAM 3X
   'CASH-VALUE GREATER THAN ACV FOR ' #JCL-PROCESS-YYYY
   3X 'DATE:' *DAT4U 2X 'TIME:' *TIMX 5X 'PAGE:' *PAGE-NUMBER (4) /
FORMAT (5) LS=133 PS=76
WRITE  (5) TITLE LEFT 'PROGRAM:' *PROGRAM 3X
   'PTD PREMS PAID EXCEEDS CV ' #JCL-PROCESS-YYYY
   3X 'DATE:' *DAT4U 2X 'TIME:' *TIMX 5X 'PAGE:' *PAGE-NUMBER (5) /
FORMAT (6) LS=133 PS=76
WRITE  (6) TITLE LEFT 'PROGRAM:' *PROGRAM 3X
   'CONT FUND EXCEEDS CUR-ACQ' #JCL-PROCESS-YYYY
   3X 'DATE:' *DAT4U 2X 'TIME:' *TIMX 5X 'PAGE:' *PAGE-NUMBER (6) /
*
READ WORK 1 RECORD #EXTR-RECORD
  ADD +1 TO #RECS-READ
*
  ADD #BEG-OF-YR-ACV TO #TOT-BEG-ACV
  ADD #ACV           TO #TOT-END-ACV
*
  IF #RECS-READ = 1
    PERFORM DETAIL-PROCESSING
    PERFORM ACCUM-CELL-TOTALS
    ESCAPE TOP
  END-IF
*
  IF  (#PLAN-HIST        NE #LAST-PLAN)
   OR (#ISSUE-DATE-YYYY  NE #LAST-ISS-YYYY)
*  OR (#ISSUE-AGE        NE #LAST-ISS-AGE)     /* REMOVED 03/20/89
   OR (#ISSUE-AGE        NE #LAST-ISS-AGE)     /* reinstated 2/1998
    PERFORM CELL-PROCESSING
    MOVE 1 TO #I1   /* do in force sub totals
    PERFORM ACCUM-TOTALS
    MOVE 4 TO #I1   /* do cv > acv sub totals
    PERFORM ACCUM-TOTALS
  END-IF
*
  IF  #PLAN-HIST NE #LAST-PLAN
    NEWPAGE (2)
    WRITE (2) // 'PLAN TYPE' #LAST-PLAN
    WRITE (2) / '**** PLAN TYPE TOTALS *****' /
    MOVE 2 TO #I1   /* do in force plan totals
    PERFORM TOTAL-PROCESSING
    WRITE (2) / '**** PLAN TYPE TOTALS TERMINATED *****' /
    MOVE 7 TO #I1   /* do terminated plan totals
    PERFORM TOTAL-PROCESSING
    NEWPAGE (2)
*
    MOVE 2 TO #I1   /* do in force grand totals
    PERFORM ACCUM-TOTALS
    MOVE 5 TO #I1   /* do cv > acv grand totals
    PERFORM ACCUM-TOTALS
    MOVE 7 TO #I1   /* do terminated grand totals
    PERFORM ACCUM-TOTALS
  END-IF
*
  PERFORM DETAIL-PROCESSING
  PERFORM ACCUM-CELL-TOTALS
END-WORK
*
PERFORM CELL-PROCESSING
MOVE 1 TO #I1   /* do in force sub totals
PERFORM ACCUM-TOTALS
MOVE 4 TO #I1   /* do cv > acv sub totals
PERFORM ACCUM-TOTALS
*
NEWPAGE (2)
WRITE (2) // 'PLAN TYPE' #LAST-PLAN
WRITE (2) / '**** PLAN TYPE TOTALS *****' /
MOVE 2 TO #I1   /* do in force plan totals
PERFORM TOTAL-PROCESSING
WRITE (2) / '**** PLAN TYPE TOTALS TERMINATED *****' /
MOVE 7 TO #I1   /* do terminated plan totals
PERFORM TOTAL-PROCESSING
NEWPAGE (2)
*
MOVE 2 TO #I1   /* do in force grand totals
PERFORM ACCUM-TOTALS
MOVE 5 TO #I1   /* do cv > acv grand totals
PERFORM ACCUM-TOTALS
MOVE 7 TO #I1   /* do terminated grand totals
PERFORM ACCUM-TOTALS
*
NEWPAGE (2)
WRITE (2) / '**** GRAND TYPE TOTALS *****' /
MOVE 3 TO #I1   /* do in force grand totals
PERFORM TOTAL-PROCESSING
WRITE (2) / '**** GRAND TOTALS TERMINATED *****' /
MOVE 8 TO #I1   /* do terminated grand totals
PERFORM TOTAL-PROCESSING
*
WRITE 'TOTAL VALUATION TAPE/DISKETTE RECS = ' #VAL-TP-DISK-OUT
*
WRITE (5) //
 'Tot-prems-paid' #TOT-PTD-PREMIUMS-PAID-1 (EM=ZZZ,ZZZ,ZZZ.99)
 'Tot-cv'         #TOT-CSV-1       (EM=ZZZ,ZZZ,ZZZ.99)
 'Tot-acv'        #TOT-ACV-1       (EM=ZZZ,ZZZ,ZZZ.99)
 'Tot-face-amt'   #TOT-FACE-AMT-1  (EM=ZZZ,ZZZ,ZZZ.99)
 'Tot-cont-fund'  #TOT-CONT-FUND-1 (EM=ZZZ,ZZZ,ZZZ.99) /
 'Tot-curr-acq'   #TOT-CURR-ACQ-1  (EM=ZZZ,ZZZ,ZZZ.99)
 'Tot-db'         #TOT-DB-1        (EM=ZZZ,ZZZ,ZZZ.99)
*
WRITE (6) //
 'Tot-cv'         #TOT-CSV-2       (EM=ZZZ,ZZZ,ZZZ.99)
 'Tot-acv'        #TOT-ACV-2       (EM=ZZZ,ZZZ,ZZZ.99)
 'Tot-face-amt'   #TOT-FACE-AMT-2  (EM=ZZZ,ZZZ,ZZZ.99)
 'Tot-cont-fund'  #TOT-CONT-FUND-2 (EM=ZZZ,ZZZ,ZZZ.99) /
 'Tot-curr-acq'   #TOT-CURR-ACQ-2  (EM=ZZZ,ZZZ,ZZZ.99)
 'Tot-db'         #TOT-DB-2        (EM=ZZZ,ZZZ,ZZZ.99)
*
WRITE 'ACV TOTS BEG OF YR ACV = ' #TOT-BEG-ACV
WRITE 'ACV TOTS END OF YR ACV = ' #TOT-END-ACV
* WRITE 'net-db  = ' #NET-DB
* WRITE 'net-acv = ' #NET-ACV
  WRITE 'tot-tim-acv' #TOT-TIM-ACV
  WRITE 'tot-tim-db ' #TOT-TIM-DB
*
WRITE (2) // 'RIDER TOTALS'
WRITE (2) // '  TOTAL PLANS ='  #TOT-RID-PLANS
WRITE (2)  / '  TOTAL UNITS ='  #TOT-RID-UNITS
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE DETAIL-PROCESSING
* * * * * * * * * * * * * * * * * *
*
MOVE #PLAN-HIST       TO #LAST-PLAN
MOVE #ISSUE-DATE-YYYY TO #LAST-ISS-YYYY
MOVE #ISSUE-AGE       TO #LAST-ISS-AGE
*
COMPUTE #CV = #ACV - #CONT-FUND
RESET #AVL-TDIV
IF (#ISSUE-DATE GE 19970101) AND (#USES-1996-PREMS NE 'Y')
  COMPUTE #AVL-TDIV = #CONT-FUND - #CURR-ACQ
  IF #AVL-TDIV LT 0
    RESET #AVL-TDIV
  END-IF
END-IF
*
IF #ID-NUMBER = 124156                                            /* PM1
 AND #ISSUE-DATE = 20040413                                       /* PM1
 AND #DB = 226000                                                 /* PM1
   MOVE 10150.58 TO #AVL-TDIV                                     /* PM1
END-IF                                                            /* PM1
*
IF (#ISSUE-DATE GE 19970101) AND (#USES-1996-PREMS NE 'Y')
 AND (#CAP-POL-FLAG NE 'Y')
 AND (#TERM-CODE = ' ' OR = 'REI')
* AND (NOT #PLAN = 'LT' OR = 'RT' OR = 'SO' OR = 'FSO')                  /* YK1
* AND ((#PLAN-A1 LT 'U') OR (#PLAN-A1 GT 'Z'))   /* not level term II    /* YK1
 AND (NOT #PLAN = 'SO' OR = 'FSO')                                       /* YK1
 AND (NOT FUNCTION-TERM-POLICY(<#PLAN>))                                 /* YK1
  IF #ISSUE-DATE-YYYY GT #JCL-PROCESS-YYYY /* compute ptd-prems paid
    RESET #PTD-PREMIUMS-PAID
  ELSE
    IF #ISSUE-DATE-YYYY LT #JCL-PROCESS-YYYY
      COMPUTE #PTD-PREMIUMS-PAID =
         ((#JCL-PROCESS-YYYY - #ISSUE-DATE-YYYY) * #ANN-PREM)
               + ((12 - #ISSUE-DATE-MM) * (#ANN-PREM / 12))
    ELSE
      COMPUTE #PTD-PREMIUMS-PAID =
            (12 - #ISSUE-DATE-MM) * (#ANN-PREM / 12)
    END-IF
  END-IF
*
  IF   (#PTD-PREMIUMS-PAID GT (#ACV - #CONT-FUND))
*  AND (#PAY-STATUS LT '40')   /* Bypass Paid-up policies as per Crooks on 2/7/2008      DW1 PM3
   AND NOT (#PAY-STATUS = '45' OR = '44')                                                 /* PM3

    ADD #PTD-PREMIUMS-PAID TO #TOT-PTD-PREMIUMS-PAID-1
    ADD #CSV               TO #TOT-CSV-1
    ADD #ACV               TO #TOT-ACV-1
    ADD #FACE-AMT          TO #TOT-FACE-AMT-1
    ADD #CONT-FUND         TO #TOT-CONT-FUND-1
    ADD #CURR-ACQ          TO #TOT-CURR-ACQ-1
    ADD #DB                TO #TOT-DB-1
    ADD 1 TO #CNT-5
    DISPLAY (5) #CNT-5 'ID/NBR' #ID-NUMBER 'ISS/DT' #ISSUE-DATE
       'PTD/PREMS/PAID' #PTD-PREMIUMS-PAID
       #CSV #ACV
       #PLAN 'PAY/STAT' #PAY-STATUS
       'FACE/AMT' #FACE-AMT
       'CONT/FUND' #CONT-FUND
       'CURR/ACQ' #CURR-ACQ #DB
       'AVL/TDIV' #AVL-TDIV
  END-IF
*
  IF #CONT-FUND GT #CURR-ACQ
    ADD 1 TO #CNT-6
    ADD #CSV               TO #TOT-CSV-2
    ADD #ACV               TO #TOT-ACV-2
    ADD #FACE-AMT          TO #TOT-FACE-AMT-2
    ADD #CONT-FUND         TO #TOT-CONT-FUND-2
    ADD #CURR-ACQ          TO #TOT-CURR-ACQ-2
    ADD #DB                TO #TOT-DB-2
    DISPLAY (6) #CNT-6 'ID/NBR' #ID-NUMBER 'ISS/DT' #ISSUE-DATE
       'CONT/FUND' #CONT-FUND
       'CURR/ACQ' #CURR-ACQ
       'FACE/AMT' #FACE-AMT
       #PLAN 'PAY/STAT' #PAY-STATUS #ACV #CSV #DB
  END-IF
END-IF
*
RESET #PTD-PREMIUMS-PAID
*
RESET #CAP-LOAN
IF   (#INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q')
 AND (#CAP-POL-FLAG ='Y')
  MOVE #PRORATED-LOAN TO #CAP-LOAN
END-IF
*
IF (#ISSUE-DATE GE 19970101) AND (#USES-1996-PREMS NE 'Y')
 AND (#CAP-POL-FLAG NE 'Y')
 AND (#TERM-CODE = ' ' OR = 'REI')
 AND (#RID-PLAN NE ' ')      /* FBR (RIDER) ACCUMS
  ADD 1           TO #TOT-RID-PLANS
  ADD #RID-PLAN-2 TO #TOT-RID-UNITS
END-IF
*
IF #TERM-CODE = ' ' OR = 'REI'
* IF  (#PLAN = 'RT' OR = 'LT')    /* YTD PREMS PAID IS ALREADY ON HIST    /* YK1
*  OR ((#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z'))                           /* YK1
  IF FUNCTION-TERM-POLICY(<#PLAN>)                                        /* YK1
    PERFORM CALC-PREM-PD-RT-LT /* FOR TERMINATED TERM POLICIES
  END-IF
*
  MOVE #ID-NUMBER       TO #VTD-ID-NUMBER
  IF #PLAN-HIST = 'FLX' OR = 'LV2'
    MOVE #PLAN          TO #VTD-PLAN    /* use plan so actual plan
  ELSE
    MOVE #PLAN-HIST     TO #VTD-PLAN    /* use plan so actual plan
  END-IF
*
  MOVE #ISSUE-DATE      TO #VTD-ISSUE-DATE
  MOVE #ISSUE-AGE       TO #VTD-ISSUE-AGE
  MOVE #ANN-PREM        TO #VTD-ANN-PREM
  MOVE #MODE            TO #VTD-MODE
  MOVE #SMOKER-FLAG     TO #VTD-SMOKER-CODE
* MOVE #DB-HIST         TO #VTD-DB
  MOVE #DB              TO #VTD-DB
*
  MOVE #ID-NUMBER TO #TIM-ID      /* <<<<<<<<<<<<<<<<<<<
  ADD #ACV TO #TOT-TIM-ACV
  ADD #DB  TO #TOT-TIM-DB
*
  IF #ACV LT 0 OR #CSV LT 0 OR #CONT-FUND LT 0
    WRITE 'minus amts' #ID-NUMBER #ISSUE-DATE #ACV #CSV #CONT-FUND
  END-IF
*
  IF #ACV LT 0
    COMPUTE #VTD-ACV = #ACV * -1
    MOVE '-' TO #VTD-ACV-
  ELSE
    MOVE #ACV TO #VTD-ACV
    RESET #VTD-ACV-
  END-IF
*
  IF #CSV LT 0
    COMPUTE #VTD-CSV = #CSV * -1
    MOVE '-' TO #VTD-CSV-
  ELSE
    MOVE #CSV TO #VTD-CSV
    RESET #VTD-CSV-
  END-IF
*
  IF #CONT-FUND LT 0
    COMPUTE #VTD-CONT-FUND = #CONT-FUND * -1
    MOVE '-' TO #VTD-CONT-FUND-
  ELSE
    MOVE #CONT-FUND TO #VTD-CONT-FUND
    RESET #VTD-CONT-FUND-
  END-IF
*
  FIND (1) ST-V WITH ST-V.ID-NUMBER = #ID-NUMBER                  /* PM4
    FIND (1) CT-V WITH CT-V.CONTACT-ID = ST-V.MEMBER-CONTACT-ID   /* PM4
      #VTD-GENDER-CD := CT-V.GENDER-CD                            /* PM4
    END-FIND                                                      /* PM4
  END-FIND                                                        /* PM4
*
  MOVE #CURR-ACQ        TO #VTD-ACQ-BAL
  MOVE #PRORATED-LOAN   TO #VTD-PROR-LOAN-AMT
  MOVE #INT-RATE        TO #VTD-INT-RATE
  MOVE #FACE-AMT        TO #VTD-FAC-AMT
  MOVE #5-5-DEATH-BENEFIT TO  #VTD-5-5-DB
  WRITE WORK 2 #VALUATION-TAPE-DISKETTE
  ADD 1 TO #VAL-TP-DISK-OUT
END-IF
*
END-SUBROUTINE /* (0390)
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CELL-PROCESSING
* * * * * * * * * * * * * * * * *
*
IF  (#ACC-PLANS (1) NE 0)
  MOVE EDITED #ACC-ACV       (1) (EM=ZZZZZZZZZZ.99) TO #ACE-ACV
  MOVE EDITED #ACC-DB        (1) (EM=ZZZZZZZZZZ.99) TO #ACE-DB
  MOVE EDITED #ACC-YTD-PREMS (1) (EM=ZZZZZZZZZZ.99) TO #ACE-YTD-PREMS
  MOVE LEFT #ACE-ACV TO #ACE-ACV
  MOVE LEFT #ACE-DB  TO #ACE-DB
  MOVE LEFT #ACE-YTD-PREMS TO #ACE-YTD-PREMS
*
  COMPRESS    #LAST-PLAN
          ',' #LAST-ISS-YYYY
          ',' #LAST-ISS-AGE
          ',' #ACC-PLANS (1)
          ',' #ACE-ACV
          ',' #ACE-DB
          ',' #ACE-YTD-PREMS
               INTO #CELL-SUMMARY-FILE LEAVING NO
   WRITE WORK 3 #CELL-SUMMARY-FILE
*
  DISPLAY (2) NOTITLE
              'PL'         #LAST-PLAN
              'ISS/YR'     #LAST-ISS-YYYY
              'IS/AG'    #LAST-ISS-AGE  /* ADDED 2/1997
              'NUM/PLNS'   #ACC-PLANS              (1) (EM=ZZZ9)
              'FACE/AMT'   #ACC-FAC-AMT            (1) (EM=ZZ,ZZZ,ZZ9)
              'ACV'        #ACC-ACV                (1) (EM=ZZ,ZZZ,ZZ9)
              'CASH/SUR-VAL' #ACC-CSV              (1) (EM=ZZ,ZZZ,ZZZ)
              'CASH/VALUE' #ACC-CV                 (1) (EM=ZZ,ZZZ,ZZ9)
              'DEATH/BENE' #ACC-DB                 (1) (EM=ZZZ,ZZZ,ZZ9)
              'YTD/PREMS'  #ACC-YTD-PREMS          (1) (EM=ZZZ,ZZ9)
              'YTD/INT'    #ACC-YTD-INT            (1) (EM=ZZZ,ZZ9)
              'YTD/COI'    #ACC-YTD-COI            (1) (EM=ZZ,ZZ9)
*
              'PLNS/WITH/LNS' #ACC-PLANS-W-LOANS   (1) (EM=ZZZ9)
              'AMT/LOANS'  #ACC-LOAN-AMT           (1) (EM=ZZZZ,ZZ9)
              'PP/PLNS'   #ACC-PP-PLANS            (1) (EM=ZZZ9)
              'PUP/PLNS'  #ACC-PU-PLANS            (1) (EM=ZZZ9)
              'ANN/PREM'   #ACC-ANN-PREM           (1) (EM=ZZZ,ZZ9)
  IF #LAST-ISS-YYYY GE 1997
    WRITE (2) '  '
            'ACQ'       #ACC-YTD-ACQ   (1)(EM=ZZ,ZZ9)
            'MNT'       #ACC-YTD-MNT   (1)(EM=ZZ,ZZ9)
            'CNT-FND'   #ACC-CONT-FUND (1)(EM=ZZZZ,ZZ9)
            'ACQ-BAL'   #ACC-ACQ-BAL   (1)(EM=ZZZ,ZZ9)
            'AV-TDIV'   #ACC-AVL-TDIV  (1)(EM=ZZZZ,ZZ9)
            'CAP-LNS'   #ACC-CAP-LOANS (1)(EM=ZZZZ,ZZZ,ZZ9)
            '#DUS-POL'  #ACC-DUES-POLS (1)(EM=ZZ,ZZ9)
            'DUS-PD'    #ACC-YTD-DUES  (1)(EM=ZZ,ZZZ)
  END-IF
*
END-IF
*
IF #ACC-PLANS (4) NE 0
  DISPLAY (4) NOTITLE
              'PLN'        #LAST-PLAN
              'ISS/YR'     #LAST-ISS-YYYY
              'ISS/AGE'    #LAST-ISS-AGE
              'NUM/PLNS'   #ACC-PLANS              (4) (EM=ZZZ9)
              'MBR/SHPS'   #ACC-UNITS              (4) (EM=ZZZ9)
              'FACE/AMT'   #ACC-FAC-AMT            (4) (EM=ZZZZ,ZZ9)
              'CASH/VALUE' #ACC-CV                 (4) (EM=ZZZZ,ZZ9)
              'ACV'        #ACC-ACV                (4) (EM=ZZZZ,ZZ9)
              'DEATH/BENE' #ACC-DB                 (4) (EM=ZZZZ,ZZ9)
              'YTD/PREMS'  #ACC-YTD-PREMS          (4) (EM=ZZZZ,ZZ9)
              'YTD/INT'    #ACC-YTD-INT            (4) (EM=ZZZ,ZZ9)
              'YTD/COI'    #ACC-YTD-COI            (4) (EM=ZZZ,ZZ9)
*
              'PLNS/WITH/LNS' #ACC-PLANS-W-LOANS   (4) (EM=ZZZ9)
              'AMT/LOANS'  #ACC-LOAN-AMT           (4) (EM=ZZZZ,ZZ9)
              'PP/PLNS' #ACC-PP-PLANS              (4) (EM=ZZZ9)
              'PUP/PLNS'  #ACC-PU-PLANS            (4) (EM=ZZZ9)
              'ANN/PREM'   #ACC-ANN-PREM           (4) (EM=ZZZZ,ZZ9)
*
END-IF
*
END-SUBROUTINE /* (0558)
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE TOTAL-PROCESSING
* * * * * * * * * * * * * * * * * *
*
IF #ACC-PLANS (#I1) NE 0
  WRITE (2) 'TOT PLANS       =' #ACC-PLANS    (#I1) (EM=ZZZ,ZZ9)
  WRITE (2) 'TOT FACE AMT    =' #ACC-FAC-AMT  (#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT ACV         =' #ACC-ACV      (#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT CASH-SUR-VAL=' #ACC-CSV      (#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT CASH VALUE  =' #ACC-CV       (#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT DEATH BENE  =' #ACC-DB       (#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT YTD PREMS   =' #ACC-YTD-PREMS(#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT YTD INT     =' #ACC-YTD-INT  (#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT YTD COI     =' #ACC-YTD-COI  (#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT YTD ACQ     =' #ACC-YTD-ACQ  (#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT YTD MNT     =' #ACC-YTD-MNT  (#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT PLANS W LOANS = '
                               #ACC-PLANS-W-LOANS(#I1)
  WRITE (2) 'TOT AMT OF LOANS= ' #ACC-LOAN-AMT(#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT PRM PAY PLNS=' #ACC-PP-PLANS (#I1)
  WRITE (2) 'TOT PD-UP PLANS =' #ACC-PU-PLANS (#I1)
  WRITE (2) 'TOT CAP LOANS   =' #ACC-CAP-LOANS(#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT AVL-TDIV    =' #ACC-AVL-TDIV (#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT CONT-FUND   =' #ACC-CONT-FUND(#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT ACQ-BALANCE =' #ACC-ACQ-BAL  (#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
  WRITE (2) 'TOT NUM-DUES-PD =' #ACC-DUES-POLS(#I1)(EM=ZZZZZ,ZZZ,ZZZ)
  WRITE (2) 'TOT DUES-PAID   =' #ACC-YTD-DUES (#I1)(EM=ZZZZZ,ZZZ,ZZZ.99)
END-IF
*
IF   (#I1 = 2 OR = 3)      /* in force
 AND (#ACC-PLANS (#I1 + 3) NE 0)  /* cv > acv
  ADD 3 TO #I1
  NEWPAGE (4)
*
  IF #I1 = 5
    WRITE (4) // 'PLAN TYPE' #LAST-PLAN
    WRITE (4) // '**** PLAN TYPE  TOTALS ****' /
  ELSE
    WRITE (4) // '**** GRAND TOTALS ****' /
  END-IF
*
  WRITE (4) 'TOT PLANS       = ' #ACC-PLANS    (#I1)(EM=ZZZ,ZZ9)
  WRITE (4) 'TOT FACE AMT    = ' #ACC-FAC-AMT  (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT ACV         = ' #ACC-ACV      (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT CASH-SUR-VAL= ' #ACC-CSV      (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT CASH VALUE  = ' #ACC-CV       (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT DEATH BENE  = ' #ACC-DB       (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT YTD PREMS   = ' #ACC-YTD-PREMS(#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT YTD INT     = ' #ACC-YTD-INT  (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT YTD COI     = ' #ACC-YTD-COI  (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT YTD ACQ     = ' #ACC-YTD-ACQ  (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT YTD MNT     = ' #ACC-YTD-MNT  (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT PLANS W LOANS = '
                               #ACC-PLANS-W-LOANS(#I1)
  WRITE (4) 'TOT AMT OF LOANS= ' #ACC-LOAN-AMT (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT PRM PAY PLNS= ' #ACC-PP-PLANS (#I1)
  WRITE (4) 'TOT PD-UP PLANS = ' #ACC-PU-PLANS (#I1)
  WRITE (4) 'TOT CAP LOANS   = ' #ACC-CAP-LOANS(#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT AVL-TDIV    = ' #ACC-AVL-TDIV (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT CONT-FUND   = ' #ACC-CONT-FUND(#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT ACQ-BALANCE = ' #ACC-ACQ-BAL  (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  WRITE (4) 'TOT NUM-DUES-PD = ' #ACC-DUES-POLS(#I1)(EM=ZZZZ,ZZZ,ZZZ)
  WRITE (4) 'TOT DUES-PAID   = ' #ACC-YTD-DUES (#I1)(EM=ZZZZ,ZZZ,ZZZ.99)
  NEWPAGE (4)
END-IF
*
END-SUBROUTINE /* (0638)
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ACCUM-CELL-TOTALS
* * * * * * * * * * * * * * * * * *
*
IF #TERM-CODE = ' ' OR = 'REI'    /* IF IN FORCE AT Y/E
  ADD #DB-HIST   TO #ACC-DB      (1)
  ADD #NUM-SHIPS TO #ACC-UNITS   (1)
  ADD #FACE-AMT  TO #ACC-FAC-AMT (1)
  ADD #ACV-HIST  TO #ACC-ACV     (1)
*
  RESET #DIFF
  IF ((#ID-NUMBER NE #TIM-ID)
   OR (#ACV-HIST NE #VTD-ACV) OR (#DB-HIST NE #VTD-DB))
    AND (#ACV-HIST GE 0)
    IF (#ACV-HIST NE #VTD-ACV)
      MOVE 'ACV' TO #DIFF
    END-IF
*
    IF (#DB-HIST NE #VTD-DB)
      COMPRESS #DIFF 'DB' INTO #DIFF
    END-IF
*
    IF ((#DB-HIST - #VTD-DB) NE #AVL-TDIV)
     OR (#DIFF = MASK ('ACV'))
     OR (#ID-NUMBER NE #TIM-ID)
      DISPLAY #ID-NUMBER #ISSUE-DATE #DIFF
           #VTD-ACV #ACV-HIST #VTD-DB #DB-HIST #AVL-TDIV
    END-IF
  END-IF
*
  ADD #CV                   TO #ACC-CV             (1)
  ADD #YTD-PREMIUMS-PAID    TO #ACC-YTD-PREMS      (1)
  ADD #YTD-INTEREST-PAID    TO #ACC-YTD-INT        (1)
  ADD #YTD-COI-PAID         TO #ACC-YTD-COI        (1)
  ADD #YTD-ACQ-PAID         TO #ACC-YTD-ACQ        (1)
  ADD #YTD-MNT-PAID         TO #ACC-YTD-MNT        (1)
  ADD 1                     TO #ACC-PLANS          (1)
  ADD #PROR-LOAN-AMT        TO #ACC-LOAN-AMT       (1)
  ADD #ANN-PREM             TO #ACC-ANN-PREM       (1)
*
  IF (#PROR-LOAN-AMT NE 0) OR (#CAP-LOAN NE 0)
    ADD 1                   TO #ACC-PLANS-W-LOANS  (1)
  END-IF
*
  IF #PAY-STATUS LT '40'
    ADD 1                   TO #ACC-PP-PLANS       (1)
  ELSE
    ADD 1                   TO #ACC-PU-PLANS       (1)
  END-IF
*
  ADD #CAP-LOAN    TO #ACC-CAP-LOANS (1)
  ADD #CSV         TO #ACC-CSV       (1)
  ADD #AVL-TDIV    TO #ACC-AVL-TDIV  (1)
  ADD #CONT-FUND   TO #ACC-CONT-FUND (1)
  ADD #CURR-ACQ    TO #ACC-ACQ-BAL   (1)
  ADD #YTD-DUES-PAID  TO #ACC-YTD-DUES  (1)
* ADD #YTD-DUES    TO #ACC-YTD-DUES  (1)
  IF #DUES-FLAG ='Y'
    ADD 1 TO #ACC-DUES-POLS (1)
  END-IF
*   ADD #DUES-POLS   TO #ACC-DUES-POLS (1)
*
  IF #ACV NE #ACV-HIST
    WRITE 'ACV MISMATCH' #ID-NUMBER #ACV #ACV-HIST
  END-IF
*
  IF #CSV NE #CV-HIST
    WRITE 'CV MISMATCH' #ID-NUMBER #CSV #CV-HIST
  END-IF
*
  IF #CV-HIST GT #ACV-HIST    /* IF CASH-VALUE IS GREATER THAN ACV
    WRITE (4) #ID-NUMBER 'cv gtr than acv'
    ADD #DB-HIST              TO #ACC-DB             (4)
    ADD #NUM-SHIPS            TO #ACC-UNITS          (4)
    ADD #FACE-AMT             TO #ACC-FAC-AMT        (4)
    ADD #ACV-HIST             TO #ACC-ACV            (4)
    ADD #CV-HIST              TO #ACC-CV             (4)
    ADD #YTD-PREMIUMS-PAID    TO #ACC-YTD-PREMS      (4)
    ADD #YTD-INTEREST-PAID    TO #ACC-YTD-INT        (4)
    ADD #YTD-COI-PAID         TO #ACC-YTD-COI        (4)
    ADD #YTD-ACQ-PAID         TO #ACC-YTD-ACQ        (4)
    ADD #YTD-MNT-PAID         TO #ACC-YTD-MNT        (4)
    ADD 1                     TO #ACC-PLANS          (4)
    ADD #PROR-LOAN-AMT        TO #ACC-LOAN-AMT       (4)
    ADD #ANN-PREM             TO #ACC-ANN-PREM       (4)
*
    IF (#PROR-LOAN-AMT NE 0) OR (#CAP-LOAN NE 0)
      ADD 1                   TO #ACC-PLANS-W-LOANS  (4)
    END-IF
*
    IF #PAY-STATUS LT '40'
      ADD 1                   TO #ACC-PP-PLANS       (4)
    ELSE
      ADD 1                   TO #ACC-PU-PLANS       (4)
    END-IF
*
    ADD #CAP-LOAN    TO #ACC-CAP-LOANS (4)
    ADD #CSV         TO #ACC-CSV       (4)
    ADD #AVL-TDIV    TO #ACC-AVL-TDIV  (4)
    ADD #CONT-FUND   TO #ACC-CONT-FUND (4)
    ADD #CURR-ACQ    TO #ACC-ACQ-BAL   (4)
    ADD #YTD-DUES-PAID  TO #ACC-YTD-DUES  (4)
*   ADD #YTD-DUES    TO #ACC-YTD-DUES  (4)
    IF #DUES-FLAG ='Y'
      ADD 1 TO #ACC-DUES-POLS (4)
    END-IF
*   ADD #DUES-POLS   TO #ACC-DUES-POLS (4)
*
  END-IF
END-IF
*
IF   (#TERM-CODE NE ' ')      /* ACCUM TERMINATION TOTS
 AND (#TERM-CODE NE 'REI')
  ADD #DB-HIST              TO #ACC-DB             (7)
  ADD #NUM-SHIPS            TO #ACC-UNITS          (7)
  ADD #FACE-AMT             TO #ACC-FAC-AMT        (7)
  ADD #ACV-HIST             TO #ACC-ACV            (7)
  ADD #CV-HIST              TO #ACC-CV             (7)
  ADD #YTD-PREMIUMS-PAID    TO #ACC-YTD-PREMS      (7)
  ADD #YTD-INTEREST-PAID    TO #ACC-YTD-INT        (7)
  ADD #YTD-COI-PAID         TO #ACC-YTD-COI        (7)
  ADD #YTD-ACQ-PAID         TO #ACC-YTD-ACQ        (7)
  ADD #YTD-MNT-PAID         TO #ACC-YTD-MNT        (7)
  ADD 1                     TO #ACC-PLANS          (7)
  ADD #PROR-LOAN-AMT        TO #ACC-LOAN-AMT       (7)
  ADD #ANN-PREM             TO #ACC-ANN-PREM       (7)
*
  IF (#PROR-LOAN-AMT NE 0) OR (#CAP-LOAN NE 0)
    ADD 1                   TO #ACC-PLANS-W-LOANS  (7)
  END-IF
*
  IF #PAY-STATUS LT '40'
    ADD 1                   TO #ACC-PP-PLANS       (7)
  ELSE
    ADD 1                   TO #ACC-PU-PLANS       (7)
  END-IF
*
  ADD #CAP-LOAN    TO #ACC-CAP-LOANS (7)
  ADD #CSV         TO #ACC-CSV       (7)
  ADD #AVL-TDIV    TO #ACC-AVL-TDIV  (7)
  ADD #CONT-FUND   TO #ACC-CONT-FUND (7)
  ADD #CURR-ACQ    TO #ACC-ACQ-BAL   (7)
END-IF
*
END-SUBROUTINE /* (0706)
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ACCUM-TOTALS
* * * * * * * * * * * * * * * *
*
ADD #ACC-DB             (#I1) TO #ACC-DB             (#I1 + 1)
ADD #ACC-UNITS          (#I1) TO #ACC-UNITS          (#I1 + 1)
ADD #ACC-FAC-AMT        (#I1) TO #ACC-FAC-AMT        (#I1 + 1)
ADD #ACC-ACV            (#I1) TO #ACC-ACV            (#I1 + 1)
ADD #ACC-CV             (#I1) TO #ACC-CV             (#I1 + 1)
ADD #ACC-YTD-PREMS      (#I1) TO #ACC-YTD-PREMS      (#I1 + 1)
ADD #ACC-YTD-INT        (#I1) TO #ACC-YTD-INT        (#I1 + 1)
ADD #ACC-YTD-COI        (#I1) TO #ACC-YTD-COI        (#I1 + 1)
ADD #ACC-YTD-ACQ        (#I1) TO #ACC-YTD-ACQ        (#I1 + 1)
ADD #ACC-YTD-MNT        (#I1) TO #ACC-YTD-MNT        (#I1 + 1)
ADD #ACC-PLANS          (#I1) TO #ACC-PLANS          (#I1 + 1)
ADD #ACC-LOAN-AMT       (#I1) TO #ACC-LOAN-AMT       (#I1 + 1)
ADD #ACC-ANN-PREM       (#I1) TO #ACC-ANN-PREM       (#I1 + 1)
ADD #ACC-PLANS-W-LOANS  (#I1) TO #ACC-PLANS-W-LOANS  (#I1 + 1)
ADD #ACC-PP-PLANS       (#I1) TO #ACC-PP-PLANS       (#I1 + 1)
ADD #ACC-PU-PLANS       (#I1) TO #ACC-PU-PLANS       (#I1 + 1)
ADD #ACC-CAP-LOANS      (#I1) TO #ACC-CAP-LOANS      (#I1 + 1)
ADD #ACC-CSV            (#I1) TO #ACC-CSV            (#I1 + 1)
ADD #ACC-AVL-TDIV       (#I1) TO #ACC-AVL-TDIV       (#I1 + 1)
ADD #ACC-CONT-FUND      (#I1) TO #ACC-CONT-FUND      (#I1 + 1)
ADD #ACC-ACQ-BAL        (#I1) TO #ACC-ACQ-BAL        (#I1 + 1)
ADD #ACC-DUES-POLS      (#I1) TO #ACC-DUES-POLS      (#I1 + 1)
ADD #ACC-YTD-DUES       (#I1) TO #ACC-YTD-DUES       (#I1 + 1)
*
RESET #ACC-DB             (#I1)
      #ACC-UNITS          (#I1)
      #ACC-FAC-AMT        (#I1)
      #ACC-ACV            (#I1)
      #ACC-CV             (#I1)
      #ACC-YTD-PREMS      (#I1)
      #ACC-YTD-INT        (#I1)
      #ACC-YTD-COI        (#I1)
      #ACC-YTD-ACQ        (#I1)
      #ACC-YTD-MNT        (#I1)
      #ACC-PLANS          (#I1)
      #ACC-LOAN-AMT       (#I1)
      #ACC-ANN-PREM       (#I1)
      #ACC-PLANS-W-LOANS  (#I1)
      #ACC-PP-PLANS       (#I1)
      #ACC-PU-PLANS       (#I1)
      #ACC-CAP-LOANS      (#I1)
      #ACC-CSV            (#I1)
      #ACC-AVL-TDIV       (#I1)
      #ACC-CONT-FUND      (#I1)
      #ACC-ACQ-BAL        (#I1)
      #ACC-YTD-DUES       (#I1)
      #ACC-DUES-POLS      (#I1)
*
END-SUBROUTINE /* (0852)
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-PREM-PD-RT-LT
* * * * * * * * * * * * * * * *
*
IF #ISSUE-DATE-YYYY GT #JCL-PROCESS-YYYY
  RESET #YTD-PREMIUMS-PAID
ELSE
  IF #ISSUE-DATE-YYYY LT #JCL-PROCESS-YYYY
    MOVE #ANN-PREM TO #YTD-PREMIUMS-PAID
  ELSE
   COMPUTE #YTD-PREMIUMS-PAID = (12 - #ISSUE-DATE-MM) * (#ANN-PREM / 12)
  END-IF
END-IF
*
END-SUBROUTINE
*
END
