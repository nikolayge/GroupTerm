* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: C2V40PVP   *** batch projection driver
************************************************************************
*                       MODIFICATION LOG
* USER   DATE  TAG     REASON
* DRW 09282004 DW1     add CREDIT CARD processing
* SAG 10282005 RH1 AB Replace CALL to Cobol with CALLNAT to Natural
* SAG 20060427 SAG-AB - Change hexadecimal test for plain test for zero.
* bz  06/09/2013  Rebranding (Search for AAFMAA)
* TMT 06/16/2014 TT1  Contact Normalization - DOB and Sex
************************************************************************
*
INCLUDE C2V40CVP /* COMMON DEFINE DATA batch 'VP'
*
INCLUDE GONERCXX     /* NATURAL ERROR ROUTINE
*
INCLUDE C2V41CVP     /* COMMON LOGIC FOR batch "VP"
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-PAGE-1
* * * * * * * * * * * * * * *
*
RESET #SCR-PROJ-LINE (*)
*
RESET #TOT-POLS
RESET #TOT-UNITS
RESET #TOT-DB
*
FOR #I1 1 TO 5
  IF   (#PROJECTION-VIEW.STATUS (#I1) = 'D')
   AND (#PROJECTION-VIEW.OWNERSHIP-FLAG (#I1) =
                     #PROJECTION-VIEW.OWNERSHIP-FLAG (#IDX))
    ADD 1 TO #TOT-POLS
    ADD #PROJECTION-VIEW.NUM-MBRSHIPS (#I1) TO #TOT-UNITS
*
    IF  (#PROJECTION-VIEW.ONLINE-ACTION-GN    = '2')
     OR (#PROJECTION-VIEW.ONLINE-ACTION (#I1) = '1')
      ADD #PROJECTION-VIEW.FACE-AMOUNT (#I1) TO #TOT-DB
    ELSE
      IF #PROJECTION-VIEW.CONVERSION-FLAG (#I1) = 'N' OR = 'C'
        ADD #PROJECTION-VIEW.DEATH-BENEFIT (#I1) TO #TOT-DB
      ELSE
        COMPUTE #TOT-DB = #TOT-DB
          + (#PROJECTION-VIEW.FACE-AMOUNT (#I1) * 1.8)
      END-IF
    END-IF
  END-IF
END-FOR
*
MOVE *DATN TO #WORK-DATE
PERFORM DATE-REFORMAT
MOVE #W-DATE-EDITED TO #SCR-AS-OF-DATE
*
IF #SCR-OVR-MTHLY-VAL = 'Y'
  COMPRESS 'VALUE ADDED MONTHLY CALCS AS OF' #SCR-AS-OF-DATE
                                                  INTO #SCR-TOP-LINE
ELSE
  COMPRESS 'VALUE ADDED LIFE PROJECTION AS OF' #SCR-AS-OF-DATE
                                                  INTO #SCR-TOP-LINE
END-IF
*
MOVE #L-SWITCHED-NAME TO #SCR-PROJ-NAME
MOVE 1 TO #PROJ-IDX
*
COMPRESS '                          FOR' #SCR-PROJ-NAME
               INTO #SCR-PROJ-LINE (#PROJ-IDX)
MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
*
ADD 1 TO #PROJ-IDX
MOVE #PROJECTION-VIEW.ISSUE-DATE (#IDX) TO #WORK-DATE
PERFORM DATE-REFORMAT
MOVE #W-DATE-EDITED TO #SCR-ISSUE-DT
MOVE #PROJECTION-VIEW.ISSUE-AGE (#IDX) TO #SCR-ISSUE-AGE
COMPRESS ' CERTIFICATE NO.' #SCR-POL-NUM (#ISC) '('
                                        INTO #SCR-PROJ-LINE (#PROJ-IDX)
COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) #PROJECTION-VIEW.NUM-MBRSHIPS (#IDX)
                            INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
IF #PROJECTION-VIEW.NUM-MBRSHIPS (#IDX) = 1
  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) 'UNIT)'
                                   INTO #SCR-PROJ-LINE (#PROJ-IDX)
ELSE
  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) 'UNITS)'
                                   INTO #SCR-PROJ-LINE (#PROJ-IDX)
END-IF
*
COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '       ISSUED' #SCR-ISSUE-DT
       'AT AGE' #SCR-ISSUE-AGE       INTO #SCR-PROJ-LINE (#PROJ-IDX)
*
ADD 1 TO #PROJ-IDX
*
IF   (#PROJECTION-VIEW.PAY-STATUS (#IDX) = '47')
 AND ((#PROJECTION-VIEW.ONLINE-ACTION-GN    = '2')
     OR (#PROJECTION-VIEW.ONLINE-ACTION (#IDX) = '1'))
  MOVE EDITED #L-PTY-PR-CSV (1) (EM=Z,ZZ9) TO #SCR-MODAL-PREM
  COMPRESS '          LIFE MEMBERSHIP --- SINGLE PAYMENT OF $'
        #SCR-MODAL-PREM INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
ELSE
  IF #PROJECTION-VIEW.PLAN (#IDX) = 'OL'
    MOVE '  ORDINARY' TO #SCR-PLAN
  ELSE
    IF #PROJECTION-VIEW.PLAN (#IDX) = '20P'
      MOVE '    20-PAY' TO #SCR-PLAN
    ELSE
      IF #PROJECTION-VIEW.PLAN (#IDX) = '30P'
        MOVE '    30-PAY' TO #SCR-PLAN
      ELSE
        MOVE '     7-PAY' TO #SCR-PLAN
      END-IF
    END-IF
  END-IF
*
  MOVE EDITED #PROJECTION-VIEW.ANNUAL-PREM (#IDX) (EM=ZZZ.99)
                                                 TO #SCR-ANN-PREM
  COMPRESS '$' #SCR-ANN-PREM INTO #SCR-ANN-PREM LEAVING NO
*
  IF #PROJECTION-VIEW.PAY-STATUS (#IDX) = '44'
    MOVE '(EXTENDED TERM INSURANCE)' TO #SCR-MODE
  ELSE
    IF #PROJECTION-VIEW.PAY-STATUS (#IDX) GT '40'
      MOVE '(PAID-UP)' TO #SCR-MODE
    ELSE
      IF #PROJECTION-VIEW.MODE (#IDX) = 'A' OR = '1'    /* DW1
        MOVE #PROJECTION-VIEW.ANNUAL-PREM (#IDX) TO #MODAL-PREM
        MOVE 'ANNUALLY)' TO #SCR-MODE-LBL
      ELSE
        IF #PROJECTION-VIEW.MODE (#IDX) = 'S' OR = '2'   /* DW1
          COMPUTE #MODAL-PREM = #PROJECTION-VIEW.ANNUAL-PREM (#IDX) / 2
          MOVE 'SEMI-ANNUALLY)' TO #SCR-MODE-LBL
        ELSE
          IF #PROJECTION-VIEW.MODE (#IDX) = 'Q' OR = '4'  /* DW1
            COMPUTE #MODAL-PREM = #PROJECTION-VIEW.ANNUAL-PREM(#IDX) / 4
            MOVE 'QUARTERLY)' TO #SCR-MODE-LBL
          ELSE
           COMPUTE #MODAL-PREM = #PROJECTION-VIEW.ANNUAL-PREM(#IDX) / 12
            MOVE 'MONTHLY)' TO #SCR-MODE-LBL
          END-IF
        END-IF
      END-IF
*
      MOVE EDITED #MODAL-PREM (EM=ZZZ.99) TO #SCR-MODAL-PREM
      COMPRESS '$' #SCR-MODAL-PREM INTO #SCR-MODAL-PREM LEAVING NO
      COMPRESS '(PAID' #SCR-MODAL-PREM INTO #SCR-MODE
      COMPRESS #SCR-MODE #SCR-MODE-LBL INTO #SCR-MODE
    END-IF
  END-IF
*
  COMPRESS #SCR-PLAN 'LIFE WITH ANNUAL PREMIUM OF' #SCR-ANN-PREM
          #SCR-MODE                      INTO #SCR-PROJ-LINE (#PROJ-IDX)
END-IF
*
IF  (#L-SHOW-LOAN-REPAID = 'N')
 OR (#L-REIN-CODE = 'NC' OR = 'AV')
  MOVE FALSE TO #SHOW-LOAN-REPAID
ELSE
  IF   ((#PROJECTION-VIEW.LOAN-AMOUNT NE 0)
        AND ((#PROJECTION-VIEW.INTEREST-RATE - .5)
                                  LT  (#SCR-OVR-GROWTH-RATE / 1000)))
    OR   ((#PROJECTION-VIEW.LOAN-AMOUNT-2 NE 0)
        AND ((#CUR-VAR-INT-RT - .5)
                                  LT  (#SCR-OVR-GROWTH-RATE / 1000)))
    MOVE TRUE TO #SHOW-LOAN-REPAID
  ELSE
    MOVE FALSE TO #SHOW-LOAN-REPAID
  END-IF
END-IF
*
ADD 1 TO #PROJ-IDX
*
IF   (#PROJECTION-VIEW.CONVERSION-FLAG (#IDX) = 'N')
 AND (#PROJECTION-VIEW.ISSUE-DATE (#IDX) GE 19860701)
  COMPRESS '  INSURANCE CATEGORY          GUARANTEED'
                                        INTO #SCR-PROJ-LINE (#PROJ-IDX)
ELSE
  COMPRESS '                              GUARANTEED'
                                        INTO #SCR-PROJ-LINE (#PROJ-IDX)
END-IF
*
COMPUTE #RATE-CALC = #L-GROWTH-RATE / 1000
MOVE EDITED #RATE-CALC (EM=Z9.999) TO #RATE-DISP
*
IF #SHOW-LOAN-REPAID
  IF #PROJECTION-VIEW.RESTRICT-MBR-SW = 'Y'
    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '            RESTRICTED MEMBER'
               INTO #SCR-PROJ-LINE (#PROJ-IDX)
  ELSE
    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX)
      '    CURRENT CREDITING RATE OF' #RATE-DISP '%'
                INTO #SCR-PROJ-LINE (#PROJ-IDX)
  END-IF
ELSE
  IF #PROJECTION-VIEW.RESTRICT-MBR-SW = 'Y'
    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '         RESTRICTED'
                 INTO #SCR-PROJ-LINE (#PROJ-IDX)
  ELSE
    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '       CURRENT CREDITING'
                 INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
  END-IF
END-IF
*
ADD 1 TO #PROJ-IDX
*
IF   (#PROJECTION-VIEW.CONVERSION-FLAG (#IDX) = 'N')
 AND (#PROJECTION-VIEW.ISSUE-DATE (#IDX) GE 19860701)
  IF #PROJECTION-VIEW.SMOKER-FLAG (#IDX) = 'S'
    COMPRESS '        SMOKER              MINIMUM AMOUNTS'
             INTO #SCR-PROJ-LINE (#PROJ-IDX)
  ELSE
    COMPRESS '      NON-SMOKER            MINIMUM AMOUNTS'
             INTO #SCR-PROJ-LINE (#PROJ-IDX)
  END-IF
ELSE
    COMPRESS '                            MINIMUM AMOUNTS'
             INTO #SCR-PROJ-LINE (#PROJ-IDX)
END-IF
*
IF #SHOW-LOAN-REPAID
  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '     IF LOAN UNPAID   IF LOAN R'
           'EPAID'       INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
ELSE
  IF #PROJECTION-VIEW.RESTRICT-MBR-SW = 'Y'
    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '           MEMBER'
              INTO #SCR-PROJ-LINE (#PROJ-IDX)
  ELSE
    COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '    RATE OF' #RATE-DISP '%'
           INTO #SCR-PROJ-LINE (#PROJ-IDX)
  END-IF
END-IF
*
ADD 1 TO #PROJ-IDX
MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
MOVE '         MEMBER  YEARS IN    CASH     DEATH'
           TO #SCR-PROJ-LINE (#PROJ-IDX)
*
IF #SHOW-LOAN-REPAID
  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX)
   '  NET CASH NET DEATH   CASH   DEATH' INTO #SCR-PROJ-LINE (#PROJ-IDX)
ELSE
  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '     CASH    DEATH'
          INTO #SCR-PROJ-LINE (#PROJ-IDX)
END-IF
*
ADD 1 TO #PROJ-IDX
MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
MOVE ' MN/YEAR  AGE     FORCE     VALUE   BENEFIT     VALUE   BENEFIT'
               TO #SCR-PROJ-LINE (#PROJ-IDX)
*
IF #SHOW-LOAN-REPAID
  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '   VALUE BENEFIT'
               INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
END-IF
*
RESET #TOT-FOOTERS
*
IF #TOT-POLS GT 1
  ADD 3 TO #TOT-FOOTERS
END-IF
*
IF  (#PROJECTION-VIEW.LOAN-AMOUNT   GT 0)
 OR (#PROJECTION-VIEW.LOAN-AMOUNT-2 GT 0)
  IF #TOT-POLS LE 1
    ADD 1 TO #TOT-FOOTERS      /* 1 LOAN LINE
  END-IF
*
  IF #SHOW-LOAN-REPAID
    ADD 2 TO #TOT-FOOTERS      /* 2 NET DEATH BENEFIT LINE
  END-IF
END-IF
*
MOVE #PROJ-IDX TO #TOT-TXT-LINES
ADD  #L-NUM-DTLS TO #TOT-TXT-LINES
ADD #TOT-FOOTERS TO #TOT-TXT-LINES
*
IF   (#SCR-OVR-MTHLY-VAL NE 'Y')
 AND (#TOT-TXT-LINES GT #PAGE-LENGTH)
  COMPUTE #LINES-TO-DELETE = #TOT-TXT-LINES - #PAGE-LENGTH
*
  FOR #I1 2 TO #L-NUM-DTLS
    MOVE #L-PTY-MEM-AGE (#I1) TO #MEM-AGE
*
    IF   (#L-PTY-PR-DB (#I1) = #L-PTY-PR-DB (#I1 - 1)) /* NO DB INCREASE
     AND (#MEM-AGE-1 NE 0)
      MOVE 999.99  TO #L-PTY-ANN-PRM (#I1)
      SUBTRACT 1 FROM #LINES-TO-DELETE
    END-IF
*
    IF  (#I1 GE (#L-NUM-DTLS - 1))
     OR (#L-PTY-PR-DB (#I1) NE #L-PTY-PR-DB (#I1 - 1))
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF #LINES-TO-DELETE GT 0
    FOR #I1 10 TO 2 STEP -1
      MOVE #L-PTY-MEM-AGE (#I1) TO #MEM-AGE
      IF NOT (#MEM-AGE-1 = 0 OR = 5)
       AND (#L-PTY-ANN-PRM (#I1) NE 999.99)
        MOVE 999.99  TO #L-PTY-ANN-PRM (#I1)
        SUBTRACT 1 FROM #LINES-TO-DELETE
*
        IF #LINES-TO-DELETE = 0
          ESCAPE BOTTOM
        END-IF
      END-IF
    END-FOR
  END-IF
*
  IF #LINES-TO-DELETE GT 0
    FOR #I1 #L-NUM-DTLS TO 2 STEP -1
      MOVE #L-PTY-MEM-AGE (#I1) TO #MEM-AGE
      IF  (#MEM-AGE = 96)
       OR (#MEM-AGE-1 = 0)
       AND (#L-PTY-ANN-PRM (#I1) NE 999.99)
        IGNORE
      ELSE
        IF #L-PTY-ANN-PRM (#I1) NE 999.99
          MOVE 999.99  TO #L-PTY-ANN-PRM (#I1)
          SUBTRACT 1 FROM #LINES-TO-DELETE
*
          IF #LINES-TO-DELETE = 0
            ESCAPE BOTTOM
          END-IF
        END-IF
      END-IF
    END-FOR
  END-IF
*
  IF #LINES-TO-DELETE GT 0
    FOR #I1 #L-NUM-DTLS TO 2 STEP -1
      IF   (#MEM-AGE NE 96)
       AND (#L-PTY-ANN-PRM (#I1) NE 999.99)
        MOVE 999.99  TO #L-PTY-ANN-PRM (#I1)
        SUBTRACT 1 FROM #LINES-TO-DELETE
*
        IF #LINES-TO-DELETE = 0
          ESCAPE BOTTOM
        END-IF
      END-IF
    END-FOR
  END-IF
END-IF
*
ADD 1 TO #PROJ-IDX
*
MOVE 1 TO #DTL-IDX
PERFORM BUILD-PAGE-COMMON
*
END-SUBROUTINE  /* (0024)
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FORMAT-MTHLY-DTL
* * * * * * * * * * * * * * * * *
*
PERFORM FORMAT-YEARLY-DTL
*
MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
COMPRESS '   BOM ACV + PRM - PRMDF - COI  + INT  = EOM ACV  - CRED  = E'
         'OM CSV   EOM-DB' INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
*
ADD 1 TO #PROJ-IDX
MOVE 11 TO #I1
*
REPEAT UNTIL #PROJ-IDX GT #PAGE-LENGTH
          OR #DTL-IDX  GT #L-NUM-DTLS
          OR (#DTL-IDX GT 27)
          OR #L-DTL-MNTHLY-IND (#DTL-IDX) NE 'M'
**                                                  /* SAG-AB 20060427 START
**  IF #L-PTM-BOM-ACV (#DTL-IDX) = MASK('0404040'.) /* TO BYPASS EMPTY LINE
**      OR (#L-PTM-BOM-ACV (#DTL-IDX) NE MASK(NNNNNNN.))
    IF #L-PTM-BOM-ACV (#DTL-IDX) = 0 /* TO BYPASS EMPTY LINE
        OR (#L-PTM-BOM-ACV (#DTL-IDX) NE MASK(NNNNNNNN))
**                                                  /* SAG-AB 20060427 end
    ADD 1 TO #DTL-IDX
    ESCAPE TOP
  END-IF
*
  MOVE EDITED #L-PTM-BOM-ACV   (#DTL-IDX) (EM=-ZZZZZZ.99)
    TO #MD-BOM-ACV
  MOVE EDITED #L-PTM-PREMIUM   (#DTL-IDX) (EM=ZZ9.99)
    TO #MD-PREMIUM
  MOVE EDITED #L-PTM-PR-DEFIC  (#DTL-IDX) (EM=ZZZ.99)
    TO #MD-PR-DEFIC
  MOVE EDITED #L-PTM-COI       (#DTL-IDX) (EM=ZZZ.99)
    TO #MD-COI
  MOVE EDITED #L-PTM-INT       (#DTL-IDX) (EM=ZZZ.99)
    TO #MD-INT
  MOVE EDITED #L-PTM-EOM-ACV   (#DTL-IDX) (EM=-ZZZZZZ.99)
    TO #MD-EOM-ACV
  MOVE EDITED #L-PTM-EOM-CSV   (#DTL-IDX) (EM=-ZZZZZZ.99)
    TO #MD-EOM-CSV
  MOVE EDITED #L-PTM-EOM-DB    (#DTL-IDX) (EM=ZZZZZZ.99)
    TO #MD-EOM-DB
  COMPUTE #W-CRED = #L-PTM-EOM-ACV (#DTL-IDX) -
    #L-PTM-EOM-CSV (#DTL-IDX)
  MOVE EDITED #W-CRED (EM=-ZZZZ.99)        TO #MD-CRED
*
  MOVE #MONTHLY-DTL TO #SCR-PROJ-LINE (#PROJ-IDX)
*
  IF #SCR-OVR-DISPLAY-CALCS = 'Y'
    MOVE #L-CALC-MO-IND (#I1 + 5)  TO #MO-IND
    MOVE #L-CALC-AMT (#I1)     TO #SNG-PREM-CURR
    MOVE #L-CALC-AMT (#I1 + 1) TO #ZSPPRM-CURR
    MOVE #L-CALC-AMT (#I1 + 2) TO #ZSPEXP-CURR
    MOVE #L-CALC-AMT (#I1 + 3) TO #PREM-PAID-YTD
    MOVE #L-CALC-AMT (#I1 + 4) TO #INT-DB
    MOVE #L-CALC-AMT (#I1 + 5) TO #NAR
    ADD 6 TO #I1
*
    MOVE '*' TO #CGA-SCR-COMMAND
*
    IF #OVR-ISSUE-DATE GT 19860630
      INPUT TEXT 'MONTHLY INTERNAL CALCS FOR 1ST YEAR SELECTED'
          USING MAP 'C2V16MVP'
    ELSE
      INPUT TEXT 'MONTHLY INTERNAL CALCS FOR 1ST YEAR SELECTED'
          USING MAP 'C2V15MVP'
    END-IF
*
    IF #CGA-SCR-COMMAND NE '*'
      IF #CGA-SCR-COMMAND = 'RF'
        MOVE TRUE TO #REFRESH
        ESCAPE ROUTINE
      ELSE
        FETCH 'G1000PXX'
      END-IF
    END-IF
  END-IF
*
  ADD 1 TO #DTL-IDX
  ADD 1 TO #PROJ-IDX
END-REPEAT  /* (0019)
*
END-SUBROUTINE  /* (0006)
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FORMAT-YEARLY-DTL
* * * * * * * * * * * * * * * * * *
*
REPEAT UNTIL (#PROJ-IDX GT #PAGE-LENGTH)
          OR (#DTL-IDX  GT #L-NUM-DTLS)
          OR (#DTL-IDX GT 27)
          OR (#L-DTL-MNTHLY-IND (#DTL-IDX) = 'M')
*
  IF #L-PTY-ANN-PRM (#DTL-IDX) = 999.99  /* DELETE THIS LINE
    ADD 1 TO #DTL-IDX
    ESCAPE TOP
  END-IF
*
  IF #L-PTY-YEAR (#DTL-IDX) = 0
    COMPUTE #W-AGE = *DATN - #DATE-OF-BIRTH             /* TT1
    DIVIDE 10000 INTO #W-AGE
    MOVE EDITED #W-AGE (EM=ZZZ) TO #YD-MEM-AGE
*
    IF   (#SCR-OVR-MTHLY-VAL NE 'Y')
     AND (#L-PTY-YEAR (#DTL-IDX + 1) = #CURR-YYYY)
      MOVE 'CURRENT' TO #YD-YEAR
    ELSE
      COMPRESS #CURR-MM-A '/' #CURR-YYYY INTO #YD-YEAR LEAVING NO
    END-IF
  ELSE
    MOVE #L-PTY-YEAR (#DTL-IDX) TO #YD-YEAR
    COMPRESS #L-ISS-DT-MM-A (#IDX) '/' #YD-YEAR INTO #YD-YEAR
                                                          LEAVING NO
    MOVE RIGHT #L-PTY-MEM-AGE   (#DTL-IDX) TO #YD-MEM-AGE
  END-IF
*
  IF   (#CGA-ORIG-SUFFIX NE 'NEG')       /* DO NOT SHOW NEGATIVE MIN CV
   AND (#L-PTY-MIN-CSV (#DTL-IDX) LT 0)  /* UNLESS SUFFIX IS 'NEG'
    RESET #L-PTY-MIN-CSV (#DTL-IDX)
  END-IF
*
  MOVE RIGHT #L-PTY-POL-AGE   (#DTL-IDX) TO #YD-POL-AGE
  MOVE EDITED #L-PTY-MIN-CSV (#DTL-IDX) (EM=-ZZZZZZ9) TO #YD-MIN-CSV
*
  MOVE RIGHT #L-PTY-MIN-DB    (#DTL-IDX) TO #YD-MIN-DB
*
  IF   (#L-PTY-PR-CSV (#DTL-IDX) LE 0)
   OR  ((#PROJECTION-VIEW.ISSUE-DATE (#IDX) GE 19910409)
         AND (#L-PTY-POL-AGE (#DTL-IDX) LT 2)
         AND (NOT (PAY-STATUS (#IDX) = '47' OR = '48')))
    MOVE '      0'                      TO #YD-PR-CSV
  ELSE
    MOVE RIGHT #L-PTY-PR-CSV (#DTL-IDX) TO #YD-PR-CSV
  END-IF
*
  MOVE RIGHT #L-PTY-PR-DB     (#DTL-IDX) TO #YD-PR-DB
*
  IF #L-PTY-PR-CSV-NL (1) LT 999999
    IF   (#L-PTY-PR-CSV-NL (#DTL-IDX) LE 0)
     OR  ((#PROJECTION-VIEW.ISSUE-DATE (#IDX) GE 19910409)
           AND (#L-PTY-POL-AGE (#DTL-IDX) LT 2)
           AND (NOT (PAY-STATUS (#IDX) = '47' OR = '48')))
      IGNORE
    ELSE
      MOVE RIGHT #L-PTY-PR-CSV-NL (#DTL-IDX) TO #YD-PR-CSV-NL
      MOVE RIGHT #L-PTY-PR-DB-NL  (#DTL-IDX) TO #YD-PR-DB-NL
    END-IF
  END-IF
*
  MOVE #YEARLY-DTL TO #SCR-PROJ-LINE (#PROJ-IDX)
*
  ADD 1 TO #DTL-IDX
  ADD 1 TO #PROJ-IDX
END-REPEAT  /* (0286)
*
END-SUBROUTINE  /* (0492)
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-PAGE-COMMON
* * * * * * * * * * * * * * * * *
*
IF #SCR-OVR-MTHLY-VAL = 'Y'
  PERFORM FORMAT-MTHLY-DTL
*
  IF #REFRESH            /* IF 'RF' WAS ENTERED DURING SHOW CALCS
    ESCAPE ROUTINE
  END-IF
*
  IF #DTL-IDX GT #L-NUM-DTLS
    MOVE 'RF' TO #CGA-SCR-COMMAND
  END-IF
  ESCAPE ROUTINE
ELSE
  PERFORM FORMAT-YEARLY-DTL
END-IF
*
IF   (#SCR-OVR-MTHLY-VAL NE 'Y')
 AND (#TOT-FOOTERS GT 0)
  IF #TOT-POLS GT 1
    MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
    COMPRESS 'THE ABOVE PROJECTION IS FOR 1 OF YOUR' #TOT-POLS
      'AAFMAA CERTIFICATES'
                                      INTO #SCR-PROJ-LINE (#PROJ-IDX)
    ADD 1 TO #PROJ-IDX
    MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
    COMPRESS 'REPRESENTING' #TOT-UNITS 'UNITS.  THE TOTAL DEATH BENEFIT'
       'OF  ALL THESE UNITS AS  OF THIS' INTO #SCR-PROJ-LINE (#PROJ-IDX)
    ADD 1 TO #PROJ-IDX
*
    MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
*
    MOVE ROUNDED #TOT-DB TO #TOT-WORK
    MOVE EDITED #TOT-WORK (EM=ZZZ,ZZZ) TO #TOT-DISP
    COMPRESS '$' #TOT-DISP '.' INTO #TOT-DISP LEAVING NO
    COMPRESS 'DATE IS' #TOT-DISP
                                    INTO #SCR-PROJ-LINE (#PROJ-IDX)
    ADD 1 TO #PROJ-IDX
  END-IF
*
  RESET #TOT-LOAN
  IF  #PROJECTION-VIEW.LOAN-AMOUNT GT 0
    ADD #PROJECTION-VIEW.LOAN-AMOUNT TO #TOT-LOAN
  END-IF
*
  IF #PROJECTION-VIEW.LOAN-AMOUNT-2 GT 0
    ADD #PROJECTION-VIEW.LOAN-AMOUNT-2 TO #TOT-LOAN
  END-IF
*
  IF #TOT-LOAN GT 0
    MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
    MOVE ROUNDED #TOT-LOAN TO #TOT-WORK
    MOVE EDITED #TOT-WORK (EM=ZZ,ZZZ) TO #TOT-DISP
    COMPRESS '$' #TOT-DISP '.' INTO #TOT-DISP LEAVING NO
*
    IF #TOT-POLS = 1
      COMPRESS 'THE TOTAL LOAN AGAINST THIS POLICY IS'
          #TOT-DISP                 INTO #SCR-PROJ-LINE (#PROJ-IDX)
    ELSE
      SUBTRACT 1 FROM #PROJ-IDX
      COMPRESS #SCR-PROJ-LINE (#PROJ-IDX)
               'THE TOTAL LOAN AGAINST YOUR' #TOT-UNITS 'UNITS IS'
          #TOT-DISP                 INTO #SCR-PROJ-LINE (#PROJ-IDX)
    END-IF
*
    ADD 1 TO #PROJ-IDX
    IF #SHOW-LOAN-REPAID
      MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
*
      COMPRESS 'THE NET DEATH BENEFIT AMOUNT  AFTER DEDUCTING YOUR'
         'CURRENT LOAN RESULTS  IN A' INTO #SCR-PROJ-LINE (#PROJ-IDX)
      ADD 1 TO #PROJ-IDX
      MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
*
      SUBTRACT #PROJECTION-VIEW.LOAN-AMOUNT FROM #TOT-DB
      MOVE ROUNDED #TOT-DB TO #TOT-WORK
      MOVE EDITED #TOT-WORK (EM=ZZZ,ZZZ) TO #TOT-DISP
      COMPRESS '$' #TOT-DISP '.' INTO #TOT-DISP LEAVING NO
      COMPRESS 'PAYABLE BENEFIT OF' #TOT-DISP '(LESS ANY OTHER'
         'OUTSTANDING INDEBTEDNESS).' INTO #SCR-PROJ-LINE (#PROJ-IDX)
      ADD 1 TO #PROJ-IDX
    END-IF
  END-IF
END-IF
*
IF  (#CGA-ORIG-SUFFIX = 'OVR' OR = 'OVP')
 OR (#CGA-ORIG-SUFFIX = MASK ('IP')) /* INT PROJ
 OR (#CGA-ORIG-ID = 0)               /* BLANK VP
  MOVE 'RF'  TO #CGA-SCR-COMMAND
ELSE
  MOVE 'VP'  TO #CGA-SCR-COMMAND
END-IF
*
MOVE #CGA-ORIG-ID     TO #CGA-SCR-ID
MOVE #CGA-ORIG-SUFFIX TO #CGA-SCR-SUFFIX
*
END-SUBROUTINE  /* (0318)
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-PAGE-2
*
RESET #SCR-CV (*)
*
RESET #SCR-PROJ-LINE (1:22)
*
MOVE 1 TO #PROJ-IDX
*
MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
MOVE '         MEMBER  YEARS IN    CASH     DEATH      CASH     DEATH'
              TO #SCR-PROJ-LINE (#PROJ-IDX)
*
IF #SHOW-LOAN-REPAID
  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '    CASH   DEATH'
              INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
END-IF
*
ADD 1 TO #PROJ-IDX
MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
MOVE ' MN/YEAR  AGE     FORCE     VALUE   BENEFIT     VALUE   BENEFIT'
           TO #SCR-PROJ-LINE (#PROJ-IDX)
*
IF #SHOW-LOAN-REPAID
  COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '   VALUE BENEFIT'
           INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
END-IF
*
ADD 1 TO #PROJ-IDX
*
PERFORM BUILD-PAGE-COMMON
*
END-SUBROUTINE  /* (0006)
*
END
