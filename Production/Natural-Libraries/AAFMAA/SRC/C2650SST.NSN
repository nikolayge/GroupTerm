* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* PGM-ID: C2650SST      ** DISPLAY Relationship/Ownership info
* callnat'd in C2600PST and G2A00PCR
********************************************************************************
*                       MODIFICATION LOG                                       *
* USER   DATE      TAG     REASON                                              *
* TMT  06/16/2014  NONE    Rewritten                                           *
* vxt  04/07/2016  vt3     /Ticket 4401 - show a mec policy)                   *
* VXT  05/03/2016  VT4     /tICKET 4487 /                                      *
* bz   06/28/2016  bz-OI-4387 sort by ISSUE-DATE  20712,71854,52069,104908)    *  
********************************************************************************
*
DEFINE DATA
*
PARAMETER
1 #CGA-SCR-COMMAND (A2)
1 #CGA-SCR-ID      (N9)
1 #CGA-SCR-SUFFIX  (A3)
1 #CN-NUMBER   (N6)
1 REDEFINE #CN-NUMBER
  2 #CN-NUMBER-A (A6)
1 #CGA-MF-SCR-COMMAND  (A2)
1 #CGA-MF-SCR-PARM-1   (A9)
*
* LOCAL USING CVALULXX                /* PM5
* LOCAL USING ADDA0001          /* Address parameter area ADDN0001  NG1
LOCAL USING AUCACP01
* LOCAL USING CVALULXX
LOCAL USING ADDA0001
LOCAL USING OBJLCONT
LOCAL USING POSAGET
LOCAL USING POSLROLE
LOCAL
1 #ALL-RELATIONS (N2)
1 #NUMBER-OF-RELATIONS-2 (I2)
1 #POLICY-RELATIONS-2 (1:*) /*Output
  2 ADD-USER (A8)
  2 ADD-DATE (N8.0)
  2 ADD-TIME (N7.0)
  2 LAST-UPD-USER (A8)
  2 LAST-UPD-DATE (N8.0)
  2 LAST-UPD-TIME (N7.0)
  2 POLICY-NUMBER (A16)
  2 CONTACT-ID (N8.0)
  2 RELATION (N2.0)
  2 REFERENCE-NUMBER (N6.0)
  2 REFERENCE-TYPE (A1)
  2 PRIMARY-OWNER (A1)
  2 NI-OWNER (A1)
  2 DESIGNATION-ID (N8.0)
  2 SETTLEMENT-TYPE (A1)
  2 BENE-FRACTION (A10)
  2 BENE-PERCENT (F8)
  2 BENE-RESTRICTED (A1)
  2 BENE-TYPE (A1)
  2 BENE-SHARE-TYPE (A1)
  2 POLICY-STATUS (A1)
  2 OWNERSHIP-RESTRICT (A1)
  2 OWNERSHIP-RESTRICT-DATE (N8)
  2 VERSION (N8)
*
1 CT2-V VIEW OF A-CONTACTS
  2 CONTACT-ID (N8)
  2 ID-NUMBER (N6)
  2 GENDER-CD (A1)
  2 DATE-OF-BIRTH (N8)
  2 SSN (N9)
*
1 POLICY-CONTACTS VIEW OF A-POLICY-CONTACTS
  2 RELATION
  2 POLICY-NUMBER
  2 CONTACT-ID
*
1 FR-V VIEW OF A-FIRS
  2 DEPN-SSN (14)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID
  2 RANK
  2 ACCESS-AUTH-CODE
  2 MILITARY-SERVICE
  2 DATE-OF-DEATH
  2 SPOUSE-CONTACT-ID (N8)
  2 SSN-SP
  2 SSN
  2 REDEFINE SSN
    3 SSN-A   (A9)
  2 PROCESS-IND
  2 INTRO-FLAG
  2 LINKED-CN (60)
  2 REDEFINE LINKED-CN
    3 LINKED-CN-A    (A6/40)
  2 NUMBER-MEMBERSHIPS
  2 ISSUE-DATE     (9)
  2 REDEFINE ISSUE-DATE
    3 ISSUE-DT-OCC  (9)
      4 ISS-DT-CENT     (N2)
      4 ISS-DT-YYMMDD   (N6)
  2 SPLIT-IND      (9)
  2 STATUS         (9)
  2 NUM-MBRSHIPS   (9)
  2 OWNERSHIP-FLAG (9)
  2 PAY-STATUS     (9)
  2 PLAN           (9)
  2 POLICY-ID      (9)
  2 mec-ind        (9)                       /* vt3
  2 FACE-AMOUNT    (N7.2/9)
  2 REDEFINE FACE-AMOUNT
    3 FACE-AMT-OCC  (9)
      4 FACE-AMT-FIL  (N1)
      4 FACE-AMT-K    (N3)
      4 FACE-AMT-REST (N3.2)
*
1 #AFFL-ONLY   (L)
1 #MAX-OWNERS   (I2) CONSTANT <15>
1 #TEMP         (N6)
1 #FOUND-FR     (L)
1 #FOUND-LINKED (L)
1 #USE-2ND-ADDR-FOR-BILLING  (L)
1 #ORIG-COMMAND    (A3)
1 #CR-COMMAND-CV (C/100)
1 #TEXT     (A78) /* LENGTH OF THE SCREEN
1 #TEXT-40  (A40)
1 I  (I4)
1 J  (I4)
1 K  (I4)
1 L  (I4)
1 M  (I4) INIT <1>
1 N  (I4)
1 O  (I4) INIT <1>
1 P  (I4)
1 Q  (I4)
1 R  (I4)
1 #CN-INDEX   (I4)
1 #INSURED-CIS (N8/1:*)
1 #ADDRESS (A) DYNAMIC
* #CR-LINES -- LINES ON MAP
1 #CR-COMMAND    (A2/100)
1 #CR-CV        (C/100)              /* Line Control Variables
1 #CURRENT-CN   (N6/100)
1 #CURRENT-INDEX(N1/100)
1 #CR-LINES      (A75/100)      /* Lines on map
1 REDEFINE #CR-LINES
  2 #CR-OCC     (100)
    3 #CR-POL     (A14)
    3 #CR-FIL1    (A1)
    3 #CR-INFO    (A60)
    3 REDEFINE #CR-INFO
      4 #CR-INFO-31  (A31)
      4 #CR-INFO-29  (A29)
    3 REDEFINE #CR-INFO
      4 #CR-INFO-23  (A23)
      4 #CR-INFO-CN-SSN-DOB  (A37)
    3 REDEFINE #CR-INFO
      4 #CR-INFO-ORG  (A34)
      4 #CR-INFO-CN-SSN-DOB-ORG  (A26)
    3 REDEFINE #CR-INFO
      4 #CR-INFO-ORG-33 (A33)
      4 #CR-INFO-CN-SSN-DOB-ORG-27  (A27)
*      
1 #LINE-NUM (I4)
1 #INDEX   (I4)
1 #HOLD-CN (N6)
1 #HOLD-CI (N8)
1 #ORIGINAL-CN (N6)
1 #ORIGINAL-CI (N8)
1 #FIRST-ITERATION   (L) INIT <TRUE>
1 #OWNER-ESTABLISHED (L)
1 #IS-MEMBER         (L)
1 #HOLD-POLICY-NUM  (A16)
1 #PREVIOUS-OWNER   (N6)
1 #INSURED-POLICIES (A16/1:*)
1 #LINKED-POLICIES  (A16/1:*)
1 #LINKED-MEMBER-CN (N6)
1 #LINKED-MEMBER-CI (N8)
1 #INSURED-CN       (N6)
1 #OWNER-CN         (N6/1:*)
1 #NUM-OWNERS       (I4)
1 #NUM-POLICIES     (I4)
1 #NEED-TO-COMPARE  (L)
1 #LETTER           (A1)
1 #SPOUSE-CONTACT-ID   (N8)
1 #YYYYMMDD         (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY   (N4)
  2 #MM     (N2)
  2 #DD     (N2)
*
1 #HOLD-ROLES-2(1:*)
  2 #HOLD-OWNERS-2      (N6/1:#MAX-OWNERS) /* FIRST INDEX IS ALWAYS Primary Owner
  2 #HOLD-INSURED-2     (N6)
  2 #HOLD-LINKED-CN-2   (N6)
  2 #POLICIES           (1:*)
    3 #POLICY-NUMBERS-2     (A16)
    3 #POLICY-STATUSES-2    (A1)
*
1 #NUMBER-OF-POLICIES(I4) INIT <1>
1 #NUMBER-OF-OWNERS(I4)      INIT <1>
1 AT-V VIEW OF A-APPL-TRACKING
  2 ID-NUMBER
  2 CONTACT-ID          /* PM3
  2 DATE-OF-BIRTH
  2 ACTION-FLAG
  2 INTRO-FLAG
  2 NAME
  2 SSN
  2 REDEFINE SSN
    3 SSN-A   (A9)
1 #PERSON  (N8)
1 #CVALUSXX-PARMS
  2 #SUFFIX                    (A3)
  2 #AS-OF-YYYYMMDD            (N8)
  2 #LOAN-BAL                  (N7.2/9)
  2 #LOAN-BAL-2                (N7.2/9)
  2 #ACC-INT                   (N7.2/9)
  2 #ACC-INT-2                 (N7.2/9)
  2 #CSV                       (N7.2/9)
  2 #CVALUE                    (N7.2/9)
  2 #LVALUE                    (N7.2/9)
  2 #MCSV                      (N7.2/9)
  2 #DB                        (N7.2/9)
  2 #ANN-PREM                  (N7.2/9)
  2 #FACE-AMT                  (N7.2/9)
  2 #TPP                       (N7.2/9)
1 #HOLD-ROLES (1:*)
  2 #HOLD-INSURED        (N6)
  2 #HOLD-PRIMARY-OWNER  (N6)
  2 #HOLD-LINKED-CN      (N6)
  2 #HOLD-LINKED-CI      (N8)
  2 #HOLD-MEMBER         (N6)
  2 #HOLD-CO-OWNERS      (N6/1:*)
  2 #POLICY-NUMBER       (A16)
  2 #POLICY-STATUS       (A1)
1 #NUMBER-OF-CO-OWNERS (I2)
1 #ALL-OWNERS             (N6/1:*)
*
1 #NUMBER-OF-LINES (I4) CONSTANT <20>
1 #LINE           (N7) INIT <1>
1 #BLANK          (A1) CONSTANT <' '>
1 #LINKED-ROLES   (1:*)
  2 #LINKED-INSURED-CN   (N6)
  2 #LINKED-INSURED-CI   (N6)
  2 #POLICIES     (1:*)
    3 #LINK-OWNER-CN   (N6)
    3 #LINK-#OWNER-CI   (N8)
*
1 #ORIGINAL-SSN  (N9)
1 #SCR-DOB (A10)
1 #SCR-ISSUE-DATE (A10)
1 #SCR-FACE-AMOUNT (A) DYNAMIC
1 #mec         (a3)
*
1 #i           (I2)
1 #j           (I2)
1 #k           (I2)
1 v_A          (A) DYNAMIC
1 N08          (N08)
1 Srt          (N8/100)
1 #x           (N2)
1 #y           (N2)
1 #first       (N2)
END-DEFINE
* * * * * * * * * * * * * * * * *

MOVE #CGA-SCR-COMMAND TO #ORIG-COMMAND
MOVE (AD=P) TO #CR-COMMAND-CV (*)
MOVE '*' TO #CGA-SCR-COMMAND
*
#HOLD-CN     := #ORIGINAL-CN := #CN-NUMBER
PERFORM GET-STATUS-FILE
#ORIGINAL-SSN := ST-V.SSN
#SPOUSE-CONTACT-ID := ST-V.SPOUSE-CONTACT-ID
#ORIGINAL-CI  := #HOLD-CI
*
PERFORM CHECK-FOR-PAYER
*
CALLNAT 'POSNPRDS' #ORIGINAL-CI
  InsuredRole /* ONLY PULL INSURED
  #NUMBER-OF-RELATIONS
  #POLICY-RELATIONS (*)
  #ISNS(*)
  #MSG
*
RESIZE ARRAY #HOLD-ROLES-2.#POLICIES TO (1:*,1:1)
*
FOR I 1 TO #NUMBER-OF-RELATIONS
  IF #POLICY-RELATIONS.POLICY-STATUS(I) <> 'D'
    ESCAPE TOP
  END-IF
  ADD 1 TO K
  EXPAND ARRAY #HOLD-ROLES-2 TO (1:K)
  #HOLD-ROLES-2.#POLICY-NUMBERS-2(K,#NUMBER-OF-POLICIES)   := #POLICY-RELATIONS.POLICY-NUMBER(I)
  #HOLD-ROLES-2.#POLICY-STATUSES-2(K,#NUMBER-OF-POLICIES)  := #POLICY-RELATIONS.POLICY-STATUS(I)
  CALLNAT 'POSNCNTS' #POLICY-RELATIONS.POLICY-NUMBER(I)
    #ALL-RELATIONS
    #NUMBER-OF-RELATIONS-2
    #POLICY-RELATIONS-2(*)
    #ISNS(*)
    #MSG
  FOR J 1 TO #NUMBER-OF-RELATIONS-2
    DECIDE ON FIRST VALUE OF #POLICY-RELATIONS-2.RELATION(J)
      VALUE PrimaryOwner
        #HOLD-OWNERS-2(K,1)   := #POLICY-RELATIONS-2.REFERENCE-NUMBER(J) /* First Index always Primary Owner
      VALUE CoOwner
        ADD 1 TO #NUMBER-OF-OWNERS
        #HOLD-OWNERS-2(K,#NUMBER-OF-OWNERS) := #POLICY-RELATIONS-2.REFERENCE-NUMBER(J)
      VALUE InsuredRole
        #HOLD-INSURED-2(K) := #POLICY-RELATIONS-2.REFERENCE-NUMBER(J)
      VALUE MemberRole, LinkedMember
        #HOLD-LINKED-CN-2(K) := #POLICY-RELATIONS-2.REFERENCE-NUMBER(J)
      VALUE PayorRole
        ignore
      NONE
        IGNORE
    END-DECIDE
  END-FOR

  FOR J 1 TO K
    IF #HOLD-OWNERS-2(J,1) = 0
      #TEXT := '**Missing Primary Owner.  To view ALL policies info add Primary Owner**'
      ESCAPE BOTTOM
    END-IF
  END-FOR

*  Need to sort arrays for comparing if more then then 2 Owners
  IF #NUMBER-OF-OWNERS >= 2
    PERFORM SORT-OWNERS-ARRAY
  END-IF
  RESET INITIAL #NUMBER-OF-OWNERS
END-FOR
*
PERFORM COMBINE-POLICIES-AND-OWNERS
*

* * * * * Only for first iteration * * * * * *
ADD 1 TO #LINE-NUM
IF ST-V.PROCESS-IND = 'C'
  #CR-POL (#LINE-NUM) :=  ' Non-Mbr:'
ELSE
  DECIDE ON FIRST VALUE ST-V.INTRO-FLAG
    VALUE 'S'  #CR-POL(#LINE-NUM)  := ' Spouse:'
    VALUE 'K'  #CR-POL(#LINE-NUM)  := ' Child:'
    VALUE 'G'  #CR-POL(#LINE-NUM)  := ' Grandchild:'
    NONE       #CR-POL(#LINE-NUM)  := ' Member:'
      #IS-MEMBER := TRUE
  END-DECIDE
END-IF
PERFORM GET-NAME-AND-ADDRESS
PERFORM GET-CN-ACCESS-LEVEL
IF NOT #IS-MEMBER
  IF ST-V.PROCESS-IND = 'C'
    #HOLD-CI :=  F-GET-CONTACT-ID(<#ORIGINAL-CN>)
  ELSE
    ADD 1 TO #LINE-NUM
    #CR-POL(#LINE-NUM)  := ' Linked Mbr:'
    IF K = 0
      #HOLD-CI := F-GET-CONTACT-ID(<ST-V.LINKED-CN(1)>)
    ELSE
      #HOLD-CI := F-GET-CONTACT-ID(<#HOLD-LINKED-CN-2(1)>)
    END-IF
    PERFORM GET-NAME-AND-ADDRESS
  END-IF
END-IF
* * * * * End of First iteration logic * * * * * * * *


PERFORM GET-STATUS-FILE
*
FOR I 1 TO K

  /* Owners
  FOR J 1 TO 10
    IF #HOLD-ROLES-2.#HOLD-OWNERS-2(I,J) = 0
      ESCAPE BOTTOM
    END-IF
    ADD 1 TO #LINE-NUM
    IF J = 1
      #CR-POL(#LINE-NUM) := ' Owner:'
    ELSE
      #CR-POL(#LINE-NUM) := ' Co-Owner:'
    END-IF
    MOVE (AD=I) TO #CR-CV (#LINE-NUM)
*     MOVE (AD=DI) TO #CR-COMMAND-CV (#LINE-NUM)
    IF #HOLD-INSURED-2(I) = #HOLD-OWNERS-2(I,J)
      IF #IS-MEMBER
        #CR-INFO-23(#LINE-NUM) := 'Member'
      ELSE
        #HOLD-CI := F-GET-CONTACT-ID(<#HOLD-OWNERS-2(I,J)>)
        PERFORM GET-NAME-AND-ADDRESS
      END-IF
    ELSE
      #HOLD-CI := F-GET-CONTACT-ID(<#HOLD-OWNERS-2(I,J)>)
      PERFORM GET-NAME-AND-ADDRESS
    END-IF
  END-FOR

  /* Policies
  FOR J 1 TO #NUMBER-OF-POLICIES
    IF #HOLD-ROLES-2.#POLICY-NUMBERS-2(I,J) = #BLANK OR
        #HOLD-ROLES-2.#HOLD-OWNERS-2(I,1) = 0
      ESCAPE TOP
    END-IF
    PERFORM GET-POLICY-INFO
  END-FOR
  PERFORM GENERATE-STAR-LINE
  IF #CR-LINES(#LINE-NUM -1) = #CR-LINES(#LINE-NUM)
    RESET #CR-LINES(#LINE-NUM)
    #LINE-NUM :=  #LINE-NUM - 1
  END-IF
END-FOR


PERFORM GENERATE-STAR-LINE

PERFORM FIND-LINKED-POLICIES
*
PERFORM GET-AT-RECORDS
*
PERFORM GET-SPOUSE-MBR
*
* PERFORM GET-FIR-RECORDS
*
REPEAT UNTIL #LINE > 100 OR #CR-LINES(#LINE) = #BLANK
  IF #LINE-NUM >= (#LINE + 20)
    #TEXT := 'Press ENTER for more relationships'
  END-IF
  PERFORM sbr_Sort
  INPUT TEXT #TEXT MARK *#CR-COMMAND (1) USING MAP 'C2655MST'
  RESET #TEXT
  PERFORM PROCESS-COMMANDS
  ADD #NUMBER-OF-LINES TO #LINE
END-REPEAT

DEFINE SUBROUTINE SORT-OWNERS-ARRAY
* -----------------------
/* Sorting for Comparison.  Only need this if there is 3 or more owners
/* Skip first index because first index is always Primary owner
FOR L 2 TO #MAX-OWNERS
  #TEMP := #HOLD-OWNERS-2(K,L) /* was i now k
END-ALL
SORT BY #TEMP DESCENDING USING L
  ADD 1 TO M
  #HOLD-OWNERS-2(K,M) := #TEMP
END-SORT
RESET INITIAL M
END-SUBROUTINE
* ----------------

DEFINE SUBROUTINE COMBINE-POLICIES-AND-OWNERS
* -------------------------------------------
*
FOR I 1 TO K
  FOR N O TO K
    IF I = N OR #HOLD-OWNERS-2(I,1) = 0
      ESCAPE TOP
    END-IF
    IF #HOLD-ROLES-2.#HOLD-OWNERS-2(I,*)
        = #HOLD-ROLES-2.#HOLD-OWNERS-2(N,*)
      ADD 1 TO #NUMBER-OF-POLICIES
      EXPAND ARRAY #HOLD-ROLES-2.#POLICIES TO (1:*,1:#NUMBER-OF-POLICIES)
      #POLICY-NUMBERS-2(I,#NUMBER-OF-POLICIES)  := #POLICY-NUMBERS-2(N,1)
      #POLICY-STATUSES-2(I,#NUMBER-OF-POLICIES) := #POLICY-STATUSES-2(N,1)
      RESET #HOLD-ROLES-2.#HOLD-OWNERS-2(N,*)
      RESET #HOLD-ROLES-2.#POLICIES(N,*)
    END-IF
  END-FOR
  ADD 1 TO O
END-FOR
RESET INITIAL O
*
END-SUBROUTINE
* ------------

DEFINE GET-POLICY-INFO
* --------------------
RESET #INDEX
EXAMINE FULL ST-V.POLICY-ID(*) FOR FULL #HOLD-ROLES-2.#POLICY-NUMBERS-2(I,J) GIVING INDEX #INDEX
if #INDEX gT 0                                        /* VT4 05/03/2016
  IF ST-V.STATUS(#INDEX) = 'D'
    #FACE-AMT(*) := ST-V.FACE-AMOUNT(*)
    #AS-OF-YYYYMMDD := *DATN
    #SUFFIX         := 'NTP'
    CALLNAT 'CVALUSXX'
      ST-V.ID-NUMBER
      #SUFFIX
      #AS-OF-YYYYMMDD
      #LOAN-BAL   (*)
      #LOAN-BAL-2 (*)
      #ACC-INT    (*)
      #ACC-INT-2  (*)
      #CSV        (*)
      #CVALUE     (*)
      #LVALUE     (*)
      #MCSV       (*)
      #DB         (*)
      #ANN-PREM   (*)
      #FACE-AMT   (*)
      #TPP        (*)
*
    ADD 1 TO #LINE-NUM
*   MOVE (AD=I) TO #CR-CV (#LINE-NUM)
    MOVE (AD=DI) TO #CR-COMMAND-CV (#LINE-NUM)
    #CURRENT-CN(#LINE-NUM)    := #HOLD-INSURED-2(I)
    #CURRENT-INDEX(#LINE-NUM) := #INDEX
    #CR-POL(#LINE-NUM) := #HOLD-ROLES-2.#POLICY-NUMBERS-2(I,J)
    #YYYYMMDD := ST-V.ISSUE-DATE(#INDEX)
    srt(#LINE-NUM) := #YYYYMMDD                                        /* bz-OI-4387
    COMPRESS FULL #MM #DD #YYYY INTO #SCR-ISSUE-DATE WITH '/'
    MOVE EDITED #FACE-AMT(#INDEX)(EM=Z,ZZZ,ZZ9.99) TO #SCR-FACE-AMOUNT
    COMPRESS '$' #SCR-FACE-AMOUNT INTO #SCR-FACE-AMOUNT LEAVING NO
    if ST-V.mec-ind(#index) = 'Y'                    /* vt3  \/
      move 'MEC' to #mec
    else
      reset #mec
    end-if                                           /* vt3  /\
    COMPRESS FULL
      'Issued:' #SCR-ISSUE-DATE
      ' Plan:' ST-V.PLAN(#INDEX)
      ' Face Amount:' #SCR-FACE-AMOUNT
      INTO #CR-INFO(#LINE-NUM)
    compress #CR-INFO(#LINE-NUM) #mec into #cr-info(#line-num) leaving no                                       /* vt3
  END-IF
END-IF                                         /* VT4 05/03/2016
IF HAS-BENE-RESTRICTION(<#HOLD-ROLES-2.#POLICY-NUMBERS-2(I,J)>)
  ADD 1 TO #LINE-NUM
  #CR-LINES(#LINE-NUM) := 'Restricted Beneficiary'
END-IF
END-SUBROUTINE
* ------------


* DISPLAY ST-V.FACE-AMOUNT(#INDEX)(EM=Z,ZZZ,ZZ9.99)

DEFINE SUBROUTINE GET-STATUS-FILE
* -------------------------------
FIND(1) ST-V WITH ID-NUMBER = #HOLD-CN
  IF NO RECORDS FOUND
    ESCAPE ROUTINE
  END-NOREC
  #HOLD-CN := ID-NUMBER
  #HOLD-CI := MEMBER-CONTACT-ID
END-FIND
END-SUBROUTINE
* -----------


DEFINE SUBROUTINE GET-ADDRESS
* ---------------------------
RESET #PDA-ADDRESS
#ADD-TYPE    := 'P'
#ADD-CONTACT-ID := #HOLD-CI
CALLNAT 'ADDN0001' #PDA-ADDRESS
IF #ADD-LINE-1 = #BLANK
  #ADD-LINE-1 := '*NO ADDRESS*'
END-IF
COMPRESS #ADD-LINE-1 #ADD-LINE-2 #ADD-LINE-3  INTO #ADDRESS
IF *LENGTH(#ADDRESS) > 65 /* Screen length
  COMPRESS #ADD-LINE-1 #ADD-LINE-2 INTO #CR-INFO (#LINE-NUM)
  ADD 1 TO #LINE-NUM
  COMPRESS #ADD-LINE-3 INTO #CR-INFO (#LINE-NUM)
ELSE
  COMPRESS #ADDRESS INTO #CR-INFO (#LINE-NUM)
END-IF
*
END-SUBROUTINE
* ------------


DEFINE SUBROUTINE GET-NAME-AND-ADDRESS
* ------------------------------------
MOVE (AD=I) TO #CR-CV (#LINE-NUM)
MOVE (AD=DI) TO #CR-COMMAND-CV (#LINE-NUM)
PERFORM GET-CONTACT-INFO
PERFORM WRITE-MEMBER-INFO
PERFORM GET-ADDRESS
END-SUBROUTINE
* ------------


DEFINE SUBROUTINE GET-NAME
* ------------------------
#CR-INFO-23(#LINE-NUM) := *TRIM(FUNCTION-CONTACT-NAME-2(<#HOLD-CI>))
END-SUBROUTINE
* ------------------------
*
DEFINE SUBROUTINE WRITE-MEMBER-INFO
* ---------------------------------
PERFORM GET-NAME
IF CONTACT-TYPE = 'O'
  #YYYYMMDD := CT-V.FIRM-ESTABLISHED-DATE
  COMPRESS #MM #DD #YYYY INTO #SCR-DOB WITH '/'
  COMPRESS FULL
    'CN'  CT-V.ID-NUMBER
    ' TIN/EIN:' CT-V.SSN
    INTO #CR-INFO-CN-SSN-DOB(#LINE-NUM) LEAVING NO
  ADD 1 TO #LINE-NUM
  COMPRESS '  Established Date :' #SCR-DOB
    INTO #CR-INFO-CN-SSN-DOB(#LINE-NUM)
ELSE
  #YYYYMMDD := CT-V.DATE-OF-BIRTH
  COMPRESS #MM #DD #YYYY INTO #SCR-DOB WITH '/'
  COMPRESS FULL
    'CN'  CT-V.ID-NUMBER
    ' SSN:' CT-V.SSN
    ' DOB:' #SCR-DOB
    INTO #CR-INFO-CN-SSN-DOB(#LINE-NUM) LEAVING NO
END-IF
#CURRENT-CN(#LINE-NUM) := CT-V.ID-NUMBER
ADD 1 TO #LINE-NUM
END-SUBROUTINE
* ------------
*
DEFINE SUBROUTINE GET-CONTACT-INFO
* --------------------------------
FIND(1) CT-V WITH CONTACT-ID = #HOLD-CI
END-FIND
END-SUBROUTINE
* ------------

*
DEFINE SUBROUTINE GET-CN-ACCESS-LEVEL
* -----------------------------------
ADD 1 TO #LINE-NUM
CALLNAT 'GGRANSXX' USING ST-V.ID-NUMBER ST-V.PROCESS-IND
  ST-V.INTRO-FLAG ST-V.MILITARY-SERVICE ST-V.DATE-OF-DEATH
  ST-V.NUMBER-MEMBERSHIPS ST-V.PLAN (1) #TEXT-40
#CR-INFO (#LINE-NUM) := #TEXT-40
*
IF ST-V.ACCESS-AUTH-CODE = 'Y' OR = 'S'
  COMPRESS #CR-INFO (#LINE-NUM) '** ACCESS TO FILE GRANTED  **'
    INTO #CR-INFO (#LINE-NUM)
END-IF
*
END-SUBROUTINE
* ------------

DEFINE SUBROUTINE FIND-LINKED-POLICIES
* ------------------------------------
RESET #NUMBER-OF-RELATIONS #NUMBER-OF-RELATIONS-2 #HOLD-ROLES-2(*) I K #POLICY-RELATIONS(*) #POLICY-RELATIONS-2(*)
RESIZE ARRAY #POLICY-RELATIONS TO (1:1)
RESET INITIAL #NUMBER-OF-POLICIES
CALLNAT 'POSNPRDS' #ORIGINAL-CI
  LinkedMember /* ONLY PULL INSURED
  #NUMBER-OF-RELATIONS
  #POLICY-RELATIONS (*)
  #ISNS(*)
  #MSG
*
IF #NUMBER-OF-RELATIONS = 0
  IF ST-V.PROCESS-IND = 'C'
    CALLNAT 'POSNPRDS' #ORIGINAL-CI
      AllRoles /* ONLY PULL INSURED
      #NUMBER-OF-RELATIONS
      #POLICY-RELATIONS (*)
      #ISNS(*)
      #MSG
    IF #NUMBER-OF-RELATIONS = 0
      ESCAPE ROUTINE
    END-IF
  ELSE
    ESCAPE ROUTINE
  END-IF
END-IF
* RESIZE ARRAY #POLICY-RELATIONS TO (1:#NUMBER-OF-RELATIONS)
RESIZE ARRAY #LINKED-POLICIES TO (1:#NUMBER-OF-RELATIONS)
#LINKED-POLICIES(*) := #POLICY-RELATIONS.POLICY-NUMBER(*)
P := #NUMBER-OF-RELATIONS

* PERFORM GET-STATUS-FILE
*
FOR Q 1 TO P
  FIND POLICY-CONTACTS WITH POLICY-NUMBER = #LINKED-POLICIES(Q)
    ACCEPT IF POLICY-CONTACTS.RELATION = InsuredRole
    #PERSON := POLICY-CONTACTS.CONTACT-ID
    ESCAPE BOTTOM
  END-FIND
  RESET #NUMBER-OF-RELATIONS #NUMBER-OF-RELATIONS-2 #POLICY-RELATIONS(*) #POLICY-RELATIONS-2(*) K
  RESET INITIAL #NUMBER-OF-POLICIES
  CALLNAT 'POSNPRDS' #PERSON
    InsuredRole /* ONLY PULL INSURED
    #NUMBER-OF-RELATIONS
    #POLICY-RELATIONS (*)
    #ISNS(*)
    #MSG
  RESIZE ARRAY #HOLD-ROLES-2.#POLICIES TO (1:*,1:1)
  FOR I 1 TO #NUMBER-OF-RELATIONS
    IF #POLICY-RELATIONS.POLICY-STATUS(I) <> 'D'
      ESCAPE TOP
    END-IF
    ADD 1 TO K
    EXPAND ARRAY #HOLD-ROLES-2 TO (1:K)
    #HOLD-ROLES-2.#POLICY-NUMBERS-2(K,#NUMBER-OF-POLICIES)  := #POLICY-RELATIONS.POLICY-NUMBER(I)
    #HOLD-ROLES-2.#POLICY-STATUSES-2(K,#NUMBER-OF-POLICIES)  := #POLICY-RELATIONS.POLICY-STATUS(I)
    CALLNAT 'POSNCNTS' #POLICY-RELATIONS.POLICY-NUMBER(I)
      #ALL-RELATIONS
      #NUMBER-OF-RELATIONS-2
      #POLICY-RELATIONS-2(*)
      #ISNS(*)
      #MSG
    FOR J 1 TO #NUMBER-OF-RELATIONS-2
      DECIDE ON FIRST VALUE OF #POLICY-RELATIONS-2.RELATION(J)
        VALUE PrimaryOwner
          #HOLD-OWNERS-2(K,1)   := #POLICY-RELATIONS-2.REFERENCE-NUMBER(J) /* First Index always Primary Owner
        VALUE CoOwner
          ADD 1 TO #NUMBER-OF-OWNERS
          #HOLD-OWNERS-2(K,#NUMBER-OF-OWNERS) := #POLICY-RELATIONS-2.REFERENCE-NUMBER(J)
        VALUE InsuredRole
          #HOLD-INSURED-2(k) := #POLICY-RELATIONS-2.REFERENCE-NUMBER(J)
          #HOLD-CN := #POLICY-RELATIONS-2.REFERENCE-NUMBER(J)
          PERFORM GET-STATUS-FILE
        VALUE MemberRole, LinkedMember
          #HOLD-LINKED-CN-2(K) := #POLICY-RELATIONS-2.REFERENCE-NUMBER(J)
        NONE
          IGNORE
      END-DECIDE
    END-FOR
*  Need to sort arrays for comparing if more then then 2 Owners
    IF #NUMBER-OF-OWNERS >= 2
      PERFORM SORT-OWNERS-ARRAY
    END-IF
    RESET INITIAL #NUMBER-OF-OWNERS
  END-FOR
*
  PERFORM COMBINE-POLICIES-AND-OWNERS
  PERFORM GET-LINKED-OWNERS

  RESET #HOLD-OWNERS-2(*,*)
  PERFORM GENERATE-STAR-LINE
  IF #CR-LINES(#LINE-NUM -1) = #CR-LINES(#LINE-NUM)
    RESET #CR-LINES(#LINE-NUM)
    #LINE-NUM :=  #LINE-NUM - 1
  END-IF
END-FOR
PERFORM GENERATE-STAR-LINE
END-SUBROUTINE
* -----------

DEFINE SUBROUTINE GENERATE-STAR-LINE
* ----------------------------------
ADD 1 TO #LINE-NUM
MOVE ALL '*' TO #CR-LINES(#LINE-NUM)
*
END-SUBROUTINE
* ------------


DEFINE SUBROUTINE GET-LINKED-OWNERS
* ---------------------------------
FOR I 1 TO K
  IF I = 1 /* Only required for first iteration
    IF R > 0
      IF #HOLD-INSURED-2(I) = #INSURED-CIS(*)
        ESCAPE ROUTINE
      END-IF
    END-IF
    ADD 1 TO R
    EXPAND ARRAY #INSURED-CIS TO (1:R)
    #INSURED-CIS(R) := #HOLD-INSURED-2(I)
    ADD 1 TO #LINE-NUM
    IF ST-V.INTRO-FLAG <> 'S' AND ST-V.INTRO-FLAG <> 'K' AND ST-V.INTRO-FLAG <> 'G'
      #LETTER := 'M'
    ELSE
      #LETTER := ST-V.INTRO-FLAG
    END-IF
    COMPRESS ' Insured(' #LETTER '):' INTO #CR-POL(#LINE-NUM) LEAVING NO
    #HOLD-CI := F-GET-CONTACT-ID(<#HOLD-INSURED-2(I)>)
    PERFORM GET-NAME-AND-ADDRESS
  END-IF

  /* Owners
  FOR J 1 TO 10
    IF #HOLD-ROLES-2.#HOLD-OWNERS-2(I,J) = 0
      ESCAPE BOTTOM
    END-IF
    ADD 1 TO #LINE-NUM
    IF J = 1
      #CR-POL(#LINE-NUM) := ' Owner:'
    ELSE
      #CR-POL(#LINE-NUM) := ' Co-Owner:'
    END-IF

    IF #HOLD-INSURED-2(I) = #HOLD-OWNERS-2(I,J)
*       IF #IS-MEMBER
*         #CR-INFO-23(#LINE-NUM) := 'Member'
*       ELSE
      #HOLD-CI := F-GET-CONTACT-ID(<#HOLD-OWNERS-2(I,J)>)
      PERFORM GET-NAME-AND-ADDRESS
*       END-IF
    ELSE
      #HOLD-CI := F-GET-CONTACT-ID(<#HOLD-OWNERS-2(I,J)>)
      PERFORM GET-NAME-AND-ADDRESS
    END-IF
  END-FOR

  /* Policies
  FOR J 1 TO #NUMBER-OF-POLICIES
    IF #HOLD-ROLES-2.#POLICY-NUMBERS-2(I,J) = #BLANK OR
        #HOLD-ROLES-2.#HOLD-OWNERS-2(I,1) = 0
      ESCAPE TOP
    END-IF
    PERFORM GET-POLICY-INFO
  END-FOR
END-FOR
*
END-SUBROUTINE
* ------------

DEFINE SUBROUTINE GET-AT-RECORDS
* ------------------------------
#HOLD-CN := #ORIGINAL-CN
PERFORM GET-STATUS-FILE
FOR I 1 TO 60
  IF ST-V.LINKED-CN(I) > 500000 /* This indicates an AT record
    FIND (1) AT-V WITH ID-NUMBER = ST-V.LINKED-CN(I)
      IF NO RECORD FOUND
        ESCAPE BOTTOM
      END-NOREC
*
      IF  (AT-V.INTRO-FLAG = 'V')  /* afsc rec
          OR (AT-V.ACTION-FLAG = 'A') /* already approved as member
        ESCAPE BOTTOM
      END-IF
*
*       PERFORM GENERATE-STAR-LINE
      ADD 1 TO #LINE-NUM
      DECIDE ON FIRST VALUE AT-V.INTRO-FLAG
        VALUE 'S' MOVE '   AT-Spouse:'  TO #CR-POL (#LINE-NUM)
        VALUE 'K' MOVE '   AT-Child:'   TO #CR-POL (#LINE-NUM)
        VALUE 'G' MOVE '   AT-Grndchd:' TO #CR-POL (#LINE-NUM)
        NONE      MOVE '   AT-Member:'  TO #CR-POL (#LINE-NUM)
      END-DECIDE
      MOVE (AD=I) TO #CR-CV (#LINE-NUM)
      MOVE (AD=DI) TO #CR-COMMAND-CV (#LINE-NUM)
      #HOLD-CI := AT-V.CONTACT-ID
      PERFORM GET-CONTACT-INFO
      PERFORM WRITE-AT-INFO
      PERFORM GET-ADDRESS
    END-FIND
  END-IF
END-FOR

END-SUBROUTINE
* ------------

DEFINE SUBROUTINE CHECK-FOR-PAYER
* -------------------------------
FOR I 1 TO 9
  IF   (OWNERSHIP-FLAG (I) = 'N')
      AND SECONDARY-ADDR-EXIST (< ST-V.MEMBER-CONTACT-ID >)
    MOVE TRUE TO #USE-2ND-ADDR-FOR-BILLING
  END-IF
END-FOR

IF #USE-2ND-ADDR-FOR-BILLING
  RESET #PDA-ADDRESS
  #ADD-CONTACT-ID := ST-V.MEMBER-CONTACT-ID
  #ADD-TYPE       := 'S'
  CALLNAT 'ADDN0001' #PDA-ADDRESS
  COMPRESS '2nd Addr Payor is'
    SUBSTR ( #ADD-LINE-1,1,25)
    SUBSTR ( #ADD-LINE-2,1,25)
    SUBSTR ( #ADD-LINE-3,1,25)
    INTO #TEXT
END-IF
END-SUBROUTINE
* ------------


DEFINE SUBROUTINE WRITE-AT-INFO
* -----------------------------
PERFORM GET-NAME
#YYYYMMDD := CT-V.DATE-OF-BIRTH
COMPRESS #MM #DD #YYYY INTO #SCR-DOB WITH '/'
IF CONTACT-TYPE = 'O'
  COMPRESS FULL
    'AT:'  ST-V.LINKED-CN(I)
    ' TIN/EIN:' CT-V.SSN
    INTO #CR-INFO-CN-SSN-DOB(#LINE-NUM) LEAVING NO
  ADD 1 TO #LINE-NUM
  COMPRESS '  Established Date :' #SCR-DOB
    INTO #CR-INFO-CN-SSN-DOB(#LINE-NUM)
ELSE
  COMPRESS FULL
    'AT:'  ST-V.LINKED-CN(I)
    ' SSN:' CT-V.SSN
    ' DOB:' #SCR-DOB
    INTO #CR-INFO-CN-SSN-DOB(#LINE-NUM) LEAVING NO
END-IF
#CURRENT-CN(#LINE-NUM) := ST-V.LINKED-CN(I)
MOVE (AD=I) TO #CR-CV (#LINE-NUM)
MOVE (AD=DI) TO #CR-COMMAND-CV (#LINE-NUM)
ADD 1 TO #LINE-NUM
* ------------
END-SUBROUTINE


DEFINE SUBROUTINE GET-FIR-RECORDS
* ------------------------------
MOVE TRUE TO #FOUND-FR
FIND (1) FR-V WITH ID-NUMBER = #ORIGINAL-CN
  IF NO RECORDS FOUND
    FIND (1) FR-V WITH WIDOW-KEY = #CN-NUMBER-A
      IF NO RECORDS FOUND
        RESET #FOUND-FR
      END-NOREC
    END-FIND
    IGNORE
  END-NOREC
END-FIND
*
IF #FOUND-FR
  FOR I 1 TO 14
    IF FR-V.DEPN-SSN (I) = 0 OR FR-V.DEPN-SSN (I) = #ORIGINAL-SSN  /* bz3
      ESCAPE TOP
    END-IF
*
    FIND ST-V WITH SSN = FR-V.DEPN-SSN (I) /* search for depn as mbr
      PERFORM CHECK-AFFL-ONLY                        /*   #AFFL-ONLY    bz1
*      IF ST-V.PROCESS-IND = 'S' OR = 'C'              RE1
      IF ST-V.PROCESS-IND = 'C'                     /* RE1
*      OR AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)        /* RE1  bz1
          OR #AFFL-ONLY                               /* bz1
        ESCAPE TOP
      END-IF
*
*       RESET #ALREADY-SHOWN
*       FOR #I7 1 TO 100                                             /* PM2    /* vt1 was 80 /* vt2  was #i6
*         IF   (ST-V.SSN       = #CR-SSN (#I7))                                              /* vt2
*             AND (ST-V.ID-NUMBER = #CR-CN  (#I7))                                           /* vt2
*           MOVE TRUE TO #ALREADY-SHOWN
*           ESCAPE BOTTOM
*         END-IF
*       END-FOR
* scan
*       IF #ALREADY-SHOWN
*         ESCAPE TOP
*       END-IF
*
*       PERFORM GENERATE-STAR-LINE
      ADD 1 TO #LINE-NUM
      MOVE ' Depn-Mbr:' TO #CR-POL (#LINE-NUM)
      #HOLD-CI := ST-V.MEMBER-CONTACT-ID
      PERFORM GET-NAME-AND-ADDRESS
*       PERFORM INSURED-INFO  /* show DEPN member ST info
    END-FIND
  END-FOR
END-IF
* ------------
END-SUBROUTINE



DEFINE SUBROUTINE CHECK-AFFL-ONLY
* -------------------------------
IF ( ST-V.PROCESS-IND <> "S" ) OR ( ST-V.STATUS(*) <> " " )
  #AFFL-ONLY := FALSE
ELSE
  IF ST-V.INTRO-FLAG NE 'A'
    #AFFL-ONLY := TRUE
  ELSE
    #AFFL-ONLY := FALSE
  END-IF
END-IF
END-SUBROUTINE
* ------------

DEFINE SUBROUTINE GET-SPOUSE-MBR
* ------------------------------
FIND ST-V WITH MEMBER-CONTACT-ID = #SPOUSE-CONTACT-ID /* search for sps as member    /* RE4
*  IF ST-V.PROCESS-IND = 'S' OR = 'C'          RE1
  PERFORM  CHECK-AFFL-ONLY                     /* bz1
  IF ST-V.PROCESS-IND = 'C'                  /* RE1
*    OR AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)   /* RE1
      OR #AFFL-ONLY                           /* bz1
    ESCAPE TOP
  END-IF
*
*   RESET #ALREADY-SHOWN
*   FOR #I6 1 TO 100                                                 /* PM2   /* vt1 was 80
*     IF   (ST-V.SSN       = #CR-SSN (#I6))
*         AND (ST-V.ID-NUMBER = #CR-CN  (#I6))
*       MOVE TRUE TO #ALREADY-SHOWN
*       ESCAPE BOTTOM
*     END-IF
*   END-FOR
* *
*   IF #ALREADY-SHOWN
*     ESCAPE TOP
*   END-IF
*
  ADD 1 TO #LINE-NUM
  MOVE '  Spouse-Mbr:' TO #CR-POL (#LINE-NUM)
*   #HOLD-CI := ST-V.SPOUSE-CONTACT-ID
  #HOLD-CI := #SPOUSE-CONTACT-ID
  PERFORM GET-NAME-AND-ADDRESS
END-FIND
*
END-SUBROUTINE
* ------------

DEFINE SUBROUTINE PROCESS-COMMANDS
* --------------------------------
IF #CGA-SCR-COMMAND NE '*'
  IF #CGA-SCR-SUFFIX = 'P22'
    ESCAPE ROUTINE
  END-IF
  FETCH 'G1000PXX'
END-IF
FOR I 1 TO 100
  IF #CR-COMMAND(I) NE ' '
    #CGA-SCR-ID := #CURRENT-CN(I)
    #CGA-SCR-COMMAND := #CR-COMMAND(I)
    IF #CURRENT-INDEX(I) <> 0
      IF #CGA-SCR-COMMAND = 'AD'
        COMPRESS 'OW' #CURRENT-INDEX(I) INTO #CGA-SCR-SUFFIX LEAVING NO
      ELSE
        COMPRESS 'P' #CURRENT-INDEX(I) INTO #CGA-SCR-SUFFIX LEAVING NO
      END-IF
    END-IF
    FETCH 'G1000PXX'
  END-IF
END-FOR
END-SUBROUTINE
* ------------------------- Sort by Issue date bz-OI-4387 --------------------------
DEFINE sbr_Sort
*      --------
 FOR #i = 1 TO 100 
   IF #CR-LINES(#i) = ' ' ESCAPE BOTTOM END-IF
   IF srt(#i) = 0 
      IF #j > 0 
        IF #j > 1
          #k := #first + #j - 1
             FOR #y = 1 TO (#j - 1)
             FOR #x = #first TO (#first + #j - 2)
               IF srt(#x) > srt(#x + 1)
                  N08  := srt(#x)
                  srt(#x) := srt(#x + 1)
                  srt(#x + 1) := N08
                  v_A := #CR-LINES(#x)
                  #CR-LINES(#x) :=  #CR-LINES(#x + 1)
                  #CR-LINES(#x + 1) :=  v_A
               END-IF   
             END-FOR
             END-FOR
        END-IF
        #j := 0
        ESCAPE TOP
    ELSE
       ESCAPE TOP 
     END-IF
  ELSE
    IF #j = 0 
       #first := #i 
    END-IF
    #j := #j + 1   
  END-IF
 END-FOR
END-SUBROUTINE
END
