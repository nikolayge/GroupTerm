* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*******************************************************************************
** Program: ATHX10P0 - created 12/20/2005 by Andy Bergmanis (SAG)
** Formerly the Cobol program ATHPX10P0 had multiple entry points that called
** ATHP10P0, which subsequently calls ATHP10P1 and ATHP10P2.
**
***************** MAINTENANCE HISTORY **************************************************************
** Tag   Date      Who    Details
** RHC  02/06/2006 SAG-AB Replaced PDA with GDA and Callnats with Fetches to
**                 programs that were formerly Cobol calls.
*******************************************************************************
** RHC  02/06/2006 SAG-AB START
DEFINE DATA GLOBAL USING ATHG10P0
**01 MICRO-CONTROL        /* PARAMETERS FOR CALLING ATHP10P0 ...
**  02 FILLER-15                      (A2)   /* BLANK
**  02 PARM-DATE                      (A10)  /* MM/DD/YYYY
**  02 MICRO-RESP                     (A3)   /* YES OR NO
**  02 PARM-PROC                      (A1)   /* 1 OR 2
** RHC  02/06/2006 SAG-AB END
LOCAL
1 #I                   (N3)
1 #PARMS-OK            (L/1:3)
1 #MESS-LINE           (A50/1:3)
  INIT <'DATE PARAMETER NEEDS TO BE IN FORMAT "MM/01/YYYY"',
  'RESPONSE PARAMETER NEEDS TO BE "YES" OR "NO"',
  'PROCESS PARAMETER NEEDS TO BE "1" OR "2"'>
END-DEFINE
**
INPUT (IP=OFF)  PARM-DATE
INPUT (IP=OFF)  MICRO-RESP
INPUT (IP=OFF)  PARM-PROC
**
RESET #PARMS-OK (*)
DECIDE FOR EVERY CONDITION
  WHEN PARM-DATE EQ MASK (MM'/01/'YYYY)
    #PARMS-OK (1) := TRUE
  WHEN MICRO-RESP EQ 'YES' OR EQ 'NO'
    #PARMS-OK (2) := TRUE
  WHEN PARM-PROC EQ '1' OR EQ '2'
    #PARMS-OK (3) := TRUE
  WHEN ALL
**  CALLNAT 'ATHP10P0' FILLER-15 PARM-DATE MICRO-RESP PARM-PROC
    FETCH RETURN 'ATHP10P0'             /* RHC  02/06/2006 SAG-AB
    ESCAPE ROUTINE
  WHEN NONE
    IGNORE
END-DECIDE
**
WRITE // 'ERROR IN INPUT PARAMETERS'
  /  'DATE:' PARM-DATE 2X 'RESPONSE:' MICRO-RESP 2X 'PROCESS:' PARM-PROC
FOR #I EQ 1 TO 3
  IF #PARMS-OK (#I) EQ FALSE
    WRITE / #MESS-LINE (#I)
  END-IF
END-FOR
**
END



