* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
************************************************************************
* ACHP0002 - Extract Daily AM NSF transactions for processing
************************************************************************
* YAK              Initial creation for eCheck process
* YK1    07102015  Add rejection code
************************************************************************
DEFINE DATA
LOCAL USING OBJLACRG
LOCAL USING GPRL0001
LOCAL
1 #TRANSACTION-RECORD
  2 #ID-NUMBER                  (N6)
  2 #POLICY-NUMBER              (A16)
  2 #TXN-CODE                   (A4)
  2 #AMOUNT                     (N7.2)
  2 #ACTIVITY-TYPE              (A3)      /* YK1
  2 #STATUS-TYPE                (A2)      /* YK1
*
1 #BILL-RECORD
  2 #BILL-ID-NUMBER             (N6)
  2 #BILL-POLICY-NUMBER         (A16)
  2 #PREMIUM-TYPE               (A4)
  2 #OTHER-TYPE                 (A4)
  2 #PREMIUM-CODE               (A2)
  2 #PREMIUM-AMOUNT             (N7.2)
  2 #PREMIUM-AMOUNT-F           (A15)
  2 #LOAN-CODE                  (A2)
  2 #LOAN-AMOUNT                (N7.2)
  2 #LOAN-AMOUNT-F              (A15)
  2 #CAP-LOAN-AMOUNT            (A15)
  2 #OTHER-AMOUNT               (N7.2)
  2 #OTHER-AMOUNT-F             (A15)
*
1 #BILL-TYPE                  (A2)   INIT <'E3'>               /* eCheck & personal check
1 #REJECTION-CODE             (A3)   INIT <'R01'>
1 #PREP                       (A4)   CONST <'PREP'>
*
1 #BILL-FILE-RECORD (A1000)
1 #I  (I2)
1 #SG-CATEGORY-1  (A2)
1 #TAB      (A1) CONST <H'09'>
1 #DATN     (N8)
1 #CNT      (N3)
1 #NSF      (A1) CONST <'N'>
1 #TRANSACTION-FILE (A) DYNAMIC INIT <"/usr/SAG/tmp/ECheckReturnTransactions.txt">
*
END-DEFINE
*
#DATN := *DATN
DEFINE WORK FILE 1 #TRANSACTION-FILE TYPE 'ASCII-COMPRESSED'
DEFINE WORK FILE 2 #ACH-REJECT-FILE TYPE 'ASCII-COMPRESSED' ATTRIBUTES 'APPEND'
*
FIND ACCT-REG-V WITH TRANSACTION-DATN = #DATN
  ACCEPT IF (ACCT-REG-V.CASH-CODE = #NSF AND ACCT-REG-V.STATUS-TYPE = 'AM')            /* YK1
  #CNT := #CNT + 1
  RESET #TRANSACTION-RECORD
  #ID-NUMBER := ACCT-REG-V.ID-NUMBER
  #POLICY-NUMBER := ACCT-REG-V.POLICY-NUMBER
  #TXN-CODE := ACCT-REG-V.TXN-CODE
  #ACTIVITY-TYPE := ACCT-REG-V.ACTIVITY-TYPE              /* YK1
  IF C*SUNGARD-INFO = 0
    IF ACCT-REG-V.CREDIT-AMOUNT NE 0
      #AMOUNT := ACCT-REG-V.CREDIT-AMOUNT * -1
    ELSE
      #AMOUNT := ACCT-REG-V.DEBIT-AMOUNT
    END-IF
  ELSE
    FOR #I = 1 TO C*SUNGARD-INFO
      #SG-CATEGORY-1 := SG-CATEGORY-1(#I)
      IF #SG-CATEGORY-1 = '**'
        RESET #SG-CATEGORY-1
      END-IF
      IF ACCT-REG-V.CREDIT-AMOUNT NE 0
        #AMOUNT := #AMOUNT + ACCT-REG-V.SG-AMOUNT(#I) * -1
      ELSE
        #AMOUNT := #AMOUNT + ACCT-REG-V.SG-AMOUNT(#I)
      END-IF
    END-FOR
  END-IF
  WRITE WORK FILE 1 #TRANSACTION-RECORD
END-FIND
CLOSE WORK FILE 1
*
IF #CNT = 0
  ESCAPE MODULE
END-IF
*
READ WORK FILE 1 #TRANSACTION-RECORD
END-ALL
*
SORT BY #POLICY-NUMBER USING #ID-NUMBER #TXN-CODE #AMOUNT #ACTIVITY-TYPE
  DECIDE FOR FIRST CONDITION
    WHEN #TXN-CODE = 'PRER' OR = 'DUER' OR = 'BADJ' OR = 'RIDR'
      #PREMIUM-AMOUNT := #PREMIUM-AMOUNT + #AMOUNT
      IF #PREMIUM-TYPE = ' '
        #PREMIUM-TYPE := #TXN-CODE
      ELSE
        IF #PREMIUM-TYPE <> #TXN-CODE
          #PREMIUM-TYPE := 'CMB4'
        END-IF
      END-IF
    WHEN #TXN-CODE = 'PADF' OR = 'PADV' OR = 'AIAF' OR = 'AIAV'
      #LOAN-AMOUNT := #LOAN-AMOUNT + #AMOUNT
      #LOAN-CODE   := '93'
    WHEN NONE
      #OTHER-AMOUNT := #OTHER-AMOUNT + #AMOUNT
      #OTHER-TYPE   := #TXN-CODE
  END-DECIDE
  AT BREAK OF #POLICY-NUMBER
    DECIDE FOR EVERY CONDITION
      WHEN #PREMIUM-AMOUNT NE 0
        MOVE EDITED #PREMIUM-AMOUNT (EM=Z,ZZZ,ZZ9.99) TO #PREMIUM-AMOUNT-F
        MOVE LEFT #PREMIUM-AMOUNT-F TO #PREMIUM-AMOUNT-F
        COMPRESS '$' #PREMIUM-AMOUNT-F INTO #PREMIUM-AMOUNT-F LEAVING NO
        DECIDE ON FIRST VALUE OF #PREMIUM-TYPE
          VALUE 'PRER'
            #PREMIUM-CODE   := '11'
          VALUE 'DUER'
            #PREMIUM-CODE   := '55'
          VALUE 'RIDR'
            #PREMIUM-CODE   := '88'
          NONE VALUE
            #PREMIUM-CODE   := '94'
        END-DECIDE
      WHEN #LOAN-AMOUNT NE 0
        #LOAN-CODE := '93'
        MOVE EDITED #LOAN-AMOUNT (EM=Z,ZZZ,ZZ9.99) TO #LOAN-AMOUNT-F
        MOVE LEFT #LOAN-AMOUNT-F TO #LOAN-AMOUNT-F
        COMPRESS '$' #LOAN-AMOUNT-F INTO #LOAN-AMOUNT-F LEAVING NO
*   WHEN #CAP-LOAN-AMOUNT (#I3) NE 0
*     MOVE EDITED #CAP-LOAN-AMOUNT (#I3) (EM=Z,ZZZ,ZZ9.99) TO #DISPLAY-CAP-LOAN-AMOUNT
*     MOVE LEFT #DISPLAY-CAP-LOAN-AMOUNT TO #DISPLAY-CAP-LOAN-AMOUNT
*     COMPRESS '$' #DISPLAY-CAP-LOAN-AMOUNT INTO #DISPLAY-CAP-LOAN-AMOUNT LEAVING NO
      WHEN #OTHER-AMOUNT NE 0
        IF (#OTHER-TYPE = 'FPFP' AND #PREMIUM-AMOUNT = 0) OR #OTHER-TYPE = 'FPFR'
          MOVE EDITED #OTHER-AMOUNT (EM=Z,ZZZ,ZZ9.99) TO #PREMIUM-AMOUNT-F
          MOVE LEFT #PREMIUM-AMOUNT-F TO #PREMIUM-AMOUNT-F
          COMPRESS '$' #PREMIUM-AMOUNT-F INTO #PREMIUM-AMOUNT-F LEAVING NO
          #PREMIUM-CODE := '22'
        ELSE
          MOVE EDITED #OTHER-AMOUNT (EM=Z,ZZZ,ZZ9.99) TO #OTHER-AMOUNT-F
          MOVE LEFT #OTHER-AMOUNT-F TO #OTHER-AMOUNT-F
          COMPRESS '$' #OTHER-AMOUNT-F INTO #OTHER-AMOUNT-F LEAVING NO
        END-IF
      WHEN NONE
        IGNORE
    END-DECIDE
*
    #BILL-ID-NUMBER     := OLD(#TRANSACTION-RECORD.#ID-NUMBER)
    #BILL-POLICY-NUMBER := OLD(#TRANSACTION-RECORD.#POLICY-NUMBER)
    #REJECTION-CODE     := OLD(#TRANSACTION-RECORD.#ACTIVITY-TYPE)
    COMPRESS
      #BILL-ID-NUMBER #TAB #BILL-POLICY-NUMBER #TAB #BILL-TYPE #TAB
      #PREMIUM-CODE #TAB #PREMIUM-AMOUNT-F #TAB #LOAN-CODE #TAB #LOAN-AMOUNT-F #TAB
      #CAP-LOAN-AMOUNT #TAB #OTHER-AMOUNT-F #TAB #REJECTION-CODE
      INTO #BILL-FILE-RECORD LEAVING NO
*
    WRITE WORK 2 #BILL-FILE-RECORD
    RESET #BILL-FILE-RECORD
    RESET #BILL-RECORD
  END-BREAK
END-SORT
*
END
