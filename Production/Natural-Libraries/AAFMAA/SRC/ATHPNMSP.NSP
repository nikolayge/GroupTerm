* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPNMSP - Weekly New Member Spouses
*
***************************************************************************************************
*                       MODIFICATION LOG                                                          *
* USER   DATE      TAG     REASON                                                                 *
*                                                                                                 *
* PAM    08052005  None    Program Written.                                                       *
* PAM    11082005  PM1     Do not run the report if after noon                                    *
*                          (month-end check)                                                      *
* SAG  12012005 RH1  SS - Replaced the HEX constant '05' (Tab position)                           *
*                    EBCDIC to HEX code '09' ASCII                                                *
* PAM    03112007  PM2     Adjust for earlier run time                                            *
* RSE    09302009  RE1     Change PROCESS-IND logic for Unification                               *
* VXT    09292010  VT1     Add new fields to the extract and made the report run monthly.         *
* vxt    11052010  vt2     Name AND RANK sources ARE CHANGED .
* TMT    06102014  TT1     CONTACT NORMALIZATION - DOB AND SEX
***************************************************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING G3500AAD
LOCAL
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 PROCESS-IND
  2 INTRO-FLAG
  2 SSN
* 2 NAME                                               /* vt2
*  2 NAME-SP                                           /* vt2
  2 SSN-SP
*  2 RANK                                                /* vt1
*   2 DATE-OF-BIRTH-SP                                   /* TT1
*   2 REDEFINE DATE-OF-BIRTH-SP                          /* TT1
*     3 DOB-YYYY                 (A4)                    /* TT1
*     3 DOB-MM                   (A2)                    /* TT1
*     3 DOB-DD                   (A2)                    /* TT1
  2 MEMBER-CONTACT-ID                                  /* vt1
  2 spouse-contact-id                                  /* vt2
*
1 SP-V VIEW OF A-STATUS
  2 PROCESS-IND
  2 ID-NUMBER
  2 SSN
*
1 AT-V VIEW OF A-APPL-TRACKING
  2 INTRO-FLAG
  2 ID-NUMBER
  2 SSN
  2 AT-STATUS
  2 USER-SOURCE
  2 NAME
  2 REFERING-ID-NUMBER        (1)
*
1 MD-V VIEW OF A-MBRSHIP-MTD-DETAIL
  2 ID-NUMBER
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A              (A6)
  2 ENTRY-DATE
  2 CODE
  2 USER
  2 REC-ISN
  2 ISSUE-DATE
*                                                    /* vt1 \/
1 CONTACTS VIEW OF A-CONTACTS
  2 CONTACT-ID
  2 ID-NUMBER
  2 LAST-NAME
  2 MIDDLE-NAME
  2 FIRST-NAME
  2 RANK-ID
  2 SSN
*
1 EMAIL VIEW OF A-CONTACT-EMAIL
  2 CONTACT-ID
  2 EMAIL-ADDRESS
*                                                    /* vt1 /\
1 #TODAY                     (N8)
1 #ENTRY-DATE                (N8)
1 REDEFINE #ENTRY-DATE
  2 #ENTRY-DATE-YYYY          (A4)
  2 #ENTRY-DATE-MM            (A2)
  2 #ENTRY-DATE-DD            (A2)
*
* 1 #TAB     (A1) INIT <H'05'>     /* SAG RH1 12012005 SS
1 #TAB       (A1) INIT <H'09'>     /* SAG RH1 12012005 SS
1 #EXTRACT-RECORD            (A1000)                /* vt1 WAS A(250)
*
1 #DISPLAY-ID-NUMBER         (A6)
1 #DISPLAY-RANK              (A25)                   /* vt1  \/    vt2 was 3
1 #DISPLAY-FIRST-NAME        (A25)
1 #DISPLAY-MIDDLE-NAME       (A25)
1 #DISPLAY-LAST-NAME         (A25)
1 #DISPLAY-E-MAIL            (A70)
1 #DISPLAY-SP-FIRST-NAME     (A25)
1 #DISPLAY-SP-MIDDLE-NAME    (A25)
1 #DISPLAY-SP-LAST-NAME      (A25)                  /* vt1 /\
*     1 #DISPLAY-SPOUSE-NAME       (A25)
1 #DISPLAY-DOB               (A10)
1 #DISPLAY-ENTRY-DATE        (A10)
1 #DISPLAY-USER              (A3)
1 #DISPLAY-ORIG-APP          (A6)
*
1 #SPS-FND                   (L)
1 #OVERRIDE                  (L)
1 #CNT-1                     (P5)
1 #INVERSE-START-DATE        (N8)
1 #INVERSE-END-DATE          (N8)
*
1 #TO-DATE                   (N8)
1 #FROM-DATE                 (N8)
1 #RETURN-CALC               (N8)
1 #REQUEST                   (A1)
*
1 #NAME-CHECK                (A25)
1 #LAST-APP                  (A25)
1 #FIRST-20-APP              (A20)
1 #MI-APP                    (A1)
1 #LAST-STAT                 (A25)
1 #FIRST-20-STAT             (A20)
1 #MI-STAT                   (A1)
1 #ERR-MSG                   (A60)
1 #PARM-DATE                 (A10)           /* vt1 \/
1 REDEFINE #PARM-DATE
  2 #MM-PARM                   (A2)
  2 #FIL1                      (A1)
  2 #DD-PARM                   (A2)
  2 #FIL2                      (A1)
  2 #YYYY-PARM                 (A4)
1 #YYYYMMDD-A                  (A8)
1 REDEFINE #YYYYMMDD-A
  2 #YYYYMMDD                  (N8)
  2 REDEFINE #YYYYMMDD
    3 #YYYY            (N4)
    3 #MM              (N2)
    3 #DD              (N2)
1 #START-DATE                (N8)
1 #END-DATE                  (N8)           /* vt1 /\
1 #contact-id                (n8)               /* vt2 \/
1 #name-f                    (a70)
1 #name-sp                   (a70)
1 #first-name-f              (a25)
1 #middle-name-f             (a25)
1 #last-name-f               (a25)
1 #suffix-f                   (a10)
*
1 #pda-rank
  2 #PASS-COMMAND       (A2)
  2 #RANK-PASS          (A3)
  2 #MIL-ID-PASS        (A3)
  2 #INVALID            (L)
  2 #RANK-PAY-TBL-DISPL (P2)
  2 #RANK-LITERAL-PASS  (A23)
  2 #RANK-DISPLAY       (A5)
*
  2 #CONTACT-ID-r         (N8)
  2 #RANK-ABBR          (A) DYNAMIC
  2 #LETTER-ENV         (A) DYNAMIC
  2 #SALUTATION         (A) DYNAMIC
  2 #SALUTATION-WITH-NAME (A) DYNAMIC
*
1 #rank-w              (a25)                      /* vt2 /\
*
1 #SPOUSE-CN                  (N8.0)                  /* TT1
1 #DATE-OF-BIRTH-SP           (N8.0)                  /* TT1                  
1 REDEFINE #DATE-OF-BIRTH-SP                          /* TT1
  2 #DOB-YYYY                 (A4)                    /* TT1
  2 #DOB-MM                   (A2)                    /* TT1
  2 #DOB-DD                   (A2)                    /* TT1
END-DEFINE
************************************************************************
*
* MOVE TRUE TO #OVERRIDE  /* To over-ride the date check - force run
*
FORMAT (1) LS=133 PS=66
WRITE  (1) TITLE LEFT 'PROGRAM:' *PROGRAM
*     8X  'Weekly New Member Spouses - Exceptions'                    /* vt1
  6X  'Monthly New Member Spouses - Exceptions'                       /* vt1
  5X  'DATE:' *DAT4U 2X 'TIME:' *TIMX
  2X  'PAGE:' *PAGE-NUMBER (1)
*
FORMAT (2) LS=133 PS=66
WRITE  (2) TITLE LEFT 'PROGRAM:' *PROGRAM
*  8X  'Weekly New Member Spouses - Exceptions'                   /* vt1
  6X 'Monthly New Member Spouses - Exceptions'                    /* vt1
  5X  'DATE:' *DAT4U 2X 'TIME:' *TIMX
  2X  'PAGE:' *PAGE-NUMBER (1)
*
** MOVE 'F' TO #REQUEST                     /* vt1 \/
** MOVE *DATN TO #TO-DATE
** RESET #FROM-DATE
** PERFORM CALL-GDATESXX
*
* IF #RETURN-CALC NE 2      /* only run on Monday
** IF #RETURN-CALC NE 1        /* PM2 - run on Sunday night
**    AND NOT #OVERRIDE
**  ESCAPE ROUTINE
** END-IF
*
** IF *TIMN LT 1200000       /* midnite till 12 noon (normal job time)
**  MOVE 'E' TO #REQUEST
**  MOVE *DATN TO #TO-DATE
**  MOVE 1 TO #FROM-DATE
**  PERFORM CALL-GDATESXX
*
**  MOVE #RETURN-CALC TO #TODAY
** ELSE                     /* noon till midnite (if job is run early)
* IF #OVERRIDE                                                    /* PM1 PM2
**  MOVE *DATN TO #TODAY
* ELSE                                                            /* PM1 PM2
*   ESCAPE ROUTINE                                                /* PM1 PM2
* END-IF                                                          /* PM1 PM2
** END-IF
*
** MOVE 'E' TO #REQUEST
** MOVE #TODAY TO #TO-DATE
** MOVE 6 TO #FROM-DATE
** PERFORM CALL-GDATESXX                             /* vt1 /\
*
READ WORK 1 ONCE  #PARM-DATE                              /* vt1 \/
WRITE 'input parm-date is:' #PARM-DATE
*
COMPRESS #YYYY-PARM #MM-PARM #DD-PARM INTO #YYYYMMDD-A LEAVING NO
WRITE '=' #YYYYMMDD
*
SUBTRACT 1 FROM #MM
IF #MM LT 1
ADD 12 TO #MM
SUBTRACT 1 FROM #YYYY
END-IF
MOVE 01 TO #DD
MOVE #YYYYMMDD TO #START-DATE
WRITE 'Start date: ' #START-DATE
*
MOVE #START-DATE TO #FROM-DATE
MOVE 'B' TO #REQUEST
CALLNAT 'GDATESXX'
  #TO-DATE
  #FROM-DATE
  #RETURN-CALC
  #REQUEST
MOVE #TO-DATE TO #END-DATE
WRITE 'End date :' #END-DATE                             /* vt1 /\
*
COMPRESS 'Member #'
  #TAB  'Member Rank'                               /* vt1 \/
  #TAB  'Member First Name'
  #TAB  'Member Middle Name'
  #TAB  'Member Last Name'
  #TAB  'Member e-mail'
  #TAB  'Spouse First Name'
  #TAB  'Spouse Middle Name'
  #TAB  'Spouse Last Name'
*  #TAB  'Spouse Name'                             /* vt1 /\
  #TAB  'Spouse DOB'
  #TAB  'Orig User'
  #TAB  'Orig App'
  #TAB  'AT Approved'
  #TAB  'Address-1'
  #TAB  'Address-2'
  #TAB  'Address-3' INTO #EXTRACT-RECORD LEAVING NO
*
WRITE WORK FILE 2 #EXTRACT-RECORD
RESET #EXTRACT-RECORD
*
** COMPUTE #INVERSE-START-DATE = 99999999 - #TODAY                    /* vt1 \/
** COMPUTE #INVERSE-END-DATE   = 99999999 - #RETURN-CALC
*
** WRITE (1) 'Date Range = ' #RETURN-CALC '  -  ' #TODAY
*
COMPUTE #INVERSE-START-DATE = 99999999 - #START-DATE
COMPUTE #INVERSE-END-DATE   = 99999999 - #END-DATE
*
WRITE (1) 'Data Range = ' #START-DATE  '  -  ' #END-DATE             /* vt1  /\
*
READ MD-V BY ENTRY-DATE FROM #INVERSE-END-DATE
*
  IF ENTRY-DATE GT #INVERSE-START-DATE                   /* ONLY LAST month   /* vt1 was WEEK
  ESCAPE BOTTOM
  END-IF
*
  IF CODE = 'N'
    AND MD-V.ISSUE-DATE NE 0
*
  WRITE ' rec from MD file with ID-NUMBER ' MD-V.ID-NUMBER-A
  RESET #DISPLAY-ID-NUMBER #DISPLAY-DOB
    #DISPLAY-USER #DISPLAY-ORIG-APP #DISPLAY-ENTRY-DATE
*
  FIND (1) ST-V WITH MEMBER-KEY = MD-V.ID-NUMBER-A
    IF NO RECORDS FOUND
    WRITE (2) 'ST NOT FOUND USING MD ID-NUMBER'  MD-V.ID-NUMBER
    WRITE (2)  'MD CODE=' MD-V.CODE
    WRITE (2)  'MD USER=' MD-V.USER
    WRITE (2)  'MD ENTRY DATE=' MD-V.ENTRY-DATE
    WRITE (2)  'MD REC-ISN=' MD-V.REC-ISN
    END-NOREC
*
    RESET #NAME-F #NAME-SP                                                   /* VT2 \/
    move st-v.spouse-contact-id to #contact-id
    #name-f := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME-f,#MIDDLE-NAME-f,#LAST-NAME-f,#SUFFIX-f>)
    compress #first-name-f #middle-name-f #last-name-f to #name-sp leaving no
    #LAST-STAT := #LAST-NAME-f                                                /* vt2 /\
*
*      IF (ST-V.PROCESS-IND = 'S' OR = 'C')  /* Bypass AFSC/Contacts/Pend  RE1
    IF (ST-V.PROCESS-IND = 'C')  /* Bypass AFSC/Contacts/Pend            RE1
      OR AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)                            /* RE1
      OR (ST-V.ID-NUMBER LT 1900)                  /* Bypass Samples
      OR (ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G') /* Bypass Sps/Gen
      or #name-sp = ' '                                                         /* vt2
*          OR (ST-V.NAME-SP = ' ')                      /* Bypass No Sps            /* vt2
      OR (ST-V.SSN-SP = 0)                         /* Bypass No Sps SSN
    ESCAPE BOTTOM
    END-IF
*
    move st-v.MEMBER-contact-id to #contact-id-r                            /* vt2 \/
    callnat 'RANKN001' #pda-rank
    #display-rank := #rank-abbr
*      MOVE ST-V.RANK TO #DISPLAY-RANK                                        /* vt2 \/
*
    RESET #DISPLAY-LAST-NAME #DISPLAY-FIRST-NAME #DISPLAY-MIDDLE-NAME
    FIND(1) CONTACTS WITH CONTACTS.CONTACT-ID = ST-V.MEMBER-CONTACT-ID
      IF NO
      WRITE (2)'No record on Contacts file for status.id-number ' ST-V.MEMBER-CONTACT-ID
      ESCAPE BOTTOM
      END-NOREC
      MOVE CONTACTS.LAST-NAME TO #DISPLAY-LAST-NAME
      MOVE CONTACTS.FIRST-NAME TO #DISPLAY-FIRST-NAME
      MOVE CONTACTS.MIDDLE-NAME TO #DISPLAY-MIDDLE-NAME
      END-FIND
*
      RESET #DISPLAY-E-MAIL
      FIND(1) EMAIL WITH EMAIL.CONTACT-ID = ST-V.MEMBER-CONTACT-ID
        IF NO
        WRITE (2)' No record on Contacts-email file for ' ST-V.MEMBER-CONTACT-ID
        ESCAPE BOTTOM
        END-NOREC
        MOVE EMAIL.EMAIL-ADDRESS TO #DISPLAY-E-MAIL
        END-FIND
*                                                                     /* vt1 /\
        RESET #SPS-FND
        FIND SP-V WITH SP-V.SSN = ST-V.SSN-SP
*        IF  (SP-V.PROCESS-IND = 'S' OR = 'C')            RE1
          IF  (SP-V.PROCESS-IND = 'C')                   /* RE1
            OR AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)         /* RE1
            OR (SP-V.ID-NUMBER LT 1900)
          ESCAPE TOP
          END-IF
*
          MOVE TRUE TO #SPS-FND
          END-FIND
*
*      IF #SPS-FND                                                         /* vt1 \/
          FIND(1) CONTACTS WITH CONTACTS.SSN = ST-V.SSN-SP
            IF NO
            WRITE (2) 'No record on Contacts file for the spouse ssn ' ST-V.SSN-SP
            ESCAPE BOTTOM
            END-NOREC
            MOVE CONTACTS.LAST-NAME   TO #DISPLAY-SP-LAST-NAME
            MOVE CONTACTS.MIDDLE-NAME TO #DISPLAY-SP-MIDDLE-NAME
            MOVE CONTACTS.FIRST-NAME  TO #DISPLAY-SP-FIRST-NAME
            END-FIND
*      END-IF
*                                                                         /* vt1 /\
            IF #SPS-FND
            WRITE (2) 'Spouse Already has Member # ' SP-V.ID-NUMBER
            WRITE (2) 'Member = '                    ST-V.ID-NUMBER
            ESCAPE BOTTOM
            END-IF
*
            FIND AT-V WITH AT-V.SSN = ST-V.SSN-SP
              IF AT-V.INTRO-FLAG = 'V'
              ESCAPE TOP
              END-IF
*
              IF AT-V.AT-STATUS = 'W'
              WRITE (2) 'Application ' AT-V.ID-NUMBER 'has been withdrawn'
              END-IF
*
              MOVE TRUE TO #SPS-FND
              END-FIND
*
              IF #SPS-FND
              WRITE (2) 'Application found for ' ST-V.ID-NUMBER
                2X AT-V.ID-NUMBER
              ESCAPE BOTTOM
              END-IF
*
*      MOVE ST-V.NAME-SP TO #NAME-CHECK                                       /* vt2  \/
              move #NAME-SP     TO #NAME-CHECK
*      RESET #LAST-STAT #MI-STAT #FIRST-20-STAT
*      CALLNAT 'GFMLNSXX'
*        #NAME-CHECK
*        #FIRST-20-STAT
*        #MI-STAT
*        #LAST-STAT
*        #ERR-MSG                                                             /* VT2   /\
*
              READ AT-V BY AT-V.NAME FROM #LAST-STAT
                MOVE AT-V.NAME TO #NAME-CHECK
                RESET #LAST-APP #MI-APP #FIRST-20-APP
                CALLNAT 'GFMLNSXX'
                  #NAME-CHECK
                  #FIRST-20-APP
                  #MI-APP
                  #LAST-APP
                  #ERR-MSG
*
                IF #LAST-APP NE #LAST-STAT
                ESCAPE BOTTOM
                END-IF
*
                IF AT-V.SSN = 0
                  AND #LAST-APP = #LAST-STAT
                  AND #FIRST-20-APP = #FIRST-20-STAT
                MOVE TRUE TO #SPS-FND
                IF AT-V.REFERING-ID-NUMBER (1) NE ST-V.ID-NUMBER
                WRITE (2) ST-V.ID-NUMBER 'not linked to ' AT-V.ID-NUMBER
                END-IF
                ESCAPE BOTTOM
                END-IF
                END-READ
*
                IF #SPS-FND
                WRITE (2) 'Application found for ' ST-V.ID-NUMBER
                  2X AT-V.ID-NUMBER 'by Name'
                ESCAPE BOTTOM
                END-IF
*
                FIND AT-V WITH AT-V.SSN = ST-V.SSN
                  IF AT-V.INTRO-FLAG = 'A'
                  ESCAPE TOP
                  END-IF
*
                  IF AT-V.AT-STATUS = 'A'
                  MOVE AT-V.USER-SOURCE TO #DISPLAY-USER
                  MOVE EDITED AT-V.ID-NUMBER (EM=999999) TO #DISPLAY-ORIG-APP
                  ESCAPE BOTTOM
                  END-IF
                  END-FIND
*
                  RESET #CONTACT-SEG
                  MOVE ST-V.ID-NUMBER TO #CGA-SCR-ID
                  CALLNAT 'G3500SAD' #CGA-MASTER #PDA-AREA-G3500AAD
*
                  MOVE EDITED ST-V.ID-NUMBER (EM=999999) TO #DISPLAY-ID-NUMBER
*      MOVE ST-V.NAME-SP                      TO #DISPLAY-SPOUSE-NAME        /* vt2
                 RESET #SPOUSE-CN #DATE-OF-BIRTH-SP                                      /* TT1
                 #SPOUSE-CN           := FUNCTION-SPOUSE-CI(<ST-V.MEMBER-CONTACT-ID>)    /* TT1
                 #DATE-OF-BIRTH-SP    := GET-DATE-OF-BIRTH(<#SPOUSE-CN>)                 /* TT1
                  COMPRESS #DOB-MM #DOB-DD #DOB-YYYY                                     /* TT1
                    INTO #DISPLAY-DOB WITH '/'
                  COMPUTE #ENTRY-DATE = 99999999 - MD-V.ENTRY-DATE
                  COMPRESS #ENTRY-DATE-MM #ENTRY-DATE-DD #ENTRY-DATE-YYYY
                    INTO #DISPLAY-ENTRY-DATE WITH '/'
*
                  IF #DISPLAY-ORIG-APP = ' ' OR #DISPLAY-USER = ' '
                  MOVE 'UNKNOWN' TO #DISPLAY-ORIG-APP
                  MOVE 'XXX'     TO #DISPLAY-USER
                  END-IF
*
                  ADD +1 TO #CNT-1
                  WRITE (1)                #CNT-1                                         /* vt1  was DISPLAY(1)
                    'Member #'               #DISPLAY-ID-NUMBER
                    'Member Rank'            #DISPLAY-RANK                                 /* vt1 \/
                    'Member First Name'      #DISPLAY-FIRST-NAME
                    'Member Middle Name'     #DISPLAY-MIDDLE-NAME
                    'Memeber Last Name'      #DISPLAY-LAST-NAME
                    'Member e-mail'          #DISPLAY-E-MAIL (AL=50)
                    'Spouse First Name'      #DISPLAY-SP-FIRST-NAME
                    'Spouse Middle Name'     #DISPLAY-SP-MIDDLE-NAME
                    'Spouse Last Name'       #DISPLAY-SP-LAST-NAME
*        'Spouse Name' #DISPLAY-SPOUSE-NAME                                    /* vt1 /\
                    'Spouse DOB'             #DISPLAY-DOB
                    'Orig User'              #DISPLAY-USER
                    'Orig App'               #DISPLAY-ORIG-APP
                    'Entry Date'             #DISPLAY-ENTRY-DATE
                    'Address1  '             #FIRST-ADDRESS                               /* vt1 \/
                    'Address2  '             #SECOND-ADDRESS
                    'Address3  '             #THIRD-ADDRESS                               /* vt1 /\

*
                  COMPRESS #DISPLAY-ID-NUMBER
                    #TAB  #DISPLAY-RANK                                            /* vt1 \/
                    #TAB  #DISPLAY-FIRST-NAME
                    #TAB  #DISPLAY-MIDDLE-NAME
                    #TAB  #DISPLAY-FIRST-NAME
                    #TAB  #DISPLAY-E-MAIL
                    #TAB  #DISPLAY-SP-FIRST-NAME
                    #TAB  #DISPLAY-SP-MIDDLE-NAME
                    #TAB  #DISPLAY-SP-LAST-NAME
*         #TAB  #DISPLAY-SPOUSE-NAME                                   /* vt1 /\
                    #TAB  #DISPLAY-DOB
                    #TAB  #DISPLAY-USER
                    #TAB  #DISPLAY-ORIG-APP
                    #TAB  #DISPLAY-ENTRY-DATE
                    #TAB  #FIRST-ADDRESS
                    #TAB  #SECOND-ADDRESS
                    #TAB  #THIRD-ADDRESS INTO #EXTRACT-RECORD LEAVING NO
*
                  WRITE WORK 2 #EXTRACT-RECORD
                  RESET #EXTRACT-RECORD
                  END-FIND
                  END-IF
                  END-READ
*
************************************************************************       /* vt1 \/
** DEFINE SUBROUTINE CALL-GDATESXX
************************************************************************
*
** CALLNAT 'GDATESXX'
**  #TO-DATE
**  #FROM-DATE
**  #RETURN-CALC
**  #REQUEST
*
**  END-SUBROUTINE                                                            /* vt1 /\
*
                END
