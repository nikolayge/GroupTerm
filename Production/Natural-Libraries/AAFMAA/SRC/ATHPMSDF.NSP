* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPMSDF - DFAS/AAFMAA ALLOTMENT MISMATCH
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* SAG  12012005 RH1  SS - Replaced the HEX constant '05' (Tab position)*
*                    EBCDIC to HEX code '09' ASCII                     *
* DRW 03/05/2008 DW2 Add new GM AR Amounts to NT REcord                *
* DRW 09/04/2008 DW3 Add APFP Slot in GM AR NT record                  *
* PAM 03/20/2009 PM4 Add DREV slot in GM AR NT record                  *
* PAM 06/01/2009 PM5 Add ADCR slot in GM AR NT record                  *
* DRW 09/22/2009 DW6 SVC-FEE CALC  /  PROCESS-IND
************************************************************************
DEFINE DATA
LOCAL
* 1 #TAB     (A1) INIT <H'05'>     /* SAG RH1 12012005 SS
1 #TAB       (A1) INIT <H'09'>     /* SAG RH1 12012005 SS
1 #JCL-PARM       (A10)
1 REDEFINE #JCL-PARM
  2 #JCL-MM            (N2)   /* DATE PARM 03/01/1999
  2 #JCL-X1            (A1)
  2 #JCL-DD            (N2)
  2 #JCL-X2            (A1)
  2 #JCL-YYYY          (N4)
*
1 #PAY-FILE     (A9)
1 #NUM-PAYS     (P5)
1 #HAS-FBR          (L)
1 #TOT-ALOT-RQD      (N5.2)
1 #TOT-TOT-ALOT-RQD  (N9.2)
1 #STATUS            (A5)
1 #1ST-POL-X         (I2)
1 #NUM-LINKED       (N3)
* 1 #ALOT-PAYS-TBL    (N9/1000)
1 #AFSC-CN       (N6)
1 #CONTACT-CN    (N6)
1 #AAFMAA-FND     (L)
1 #FOUND-PAID-BY  (L)
1 #CN             (N6)
*
1 #DFAS-ALOT-DIFF    (P5.2)
1 #TOT-DFAS-ALOT-DIFF(P7.2)
*
1 #DFAS-RQD-DIFF     (P5.2)
1 #TOT-DFAS-RQD-DIFF (P7.2)
1 #TOT-D-RQ-DIFF-MIN (P7.2)
1 #TOT-D-RQ-DIFF-PLUS(P7.2)
*
1 #ALOT-RQD-DIFF     (P5.2)
1 #TOT-ALOT-RQD-DIFF (P7.2)
1 #TOT-A-RQ-DIFF-MIN (P7.2)
1 #TOT-A-RQ-DIFF-PLUS(P7.2)
*
1 #TOT-AAFMAA-ALOT (P5.2)
1 #TOT-TOT-AAFMAA-ALOT (P9.2)
1 #TOT-DFAS            (P7.2)
1 #TOT-DFAS-MISMATCH   (P7.2)
1 #TOT-DFAS-MATCH      (P7.2)
1 #TOT-DFAS-IN         (P7.2)
*
1 #PARM-YYYYMMDD  (N8)
1 REDEFINE #PARM-YYYYMMDD
  2 #PARM-YYYY      (N4)
  2 #PARM-MM        (N2)
*
1 AT-V VIEW OF A-APPL-TRACKING
  2 ID-NUMBER
  2 INTRO-FLAG
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER      (N6)
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A   (A6)
  2 PROCESS-IND
  2 INTRO-FLAG
  2 SSN
  2 ALOT-AMT
  2 NAME
  2 MILITARY-SERVICE
  2 DEBIT-CREDIT-AMT
  2 PAY-STATUS       (9)
*
1 ST2-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 WIDOW-FLAG
  2 PROCESS-IND
  2 INTRO-FLAG
  2 SSN
  2 REDEFINE SSN
    3 SSN-A     (A9)
  2 ALOT-AMT
  2 NUMBER-MEMBERSHIPS
  2 X-ALT-LP-IND    (9)
  2 X-ALT-LP-IND-2  (9)
  2 X-ALT-LP-AMT    (9)
  2 X-ALT-LP-AMT-2  (9)
  2 STATUS     (9)
  2 ISSUE-DATE (9)
  2 MONTH-ALLOC-AMT (9)
  2 PLAN            (9)
  2 REDEFINE PLAN
    3 PLAN-OCC (9)
      4 PLAN-A1    (A1)
      4 PLAN-A2    (A2)
  2 DUES-ALL-PAID-IND
  2 PAY-STATUS        (9)
  2 MODE              (9)
  2 RID-PLAN          (9)
  2 ANNUAL-PREM       (9)
*
1 NT-V VIEW OF A-NOTES
  2 NOTE-TEXT    (60)
  2 REDEFINE NOTE-TEXT
    3 NOTE-TEXT-OCC  (60)
      4 NOTE-TEXT-60           (A60)
      4 REDEFINE NOTE-TEXT-60
        5 NOTE-TEXT-FILL1        (A14)
        5 NOTE-TEXT-ALOT-PAYS-CN (A6)
        5 NOTE-TEXT-FILL2        (A40)
      4 REDEFINE NOTE-TEXT-60
        5 NOTE-TEXT-FILL3           (A17)
        5 NOTE-TEXT-ALOT-PAID-BY-CN (A6)
        5 NOTE-TEXT-FILL4           (A37)
  2 REDEFINE NOTE-TEXT /*loan reg/acct reg tots-also G4200PMS/ATHPICTX
    3 NT-LN-TOT-AVAIL-TODAY        (N9.2)
    3 NT-LN-TOT-MBRS-ELIG-LNS      (N7)
*
    3 NT-LN-PRIN               (N9.2/2)
    3 NT-LN-DISBURSED          (N9.2/2)
    3 NT-LN-REPAID             (N9.2/2)
    3 NT-LN-ACC-INT            (N9.2/2)
    3 NT-LN-BILLED-AMT         (N9.2/2)
    3 NT-LN-INT-RECV           (N9.2/2)
    3 NT-LN-MBRS-W-LNS         (N7/2)
    3 NT-LN-COMP-INT-RT        (N2.5/2)
    3 NT-LN-CAP-INT-TO-DATE    (N9.2/2)
    3 NT-LN-MBRS-W-CAP-INT     (N7/2)
    3 NT-LN-LNS-BY-INT-RT-TBL  (13)
      4 NT-LN-LNS-BY-INT-RT     (N9.2/2)
    3 NT-LN-TOT-COMP-RT        (N2.5)
*
    3 NT-PR-PMT      (P9.2)
    3 NT-PR-NEW-LN   (P9.2)
    3 NT-PR-ADDL-LN  (P9.2)
    3 NT-PR-CAP      (P9.2)
    3 NT-PR-ADJ      (P9.2)
    3 NT-PR-NET-CHG  (P9.2)
    3 NT-IN-PMT      (P9.2)
    3 NT-IN-ADDL-LN  (P9.2)
    3 NT-IN-CAP      (P9.2)
    3 NT-IN-ADJ      (P9.2)
    3 NT-IN-NET-CHG  (P9.2)
    3 NT-ACC-ADJ     (P9.2)
    3 NT-PREM-PMT    (P9.2)
    3 NT-PREM-REV    (P9.2)
    3 NT-FPF-PMT     (P9.2)
    3 NT-FPF-REV     (P9.2)
    3 NT-DUES-PMT    (P9.2)
    3 NT-DUES-REV    (P9.2)
    3 NT-FPF-DU-PMT  (P9.2)
    3 NT-FPF-DU-REV  (P9.2)
    3 NT-ALOT-START  (P9.2)
    3 NT-ALOT-STOP   (P9.2)
    3 NT-EZ-START    (P9.2)
    3 NT-EZ-ADJ      (P9.2)
    3 NT-DR          (P9.2)
    3 NT-CR          (P9.2)
*
    3 NT-RECEIPTS    (P9.2)
    3 NT-INT-TRAN    (P9.2)
    3 NT-DISBURSEMENTS (P9.2)
    3 NT-ADJ-APL     (P9.2)
    3 NT-ADJ-APL-CAP (P9.2)
    3 NT-ADJ-ETI     (P9.2)
    3 NT-ADJ-ALP     (P9.2)
    3 NT-ADJ-AIP     (P9.2)
    3 NT-ADJ-ELP     (P9.2)
    3 NT-ADJ-EIP     (P9.2)
    3 NT-EZ-PREMS    (P9.2)
    3 NT-ADJ-APL-PREM (P9.2)
    3 NT-ADJ-JI      (P9.2)
    3 NT-ADJ-L       (P9.2)
*
    3 NT-PAD-AMT     (P9.2)
*
    3 NT-PR-PMT-CAP  (P9.2)
    3 NT-PR-ADJ-CAP  (P9.2)
    3 NT-IN-PMT-CAP  (P9.2)
    3 NT-IN-ADJ-CAP  (P9.2)
    3 NT-ACC-ADJ-CAP (P9.2)
    3 NT-ADJ-ALP-CAP (P9.2)
    3 NT-ADJ-AIP-CAP (P9.2)
    3 NT-ADJ-ELP-CAP (P9.2)
    3 NT-ADJ-EIP-CAP (P9.2)
    3 NT-EZPAY-DUES  (P9.2)
    3 NT-ALLOT-DUES  (P9.2)
    3 NT-APL-DUES    (P9.2)
    3 NT-EZPAY-DUES-SO (P9.2)
    3 NT-ALLOT-DUES-SO (P9.2)
    3 NT-FPF-DU-PMT-SO (P9.2)
    3 NT-FPF-DU-REV-SO (P9.2)
    3 NT-DUES-PMT-SO  (P9.2)
    3 NT-DUES-REV-SO  (P9.2)
    3 NT-FPF-RID-PMT  (P9.2)    /* BELOW 6 ADDED 11/6/1999
    3 NT-FPF-RID-REV  (P9.2)
    3 NT-RID-PMT      (P9.2)
    3 NT-RID-REV      (P9.2)
    3 NT-RID-ALLOT    (P9.2)
    3 NT-RID-EZPAY    (P9.2)
    3 NT-ALLOT-PREMS  (P9.2)    /* below 2  added 3/26/2002
    3 NT-CTX-DFAS-TOT (P9.2)
*                            /* below 3  added 7/12/2004
    3 NT-ALLOT-UNDER  (P9.2)       /* amt alot-amt less than amt needed
    3 NT-ALLOT-OVER   (P9.2)       /* amt alot-amt gtr than amt needed
    3 NT-DFAS-NON-MATCH (P9.2)     /* amt dfas ssn non-match to AAFMAA
*
*                            /* below 10 added 3/5/2008     /* DW2
    3 NT-EZPAY-BADJ      (P9.2)
    3 NT-EZPAY-UNDERAGES (P9.2)
    3 NT-EZPAY-OVERAGES  (P9.2)
    3 NT-CC-RIDER           (P9.2)
    3 NT-CC-CAP-LOANS       (P9.2)
    3 NT-CC-POLICY-LOANS    (P9.2)
    3 NT-CC-CAP-INTEREST    (P9.2)
    3 NT-CC-POLICY-INTEREST (P9.2)
    3 NT-CC-BADJ            (P9.2)
    3 NT-CC-TOTAL           (P9.2)
*                            /* below 1 added 9/1/2008        /* DW3
    3 NT-EZPAY-APFP         (N9.2)
*                            /* below 1 added 03/01/2009      /* PM4
    3 NT-CC-DREV            (P9.2)                            /* PM4
      /* below 1 added 06/01/2009     /* PM5
    3 NT-CC-OVERAGES        (P9.2)                            /* PM5
*
    3 NT-EZPAY-PSM          (P9.2)                            /* PM99
    3 NT-ALLOT-PSM          (P9.2)                            /* PM99
    3 NT-CC-PSM             (P9.2)                            /* PM99
*
1 NT2-V VIEW OF A-NOTES
  2 NOTE-TEXT    (60)
  2 REDEFINE NOTE-TEXT
    3 NOTE-TEXT-OCC  (60)
      4 NOTE-TEXT-60           (A60)
      4 REDEFINE NOTE-TEXT-60
        5 NOTE-TEXT-FILL1        (A14)
        5 NOTE-TEXT-ALOT-PAYS-CN (A6)
        5 NOTE-TEXT-FILL2        (A40)
      4 REDEFINE NOTE-TEXT-60
        5 NOTE-TEXT-FILL3           (A17)
        5 NOTE-TEXT-ALOT-PAID-BY-CN (A6)
        5 NOTE-TEXT-FILL4           (A37)
*
1 ALOT-REC    (A45)
1 REDEFINE ALOT-REC
  2 AL-SSN-A    (A9)
  2 REDEFINE AL-SSN-A
    3 AL-SSN     (N9)
  2 AL-SERV     (A1)
  2 AL-STATUS   (A1)
  2 AL-AMOUNT-A (A6)
  2 REDEFINE AL-AMOUNT-A
    3 AL-AMOUNT  (N4.2)
  2 AL-NAME     (A22)
  2 AL-EFF-DT   (N06)
*
1 #COUNTERS
  2 #RECS-READ        (P5)
  2 #RECS-SELECTED    (P5)
  2 #CNT              (P5)
  2 #CNT-2            (P7)
  2 #CNT-3            (P7)
  2 #CNT-4            (P7)
  2 #CNT-5            (P7)
  2 #CNT-6            (P7)
  2 #CNT-7            (P7)
  2 #I1               (I2)
  2 #I2               (I2)
  2 #I3               (I2)
  2 #I4               (I2)
  2 #I5               (I2)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY          (N4)
  2 #MM            (N2)
  2 #DD            (N2)
*
1 #SVC-FEE    (N2.2)
1 #SVC-FEE-2P (N2.2) INIT <18.50>
1 #SVC-FEE-3P (N2.2) INIT <12.50>
1 #SVC-FEE-4P (N1.2) INIT <9.50>
1 #SVC-FEE-5P (N1.2) INIT <7.50>
1 #SVC-FEE-6P (N1.2) INIT <6.50>
1 #SVC-FEE-7P (N1.2) INIT <6.00>
1 #SVC-FEE-10 (N1.2) INIT <4.50>
1 #SVC-FEE-20 (N1.2) INIT <3.00>
1 #SVC-FEE-30 (N1.2) INIT <2.50>
1 #SVC-FEE-OL (N1.2) INIT <2.00>
1 #SVC-FEE-TM (N1.2) INIT <2.00>
*
1 #AMT-8     (A8)
1 #AMT-10    (A10)
*
1 #DFAS-SSN     (N9)
1 REDEFINE #DFAS-SSN
  2 #DFAS-SSN-A  (A9)
1 #DFAS-IN      (P5)
*
* below is linkage to GRIDCSXX
1 #ID         (N6)
1 REDEFINE #ID
  2 #ID-A      (A6)
* THE FOLLOWING INPUT IS PASSED ONLY ON AN "AT" FOR A NEW RIDER
1 #AT-RID-ATTACH-FAC-AMT (N6.2) /* Only if attached to the new "AT"
1 #AT-RID-ATTACH-PLAN    (A3)   /*    policy not yet created
1 #AT-RID-PLAN           (A2/5) /* New rider plan
1 #AT-RID-ATTACH-ISS-DT  (N8/5) /* Only if attached to an existing pol
* output below  (ex = existing)
1 #AT-TOT-FBR-PREM        (N3.2)
1 #EX-FBR-PREM-BY-LINE    (N3.2/9)
1 #EX-SPS-DB-BY-LINE      (N6/9)
1 #EX-DEP-DB-BY-LINE      (N6/9)
1 #EX-EACH-DEP-DB-BY-LINE (N6/9)
1 #NUM-ELIG-CHILDREN      (N2)
1 #NUM-ELIG-CHILDREN-UNDER-6-MON (N2)
1 #TOT-CHILD-DB      (N6)
1 #RID-TEXT          (A78)
* above is linkage to GRIDCSXX
*
END-DEFINE
* * * * * * * * * * * * * * * * *
*
READ WORK 1 ONCE RECORD #JCL-PARM
*
MOVE #JCL-YYYY TO #YYYY
MOVE #JCL-MM   TO #MM
MOVE #JCL-DD   TO #DD
MOVE #YYYYMMDD TO #PARM-YYYYMMDD
*
FORMAT  LS=133 PS=76
WRITE   TITLE LEFT 'PROGRAM: ' *PROGRAM 5X    /* not now used
  'DFAS Mismatch Exceptions'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (2) LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X    /* not now used
  'Rpt 1 - DFAS Matches'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (3) LS=133 PS=76
WRITE  (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'RPT 2 -DFAS Mismatches'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (4) LS=133 PS=76
WRITE  (4) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'RPT 3 -NON-CAP AAFM ALOT needed not equal to AAFMAA ALOT-AMT'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (5) LS=133 PS=76
WRITE  (5) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'RPT 4 -CAP AAFM ALOT needed not equal to AAFMAA ALOT-AMT'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
REPEAT UNTIL #DFAS-SSN = 99999999
  PERFORM READ-DFAS
*
  IF #DFAS-SSN = 999999999
    ESCAPE BOTTOM
  END-IF
*
  RESET #CN #AAFMAA-FND #TOT-AAFMAA-ALOT #AFSC-CN #CONTACT-CN
  RESET #NUM-LINKED
  FIND ST-V WITH SSN = #DFAS-SSN
*   IF ST-V.PROCESS-IND = 'C' OR = 'S'     /* DW6
    IF ST-V.PROCESS-IND = 'C'             /* DW6
*     IF ST-V.PROCESS-IND = 'S'                /* DW6
*       MOVE ST-V.ID-NUMBER TO #AFSC-CN
*     END-IF
*
      IF ST-V.PROCESS-IND = 'C'
        MOVE ST-V.ID-NUMBER TO #CONTACT-CN
      END-IF
*
      ESCAPE TOP
    END-IF
*
    MOVE TRUE TO #AAFMAA-FND
    ESCAPE BOTTOM
  END-FIND
*
  IF NOT #AAFMAA-FND
    RESET #CN #TOT-AAFMAA-ALOT #TOT-ALOT-RQD
    PERFORM DFAS-MISMATCH
    ESCAPE TOP
  END-IF
*
  MOVE ST-V.ID-NUMBER TO #CN
  RESET #TOT-ALOT-RQD                    /* accum total allot-needed
  MOVE ST-V.ALOT-AMT TO #TOT-AAFMAA-ALOT /* accum total ALOT-AMT
*
  FIND (1) ST2-V WITH MEMBER-KEY = ST-V.ID-NUMBER-A
  END-FIND
  PERFORM CHECK-ALOT-AMT  /* accum  #tot-alot-rqd
*
  FIND (1) NT-V WITH ID-NUMBER = ST-V.ID-NUMBER  /* find notes
    FOR #I2 1 TO 60
      IF NT-V.NOTE-TEXT (#I2) = MASK ('*#ALOT:PAYS')  /* find pays note
        RESET #FOUND-PAID-BY
        IF  (NT-V.NOTE-TEXT-ALOT-PAYS-CN (#I2) NE MASK (NNNNNN))
            OR (NT-V.NOTE-TEXT-ALOT-PAYS-CN (#I2) = '000000')
          WRITE ST-V.ID-NUMBER 'has a alot pays note w/o a 6-digit CN'
        END-IF
*
        FIND ST2-V WITH MEMBER-KEY = NT-V.NOTE-TEXT-ALOT-PAYS-CN (#I2)
          ADD 1 TO #NUM-LINKED
          ADD ST2-V.ALOT-AMT TO #TOT-AAFMAA-ALOT    /*    find payee
*
          PERFORM CHECK-ALOT-AMT  /* accum #tot-alot-rqd
*
          MOVE ST2-V.SSN-A TO #PAY-FILE
          WRITE WORK 3 #PAY-FILE
*
          IF #PAY-FILE = '000000000'
            WRITE 'SSN = 0' ST2-V.ID-NUMBER
              NT-V.NOTE-TEXT-ALOT-PAYS-CN (#I2)
          END-IF
*
          ADD 1 TO #NUM-PAYS
*
          FIND (1) NT2-V WITH ID-NUMBER = ST2-V.ID-NUMBER  /* find notes
            FOR #I3 1 TO 60
              IF NT2-V.NOTE-TEXT (#I3) = MASK ('*#ALOT:PAID BY')
                IF  (NT-V.NOTE-TEXT-ALOT-PAYS-CN (#I2) NE MASK (NNNNNN))
                    OR (NT-V.NOTE-TEXT-ALOT-PAYS-CN (#I2) = '000000')
                  WRITE ST2-V.ID-NUMBER
                    'has a paid by note w/o a 6-digit CN'
                END-IF
*
                IF NT2-V.NOTE-TEXT-ALOT-PAID-BY-CN (#I3) =
                    ST-V.ID-NUMBER-A
                  MOVE TRUE TO #FOUND-PAID-BY
                  ESCAPE BOTTOM
                END-IF
              END-IF
            END-FOR
          END-FIND
*
          IF NOT #FOUND-PAID-BY
            WRITE AL-SSN ST-V.ID-NUMBER ST2-V.ID-NUMBER
              'Payee has missing Payor note'
          END-IF
        END-FIND
      END-IF
    END-FOR
  END-FIND
*
  ADD #TOT-AAFMAA-ALOT TO #TOT-TOT-AAFMAA-ALOT
  COMPUTE #DFAS-RQD-DIFF = AL-AMOUNT - #TOT-ALOT-RQD
  ADD #DFAS-RQD-DIFF TO #TOT-DFAS-RQD-DIFF
*
  IF #DFAS-RQD-DIFF LT 0
    SUBTRACT #DFAS-RQD-DIFF FROM #TOT-D-RQ-DIFF-MIN
  ELSE
    ADD #DFAS-RQD-DIFF TO #TOT-D-RQ-DIFF-PLUS
  END-IF
*
  COMPUTE #ALOT-RQD-DIFF = #TOT-AAFMAA-ALOT - #TOT-ALOT-RQD
  ADD #ALOT-RQD-DIFF TO #TOT-ALOT-RQD-DIFF
  IF #ALOT-RQD-DIFF LT 0
    SUBTRACT #ALOT-RQD-DIFF FROM #TOT-A-RQ-DIFF-MIN
  ELSE
    ADD #ALOT-RQD-DIFF TO #TOT-A-RQ-DIFF-PLUS
  END-IF
*
  IF  (#DFAS-RQD-DIFF NE 0)
      OR (#ALOT-RQD-DIFF NE 0)
    IF ST-V.INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q'
      ADD 1 TO #CNT-5
      DISPLAY (5) #CNT-5 ST-V.SSN
        'CN'               ST-V.ID-NUMBER
        'SRV'              ST-V.MILITARY-SERVICE
        'DFAS/amt'         AL-AMOUNT
        'TOT/Alot/Amt'     #TOT-AAFMAA-ALOT
        'Tot/Allot/rqd'    #TOT-ALOT-RQD   (EM=ZZZZ.99)
        'DFAS-/RQD/Diff'    #DFAS-RQD-DIFF  (EM=Z,ZZZ.99-)
        'Alot-/RQD/Diff'    #ALOT-RQD-DIFF  (EM=Z,ZZZ.99-)
        'DB-CR'            ST-V.DEBIT-CREDIT-AMT (EM=-ZZZZZZ.99)
        'Int/Flg'          ST-V.INTRO-FLAG
        'Pay/Stat/1'       ST-V.PAY-STATUS (1)
        'Stat'             #STATUS
        'Name'             ST-V.NAME (EM=XXXXXXXXXXXXXXXX)
    ELSE
      ADD 1 TO #CNT-4
      DISPLAY (4) #CNT-4 ST-V.SSN
        'CN'               ST-V.ID-NUMBER
        'SRV'              ST-V.MILITARY-SERVICE
        'DFAS/amt'         AL-AMOUNT
        'TOT/Alot/Amt'     #TOT-AAFMAA-ALOT
        'Tot/Allot/rqd'    #TOT-ALOT-RQD   (EM=ZZZZ.99)
        'DFAS-/RQD/Diff'    #DFAS-RQD-DIFF  (EM=Z,ZZZ.99-)
        'Alot-/RQD/Diff'    #ALOT-RQD-DIFF  (EM=Z,ZZZ.99-)
        'DB-CR'            ST-V.DEBIT-CREDIT-AMT (EM=-ZZZZZZ.99)
        'Int/Flg'          ST-V.INTRO-FLAG
        'Pay/Stat/1'       ST-V.PAY-STATUS (1)
        'Stat'             #STATUS
        'Name'             ST-V.NAME (EM=XXXXXXXXXXXXXXXX)
    END-IF
  END-IF
*
  IF AL-AMOUNT = #TOT-AAFMAA-ALOT
    PERFORM DFAS-MATCH
  ELSE
    PERFORM DFAS-MISMATCH
  END-IF
END-REPEAT
*
WRITE 'Num Alot Pays          =' #NUM-PAYS
WRITE 'TOT DFAS in            =' #TOT-DFAS-IN   (EM=Z,ZZZ,ZZZ.99)
*
WRITE '*'
WRITE 'Tot-DFAS Amt            =' #TOT-DFAS       (EM=Z,ZZZ,ZZZ.99)
*
FIND NT-V WITH ID-NUMBER = 800105  /* get DFAS non-match amt
END-FIND
*
WRITE 'DFAS-SSN not on AAFM fil=' NT-DFAS-NON-MATCH (EM=Z,ZZZ,ZZZ.99)
*
SUBTRACT NT-DFAS-NON-MATCH FROM #TOT-DFAS
SUBTRACT NT-DFAS-NON-MATCH FROM #TOT-DFAS-MISMATCH
SUBTRACT NT-DFAS-NON-MATCH FROM #TOT-DFAS-ALOT-DIFF
SUBTRACT NT-DFAS-NON-MATCH FROM #TOT-DFAS-RQD-DIFF
SUBTRACT NT-DFAS-NON-MATCH FROM #TOT-D-RQ-DIFF-PLUS
*
WRITE 'Tot-DFAS Amt for AAFMAA =' #TOT-DFAS       (EM=Z,ZZZ,ZZZ.99)
WRITE 'Tot-DFAS Amt Matched    =' #TOT-DFAS-MATCH (EM=Z,ZZZ,ZZZ.99)
WRITE 'Tot-DFAS Amt Not Matched=' #TOT-DFAS-MISMATCH (EM=Z,ZZZ,ZZZ.99)
WRITE 'Tot-AAFMAA ALOT-AMT     =' #TOT-TOT-AAFMAA-ALOT(EM=Z,ZZZ,ZZZ.99)
WRITE 'Tot-DFAS/ALOT DIFF      =' #TOT-DFAS-ALOT-DIFF (EM=Z,ZZZ,ZZZ.99)
WRITE '*'
WRITE 'Tot-DFAS/RQD-DIFF       =' #TOT-DFAS-RQD-DIFF (EM=Z,ZZZ,ZZZ.99)
WRITE 'Tot-DFAS-RQD-DIFF-MINUS =' #TOT-D-RQ-DIFF-MIN (EM=Z,ZZZ,ZZZ.99)
WRITE 'Tot-DFAS-RQD-DIFF-PLUS  =' #TOT-D-RQ-DIFF-PLUS(EM=Z,ZZZ,ZZZ.99)
*
WRITE '*'
WRITE 'Tot-AAFMAA ALOT Required=' #TOT-TOT-ALOT-RQD  (EM=Z,ZZZ,ZZZ.99)
WRITE 'Tot-ALOT/RQD-DIFF       =' #TOT-ALOT-RQD-DIFF (EM=Z,ZZZ,ZZZ.99)
WRITE 'Tot-ALOT-RQD-DIFF-MINUS =' #TOT-A-RQ-DIFF-MIN (EM=Z,ZZZ,ZZZ.99)
WRITE 'Tot-ALOT-RQD-DIFF-PLUS  =' #TOT-A-RQ-DIFF-PLUS(EM=Z,ZZZ,ZZZ.99)
*
* * * * * * * * * * * *
DEFINE SUBROUTINE DFAS-MATCH
* * * * * * * * * * * *
*
ADD AL-AMOUNT TO #TOT-DFAS-MATCH
ADD AL-AMOUNT TO #TOT-DFAS
*
ADD 1 TO #CNT-2
DISPLAY (2) #CNT-2 (EM=ZZZZZ)
  'SSN'         AL-SSN-A
  'AAFMAA/CN'   #CN
  'DFAS/Amt'    AL-AMOUNT
  'AAFMAA/Amt'  #TOT-AAFMAA-ALOT
  'AAFMAA/Reqd' #TOT-ALOT-RQD
  'DFAS-/Rqd/Diff' #DFAS-RQD-DIFF  (EM=ZZ,ZZZ.99-)
  'Alot-/RQD/Diff' #ALOT-RQD-DIFF  (EM=ZZ,ZZZ.99-)
  'NUM/LNKED'   #NUM-LINKED
*  'AFSC/CN'     #AFSC-CN               /* DW6
  'CONTACT/CN'  #CONTACT-CN
*
END-SUBROUTINE
*
* * * * * * * * * * * *
DEFINE SUBROUTINE DFAS-MISMATCH
* * * * * * * * * * * *
*
IF AL-SSN = 248609856 OR = 259927181
  ADD AL-AMOUNT TO #TOT-DFAS-MATCH
  ADD AL-AMOUNT TO #TOT-DFAS
  WRITE (3) 'bypassed DFAS ALOT mismatch on' AL-SSN #CN
    'DFAS amt=' AL-AMOUNT 'AAFMAA ALOT-AMT=' #TOT-AAFMAA-ALOT
  WRITE (3) '51579 pays for only a portion of cn80405 ($5.16)'
  ESCAPE ROUTINE
END-IF
*
IF AL-SSN = 467868351
  ADD AL-AMOUNT TO #TOT-DFAS-MATCH
  ADD AL-AMOUNT TO #TOT-DFAS
  WRITE (3) 'bypassed DFAS ALOT mismatch (2 recs) on'  AL-SSN #CN
    'DFAS amt=' AL-AMOUNT 'AAFMAA ALOT-AMT=' #TOT-AAFMAA-ALOT
  WRITE (3) '88432 has 2 records from DFAS which should be combined'
  ESCAPE ROUTINE
END-IF
*
COMPUTE #DFAS-ALOT-DIFF = AL-AMOUNT - #TOT-AAFMAA-ALOT
ADD #DFAS-ALOT-DIFF TO #TOT-DFAS-ALOT-DIFF
ADD AL-AMOUNT TO #TOT-DFAS-MISMATCH
ADD AL-AMOUNT TO #TOT-DFAS
*
ADD 1 TO #CNT-3
DISPLAY (3) #CNT-3 (EM=ZZZZZ)
  'SSN'         AL-SSN-A
  'AAFMAA/CN'   #CN
  'DFAS/Amt'    AL-AMOUNT
  'AAFMAA/Amt'  #TOT-AAFMAA-ALOT
  'AAFMAA/Reqd' #TOT-ALOT-RQD
  'DFAS-/Alot/Diff' #DFAS-ALOT-DIFF (EM=ZZ,ZZZ.99-)
  'DFAS-/Rqd/Diff'  #DFAS-RQD-DIFF  (EM=ZZ,ZZZ.99-)
  'Alot-/RQD/Diff'  #ALOT-RQD-DIFF  (EM=ZZ,ZZZ.99-)
  'NUM/LNKED'   #NUM-LINKED
*  'AFSC/CN'     #AFSC-CN         /* DW6
  'CONTACT/CN'  #CONTACT-CN
*
IF NOT #AAFMAA-FND
  FIND AT-V WITH SSN = AL-SSN
    IF AT-V.INTRO-FLAG = 'V'
      WRITE (3) '  Above SSN is an AFSC "AT" record' AT-V.ID-NUMBER
    ELSE
      WRITE (3) '  Above SSN is an AAFM "AT" record' AT-V.ID-NUMBER
    END-IF
  END-FIND
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE READ-DFAS
* * * * * * * * * * * * * *
*
IF #DFAS-SSN = 999999999
  ESCAPE ROUTINE
END-IF
*
READ WORK 2 ONCE RECORD ALOT-REC
AT END
  MOVE '999999999' TO #DFAS-SSN-A
  ESCAPE ROUTINE
END-ENDFILE
*
IF AL-SSN-A = #DFAS-SSN-A
  WRITE AL-SSN-A 'Duplicate SSN on DFAS file' AL-AMOUNT
END-IF
*
ADD 1 TO #DFAS-IN
MOVE AL-SSN-A TO #DFAS-SSN-A
ADD AL-AMOUNT TO #TOT-DFAS-IN
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-ALOT-AMT
* * * * * * * * * * * * * * * *
*
RESET #1ST-POL-X #HAS-FBR #SVC-FEE
*
FOR #I1 1 TO 9
  IF ST2-V.STATUS (#I1) = 'D'
    MOVE #I1 TO #1ST-POL-X
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF #1ST-POL-X = 0
  MOVE 1 TO #1ST-POL-X
END-IF
*
IF   (ST2-V.ISSUE-DATE (#1ST-POL-X) GE 19970101)
    AND (ST2-V.MONTH-ALLOC-AMT (#1ST-POL-X) NE 999.99)
    AND (NOT ST2-V.PLAN (#1ST-POL-X) = 'SO' OR = 'FSO')
    AND (NOT ST2-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
    OR = 'O' OR = 'P' OR = 'Q')
    AND (ST2-V.DUES-ALL-PAID-IND NE 'Y')
    AND (ST2-V.PAY-STATUS (#1ST-POL-X) LT '40')
    AND (ST2-V.MODE (#1ST-POL-X) = 'G')
    AND (ST2-V.PROCESS-IND = 'G')           /* MUST BE G/F         DW6
  RESET #SVC-FEE
  DECIDE ON FIRST VALUE ST2-V.PLAN (#1ST-POL-X)
    VALUE '2PF' MOVE #SVC-FEE-2P TO #SVC-FEE
    VALUE '3PF' MOVE #SVC-FEE-3P TO #SVC-FEE
    VALUE '4PF' MOVE #SVC-FEE-4P TO #SVC-FEE
    VALUE '5PF' MOVE #SVC-FEE-5P TO #SVC-FEE
    VALUE '6PF' MOVE #SVC-FEE-6P TO #SVC-FEE
    VALUE '7PF' MOVE #SVC-FEE-7P TO #SVC-FEE
    VALUE '8PF' MOVE #SVC-FEE-7P TO #SVC-FEE
    VALUE '9PF' MOVE #SVC-FEE-7P TO #SVC-FEE
    VALUE '7P'  MOVE #SVC-FEE-7P TO #SVC-FEE
    VALUE '20P' MOVE #SVC-FEE-20 TO #SVC-FEE
    VALUE '30P' MOVE #SVC-FEE-30 TO #SVC-FEE
    VALUE 'OL'  MOVE #SVC-FEE-OL TO #SVC-FEE
    VALUE 'RT'  MOVE #SVC-FEE-TM TO #SVC-FEE
    VALUE 'LT'  MOVE #SVC-FEE-TM TO #SVC-FEE
    NONE        IGNORE
  END-DECIDE
*
  IF   (ST2-V.PLAN-A1 (#1ST-POL-X) GE 'U')
      AND (ST2-V.PLAN-A1 (#1ST-POL-X) LE 'Z')
    MOVE #SVC-FEE-TM TO #SVC-FEE
  END-IF
*
  IF ST2-V.PLAN (#1ST-POL-X) = MASK (NN'F')
    IF ST2-V.PLAN (#1ST-POL-X) LE '19F' MOVE #SVC-FEE-10 TO #SVC-FEE ELSE
      IF ST2-V.PLAN (#1ST-POL-X) LE '29F' MOVE #SVC-FEE-20 TO #SVC-FEE ELSE
        IF ST2-V.PLAN (#1ST-POL-X) LE '34F' MOVE #SVC-FEE-30 TO #SVC-FEE ELSE
          MOVE #SVC-FEE-OL TO #SVC-FEE
        END-IF END-IF END-IF END-IF
*
  IF   (ST2-V.PAY-STATUS (#1ST-POL-X) = '12' OR = '21')
*   AND (ST2-V.PAID-TO-DATE (#1ST-POL-X) GE #2-MONS-AGO)
    RESET #SVC-FEE
  END-IF
*
  ADD #SVC-FEE TO #TOT-ALOT-RQD
END-IF
*
FOR #I1 1 TO 9    /* for alot amt check
  IF ST2-V.RID-PLAN (#I1) NE ' '
    MOVE TRUE TO #HAS-FBR
  END-IF
*
  IF   (ST2-V.STATUS (#I1) = 'D')
      AND (ST2-V.PAY-STATUS (#I1) LT '40')
      AND (ST2-V.MODE (#I1) = 'G')
*
    IF NOT ST2-V.PAY-STATUS (#I1) = '20' OR = '22' /* bypass not prem pa
      ESCAPE TOP
    END-IF
*
    COMPUTE #TOT-ALOT-RQD =
      #TOT-ALOT-RQD + (ST2-V.ANNUAL-PREM (#I1) / 12)
  END-IF
*
  IF ST2-V.X-ALT-LP-IND    (#I1) = '1' OR = '2'
    ADD ST2-V.X-ALT-LP-AMT (#I1) TO #TOT-ALOT-RQD
  END-IF
*
  IF ST2-V.X-ALT-LP-IND-2    (#I1) = '1' OR = '2'
    ADD ST2-V.X-ALT-LP-AMT-2 (#I1) TO #TOT-ALOT-RQD
  END-IF
END-FOR
*
IF #HAS-FBR
  MOVE ST2-V.ID-NUMBER TO #ID
  CALLNAT 'GRIDCSXX' USING
    #ID
    #AT-RID-ATTACH-FAC-AMT
    #AT-RID-ATTACH-PLAN
    #AT-RID-PLAN            (1:5)
    #AT-RID-ATTACH-ISS-DT   (1:5)
    #AT-TOT-FBR-PREM
    #EX-FBR-PREM-BY-LINE    (1:9)
    #EX-SPS-DB-BY-LINE      (1:9)
    #EX-DEP-DB-BY-LINE      (1:9)
    #EX-EACH-DEP-DB-BY-LINE (1:9)
    #NUM-ELIG-CHILDREN
    #NUM-ELIG-CHILDREN-UNDER-6-MON
    #TOT-CHILD-DB
    #RID-TEXT
*
  IF #RID-TEXT NE ' '
    WRITE ST2-V.ID-NUMBER 'FBR ERROR MESSAGE' #RID-TEXT
  END-IF
*
  FOR #I1 1 TO 9
    IF   (ST2-V.STATUS (#I1) = 'D')
        AND (ST2-V.PAY-STATUS (#I1) LT '40')
        AND (ST2-V.MODE (#I1) = 'G')
      ADD #EX-FBR-PREM-BY-LINE (#I1) TO #TOT-ALOT-RQD
*     IF #EX-FBR-PREM-BY-LINE (#I1) NE 0
*       WRITE ST2-V.ID-NUMBER 'FBR POLICY' #EX-FBR-PREM-BY-LINE (#I1)
*     END-IF
    END-IF
  END-FOR
END-IF
ADD #TOT-ALOT-RQD TO #TOT-TOT-ALOT-RQD
*
RESET #STATUS
IF #TOT-ALOT-RQD = 0
  IF ST2-V.WIDOW-FLAG = 'Y'
    MOVE 'DEAD' TO #STATUS
  ELSE
    IF ST2-V.NUMBER-MEMBERSHIPS = 0             /* OK           DW6
      MOVE 'INACT' TO #STATUS
    ELSE
      MOVE 'PDUP' TO #STATUS
    END-IF
  END-IF
END-IF
*
END-SUBROUTINE
*
END
