* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCNICP1'
*
* DESCRIPTION
*   XML Parser implementationfor file:
*   C:\Users\nguentchev\workspace96\PolicyOwnership\Natural-Libraries\AUCPO\RES\InsuredContacts.xsd
*   using PARSE XML statement and datastructure 'AUCAIC01'
*
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
LOCAL USING AUCAIC01
LOCAL USING PARSER-X
*
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
*
LOCAL
1 #CX                          (I4)
1 #CY                          (I4)
1 #CZ                          (I4)
1 #XML_PREFIX                  (A/1:1) DYNAMIC INIT <
  'i:' >
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
1 #LEN              (I4)
1 #PARSE-ERROR      (I4) CONST <-7>
1 get_policies_roles (I4) CONST <0>
END-DEFINE
*
RESET ContactRelationsList
ASSIGN #LEN := *LENGTH (#XML_INPUT)
IF #LEN <= 0
  ContactRelationsList.ErrorCode := #PARSE-ERROR
  ContactRelationsList.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNCPS1' #XML_OUTPUT ContactRelationsList
  ESCAPE ROUTINE
END-IF
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
/*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
ContactRelationsList.ErrorCode := #PARSE-ERROR
ContactRelationsList.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNICS1' #XML_OUTPUT ContactRelationsList
END-SUBROUTINE
*
DEFINE SUBROUTINE CALLBACK
/*                ========
#XML_VALUE := *TRIM (#XML_VALUE)
MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
PERFORM PARSE-DOCUMENT
END-SUBROUTINE
/**
*  Put the code to do the "real" work
*
IF ContactRelationsList.InsuredContactID > 0
  CALLNAT 'AUCNICG1' ContactRelationsList
  CALLNAT 'AUCNICS1' #XML_OUTPUT ContactRelationsList
END-IF
/**
* ------------------------------------------------- CALL THE PARSER
**PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE #XML_VALUE
DEFINE PARSE-DOCUMENT
*
DECIDE ON FIRST #XML_PATH
  VALUE 'ContactRelationsList//'
    IGNORE
  VALUE 'ContactRelationsList'
    RESET INITIAL ContactRelationsList
  VALUE 'ContactRelationsList/ErrorCode//'
    IGNORE
  VALUE 'ContactRelationsList/ErrorCode'
    IGNORE
* VALUE 'ContactRelationsList/ErrorCode/$'
*   ContactRelationsList.ErrorCode := #XML_VALUE
  VALUE 'ContactRelationsList/ErrorDescription//'
    IGNORE
  VALUE 'ContactRelationsList/ErrorDescription'
    IGNORE
  VALUE 'ContactRelationsList/ErrorDescription/$'
    ContactRelationsList.ErrorDescription := #XML_VALUE
  VALUE 'ContactRelationsList/InsuredContactID//'
    IGNORE
  VALUE 'ContactRelationsList/InsuredContactID'
    IGNORE
  VALUE 'ContactRelationsList/InsuredContactID/$'
    ContactRelationsList.InsuredContactID := VAL(#XML_VALUE)
  VALUE 'ContactRelationsList/LastUpdatedDate//'
    IGNORE
  VALUE 'ContactRelationsList/LastUpdatedDate'
    IGNORE
  VALUE 'ContactRelationsList/LastUpdatedDate/$'
    ContactRelationsList.LastUpdatedDate := VAL(#XML_VALUE)
  VALUE 'ContactRelationsList/LastUpdatedTime//'
    IGNORE
  VALUE 'ContactRelationsList/LastUpdatedTime'
    IGNORE
  VALUE 'ContactRelationsList/LastUpdatedTime/$'
    ContactRelationsList.LastUpdatedTime := VAL(#XML_VALUE)
  VALUE 'ContactRelationsList/LastUpdatedUser//'
    IGNORE
  VALUE 'ContactRelationsList/LastUpdatedUser'
    IGNORE
  VALUE 'ContactRelationsList/LastUpdatedUser/$'
    ContactRelationsList.LastUpdatedUser := #XML_VALUE
  VALUE 'ContactRelationsList/Relations//'
    IGNORE
  VALUE 'ContactRelationsList/Relations'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation//'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation'
    ADD 1 TO ContactRelationsList.C@ContactRelation
    #CX := ContactRelationsList.C@ContactRelation
    EXPAND ARRAY ContactRelationsList.ContactRelation TO (1:#CX)
  VALUE 'ContactRelationsList/Relations/ContactRelation/CN//'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation/CN'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation/CN/$'
    ContactRelationsList.CN(#CX) := VAL(#XML_VALUE)
  VALUE 'ContactRelationsList/Relations/ContactRelation/ContactID//'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation/ContactID'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation/ContactID/$'
    ContactRelationsList.ContactID(#CX) := VAL(#XML_VALUE)
  VALUE 'ContactRelationsList/Relations/ContactRelation/ContactName//'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation/ContactName'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation/ContactName/$'
    ContactRelationsList.ContactName(#CX) := #XML_VALUE
  VALUE 'ContactRelationsList/Relations/ContactRelation/DOB//'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation/DOB'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation/DOB/$'
    ContactRelationsList.DOB(#CX) := VAL(#XML_VALUE)
  VALUE 'ContactRelationsList/Relations/ContactRelation/Relationship//'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation/Relationship'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation/Relationship/$'
    ContactRelationsList.Relationship(#CX) := #XML_VALUE
  VALUE 'ContactRelationsList/Relations/ContactRelation/ContactType//'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation/ContactType'
    IGNORE
  VALUE 'ContactRelationsList/Relations/ContactRelation/ContactType/$'
    ContactRelationsList.ContactType(#CX) := #XML_VALUE
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END
