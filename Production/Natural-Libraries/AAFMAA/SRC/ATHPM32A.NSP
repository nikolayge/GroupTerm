* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID  ATHPM32A
****************************************************************
* THIS PROGRAM WILL FORMAT A REPORT ON ALL MEMBERS WHO
* HAVE DEATHS IN THE LATEST EXTRACT TAPE FROM THE MONTH END
* PRIOR
************************************************************************
*                       MODIFICATION LOG
* USER DATE       TAG   REASON
* SAG  11292005   RH1   SS - Modified the custom coded ON ERROR stmt &
*                      replaced it with copycode GABNDCX1
* SAG-AB 20060831      Turned all unconditional WRITE's into WRITE (1) as per advice PAM
* DRW 12/13/2007  DW1  Add a file of YTD info on death for The Current Year
* DRW 12/5/2008   DW2  Fix YTD-Death file extraction and add fields
* VXT 11/22/2010  VT1  CHANGE THE SOURCE OF NAME AND RANK FIELDS.
* bz  06/09/2013       Rebranding (Search for AAFMAA)
* TMT 06/10/2014  TT1  CONTACT NORMALIZATION DOB AND SEX
* YF  07/19/2017  YF1  Ticket 4772
************************************************************************
DEFINE DATA
LOCAL  USING GONERLXX                      /* SAG RH1 11292005 SS
LOCAL USING CONTPDA1                     /* TT1
LOCAL
1 PARM-DATE              (A10)
1 REDEFINE PARM-DATE
  2 PARM-MM              (N2)
  2 PARM-SL-1            (A1)
  2 PARM-DD              (N2)
  2 PARM-SL-2            (A1)
  2 PARM-YYYY            (N4)
*
1 NT-V VIEW OF A-NOTES       /* PM ADDED 04/2000 FOR LIFE EXPECTANCY
  2 ID-NUMBER            (N6) /* ALSO IN G4100PMS
  2 NOTE-DATE         (N8/60)
  2 NOTE-CLERK-ID     (A3/60)
  2 NOTE-LINE-NUM     (P1/60)
  2 NOTE-TEXT         (A60/60)
  2 REDEFINE NOTE-TEXT
    3 LIFE-OCCURENCE         (3)
      4 LIFE-AVG               (N6)
      4 LIFE-MED               (N6)
      4 LIFE-MAX               (N6)
      4 LIFE-MIN               (N6)
      4 LIFE-STD-DEV           (N6.2)
    3 LIFE-TOTAL              (N6)
    3 LAST-UPDATE-YYYY        (N4)
    3 LAST-UPDATE-MM          (N2)
    3 TOTAL-THIS-MONTH        (N6)
*
1 MBR-MTD-DET-V VIEW OF A-MBRSHIP-MTD-DETAIL
  2 ID-NUMBER
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A     (A6)
  2 ENTRY-DATE            (N8)
  2 REC-ISN               (N8)
  2 CODE                  (A1)
  2 USER
  2 ISSUE-DATE            (N8)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER             (N6)
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A          (A6)
  2 member-contact-id      (n8)                        /* vt1
  2 spouse-contact-id      (n8)                        /* vt1
  2 INTRO-FLAG
  2 RANK                  (A3)                        /* VT1
*  2 NAME                  (A25)                       /* vt1
*  2 NAME-SP               (A25)                       /* vt1
  2 DATE-DEATH-NOTIFY         (N8)         /* DW2
*   2 DATE-OF-BIRTH         (N8)                                /* TT1
*   2 REDEFINE DATE-OF-BIRTH                                    /* TT1
*     3 DOB-YYYY             (N4)                               /* TT1
*     3 DOB-MMDD             (N4)                               /* TT1
  2 CASH-VALUE                   (9)    /* DW2
  2 FACE-AMOUNT                  (9)    /* DW2
*
  2 DATE-OF-DEATH         (N8)
  2 REDEFINE DATE-OF-DEATH
    3 DOD-YYYY             (N4)
    3 DOD-MM               (N2)                                  /* YF1
    3 DOD-DD               (N2)                                  /* YF1
*
*   2 DATE-OF-BIRTH-SP      (N8)                                 /* TT1
*   2 REDEFINE DATE-OF-BIRTH-SP                                  /* TT1
*     3 DOB-SP-YYYY          (N4)                                /* TT1
*     3 DOB-SP-MMDD          (N4)                                /* TT1
*
  2 DATE-OF-DIVORCE       (N8) /* has sps-date-of-death if sps-st = d
  2 STATUS              (9)
  2 ISSUE-DATE          (9)
  2 PLAN                (9)
*
1 #DATE-OF-DEATH-SP      (N8)   /* has date-of-death for sps id st = d
1 REDEFINE #DATE-OF-DEATH-SP
  2 #DOD-SP-YYYY          (N4)
  2 #DOD-SP-MMDD          (N4)
  2 REDEFINE #DOD-SP-MMDD
    3 #DOD-SP-MM           (N2)
    3 #DOD-SP-DD           (N2)
*
1 #TOTAL-TABLE                /* PM ADDED 04/2000 LIFE EXPECTANCY TOTALS
  2 #NUM-OCCUR              (3)
    3 #AVG                   (N6)
    3 #MED                   (N6)
    3 #MAX                   (N6)
    3 #MIN                   (N6)
    3 #STD-DEV               (N6.2)
  2 #TOTAL                  (N6)
*
1 FIRS-VIEW     VIEW OF A-FIRS
  2 PLACE-OF-DEATH   (A35)
  2 CAUSE-OF-DEATH   (A35)
  2 POL-AMT-PAID      (9)
  2 POL-DATE          (9)
  2 POL-TYPE          (9)
  2 POL-DATE-CLM-SETTLED (45)  /* YF1
** END OF FIRS-VIEW
*
1 #LIFE-OCCUR              (I2) /* PM ADDED 04/2000 LIFE EXPEC TOTALS
1 #NT-FND                  (L) /* PM ADDED 04/2000 LIFE EXPEC TOTALS
1 #NOT-FND                 (L) /* PM ADDED 04/2000 LIFE EXPEC TOTALS
1 #TOTAL-THIS-MONTH        (N6)/* PM ADDED 04/2000 LIFE EXPEC TOTALS
*
1 #WYYYYMMDD-LOW
  2 #WYYYY-LOW   (N4)
  2 #WMM-LOW     (N2)
  2 #WDD-LOW     (N2)
1 REDEFINE #WYYYYMMDD-LOW
  2 #WYYYYMMDD-LOW-N (N8)
*
1 #WYYYYMMDD-HIGH
  2 #WYYYY-HIGH  (N4)
  2 REDEFINE #WYYYY-HIGH
    3 #WCENT-HIGH (N2)
    3 #WYY-HIGH   (N2)
    3 REDEFINE #WYY-HIGH
      4 #WYY-HIGH-A (A2)
  2 #WMM-HIGH    (N2)
  2 REDEFINE #WMM-HIGH
    3 #WMM-HIGH-A   (A2)
  2 #WDD-HIGH    (N2)
1 REDEFINE #WYYYYMMDD-HIGH
  2 #WYYYYMMDD-HIGH-N (N8)
1 REDEFINE #WYYYYMMDD-HIGH
  2 #DATE-DIFF        (N8)
*
1 #INVERSE-BEGIN-DATE  (N8)   /* ENTERED AS END DATE
1 #FLIP-BEGIN-DATE  (N8)
1 REDEFINE #FLIP-BEGIN-DATE
  2 #FLIP-BEGIN-DATE-YYYY (N4)
  2 #FLIP-BEGIN-DATE-MM   (N2)
  2 #FLIP-BEGIN-DATE-DD   (N2)
*
1 #INVERSE-END-DATE  (N8)    /* ENTERED AS BEGIN DATE
1 #FLIP-END-DATE  (N8)
1 REDEFINE #FLIP-END-DATE
  2 #FLIP-END-DATE-YYYY (N4)
  2 #FLIP-END-DATE-MM   (N2)
  2 #FLIP-END-DATE-DD   (N2)
*
1 #ACTUAL-ENTRY-DATE  (N8)
1 REDEFINE #ACTUAL-ENTRY-DATE
  2 #ACT-ENT-DT-YYYY (N4)
  2 #ACT-ENT-DT-MMDD (N4)
  2 REDEFINE #ACT-ENT-DT-MMDD
    3 #ACT-ENT-DT-MM   (N2)
    3 #ACT-ENT-DT-DD   (N2)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY    (N4)
  2 #MM      (N2)
  2 #DD      (N2)
*
1 #I1      (I2)
1 #I2      (I2)
1 #DEATH-REC        (A225)         /* DW1                            /* vt1 was 180
1 #DOD-AGE          (N4)
1 #DB               (A12)
1 #CSV              (A12)          /* DW2
1 #FACE             (A12)          /* DW2
1 #POL-NUM          (A16)
1 #TAB       (A1) INIT <H'09'>
*
1 #LAST-ID-NO        (N6)
1 #YRS-AREA          (A5)
1 #SURV-YRS-AREA     (A5)
*
1 #NUM-GUESSES      (P3)
1 #NUM-GUESSES-DOB  (P3)
1 #SPS-DOD-GUESSED  (A1)
1 #SPS-DOB-GUESSED  (A1)
1 #MBR-AGE          (N4)
1 #MBR-AGE-SUM      (P9)
1 #SPS-AGE          (N4)
1 #SPS-AGE-SUM      (P9)
1 #NUM-MBR-DEAD     (P5)
1 #NUM-SPS-DEAD     (P5)
1 #SURV-YRS-SUM     (P7)
1 #SURV-MONS-SUM    (P7)
1 #NUM-SURV         (P5)
1 #NUM-YRS          (P5)
*
* 1 #FIRST-NAME       (A20)
* 1 #LAST-NAME        (A20)
* 1 #OVFLW-NAME       (A20)
1 #WORK-AGE                (N3)
1 W-AVG-AGE                (N3)
1 W-AVG-AGE-2              (N3)
1 W-SUM-AGE                (P9)
1 W-RTD-DEATH              (P4)
1 W-ACT-DEATH              (P4)
1 W-EXTR-EOF               (L) INIT<FALSE>
1 HD-NAME-1                (A70)                               /* vt1 was 25
1 HD-NAME-2                (A50)                               /* VT1 WAS 24
1 HD-NAME-3                (A50)                               /* VT1 WAS 24
1 HD-ERROR-CODE            (A1)
1 WS-ABEND-CODE            (I4)
1 W-CAUSE-DEATH            (A35)
1 W-PLACE-DEATH            (A35)
1 NO-WD-RECORD             (A22) INIT<'**NO DOCUMENT RECORD**'>
1 #FOOTER                  (A50)
  INIT <'* INDICATES MEMBER ON ACTIVE DUTY AT TIME OF DEATH'>
1 #FOOTER-GUESS   (A65) INIT
  <'* INDICATES WID DATE OF DEATH USED WAS 6 MONS PRIOR TO ENTRY-DATE'>
1 #FOOTER-GUESS-DOB   (A65) INIT
  <'# INDICATES WID DATE OF BIRTH USED WAS MEMBERS DATE OF BIRTH     '>
1 W-ACTIVE-FLAG            (A1)
1 #WIDOW-KEY               (A6)
1 REDEFINE #WIDOW-KEY
  2 #WIDOW-ID              (N6)
*
1 #YYYY-STORE              (N4)
*
1 MONTH-LITER     (A9/12)
  INIT (1) <'JANUARY  '>
  (2) <'FEBRUARY '>
  (3) <'MARCH    '>
  (4) <'APRIL    '>
  (5) <'MAY      '>
  (6) <'JUNE     '>
  (7) <'JULY     '>
  (8) <'AUGUST   '>
  (9) <'SEPTEMBER'>
  (10) <'OCTOBER  '>
  (11) <'NOVEMBER '>
  (12) <'DECEMBER '>
1 MONTH-INDEX               (I2)
1 #SPOUSE-SEX             (A1)              /* TT1
****************************************************************
*                     EXTRACT   IN      (1)                     *
* THIS IS THE EXTRACT FROM PREVIOUS MONTHEND
****************************************************************
**      t & t extract
**      RECORD CONTAINS 74 CHARACTERS
1 EXTRACT-IN
  2 EXTR-SECTION    (A1)
  2 EXTR-SUBSECTION (A1)
  2 EXTR-NAME       (A70)                                  /* VT1 WAS 25
  2 EXTR-FILL1      (A1)
  2 EXTR-ID-NO      (N6)
  2 EXTR-UNITS-GAIN-LOSS  (N2)
  2 EXTR-CURR-UNITS (A2)
  2 EXTR-ISS-AGE    (A2)
  2 EXTR-ISS-DATE   (A8)
  2 EXTR-TYPE       (A4)
  2 EXTR-TAGE       (N3)
  2 EXTR-TERM-DATE  (A8)
  2 EXTR-PLAN       (A3)
  2 EXTR-RANK       (A3)
  2 EXTR-RET        (A1)
  2 EXTR-SERV       (A3)
  2 EXTR-MODE       (A1)
*
****************************************************************
* LIFE EXPECTANCY FILE  -          PM ADDED 04/2000            *
* THIS IS THE FILE THAT STORES THE LIFE EXPECTANCY INFORMATION *
****************************************************************
**
1 LIFE-FILE
  2 CN-NUMBER              (N6)
  2 SPS-AGE-AT-DEATH       (N6)
  2 MBR-AGE-AT-DEATH       (N6)
  2 SPS-SURVIVAL-DATE      (N6) /* IN MONTHS
  2 DEATH-ENTRY-DATE       (N8) /* IN MONTHS
*
1 #CONTACT-ID        (N8)                             /* VT1 \/
1 #NAME-F            (A70)
1 #NAME              (A70)
1 #NAME-SP           (A70)
1 #FIRST-NAME-F      (A25)
1 #MIDDLE-NAME-F     (A25)
1 #LAST-NAME-F       (A25)
1 #SUFFIX-F          (A10)
*
1 #pda-rank
  2 #PASS-COMMAND       (A2)
  2 #RANK-PASS          (A3)
  2 #MIL-ID-PASS        (A3)
  2 #INVALID            (L)
  2 #RANK-PAY-TBL-DISPL (P2)
  2 #RANK-LITERAL-PASS  (A23)
  2 #RANK-DISPLAY       (A5)
*
  2 #CONTACT-ID-r         (N8)
  2 #RANK-ABBR          (A) DYNAMIC
  2 #LETTER-ENV         (A) DYNAMIC
  2 #SALUTATION         (A) DYNAMIC
  2 #SALUTATION-WITH-NAME (A) DYNAMIC
*
1 #rank             (a3)
  /* VT1 /\
1 #DATE-OF-BIRTH          (N8)                                /* TT1
1 REDEFINE #DATE-OF-BIRTH                                     /* TT1
  2 #DOB-YYYY             (N4)                                /* TT1
  2 #DOB-MM               (N2)                                /* YF1
  2 #DOB-DD               (N2)                                /* YF1
*
1 #DATE-OF-BIRTH-SP      (N8)                                 /* TT1
1 REDEFINE #DATE-OF-BIRTH-SP                                  /* TT1
  2 #DOB-SP-YYYY          (N4)                                /* TT1
  2 #DOB-SP-MMDD          (N4)                                /* TT1
END-DEFINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
ON ERROR
*   WRITE   / '*E R R O R - N R    ' *ERROR-NR   /* SAG RH1 11292005 SS - BEGIN
*     / '*E R R O R - L I N E' *ERROR-LINE
*     / 'C U R R E N T  R C D' EXTR-ID-NO
*     / 'C U R R E N T  R C D' EXTR-ID-NO
*     / 'C U R R E N T  R C D' EXTR-ID-NO
*     / 'C U R R E N T  R C D' EXTR-ID-NO
*     / 'C U R R E N T  R C D' EXTR-ID-NO
*     / 'C U R R E N T  R C D' EXTR-ID-NO
*     / 'C U R R E N T  R C D' EXTR-ID-NO
*     / 'C U R R E N T  R C D' EXTR-ID-NO
*     / 'C U R R E N T  R C D' EXTR-ID-NO
*     / 'C U R R E N T  R C D' EXTR-ID-NO
*     / 'C U R R E N T  R C D' EXTR-ID-NO
*     / 'C U R R E N T  R C D' EXTR-ID-NO
*   MOVE +4095 TO WS-ABEND-CODE
*   CALL 'ABEND' USING WS-ABEND-CODE  /* USER 4095
  #BATCH-LITERAL-1 := EXTR-ID-NO
  INCLUDE GABNDCX1                               /* SAG RH1 11292005 SS - END
END-ERROR
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
FORMAT (1) LS=133 PS=80                          /* SAG-AB 20060831
FORMAT (2) LS=133 PS=66
WRITE (2) TITLE LEFT 'PROGRAM:' *PROGRAM
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
READ WORK 2 ONCE RECORD PARM-DATE   /* DATE (09/01/1999)
*
MOVE PARM-YYYY TO #FLIP-END-DATE-YYYY #YYYY-STORE
MOVE PARM-MM TO #FLIP-END-DATE-MM
MOVE PARM-DD TO #FLIP-END-DATE-DD
MOVE #FLIP-END-DATE TO #FLIP-BEGIN-DATE
MOVE 0       TO #FLIP-END-DATE-DD
SUBTRACT 1 FROM #FLIP-BEGIN-DATE-MM
IF #FLIP-BEGIN-DATE-MM LT 1
  ADD 12 TO #FLIP-BEGIN-DATE-MM
  SUBTRACT 1 FROM #FLIP-BEGIN-DATE-YYYY
END-IF
*
SUBTRACT 1 FROM PARM-MM   /* Loads Parm-date to 1 month ago
IF PARM-MM = 0
  MOVE 12 TO PARM-MM
  SUBTRACT 1 FROM #YYYY-STORE
END-IF
MOVE PARM-MM TO MONTH-INDEX
*
FORMAT PS=80
  LS=133
WRITE (1) TITLE LEFT                              /* SAG-AB 20060831
  29T 'AAFMAA'
  //   35T 'MEMBER DEATHS -'  51T MONTH-LITER (MONTH-INDEX) 61T #YYYY-STORE
  //    8T ' NAME'     36T 'PLACE OF DEATH'    72T 'CAUSE OF DEATH'
  109T 'AGE'    /
*
REPEAT UNTIL EXTR-TYPE = 'DETH' OR W-EXTR-EOF
  READ WORK 1 ONCE RECORD EXTRACT-IN
  AT END
    DISPLAY (2) '**NO DEATHS**'
    DISPLAY (2) '**NO DEATHS**'
    DISPLAY (2) '**NO DEATHS**'
    DISPLAY (2) '**NO DEATHS**'
    DISPLAY (2) '**NO DEATHS**'
    DISPLAY (2) '**NO DEATHS**'
    DISPLAY (2) '**NO DEATHS**'
    MOVE TRUE TO W-EXTR-EOF
  END-ENDFILE
END-REPEAT
*
REPEAT UNTIL W-EXTR-EOF
  PERFORM MAINLINE-LOOP
END-REPEAT
*
IF W-ACT-DEATH NE 0
  WRITE (1) 10T #FOOTER  /* SAG-AB 20060831
END-IF
*
PERFORM COPY-OLD-LIFE-FILE  /* PM ADDED 04/2000 FOR LIFE EXPEC RESULTS
*
COMPUTE ROUNDED W-AVG-AGE = W-SUM-AGE /
  (W-RTD-DEATH + W-ACT-DEATH)
*
WRITE (1)                                          /* SAG-AB 20060831
  /    10T 'ACTIVE DUTY DEATHS:'   33T W-ACT-DEATH
  /    10T 'RETIRED/SEPARATED:'    33T W-RTD-DEATH
  /    10T 'AVERAGE AGE AT DEATH:' 34T W-AVG-AGE
*
FORMAT (3) PS=80
  LS=133
WRITE (3) TITLE LEFT
  30T 'AAFMAA'
  //   30T 'SURVIVING SPOUSE DEATHS -'  56T MONTH-LITER (MONTH-INDEX)
  66T #YYYY-STORE
*  //    6T 'SURVIVING SPOUSE' 28T 'SPS-AGE'                                    /* vt1 \/
  //    6T 'SURVIVING SPOUSE' 56T 'SPS-AGE'
*  44T ' MEMBER'  65T 'MBR-AGE'  73T 'SURVIVED'
  64T ' MEMBER'  116T 'MBR-AGE'  125T 'SURVIVED'
*  /    28T 'AT-DEATH' 65T 'AT-DEATH'  74T 'YRS-MM'  /
  /    56T 'AT-DEATH' 116T 'AT-DEATH'  125T 'YRS-MM'  /                         /* vt1 /\
*
COMPUTE #INVERSE-BEGIN-DATE = 99999999 - #FLIP-END-DATE
COMPUTE #INVERSE-END-DATE   = 99999999 - #FLIP-BEGIN-DATE
*
READ MBR-MTD-DET-V BY ENTRY-DATE FROM #INVERSE-BEGIN-DATE
    THRU #INVERSE-END-DATE
  IF   (MBR-MTD-DET-V.CODE = 'W')
      AND (MBR-MTD-DET-V.ISSUE-DATE NE 88888888) /* 88888888 MEANS SPS-DTH
    IGNORE
  ELSE
    ESCAPE TOP
  END-IF
*
  COMPUTE #ACTUAL-ENTRY-DATE = 99999999 - MBR-MTD-DET-V.ENTRY-DATE
*
* IF REC-ISN = 4596
*   ESCAPE TOP
* END-IF
* GET ST-V REC-ISN
  RESET #NOT-FND
  FIND ST-V WITH MEMBER-KEY = MBR-MTD-DET-V.ID-NUMBER-A
    IF NO RECORDS FOUND
      FIND ST-V WITH WIDOW-KEY = MBR-MTD-DET-V.ID-NUMBER-A
        IF NO RECORDS FOUND
          MOVE TRUE TO #NOT-FND
          WRITE (1) 'ST NOT FOUND USING MD ID-NUMBER' MBR-MTD-DET-V.ID-NUMBER /* SAG-AB 20060831
          WRITE (1) 'MD CODE=' MBR-MTD-DET-V.CODE                             /* SAG-AB 20060831
          WRITE (1) 'MD USER=' MBR-MTD-DET-V.USER                             /* SAG-AB 20060831
          WRITE (1) 'MD ENTRY DATE=' MBR-MTD-DET-V.ENTRY-DATE                 /* SAG-AB 20060831
          WRITE (1) 'MD REC-ISN=' MBR-MTD-DET-V.REC-ISN                       /* SAG-AB 20060831
        END-NOREC
*
        move st-v.MEMBER-contact-id to #contact-id  #CONTACT-ID-R                                    /* vt1 \/
        #name-f := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME-f,#MIDDLE-NAME-f,#LAST-NAME-f,#SUFFIX-f>)
        compress #first-name-f #middle-name-f #last-name-f into #name
        move st-v.spouse-contact-id to #contact-id
        #name-f := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME-f,#MIDDLE-NAME-f,#LAST-NAME-f,#SUFFIX-f>)
        compress #first-name-f #middle-name-f #last-name-f into #name-sp
        CALLNAT 'RANKN001' #PDA-RANK
        MOVE #RANK-ABBR  TO #RANK
*                                                                                 /* vt1 /\
      END-FIND
    END-NOREC
    move st-v.MEMBER-contact-id to #contact-id                                      /* vt1 \/
    #name-f := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME-f,#MIDDLE-NAME-f,#LAST-NAME-f,#SUFFIX-f>)
    compress #first-name-f #middle-name-f #last-name-f into #name
    move st-v.spouse-contact-id to #contact-id
    #name-f := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME-f,#MIDDLE-NAME-f,#LAST-NAME-f,#SUFFIX-f>)
    compress #first-name-f #middle-name-f #last-name-f into #name-sp
*                                                                             /* vt1 /\
  END-FIND
*
  IF #NOT-FND
    ESCAPE TOP
  END-IF
*
  RESET PDA-CONTACT                                                      /* TT1
  P-CONTACT-ID := ST-V.MEMBER-CONTACT-ID                                 /* TT1
  CALLNAT 'CONTS001' PDA-CONTACT #DATE-OF-BIRTH-SP  #SPOUSE-SEX          /* TT1
*
END-ALL
*
* SORT BY ST-V.NAME-SP                                                   /* vt1
*    USING NAME                                                          /* vt1
sort by #name
    using #name-sp                                                           /* vt1
    ST-V.ID-NUMBER
*    RANK                                                              /* VT1
    #RANK                                                              /* VT1
    #DATE-OF-BIRTH                                                     /* TT1
    DATE-OF-DEATH
    #DATE-OF-BIRTH-SP                                                  /* TT1
    DATE-OF-DIVORCE
    #ACTUAL-ENTRY-DATE
*
  MOVE #ACTUAL-ENTRY-DATE TO DEATH-ENTRY-DATE /* PM ADDED 04/2000 LIFE
*
  IF   (DATE-OF-DIVORCE NE 0)
      AND (DATE-OF-DIVORCE LT DATE-OF-DEATH)
    ESCAPE TOP
  END-IF
*
  RESET #MBR-AGE
  IF   (DATE-OF-DEATH NE 0)
      AND (#DATE-OF-BIRTH NE 0)                            /* TT1
    COMPUTE #MBR-AGE = DOD-YYYY - #DOB-YYYY                /* TT1
    DECIDE FOR FIRST CONDITION                             /* YF1 START
      WHEN #DOB-MM > DOD-MM
        SUBTRACT 1 FROM #MBR-AGE
      WHEN #DOB-MM = DOD-MM
        IF #DOB-DD > DOD-DD
          SUBTRACT 1 FROM #MBR-AGE
        END-IF
      WHEN NONE
        IGNORE
    END-DECIDE                                              /* YF1 END
  END-IF
*
  RESET #SPS-AGE
  RESET #SPS-DOD-GUESSED
  RESET #SPS-DOB-GUESSED
  IF   (DATE-OF-DIVORCE NE 0)
      AND (#DATE-OF-BIRTH-SP NE 0)                         /* TT1
    MOVE DATE-OF-DIVORCE TO #DATE-OF-DEATH-SP
    COMPUTE #SPS-AGE = #DOD-SP-YYYY - #DOB-SP-YYYY         /* TT1
    IF #DOB-SP-MMDD GT #DOD-SP-MMDD                        /* TT1
      SUBTRACT 1 FROM #SPS-AGE
    END-IF
  ELSE
    IF DATE-OF-DIVORCE = 0
*     MOVE '*' TO #SPS-DOD-GUESSED
      ADD 1 TO #NUM-GUESSES
      MOVE #ACTUAL-ENTRY-DATE TO #DATE-OF-DEATH-SP
      SUBTRACT 6 FROM #DOD-SP-MM
*
      IF #DOD-SP-MM LT 1
        ADD 12 TO #DOD-SP-MM
        SUBTRACT 1 FROM #DOD-SP-YYYY
      END-IF
    END-IF
*
    IF   (#DATE-OF-BIRTH-SP = 0)                           /* TT1
        AND (#DATE-OF-BIRTH NE 0)                          /* TT1
      MOVE #DATE-OF-BIRTH TO #DATE-OF-BIRTH-SP             /* TT1
*     MOVE '#' TO #SPS-DOB-GUESSED
      ADD 1 TO #NUM-GUESSES-DOB
    END-IF
*
    IF #DATE-OF-BIRTH-SP NE 0                              /* TT1
      COMPUTE #SPS-AGE = #DOD-SP-YYYY - #DOB-SP-YYYY       /* TT1
      IF #DOB-SP-MMDD GT #DOD-SP-MMDD                      /* TT1
        SUBTRACT 1 FROM #SPS-AGE
      END-IF
    END-IF
  END-IF
*
  MOVE '00-00' TO #YRS-AREA
  IF #DATE-OF-DEATH-SP GT DATE-OF-DEATH
    MOVE DATE-OF-DEATH     TO #WYYYYMMDD-LOW-N
    MOVE #DATE-OF-DEATH-SP TO #WYYYYMMDD-HIGH-N
    PERFORM CALC-DATE-DIFF
    COMPRESS #WYY-HIGH-A '-' #WMM-HIGH-A INTO #YRS-AREA LEAVING NO
    ADD 1 TO #NUM-SURV
    ADD #WYY-HIGH TO #SURV-YRS-SUM
    ADD #WMM-HIGH TO #SURV-MONS-SUM
    PERFORM ADD-TO-LIFE-FILE /* PM ADDED 04/2000 LIFE EXPECT FILE RESULT
  END-IF
*
  IF #MBR-AGE NE 0
    ADD 1 TO #NUM-MBR-DEAD
    ADD #MBR-AGE TO #MBR-AGE-SUM
  END-IF
*
  IF #SPS-AGE NE 0
    ADD 1 TO #NUM-SPS-DEAD
    ADD #SPS-AGE TO #SPS-AGE-SUM
  END-IF
*
*  SEPARATE NAME INTO #LAST-NAME #FIRST-NAME #OVFLW-NAME                               /* vt1 \/
*    WITH DELIMITER ','
*  COMPRESS #FIRST-NAME #LAST-NAME #OVFLW-NAME INTO HD-NAME-2
  move #name to hd-name-2
*
*  SEPARATE NAME-SP INTO #LAST-NAME #FIRST-NAME #OVFLW-NAME
*    WITH DELIMITER ','
*  COMPRESS #FIRST-NAME #LAST-NAME #OVFLW-NAME INTO HD-NAME-3
  move #name-sp to hd-name-3                                                            /* vt1 /\
*
  WRITE (3) 1T #SPS-DOB-GUESSED
    3T #SPS-DOD-GUESSED
*    5T HD-NAME-3 30T #SPS-AGE
*    37T ST-V.RANK 41T HD-NAME-2 66T #MBR-AGE 74T #YRS-AREA
    5t HD-NAME-3 56T #SPS-AGE
    65T #RANK 69T HD-NAME-2 119T #MBR-AGE 125T #YRS-AREA                           /* VT1 /\
END-SORT
*
* IF #NUM-GUESSES NE 0
*   WRITE  (3) 10T #FOOTER-GUESS
* END-IF
*
* IF #NUM-GUESSES-DOB NE 0
*   WRITE  (3) 10T #FOOTER-GUESS-DOB
* END-IF
*
COMPUTE ROUNDED W-AVG-AGE = #SPS-AGE-SUM / #NUM-SPS-DEAD
COMPUTE ROUNDED W-AVG-AGE-2 = #MBR-AGE-SUM / #NUM-MBR-DEAD
*
DIVIDE 12 INTO #SURV-MONS-SUM GIVING #NUM-YRS REMAINDER #WMM-HIGH
ADD #NUM-YRS TO #SURV-YRS-SUM
COMPUTE #WYYYY-HIGH = #SURV-YRS-SUM / #NUM-SURV
DIVIDE 2 INTO #WMM-HIGH GIVING #WMM-HIGH
COMPRESS #WYY-HIGH-A '-' #WMM-HIGH-A INTO #SURV-YRS-AREA LEAVING NO
*
WRITE (3) /  3T  'SURVIVING SPOUSE DEATHS:' 29T #NUM-SPS-DEAD
  44T 'MEMBER DEATHS:'           65T #NUM-MBR-DEAD
  72T #NUM-SURV
WRITE (3) /   5T 'AVERAGE AGE AT DEATH:'    31T W-AVG-AGE
  39T 'AVERAGE AGE AT DEATH:'    67T W-AVG-AGE-2
  74T #SURV-YRS-AREA
*
PERFORM CREATE-LIFE-EXPECTANCY-STATS /* PM ADDED 04/2000 LIFE EXPECT
*
*
* BELOW added 12/13/2007 To create a new Death file of Year to date deaths  /* DW1
*
COMPRESS 'CN'
  #TAB 'Name'
  #TAB 'Date-Of-Death'
  #TAB 'Date-Pol-Termed'         /* DW2
  #TAB 'Date Settled'            /* YF1
  #TAB 'Issue-Date'
  #TAB 'Plan'
  #TAB 'Pol-Num'
  #TAB 'Cause-Of-Death'
  #TAB 'Age at death'
  #TAB 'Gross-Death-benefit'
  #TAB 'Cash-Value'              /* DW2
  #TAB 'Face-Amount'             /* DW2
  #TAB 'Date-Notified'           /* DW2
  #TAB 'type'                    /* DW2
  INTO #DEATH-REC LEAVING NO
WRITE WORK FILE 5 #DEATH-REC
*
MOVE 1 TO #FLIP-BEGIN-DATE-MM    /* start at beginning of year        /* DW1
*
COMPUTE #INVERSE-END-DATE   = 99999999 - #FLIP-BEGIN-DATE
WRITE 'DO YTD MBR Deaths from' #FLIP-BEGIN-DATE 'to' #FLIP-END-DATE
*
READ MBR-MTD-DET-V BY ENTRY-DATE FROM #INVERSE-BEGIN-DATE    /* DW1
    THRU #INVERSE-END-DATE
*
  COMPUTE #ACTUAL-ENTRY-DATE = 99999999 - MBR-MTD-DET-V.ENTRY-DATE
*
  IF MBR-MTD-DET-V.CODE NE 'D'     /* Only do Deaths     /* DW2
    ESCAPE TOP
  END-IF
*
  RESET #NOT-FND
  FIND ST-V WITH MEMBER-KEY = MBR-MTD-DET-V.ID-NUMBER-A
    IF NO RECORDS FOUND
      FIND ST-V WITH WIDOW-KEY = MBR-MTD-DET-V.ID-NUMBER-A
        IF NO RECORDS FOUND
          MOVE TRUE TO #NOT-FND
          WRITE (1) 'ST NOT FOUND USING MD ID-NUMBER' MBR-MTD-DET-V.ID-NUMBER
          WRITE (1) 'MD CODE=' MBR-MTD-DET-V.CODE
          WRITE (1) 'MD USER=' MBR-MTD-DET-V.USER
          WRITE (1) 'MD ENTRY DATE=' MBR-MTD-DET-V.ENTRY-DATE
          WRITE (1) 'MD REC-ISN=' MBR-MTD-DET-V.REC-ISN
        END-NOREC
*                                                                         /* vt1 \/
        move st-v.member-contact-id to #contact-id
        #name-f := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME-F,#MIDDLE-NAME-F,#LAST-NAME-F,#SUFFIX-F>)
        compress #first-name-f #middle-name-f #last-name-f into #name
*                                                                         /* VT1 /\
      END-FIND
    END-NOREC
    move st-v.member-contact-id to #contact-id                            /* VT1 \/
    #name-f := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME-F,#MIDDLE-NAME-F,#LAST-NAME-F,#SUFFIX-F>)
    compress #first-name-f #middle-name-f #last-name-f into #name         /* VT1 /\
*
  END-FIND
*
  IF #NOT-FND
    ESCAPE TOP
  END-IF
*
* if dod-yyyy ne parm-yyyy  /* Must be this year  Removed       /* DW2
*   escape top
* end-if
*
  WRITE ST-V.ID-NUMBER 'Death' DATE-OF-DEATH #ACTUAL-ENTRY-DATE 'iss-dt=' ISSUE-DATE
*
  FIND (1) FIRS-VIEW WITH WIDOW-KEY = ST-V.ID-NUMBER-A
  END-FIND
*
*   MOVE DATE-OF-DEATH TO #YYYYMMDD                                 /* YF1
*   SUBTRACT #DATE-OF-BIRTH FROM #YYYYMMDD             /* TT1       /* YF1
*   MOVE #YYYY TO #DOD-AGE                                          /* YF1
*

  RESET #DATE-OF-BIRTH                                          /* YF1 START
  #DATE-OF-BIRTH := GET-DATE-OF-BIRTH(<ST-V.MEMBER-CONTACT-ID>)
  
  IF   (DATE-OF-DEATH NE 0)
      AND (#DATE-OF-BIRTH NE 0)                            
    COMPUTE #DOD-AGE = DOD-YYYY - #DOB-YYYY                
    DECIDE FOR FIRST CONDITION                             
      WHEN #DOB-MM > DOD-MM
        SUBTRACT 1 FROM #DOD-AGE
      WHEN #DOB-MM = DOD-MM
        IF #DOB-DD > DOD-DD
          SUBTRACT 1 FROM #DOD-AGE
        END-IF
      WHEN NONE
        IGNORE
    END-DECIDE                                               
  END-IF                                                          /* YF1 END

  FOR #I1 1 TO 9
    IF STATUS (#I1) NE ' '     /* Terminated policy
      CALLNAT 'GPLNMSXX' #POL-NUM ST-V.ID-NUMBER #I1 /* build POL-#
*
      RESET #DB
      FOR #I2 1 TO 9
        IF   (POL-DATE (#I2) = ST-V.ISSUE-DATE (#I1))
            AND (POL-TYPE (#I2) = ST-V.PLAN (#I1))
          MOVE EDITED POL-AMT-PAID (#I2) (EM=Z,ZZZ,ZZZ.99) TO #DB
          MOVE EDITED CASH-VALUE  (#I1) (EM=Z,ZZZ,ZZZ.99)  TO #CSV  /* DW2
          MOVE EDITED FACE-AMOUNT (#I1) (EM=ZZZ,ZZZ.99)    TO #FACE    /* DW2
          MOVE LEFT #DB TO #DB
        END-IF
      END-FOR
*
      COMPRESS ST-V.ID-NUMBER
        #TAB #name                                                        /* vt1
        #TAB DATE-OF-DEATH
        #TAB #ACTUAL-ENTRY-DATE
        #TAB FIRS-VIEW.POL-DATE-CLM-SETTLED (#I1)                         /* YF1
        #TAB ST-V.ISSUE-DATE (#I1)
        #TAB PLAN (#I1)
        #TAB #POL-NUM
        #TAB FIRS-VIEW.CAUSE-OF-DEATH
        #TAB #DOD-AGE                                                     /* YF1
*        #TAB ST-V.NAME                                                   /* vt1
        #TAB #DB
        #TAB #CSV                     /* DW2
        #TAB #FACE                    /* DW2
        #TAB ST-V.DATE-DEATH-NOTIFY   /* DW2
        #TAB ST-V.INTRO-FLAG          /* DW2
        INTO #DEATH-REC LEAVING NO
      WRITE WORK FILE 5 #DEATH-REC
    END-IF
  END-FOR
END-READ
*
*******************************************************************
**   THIS SECTION WILL PROCESS THE EXTRACT RECORDS AND
**   FORMAT THE REPORT
*******************************************************************
DEFINE SUBROUTINE MAINLINE-LOOP
*
IF EXTR-ID-NO NE #LAST-ID-NO
  ADD EXTR-TAGE  TO W-SUM-AGE
  MOVE EXTR-TAGE  TO #WORK-AGE
*
  IF EXTR-TAGE  LESS THAN 15
  ADD 100 TO W-SUM-AGE
  ADD 100 TO #WORK-AGE
END-IF
*
IF EXTR-RET = 'A'
  ADD +1 TO W-ACT-DEATH
  MOVE '*' TO W-ACTIVE-FLAG
ELSE
  ADD +1 TO W-RTD-DEATH
  MOVE ' ' TO W-ACTIVE-FLAG
END-IF
*
MOVE EXTR-ID-NO TO #WIDOW-ID
*
FIND (1) FIRS-VIEW WITH WIDOW-KEY = #WIDOW-KEY
*
  IF NO RECORDS FOUND
    MOVE NO-WD-RECORD TO W-CAUSE-DEATH
    MOVE NO-WD-RECORD TO W-PLACE-DEATH
    ESCAPE BOTTOM
  END-NOREC
*
  EXAMINE PLACE-OF-DEATH FOR ',' REPLACE WITH ' '
  MOVE PLACE-OF-DEATH TO W-PLACE-DEATH
  MOVE CAUSE-OF-DEATH TO W-CAUSE-DEATH
END-FIND  /* (0792)
*
MOVE EXTR-NAME TO HD-NAME-1
*
* SEPARATE EXTR-NAME INTO #LAST-NAME #FIRST-NAME #OVFLW-NAME                  /* vt1 \/
*  WITH DELIMITER ','
move extr-name to HD-NAME-2
*
* COMPRESS #FIRST-NAME #LAST-NAME #OVFLW-NAME INTO HD-NAME-2                  /* vt1 /\
*
WRITE (1)                                     /* SAG-AB 20060831
  2T W-ACTIVE-FLAG 4T EXTR-RANK  8T HD-NAME-2
*  36T W-PLACE-DEATH  72T W-CAUSE-DEATH 108T #WORK-AGE                         /* VT1 \/
  59T W-PLACE-DEATH 95T W-CAUSE-DEATH 130T #WORK-AGE                             /* VT1 /\
END-IF
*
MOVE EXTR-ID-NO TO #LAST-ID-NO
RESET EXTR-TYPE
*
REPEAT UNTIL EXTR-TYPE = 'DETH' OR W-EXTR-EOF
  READ WORK 1 ONCE RECORD EXTRACT-IN
  AT END MOVE TRUE TO W-EXTR-EOF
  END-ENDFILE
END-REPEAT
*
END-SUBROUTINE  /* (0771)
*
* * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-DATE-DIFF
* * * * * * * * * * * * * * * * * * * * * * * *
*
IF #WDD-LOW GT #WDD-HIGH
  SUBTRACT 1 FROM #WMM-HIGH
  ADD      1 TO   #WDD-HIGH
  IF #WMM-HIGH = 02
    ADD 28 TO #WDD-HIGH
  ELSE
    IF #WMM-HIGH = 04 OR = 06 OR = 09 OR = 11
      ADD 30 TO #WDD-HIGH
    ELSE
      ADD 31 TO #WDD-HIGH
    END-IF
  END-IF
END-IF
*
IF #WMM-LOW GT #WMM-HIGH
  SUBTRACT 1 FROM #WYYYY-HIGH
  ADD 12 TO #WMM-HIGH
END-IF
*
SUBTRACT #WYYYYMMDD-LOW-N FROM #WYYYYMMDD-HIGH-N
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE COPY-OLD-LIFE-FILE
* * * * * * * * * * * * * * * * * * *
*
* PM ADDED 04/2000 FOR LIFE EXPECT RESULTS CALC
*
READ WORK 3 RECORD LIFE-FILE
  WRITE WORK FILE 4 LIFE-FILE
END-WORK
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ADD-TO-LIFE-FILE
* * * * * * * * * * * * * * * * * * *
*
* PM ADDED 04/2000 FOR LIFE EXPECT RESULTS CALC
*
IF #MBR-AGE NE 0
    AND #SPS-AGE NE 0
  MOVE ST-V.ID-NUMBER TO CN-NUMBER
  MOVE #MBR-AGE TO MBR-AGE-AT-DEATH
  MOVE #SPS-AGE TO SPS-AGE-AT-DEATH
  COMPUTE SPS-SURVIVAL-DATE = #WYY-HIGH * 12
  ADD #WMM-HIGH TO SPS-SURVIVAL-DATE
  ADD +1 TO #TOTAL-THIS-MONTH
  WRITE WORK FILE 4 LIFE-FILE
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CREATE-LIFE-EXPECTANCY-STATS
* * * * * * * * * * * * * * * * * * * * * * * *
*
* PM ADDED 04/2000 FOR LIFE EXPECT RESULTS CALC
*
FOR #LIFE-OCCUR 1 TO 3
  CALLNAT 'ATHSM32A'
    #TOTAL-TABLE
    #LIFE-OCCUR
END-FOR
*
MOVE TRUE TO #NT-FND    /* BELOW ONLY NEEDED 1ST TIME 800114 IS STORED
*
FIND (1) NT-V WITH ID-NUMBER = 800114
  IF NO RECORDS FOUND
    RESET #NT-FND
  END-NOREC
*
  MOVE PARM-MM TO LAST-UPDATE-MM    /* Contains Parm date minus 1 month
  MOVE #YYYY-STORE TO LAST-UPDATE-YYYY
*
  FOR #LIFE-OCCUR 1 TO 3
    MOVE #AVG(#LIFE-OCCUR)     TO LIFE-AVG (#LIFE-OCCUR)
    MOVE #MED(#LIFE-OCCUR)     TO LIFE-MED (#LIFE-OCCUR)
    MOVE #MAX(#LIFE-OCCUR)     TO LIFE-MAX (#LIFE-OCCUR)
    MOVE #MIN(#LIFE-OCCUR)     TO LIFE-MIN (#LIFE-OCCUR)
    MOVE #STD-DEV(#LIFE-OCCUR) TO LIFE-STD-DEV (#LIFE-OCCUR)
    MOVE #TOTAL                TO LIFE-TOTAL
    MOVE #TOTAL-THIS-MONTH     TO TOTAL-THIS-MONTH
  END-FOR
*
  IF NOT #NT-FND
    MOVE 800114 TO NT-V.ID-NUMBER
    STORE NT-V
  ELSE
    UPDATE
  END-IF
*
  END TRANSACTION
*
END-FIND
*
END-SUBROUTINE
*
END
