* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPIALN - Stop/Start Notices
*     This must follow the running of ATHPIALA
*******************************************
*                       MODIFICATION LOG
* USER DATE     TAG  REASON
* DRW  10042005 DW1  Only use db/cr if < .99 on allotment stop/start
* PAM  04272006 PM2  Format zip code for leading zeros.
* DRW  10102006 DW3  Bypass Stop Notice if no A/S/Q/G non-paid-up pols
* DRW  05222007 DW4  Adjust DUES-BALANCE on GS Notice if dues is billed
* DRW  08312007 DW5  Compare Iss DT on the test to ind CAP or NON-cap
* DRW 02/15/2008 DW6 Create ALOT STOP LETTERs
* DRW 09/22/2009 DW7 SVC-FEE CALC  /  PROCESS-IND / Number-memberships /600000
* vxt 11/04/2010 vt1 change the formatted name length and pull out name and rank from the new files
* vt 01/31/2011  vt2 fix the missing leading zeros from the Zip-code
* JNT 09/17/2013 JT1 Address normalization
* TMT 06/10/2014 TT1 CONTACT NORMALIZATION - GENDER AND DOB
*******************************************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING G3500AAD
LOCAL USING ADDA0001                    /* pda for the address                 /* vt1
LOCAL
1 #JCL-PARM       (A10)
1 REDEFINE #JCL-PARM
  2 #JCL-MM            (N2)   /* DATE PARM 03/01/1999
  2 #JCL-X1            (A1)
  2 #JCL-DD            (N2)
  2 #JCL-X2            (A1)
  2 #JCL-YYYY          (N4)
*
1 #NEEDS-STOP-LETTER  (L)     /* DW6
1 #SUFFIX             (A3)
* 1 #DEAR-FORMATED-NAME (A70)                                          /* vt1 was 45
*
1 #PARM-YYYYMMDD  (N8)
1 REDEFINE #PARM-YYYYMMDD
  2 #PARM-YYYY      (N4)
  2 #PARM-MM        (N2)
1 REDEFINE #PARM-YYYYMMDD
  2 #PARM-YYYYMM    (N6)
*
1 #NOTICE-FILE
  2 #NF-SECT     (A1)
  2 #NF-SUB-SECT (A1)
  2 #NF-NAME     (A70)                                                /* vt1 was 25
  2 #NF-ADDR-1   (A70)
  2 #NF-ADDR-2   (A70)
  2 #NF-ADDR-3   (A70)
  2 #NF-ADDR-4   (A70)                                                /* vt1 was 25
  2 #NF-CITY     (A50)                                                /* vt1 new added
  2 #NF-STATE    (A2)                                                 /* vt1 new added
  2 #NF-ZIP-CODE (A10)
  2 #NF-RANK     (A25)                                                 /* vt1 was 3
  2 #NF-CL       (A1)
  2 #NF-CN-NUMBER(A8)
  2 #NF-GEN-MODE (A1)
  2 #NF-OLD-SECT (A1)
  2 #NF-NON-MBR-FLAG (A1)
*
  2 #NF-ALLT-AMT   (N5.2)
  2 #NF-DB-CR      (N5.2)
  2 #NF-QTR-PREM   (N5.2)
  2 #NF-FIXED-LOAN (N5.2)
  2 #NF-QTR-PRM    (N5.2)
  2 #NF-QTR-DUE    (N5.2)
  2 #NF-QTR-FBR    (N5.2)
  2 #NF-QTR-ISS-DT (N8)
  2 #NF-FILL       (A4)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A    (A6)
  2 MEMBER-CONTACT-ID                                             /* vt1
  2 PROCESS-IND
* 2 RANK                                                          /* vt1
  2 MILITARY-STATUS
  2 SSN
*  2 SEX                           /* TT1
  2 CHIEF-OF-STAFF-IND
  2 PAD-CODE
  2 WIDOW-FLAG
  2 INTRO-FLAG
  2 DATE-RETIRED
*  2 NAME                                                          /* vt1 \/
* 2 ADDRESS-1
* 2 ADDRESS-2
* 2 ADDRESS-3                                                      /* vt1 /\
*   2 ZIP-CODE                                                                       /* JT1 start
*   2 REDEFINE ZIP-CODE
*     3 ZIP-CODE-5   (N5)
*     3 REDEFINE ZIP-CODE-5                                           /* PM2
*       4 ZIP-CODE-5A (A5)                                             /* PM2
*     3 ZIP-CODE-4   (N4)
*     3 REDEFINE ZIP-CODE-4                                           /* PM2
*       4 ZIP-CODE-4A (A4)                                             /* PM2        /* JT1 end
  2 DATE-OF-DEATH
  2 ALOT-AMT
  2 X-LOAN-AMOUNT      (9)
  2 DEBIT-CREDIT-AMT
  2 DUES-BALANCE                    /* DW4
  2 DUES-ALL-PAID-IND
  2 NUMBER-MEMBERSHIPS
  2 ISSUE-DATE          (9)
  2 STATUS              (9)
  2 PAY-STATUS          (9)
  2 RID-PLAN            (9)
  2 CONV-DURATION       (9)
  2 PLAN                (9)
  2 REDEFINE PLAN
    3 PLAN-OCC      (9)
      4 PLAN-A3
        5 PLAN-A1   (A1)
        5 PLAN-N2   (N2)
      4 REDEFINE PLAN-A3
        5 PLAN-A2   (A2)
        5 PLAN-FILL (A1)
  2 MODE                (9)
  2 MONTH-ALLOC-AMT     (9)
  2 ANNUAL-PREM         (9)
  2 PAID-TO-DATE        (9)
  2 REDEFINE PAID-TO-DATE
    3 PAID-TO-DATE-OCC (9)
      4 PAID-TO-DATE-YYYYMM    (N6)
      4 PAID-TO-DATE-DD        (N2)
  2 PAID-UP-DATE        (9)
  2 REDEFINE PAID-UP-DATE
    3 PAID-UP-DATE-OCC (9)
      4 PAID-UP-DATE-YYYYMM    (N6)
      4 PAID-UP-DATE-DD        (N2)
*
1 STARTS-STOPS-REC  (A80)                                   /* this is an input file structure
1 REDEFINE STARTS-STOPS-REC
  2 AS-CN           (N6)
  2 AS-SERVICE      (A1)   /* A or F
  2 AS-SSN          (N9)
  2 REDEFINE AS-SSN
    3 AS-SSN-A       (A9)
  2 AS-TYPE         (A1)   /* 1 = stop / 2 = start
  2 AS-REAS-CODE    (A2)
  2 AS-STATUS       (A1)   /* A or R
  2 AS-BLANKET-CODE (A3)
  2 AS-EFF-DATE     (A4)   /* YYMM
  2 AS-TERM-DATE    (A4)   /* YYMM
  2 AS-AMOUNT       (P9.2) /* takes 6 bytes
  2 AS-NAME         (A20)
  2 AS-FILL-1       (A14)
*
1 AT-V VIEW OF A-APPL-TRACKING
  2 INTRO-FLAG
  2 SSN
*
1 #SVC-FEE    (N2.2)
1 #SVC-FEE-SP (N3.2) INIT <450.00>
1 #SVC-FEE-2P (N2.2) INIT <18.50>
1 #SVC-FEE-3P (N2.2) INIT <12.50>
1 #SVC-FEE-4P (N1.2) INIT <9.50>
1 #SVC-FEE-5P (N1.2) INIT <7.50>
1 #SVC-FEE-6P (N1.2) INIT <6.50>
1 #SVC-FEE-7P (N1.2) INIT <6.00>
1 #SVC-FEE-10 (N1.2) INIT <4.50>
1 #SVC-FEE-20 (N1.2) INIT <3.00>
1 #SVC-FEE-30 (N1.2) INIT <2.50>
1 #SVC-FEE-OL (N1.2) INIT <2.00>
1 #SVC-FEE-TM (N1.2) INIT <2.00>
*
1 #FST-X                (I2)
1 #CAP-X                (I2)
*
1 #COUNTERS
  2 #RECS-READ        (P5)
  2 #RECS-SELECTED    (P5)
  2 #CNT              (P5)
  2 #CNT-2            (P5)
  2 #CNT-3            (P5)
  2 #CNT-4            (P5)
  2 #CNT-5            (P5)
  2 #CNT-6            (P5)
  2 #CNT-7            (P5)
  2 #I1               (I2)
  2 #I2               (I2)
  2 #I3               (I2)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY          (N4)
  2 #MM            (N2)
  2 #DD            (N2)
*
1 #TOT-STOPS-IN     (N5)
1 #TOT-STARTS-IN    (N5)
1 #TOT-STOPS-OUT    (N5)
1 #TOT-STARTS-OUT   (N5)
1 #ERROR        (A55)
1 #REJECT       (L)
1 #FOUND-SSN    (L)
1 #HAS-FBR      (L)
1 #FOUND-AT     (L)
1 #HAS-MODE-G   (L)
1 #TOT-PREM-DUE   (P5.2)
1 #TOT-PREM      (N5.2)
1 #TOT-DUES      (N5.2)
1 #TOT-FBR       (N5.2)
1 #ST-UPDATE        (L)   /* DW4
1 #DUES-BAL-ADJ   (N5.2)  /* DW4
*
*  keep below
1 #HAS-NON-PDUP     (L)
1 #3-MONS-AGO    (N8)
1 #3-MONS-FUTURE (N8)
1 REDEFINE #3-MONS-FUTURE
  2 #3-MONS-FUTURE-YYYYMM   (N6)
  2 #3-MONS-FUTURE-DD       (N2)
1 #LAST-STOP-SSN   (N9)
*
* below is linkage to GRIDCSXX
1 #ID         (N6)
1 REDEFINE #ID
  2 #ID-A      (A6)
* THE FOLLOWING INPUT IS PASSED ONLY ON AN "AT" FOR A NEW RIDER
1 #AT-RID-ATTACH-FAC-AMT (N6.2) /* Only if attached to the new "AT"
1 #AT-RID-ATTACH-PLAN    (A3)   /*    policy not yet created
1 #AT-RID-PLAN           (A2/5) /* New rider plan
1 #AT-RID-ATTACH-ISS-DT  (N8/5) /* Only if attached to an existing pol
* output below  (ex = existing)
1 #AT-TOT-FBR-PREM        (N3.2)
1 #EX-FBR-PREM-BY-LINE    (N3.2/9)
1 #EX-SPS-DB-BY-LINE      (N6/9)
1 #EX-DEP-DB-BY-LINE      (N6/9)
1 #EX-EACH-DEP-DB-BY-LINE (N6/9)
1 #NUM-ELIG-CHILDREN      (N2)
1 #NUM-ELIG-CHILDREN-UNDER-6-MON (N2)
1 #TOT-CHILD-DB      (N6)
1 #RID-TEXT          (A78)
* above is linkage to GRIDCSXX
*
1 #CONTACT-ID          (N8)                                     /* vt1  \/
1 #NAME-F              (A70)
* 1 #first-name          (a25)
1 #MIDDLE-NAME         (A25)
* 1 #last-name           (a25)
* 1 #name                (a70)
1 #suffix-f               (a10)
*
1 #PDA-RANK
  2 #PASS-COMMAND       (A2)
  2 #RANK-PASS          (A3)
  2 #MIL-ID-PASS        (A3)
  2 #INVALID            (L)
  2 #RANK-PAY-TBL-DISPL (P2)
  2 #RANK-LITERAL-PASS  (A23)
  2 #RANK-DISPLAY       (A5)
*
  2 #CONTACT-ID-R         (N8)
  2 #RANK-ABBR          (A) DYNAMIC
  2 #LETTER-ENV         (A) DYNAMIC
  2 #SALUTATION         (A) DYNAMIC
  2 #SALUTATION-WITH-NAME (A) DYNAMIC
*
1 #RANK-W                (A25)
1 #ZIP-CODE-W            (N9)
1 REDEFINE #ZIP-CODE-W
  2 #ZIP-CODE-5           (N5)
  2 redefine #zip-code-5
    3 #zip-code-5-A         (a5)
  2 #ZIP-CODE-4           (N4)                                 /* vt1 /\
  2 REDEFINE #ZIP-CODE-4                     /* JT1
    3 #ZIP-CODE-4A          (A4)             /* JT1
*
END-DEFINE
* * * * * * * * * * * * * * * * *
*
READ WORK 1 ONCE RECORD #JCL-PARM
*
MOVE #JCL-YYYY TO #YYYY
MOVE #JCL-MM   TO #MM
MOVE #JCL-DD   TO #DD
MOVE #YYYYMMDD TO #PARM-YYYYMMDD
*
* MOVE #PARM-YYYYMMDD TO #YYYYMMDD
* MOVE 15 TO #DD
* SUBTRACT 1 FROM #MM
* IF #MM LT 1
*   ADD 12 TO #MM
*   SUBTRACT 1 FROM #YYYY
* END-IF
*
* MOVE #YYYYMMDD TO #LAST-MON-YYYYMMDD
*
MOVE #PARM-YYYYMMDD TO #YYYYMMDD
SUBTRACT 3 FROM #MM
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
*
MOVE #YYYYMMDD TO #3-MONS-AGO
*
MOVE #PARM-YYYYMMDD TO #YYYYMMDD
ADD 3 TO #MM
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
*
MOVE #YYYYMMDD TO #3-MONS-FUTURE
*
FORMAT     LS=133 PS=76
WRITE      TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Allotment Stops and Starts Exceptions'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (2) LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Allotment Stop and Start Notices'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
READ WORK 2 RECORD STARTS-STOPS-REC
  ADD 1 TO #RECS-READ
*
  RESET #REJECT
  RESET #FOUND-SSN
*
  FIND ST-V WITH SSN = AS-SSN
*    IF ST-V.PROCESS-IND = 'S' OR = 'C'         /* bypass AFSC    /* DW7
    IF ST-V.PROCESS-IND = 'C'                                    /* DW7
      ESCAPE TOP
    END-IF
*
    MOVE TRUE TO #FOUND-SSN
    ESCAPE BOTTOM
  END-FIND
*
  IF NOT #FOUND-SSN    /* AAFMAA SSN does not exist
    RESET ST-V
*
    RESET #FOUND-AT
    FIND AT-V WITH SSN = AS-SSN
      IF AT-V.INTRO-FLAG = 'V'
        ESCAPE TOP
      END-IF
*
      MOVE TRUE TO #FOUND-AT
      ESCAPE BOTTOM
    END-FIND
*
    IF #FOUND-AT
      MOVE 'STOP/START rej - ST SSN not found but is an AT' TO #ERROR
    ELSE
      MOVE 'STOP/START rej - SSN not found' TO #ERROR
    END-IF
*
    WRITE AS-SSN #ERROR
    ESCAPE TOP
  END-IF
*
  RESET #ST-UPDATE    /* DW4
*
  IF AS-TYPE = '1'    /* stop
    ADD 1 TO #TOT-STOPS-IN
    PERFORM ALLOTMENT-STOP
  END-IF
*
  IF AS-TYPE = '2'    /* start
    ADD 1 TO #TOT-STARTS-IN
    PERFORM ALLOTMENT-START
  END-IF
*
  IF #ST-UPDATE                   /* DW4
    FIND ST-V WITH SSN = AS-SSN
*      IF ST-V.PROCESS-IND = 'S' OR = 'C'         /* bypass AFSC    /* DW7
      IF ST-V.PROCESS-IND = 'C'                                     /* DW7
        ESCAPE TOP
      END-IF
*
      ADD #DUES-BAL-ADJ TO ST-V.DUES-BALANCE
      WRITE ST-V.ID-NUMBER 'Dues Balance adj by' #DUES-BAL-ADJ
      UPDATE (0376)
      ESCAPE BOTTOM
    END-FIND
  END-IF
*
  END TRANSACTION
END-WORK
*
WRITE 'total stops in   =' #TOT-STOPS-IN
WRITE 'total starts in  =' #TOT-STARTS-IN
WRITE 'total stop notices =' #TOT-STOPS-OUT
WRITE 'total start notices=' #TOT-STARTS-OUT
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ALLOTMENT-STOP
* * * * * * * * * * * * * * * * * *
*
IF AS-REAS-CODE = '**'   /* act to ret retired with same amt
  ESCAPE ROUTINE
END-IF
*
MOVE AS-SSN  TO #LAST-STOP-SSN
*
FOR #FST-X 1 TO 9   /* get 1st active pol
  IF ST-V.STATUS (#FST-X) = 'D'
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF #FST-X GT 9
  MOVE 1 TO #FST-X
END-IF
*
RESET  #HAS-FBR #HAS-MODE-G
FOR #I1 1 TO 9
  IF ST-V.RID-PLAN (#I1) NE ' '
    MOVE TRUE TO #HAS-FBR
  END-IF
END-FOR
*
RESET #EX-FBR-PREM-BY-LINE (*)
IF #HAS-FBR
  MOVE ST-V.ID-NUMBER TO #ID
  CALLNAT 'GRIDCSXX' USING
    #ID
    #AT-RID-ATTACH-FAC-AMT
    #AT-RID-ATTACH-PLAN
    #AT-RID-PLAN            (1:5)
    #AT-RID-ATTACH-ISS-DT   (1:5)
    #AT-TOT-FBR-PREM
    #EX-FBR-PREM-BY-LINE    (1:9)
    #EX-SPS-DB-BY-LINE      (1:9)
    #EX-DEP-DB-BY-LINE      (1:9)
    #EX-EACH-DEP-DB-BY-LINE (1:9)
    #NUM-ELIG-CHILDREN
    #NUM-ELIG-CHILDREN-UNDER-6-MON
    #TOT-CHILD-DB
    #RID-TEXT
*
  IF #RID-TEXT NE ' '
    WRITE ST-V.ID-NUMBER 'FBR ERROR MESSAGE' #RID-TEXT
  END-IF
END-IF
*
RESET #HAS-NON-PDUP #TOT-PREM-DUE #TOT-PREM #TOT-DUES #TOT-FBR
RESET #NEEDS-STOP-LETTER                                       /* DW6
MOVE 1 TO #CAP-X
FOR #I1 1 TO 9
  IF  (ST-V.STATUS (#I1) NE 'D')
      OR (ST-V.PAY-STATUS (#I1) GT '40')
*  OR (ST-V.PAID-UP-DATE-YYYYMM (#I1) LE #PARM-YYYYMM)
      OR (ST-V.PAID-UP-DATE-YYYYMM (#I1) LT #3-MONS-FUTURE-YYYYMM)
      OR (ST-V.PAID-TO-DATE-YYYYMM (#I1) GT #PARM-YYYYMM)          /* DW3
      OR (ST-V.ISSUE-DATE (#I1) GE #3-MONS-AGO)
      OR (NOT PAD-CODE = ' ' OR = 'R' OR = 'S')
*    /* mode M/0/4/2/1 should get no stop notice     /* DW3
      OR (MODE (#I1) = 'M' OR = '0' OR = '4' OR = '2' OR = '1' OR = 'E')
      OR (ST-V.ALOT-AMT NE 0)    /* not followed by a start
      OR (DATE-OF-DEATH NE 0)
    ESCAPE TOP
  END-IF
*
  MOVE TRUE TO #NEEDS-STOP-LETTER      /* DW6
  RESET #TOT-FBR
  RESET #TOT-PREM-DUE
  RESET #TOT-PREM
  RESET #TOT-PREM-DUE
  RESET #TOT-DUES
  RESET #TOT-PREM-DUE
*
* IF CONV-DURATION (#I1) = 999
*   MOVE #I1 TO #CAP-X
* END-IF
*
  ADD #EX-FBR-PREM-BY-LINE (#I1) TO #TOT-FBR
  ADD #EX-FBR-PREM-BY-LINE (#I1) TO #TOT-PREM-DUE
  ADD (ST-V.ANNUAL-PREM (#I1) / 12) TO #TOT-PREM
  ADD (ST-V.ANNUAL-PREM (#I1) / 12) TO #TOT-PREM-DUE
  PERFORM CALC-DUES
  ADD #SVC-FEE TO #TOT-DUES
  ADD #SVC-FEE TO #TOT-PREM-DUE
*
  IF #EX-FBR-PREM-BY-LINE (#I1) NE 0
    WRITE ST-V.ID-NUMBER 'Notice is missing FBR of' #TOT-FBR
  END-IF
*
* IF ST-V.ISSUE-DATE (#I1) LT #3-MONS-AGO
*   MOVE TRUE TO #HAS-NON-PDUP
* END-IF
*
  PERFORM WRITE-STOP-NOTICE
END-FOR
*
IF #NEEDS-STOP-LETTER    /* DW6
  MOVE ST-V.ID-NUMBER TO #CGA-SCR-ID
  CALLNAT 'G3500SAD' #CGA-MASTER #PDA-AREA-G3500AAD
*
*              COMPRESS 'Dear' #FULL-RANK #LAST-NAME                                /* vt1
*  compress 'Dear'
*  #ext-formated-name                                      /* vt1
*    INTO #DEAR-FORMATED-NAME
*
  COMPRESS #ext-DEAR-FORMATED-NAME ':'
    INTO #ext-DEAR-FORMATED-NAME LEAVING NO
*
  MOVE ST-V.ID-NUMBER TO #ID
  MOVE 'ASL'  TO #SUFFIX
  WRITE #ID 'Do ALLOTMENT stop letter'
  NEWPAGE (3)
  WRITE (3) NOTITLE USING FORM 'ATHFASTP'    /* ALOT STOP letter
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE WRITE-STOP-NOTICE
* * * * * * * * * * * * * * * * * *
*
RESET #NOTICE-FILE
MOVE 'M'        TO #NF-SECT
MOVE 'M'        TO #NF-OLD-SECT
RESET              #NF-FIXED-LOAN
*
MOVE '1'   TO #NF-SUB-SECT   /* assumes mode has been chgd to 'Q'
* below should never happen as of 5/1/2002 since mode will be "M"
IF   (ST-V.INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q')
  FOR #I2 1 TO 9
    IF   (ST-V.CONV-DURATION (#I2) = 999)
        AND (ST-V.X-LOAN-AMOUNT (#I2) GT 5.00)  /* MUST MATCH ATHPIALA
        AND (ST-V.ISSUE-DATE (#I2) = ST-V.ISSUE-DATE (#I1)) /* Same policy    /* DW5
      MOVE ST-V.X-LOAN-AMOUNT (#I2) TO #NF-FIXED-LOAN
      MOVE '3' TO #NF-SUB-SECT
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-IF
*
*              MOVE ST-V.NAME   TO #NF-NAME                                           /* vt1 \/
RESET #PDA-ADDRESS #RANK-W
MOVE ST-V.MEMBER-CONTACT-ID TO #CONTACT-ID #ADD-CONTACT-ID #CONTACT-ID-R
MOVE 'P' TO #ADD-TYPE
#NAME-F := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME,#MIDDLE-NAME,#LAST-NAME,#SUFFIX-f>)
MOVE #NAME-F     TO #NF-NAME
*
CALLNAT 'ADDN0001' #PDA-ADDRESS
MOVE #ADD-LINE-1    TO #NF-ADDR-1
MOVE #ADD-LINE-2    TO #NF-ADDR-2
MOVE #ADD-LINE-3    TO #NF-ADDR-3
MOVE #ADD-ZIP-CODE  TO #ZIP-CODE-W
MOVE #zip-code-5-a  TO #NF-ZIP-CODE
MOVE #ADD-CITY      TO #NF-CITY
MOVE #ADD-STATE     TO #NF-STATE
* MOVE #ZIP-CODE-4    TO ZIP-CODE-4                                             /* JT1
*              MOVE ST-V.ADDRESS-1 TO  #NF-ADDR-1
*              MOVE ST-V.ADDRESS-2 TO  #NF-ADDR-2
*              MOVE ST-V.ADDRESS-3 TO  #NF-ADDR-3
*              MOVE ST-V.ZIP-CODE-5A TO  #NF-ZIP-CODE                            /* PM2  vt1 /\
*
IF #ZIP-CODE-4 NE 0                                                             /* JT1 start
  COMPRESS #NF-ZIP-CODE '-' #ZIP-CODE-4A INTO #NF-ZIP-CODE LEAVING NO
END-IF
*
* IF ZIP-CODE-4 NE 0
*   COMPRESS #NF-ZIP-CODE '-' ZIP-CODE-4A INTO #NF-ZIP-CODE LEAVING NO
* END-IF                                                                        /* JT1 end
*
*              IF ST-V.CHIEF-OF-STAFF-IND = 'R'                                  /* vt1 \/
*              IF ST-V.SEX = 'F'
*              MOVE 'MRS' TO #NF-RANK
*              ELSE
*              MOVE 'MR' TO #NF-RANK
*              END-IF
*              ELSE
*              MOVE ST-V.RANK  TO #NF-RANK
*              END-IF
CALLNAT 'rankn001' #PDA-RANK
#RANK-W := #RANK-ABBR
MOVE #RANK-W TO #NF-RANK                                                        /* vt1  /\
*
MOVE ST-V.MILITARY-STATUS TO  #NF-CL
COMPRESS 'CN' ST-V.ID-NUMBER-A INTO #NF-CN-NUMBER LEAVING NO
MOVE ST-V.MODE (1) TO  #NF-GEN-MODE
COMPUTE #NF-QTR-PREM = #TOT-PREM-DUE * 3
COMPUTE #NF-QTR-PRM  = #TOT-PREM * 3
COMPUTE #NF-QTR-DUE  = #TOT-DUES * 3
COMPUTE #NF-QTR-FBR  = #TOT-FBR  * 3
MOVE AS-AMOUNT TO #NF-ALLT-AMT
*    #NF-DB-CR is replaced later in ATHP07P1
IF ST-V.DEBIT-CREDIT-AMT GT .99     /* DW1
  MOVE ST-V.DEBIT-CREDIT-AMT TO #NF-DB-CR
ELSE
  RESET #NF-DB-CR
END-IF
*
MOVE ST-V.ISSUE-DATE (#I1) TO #NF-QTR-ISS-DT
*
ADD 1 TO #TOT-STOPS-OUT
*
WRITE WORK 3  #NOTICE-FILE
WRITE (2) ST-V.ID-NUMBER 'Stop Notice' #NF-ALLT-AMT #NF-QTR-PREM
  #NF-QTR-PRM #NF-QTR-DUE #NF-QTR-FBR
*
IF #NF-QTR-DUE NE 0          /* DW4
  MOVE #NF-QTR-DUE TO #DUES-BAL-ADJ
  MOVE TRUE TO #ST-UPDATE
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ALLOTMENT-START
* * * * * * * * * * * * * * * * * *
*
IF AS-REAS-CODE = '**'   /* act to ret retired with same amt
  ESCAPE ROUTINE
END-IF
*
IF ST-V.DEBIT-CREDIT-AMT GT .99
  RESET #NOTICE-FILE
  MOVE 'N'        TO #NF-SECT
  MOVE 'N'        TO #NF-OLD-SECT
*
  IF AS-SSN = #LAST-STOP-SSN
    MOVE '2' TO #NF-SUB-SECT
  ELSE
    MOVE '1' TO #NF-SUB-SECT
  END-IF
*
  RESET #PDA-ADDRESS #RANK-W
  MOVE ST-V.MEMBER-CONTACT-ID TO #CONTACT-ID #CONTACT-ID-R #ADD-CONTACT-ID
  MOVE 'P' TO #ADD-TYPE
  #NAME-F := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME,#MIDDLE-NAME,#LAST-NAME,#SUFFIX-f>)
  MOVE #NAME-F     TO #NF-NAME
*
  CALLNAT 'ADDN0001' #PDA-ADDRESS
  MOVE #ADD-LINE-1    TO #NF-ADDR-1
  MOVE #ADD-LINE-2    TO #NF-ADDR-2
  MOVE #ADD-LINE-3    TO #NF-ADDR-3
  MOVE #ADD-ZIP-CODE  TO #ZIP-CODE-W
  MOVE #ADD-CITY      TO #NF-CITY
  MOVE #ADD-STATE     TO #NF-STATE
*  MOVE #ZIP-CODE-5    TO #NF-ZIP-CODE                               /* vt2
  MOVE #zip-code-5-a  TO #NF-ZIP-CODE                                /* vt2
* MOVE #ZIP-CODE-4    TO ZIP-CODE-4                  /* JT1
*
*  MOVE ST-V.NAME   TO #NF-NAME
*  MOVE ST-V.ADDRESS-1 TO  #NF-ADDR-1
*  MOVE ST-V.ADDRESS-2 TO  #NF-ADDR-2
*  MOVE ST-V.ADDRESS-3 TO  #NF-ADDR-3
*  MOVE ST-V.ZIP-CODE-5A TO  #NF-ZIP-CODE                          /* PM2
*
  IF #ZIP-CODE-4 NE 0
    COMPRESS #NF-ZIP-CODE '-' #ZIP-CODE-4A INTO #NF-ZIP-CODE LEAVING NO
  END-IF
*
*   IF ZIP-CODE-4 NE 0                                                           /* JT1
*     COMPRESS #NF-ZIP-CODE '-' ZIP-CODE-4A INTO #NF-ZIP-CODE LEAVING NO         /* JT1
*   END-IF                                                                       /* JT1
*
*  IF ST-V.CHIEF-OF-STAFF-IND = 'R'                                             /* vt1 \/
*    IF ST-V.SEX = 'F'
*      MOVE 'MRS' TO #NF-RANK
*    ELSE
*      MOVE 'MR' TO #NF-RANK
*    END-IF
*  ELSE
*    MOVE ST-V.RANK  TO #NF-RANK
*  END-IF
  CALLNAT 'rankn001' #PDA-RANK
  #RANK-W := #RANK-ABBR
  MOVE #RANK-W TO #NF-RANK                                                        /* vt1  /\
*
  MOVE ST-V.MILITARY-STATUS TO  #NF-CL
  COMPRESS 'CN' ST-V.ID-NUMBER-A INTO #NF-CN-NUMBER LEAVING NO
  MOVE AS-AMOUNT TO #NF-ALLT-AMT
  MOVE ST-V.DEBIT-CREDIT-AMT TO #NF-DB-CR
*
  ADD 1 TO #TOT-STARTS-OUT
  WRITE WORK 3  #NOTICE-FILE
  WRITE (2) ST-V.ID-NUMBER 'START Notice' #NF-ALLT-AMT
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-DUES
* * * * * * * * * * * * * *
*
RESET #SVC-FEE
IF  (ST-V.ISSUE-DATE (#I1) LT 19970101)
    OR (ST-V.MONTH-ALLOC-AMT (#I1) = 999.99)
    OR (ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
    OR = 'O' OR = 'P' OR = 'Q')
    OR (ST-V.DUES-ALL-PAID-IND = 'Y')
    OR (#I1 NE #FST-X)
    OR (ST-V.PROCESS-IND NE 'G')           /* MUST BE G/F         DW7
  ESCAPE ROUTINE
END-IF
*
DECIDE ON FIRST VALUE ST-V.PLAN-A2 (#I1)
  VALUE 'OL' MOVE #SVC-FEE-OL TO #SVC-FEE
  VALUE 'RT' MOVE #SVC-FEE-TM TO #SVC-FEE
  VALUE 'LT' MOVE #SVC-FEE-TM TO #SVC-FEE
  VALUE 'SP' MOVE #SVC-FEE-SP TO #SVC-FEE
  VALUE '2P' MOVE #SVC-FEE-2P TO #SVC-FEE
  VALUE '3P' MOVE #SVC-FEE-3P TO #SVC-FEE
  VALUE '4P' MOVE #SVC-FEE-4P TO #SVC-FEE
  VALUE '5P' MOVE #SVC-FEE-5P TO #SVC-FEE
  VALUE '6P' MOVE #SVC-FEE-6P TO #SVC-FEE
  VALUE '7P' MOVE #SVC-FEE-7P TO #SVC-FEE
  VALUE '8P' MOVE #SVC-FEE-7P TO #SVC-FEE
  VALUE '9P' MOVE #SVC-FEE-7P TO #SVC-FEE
  VALUE '20' MOVE #SVC-FEE-20 TO #SVC-FEE
  VALUE '30' MOVE #SVC-FEE-30 TO #SVC-FEE
  NONE        IGNORE
END-DECIDE
*
IF (ST-V.PLAN-A1 (#I1) GE 'U') AND (ST-V.PLAN-A1 (#I1) LE 'Z')
  MOVE #SVC-FEE-TM TO #SVC-FEE
END-IF
*
IF (#SVC-FEE = 0) AND (ST-V.PLAN-A2 (#I1) = MASK (NN))
  IF ST-V.PLAN-N2 (#I1) LE 19 MOVE #SVC-FEE-10 TO #SVC-FEE ELSE
    IF ST-V.PLAN-N2 (#I1) LE 29 MOVE #SVC-FEE-20 TO #SVC-FEE ELSE
      IF ST-V.PLAN-N2 (#I1) LE 34 MOVE #SVC-FEE-30 TO #SVC-FEE ELSE
        MOVE #SVC-FEE-OL TO #SVC-FEE
      END-IF END-IF END-IF
END-IF
*
END-SUBROUTINE
*
END
