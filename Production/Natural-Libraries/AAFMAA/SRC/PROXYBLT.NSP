* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*   bz 03-03-2016
*   Create Proxy Bal Files
* ---------------------------------------------------------------------------------------
*                                             
DEFINE DATA 
LOCAL USING ADDA0001
LOCAL
 1 ST-V VIEW OF A-STATUS
   2 ID-NUMBER 
   2 WIDOW-FLAG
   2 MEMBER-CONTACT-ID
   2 PROCESS-IND 
   2 INTRO-FLAG 
   2 NUMBER-MEMBERSHIPS
   2 MILITARY-SERVICE
   2 MILITARY-STATUS
   2 INS-MAIL-CODE
   2 ANNUAL-RPT-FLAG
*
 1 CNT-V  VIEW OF A-CONTACTS
     2 CONTACT-ID
     2 FIRST-NAME
     2 MIDDLE-NAME
     2 LAST-NAME
     2 SUFFIX
     2 RANK-ID
     2 SSN
     2 DATE-OF-DEATH  
*
 1 RNK-V VIEW OF A-RANK-REFERENCE 
    2 RANK-ABBR 
*
 1 SMP-V VIEW OF A-SVC-MEMBER
  2 SVC-STATUS
  2 SVC-PLAN 

*
1 CNRY VIEW OF A-GEN-TABLE
  2 GEN-KEY                           (A4)
  2 GEN-SUB-KEY                       (A3)
  2 GEN-ALPHA-VALUE                   (A50)
  2 GEN-DESCRIPTION                   (A75)
1 #TABLE-KEY  (A7) 1 REDEFINE #TABLE-KEY
  2 #GEN-KEY         (A4)
  2 #SUB-KEY         (A3)
  
 1  f_Name              (A/9) DYNAMIC  INIT <"F1_full_48_states_@@DD.txt",
                                            "F2_full_apos_@@DD.txt",
                                            "F3_full_foreign_@@DD.txt",
                                            ' ', ' ', ' ',
                                            "F7_no_rpt_48_states_@@DD.txt",
                                            "F8_no_rpt_apos_@@DD.txt",
                                            "F9_no_rpt_foreign_@@DD.txt">
 1 f_dir                (A)   DYNAMIC  INIT <"/usr/SAG/TEMP/"> 
 1 f_Path               (A/9) DYNAMIC          
 1 v_Name               (A)   DYNAMIC
 1 v_SSN                (A9)
 1 v_Zip                (A10)
 1 v_Phone              (A)   DYNAMIC
 1 v_Email              (A)   DYNAMIC
 1 v_Ret                (A3)   
1  dm                   (A1)     INIT <H'09'>
*
*
1 #i                    (I4)  
1 #j                    (I4)  
1 v_A400                (A400) 
1 c_In                  (N6)    (EM=ZZZ,ZZ9)
1 c_Skip_1              (N6)    (EM=ZZZ,ZZ9)
1 c_Skip_1_1            (N6)    (EM=ZZZ,ZZ9)
1 c_Skip_2              (N6)    (EM=ZZZ,ZZ9)
1 c_Err_1               (N6)    (EM=ZZZ,ZZ9)
1 c_Err_2               (N6)    (EM=ZZZ,ZZ9)
1 c_Und_Addr            (N6)    (EM=ZZZ,ZZ9)
1 c_No-ADDR             (N6)    (EM=ZZZ,ZZ9)
1 c_OK                  (N6)    (EM=ZZZ,ZZ9)
1 c_F                   (N6)    (EM=ZZZ,ZZ9)
1 c_1                   (N6)    (EM=ZZZ,ZZ9)
1 c_2                   (N6)    (EM=ZZZ,ZZ9)
1 c_3                   (N6)    (EM=ZZZ,ZZ9)
1 c_N                   (N6)    (EM=ZZZ,ZZ9)
1 c_7                   (N6)    (EM=ZZZ,ZZ9)
1 c_8                   (N6)    (EM=ZZZ,ZZ9)
1 c_9                   (N6)    (EM=ZZZ,ZZ9)
1 c_ADDR-2_Q            (N6)    (EM=ZZZ,ZZ9)
1 v_A                   (A)     DYNAMIC 
1 v_A_Length            (I2)
1 #ADDR-CODE-X          (N1)
1 has_svc             (N6)    (EM=ZZZ,ZZ9)
*   
1  v_PN             (I1)     INIT  <1>
1  f_Log            (A80)    INIT <"/usr/SAG/TEMP/F_PROXY_Log.txt">
1  v_RC             (N3)
* - - - - -
END-DEFINE
***********************************
ON ERROR
  WRITE  *PROGRAM "Err-ln:" *ERROR-LINE "Err:" *ERROR-NR / ST-V.ID-NUMBER
  ESCAPE ROUTINE
END-ERROR
 v_PN := 1    v_RC := PRT_FN_PUT(<v_PN, f_Log>)
 PRINT(1)  *DAT4U *TIMX  'Proxy'
 v_A := *DATN
 FOR #i = 1 TO 9
   IF f_Name(#i) = ' ' ESCAPE TOP END-IF
   EXAMINE f_Name(#i) FOR '@@DD' REPLACE v_A
   COMPRESS f_dir f_Name(#i) INTO f_PATH(#i) LEAVING NO SPACE
*   PRINT #i(EM=9')') f_PATH(#i)
 END-FOR 
 DEFINE WORK FILE 1  f_PATH(1) TYPE 'ASCII-COMPRESSED'
 DEFINE WORK FILE 2  f_PATH(2) TYPE 'ASCII-COMPRESSED'
 DEFINE WORK FILE 3  f_PATH(3) TYPE 'ASCII-COMPRESSED'
 DEFINE WORK FILE 7  f_PATH(7) TYPE 'ASCII-COMPRESSED'
 DEFINE WORK FILE 8  f_PATH(8) TYPE 'ASCII-COMPRESSED'
 DEFINE WORK FILE 9  f_PATH(9) TYPE 'ASCII-COMPRESSED'
 COMPRESS 'CN' 'Formated Name' 'First name' 'Middle name' 'Last name' 'Suffix' 
          'Retired' 'Rank' 'Mil.serv'
          'Street' 'Street-2' 'City' 'State' 'Zip'
          'Email' 'Phone' 'Ann Rpt flag' 'SSN'
          
          INTO v_A400 WITH DELIMITERS dm
 WRITE WORK FILE 1 v_A400
 WRITE WORK FILE 2 v_A400
 WRITE WORK FILE 3 v_A400
 WRITE WORK FILE 7 v_A400
 WRITE WORK FILE 8 v_A400 
 WRITE WORK FILE 9 v_A400

PRGRS. SETTIME
READ  ST-V BY ID-NUMBER  FROM 1900 /*  TO 13510
     c_In := c_In + 1
     IF    ( PROCESS-IND ='C' ) 
        OR (WIDOW-FLAG = 'Y'  )
        OR (INTRO-FLAG = 'A' OR = 'S' OR ='K' OR = 'G')
*        OR NUMBER-MEMBERSHIPS = 0
        OR MILITARY-SERVICE = 'EMP'
*        OR INS-MAIL-CODE = 'E' OR = 'F'     
          c_Skip_1 := c_Skip_1 + 1
          ESCAPE TOP 
     END-IF

   IF NUMBER-MEMBERSHIPS = 0
       Fsvc.
       FIND(1) SMP-V  WITH SVC-ID-NUMBER = ST-V.ID-NUMBER
         WHERE SVC-STATUS = 'A' 
           AND ( SVC-PLAN = 'MTG' OR = 'PSM' OR = 'SAS' OR = 'WMT' )
       END-FIND
       IF *COUNTER(Fsvc.) = 0 
           c_Skip_1_1 := c_Skip_1_1 + 1
           c_Skip_1 := c_Skip_1 + 1
           ESCAPE TOP 
       END-IF
       has_svc := has_svc + 1 
   END-IF          
     RESET #PDA-ADDRESS
     #ADD-TYPE := 'P'
     #ADD-CONTACT-ID := MEMBER-CONTACT-ID 
     CALLNAT 'ADDN0001' #PDA-ADDRESS
     IF  (#ADD-LINE-1 = ' ' AND #ADD-LINE-2 = ' ' AND #ADD-LINE-3 = ' ')
        OR #ADD-RETURNED-MAIL = 'Y'
        c_Und_Addr := c_Und_Addr + 1
        ESCAPE TOP
     END-IF
     
     IF #ADD-COUNTRY-CODE <> 'US' 
       #GEN-KEY := 'COUN'
       #SUB-KEY := #ADD-COUNTRY-CODE
       FIND (1) CNRY WITH SEC-KEY = #TABLE-KEY
         #ADD-CITY := CNRY.GEN-DESCRIPTION
       END-FIND
       #ADD-STATE := ' '
     END-IF    
* ------- Test Zip -----------------------------
    MOVE EDITED #ADD-ZIP5(EM=99999) TO v_ZIP
    IF #ADD-ZIP4 <> 0
       MOVE EDITED #ADD-ZIP4(EM=9999) TO v_A
       COMPRESS v_ZIP '-' v_A INTO v_ZIP LEAVING NO SPACE
    END-IF
* ----------------------------------------------
   v_A := *TRIM(#ADD-CITY)                           
   v_A_Length := *LENGTH(v_A)
   DECIDE FOR FIRST CONDITION
   WHEN  #ADD-ZIP-CODE = 0                                 /* Foreign
         #ADDR-CODE-X  := 1
   WHEN (#ADD-CITY = MASK('APO') OR = MASK('FPO') OR = MASK('DPO')) 
         AND (*Length(v_A) = 3) 
         #ADDR-CODE-X := 2                                 /* APO'S    
   WHEN #ADD-STATE = 'AK' OR = 'HI' OR = 'PR' OR = 'GU' OR = 'AS'
          OR = 'MH' OR = 'MP' OR = 'PW' OR = 'VI'
       #ADDR-CODE-X := 3
   WHEN NONE
      #ADDR-CODE-X := 4
   END-DECIDE     
* ----------------------------------------------
    FCNT.                                        
    FIND CNT-V WITH ID-NUMBER = ST-V.ID-NUMBER   
    END-FIND                                     
    IF *NUMBER(FCNT.) = 0                        
       c_Err_1 := c_Err_1 + 1
       PRINT(1) c_Err_1(EM=Z,ZZ9']') ST-V.ID-NUMBER 'No contact found'
       ESCAPE TOP                                
    END-IF                                       
    IF DATE-OF-DEATH  <> 0         
       c_Err_2 := c_Err_2 + 1      
       ESCAPE TOP                  
    END-IF                         
    v_Name := 'L'
    CALLNAT 'GPRS0CNT' MEMBER-CONTACT-ID v_Name
    IF v_Name = MASK(*'RET'/) 
       v_Ret := 'Ret'
    ELSE 
       v_Ret := ' '
    END-IF
    
    MOVE EDITED CNT-V.SSN(EM=999999999) TO v_SSN
    RANK-ABBR := ' '
    FIND RNK-V WITH   RANK-ID = CNT-V.RANK-ID END-FIND
    
    v_Email := GET-EML(<MEMBER-CONTACT-ID>)
    v_Phone := GET-PHONE(<MEMBER-CONTACT-ID>)
    EXAMINE v_Phone FOR '(' DELETE
    EXAMINE v_Phone FOR ')' DELETE
    EXAMINE v_Phone FOR '-' DELETE    
    
  IF #ADD-LINE-1 = ' '    
    ADD 1 TO c_No-ADDR
    PRINT(1) c_NO-ADDR(EM=ZZZ,ZZ9')') ST-V.ID-NUMBER v_Name 'No Address'
  END-IF

  IF    (ST-V.ANNUAL-RPT-FLAG <> 'F') 
    AND (ST-V.ANNUAL-RPT-FLAG <> 'S')
      ST-V.ANNUAL-RPT-FLAG := 'N'
  END-IF  
  PERFORM sbr_Out
END-READ

  CLOSE WORK FILE 1
  CLOSE WORK FILE 2
  CLOSE WORK FILE 3
  CLOSE WORK FILE 7
  CLOSE WORK FILE 8
  CLOSE WORK FILE 9          
  WRITE(1) //  *DATX *TIMX  *TIMD(PRGRS.) (EM=ZZh:99min:99sec:9) /
   'Record read            '   c_IN           / 
   'Skip in status         '   c_Skip_1       /
   'Skip inactive, no srv  '   c_Skip_1_1     /
   'Has Serv               '   has_svc        /
   'Bug: No CNT            '   c_Err_1        /
   'Bug: DOD <> 0          '   c_Err_2        /
   'Undeliverable Address  '   c_Und_Addr     /
   'c_ADDR-2_Q             '   c_ADDR-2_Q     /
   '1-3 Full reports       '   c_F     /
   '1   48 States          '   c_1     /
   '2   APO"s & Territories'   c_2     /   
   '3   Foreigns           '   c_3     /   
   '7-9 No report          '   c_N     /    
   '7   48 States          '   c_7     /
   '8   APO"s & Territories'   c_8     /   
   '9   Foreigns           '   c_9     /   
   'Output total           '   c_OK
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = 
DEFINE sbr_Out
      c_OK := c_OK + 1
      IF RANK-ABBR = 'UNK' RANK-ABBR := ' ' END-IF
      IF #ADD-LINE-3 = ' '
         EXAMINE #ADD-LINE-2 FOR #ADD-CITY GIVING POSITION #i
         IF #i = 1
           #ADD-LINE-2 := ' '
           ELSE
             c_ADDR-2_Q := c_ADDR-2_Q + 1
         END-IF  
      END-IF
      
      COMPRESS 
              ST-V.ID-NUMBER  
            dm  v_Name
            dm  FIRST-NAME
            dm  MIDDLE-NAME
            dm  LAST-NAME
            dm  SUFFIX
            dm  v_Ret 
            dm  RANK-ABBR
            dm  MILITARY-SERVICE
            dm  #ADD-LINE-1
            dm  #ADD-LINE-2
            dm  #ADD-CITY
            dm  #ADD-STATE
            dm  v_Zip
            dm  v_Email 
            dm  v_Phone
            dm  ANNUAL-RPT-FLAG
            dm  v_SSN

                  INTO v_A400 LEAVING NO SPACE 
  DECIDE ON FIRST VALUE ST-V.ANNUAL-RPT-FLAG
    VALUE 'F'
       c_F := c_F + 1                     /*  Full report
       DECIDE ON FIRST VALUE #ADDR-CODE-X
         VALUE 4                          /*  48 States
           c_1 := c_1 + 1
           WRITE WORK 1 v_A400
         VALUE 2,3                        /*  APO's & Territories
           c_2 := c_2 + 1
           WRITE WORK FILE 2  v_A400
         NONE                             /*  Foreigns
           c_3 := c_3 + 1
           WRITE WORK FILE 3  v_A400    
       END-DECIDE   
   VALUE 'N'
       c_N := c_N + 1                     /* No report 
       DECIDE ON FIRST VALUE #ADDR-CODE-X
         VALUE 4                          /*  48 States
           c_7 := c_7 + 1
           WRITE WORK FILE 7 v_A400
         VALUE 2,3                        /*  APO's & Territories
           c_8 := c_8 + 1
           WRITE WORK FILE 8  v_A400
         NONE                             /*  Foreigns
           c_9 := c_9 + 1
           WRITE WORK FILE 9  v_A400    
       END-DECIDE   
    NONE IGNORE
  END-DECIDE     
         
END-SUBROUTINE
END
*                                                      
