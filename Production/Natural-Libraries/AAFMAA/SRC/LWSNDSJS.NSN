* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
/** New Subprogram LWSNDSJS.
/**
/** :author nguentchev
DEFINE DATA
PARAMETER USING LWSADS
PARAMETER
1 jSonString (A) DYNAMIC
LOCAL
1 BLANK    (A1) CONST <' '>
1 #TAGS    (I2) CONST <11>
1 JVALUES  (A/#TAGS) DYNAMIC
1 JTAGS    (A/#TAGS) DYNAMIC 

1 #D       (N8) 1 REDEFINE #D
  2 #YYYY  (A4)
  2 #MM    (A2)
  2 #DD    (A2)
1 J        (I2)
1 I        (I2)
1 AIND (A1/#TAGS)
1 D1       (A1) CONST <'"'>
1 D2       (A2) CONST <'",'>
END-DEFINE
/* 
RESET J JVALUES (*)
  JTAGS (*)

* JTAGS (1) :=  '''new_iasdesignationid'':';       AIND(1) := 'Y'  /* "123456"
* JTAGS (2) :=  '''new_beneficiarydesignationid'':'; AIND(2) := 'Y'  /* "106eee2d-9c0d-e711-80cb-005056a21fa2"
* JTAGS (3) :=  '''new_commondisasterdays'':';     AIND(3) := 'N'  /* Up to 60
* JTAGS (4) :=  '''new_dateupdated'':';            AIND(4) := 'Y'  /* "2017-01-01"
* JTAGS (5) :=  '''new_designationstatus'':';      AIND(5) := 'Y'  /* "Final", Verified
* JTAGS (6) :=  '''new_designationtext'':';        AIND(6) := 'Y'  /* "BD show"
* JTAGS (7) :=  '''new_instructionsprimary'':';    AIND(7) := 'Y'  /* "Primary"
* JTAGS (8) :=  '''new_instructionscontingent'':'; AIND(8) := 'Y'  /* "Contingent"
* JTAGS (9) :=  '''new_irrevocable'':';            AIND(9) := 'Y'  /* "Yes/No"
* JTAGS (10) := '''new_perstirpesprimary'':';      AIND(10) := 'Y' /* "Yes/No"
* JTAGS (11) := '''new_perstirpescontingent'':';   AIND(11) := 'Y' /* "Yes/No"

ADD 1 TO J
JTAGS (J) :=  '''new_iasdesignationid'':';
AIND  (J) := 'Y'  /* "123456"
JVALUES (J) := PolicyDesignation.DESIGNATION-ID
            /* Designation GUID 
ADD 1 TO J
JTAGS (J) :=  '''new_beneficiarydesignationid'':'; 
AIND  (J) := 'Y'  /* "106eee2d-9c0d-e711-80cb-005056a21fa2"
IF PolicyDesignation.DesignationGUID NE BLANK
  JVALUES (J) := PolicyDesignation.DesignationGUID
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_commondisasterdays'':';
AIND  (J) := 'N'  /* Up to 60
IF PolicyDesignation.COMMON-DISASTER > 0
  JVALUES (J) := PolicyDesignation.COMMON-DISASTER
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_dateupdated'':';            
AIND  (J) := 'Y'  /* "2017-01-01"
IF PolicyDesignation.DateUpdated NE BLANK
  JVALUES (J) := PolicyDesignation.DateUpdated
END-IF 

ADD 1 TO J
JTAGS (J) :=  '''new_designationstatus'':';      
AIND  (J) := 'Y'  /* "Final", "Verified"
JVALUES (J) := PolicyDesignation.DsStatus
        
ADD 1 TO J
JTAGS (J) :=  '''new_designationtext'':';        
AIND  (J) := 'Y'  /* "BD show"
JVALUES (J) := PolicyDesignation.DesignationText

ADD 1 TO J
JTAGS (J) :=  '''new_instructionsprimary'':';    
AIND  (J) := 'Y'  /* "Primary"
IF PolicyDesignation.InstructionsPrimary NE BLANK
  JVALUES (J) := PolicyDesignation.InstructionsPrimary
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_instructionscontingent'':'; 
AIND  (J) := 'Y'  /* "Contingent"
IF PolicyDesignation.InstructionsContingent NE BLANK
  JVALUES (J) := PolicyDesignation.InstructionsContingent
END-IF

ADD 1 TO J
JTAGS (J) :=  '''new_irrevocable'':';            
AIND  (J) := 'Y'  /* "Yes/No"
JVALUES (J) := PolicyDesignation.RestrictedIrrvcble

ADD 1 TO J
JTAGS (J) := '''new_perstirpesprimary'':';      
AIND  (J) := 'Y' /* "Yes/No"
JVALUES (J) := PolicyDesignation.PSprimary

ADD 1 TO J
JTAGS (J) := '''new_perstirpescontingent'':';   
AIND  (J) := 'Y' /* "Yes/No"
JVALUES (J) := PolicyDesignation.PScontingent

/* Final steps formating JSon
FOR I 1 J
  MOVE *TRIM(JVALUES (I), LEADING) TO JVALUES (I)
END-FOR

FOR J 1 TO #TAGS
  IF JVALUES (J) NE BLANK
    IF AIND (J) = 'Y'
      COMPRESS D1 JVALUES (J) D2 INTO JVALUES (J) LEAVING NO
    ELSE
      COMPRESS JVALUES (J) ',' INTO JVALUES (J) LEAVING NO
    END-IF
  END-IF
END-FOR
COMPRESS '={'
  JTAGS (1) JVALUES (1)
  INTO jSonString leaving no
FOR J 2 TO #TAGS
  IF JVALUES (J) NE BLANK
    COMPRESS jSonString
      JTAGS (J) JVALUES (J)
      INTO jSonString leaving no
  END-IF
END-FOR
COMPRESS jSonString '}' INTO jSonString LEAVING NO
EXAMINE jSonString FOR ',}' REPLACE WITH '}'

END
