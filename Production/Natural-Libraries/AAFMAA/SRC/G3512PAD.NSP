* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: G3512PAD     ** FETCHED FROM G3500PAD  does ad dat
*************************************************************************
*                       MODIFICATION LOG                                *
* USER DATE      TAG  REASON                                            *
* PAM  03112005  PM1  Reset display fields for GRANKSXX                 *
* PAM  02082006  PM2  Adjust capitalization of letters for contact name *
* SAG  12062005  RH1  SS - Replaced the HEX constant '7F'(Double Quote) *
*                     in EBCDIC to HEX code '22' in ASCII.              *
* YAK  02152007  YK   Fix extra space/quote issue on UNIX for data.txt  *
* PAM 08/23/2010 PM3  Added new address storage                         *
* bz  11/03/2010 bz1  deprecate FUNCTION-CONTACT-NAME-2
* vxt 11/12/2010 vt1  change the source of name                         *
*************************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK.CI-BLOCK
LOCAL USING GONERLXX     /* WORK FIELDS FOR GONERCXX - ERROR ROUTINE
LOCAL USING ADDA0001     /* PM3
LOCAL
*
* 1 #QUOTE   (A2) INIT <H'7F'>  /* SAG RH1 12062005 SS
1 #QUOTE   (A2) INIT <H'22'>    /* SAG RH1 12062005 SS
1 #LETTER-TABLE
  2 #1T (A26) INIT <'AaBbCcDdEeFfGgHhIiJjKkLlMm'>
  2 #2T (A26) INIT <'NnOoPpQqRrSsTtUuVvWwXxYyZz'>
1 REDEFINE #LETTER-TABLE
  2 #LETTER-OCC  (26)
    3 #UPPER     (A1)
    3 #LOWER     (A1)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID                                             /* PM3
   2 RANK
  2 MILITARY-STATUS
  2 MILITARY-SERVICE
  2 PROCESS-IND                                                    /* PM2
  2 INTRO-FLAG                                                     /* PM2
*
1 IM-V VIEW OF A-INTRO-MEMBER
  2 ID-NUMBER
  2 NAME
  2 RANK
  2 MIL-SERVICE
  2 ADDRESS-1
  2 ADDRESS-2
  2 ADDRESS-3
  2 ZIP-CODE
  2 S-ADDRESS-1
  2 S-ADDRESS-2
  2 S-ADDRESS-3
  2 S-ZIP-CODE
*
1 CT-V VIEW OF A-CONTACTS                                          /* PM3
  2 CONTACT-ID                                                      /* PM3
  2 LAST-NAME                                                       /* PM3
*
1 #EDS-ZIP-BAR-CODE  (A14)
1 #PR-SEC-ADDR (A1) INIT <'P'>
1 #LOAN-AMT        (P6.2)
1 #LOAN-AMT-2      (P6.2)
1 #RESTRICT-MBR-SW (A1)
1 #SUSPEND-CODE    (A1)
1 #FIRST/MID       (A25)
1 #SUFFIX          (A25)
1 #EXTRA1          (A25)
1 #EXTRA2          (A25)
1 #HOLD-EDIT-ZIP   (A10)
1 REDEFINE #HOLD-EDIT-ZIP
  2 #HOLD-ZIP-5     (A5)
  2 #HOLD-ZIP2      (A5)
*
1 #DAT-CNT         (P3)
1 #SCR-DAT-NUM-LBL (A2)
1 #BEG-ID          (N6)
1 REDEFINE #BEG-ID
  2 #BEG-ID-A       (A6)
1 #END-ID          (N6)
1 #S-X     (I2)
1 #TEXT    (A78/22)
1 #I2       (I2)
1 #AD-FF-3  (A78)
1 #AD-ADDR-MSG  (A30/3)
*
1 #ISSUE-DATE (N8)
1 REDEFINE #ISSUE-DATE
  2 #ISS-DT-CENT (A2)
  2 #ISS-DT-YY   (A2)
  2 #ISS-DT-MM   (A2)
  2 #ISS-DT-DD   (A2)
*
1 #MODE  (A1)
1 #PAID-TO-DATE (N8)
1 REDEFINE #PAID-TO-DATE
  2 #PT-CENT (N2)
  2 #PT-YY   (N2)
  2 #PT-MM   (N2)
  2 REDEFINE #PT-MM
    3 #PT-MM-A (A2)
  2 #PT-DD   (N2)
1 #ERROR-MESSAGE  (A65)
*
1 #WYYYYMMDD
  2 #WCENT    (N2)
  2 #WYY      (N2)
  2 #WMM      (N2)
  2 #WDD      (N2)
1 REDEFINE #WYYYYMMDD
  2 #WYYYYMMDD-N (N8)
1 REDEFINE #WYYYYMMDD
  2 #WYYYY-N   (N4)
  2 #WMMDD-N   (N4)
1 REDEFINE #WYYYYMMDD
  2 #WCENT-A   (A2)
  2 #WYY-A     (A2)
  2 #WMM-A     (A2)
  2 #WDD-A     (A2)
*
1 #DEL       (A1) CONST<','>
*
1 #FULL-RANK       (A23)
1 #EDIT-INVALID (L)
1 #RANK-LITERAL (A23)
1 #DISPL        (P2)
1 #PASS-COMMAND (A2)   INIT <'AD'>
*
1 #ID-NUM               (N6)
1 REDEFINE #ID-NUM
  2 #ID-NUM-A    (A6)
1 #HOLD-RANK-5           (A5)
1 REDEFINE #HOLD-RANK-5
  2 #HOLD-RANK           (A3)
  2 #HOLD-RANK-LST-2     (A2)
1 #HOLD-NAME             (A70)                                        /* vt1 was 25
1 #HOLD-LAST-NAME        (A25)
1 REDEFINE #HOLD-LAST-NAME
  2 #HOLD-LAST-NAME-A     (A1/25)
1 #HOLD-SSN              (N9)
1 REDEFINE #HOLD-SSN
  2 #SSN-1                (A3)
  2 #SSN-2                (A2)
  2 #SSN-3                (A4)
1 #HOLD-DEBIT-CREDIT-AMT (P7.2)
1 #HOLD-TERM-PREM-REF-DUE (P5.2)
1 #HOLD-TERM-DEBIT-CREDIT (P5.2)
1 #HOLD-ALOT-AMT         (P5.2)
*
1 #EXT-DEAR-FORMATED-NAME    (A70)                                 /* vt1 was 45
1 #EXT-FORMATED-NAME         (A70)                             /* vt1 was #formated-name (a45)
*
1 #FIRST-ADDRESS         (A70)    /* PM3
1 #SECOND-ADDRESS        (A70)    /* PM3
1 #THIRD-ADDRESS         (A70)    /* PM3
1 #MIL-STATUS            (A1)
1 #MIL-SERVICE           (A3)
1 #FORMAT-MEMSHIP        (A2)
1 #NUM-PDUP              (P2)
1 #PASSED-AMT            (P5.2)   /* passed from g3500pad
1 #HOLD-EDIT-PREM        (A8)
1 #ALLOT-NUM             (A5)
1 #DOB-SP    (N8)
1 #DOM       (N8)
1 #DOD       (N8)
1 #SSN-SP    (N9)
1 #WIDOW-FLAG (A1)
1 #NUMBER-MEMBERSHIPS  (P1)
1 #PASSED-DB       (P7.2)
1 #PASSED-LOAN-INT (P7.2)
1 #PASSED-LPO-INT  (P5.2)
*
1 #REC-OVERFLOW      (A156)
1 REDEFINE #REC-OVERFLOW
  2 #REC-OVF-1ST-78   (A78)
  2 #REC-OVF-2ND-78   (A78)
*
1 #N                 (N3)
*
1 p_GPRS0CNT                      /* bz1
  2 p_CID    (N8)                /* bz1
  2 p_Name   (A)    DYNAMIC      /* bz1
*
1 #memo-to-name               (a70)                           /* vt1
END-DEFINE
*************************************************************************
INCLUDE GONERCXX
* * * * * * * * *
*
* INPUT #ID-NUM #HOLD-NAME #HOLD-SSN #HOLD-LAST-NAME #HOLD-RANK-5                     /* vt1
INPUT #ID-NUM #HOLD-NAME #HOLD-SSN #HOLD-LAST-NAME #memo-to-name                    /* vt1
  #HOLD-DEBIT-CREDIT-AMT #HOLD-ALOT-AMT
*      #FORMATED-NAME #FIRST-ADDRESS #SECOND-ADDRESS #THIRD-ADDRESS                   /* vt1
  #ext-formated-name #first-address #second-address #third-address               /* vt1
  #MIL-STATUS #MIL-SERVICE
  #MODE #PAID-TO-DATE #LOAN-AMT #LOAN-AMT-2
  #RESTRICT-MBR-SW #SUSPEND-CODE
  #EDS-ZIP-BAR-CODE #AD-FF-3 #PASSED-AMT #HOLD-TERM-PREM-REF-DUE
  #HOLD-TERM-DEBIT-CREDIT
  #ISSUE-DATE #EXT-DEAR-FORMATED-NAME #AD-ADDR-MSG (1:3)                        /* vt1
  #DOB-SP #DOM #DOD #SSN-SP #WIDOW-FLAG #NUMBER-MEMBERSHIPS
  #PASSED-DB #PASSED-LOAN-INT #PASSED-LPO-INT
*
IF  (NOT #CGA-SCR-COMMAND = 'AD' OR = 'ID')
    OR (#CGA-SCR-ID NE 0)
    OR (NOT #CGA-SCR-SUFFIX = 'DAT' OR = 'DTO')
*
  RESET #CGA-SCR-COMMAND
  RESET #CGA-SCR-ID
  RESET #CGA-SCR-SUFFIX
  RESET #S-X
  FIND (1) ST-V WITH MEMBER-KEY = #ID-NUM-A  /* to get 3 dig rank
  END-FIND
  PERFORM FORMAT-DAT
*
  PERFORM DISPLAY-SCREEN
  IF #REC-OVF-1ST-78 NE ' '
    ADD 1 TO #S-X
    MOVE #REC-OVF-1ST-78 TO #TEXT (#S-X)
    RESET #REC-OVF-1ST-78
  END-IF
*
  INPUT USING MAP 'C1021MAA'
*
  IF #CGA-SCR-COMMAND = ' '
    MOVE #CGA-ORIG-COMMAND TO #CGA-SCR-COMMAND
    MOVE #CGA-ORIG-ID TO #CGA-SCR-ID
    MOVE #CGA-ORIG-SUFFIX  TO #CGA-SCR-SUFFIX
    INPUT USING MAP 'G1000MXX'
  END-IF
*
  FETCH 'G1000PXX'
END-IF
*
IF #CGA-SCR-COMMAND = 'AD'
  MOVE 'CN' TO #SCR-DAT-NUM-LBL
ELSE
  MOVE 'IM' TO #SCR-DAT-NUM-LBL
END-IF
*
MOVE '*' TO #CGA-SCR-COMMAND
INPUT MARK *#BEG-ID USING MAP 'G3510MAD'
*
IF #CGA-SCR-COMMAND NE '*'
  FETCH 'G1000PXX'
END-IF
*
IF #CGA-ORIG-COMMAND = 'ID'
  IF #BEG-ID LT 100000
    ADD 700000 TO #BEG-ID
  END-IF
*
  IF #END-ID LT 100000
    ADD 700000 TO #END-ID
  END-IF
END-IF
*
IF #END-ID LT #BEG-ID
  REINPUT 'ENDING ID-NUMBER MUST BE GTR THAT BEG ID'
    MARK *#END-ID
END-IF
*
RESET #CGA-SCR-COMMAND
  #CGA-SCR-ID
  #CGA-SCR-SUFFIX
*
IF #CGA-ORIG-COMMAND = 'AD'
  READ ST-V BY MEMBER-KEY FROM #BEG-ID-A
    IF ST-V.ID-NUMBER GT #END-ID
      ESCAPE BOTTOM
    END-IF
*
    ADD 1 TO #DAT-CNT
    MOVE ST-V.ID-NUMBER TO #ID-NUM
    MOVE ST-V.ID-NUMBER TO #ID-NUM
*    RESET #DISPL #RANK-LITERAL #HOLD-RANK-5                       /* PM1        /* vt1 \/
*    CALLNAT 'GRANKSXX' #PASS-COMMAND ST-V.RANK
*       ST-V.MILITARY-SERVICE #EDIT-INVALID #DISPL #RANK-LITERAL
*       #HOLD-RANK-5
*
*  p_CID := MEMBER-CONTACT-ID                                              /* bz1
*  CALLNAT 'GPRS0CNT' p_GPRS0CNT                                           /* bz1
*  #FORMATED-NAME := p_Name                                                /* bz1
*    #FORMATED-NAME := FUNCTION-CONTACT-NAME-2(<ST-V.MEMBER-CONTACT-ID>)   /* PM3
*    COMPRESS #FORMATED-NAME #HOLD-RANK-5 INTO #FORMATED-NAME              /* PM3
*    FIND (1) CT-V WITH CT-V.CONTACT-ID = ST-V.MEMBER-CONTACT-ID           /* PM3
*      #HOLD-LAST-NAME := CT-V.LAST-NAME                                   /* PM3
*    END-FIND                                                              /* PM3
*    SEPARATE ST-V.NAME INTO #HOLD-LAST-NAME #FIRST/MID                   /* PM3
*               #SUFFIX #EXTRA1 #EXTRA2 WITH DELIMITER #DEL               /* PM3
*    COMPRESS #HOLD-RANK-5 #FIRST/MID INTO #FORMATED-NAME LEAVING NO      /* PM3
*                                                                         /* PM3
*    COMPRESS #FORMATED-NAME #HOLD-LAST-NAME INTO #FORMATED-NAME          /* PM3
*    IF #SUFFIX NE ' '                                                    /* PM3
*      COMPRESS #FORMATED-NAME ',' #SUFFIX INTO #FORMATED-NAME            /* PM3
*                                                 LEAVING NO              /* PM3
*    END-IF
*
*    IF ST-V.MILITARY-STATUS = 'R'
*     COMPRESS #FORMATED-NAME ', RET' INTO #FORMATED-NAME LEAVING NO
*    END-IF                                                                      /* vt1 /\
*
    IF #PR-SEC-ADDR = 'S'                                                 /* PM3
      #ADD-TYPE     := #PR-SEC-ADDR                                       /* PM3
    ELSE                                                                  /* PM3
      #ADD-TYPE     := 'P'                                                /* PM3
    END-IF                                                                /* PM3
    PERFORM GET-ADDRESS                                                   /* PM3
*
*    IF #PR-SEC-ADDR = 'S'                                                /* PM3
*      MOVE S-ADDRESS-1 TO ADDRESS-1                                      /* PM3
*      MOVE S-ADDRESS-2 TO ADDRESS-2                                      /* PM3
*      MOVE S-ADDRESS-3 TO ADDRESS-3                                      /* PM3
*      MOVE S-ZIP-CODE TO ZIP-CODE                                        /* PM3
*    END-IF
*
*    MOVE EDITED ST-V.ZIP-CODE (EM=99999-9999) TO #HOLD-EDIT-ZIP          /* PM3
*
*    IF #HOLD-ZIP2 = '-0000'                                              /* PM3
*      MOVE '     ' TO #HOLD-ZIP2                                         /* PM3
*    END-IF                                                               /* PM3
*
*    MOVE ST-V.ADDRESS-1 TO #FIRST-ADDRESS                                /* PM3
*    IF ST-V.ADDRESS-3 = ' '                                              /* PM3
*      COMPRESS ST-V.ADDRESS-2 #HOLD-EDIT-ZIP INTO #SECOND-ADDRESS        /* PM3
*      RESET #THIRD-ADDRESS                                               /* PM3
*    ELSE                                                                 /* PM3
*      COMPRESS ST-V.ADDRESS-3 #HOLD-EDIT-ZIP INTO #THIRD-ADDRESS         /* PM3
*      MOVE ST-V.ADDRESS-2 TO #SECOND-ADDRESS                             /* PM3
*    end-if                                                               /* PM3
*
    PERFORM FORMAT-DAT
  END-READ
ELSE
  READ IM-V BY ID-NUMBER FROM #BEG-ID
    IF IM-V.ID-NUMBER GT #END-ID
      ESCAPE BOTTOM
    END-IF
*
    ADD 1 TO #DAT-CNT
    MOVE IM-V.ID-NUMBER TO #ID-NUM
*
    MOVE IM-V.ID-NUMBER TO #ID-NUM
    SEPARATE IM-V.NAME INTO #HOLD-LAST-NAME #FIRST/MID
      #SUFFIX #EXTRA1 #EXTRA2 WITH DELIMITER #DEL
*   * COMPRESS IM-V.RANK #FIRST/MID INTO #FORMATED-NAME LEAVING NO                      /* vt1    was #formated-name \/
    COMPRESS IM-V.RANK #FIRST/MID INTO #EXT-FORMATED-NAME LEAVING NO                      /* vt1
* COMPRESS #FORMATED-NAME #HOLD-LAST-NAME INTO #FORMATED-NAME                              /* vt1
    compress #ext-formated-name #hold-last-name into #ext-formated-name                     /* vt1
    IF #SUFFIX NE ' '
*  COMPRESS #FORMATED-NAME ',' #SUFFIX INTO #FORMATED-NAME                                  /* vt1
      COMPRESS #EXT-FORMATED-NAME ',' #SUFFIX INTO #EXT-FORMATED-NAME                                  /* vt1
        LEAVING NO
    END-IF
*
    IF #PR-SEC-ADDR = 'S'
      MOVE S-ADDRESS-1 TO ADDRESS-1
      MOVE S-ADDRESS-2 TO ADDRESS-2
      MOVE S-ADDRESS-3 TO ADDRESS-3
      MOVE S-ZIP-CODE TO ZIP-CODE
    END-IF
*
    MOVE EDITED IM-V.ZIP-CODE (EM=99999-9999) TO #HOLD-EDIT-ZIP
*
    IF #HOLD-ZIP2 = '-0000'
      MOVE '     ' TO #HOLD-ZIP2
    END-IF
*
    MOVE IM-V.ADDRESS-1 TO #FIRST-ADDRESS
    IF IM-V.ADDRESS-3 = ' '
      COMPRESS IM-V.ADDRESS-2 #HOLD-EDIT-ZIP INTO #SECOND-ADDRESS
      RESET #THIRD-ADDRESS
    ELSE
      COMPRESS IM-V.ADDRESS-3 #HOLD-EDIT-ZIP INTO #THIRD-ADDRESS
      MOVE IM-V.ADDRESS-2 TO #SECOND-ADDRESS
    END-IF
*
    MOVE IM-V.RANK TO ST-V.RANK   /* used by format-dat
    MOVE IM-V.MIL-SERVICE  TO ST-V.MILITARY-SERVICE
    PERFORM FORMAT-DAT
  END-READ
END-IF
*
IF #DAT-CNT = 0
  MOVE 'NO RECORDS FOUND' TO #ERROR-MESSAGE
END-IF
*
PERFORM DISPLAY-SCREEN
IF #REC-OVF-1ST-78 NE ' '
  ADD 1 TO #S-X
  MOVE #REC-OVF-1ST-78 TO #TEXT (#S-X)
  RESET #REC-OVF-1ST-78
END-IF
*
IF #S-X GT 0
  RESET #CGA-SCR-COMMAND
  INPUT TEXT #ERROR-MESSAGE USING MAP 'C1021MAA'
*
  IF #CGA-SCR-COMMAND NE ' '
    FETCH 'G1000PXX'
  END-IF
*
  RESET #S-X #TEXT (*)
END-IF
*
IF #CGA-SCR-COMMAND = ' '
  MOVE #CGA-ORIG-COMMAND TO #CGA-SCR-COMMAND
  MOVE 'DAT' TO #CGA-SCR-SUFFIX
END-IF
*
FETCH 'G1000PXX'
*
*************************************************************************
DEFINE SUBROUTINE FORMAT-DTO
*************************************************************************
*
FOR #I1 2 TO 25
  FOR #I2 1 TO 26
    IF ST-V.PROCESS-IND = 'C'                                     /* PM2
        AND ST-V.INTRO-FLAG NE 'A'                                   /* PM2
        AND #HOLD-LAST-NAME-A (#I1 - 1) = ' '                        /* PM2
      ESCAPE TOP                                                  /* PM2
    END-IF                                                        /* PM2
*
    IF #HOLD-LAST-NAME-A (#I1) = #UPPER (#I2)
      MOVE #LOWER (#I2) TO #HOLD-LAST-NAME-A (#I1)
    END-IF
  END-FOR
END-FOR
*
* RESET #DISPL #RANK-LITERAL #HOLD-RANK-5                           /* PM1              /* vt1 \/
* CALLNAT 'GRANKSXX' #PASS-COMMAND ST-V.RANK ST-V.MILITARY-SERVICE
* #EDIT-INVALID #DISPL #RANK-LITERAL #HOLD-RANK-5
* MOVE #RANK-LITERAL TO #FULL-RANK
*
* IF #FULL-RANK = ' '
*  MOVE #HOLD-LAST-NAME TO #DEAR-FORMATED-NAME                                    
* ELSE
*  COMPRESS #FULL-RANK #HOLD-LAST-NAME INTO #DEAR-FORMATED-NAME
* END-IF                                                                               /* vt1 /\
*
ADD 1 TO #S-X
COMPRESS #ID-NUM '$$' INTO #TEXT (#S-X) LEAVING NO
PERFORM CHECK-BOTTOM
ADD 1 TO #S-X
* COMPRESS #FORMATED-NAME '$$' INTO #TEXT (#S-X) LEAVING NO                           /* vt1
compress #EXT-formated-name '$$' INTO #TEXT (#S-X) LEAVING NO                           /* vt1
PERFORM CHECK-BOTTOM
ADD 1 TO #S-X
COMPRESS #FIRST-ADDRESS INTO #TEXT (#S-X) LEAVING NO
PERFORM CHECK-BOTTOM
ADD 1 TO #S-X
MOVE #SECOND-ADDRESS TO #TEXT (#S-X)
*
IF #THIRD-ADDRESS = ' '
  COMPRESS #TEXT (#S-X) '$$' INTO #TEXT (#S-X) LEAVING NO
  PERFORM CHECK-BOTTOM
ELSE
  ADD 1 TO #S-X
  COMPRESS #THIRD-ADDRESS '$$' INTO #TEXT (#S-X) LEAVING NO
  PERFORM CHECK-BOTTOM
END-IF
*
ADD 1 TO #S-X
COMPRESS #EXT-DEAR-FORMATED-NAME '$$@@' INTO #TEXT (#S-X) LEAVING NO              /* vt1
PERFORM CHECK-BOTTOM
*
END-SUBROUTINE
*
*************************************************************************
DEFINE SUBROUTINE CHECK-BOTTOM
*************************************************************************
*
IF #S-X GE 22
  INPUT TEXT #ERROR-MESSAGE USING MAP 'C1021MAA'
*
  IF #CGA-SCR-COMMAND NE ' '
    FETCH 'G1000PXX'
  END-IF
*
  RESET #S-X
  RESET #TEXT (*)
END-IF
*
END-SUBROUTINE
*
*************************************************************************
DEFINE SUBROUTINE FORMAT-DAT
*************************************************************************
*
IF #CGA-ORIG-SUFFIX = 'DTO'
  PERFORM FORMAT-DTO
  ESCAPE ROUTINE
END-IF
*
COMPRESS #REC-OVERFLOW
  #QUOTE  #ID-NUM #QUOTE ','
*  #QUOTE  #FORMATED-NAME #QUOTE ','                                /* vt1
  #QUOTE  #EXT-FORMATED-NAME #QUOTE ','                                /* vt1
  #QUOTE  #FIRST-ADDRESS #QUOTE ','
  INTO #REC-OVERFLOW LEAVING NO
PERFORM DISPLAY-SCREEN
*
COMPRESS #REC-OVERFLOW
  #QUOTE  #SECOND-ADDRESS #QUOTE ','
  #QUOTE  #THIRD-ADDRESS #QUOTE ','
  INTO #REC-OVERFLOW LEAVING NO
PERFORM DISPLAY-SCREEN
*
FOR #I1 2 TO 25
  FOR #I2 1 TO 26
    IF ST-V.PROCESS-IND = 'C'                                     /* PM2
        AND ST-V.INTRO-FLAG NE 'A'                                   /* PM2
        AND #HOLD-LAST-NAME-A (#I1 - 1) = ' '                        /* PM2
      ESCAPE TOP                                                  /* PM2
    END-IF                                                        /* PM2
*
    IF #HOLD-LAST-NAME-A (#I1) = #UPPER (#I2)
      MOVE #LOWER (#I2) TO #HOLD-LAST-NAME-A (#I1)
    END-IF
  END-FOR
END-FOR
*
* RESET #DISPL #RANK-LITERAL #HOLD-RANK-5                           /* PM1     /* vt1 \/
* CALLNAT 'GRANKSXX' #PASS-COMMAND ST-V.RANK ST-V.MILITARY-SERVICE
* #EDIT-INVALID #DISPL #RANK-LITERAL #HOLD-RANK-5
* MOVE #RANK-LITERAL TO #FULL-RANK
*
* IF #FULL-RANK = ' '
*  MOVE #HOLD-LAST-NAME TO #DEAR-FORMATED-NAME
* ELSE
*  COMPRESS #FULL-RANK #HOLD-LAST-NAME INTO #DEAR-FORMATED-NAME
* END-IF                                                                      /* vt1 /\
*
COMPRESS #REC-OVERFLOW
  #QUOTE  #EXT-DEAR-FORMATED-NAME #QUOTE                                     /* vt1
  '~'     /* end of member indicator
  INTO #REC-OVERFLOW LEAVING NO
PERFORM DISPLAY-SCREEN
*
END-SUBROUTINE
*
*************************************************************************
DEFINE SUBROUTINE DISPLAY-SCREEN
*************************************************************************
*
IF #REC-OVF-2ND-78 NE ' '
  ADD 1 TO #S-X
  EXAMINE DIRECTION 'B' #REC-OVF-1ST-78 FOR ',' GIVING POSITION #N /* YK
  MOVE SUBSTRING(#REC-OVF-1ST-78,1,#N) TO #TEXT (#S-X)           /* YK1
  #N:=#N+1                                                       /* YK1
  IF #N LE 78
    COMPRESS SUBSTRING(#REC-OVF-1ST-78,#N) #REC-OVF-2ND-78 INTO    /* YK1
      #REC-OVERFLOW LEAVING NO                                       /* YK1
  ELSE
    MOVE #REC-OVF-2ND-78 TO #REC-OVERFLOW
  END-IF
*
  IF #S-X GE 22
    RESET #CGA-SCR-COMMAND
    INPUT TEXT #ERROR-MESSAGE USING MAP 'C1021MAA'
*
    IF #CGA-SCR-COMMAND NE ' '
      FETCH 'G1000PXX'
    END-IF
*
    RESET #S-X #TEXT (*)
  END-IF
END-IF
*
END-SUBROUTINE
*
*************************************************************************
DEFINE SUBROUTINE GET-ADDRESS
*************************************************************************
*
#ADD-CONTACT-ID := ST-V.MEMBER-CONTACT-ID
CALLNAT 'ADDN0001'
  #PDA-ADDRESS
*
#FIRST-ADDRESS  := #ADD-LINE-1
#SECOND-ADDRESS := #ADD-LINE-2
#THIRD-ADDRESS  := #ADD-LINE-3
*
END-SUBROUTINE
*
END
