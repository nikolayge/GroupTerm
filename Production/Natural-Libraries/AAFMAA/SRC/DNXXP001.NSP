* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: DNXXP001 - Deceased Member Maintanance
*       Browse pattern
*       There is a collection of entities and the browse is based on:
*       The DNXVNnnn are 2 objects per entity: coolect data and show data
*       There is one object associated with entity for updates
************************************************************************
*                       MODIFICATION LOG                               *
* USER     DATE      TAG     REASON                                    *
*                                                                      *
* NGG    11/28/2010  None    Program written                           *
* TMT    10/07/2013  TT1     ADDRESS NORMALIZATION                     *
* vxt    03/06/2018  vt1     /Ticket HD-7950/ disable PF4 for Claimants category
************************************************************************
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX
LOCAL
1 #ID         (N6)
1 #CONTACT-ID (N8)
1 #HEADER1            (A78)
1 #HEADER2            (A78)
1 #SELECTION          (A1)
1 #CLERK-ID           (A3)
1 #CGA-SCR-COMMAND-CV (C)
1 #CGA-SCR-ID-CV      (C)
1 #CGA-SCR-SUFFIX-CV  (C)
1 #CN-OR-CI-TEXT      (A2)
1 #CI-TEXT            (A2)
1 #RANK-ID            (N6)
*
1 #16             (N2) CONST <16>
1 #PAGE           (N2)
1 #PAGE-IS-FULL   (L)
1 #PAGE-DATA
  2 #LNIX         (N2)
  2 #ENT-NAME     (A10/#16)
  2 #ENT-NBR      (A1/#16)
  2 #ENT-TEXT     (A64/#16)
*
1 #BROWSE
  2 #BROWSE-START          (I4)
  2 #COLLECTION            (I4/9)
  2 #ITEM                  (I4/9)
  2 #ITEM-IS-ON-THE-PAGE   (L)
  2 #MEMBER-ON-THE-PAGE    (L)
*
1 #SELECTED-ITEM-NBR  (I4)
1 #CR                 (I4) CONST <9>           /*TT1 INCREASED FROM 8 TO 9
1 #TEXT-SIZE          (I4) CONST <5>
1 #DN-ITEM-CREATE     (A8)
1 #DN-ITEM-VIEW       (A8)
1 #PGM-CREATE-NAME    (A8/#CR) INIT <
  'DNXCN001',
  'DNXCN002',
  'DNXCN003',
  'DNXCN004',
  'DNXCN005',
  'DNXCN006',
  'DNXCN007',
  'DNXCN009',
  'DNXCN010'                                  /*TT1 ADDED 'DNXCN010'
  >
1 #PGM-BROWSE-NAME    (A8/#CR) INIT <
  'DNXVN001',
  'DNXVN002',
  'DNXVN003',
  'DNXVN004',
  'DNXVN005',
  'DNXVN006',
  'DNXVN007',
  'DNXVN009',
  'DNXVN010'                                  /*TT1 ADDED 'DNXCN010'
  >
1 #PGM-UPDATE-NAME    (A8/#CR) INIT <
  'DNXUN001',
  'DNXUN002',
  'DNXUN003',
  'DNXUN004',
  'DNXUN005',
  'DNXUN006',
  'DNXUN007',
  'DNXUN009',
  'DNXUN010'                                   /*TT1 ADDED 'DNXCN010'
  >
1 #ITEM-COLLECTION-SEPARATION (A1/#CR) INIT < 'N','N','N','N','N','N','N','N','N'>
1 #ITEM-COLLECTION-NAMES (A/#CR) DYNAMIC INIT <
  'Rank',
  'Entitle',
  'Spouse',
  'FRM Spouse',
  'Death Info',
  'Notifd By',
  'Funeral',
  'NOK',
  'Claimants'                                  /*TT1 ADDED 'CLAIMANTS'
  >
1 #ITEM-COLLECTION-DATA (#CR)
  2 #NAME     (A10)
  2 #ENT-SIZE (I4)
  2 #ENT-BRWS (I4)
  2 #SPACE-LN (L)
  2 #ENT-ISN  (P8/99)
  2 #TEXT     (A67/#TEXT-SIZE)
*
1 #CCN        (I4)
1 #CURRENT-COLLECTION
  2 #NAME     (A10)
  2 #ENT-SIZE (I4)
  2 #ENT-BRWS (I4)
  2 #SPACE-LN (L)
  2 #ENT-ISN  (P8/99)
  2 #TEXT     (A67/#TEXT-SIZE)
*
1 #NN  (N2) 1 REDEFINE #NN
  2 #NN-A (A2)
1 #MSG                       (A72) 1 redefine #MSG
  2 #GLOBAL-USER-COMPANY     (A1)
  2 #GLOBAL-SECURITY-CODE    (N2)
1 #MODE                      (A1)
1 #CV-TAB                    (C/18)
1 #SELECT                    (I4)
1 #CHAIN-UPDATE              (I4) CONST <1>
1 #NEWITEM                   (I4) CONST <2>
1 #CONTACT                   (I4) CONST <3>
1 BLANK                      (A1) CONST <' '>
1 NEW-ENTITY                 (A3) CONST <'NEW'>
*
1 CONTACT VIEW OF A-CONTACTS
  2 CONTACT-ID
  2 ID-NUMBER
*
1 STATUS VIEW OF A-STATUS
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID
*
1 #I           (I4)
1 #K           (I4)
1 #J           (I4)
*
1 #claims      (l)                 /* vt1
*
END-DEFINE
*
INCLUDE GONERCXX
*
DEFINE WINDOW Maintain
  SIZE 15 * 40
  BASE 1/10
  FRAMED ON POSITION SYMBOL AUTO
*
SET KEY PF3  NAMED 'Exit'
SET KEY PF4  NAMED 'AdUp'
SET KEY PF12 NAMED 'Reln'
*
PERFORM INIT-STEPS
IF #CONTACT-ID = 0
  ESCAPE ROUTINE
END-IF
*
MOVE (AD=P) TO #CV-TAB (*)
#CGA-SCR-COMMAND := '*'
PERFORM ENTITIES-DATA
*
REPEAT
  INPUT WITH TEXT #MSG USING MAP 'DNXVM001'
  PERFORM GET-SELECT
  DECIDE ON FIRST VALUE OF *PF-KEY
    VALUE 'PF4'
      DECIDE ON FIRST VALUE OF #SELECT
*        VALUE #NEWITEM
*          PERFORM ADD-CONTACT-INFO
        VALUE #CONTACT
          MOVE 'V' TO #MODE
          CALLNAT 'GUPCISXX'
            #CONTACT-ID
            #CONTACT-ID
            #CGA-ORIG-COMMAND
            #ID
            #CGA-USER-COMPANY
            #CLERK-ID
            #MODE
            #MSG
        VALUE #CHAIN-UPDATE
          if #claims                                                                         /* vt1
            #msg := 'Use PF12 to select a claimant. Add claimant on AUC'                     /* vt1
            escape top
          else
            CALLNAT 'DNXMN001'
              #CGA-USER-COMPANY
              #CGA-SECURITY-CODE
              #CLERK-ID
              #MSG
              #CONTACT-ID
              #SELECTED-ITEM-NBR
              #CR
              #ITEM-COLLECTION-DATA (*)
          end-if                                                                              /* vt1
        ANY VALUE
          PERFORM ENTITIES-DATA
        NONE VALUE IGNORE
      END-DECIDE
      ESCAPE TOP
    VALUE 'ENTR'
      IF #CGA-SCR-COMMAND NE '*'
        FETCH 'G1000PXX'
      END-IF
      IF #CONTACT-ID NE CONTACT.CONTACT-ID
        RESET #CGA-SCR-ID
        FETCH 'DNXXP001' #CGA-SCR-ID #CONTACT-ID #CLERK-ID
      END-IF
      IF #SELECT = #CHAIN-UPDATE
        CALLNAT 'DNXMN001'
          #CGA-USER-COMPANY
          #CGA-SECURITY-CODE
          #CLERK-ID
          #MSG
          #CONTACT-ID
          #SELECTED-ITEM-NBR
          #CR
          #ITEM-COLLECTION-DATA (*)
        PERFORM ENTITIES-DATA
      END-IF
      ESCAPE TOP
    VALUE 'PF7'
      IF #PAGE > 1
        SUBTRACT 1 FROM #PAGE
        PERFORM PAGE-DATA
      END-IF
    VALUE 'PF8'
      ADD 1 TO #PAGE
      IF #COLLECTION ( #PAGE ) > 0
        PERFORM PAGE-DATA
      ELSE
        SUBTRACT 1 FROM #PAGE
      END-IF
    VALUE 'PF12'
      IF #SELECT = #CHAIN-UPDATE
          AND #ITEM-COLLECTION-DATA.#NAME ( #SELECTED-ITEM-NBR ) = 'NOK' OR= 'Notifd By' OR= 'Claimants'
*          OR #ITEM-COLLECTION-DATA.#NAME ( #SELECTED-ITEM-NBR ) = 'Notifd By' )
        #MSG := 'PF12'
        CALLNAT 'DNXMN001'
          #CGA-USER-COMPANY
          #CGA-SECURITY-CODE
          #CLERK-ID
          #MSG
          #CONTACT-ID
          #SELECTED-ITEM-NBR
          #CR
          #ITEM-COLLECTION-DATA (*)
        PERFORM ENTITIES-DATA
      ELSE
        CALLNAT 'GPF12SXX' #CONTACT-ID
      END-IF
      ESCAPE TOP
    NONE VALUE IGNORE
  END-DECIDE
  UNTIL *PF-KEY = 'PF3'
END-REPEAT
/*
DEFINE INIT-STEPS
/*     ==========
GET STATUS #CGA-ISN
MOVE MEMBER-CONTACT-ID TO #CONTACT-ID
**INPUT #CGA-SCR-ID #CONTACT-ID #CLERK-ID

IF #CGA-SCR-ID > 0
  FIND CONTACT WITH ID-NUMBER = #CGA-SCR-ID
    IF NO RECORDS FOUND
      RESET #CONTACT-ID
      FIND STATUS WITH ID-NUMBER = #CGA-SCR-ID
        MOVE 'CN' TO #CN-OR-CI-TEXT
        MOVE ID-NUMBER TO #ID
        MOVE 'CI' TO #CI-TEXT
        MOVE MEMBER-CONTACT-ID TO #CONTACT-ID
      END-FIND
      IF #CONTACT-ID = 0
        MOVE (AD=NP) TO #CGA-SCR-COMMAND-CV #CGA-SCR-ID-CV #CGA-SCR-SUFFIX-CV
        ASSIGN #CONTACT-ID = #CGA-SCR-ID
        RESET #CGA-SCR-ID
        FIND CONTACT WITH CONTACT-ID = #CONTACT-ID
          IF ID-NUMBER > 0
            MOVE 'CN' TO #CN-OR-CI-TEXT
            MOVE ID-NUMBER TO #ID
            MOVE 'CI' TO #CI-TEXT
            MOVE CONTACT-ID TO #CONTACT-ID
          ELSE
            MOVE 'CI' TO #CN-OR-CI-TEXT
            MOVE CONTACT-ID TO #CONTACT-ID
          END-IF
        END-FIND
      END-IF
      ESCAPE BOTTOM
    END-NOREC
    MOVE 'CN' TO #CN-OR-CI-TEXT
    MOVE ID-NUMBER TO #ID
    MOVE 'CI' TO #CI-TEXT
    MOVE CONTACT-ID TO #CONTACT-ID
  END-FIND
ELSE
  FIND CONTACT WITH CONTACT-ID = #CONTACT-ID
    IF ID-NUMBER > 0
      MOVE 'CN' TO #CN-OR-CI-TEXT
      MOVE ID-NUMBER TO #ID
      MOVE 'CI' TO #CI-TEXT
      MOVE CONTACT-ID TO #CONTACT-ID
    ELSE
      MOVE 'CI' TO #CN-OR-CI-TEXT
      MOVE CONTACT-ID TO #CONTACT-ID
    END-IF
  END-FIND
END-IF

END-SUBROUTINE
/*
DEFINE ENTITIES-DATA
/*     =============
RESET #BROWSE
  #ITEM-COLLECTION-DATA  (*)
*
CALLNAT 'ADRN0004' #CONTACT-ID #HEADER1 #HEADER2
#CLERK-ID := FUNCTION-CLERK (<*USER>)
*  Collect data for DN list screen
FOR #J 1 TO #CR
  RESET #CURRENT-COLLECTION
  #CURRENT-COLLECTION.#NAME := #ITEM-COLLECTION-NAMES ( #J )
  #CURRENT-COLLECTION.#ENT-BRWS := #J
  IF #ITEM-COLLECTION-SEPARATION ( #J ) = 'Y'
    #CURRENT-COLLECTION.#SPACE-LN := TRUE
  END-IF
  #DN-ITEM-CREATE := #PGM-CREATE-NAME ( #J )
* PRINT #DN-ITEM-CREATE #CURRENT-COLLECTION
  CALLNAT #DN-ITEM-CREATE
    #CONTACT-ID
    #CURRENT-COLLECTION.#ENT-SIZE
    #CURRENT-COLLECTION.#ENT-ISN  (*)
  MOVE BY NAME #CURRENT-COLLECTION TO #ITEM-COLLECTION-DATA ( #J )
END-FOR
*
RESET #PAGE-IS-FULL
#PAGE := 1
#COLLECTION (1) := 1
#ITEM  (1) := 1
PERFORM PAGE-DATA
*
IF #PAGE-IS-FULL
  SET KEY PF8  NAMED 'PgDn'
  SET KEY PF7  NAMED 'PgUp'
ELSE
  SET KEY PF7=OFF
  SET KEY PF8=OFF
END-IF
*
END-SUBROUTINE
/*
DEFINE PAGE-DATA
/*     =========
IF #COLLECTION ( #PAGE ) <= 0
  ESCAPE ROUTINE
END-IF
RESET #PAGE-DATA #PAGE-IS-FULL
#LNIX := 1
#CCN          := #COLLECTION ( #PAGE )         /* Number of Item shown first on the page
#BROWSE-START := #ITEM ( #PAGE )               /* The START line of the Item
*
PERFORM NEXT-ITEM
REPEAT UNTIL #CCN > #CR
    OR #PAGE-IS-FULL
  PERFORM NEXT-ITEM
END-REPEAT
*
IF #CLERK-ID = 'NG'
  #I := #PAGE + 1
  print 'Collection' #CCN #BROWSE-START 'Page line:' #LNIX #DN-ITEM-VIEW
    / 'Next Page' #I 'Started:' #ITEM ( #I ) 'Collection#' #COLLECTION ( #I )
END-IF
IF #CCN > #CR
  RESET #PAGE-IS-FULL
END-IF
END-SUBROUTINE
/*
DEFINE NEXT-ITEM
/*     =========
MOVE BY NAME #ITEM-COLLECTION-DATA ( #CCN ) TO #CURRENT-COLLECTION
#DN-ITEM-VIEW := #PGM-BROWSE-NAME  ( #CCN )
IF #CURRENT-COLLECTION.#SPACE-LN
    AND #BROWSE-START = 1
    AND #LNIX > 1
    AND #CURRENT-COLLECTION.#ENT-SIZE > 0  /* Not empty
  PERFORM PAGE-NEXT-LINE
END-IF
IF #CLERK-ID = 'NG'   /* <<<<  Trace data   >>>>
  print 'Collection' #CCN #BROWSE-START 'Page line:' #LNIX #DN-ITEM-VIEW
END-IF
PERFORM ITEM-DATA     /* Try to put next item on the page
IF #CLERK-ID = 'NG'   /* <<<<  Trace data   >>>>
  print 'After ITEM DATA #ITEM-IS-ON-THE-PAGE:' #ITEM-IS-ON-THE-PAGE #CCN
END-IF
IF #ITEM-IS-ON-THE-PAGE
  ADD 1 TO #CCN       /* Next Item
END-IF
*
IF #PAGE-IS-FULL
  #I := #PAGE + 1
  #ITEM       ( #I ) := #BROWSE-START
  #COLLECTION ( #I ) := #CCN
  ESCAPE ROUTINE
END-IF
*
END-SUBROUTINE
/*
DEFINE ITEM-DATA
/*     =========
IF #PAGE-IS-FULL
  reset #ITEM-IS-ON-THE-PAGE
  ESCAPE ROUTINE
END-IF
#ITEM-IS-ON-THE-PAGE := TRUE
IF #CURRENT-COLLECTION.#ENT-SIZE <= 0  /* Empty Item
  ESCAPE ROUTINE
END-IF
*
FOR #J #BROWSE-START TO #CURRENT-COLLECTION.#ENT-SIZE
  IF #PAGE-IS-FULL
    RESET #ITEM-IS-ON-THE-PAGE
    #BROWSE-START := #J
    ESCAPE BOTTOM
  END-IF
  CALLNAT #DN-ITEM-VIEW
    #CONTACT-ID
    #CURRENT-COLLECTION.#ENT-ISN ( #J )
    #CURRENT-COLLECTION.#TEXT (*)
  MOVE (AD=I) TO #CV-TAB ( #LNIX )
  #ENT-NAME (#LNIX) := #CURRENT-COLLECTION.#NAME
  #K := 1
  #ENT-TEXT (#LNIX) := #CURRENT-COLLECTION.#TEXT (#K)
  PERFORM MEMBER-DATA
  PERFORM PAGE-NEXT-LINE
END-FOR
*
END-SUBROUTINE
/*
DEFINE MEMBER-DATA
/*     ===========
RESET #MEMBER-ON-THE-PAGE
REPEAT UNTIL #PAGE-IS-FULL
  ADD 1 TO #K
  DECIDE FOR FIRST CONDITION
    WHEN #K > #TEXT-SIZE
        OR #CURRENT-COLLECTION.#TEXT (#K) EQ BLANK
      #MEMBER-ON-THE-PAGE := TRUE
      ESCAPE BOTTOM
    WHEN NONE
      PERFORM PAGE-NEXT-LINE
      IF NOT #PAGE-IS-FULL
        #ENT-TEXT (#LNIX) := #CURRENT-COLLECTION.#TEXT (#K)
      END-IF
  END-DECIDE
END-REPEAT
IF NOT #MEMBER-ON-THE-PAGE
  RESET #ITEM-IS-ON-THE-PAGE
END-IF
IF #CLERK-ID = 'NG'   /* <<<<  Trace data   >>>>
  print 'Text line:' #K 'Page line' #LNIX 'Member on the page:' #MEMBER-ON-THE-PAGE
    #ITEM-IS-ON-THE-PAGE
END-IF
END-SUBROUTINE
/*
DEFINE PAGE-NEXT-LINE
/*     ==============
ADD 1 TO #LNIX
IF #LNIX > #16
  #PAGE-IS-FULL := TRUE
END-IF
END-SUBROUTINE
/*
DEFINE GET-SELECT
/*     ==========
reset #claims                               /* vt1
DECIDE ON FIRST VALUE OF *CURS-LINE
  VALUE 1
    #SELECT := #NEWITEM
  VALUE 3
    #SELECT := #CONTACT
  VALUE 4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19
    #J := *CURS-LINE - 3
    REPEAT UNTIL #J < 1 OR #ENT-NAME (#J) NE BLANK
      SUBTRACT 1 FROM #J
    END-REPEAT
    IF #J > 0
      #SELECTED-ITEM-NBR := 1
      REPEAT UNTIL #SELECTED-ITEM-NBR > #CR
        IF #ENT-NAME (#J) = #ITEM-COLLECTION-DATA.#NAME ( #SELECTED-ITEM-NBR )
          #SELECT := #CHAIN-UPDATE
          ESCAPE BOTTOM
        END-IF
        ADD 1 TO #SELECTED-ITEM-NBR
      END-REPEAT
      #NN-A := #SELECTED-ITEM-NBR
    END-IF
  NONE VALUE
    RESET #SELECT
END-DECIDE
if *curs-line GE 16                          /* vt1 \/
  move TRUE to #claims
end-if                                       /* vt1 /\
*  PRINT *CURS-LINE #SELECT

END-SUBROUTINE

END
