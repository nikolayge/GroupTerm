* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID : C2510SAM    ** REBUILD "AM" PROCESSOR
*
* REBUILD "AM" SCREEN AFTER UNFORESEEN SYSTEM PROBLEM DURING PROCESSING
*
* * * * M O D I F I C A T I O N   L O G  * * * * *
* USER   DATE      TAG     REASON
* DRW   03/21/2007 DW1 Prevent Record lock whwn reading NT Record on "I"
* DRW   03/30/2007 DW2 Prevent Record lock whwn reading NT Record on "D"
* PAM   03/01/2009 PM3 Include screen suffix
* * * * * * * * * *
*
DEFINE DATA
PARAMETER
1 #REBUILD-FUNCTION  (A1) /* I-INIT S-SAVE D-DELETE R-REBUILD T-TRLOG
1 #RETURN-CODE       (A1) /* E IF ERROR ON RETURN
1 #REB-NUM           (N1)
1 #DATE-OF-UPDATE    (N8)
1 #TIME-OF-UPDATE    (N7)
1 #CLERK             (A3)
1 #SCR-PAGE-NUM      (P2)
1 #TRANS-TABLE       (300)
 2 #TT-TRAN-APPLIED  (L)
 2 #TT-ID-NO         (P6)
 2 #TT-EFF-DT        (P8)
 2 #TT-ISS-DT        (P8)
 2 #TT-TRAN-CODE     (A4)
 2 #TT-TRAN-AMT      (P7.2)
 2 #TT-NAME          (A25)
 2 #TT-ADJ           (A1)
 2 #TT-ALP-CODE      (A1)
 2 #TT-AMT-FLAG      (A1)
 2 #TT-CASH-CODE     (A1)
1 #SCR-BTCH-TOT      (N8.2/21)  /* TO STORE 20 + 1 SCREENS OF TOTALS
1 #SCR-BATCH-TOT     (N8.2)     /* FINAL BATCH TOTAL
1 #TRLOG-ID-NUMBER   (N6)
1 #TRLOG-TRAN-CODE   (A4)
1 #TRLOG-TRAN-AMT    (P7.2)
1 #BAD-BATCH-PHASE   (L)
1 #SUFFIX            (A3)       /* PM3
*
LOCAL
1 NT-V VIEW OF A-NOTES
 2 ID-NUMBER          (N6)
 2 DTS-DATN           (P9)
 2 DTS-TIMN           (P7)
 2 NOTE-CLERK-ID      (A3/1)
 2 NOTE-TEXT          (A60/16)
 2 REDEFINE NOTE-TEXT
  3 NOTE-AM-LINES     (16)
   4 NOTE-AM-LINE              /* LAYOUT OF OCCUR 1 THRU 15
    5 NOTE-ID-NUMBER  (N6)
    5 NOTE-EFF-DT     (N8)
    5 NOTE-TRAN-CODE  (A4)
    5 NOTE-TRAN-AMT   (N8.2)
    5 NOTE-NAME       (A17)
    5 NOTE-ISS-DT     (N8)
    5 NOTE-ADJ        (A1)
    5 NOTE-ALP-CODE   (A1)
    5 NOTE-AMT-FLAG   (A1)
*   5 NOTE-FILL-1     (A4)
    5 NOTE-SUFFIX     (A3)    /* PM3
    5 NOTE-FILL-1     (A1)    /* PM3
   4 REDEFINE NOTE-AM-LINE    /* LAYOUT OF OCCUR 16
    5 NOTE-BATCH-TOT  (N8.2)
*
1 TR-V VIEW OF A-ACCOUNTING-REGISTER
 2 ID-NUMBER        (N6)
 2 TRANSACTION-DATN (P9)
 2 TRANSACTION-TIMN (P7)
 2 CLERK-ID         (A3)
 2 TXN-CODE         (A4)
 2 DEBIT-AMOUNT     (P7.2)
 2 CREDIT-AMOUNT    (P7.2)
*
1 #CLERK-DATE-KEY  (A8)
1 REDEFINE #CLERK-DATE-KEY
 2 #CLERK-DATE-KEY-CLERK   (A3)
 2 #CLERK-DATE-KEY-DATE    (P9)
*
1 #FOUND-REC    (L)
1 #FIRST-TIME   (L)
1 #I1           (I2)
1 #ITT          (I4)
1 #IPG          (I2)
1 #TEXT         (A70)
1 #CALC-ID-NUM  (N6)
1 #BEG-NOTE-NUM (N6)
1 #END-NOTE-NUM (N6)
1 #NT-ISN       (P8)
1 #LOOP-CNT     (P2)
1 #FINISHED     (L)
1 #NUM-USERS    (N3)
1 #Y-N          (A1)
1 #REC-FOUND    (L)
1 #LAST-ID      (N6)
*
END-DEFINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
*  write 'Top of C2510SAM Funct' #rebuild-function 'Pag=' #SCR-PAGE-NUM
*    #CLERK #DATE-OF-UPdATE #TIME-OF-UPDAtE
*    'BAD-BATCH-ind=' #bad-batch-phase
*  if #rebuild-function = 'D'
*    write 'Reb-num =' #reb-num
*  end-if
*
RESET #RETURN-CODE
*
IF #REBUILD-FUNCTION = 'I'               /* INITIALIZE
  IF #BAD-BATCH-PHASE
    PERFORM SAVE-AM-SCREEN
    ESCAPE ROUTINE
  END-IF
*
  RESET #FINISHED
  REPEAT UNTIL #FINISHED
    FOR #LOOP-CNT = 1 TO 3  /* ADDED 3/21/2007 to prevent Record locks /* DW1
      COMPUTE #BEG-NOTE-NUM = 800040 + ((#LOOP-CNT - 1) * 20)
      FIND (1) NT-V WITH ID-NUMBER = #BEG-NOTE-NUM
        ADD 1 TO #NUM-USERS
      END-FIND
    END-FOR
*
    MOVE 'N' TO #Y-N
    IF #NUM-USERS GE 3
      INPUT // 'THERE ARE CURRENTLY 3 USERS PROCESSING MULTI-PAGE'
               '"AM" SCREENS.'
            /  'WHEN 1 OF THEM IS FINISHED, PRESS ENTER.'
            /  'ARE YOU TIRED WAITING? (Y/N)' #Y-N
            /  'Entering "Y" will mean this screen will be lost.'
      IF #Y-N = 'Y'
        FETCH 'G1000PXX'
      END-IF
    ELSE
      MOVE TRUE TO #FINISHED
    END-IF
  END-REPEAT
*
  RESET #LOOP-CNT #FINISHED
  REPEAT UNTIL #FINISHED
    ADD 1 TO #LOOP-CNT
    COMPUTE #BEG-NOTE-NUM = 800040 + ((#LOOP-CNT - 1) * 20)
    COMPUTE #END-NOTE-NUM = #BEG-NOTE-NUM + 19
    MOVE TRUE TO #FINISHED
    READ NT-V BY ID-NUMBER FROM #BEG-NOTE-NUM THRU #END-NOTE-NUM
      IF NT-V.ID-NUMBER = #BEG-NOTE-NUM
        IF #LOOP-CNT LT 3
          MOVE FALSE TO #FINISHED
          END TRANSACTION  /* Removed 3/21/2007 (REPLACED 3/27/2007)    /* DW1
          ESCAPE BOTTOM
        END-IF
*
        END TRANSACTION  /* We should never be here due to prior test  /* DW1
        INPUT // 'THERE ARE CURRENTLY 3 USERS PROCESSING MULTI-PAGE'
                 '"AM" SCREENS.'
              /  'WHEN 1 OF THEM IS FINISHED, PRESS ENTER.'
        RESET #LOOP-CNT
        MOVE FALSE TO #FINISHED
        ESCAPE BOTTOM
      END-IF
*
      DELETE (0151)  /* Removed 3/21/2007 (Later put back in)/* DW1
      END TRANSACTION                            /* DW1
    END-READ
    MOVE #LOOP-CNT TO #REB-NUM
  END-REPEAT
*
  RESET NT-V
  MOVE #BEG-NOTE-NUM   TO NT-V.ID-NUMBER
  MOVE #DATE-OF-UPDATE TO NT-V.DTS-DATN
  MOVE #TIME-OF-UPDATE TO NT-V.DTS-TIMN
  MOVE #CLERK          TO NT-V.NOTE-CLERK-ID (1)
*
  STORE NT-V
  END TRANSACTION
  PERFORM SAVE-AM-SCREEN
*
  ESCAPE ROUTINE
END-IF
*
IF #REBUILD-FUNCTION = 'S'               /* SAVE AN "AM" SCREEN
  PERFORM SAVE-AM-SCREEN
  ESCAPE ROUTINE
END-IF
*
IF #REBUILD-FUNCTION = 'D'               /* DELETE
  IF (#REB-NUM LT 1) OR (#REB-NUM GT 3)
    ESCAPE ROUTINE
  END-IF
*
  COMPUTE #BEG-NOTE-NUM = 800040 + ((#REB-NUM - 1) * 20)
  COMPUTE #END-NOTE-NUM = #BEG-NOTE-NUM + 19
*
  MOVE TRUE TO #REC-FOUND                         /* DW2
  FIND (1) NT-V WITH ID-NUMBER = #BEG-NOTE-NUM
    IF NO RECORD FOUND
      RESET #REC-FOUND
    END-NOREC
*
    IF NT-V.NOTE-CLERK-ID (1) NE #CLERK
      RESET #REC-FOUND
    END-IF
  END-FIND
*
  IF NOT #REC-FOUND                              /* DW2
    ESCAPE ROUTINE
  END-IF
*
  READ NT-V BY ID-NUMBER FROM #BEG-NOTE-NUM    /* DW2
    IF NT-V.ID-NUMBER GT #END-NOTE-NUM
      ESCAPE BOTTOM
    END-IF
*
    MOVE NT-V.ID-NUMBER TO #LAST-ID     /* DW2
  END-READ
*
  READ NT-V BY ID-NUMBER FROM #BEG-NOTE-NUM THRU #END-NOTE-NUM
    DELETE (0223)
    END TRANSACTION
*
    IF NT-V.ID-NUMBER GE #LAST-ID      /* DW2
      ESCAPE BOTTOM
    END-IF
  END-READ
*
  ESCAPE ROUTINE
END-IF
*
IF #REBUILD-FUNCTION = 'R'               /* REBUILD "AM" SCREEN
  FOR #LOOP-CNT 1 TO 3
    COMPUTE #BEG-NOTE-NUM = 800040 + ((#LOOP-CNT - 1) * 20)
    COMPUTE #END-NOTE-NUM = #BEG-NOTE-NUM + 19
    MOVE TRUE TO #FIRST-TIME
    RESET #FOUND-REC
    READ NT-V BY ID-NUMBER FROM #BEG-NOTE-NUM THRU #END-NOTE-NUM
      IF #FIRST-TIME
        RESET #FIRST-TIME
        IF  (NT-V.ID-NUMBER NE #BEG-NOTE-NUM)
         OR (#CLERK NE NOTE-CLERK-ID (1))   /* IS THIS THE RIGHT CLERK
          ESCAPE BOTTOM
        END-IF
*
        MOVE TRUE TO #FOUND-REC
        MOVE DTS-DATN          TO #DATE-OF-UPDATE
        MOVE DTS-TIMN          TO #TIME-OF-UPDATE
*       MOVE NOTE-CLERK-ID (1) TO #CLERK   /* REMOVED 1/8/92 BY DRW
        MOVE #LOOP-CNT TO #REB-NUM
*
        WRITE /// 'YOU ARE REBUILDING AN "AM" SCREEN SERIES CREATED BY'
        WRITE #CLERK ' ON ' #DATE-OF-UPDATE ' AT ' #TIME-OF-UPDATE
        WRITE // 'PRESS ENTER TO CONTINUE'
      END-IF
*
      FOR #I1 1 TO 15
        ADD 1 TO #ITT
        MOVE NOTE-ID-NUMBER (#I1) TO #TT-ID-NO     (#ITT)
        MOVE NOTE-EFF-DT    (#I1) TO #TT-EFF-DT    (#ITT)
        MOVE NOTE-ISS-DT    (#I1) TO #TT-ISS-DT    (#ITT)
        MOVE NOTE-TRAN-CODE (#I1) TO #TT-TRAN-CODE (#ITT)
        MOVE NOTE-TRAN-AMT  (#I1) TO #TT-TRAN-AMT  (#ITT)
        MOVE NOTE-NAME      (#I1) TO #TT-NAME      (#ITT)
        MOVE NOTE-ADJ       (#I1) TO #TT-ADJ       (#ITT)
        MOVE NOTE-ALP-CODE  (#I1) TO #TT-ALP-CODE  (#ITT)
        MOVE NOTE-AMT-FLAG  (#I1) TO #TT-AMT-FLAG  (#ITT)
        IF NOTE-SUFFIX (#I1) NE ' '       /* PM3
          #SUFFIX := NOTE-SUFFIX (#I1)    /* PM3
        END-IF                            /* PM3
      END-FOR
*
      ADD 1 TO #IPG
      MOVE NOTE-BATCH-TOT (16) TO #SCR-BTCH-TOT (#IPG)
      MOVE NOTE-BATCH-TOT (16) TO #SCR-BATCH-TOT
    END-READ
*
    IF #FOUND-REC
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF NOT #FOUND-REC
    MOVE 'E' TO #RETURN-CODE
  END-IF
*
  ESCAPE ROUTINE
END-IF
*
IF #REBUILD-FUNCTION = 'T'     /* CHECK DATE AND TIME ON TRLOG
  MOVE #CLERK          TO #CLERK-DATE-KEY-CLERK
  MOVE #DATE-OF-UPDATE TO #CLERK-DATE-KEY-DATE
  RESET #RETURN-CODE
*
  READ TR-V BY CLERK-DATE-KEY FROM #CLERK-DATE-KEY
    IF  (CLERK-ID NE #CLERK)
     OR (TRANSACTION-DATN NE #DATE-OF-UPDATE)
       ESCAPE BOTTOM
    END-IF
*
    IF   (TR-V.ID-NUMBER = #TRLOG-ID-NUMBER)     /* CLERK/DATE/TIME/ID MATCH
     AND (TRANSACTION-TIMN = #TIME-OF-UPDATE)
*    AND (TXN-CODE         = #TRLOG-TRAN-CODE) /* REMOVED 3/13/2000 TO
* ALLOW AAFMAA TO CHG TRN-CD TO FORCE AN EDIT REJECT TO APPLY ON REBUILD
     AND ((DEBIT-AMOUNT    = #TRLOG-TRAN-AMT)
      OR (CREDIT-AMOUNT    = #TRLOG-TRAN-AMT))
      MOVE 'M' TO #RETURN-CODE                   /* INDICATE A MATCH
      ESCAPE BOTTOM
    END-IF
  END-READ
*
  ESCAPE ROUTINE
END-IF
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE SAVE-AM-SCREEN
* * * * * * * * * * * * * * * *
*
COMPUTE #CALC-ID-NUM = 800039 + #SCR-PAGE-NUM + ((#REB-NUM - 1) * 20)
COMPUTE #ITT         = (#SCR-PAGE-NUM - 1) * 15
*
MOVE TRUE TO #FOUND-REC
FIND (1) NT-V WITH ID-NUMBER = #CALC-ID-NUM
  IF NO RECORDS FOUND
    MOVE FALSE TO #FOUND-REC
    ESCAPE BOTTOM
  END-NOREC
  MOVE *ISN TO #NT-ISN
END-FIND
*
IF #FOUND-REC
  GET NT-V #NT-ISN
END-IF
*
IF   (#SCR-PAGE-NUM NE 1)
 AND (NOT #BAD-BATCH-PHASE)
  RESET NT-V
END-IF
*
FOR #I1 1 TO 15
  ADD 1 TO #ITT
  MOVE #TT-ID-NO     (#ITT) TO NOTE-ID-NUMBER (#I1)
  MOVE #TT-EFF-DT    (#ITT) TO NOTE-EFF-DT    (#I1)
  MOVE #TT-ISS-DT    (#ITT) TO NOTE-ISS-DT    (#I1)
  MOVE #TT-TRAN-CODE (#ITT) TO NOTE-TRAN-CODE (#I1)
  MOVE #TT-TRAN-AMT  (#ITT) TO NOTE-TRAN-AMT  (#I1)
  MOVE #TT-NAME      (#ITT) TO NOTE-NAME      (#I1)
  MOVE #TT-ADJ       (#ITT) TO NOTE-ADJ       (#I1)
  MOVE #TT-ALP-CODE  (#ITT) TO NOTE-ALP-CODE  (#I1)
  MOVE #TT-AMT-FLAG  (#ITT) TO NOTE-AMT-FLAG  (#I1)
  MOVE #SUFFIX              TO NOTE-SUFFIX    (#I1)    /* PM3
END-FOR
*
MOVE #SCR-BTCH-TOT (#SCR-PAGE-NUM) TO NOTE-BATCH-TOT (16)
MOVE #CALC-ID-NUM TO NT-V.ID-NUMBER
*
IF #FOUND-REC
  UPDATE (0335)
ELSE
  STORE NT-V
END-IF
*
END TRANSACTION
*
END-SUBROUTINE /*(0319)
*
END
