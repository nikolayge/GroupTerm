* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* PGM-ID:  C2D0APIM
*   THIS PROGRAM DOES THE 'IM' COMMAND TO ADD AND UPDATE INTRODUCTORY
*   MEMBERS.
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* PAM  03112005 PM1  Reset display fields for GRANKSXX                 *
* DRW  03172006 DW2  Restrict use of IM                                *
* DRW  08152006 DW3  Add LGM to list if valid IM USERS                 *
* PAM  07242008 PM4  Add MAL to list of valid IM users                 *
* RSE  09082009 RE5  Add members of MODSQUAD team and BMG to list of   *
*                    valid IM users                                    *
* VXT  08/23/2012 vt1     Replaced PAM with VXT                        *
* NGG  20131202 NG1  1M$ policy changes                                *
* vxt  09/15/2014 vt2 /Ticket 3066/ add M.Meese to the group of users  *
* KEC  10/03/2014 KC1 OI-3108 Remove military service restrictions     *
* yf   02/27/2017 yf1 /Ticket 2944/                                    *
************************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX    /* WORK FIELDS FOR GONERCXX - ERROR ROUTINE
LOCAL USING C2D0ALIM
LOCAL
*
1 NT-V VIEW OF A-NOTES
 2 ID-NUMBER
 2 NOTE-DATE  (N8/1)
 2 NOTE-TEXT  (A60/40)
 2 REDEFINE NOTE-TEXT
*
  3 CAPS-CONV-BY-YEAR  (10)    /* 10 past years
   4 CAPS-CONV-BY-ORIGIN (13)  /* 13th is for unknown
    5 CAPS-CONV-ORIG   (N5)
*
  3 CAPS-CONV-BY-MON  (12)    /* 12 last months (jan thru dec)
   4 CAPS-CONV-MON    (N5)
*
  3 ATS-CONV-BY-FU  (5)    /* 5 follow-up (in case there will be 5)
   4 ATS-CONV-FU      (N5)
*
  3 CAPS-AT-M-S (N5)
  3 CAPS-AT-PR-PE-PU (N5)
  3 CAPS-AT-PI-PC (N5)
  3 CAPS-AT-PP (N5)
  3 CAPS-AT-PY (N5)
  3 CAPS-AT-U  (N5)
  3 CAPS-AT-W  (N5)
  3 CAPS-AT-D  (N5)
  3 CAPS-AT-A  (N5)
  3 CAPS-AT-UNUSED-1 (N5)
  3 CAPS-AT-UNUSED-2 (N5)
  3 CAPS-AT-NCO (N5)
  3 CAPS-AT-OFF (N5)
*
  3 CAPS-IM-S  (N5)
  3 CAPS-IM-M  (N5)
  3 CAPS-IM-I  (N5)
  3 CAPS-IM-C  (N5)
  3 CAPS-IM-P  (N5)
  3 CAPS-IM-X  (N5)
  3 CAPS-IM-Y  (N5)
  3 CAPS-IM-Z  (N5)
*
  3 AT-M-S-0FU  (N5)
  3 AT-M-S-1FU  (N5)
  3 AT-M-S-2FU  (N5)
  3 AT-M-S-3FU  (N5)
  3 AT-M-S-4FU  (N5)
  3 AT-P      (N5)
  3 AT-U      (N5)
  3 AT-W      (N5)
  3 AT-A      (N5)
*
1 INTRO-MEMBER-VIEW VIEW OF A-INTRO-MEMBER
 2 ID-NUMBER      (N6)
 2 INS-ONLY       (A1)
 2 CAP-IND        (A1)
 2 RANK           (A3)
 2 REMARKS        (A60/4)
 2 NAME           (A25)
 2 ADDRESS-1      (A25)
 2 ADDRESS-2      (A25)
 2 ADDRESS-3      (A25)
 2 S-ADDRESS-1    (A25)
 2 S-ADDRESS-2    (A25)
 2 S-ADDRESS-3    (A25)
 2 HOME-PHONE     (N10)
 2 REDEFINE HOME-PHONE
  3 HOME-PHONE-1  (N3)
  3 HOME-PHONE-2  (N3)
  3 HOME-PHONE-3  (N4)
 2 HOME-PHONE-INTR (A6)
 2 INTERNET-ADDR   (A60)
 2 SEX            (A1)
 2 STATUS         (A1)
 2 MIL-SERVICE    (A3)
 2 APPL-SOURCE    (A6)
 2 INS-PLAN       (A3)
 2 INS-MODE       (A1)
 2 SMOKER-FLAG    (A1)
 2 DTS-DATN       (P9)
 2 DTS-TIMN       (P7)
 2 DATE-STATUS-CHG (N8)
 2 SSN            (N9)
 2 DATE-OF-BIRTH  (N8)
 2 ZIP-CODE       (N9)
 2 S-ZIP-CODE     (N9)
 2 FACE-AMT       (P7.2)
 2 EFF-DATE       (N8)
 2 ISSUE-AGE      (P3)
 2 MODE-PREMIUM   (P5.2)
 2 ANNUAL-PREMIUM (P5.2)
 2 NUMBER-MBRSHIPS (P1)
 2 FIRST-PLACE-FEE-PAID (P7.2)
 2 PAID-THRU-DATE  (N8)
 2 REDEFINE PAID-THRU-DATE
  3 PAID-THRU-DATE-YYYY (N4)
  3 PAID-THRU-DATE-MMDD (N4)
  3 REDEFINE PAID-THRU-DATE-MMDD
   4 PAID-THRU-DATE-MM  (N2)
   4 PAID-THRU-DATE-DD  (N2)
 2 DATE-ADDED      (N8)
 2 DATE-LAST-UPDATE (N8)
 2 CAP-LOAN-AMT     (N5.2)
 2 ALLOT-STRT-AMT   (N3.2)
 2 ORIGIN           (A4)
 2 CAP-LST-ACTION-CHG (N8)
 2 ACTION-FLAG        (A1)
 2 VA-CALC-TYPE       (A1)
*
1 IM-T01 VIEW OF TERMINALS
  2 TERMINAL-ID     (A8)
  2 COMMENTS        (A20)
  2 REDEFINE COMMENTS
    3 LAST-YN       (N6)
*
1 HIST-SSN VIEW OF INTRO-MEMBER
  2 SSN
*
1 HIST-ST-SSN VIEW OF A-STATUS
  2 SSN
*
1 HIST-AT-SSN VIEW OF A-APPL-TRACKING
  2 SSN
*
* ACCOUNTING TXN VIEW
*
1 ACCTTXN VIEW OF A-ACCOUNTING-REGISTER
  2 ID-NUMBER
  2 TRANSACTION-DATN
  2 TRANSACTION-TIMN
  2 TXN-CODE
  2 NAME
  2 DEBIT-AMOUNT
  2 CREDIT-AMOUNT
  2 DESCRIPTION
  2 MESSAGE-CODE
  2 AALP-FLAG
  2 CLERK-ID
  2 TERMINAL-ID
*
1 #DIVIDEND   (N5.4)
1 REDEFINE #DIVIDEND
 2 #DIV-5    (N5)
 2 #REM      (N4)
*
1 #SCR-CV    (C)
1 #HOME-PHONE-INTR-CV  (C)
1 #REQ-PEND  (A19) INIT <'Required if Pending'>
1 #FACE-AMOUNT (N7.2)
1 #PREM-6-2    (N7.2)    /* NG1
1 #OLD-STATUS    (A1)
1 #OLD-MIL-SERV  (A3)
1 #OLD-APPL-SOURCE (A7)
1 #OLD-CAP-IND     (A1)
1 #IMS-OLD       (I2)
1 #IMS-NEW       (I2)
1 #IP-ISN        (P8)
*
1 #SCN-DEL-MSG1  (A34)
1 #SCN-DEL-MSG2  (A34)
1 #SCN-DEL-FLAG1  (A1)
1 #SCN-DEL-FLAG2  (A1)
1 #SDM1-CV   (C)
1 #SDM2-CV   (C)
1 #SDF1-CV   (C)
1 #SDF2-CV   (C)
1 #MODE-CV   (C)
1 #SCR-ID-NUMBER      (N6)
1 #SCR-NAME           (A25)
1 #SCR-RANK           (A3)    INIT <'CDT'>
1 #SCR-SSN            (N9)
1 #SCR-SEX            (A1)
1 #SCR-CAP-LST-ACT-CHG (A8)
1 #SCR-MODE           (A1)    INIT <'N'>
*
1 #SCR-ADD-DATE     (A8)
1 REDEFINE #SCR-ADD-DATE
  2 #SCR-ADD-DATE-N (N8)
*
1 #SCR-DOB          (A8)
1 REDEFINE #SCR-DOB
  2 #SCR-DOB-MM     (A2)
  2 #SCR-DOB-DD     (A2)
  2 #SCR-DOB-YYYY   (A4)
*
1 #DOB-YYYYMMDD       (N8)
1 REDEFINE #DOB-YYYYMMDD
  2 #DOB-YYYYMMDD-A   (A8)
1 REDEFINE #DOB-YYYYMMDD
 2 #DOB-YYYY          (N4)
*
1 #SCR-EFF-DATE       (A8)
1 REDEFINE #SCR-EFF-DATE
  2 #SCR-EFF-MMDD     (A4)
  2 #SCR-EFF-YYYY     (A4)
*
1 #EFF-YYYYMMDD       (N8)
*
1 #SCR-FPF-END        (A8)
1 REDEFINE #SCR-FPF-END
  2 #SCR-FPF-END-MMDD     (A4)
  2 #SCR-FPF-END-YYYY     (A4)
  2 REDEFINE #SCR-FPF-END-YYYY
   3 #SCR-FPF-END-YYYY-N  (N4)
*
1 #FPF-END-YYYYMMDD       (N8)
*
1 #SCR-SMOKER         (A1)    INIT <'N'>
1 #SCR-MIL-SERVICE    (A3)    INIT <'A  '>
1 #SCR-STATUS         (A1)    INIT <'I'>
1 #SCR-ADDR1          (A25)
1 #SCR-ADDR2          (A25)
1 #SCR-ADDR3          (A25)
1 #SCR-ZIP1           (N5)
1 #SCR-ZIP2           (N4)
1 #SCR-S-ADDR1        (A25)
1 #SCR-S-ADDR2        (A25)
1 #SCR-S-ADDR3        (A25)
1 #SCR-S-ZIP1         (N5)    INIT <00000>
1 #SCR-S-ZIP2         (N4)    INIT <0000>
*
1 #SCR-AGE            (N2)
1 #SCR-APREM          (N5.2)
1 #SCR-MPREM          (N5.2)
1 #SCR-MEMBSHIP       (N1)    INIT <1>
*
1 #TEXT   (A78)
1 #EDIT-ERROR         (L)
1 #EDIT-FLAG          (A1)
*
1 #ADD-DATE-HOLD      (N8)
*
1 #YYYYMMDD           (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY             (N4)
  2 #MM               (N2)
  2 #DD               (N2)
*
1 #WYYYYMMDD
  2 #WYYYY            (N4)
  2 #WMM              (N2)
  2 #WDD              (N2)
1 REDEFINE #WYYYYMMDD
  2 #WYYYYMMDD-N      (N8)
*
1 #WMMDDYYYY
  2 #WMM              (N2)
  2 #WDD              (N2)
  2 #WYYYY            (N4)
1 REDEFINE #WMMDDYYYY
  2 #WMMDDYYYY-A      (A8)
*
1 #W-MPREM            (P5.2)
1 #W-APREM            (P5.2)
1 #W-GRAD-YEAR        (P5)
1 #W-MEMB             (P1)
1 #W-ISSUE-AGE        (P3)
*
1 #HOLD-SSN           (N9)
1 #HOLD-ADDRESS       (A25)
1 REDEFINE #HOLD-ADDRESS
  2 #HOLD-ADDR-A      (A7)
  2 #HOLD-ADDR-B      (A4)
  2 #HOLD-ADDR-C      (A14)
*
1 #HOLD-ZIP           (N9)
1 REDEFINE #HOLD-ZIP
  2 #HOLD-ZIP1        (N5)
  2 #HOLD-ZIP2        (N4)
*
1 #HOLD-ID-NBR        (N9)
1 REDEFINE #HOLD-ID-NBR
  2 #HOLD-ID-PREFIX   (N2)
  2 #HOLD-ID-NUM      (N6)
  2 #HOLD-ID-FILLER   (N1)
*
1 #HOLD-STATUS        (A1)
1 #HOLD-SCR-ID        (N6)
1 #INVALID            (L)
1 #RANK-DISPL         (P2)
1 #RANK-LIT           (A23)
1 #RANK-DISPLAY       (A5)
1 #ERR-MSG            (A60)
1 #HOLD-PLAN          (A3)
1 #HOLD-PLAN-PASS     (A3)
1 #HOLD-OLD-NUMBER    (N1)
1 #HOLD-NEW-NUMBER    (N1)
1 #HOLD-ID            (N9)
*
1 #DATG         (A15)    /* 'DDMONTHNAMEYYYY'
1 REDEFINE #DATG
  2 #DUE-DAY    (N2)
  2 #DUE-MON1   (A3)
  2 #DUE-MON2   (A6)
  2 #DUE-YEAR   (A4)
*
1 #CURR-IM-YYYY  (N4)
*
1 #CURR-DATE    (N8)
1 REDEFINE #CURR-DATE
  2 #CURR-YYYY        (N4)
  2 #CURR-MMDD        (N4)
  2 REDEFINE #CURR-MMDD
   3 #CURR-MM         (N2)
   3 #CURR-DD         (N2)
*
1 #FIRST-TIME          (L) INIT <TRUE>
1 #SA-X    (I4)
*
1 #REAL-TRIP-YY     (N2)
1 #REAL-TRIP-NUM    (N3)
1 #OLD-ACTION-FLAG  (A1)
1 #HOLD-SOURCE-CODE    (A6)
1 REDEFINE #HOLD-SOURCE-CODE
 2 #HSC-T           (A1)
 2 #HSC-999         (N3)
 2 #HSC-YY          (N2)
*
END-DEFINE
*****************
INCLUDE GONERCXX
*****************
*
IF NOT #CGA-CLERK = 'DRW' OR = 'VXT' OR = 'EAC'              /* DW2  /* vt1
     OR = 'GME' OR = 'CEB' OR = 'ACN' OR = 'EH' OR = 'LGM'   /* DW3
     or = 'MJM' OR = 'AJT' OR = 'AJK' OR = 'PNP'             /* vt2  /* KC1
     OR = 'AIO' OR = 'KEC' OR = 'JC' OR = 'BZ'       /* RE5  /* KC1  /* vt removed 'SV'
     or = 'JNT'                                              /* vt3 per Jacob's request
     OR = 'GMS'                                              /* yf1
*     OR = 'MK' OR = 'BMG' OR = 'ALB' OR = 'KEC'             /* RE5
*     OR = 'MAL'                                             /* PM4
  INPUT TEXT 'Only Selected Users Have access to "IM"'
      USING MAP 'G1000MXX'
  FETCH 'G1000PXX'
END-IF
*
MOVE *DATN TO #CURR-DATE
MOVE #CURR-MM TO #SA-X
*
IF #CURR-MMDD GE 0901
  COMPUTE #CURR-IM-YYYY = #CURR-YYYY + 1
ELSE
  MOVE #CURR-YYYY TO #CURR-IM-YYYY
END-IF
*
IF   (#CGA-SCR-SUFFIX = 'INT') OR (HOME-PHONE-INTR NE ' ')
  IGNORE
ELSE
  MOVE (AD=NP) TO #HOME-PHONE-INTR-CV
END-IF
*
MOVE (AD=P) TO #MODE-CV
*
IF #CGA-SCR-ID > 0
  GET INTRO-MEMBER-VIEW #CGA-ISN
  MOVE #CGA-SCR-ID       TO #CGA-ORIG-ID
  MOVE STATUS            TO #OLD-STATUS
  MOVE MIL-SERVICE       TO #OLD-MIL-SERV
  MOVE APPL-SOURCE       TO #OLD-APPL-SOURCE
  MOVE CAP-IND           TO #OLD-CAP-IND
  MOVE ACTION-FLAG       TO #OLD-ACTION-FLAG
*
* IF   (APPL-SOURCE = MASK ('CAP'))
  IF   (CAP-IND = 'Y')
   AND (CAP-LOAN-AMT = 0)
    MOVE 5000 TO CAP-LOAN-AMT
  END-IF
*
  PERFORM BUILD-UPDATE-SCREEN
*
  IF #CGA-CLERK = 'LCM' OR = 'EAC' OR = 'DRW' OR = 'JAK'
    RESET #MODE-CV
  END-IF
ELSE
  PERFORM BUILD-ADD-SCREEN
END-IF
*
IF VA-CALC-TYPE = 'Y'
  COMPRESS #TEXT '* Loan to go AFB' INTO #TEXT
END-IF
*
IF VA-CALC-TYPE = 'F'
  COMPRESS #TEXT '* Loan to go AAB' INTO #TEXT
END-IF
*
IF INS-ONLY = 'I'
  COMPRESS 'INS-ONLY Mbr' #TEXT INTO #TEXT
END-IF
*
MOVE '* ' TO #CGA-SCR-COMMAND
MOVE #CGA-SCR-ID TO #HOLD-ID
INPUT TEXT #TEXT MARK *#SCR-NAME USING MAP 'C2D0AMIM'
*
IF   (#CGA-SCR-COMMAND = '*')
 AND (#CGA-SCR-ID = #HOLD-ID)
  IGNORE
ELSE
  FETCH 'G1000PXX'
END-IF
*
IF #SCN-DEL-FLAG1 = 'Y'
  MOVE 'IF YOU ARE SURE, ENTER A "Y" -' TO #SCN-DEL-MSG2
  MOVE (AD=D) TO #SDF2-CV
  MOVE (AD=P) TO #SDF1-CV
  INPUT MARK *#SCN-DEL-FLAG2 USING MAP 'C2D0AMIM'
*
  IF #SCN-DEL-FLAG2 = 'Y'
    DELETE (0383)
    END TRANSACTION
    MOVE 'IM' TO #CGA-SCR-COMMAND
    INPUT WITH TEXT 'RECORD DELETED' MARK *#CGA-SCR-COMMAND
       USING MAP 'C2D0AMIM'
    FETCH 'G1000PXX'
  END-IF
ELSE
  IF #SCN-DEL-FLAG1 = 'N' OR = ' '
     IGNORE
  ELSE
    REINPUT 'INVALID FLAG MUST BE Y,N OR BLANK'
    MARK *#SCN-DEL-FLAG1
  END-IF
END-IF
*
PERFORM EDIT-FIELDS
PERFORM CALCULATE-FIELDS
*
IF  (#CGA-SCR-ID = 0)
 AND #FIRST-TIME
  RESET #FIRST-TIME
  REINPUT 'PRESS ENTER AFTER CHECKING DATE OF BIRTH TO COMPLETE TX'
  MARK *#SCR-DOB
END-IF
PERFORM UPDATE-RECORD
*
IF #CGA-SCR-ID = 0
  MOVE 'IC' TO #CGA-SCR-COMMAND
  MOVE INTRO-MEMBER-VIEW.ID-NUMBER TO #CGA-SCR-ID
ELSE
  MOVE 'IM' TO #CGA-SCR-COMMAND
END-IF
*
MOVE 'Trans Complete' TO #TEXT
IF VA-CALC-TYPE = 'Y'
  COMPRESS #TEXT '* Loan to go AFB' INTO #TEXT
ELSE
  IF VA-CALC-TYPE = 'F'
    COMPRESS #TEXT '* Loan to go AAB' INTO #TEXT
  ELSE
    IF (#OLD-ACTION-FLAG = 'M') AND (ACTION-FLAG = 'I')
      COMPRESS #TEXT '* Check AFB Flag' INTO #TEXT
    END-IF
  END-IF
END-IF
*
MOVE (AD=P) TO #SCR-CV #MODE-CV
MOVE (AD=P) TO #HOME-PHONE-INTR-CV
MOVE (AD=P) TO #SDF1-CV #SDF2-CV
*
INPUT TEXT #TEXT USING MAP 'C2D0AMIM'
*
FETCH 'G1000PXX'
*
**************************************
DEFINE SUBROUTINE BUILD-UPDATE-SCREEN
**************************************
*
MOVE #CGA-SCR-ID    TO #HOLD-SCR-ID
MOVE *DATN          TO INTRO-MEMBER-VIEW.DATE-LAST-UPDATE
MOVE ID-NUMBER      TO #SCR-ID-NUMBER
MOVE NAME           TO #SCR-NAME
MOVE RANK           TO #SCR-RANK
MOVE INTRO-MEMBER-VIEW.SSN TO #SCR-SSN
MOVE INTRO-MEMBER-VIEW.SSN TO #HOLD-SSN
MOVE SEX            TO #SCR-SEX
MOVE INS-MODE       TO #SCR-MODE
MOVE STATUS         TO #SCR-STATUS
MOVE STATUS         TO #HOLD-STATUS
MOVE SMOKER-FLAG    TO #SCR-SMOKER
MOVE MIL-SERVICE    TO #SCR-MIL-SERVICE
MOVE ADDRESS-1      TO #SCR-ADDR1
MOVE ADDRESS-2      TO #SCR-ADDR2
MOVE ADDRESS-3      TO #SCR-ADDR3
MOVE ZIP-CODE       TO #HOLD-ZIP
MOVE #HOLD-ZIP1     TO #SCR-ZIP1
MOVE #HOLD-ZIP2     TO #SCR-ZIP2
MOVE S-ZIP-CODE     TO #HOLD-ZIP
MOVE #HOLD-ZIP1     TO #SCR-S-ZIP1
MOVE #HOLD-ZIP2     TO #SCR-S-ZIP2
MOVE S-ADDRESS-1    TO #SCR-S-ADDR1
MOVE S-ADDRESS-2    TO #SCR-S-ADDR2
MOVE S-ADDRESS-3    TO #SCR-S-ADDR3
*
MOVE DATE-ADDED     TO #ADD-DATE-HOLD
MOVE DATE-ADDED     TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYYYY-A   TO #SCR-ADD-DATE
*
MOVE ID-NUMBER      TO #CGA-SCR-ID
*
MOVE DATE-OF-BIRTH  TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYYYY-A     TO #SCR-DOB
*
MOVE EFF-DATE       TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYYYY-A   TO #SCR-EFF-DATE
*
MOVE PAID-THRU-DATE TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYYYY-A   TO #SCR-FPF-END
*
MOVE CAP-LST-ACTION-CHG TO #WYYYYMMDD-N
PERFORM FLIP-DATE
MOVE #WMMDDYYYY-A TO #SCR-CAP-LST-ACT-CHG
*
MOVE 'ENTER "Y" TO DELETE THIS RECORD-' TO #SCN-DEL-MSG1
MOVE (AD=P) TO #SDF2-CV
*
END-SUBROUTINE
*
**********************************
DEFINE SUBROUTINE BUILD-ADD-SCREEN
**********************************
*
MOVE EDITED *DATX (EM=MMDDYYYY) TO #SCR-ADD-DATE
MOVE *DATN        TO #ADD-DATE-HOLD
MOVE #CGA-ORIG-ID TO #HOLD-SCR-ID
*
MOVE '0901' TO #SCR-EFF-MMDD
IF #CURR-MM LE 8
  COMPUTE #SCR-EFF-YYYY = #CURR-YYYY - 1
ELSE
  MOVE #CURR-YYYY TO #SCR-EFF-YYYY
END-IF
*
MOVE #SCR-EFF-DATE TO #SCR-FPF-END
ADD 1 TO #SCR-FPF-END-YYYY-N
MOVE '0831' TO #SCR-FPF-END-MMDD
*
MOVE (AD=P) TO #SDM1-CV
               #SDM2-CV
               #SDF1-CV
               #SDF2-CV
*
END-SUBROUTINE
*****************************
DEFINE SUBROUTINE EDIT-FIELDS
*****************************
*
MOVE 'N' TO #EDIT-FLAG
IF #SCR-NAME NE ' '
  CALLNAT 'GNAMESXX' #SCR-NAME #EDIT-FLAG
  IF #EDIT-FLAG = 'N'
    REINPUT 'Invalid NAME'
    MARK *#SCR-NAME
  END-IF
ELSE
  REINPUT 'Name is required'
  MARK *#SCR-NAME
END-IF
*
IF #SCR-STATUS = 'I'
  MOVE 'N' TO #EDIT-FLAG
  RESET #RANK-DISPL #RANK-LIT #RANK-DISPLAY                       /* PM1
  CALLNAT 'GRANKSXX' #CGA-ORIG-COMMAND #SCR-RANK #SCR-MIL-SERVICE
         #INVALID #RANK-DISPL #RANK-LIT #RANK-DISPLAY
  IF #INVALID
    REINPUT USING HELP
    MARK *#SCR-RANK
  END-IF
ELSE
  IF #SCR-STATUS = 'O'
    IF #SCR-RANK = 'OC' OR = 'OT' OR = 'WOC'
      IGNORE
    ELSE
      REINPUT 'Rank must ne "OC" or "OT" or "WOC" if Status is "O"'
        MARK *#SCR-RANK
    END-IF
  ELSE
    REINPUT 'Status must be "I" or "O"'
        MARK *#SCR-STATUS
  END-IF
END-IF
*
IF #SCR-SSN NE 0
  IF #HOLD-SSN NE #SCR-SSN
    PERFORM FIND-SSN
  END-IF
ELSE
  REINPUT 'SSN is required'
  MARK *#SCR-SSN
END-IF
*
IF #SCR-SEX NE 'F' AND #SCR-SEX NE 'M'
  REINPUT 'Invalid sex'
  MARK *#SCR-SEX
ELSE
  IF #SCR-SEX = 'F' AND #SCR-RANK = 'MR '
    REINPUT 'Sex and rank do not match'
    MARK *#SCR-SEX
  ELSE
    IF #SCR-SEX = 'M'
      IF #SCR-RANK = 'MIS' OR #SCR-RANK = 'MRS' OR #SCR-RANK = 'MS '
        REINPUT WITH 'Sex and rank do not maych'
                MARK *#SCR-SEX
      END-IF
    END-IF
  END-IF
END-IF
*
IF #SCR-DOB NE ' '
  IF #SCR-DOB NE MASK(MMDDYYYY)
    REINPUT WITH 'Format is MMDDYYYY'
    MARK *#SCR-DOB
  END-IF
*
  MOVE #SCR-DOB TO #WMMDDYYYY-A
  PERFORM FLIP-DATE-TO-YYYYMMDD
  MOVE #WYYYYMMDD-N TO #DOB-YYYYMMDD
*
  IF #DOB-YYYYMMDD > *DATN
    REINPUT 'Date of birth greater than today'
    MARK *#SCR-DOB
  END-IF
*
  COMPUTE #YYYYMMDD = #DOB-YYYYMMDD + 600000
*
  IF #YYYYMMDD < #CURR-DATE
     REINPUT 'Older than 60 years'
     MARK *#SCR-DOB
  END-IF
END-IF
*
IF #SCR-EFF-DATE EQ ' '
  REINPUT 'Effective date required'
  MARK *#SCR-EFF-DATE
END-IF
*
IF #SCR-EFF-DATE NE MASK(MMDDYYYY)
  REINPUT 'Format is MMDDYYYY'
  MARK *#SCR-EFF-DATE
END-IF
*
MOVE #SCR-EFF-DATE TO #WMMDDYYYY-A
PERFORM FLIP-DATE-TO-YYYYMMDD
MOVE #WYYYYMMDD-N TO #EFF-YYYYMMDD
*
MOVE #CURR-DATE TO #YYYYMMDD
MOVE 1 TO #DD
ADD 1 TO #MM
*
IF #MM = 13
  MOVE 01 TO #MM
  ADD 1 TO #YYYY
END-IF
*
IF #EFF-YYYYMMDD > #YYYYMMDD
   REINPUT 'Eff date after 1st of next month'
   MARK *#SCR-EFF-DATE
END-IF
*
IF NOT INS-ONLY = 'I' OR = 'C' OR = 'P'
  REINPUT 'Must be "C" for Combo or "I" for Ins-Plus'
  MARK *INS-ONLY
END-IF
*
IF NOT CAP-IND = 'Y' OR = ' '
  REINPUT 'cap-ind must be "Y" or " "'
  MARK *CAP-IND
END-IF
*
IF #SCR-MODE = 'N' OR = 'G' OR = 'A' OR = 'Q' OR = 'S' OR = 'D'
  IGNORE
ELSE
  REINPUT WITH 'MODE MUST BE N, G, A, S, D OR Q'
  MARK *#SCR-MODE
END-IF
*
IF (NOT #SCR-MODE = 'N' OR = 'G')
 AND FIRST-PLACE-FEE-PAID = 0
 AND (PAID-THRU-DATE-YYYY GE #CURR-IM-YYYY) /* NOT CONVERTED YET
  REINPUT 'A/S/Q MODE CANNOT BE ENTERED BEFORE "YM" SCREEN'
  MARK *#SCR-MODE
END-IF
*
IF #SCR-FPF-END = ' '
  REINPUT 'Expire Date is required'
  MARK *#SCR-FPF-END
END-IF
*
IF #SCR-FPF-END NE MASK(MMDDYYYY)
  REINPUT 'Format is MMDDYYYY'
  MARK *#SCR-FPF-END
END-IF
*
MOVE #SCR-FPF-END TO #WMMDDYYYY-A
PERFORM FLIP-DATE-TO-YYYYMMDD
MOVE #WYYYYMMDD-N TO #FPF-END-YYYYMMDD
*
IF   (#SCR-STATUS = 'I')
 AND (#SCR-FPF-END-MMDD NE '0831')
  REINPUT 'Expire date must be 0831XXXX'
  MARK *#SCR-FPF-END
END-IF
*
IF #SCR-FPF-END-YYYY-N = #CURR-YYYY OR = #CURR-IM-YYYY
  OR = #CURR-IM-YYYY + 4
  OR = #CURR-IM-YYYY + 3
  OR = #CURR-IM-YYYY + 1 OR = #CURR-IM-YYYY + 2 OR = 00
  OR = #CURR-IM-YYYY - 1             /* TO HANDLE PREV INTROS
  IGNORE
ELSE
  REINPUT 'Expire date must be within current and curr + 5 yrs'
  MARK *#SCR-FPF-END
END-IF
*
MOVE #SCR-ADDR1 TO #HOLD-ADDRESS
IF #HOLD-ADDR-B EQ 'XXXX'
  REINPUT 'Invalid address 1'
  MARK *#SCR-ADDR1
END-IF
*
IF NOT #SCR-SMOKER = 'N' OR = 'S'
  REINPUT 'Smoker flag must be N or S'
  MARK *#SCR-SMOKER
END-IF
*
 IF #SCR-STATUS = 'I'                                                /* KC1 \/
   IF NOT #SCR-MIL-SERVICE = 'AC' OR = 'ACR' OR = 'FC' OR = 'FCR' OR = 'NC' OR = 'NCR' OR = 'CG' OR = 'CC' OR = 'MMA'
     REINPUT 'Mil service must be cadet'
        MARK *#SCR-MIL-SERVICE
   END-IF
* ELSE
*   IF NOT #SCR-MIL-SERVICE = 'A' OR = 'F' OR = 'M' OR = 'N' OR = 'CG'
*     REINPUT 'Mil service must be A or F when status is "O"'
*     MARK *#SCR-MIL-SERVICE
*   END-IF                                                            /* KC1 /\
 END-IF
*
IF   (CAP-IND = 'Y')
 AND (APPL-SOURCE = ' ')
  REINPUT 'Appl Source required for "CAP" members'
  MARK *APPL-SOURCE
END-IF
*
IF APPL-SOURCE NE ' ' /* THIS IF WILL REMAIN UNTIL ??/?? WHEN ALL WILL
  MOVE APPL-SOURCE TO #HOLD-SOURCE-CODE
  FIND (1) SA-V WITH SOURCE-CODE = APPL-SOURCE
    IF NO RECORD FOUND
      IF #HSC-999 = MASK (NNN)
        COMPUTE #REAL-TRIP-NUM = 999 - #HSC-999
        MOVE #REAL-TRIP-NUM TO #HSC-999
*       COMPUTE #REAL-TRIP-YY  = 99  - #HSC-YY
        IF #HSC-YY GE 50
           COMPUTE #REAL-TRIP-YY = 149 - #HSC-YY
        ELSE
           COMPUTE #REAL-TRIP-YY = 49 - #HSC-YY
        END-IF
        MOVE #REAL-TRIP-YY  TO #HSC-YY
      END-IF
    END-NOREC
  END-FIND
*
  FIND (1) SA-V WITH SOURCE-CODE = #HOLD-SOURCE-CODE
    IF NO RECORD FOUND
       REINPUT 'Source code not found'
      MARK *APPL-SOURCE
    END-NOREC
  END-FIND
END-IF
*
IF NOT CAP-LOAN-AMT = 0 OR = 1000 OR = 2000 OR = 2500 OR = 3000
                    OR = 4000 OR = 5000
  REINPUT 'Loan Amount must be $1k/2k/2.5k/3k/4k/5k'
  MARK *CAP-LOAN-AMT
END-IF
*
IF ORIGIN NE ' '
  CALLNAT 'GORIGSXX' ORIGIN #INVALID
*
  IF #INVALID
    REINPUT USING HELP
    MARK *ORIGIN
  END-IF
END-IF
*
* IF APPL-SOURCE = MASK ('CAP')
IF CAP-IND = 'Y'
  IF ACTION-FLAG = 'I' OR = 'C' OR = 'P' OR = 'X' OR = 'Y' OR = 'Z'
    IF NOT INS-PLAN = 'OL' OR = '30' OR = '20' OR = '7P'
                       OR = 'LT' OR = 'RT' OR = 'SP'
      REINPUT 'Plan must be OL/30/20/7P/LT/RT/SP'
      MARK *INS-PLAN
    END-IF
*
    COMPUTE #DIVIDEND = FACE-AMT / 5000
    IF (#REM NE 0) OR (FACE-AMT GT 300000) OR (FACE-AMT LT 10000)
      REINPUT 'Invalid Face Amount'
      MARK *FACE-AMT
    END-IF
  END-IF
*
  IF NOT VA-CALC-TYPE = 'Y' OR = 'F' OR = ' '
    REINPUT USING HELP
    MARK *VA-CALC-TYPE
  END-IF
*
  IF (NOT ACTION-FLAG = 'S' OR = 'M' OR = 'I' OR = 'C' OR = 'P'
              OR = 'X' OR = 'Y' OR = 'Z')
    REINPUT USING HELP
    MARK *ACTION-FLAG
  END-IF
*
  IF (#SCR-ADDR1 = ' ') OR (#SCR-ADDR2 = ' ')
    REINPUT 'Required for Don"s Labels'
    MARK *#SCR-ADDR1
  END-IF
*
  IF (ACTION-FLAG = 'P' OR = 'X' OR = 'Y' OR = 'Z')
    IF CAP-LOAN-AMT = 0
      REINPUT #REQ-PEND
      MARK *CAP-LOAN-AMT
    END-IF
*
    IF ALLOT-STRT-AMT = 0
      REINPUT #REQ-PEND
      MARK *ALLOT-STRT-AMT
    END-IF
*
    IF ORIGIN = ' '
      REINPUT #REQ-PEND
      MARK *ORIGIN
    END-IF
  END-IF
ELSE
  IF ACTION-FLAG = 'S' OR = 'M' OR = 'I' OR = 'C' OR = 'P'
              OR = 'X' OR = 'Y' OR = 'Z'
    REINPUT 'Must be CAP for this action flag'
    MARK *ACTION-FLAG
  END-IF
END-IF
*
IF   (ACTION-FLAG NE #OLD-ACTION-FLAG)
 AND (ACTION-FLAG = 'X' OR = 'Y' OR = 'Z')
  IF NOT #OLD-ACTION-FLAG = 'P' OR = 'X' OR = 'Y' OR = 'Z'
    REINPUT 'Action flag must be "P" to become "X/Y/Z"'
    MARK *ACTION-FLAG
  END-IF
*
  IF   (ACTION-FLAG = 'X' OR = 'Y' OR = 'Z')
   AND (INS-PLAN = 'SP')
    REINPUT 'X/Y/Z invalid on SP - convert manually'
    MARK *ACTION-FLAG
  END-IF
END-IF
*
END-SUBROUTINE
*
**********************************
DEFINE SUBROUTINE CALCULATE-FIELDS
**********************************
*
IF #SCR-DOB = ' '
  ESCAPE ROUTINE
END-IF
*
MOVE #FPF-END-YYYYMMDD TO #YYYYMMDD
IF #SCR-STATUS = 'I'
  MOVE 09 TO #MM
  MOVE 01 TO #DD
END-IF
*
SUBTRACT #DOB-YYYYMMDD FROM #YYYYMMDD
MOVE #YYYY TO #SCR-AGE
*
IF   (#EFF-YYYYMMDD GE 19970101)
 AND (#SCR-SEX = 'F')
  SUBTRACT 3 FROM #SCR-AGE
END-IF
*
MOVE ANNUAL-PREMIUM TO #SCR-APREM
*
IF #SCR-AGE < 12 OR #SCR-AGE > 66
  REINPUT 'Calc age not within limits'
  MARK *#SCR-DOB
ELSE
  MOVE INS-PLAN TO #HOLD-PLAN-PASS
  MOVE FACE-AMT TO #FACE-AMOUNT
  MOVE #SCR-APREM    TO #PREM-6-2
  CALLNAT 'GPREMSXX' #CGA-SCR-COMMAND #CGA-SCR-ID #CGA-SCR-SUFFIX
                  #HOLD-PLAN-PASS #SCR-AGE #PREM-6-2 #EFF-YYYYMMDD
                  #SCR-SMOKER #FACE-AMOUNT #SCR-SEX
  MOVE #PREM-6-2 TO #SCR-APREM
END-IF
*
IF #SCR-MODE = 'A'
  MOVE #SCR-APREM TO #SCR-MPREM
ELSE
  IF #SCR-MODE = 'S'
    COMPUTE #SCR-MPREM = #SCR-APREM / 2
  ELSE
    IF #SCR-MODE = 'Q'
      COMPUTE #SCR-MPREM = #SCR-APREM / 4
    ELSE
      COMPUTE #SCR-MPREM = #SCR-APREM / 12
    END-IF
  END-IF
END-IF
*
END-SUBROUTINE   /* (0912)
*
*******************************
DEFINE SUBROUTINE UPDATE-RECORD
*******************************
*
MOVE #ADD-DATE-HOLD    TO INTRO-MEMBER-VIEW.DATE-ADDED
MOVE *DATN             TO INTRO-MEMBER-VIEW.DATE-LAST-UPDATE
MOVE #SCR-NAME         TO INTRO-MEMBER-VIEW.NAME
MOVE #SCR-RANK         TO INTRO-MEMBER-VIEW.RANK
MOVE #SCR-SSN          TO INTRO-MEMBER-VIEW.SSN
MOVE #SCR-SEX          TO INTRO-MEMBER-VIEW.SEX
MOVE #DOB-YYYYMMDD     TO INTRO-MEMBER-VIEW.DATE-OF-BIRTH
MOVE #EFF-YYYYMMDD     TO INTRO-MEMBER-VIEW.EFF-DATE
MOVE #FPF-END-YYYYMMDD TO INTRO-MEMBER-VIEW.PAID-THRU-DATE
MOVE #SCR-MODE         TO INTRO-MEMBER-VIEW.INS-MODE
*
IF #SCR-MODE = 'N'
  RESET INTRO-MEMBER-VIEW.FIRST-PLACE-FEE-PAID
END-IF
*
MOVE #SCR-ADDR1        TO INTRO-MEMBER-VIEW.ADDRESS-1
MOVE #SCR-ADDR2        TO INTRO-MEMBER-VIEW.ADDRESS-2
MOVE #SCR-ADDR3        TO INTRO-MEMBER-VIEW.ADDRESS-3
MOVE #SCR-ZIP1         TO #HOLD-ZIP1
MOVE #SCR-ZIP2         TO #HOLD-ZIP2
MOVE #HOLD-ZIP         TO INTRO-MEMBER-VIEW.ZIP-CODE
MOVE #SCR-S-ADDR1      TO INTRO-MEMBER-VIEW.S-ADDRESS-1
MOVE #SCR-S-ADDR2      TO INTRO-MEMBER-VIEW.S-ADDRESS-2
MOVE #SCR-S-ADDR3      TO INTRO-MEMBER-VIEW.S-ADDRESS-3
MOVE #SCR-S-ZIP1       TO #HOLD-ZIP1
MOVE #SCR-S-ZIP2       TO #HOLD-ZIP2
MOVE #HOLD-ZIP         TO INTRO-MEMBER-VIEW.S-ZIP-CODE
MOVE #SCR-SMOKER       TO INTRO-MEMBER-VIEW.SMOKER-FLAG
MOVE #SCR-MIL-SERVICE  TO INTRO-MEMBER-VIEW.MIL-SERVICE
MOVE #SCR-STATUS       TO INTRO-MEMBER-VIEW.STATUS
*
IF #SCR-STATUS = #HOLD-STATUS
  MOVE *DATN TO INTRO-MEMBER-VIEW.DATE-STATUS-CHG
END-IF
*
RESET #HOLD-STATUS
MOVE #SCR-AGE          TO INTRO-MEMBER-VIEW.ISSUE-AGE
MOVE #SCR-MPREM        TO #W-MPREM
MOVE #W-MPREM          TO INTRO-MEMBER-VIEW.MODE-PREMIUM
MOVE #SCR-APREM        TO #W-APREM
MOVE #W-APREM          TO INTRO-MEMBER-VIEW.ANNUAL-PREMIUM
MOVE #SCR-MEMBSHIP     TO INTRO-MEMBER-VIEW.NUMBER-MBRSHIPS
*
IF ACTION-FLAG NE #OLD-ACTION-FLAG
  MOVE *DATN TO CAP-LST-ACTION-CHG
END-IF
*
MOVE *DATN  TO INTRO-MEMBER-VIEW.DTS-DATN
MOVE *TIMN  TO INTRO-MEMBER-VIEW.DTS-TIMN
*
IF #CGA-SCR-ID = 0
  FIND (1) IM-T01 WITH TERMINAL-ID = 'YNMASTER'
    MOVE LAST-YN TO #HOLD-SCR-ID
    ADD 1 TO LAST-YN
    UPDATE RECORD (0995)
    MOVE #HOLD-SCR-ID TO INTRO-MEMBER-VIEW.ID-NUMBER
  END-FIND
  STORE INTRO-MEMBER-VIEW
ELSE
  MOVE #SCR-ID-NUMBER TO #HOLD-SCR-ID
  UPDATE RECORD (0383)
END-IF
*
* IF  (APPL-SOURCE = MASK ('CAP'))
* AND (#OLD-APPL-SOURCE NE MASK ('CAP'))
IF  (CAP-IND = 'Y')
 AND (#OLD-CAP-IND NE 'Y')  /* just became a cap member
  FIND (1) SA-V WITH SOURCE-CODE = APPL-SOURCE   /* APPL SOURCE
    IF NO RECORDS FOUND
      WRITE 'CALL EDS - SOA "CAP?" NOT FOUND'
      ESCAPE BOTTOM
    END-NOREC
*
    ADD 1 TO SOURCE-CUR-INQUIRIES (#SA-X)
    UPDATE (1011)
  END-FIND
*
  FIND (1) SA-V WITH SOURCE-CODE = 'EDSM'  /* summary rec
    IF NO RECORDS FOUND
      WRITE 'CALL EDS - group "EDSM" not found'
      ESCAPE BOTTOM
    END-NOREC
*
    ADD 1 TO SOURCE-CUR-INQUIRIES (#SA-X)
    UPDATE (1021)
  END-FIND
END-IF
*
IF   (ACTION-FLAG NE #OLD-ACTION-FLAG)
*  AND (APPL-SOURCE = MASK ('CAP'))
 AND (CAP-IND = 'Y')
  FIND (1) NT-V WITH ID-NUMBER = 800106
    DECIDE ON FIRST VALUE ACTION-FLAG
      VALUE 'S' ADD 1 TO CAPS-IM-S
      VALUE 'M' ADD 1 TO CAPS-IM-M
      VALUE 'I' ADD 1 TO CAPS-IM-I
      VALUE 'C' ADD 1 TO CAPS-IM-C
      VALUE 'P' ADD 1 TO CAPS-IM-P
      VALUE 'X' ADD 1 TO CAPS-IM-X
      VALUE 'Y' ADD 1 TO CAPS-IM-Y
      VALUE 'Z' ADD 1 TO CAPS-IM-Z
      NONE IGNORE
    END-DECIDE
*
    DECIDE ON FIRST VALUE #OLD-ACTION-FLAG
      VALUE 'S' SUBTRACT 1 FROM CAPS-IM-S
      VALUE 'M' SUBTRACT 1 FROM CAPS-IM-M
      VALUE 'I' SUBTRACT 1 FROM CAPS-IM-I
      VALUE 'C' SUBTRACT 1 FROM CAPS-IM-C
      VALUE 'P' SUBTRACT 1 FROM CAPS-IM-P
      VALUE 'X' SUBTRACT 1 FROM CAPS-IM-X
      VALUE 'Y' SUBTRACT 1 FROM CAPS-IM-Y
      VALUE 'Z' SUBTRACT 1 FROM CAPS-IM-Z
      NONE IGNORE
    END-DECIDE
*
    UPDATE (1035)
  END-FIND
END-IF
*
END TRANSACTION
*
END-SUBROUTINE
*
*******************************
DEFINE SUBROUTINE FIND-SSN
*******************************
*
HISTOGRAM HIST-SSN FOR SSN FROM #SCR-SSN THRU #SCR-SSN
  REINPUT 'SSN already on Intro Mbr file'
  MARK *#SCR-SSN
END-HISTOGRAM
*
* below removed as per rlb 10/4/2001 to handle ssn 306-86-3204
* HISTOGRAM HIST-ST-SSN FOR SSN FROM #SCR-SSN THRU #SCR-SSN
*   REINPUT 'SSN already on Status file'
*   MARK *#SCR-SSN
* END-HISTOGRAM
*
* below removed as per rlb 04/4/2003 to handle ssn 534-94-1387
* HISTOGRAM HIST-AT-SSN FOR SSN FROM #SCR-SSN THRU #SCR-SSN
*   REINPUT 'SSN already on Appl Tracking file'
*   MARK *#SCR-SSN
* END-HISTOGRAM
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE FLIP-DATE
* * * * * * * * * * * * * *
*
IF #WYYYYMMDD-N = 0
  RESET #WMMDDYYYY-A
ELSE
  MOVE BY NAME #WYYYYMMDD TO #WMMDDYYYY
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FLIP-DATE-TO-YYYYMMDD
* * * * * * * * * * * * * * * * * * * *
*
IF #WMMDDYYYY-A = ' '
  RESET #WYYYYMMDD
ELSE
  MOVE BY NAME #WMMDDYYYY TO #WYYYYMMDD
END-IF
*
END-SUBROUTINE
*
END
