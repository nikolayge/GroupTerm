* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
************************************************************************
* NAME         : NMOSPADC                                              *
* AUTHOR       : Copyright: Electronic Data Systems - An HP company    *
* DESCRIPTION  : Input EZPay account information for CAP Guard         *
************************************************************************
*                                                                      *
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE        TAG     REASON                                    *
* PAM    09/09/2008  None    Program Written                           *
* DRW    12/10/2008  DW1     Add AT AIP-ADJ to linkage to              *
*                            Function-loan-payment                     *
* PAM    05/14/2010  PM2     Added additional ABA edits                *
* TT     9/20/2013   TT1     Added Act and Routing number verification *
************************************************************************
DEFINE DATA
*
PARAMETER
1 #ID-NUMBER                  (N6)
1 #PAD-ABA-NBR                (A9)
1 REDEFINE #PAD-ABA-NBR
  2 #PAD-ABA-NBR-TBL           (N1.0/1:9)
1 #PAD-ACCT-NUM               (A17)
1 #PAD-CHECK-SAV              (A1)
1 #PAD-CODE                   (A1)
1 #X-ALT-LP-IND               (A1)
1 #X-ALT-LP-AMT               (P5.2)
1 #CAP-LOAN-AMOUNT            (N5.2)
1 #CAP-TERM                   (N2.0)
1 #NAME                       (A25)
1 #CLERK-ID                   (A3)
1 #EZPAY-WAITING              (L)
1 #ALLOT-STRT-AMT             (N3.2)               /* DW1
1 #AI-CALL                    (L)                  /* vt1
*
LOCAL
*
1 #PAD-ABA-NBR-2                (A9) /* Field to verify routing number
1 #PAD-ACCT-NUM-2               (A17)/* Field to verify account number
1 #ACCOUNT-NUM-LENGTH          (I4)
1 #A                           (A)DYNAMIC
1 #COUNT                       (I4)
1 #INPUT                       (A1)
1 TRLOG VIEW OF A-TRANSACTION-REGISTER
  2 ID-NUMBER                  (N6)
  2 PROCESS-IND                (A1)
  2 NAME                       (A25)
  2 DATE-LAST-UPDATE           (N8)
  2 TERMINAL-ID                (A8)
  2 CLERK-ID                   (A3)
  2 TRANSACTION-DATN           (P9)
  2 TRANSACTION-TIMN           (P7)
  2 OLD-DATA                   (A125/32)
  2 NEW-DATA                   (A125/32)
  2 REDEFINE NEW-DATA
    3 NEW-DATA-OCC              (32)
      4 NEW-DATA-AI              (A3)
      4 NEW-DATA-REST            (A22)
  2 SYNC-FLD-NUM               (60)
  2 SYNC-FLD-OLD-DATA          (60)
  2 SYNC-FLD-NEW-DATA          (60)
*
1 #W-OLD-NEW-DATA             (A125)
1 REDEFINE #W-OLD-NEW-DATA
  2 #W-DESCRIPTION             (A12)
  2 #W-DATA                    (A2)
  2 #W-SPACER                  (A3)
  2 #W-DESCRIPTION-1           (A12)
  2 #W-DATA-1                  (A10)
  2 #W-SPACER-1                (A3)
  2 #W-DESCRIPTION-2           (A12)
  2 #W-DATA-2                  (A28)
  2 #S-SPACER-2                (A3)
  2 #W-DESCRIPTION-3           (A12)
  2 #W-DATA-3                  (A2)
  2 #W-DATA-REST               (A3)
1 REDEFINE #W-OLD-NEW-DATA
  2 #TR-L-SALP-LB1             (A12)
  2 #TR-L-SALP-FLG             (A2)
  2 #TR-L-SALP-LB2             (A8)
  2 #TR-L-SALP-AMT             (A9)
  2 #TR-L-SALP-F1              (A94)
*
1 #WORK-FIELDS
  2 #CHK-DIGIT                 (P1)
  2 #DIGIT-SUM                 (N3)
  2 REDEFINE #DIGIT-SUM
    3 #DIG-SUM-2                (N2)
    3 #DIG-SUM-1                (N1)
  2 #DISPLAY-FIELD             (A) DYNAMIC
*
1 #WORK-ABA-NUM               (A9)        /* PM2
1 REDEFINE #WORK-ABA-NUM                  /* PM2
  2 #ABA-NUM-1                 (A1)        /* PM2
  2 #ABA-NUM-REST              (A8)        /* PM2
*
1 #HOLD-ABA                    (A9)
1 #HOLD-ACT                    (A17)
1 #HOLD-PAD-CODE                (A1)
*
1 #ABA-CV                      (C)
1 #ABA2-CV                     (C)
1 #ACT-CV                      (C)
1 #ACT2-CV                     (C)
END-DEFINE
************************************************************************
*
DEFINE WINDOW EZPAY-BOX
  SIZE 22 * 65
  BASE TOP LEFT
  FRAMED ON POSITION SYMBOL AUTO
*
SET WINDOW 'EZPAY-BOX'
SET KEY PF5  NAMED 'Accpt'
SET KEY PF3  NAMED 'Quit'
*
RESET #HOLD-ABA #HOLD-ACT #HOLD-PAD-CODE
#HOLD-ABA       := #PAD-ABA-NBR
#HOLD-ACT       := #PAD-ACCT-NUM
#HOLD-PAD-CODE  := #PAD-CODE
#PAD-ABA-NBR-2  := #PAD-ABA-NBR              /*  TT1
#PAD-ACCT-NUM-2 := #PAD-ACCT-NUM             /*  TT1
*
#ABA-CV   := (AD=U)
#ABA2-CV  := (AD=NP)
#ACT-CV   := (AD=U)
#ACT2-CV := (AD=NP)
INPUT MARK *#PAD-ABA-NBR USING MAP 'NMOMPADC'
*
PERFORM ACCOUNT-EDITS
*
REPEAT
*
  DECIDE ON FIRST VALUE *PF-KEY
    VALUE 'PF3'
      #PAD-ABA-NBR  := #HOLD-ABA
      #PAD-ACCT-NUM := #HOLD-ACT
      #PAD-CODE := #HOLD-PAD-CODE
      ESCAPE BOTTOM
    VALUE 'PF5'
      PERFORM UPDATE-PAD-CODE-CREATE-EIL
      PERFORM CREATE-TRANSACTION-LOG
      ESCAPE BOTTOM
    NONE
      INPUT WITH TEXT 'Press F5 to commit OR F3 to cancel' USING MAP 'NMOMPADC'
  END-DECIDE
END-REPEAT

SET WINDOW OFF
*
************************************************************************
DEFINE SUBROUTINE ACCOUNT-EDITS
************************************************************************
*                                           /*  TT1  start

RP1. REPEAT
  IF *PF-KEY = 'PF3'
    ESCAPE BOTTOM
  END-IF
*                                           /*  TT1  Ends
*
  IF (#PAD-ABA-NBR  = ' ' OR #PAD-ACCT-NUM = ' ')
**  RESET #PAD-ABA-NBR #PAD-ABA-NBR-2 #PAD-ACCT-NUM #PAD-ACCT-NUM-2
    REINPUT FULL 'PLEASE ENTER ABA-NBR AND ACCT-NBR'
      MARK *#PAD-ABA-NBR
  END-IF
*
  IF   (#PAD-ABA-NBR NE ' ')
      AND (#PAD-ABA-NBR NE MASK (NNNNNNNNN))
    RESET #PAD-ABA-NBR #PAD-ABA-NBR-2
    REINPUT FULL 'PRE-AUTH-ABA-NUMBER MUST BE 9 NUMERIC DIGITS'
      MARK *#PAD-ABA-NBR
  END-IF
*
  IF #PAD-ABA-NBR NE ' '
    COMPUTE #DIGIT-SUM = (#PAD-ABA-NBR-TBL (1) * 3)
      + (#PAD-ABA-NBR-TBL (2) * 7)
      + (#PAD-ABA-NBR-TBL (3) * 1)
      + (#PAD-ABA-NBR-TBL (4) * 3)
      + (#PAD-ABA-NBR-TBL (5) * 7)
      + (#PAD-ABA-NBR-TBL (6) * 1)
      + (#PAD-ABA-NBR-TBL (7) * 3)
      + (#PAD-ABA-NBR-TBL (8) * 7)
*
    IF #DIG-SUM-1 = 0
      MOVE 0 TO #CHK-DIGIT
    ELSE
      COMPUTE #CHK-DIGIT = 10 - #DIG-SUM-1
    END-IF
*
    IF #CHK-DIGIT NE #PAD-ABA-NBR-TBL (9)
      RESET #PAD-ABA-NBR #PAD-ABA-NBR-2
      REINPUT FULL 'PRE-AUTH-ABA-NUMBER HAS BAD CHECK-DIGIT'
        MARK *#PAD-ABA-NBR
    END-IF
*
    #WORK-ABA-NUM    := #PAD-ABA-NBR                                    /* PM2
    IF NOT #ABA-NUM-1 = '0' OR = '1' OR = '2' OR = '3'                  /* PM2
      RESET #PAD-ABA-NBR #PAD-ABA-NBR-2
      REINPUT FULL 'INVALID ABA NUMBER - MUST START WITH "0, 1, 2 or 3"'     /* PM2
        MARK *#PAD-ABA-NBR                                                /* PM2
    END-IF                                                              /* PM2
  END-IF
*
  IF NOT #PAD-CHECK-SAV = ' ' OR = 'S'
    REINPUT 'PLEASE SELECT "S" FOR SAVINGS OR " " FOR CHECKING'
      MARK *#PAD-CHECK-SAV
  END-IF
**************************************************************************************
**  THE FOLLOWING IF STATMENT MAKES SURE ALL CHARACTERS IN ACCT # ARE DIGITS    TT1 **
**************************************************************************************
  #A := #PAD-ACCT-NUM
  #A := *TRIM(#A)
  #ACCOUNT-NUM-LENGTH :=  *LENGTH(#A)
  FOR #COUNT 1 TO #ACCOUNT-NUM-LENGTH
    #INPUT := SUBSTRING(#A, #COUNT, 1)
    IF  #INPUT IS (N1) IGNORE
    ELSE
      RESET #PAD-ACCT-NUM #PAD-ACCT-NUM-2
      REINPUT FULL 'INVALID CHARACTERS.  ACCOUNT NUMBER CAN ONLY BE A NUMBER'
        MARK *#PAD-ACCT-NUM
    END-IF
  END-FOR
*
  #ABA-CV   := (AD=NP)
  #ABA2-CV  := (AD=U)
  #ACT-CV   := (AD=NP)
  #ACT2-CV := (AD=U)
  INPUT USING MAP 'NMOMPADC'
  IF *PF-KEY = 'PF3'
    ESCAPE BOTTOM
  END-IF
  IF #PAD-ABA-NBR = #PAD-ABA-NBR-2 AND #PAD-ACCT-NUM = #PAD-ACCT-NUM-2 THEN
    ESCAPE BOTTOM (RP1.)
  ELSE
    RESET  #PAD-ABA-NBR #PAD-ABA-NBR-2 #PAD-ACCT-NUM #PAD-ACCT-NUM-2
    #ABA-CV   := (AD=U)
    #ABA2-CV  := (AD=NP)
    #ACT-CV   := (AD=U)
    #ACT2-CV := (AD=NP)
    INPUT WITH TEXT 'THE VERIFICATION FIELDS DO NOT MATCH. REINPUT.' USING MAP 'NMOMPADC'
  END-IF
END-REPEAT
*
IF *PF-KEY = 'PF3'
  ESCAPE ROUTINE
END-IF
IF *PF-KEY <> 'PF3'
  #ABA-CV   := (AD=UP)
  #ABA2-CV  := (AD=UP)
  #ACT-CV   := (AD=UP)
  #ACT2-CV  := (AD=UP)
  INPUT WITH TEXT 'ACCT AND ABA NUMBERS VALIDATED. PRESS F5 TO COMMIT' USING MAP 'NMOMPADC'
END-IF
/*                                                            END of TT1
*
END-SUBROUTINE

************************************************************************
DEFINE SUBROUTINE UPDATE-PAD-CODE-CREATE-EIL
************************************************************************
*
if #AI-CALL                                      /* vt1 \/
  escape routine
end-if                                           /* vt1  /\
IF #EZPAY-WAITING
  #PAD-CODE   := 'P'
ELSE
  #PAD-CODE   := 'L'
END-IF
*
#X-ALT-LP-IND := 'E'
#X-ALT-LP-AMT :=
  FUNCTION-LOAN-PAYMENT(<#CAP-LOAN-AMOUNT,#CAP-TERM,#ALLOT-STRT-AMT>)  /* DW1
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CREATE-TRANSACTION-LOG
************************************************************************
*
TRLOG.ID-NUMBER            := #ID-NUMBER
TRLOG.PROCESS-IND          := 'I'
TRLOG.NAME                 := #NAME
TRLOG.DATE-LAST-UPDATE     := *DATN
TRLOG.CLERK-ID             := #CLERK-ID
TRLOG.TERMINAL-ID          := *INIT-ID
TRLOG.TRANSACTION-DATN     := *DATN
TRLOG.TRANSACTION-TIMN     := *TIMN
*
#W-DESCRIPTION             := 'NM-PAD-CODE:'
#W-DESCRIPTION-1           := 'PAD-ABA#'
#W-DESCRIPTION-2           := 'PAD-ACCT#'
#W-DESCRIPTION-3           := 'PAD-CH-SV:'
#W-DATA                    := ' '
#W-DATA-1                  := ' '
#W-DATA-2                  := ' '
#W-DATA-3                  := ' '
TRLOG.OLD-DATA (1)         := #W-OLD-NEW-DATA
*
#W-DATA                    := #PAD-CODE
#DISPLAY-FIELD             := #PAD-ABA-NBR
#W-DATA-1                  := FUNCTION-MASK(<#DISPLAY-FIELD,'*'>)
#DISPLAY-FIELD             := #PAD-ACCT-NUM
#W-DATA-2                  := FUNCTION-MASK(<#DISPLAY-FIELD,'*'>)
#W-DATA-3                  := #PAD-CHECK-SAV
TRLOG.NEW-DATA (1)         := #W-OLD-NEW-DATA
*
STORE TRLOG
RESET #W-OLD-NEW-DATA
*
#TR-L-SALP-LB1             := 'NM-SALF ALP FLG'
#TR-L-SALP-LB2             := 'ALP AMT'
#TR-L-SALP-FLG             := ' '
#TR-L-SALP-AMT             := .00
TRLOG.OLD-DATA (1)         := #W-OLD-NEW-DATA
*
#TR-L-SALP-FLG             := #X-ALT-LP-IND
MOVE EDITED #X-ALT-LP-AMT (EM=Z,ZZZ.99-) TO #TR-L-SALP-AMT
TRLOG.NEW-DATA (1)         := #W-OLD-NEW-DATA
*
STORE TRLOG
*
END-SUBROUTINE
*
END
