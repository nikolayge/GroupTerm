* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* GP_COMM Communication Interface
* GPL/GP2 Project
* bz-Name 07/07/2017     Fine Names
*
* Errors:
*   1 - already executed today
*   2 - Owner relation not found
*   3 - Owner Contact not found
*   4 - Owner has no Email
*   5 - Already sent correspondence
*
*     Events
* CODE          CODE explanation
* ---------     -------------------------
*           GPL
* GPL-21-60     60 day age 21 GIPO
* GPL-21-30     30 day age 21 GIPO
* GPL-21A       Death benefit doubled
* GPL-25-60     60 day age 25 GIPO
* GPL-25-30     30 day age 25 GIPO
* GPL-28-60     60 day age 28 GIPO
* GPL-28-30     30 day age 28 GIPO
*           GP2
* GP2-18        Death benefit doubled
* GP2-21-60     60 day age 21 GIPO
* GP2-21-30     30 day age 21 GIPO
* GP2-21RPU     30 day age Ownership
* GP2-21-GP
* GP2-21A       Ownership changed to Insured
* GP2-25-60     60 day age 25 GIPO
* GP2-25-30     30 day age 25 GIPO
* GP2-30-60     60 day age 30 GIPO
* GP2-30-30     30 day age 30 GIPO
* GP2-35-60     60 day age 35 GIPO
* GP2-35-30     30 day age 35 GIPO
* GP2-40-60     60 day age 40 GIPO
* GP2-40-30     30 day age 40 GIPO
* ---------     -------------------------------

DEFINE DATA
PARAMETER
1 gp_Code   (A) DYNAMIC BY VALUE
1 gp_CN     (N6)
1 gp_POL    (A16)
1 gp_Old_DB (N7.2)
1 gp_New_DB (N7.2)
1 gp_RC     (N4)
LOCAL USING OBJLLETT  /* 078-A-LETTERS D: LAST-LOAD-DATE, POLICY-NUMBER, TEMPLATE-NAME
LOCAL USING ADDA0001
LOCAL
1 POL-V VIEW OF A-POLICY-CONTACTS
  2 CONTACT-ID              (N8)
  2 RELATION                (N2)
  2 REFERENCE-NUMBER        (N6)
  2 POLICY-NUMBER           (A16)

1 CNT-V-OWNER VIEW OF A-CONTACTS
  2 CONTACT-ID
  2 FIRST-NAME
  2 LAST-NAME
*
1 CNT-V-INSURED VIEW OF A-CONTACTS
  2 CONTACT-ID
  2 DATE-OF-BIRTH
  2 REDEFINE DATE-OF-BIRTH
    3 DATE-OF-BIRTH_A (A8)
  2 REDEFINE DATE-OF-BIRTH
    3 DB-YYYY          (A4)
    3 DB-MMDD          (A4)  
  2 GENDER-CD  
*
1 #TEST-EMAIL-ADDRESS     (A)  DYNAMIC INIT<'ttinger@aafmaa.com,aloke@aafmaa.com'>
*
1 #HOLD-TEMPLATES (A20/1:3)
*
* CONSTANTS
1 #TEMPLATES-TABLE
  2 #GP2-OWN-LET             (A20) CONST<'GP2_OWN_LET'>
  2 #GP2-OWN-EML             (A20) CONST<'GP2_OWN_EML'>
  2 #GP2-DB-LET-30           (A20) CONST<'GP2_DB_LET_30'>
  2 #GP2-DB-EML-30           (A20) CONST<'GP2_DB_EML_30'>
  2 #GP2-GIPO-EML-60-30      (A20) CONST<'GP2_GIPO_EML_60_30'>
  2 #GP2-GIPO-LET-60         (A20) CONST<'GP2_GIPO_LET_60'>
  2 #GP2-OWN-LET-30          (A20) CONST<'GP2_OWN_LET_30'>
  2 #GP2-OWN-EML-30          (A20) CONST<'GP2_OWN_EML_30'>
  2 #GP2-DB-LET              (A20) CONST<'GP2_DB_LET'>
  2 #GP2-DB-EML              (A20) CONST<'GP2_DB_EML'>
*
  2 #GPL-GIPO-LET-60         (A20) CONST<'GPL_GIPO_LET_60'>
  2 #GPL-GIPO-EML-60-30      (A20) CONST<'GPL_GIPO_EML_60_30'>
  2 #GPL-DB-LET-30           (A20) CONST<'GPL_DB_LET_30'>
  2 #GPL-DB-EML-30           (A20) CONST<'GPL_DB_EML_30'>
  2 #GPL-DB-LET              (A20) CONST<'GPL_DB_LET'>
  2 #GPL-DB-EML              (A20) CONST<'GPL_DB_EML'>
*
1 I (I4)
1 J (I4)
1 #POSITION   (I4)
*
1 #MONTHLY-PREMIUM   (N7.2)
1 #GPREMSXX-PARAMATERS
  2 #CGA-SCR-COMMAND (A2)
  2 #CGA-SCR-ID      (N9)
  2 #CGA-SCR-SUFFIX  (A3)
  2 #PLAN-PASS       (A3)
  2 #AGE             (N2)
  2 #APREM           (N7.2)
  2 #ISSUE-DATE      (N8)
  2 REDEFINE #ISSUE-DATE
    3 #ISSUE-DATE-A   (A8)
  2 #SMOK-FLAG       (A1)
  2 #FAC-AMT         (N7.2)
  2 #SEX             (A1)
*
1 ToDay             (N8)
1 REDEFINE ToDay
  2 ToDay_A         (A8)
1 #d                 (D)
*
1 #IS-GPL            (L)
1 #GIPO-PLANS (A3/1:6) CONSTANT <'7P','20P','30P','OL','LT','S20'>
1 #CONTAINS-LETTER (L)  INIT <TRUE> /* If correspondence contains an email
1 #CONTAINS-EMAIL  (L)  INIT <TRUE> /* If correspondence contains an letter
*
END-DEFINE
*
ON ERROR
  WRITE 'Error' *PROGRAM 'Ln:' *ERROR-LINE 'Err:' *ERROR-NR 
  gp_RC := *ERROR-NR
  ESCAPE ROUTINE
END-ERROR
*
 RESET #HOLD-TEMPLATES(*)
 DECIDE ON FIRST VALUE OF gp_CODE               /* Set and validate Template  /Main/
  VALUE 'GPL-21-60','GPL-25-60','GPL-28-60'
    #HOLD-TEMPLATES(1) := #GPL-GIPO-LET-60
    #HOLD-TEMPLATES(2) := #GPL-GIPO-EML-60-30

  VALUE 'GPL-21-30'
    #HOLD-TEMPLATES(1) := #GPL-DB-LET-30
    #HOLD-TEMPLATES(2) := #GPL-DB-EML-30
    #HOLD-TEMPLATES(3) := #GPL-GIPO-EML-60-30

  VALUE 'GPL-25-30','GPL-28-30'
    #HOLD-TEMPLATES(1) := #GPL-GIPO-EML-60-30

  VALUE 'GPL-21A'
    #HOLD-TEMPLATES(1) := #GPL-DB-LET
    #HOLD-TEMPLATES(2) := #GPL-DB-EML

  VALUE 'GP2-18-30'
    #HOLD-TEMPLATES(1) := #GP2-DB-LET-30
    #HOLD-TEMPLATES(2) := #GP2-DB-EML-30

  VALUE 'GP2-18'
    #HOLD-TEMPLATES(1) := #GP2-DB-LET
    #HOLD-TEMPLATES(2) := #GP2-DB-EML

  VALUE 'GP2-21RPU'
    #HOLD-TEMPLATES(1) := #GP2-OWN-LET-30
    #HOLD-TEMPLATES(2) := #GP2-OWN-EML-30

  VALUE  'GP2-25-60','GP2-30-60','GP2-35-60','GP2-40-60'
    #HOLD-TEMPLATES(1) := #GP2-GIPO-LET-60
    #HOLD-TEMPLATES(2) := #GP2-GIPO-EML-60-30

  VALUE 'GP2-21-30'
    #HOLD-TEMPLATES(1) := #GP2-OWN-LET-30
    #HOLD-TEMPLATES(2) := #GP2-OWN-EML-30

  VALUE 'GP2-21-GP'
    #HOLD-TEMPLATES(1) := #GP2-GIPO-EML-60-30
    #HOLD-TEMPLATES(2) := #GP2-GIPO-LET-60

  VALUE 'GP2-21A'
    #HOLD-TEMPLATES(1) := #GP2-OWN-LET
    #CONTAINS-EMAIL := FALSE

  VALUE 'GP2-25-30','GP2-30-30','GP2-35-30','GP2-40-30'
    #HOLD-TEMPLATES(1) := #GP2-GIPO-EML-60-30
    #CONTAINS-LETTER := FALSE
  NONE VALUE
    gp_RC := 6               /* Unknown Event code
    ESCAPE ROUTINE
 END-DECIDE

/*                                      Verify if already created        /Main/
 ToDay := *DATN
 FIND(1) LT-V WITH POLICY-NUMBER = gp_POL AND
    LT-V.LAST-LOAD-DATE = ToDay AND
    LT-V.TEMPLATE-NAME = #HOLD-TEMPLATES(1)
  IF NO RECORDS FOUND
    ESCAPE BOTTOM
  END-NOREC
  gp_RC := 5
  ESCAPE ROUTINE
END-FIND

/*                                                     Determine Owner    /Main/
FIND POL-V WITH POLICY-NUMBER = gp_POL
    WHERE RELATION = 2
  IF NO RECORD FOUND
    gp_RC := 2 ESCAPE ROUTINE
  END-NOREC
  LT-V.OWNER-CN      := POL-V.REFERENCE-NUMBER
  LT-V.POLICY-NUMBER := POL-V.POLICY-NUMBER
END-FIND
*
/*                                                     Find Owner Data   /Main/
FIND CNT-V-OWNER WITH ID-NUMBER = LT-V.OWNER-CN
  IF NO RECORD FOUND
    gp_RC := 3 ESCAPE ROUTINE
  END-NOREC
END-FIND
*
   FIND(1) CNT-V-INSURED WITH ID-NUMBER = gp_CN
      IF NO RECORDS FOUND
        IGNORE
      END-NOREC
      LT-V.INSURED-CN    := gp_CN
      MOVE SUBSTR(DATE-OF-BIRTH_A,5,4) TO SUBSTRING(ToDay_A,5,4)
      MOVE EDITED ToDay_A TO #d (EM=YYYYMMDD)
      MOVE EDITED #d (EM=MM/DD/YYYY) TO LT-V.FORMATTED-ISSUE-DATE 
    END-FIND
    DECIDE FOR EVERY CONDITION
      WHEN #CONTAINS-LETTER
        PERFORM CHECK-FOR-MAIL-ADDRESS
      WHEN #CONTAINS-EMAIL
        PERFORM CHECK-FOR-EMAIL-ADDRESS
      WHEN NONE
        IGNORE
    END-DECIDE
*
LT-V.INS-PHONE         := GET-PHONE(<CNT-V-INSURED.CONTACT-ID>)
IF LT-V.INS-PHONE = ' '
  LT-V.INS-PHONE := 'Not on file'
END-IF
*
IF CNT-V-INSURED.GENDER-CD = 'M'
  LT-V.INS-GENDER := "his"
  LT-V.POLICY-CHANGE-DATE := 'He'
ELSE
  LT-V.INS-GENDER := "her"
  LT-V.POLICY-CHANGE-DATE := 'She'
END-IF
*
LT-V.INSURED-NAME := '!L'
CALLNAT 'GPRS0CNT' CNT-V-INSURED.CONTACT-ID LT-V.INSURED-NAME

* Name regular
LT-V.OWNER-NAME := '!L'
CALLNAT 'GPRS0CNT' CNT-V-OWNER.CONTACT-ID LT-V.OWNER-NAME

* Salutation name
LT-V.OWNER-SALUTATION := 'S1'
CALLNAT 'GPRS0CNT' CNT-V-OWNER.CONTACT-ID LT-V.OWNER-SALUTATION
* LT-V.OWNER-SALUTATION  :=EDIT_NAME_LOWCASE(<LT-V.OWNER-SALUTATION>)  /*  bz-Name
*

FOR I 1 TO *OCC(#HOLD-TEMPLATES)
  IF #HOLD-TEMPLATES(I) <> ' '

    RESET #POSITION
    EXAMINE #HOLD-TEMPLATES(I) FOR 'LET' GIVING POSITION #POSITION
     IF #POSITION > 0 AND LT-V.ADDRESS-1 = ' '  /* Template Letter And has no Addres
      ESCAPE TOP
    END-IF

    RESET #POSITION
    EXAMINE #HOLD-TEMPLATES(I) FOR 'EML' GIVING POSITION #POSITION
    IF #POSITION > 0 AND LT-V.EMAIL-ADDRESS = ' '       /* Template Email And has no Email
      ESCAPE TOP
    END-IF

    RESET #POSITION
    EXAMINE #HOLD-TEMPLATES(I) FOR 'GIPO' GIVING POSITION #POSITION
    IF #POSITION > 0
      PERFORM GET-GIPO-PREMIUMS
    ELSE
      MOVE EDITED gp_Old_DB (EM=Z,ZZZ,ZZ9.99) TO LT-V.DEATH-BENEFIT-DECREASED-1
      COMPRESS '$' *TRIM(LT-V.DEATH-BENEFIT-DECREASED-1) INTO LT-V.DEATH-BENEFIT-DECREASED-1 LEAVING NO
      gp_New_DB := gp_Old_DB * 2
      MOVE EDITED gp_New_DB (EM=Z,ZZZ,ZZ9.99) TO LT-V.DEATH-BENEFIT
      COMPRESS '$' *TRIM(LT-V.DEATH-BENEFIT) INTO LT-V.DEATH-BENEFIT LEAVING NO
    END-IF
    LT-V.TEMPLATE-NAME  := #HOLD-TEMPLATES(I)
    LT-V.LAST-LOAD-USER := 'EDS'
    LT-V.LAST-LOAD-DATE := *DATN
    LT-V.LAST-LOAD-TIME := *TIMN
    LT-V.BILL-NOTE-DATE := gp_CODE          /*  For easy testing
    STORE LT-V
    END TRANSACTION                    /* Commit every template --bz
  END-IF
END-FOR
*

**=================================
DEFINE SUBROUTINE GET-GIPO-PREMIUMS
**=================================
RESET #POSITION #IS-GPL
EXAMINE #HOLD-TEMPLATES(I) FOR 'GPL' GIVING POSITION #POSITION
*
IF #POSITION > 0
  #IS-GPL := TRUE
  #FAC-AMT := gp_Old_DB * 4
ELSE
  #FAC-AMT := gp_Old_DB * 2
END-IF
*
MOVE EDITED #FAC-AMT (EM=Z,ZZZ,ZZ9.99) TO LT-V.DEATH-BENEFIT
COMPRESS '$' *TRIM(LT-V.DEATH-BENEFIT) INTO LT-V.DEATH-BENEFIT LEAVING NO
*
#CGA-SCR-ID := LT-V.INSURED-CN
#SEX := CNT-V-INSURED.GENDER-CD

MOVE EDITED CNT-V-INSURED.DATE-OF-BIRTH_A TO #d (EM=YYYYMMDD)
#AGE := ((*DATX - #d) / 365.242)  
LT-V.POLICY-EXPIRATION-DATE := #AGE
*
#SMOK-FLAG  := 'N'  /* Assumed non-smoker
*
#d := *DATX + 60
MOVE EDITED #d (EM=YYYYMMDD) TO #ISSUE-DATE-A
*
FOR J 1 TO *OCC(#GIPO-PLANS)
  IF J > 4 AND #FAC-AMT < 50000 /* 50k is smallest term plan
    ESCAPE BOTTOM
  END-IF
  #PLAN-PASS := #GIPO-PLANS(J)
  CALLNAT 'GPREMSXX' #GPREMSXX-PARAMATERS
  COMPUTE #MONTHLY-PREMIUM := #APREM  / 12
  MOVE EDITED #MONTHLY-PREMIUM   (EM=Z,ZZZ,ZZ9.99) TO LT-V.RT-PREMIUMS (J)
  LT-V.RT-PREMIUMS (J) := *TRIM(LT-V.RT-PREMIUMS (J))
  COMPRESS '$' *TRIM(LT-V.RT-PREMIUMS(J)) INTO LT-V.RT-PREMIUMS (J) LEAVING NO
END-FOR
**============
END-SUBROUTINE
**============

**=======================================
DEFINE SUBROUTINE CHECK-FOR-EMAIL-ADDRESS
**=======================================
* If run in development and ensure member does not receive email
 IF F-IS-DEV(<>)
   LT-V.EMAIL-ADDRESS := #TEST-EMAIL-ADDRESS
 ELSE
   LT-V.EMAIL-ADDRESS := GET-EML(<CNT-V-OWNER.CONTACT-ID>) /* Owner Email address
 END-IF
**============
END-SUBROUTINE
**============

**======================================
DEFINE SUBROUTINE CHECK-FOR-MAIL-ADDRESS
**======================================
* Could be Owner or insured address
#ADD-CONTACT-ID := CNT-V-OWNER.CONTACT-ID
#ADD-TYPE       := 'P'  /* Primary
CALLNAT 'ADDN0001' #PDA-ADDRESS
LT-V.ADDRESS-1 := #ADD-LINE-1
LT-V.ADDRESS-2 := #ADD-LINE-2
LT-V.ADDRESS-3 := #ADD-LINE-3
*
* Insured is different than Owner
IF CNT-V-OWNER.CONTACT-ID <> CNT-V-INSURED.CONTACT-ID
  RESET #PDA-ADDRESS
  #ADD-CONTACT-ID := CNT-V-INSURED.CONTACT-ID
  #ADD-TYPE       := 'P'  /* Primary
  CALLNAT 'ADDN0001' #PDA-ADDRESS
  IF #ADD-LINE-1 = ' '
    LT-V.INS-ADDR-1     := 'Not on file'
  ELSE
    LT-V.INS-ADDR-1     := #ADD-LINE-1
    LT-V.INS-ADDR-2     := #ADD-LINE-2
    LT-V.INS-ADDR-3     := #ADD-LINE-3
  END-IF
  LT-V.INS-EML          := GET-EML(<CNT-V-INSURED.CONTACT-ID>)
  IF LT-V.INS-EML  = ' '
    LT-V.INS-EML         := 'Not on file'
  END-IF
ELSE
  LT-V.INS-ADDR-1     := #ADD-LINE-1
  LT-V.INS-ADDR-2     := #ADD-LINE-2
  LT-V.INS-ADDR-3     := #ADD-LINE-3
  LT-V.INS-EML        := LT-V.EMAIL-ADDRESS
END-IF
**============
END-SUBROUTINE
**============
END
