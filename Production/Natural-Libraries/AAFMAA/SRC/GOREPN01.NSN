* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* CRM - Admin interface : Request GOM BA Report
************************************************************************
* NAME         : GOREPN01                                              *
* AUTHOR       : Copyright: MetrostarSystems AAFMAA                    *
* DESCRIPTION  : Return Windows Link to BA report file                 *
************************************************************************
*        MODIFICATION LOG                                              *
************************************************************************
* USER   DATE      TAG  REASON
* bz     20110503  Initial Creation
*********************************************************
* 
* Request structure
* '<GOMReport>'-
*   '<CN>123456</CN>'-
*   '<SBPOption>A</SBPOption>'-
*   '<Update>Y</Update>'-
*   '<User>CRM</User>'-
*   '<FileName/>'-
*   '<ErrorCode/>'-  
*   '<ErrorDescription/>'-  
* '</GOMReport>'

DEFINE DATA PARAMETER
1 XML_PARSER_INPUT    (A) DYNAMIC        /* In
1 p_XML_OUT           (A) DYNAMIC        /* Out
LOCAL
1 XML_PARSER_ERROR_TEXT        (A253)
1 XML_PARSER_RESPONSE          (I4)
LOCAL USING PARSER-X           /* parser internal data - do not change
LOCAL
1 XML_PARSER_XPATH             (A) DYNAMIC
1 XML_PARSER_XPATH_TYPE        (A1)
1 XML_PARSER_CONTENT           (A) DYNAMIC
1 XML_PARSER_CONTENT_IS_EMPTY  (L)
*
1 P_GOREPN02
  2 p_CN                           (A6)
  2 p_SBP                          (A1)
  2 p_Upd                          (A1)
  2 p_Clerk                        (A3)
  2 p_Err                          (A4) INIT <'0000'>
  2 p_MSG                          (A) DYNAMIC
*  
1 v_User                         (A) DYNAMIC 
*
1 GT-V VIEW OF A-GEN-TABLE
  2 GEN-KEY (A4)
  2 GEN-SUB-KEY (A3)
  2 GEN-ALPHA-VALUE (A50)
*
******
  1 v_XML
    2 v_XML_Start    (A) DYNAMIC INIT <'<GOMReport>'>
    2 v_XML_CN       (A) DYNAMIC INIT <'<CN>!CN</CN>'>
    2 v_XML_SBP      (A) DYNAMIC INIT <'<SBPOption>!SBP</SBPOption>'>
    2 v_XML_Upd      (A) DYNAMIC INIT <'<Update>!Upd</Update>'>
    2 v_XML_User     (A) DYNAMIC INIT <'<User>!User</User>'>
    2 v_XML_FName    (A) DYNAMIC INIT <'<FileName>!FName</FileName>'>
    2 v_XML_ErrCode  (A) DYNAMIC INIT <'<ErrorCode>!ErrCode</ErrorCode>'>          
    2 v_XML_ErrDscr  (A) DYNAMIC INIT <'<ErrorDescription>!ErrDescr</ErrorDescription>'>
    2 v_XML_End      (A) DYNAMIC INIT <'</GOMReport>'>  
******
*  DEBUG *
 1 F_ABS_UNIX          (A)    DYNAMIC INIT <"/usr/SAG/AAFMAA/batch/workfiles/WORK">
 1 F_ABS_UNIX_LOG      (A80)  INIT <"/usr/SAG/AAFMAA/batch/workfiles/WORK/GOREPN01_LOG.TXT">
 1 v_Log               (A400)
 1 f_FTP_KSH           (A)    DYNAMIC INIT <"/usr/SAG/AAFMAA/batch/workfiles/PROD/PGM/ftpSAS">
 1 f_FTP_DIR           (A)    DYNAMIC
 1 f_FTP_DIR_Prod      (A)    DYNAMIC INIT <"/ftp/GOM_Report">             
 1 f_FTP_DIR_Dev       (A)    DYNAMIC INIT <"/ftp/TEST">             
 1 f_IP                (A)    DYNAMIC INIT <'\\192.168.50.71'>   
 1 f_Name              (A)    DYNAMIC
 1 v_shell             (A)    DYNAMIC
 1 v_RC                (N3)
 1 v_PN                (I1)   INIT  <1>                                                            /*  --work 
*******
  1 #i                  (N3) 
  1 #j                  (N3) 
  1 v_File_A            (A) DYNAMIC
  1 v_File_C            (A) DYNAMIC
  1 v_File_U            (A) DYNAMIC
******
END-DEFINE

IF F-IS-DEV(<>)
  f_FTP_DIR := f_FTP_DIR_Dev
ELSE
   f_FTP_DIR := f_FTP_DIR_Prod
END-IF

DEFINE WORK FILE 13 F_ABS_UNIX_LOG TYPE 'ASCII-COMPRESSED'

IF *LENGTH (XML_PARSER_INPUT) = 0
   COMPRESS 'Empty Request' INTO p_XML_OUT
   ESCAPE ROUTINE
END-IF

INCLUDE PARSER_X 'XML_PARSER_INPUT' /* XML file to be parsed
  'XML_PARSER_XPATH'                /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  'XML_PARSER_CONTENT'              /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE CALLBACK
IF XML_PARSER_CONTENT_IS_EMPTY THEN
  IGNORE
ELSE
  PERFORM DO-PARSE
END-IF
END-SUBROUTINE
/*
DEFINE SUBROUTINE PARSER_ERROR
   p_XML_OUT := XML_PARSER_ERROR_TEXT
   ESCAPE ROUTINE
END-SUBROUTINE
*
DEFINE DO-PARSE
XML_PARSER_CONTENT := *TRIM (XML_PARSER_CONTENT)
* MOVE *TRANSLATE(XML_PARSER_CONTENT, UPPER) TO XML_PARSER_CONTENT

IF XML_PARSER_XPATH = SCAN '/CN/'
   p_CN := XML_PARSER_CONTENT   
   ESCAPE ROUTINE
END-IF
IF XML_PARSER_XPATH = SCAN '/SBPOption/'
      p_SBP := XML_PARSER_CONTENT   
   ESCAPE ROUTINE
END-IF
IF XML_PARSER_XPATH = SCAN '/Update/' 
   p_Upd := XML_PARSER_CONTENT   
   ESCAPE ROUTINE
END-IF
IF XML_PARSER_XPATH = SCAN '/User/' 
    v_User := XML_PARSER_CONTENT
     FIND GT-V WITH GEN-KEY = 'WEBU'
       IF v_User = SCAN(GEN-ALPHA-VALUE)
           p_Clerk := GEN-SUB-KEY
           ESCAPE BOTTOM
       END-IF  
    END-FIND
    IF p_Clerk = ' ' p_Clerk := 'CR-' END-IF
    
   ESCAPE ROUTINE
END-IF
END-SUBROUTINE
*
********
COMPRESS 'Request' *DAT4U  *TIME *DEVICE ' natparm:' *PARM-USER ' et:' *ETID INTO v_Log 
WRITE WORK FILE 13 v_Log
COMPRESS 'CN: ' p_CN  ' SBP: ' p_SBP ' Upd: ' p_Upd  ' User: ' INTO v_Log
WRITE WORK FILE 13 v_Log
COMPRESS  XML_PARSER_INPUT INTO v_Log
WRITE WORK FILE 13 v_Log
******************
*   PERFORM S-TEST
******************
IF p_SBP = 'U' 
     p_SBP := 'A'
     p_Upd := 'N'

     PERFORM DO-INIT-NAME
     p_MSG    := f_ABS_UNIX
     v_File_A := f_ABS_UNIX
     CALLNAT 'GOREPN02' P_GOREPN02
           IF p_Err <> '0000' 
                PERFORM DO-RETURN
           END-IF
     p_SBP := 'C'
     p_Upd := 'N'
     PERFORM DO-INIT-NAME
     p_MSG    := f_ABS_UNIX
     v_File_C := f_ABS_UNIX
     CALLNAT 'GOREPN02' P_GOREPN02
            IF p_Err <> '0000' 
               PERFORM DO-RETURN
           END-IF
        v_File_U := v_File_C
        EXAMINE v_File_U FOR '_C.' REPLACE '_U.'
        EXAMINE f_Name FOR '_C.' REPLACE '_U.'
        COMPRESS 'cat' v_File_A v_File_C '>' v_File_U INTO v_shell
        call 'shcmd' v_shell
        PERFORM DO-RETURN
ELSE
    PERFORM DO-INIT-NAME
    p_MSG := f_ABS_UNIX
    v_File_U := f_ABS_UNIX
    CALLNAT 'GOREPN02' P_GOREPN02
    PERFORM DO-RETURN
END-IF    
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
DEFINE DO-RETURN
   IF p_Err = '0000'
     PERFORM DO-FTP
     COMPRESS f_IP f_FTP_DIR '\' f_Name INTO f_Name LEAVING NO SPACE  /* 1
     EXAMINE  f_Name FOR '/' REPLACE '\'
   ELSE 
     f_Name := ' '
   END-IF  

   EXAMINE v_XML_CN       FOR  '!CN'      REPLACE   p_CN               /* 3
   EXAMINE v_XML_SBP      FOR  '!SBP'     REPLACE   p_SBP 
   EXAMINE v_XML_Upd      FOR  '!Upd'     REPLACE   p_Upd 
   EXAMINE v_XML_User     FOR  '!User'    REPLACE   p_Clerk
   EXAMINE v_XML_FName    FOR  '!FName'   REPLACE   f_Name
   EXAMINE v_XML_ErrCode  FOR  '!ErrCode' REPLACE   p_Err
   EXAMINE v_XML_ErrDscr  FOR  '!ErrDescr' REPLACE  p_MSG
   COMPRESS v_XML INTO p_XML_OUT LEAVING NO SPACE
 COMPRESS 'Responce' 'CN: ' p_CN  ' SBP: ' p_SBP ' Upd: ' p_Upd  ' User: ' p_Clerk INTO v_Log
 WRITE WORK FILE 13 v_Log
 COMPRESS  'Err Code: '  p_Err '<' p_MSG '>' INTO v_Log
 WRITE WORK FILE 13 v_Log
 COMPRESS  p_XML_OUT    INTO v_Log
 WRITE WORK FILE 13 v_Log   
      CLOSE WORK FILE 13
      ESCAPE MODULE    
END-SUBROUTINE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
DEFINE DO-INIT-NAME
  RESET INITIAL f_ABS_UNIX
  COMPRESS 'BA_' p_CN '_' p_SBP '.RTF' INTO f_Name LEAVING NO SPACE
  COMPRESS f_ABS_UNIX '/' f_Name INTO f_ABS_UNIX LEAVING NO SPACE  
END-SUBROUTINE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
DEFINE DO-FTP
 COMPRESS f_FTP_KSH " " v_File_U " '?' " f_FTP_DIR INTO v_shell
  call 'shcmd' v_shell
  v_RC := RET('shcmd')
  IF v_RC <> 0
     MOVE v_RC TO p_Err
     p_MSG :=  "Report delivery error. Please try again. Contact Administrator if error repeats"
  END-IF
END-SUBROUTINE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
ON ERROR
  IF *ERROR-NR = 3009
    COMPRESS 'Timeout' *PROGRAM *ERROR-NR 'Line:' *ERROR-LINE  *DATN *TIME INTO p_MSG
      WITH DELIMITER ':'
  ELSE
    COMPRESS 'Natural Error' *PROGRAM *ERROR-NR 'Line:'  *ERROR-LINE *DAT4U *TIME INTO p_MSG
      WITH DELIMITER ':'
  END-IF
  PERFORM DO-RETURN
  ESCAPE ROUTINE
END-ERROR
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
 DEFINE S-TEST
   p_XML_OUT :=
  '<GOMReport><CN>123456</CN>'-
    '<SBPOption>A</SBPOption>'-
    '<Update>Y</Update>'-
    '<User>CRM</User>'-
    '<FileName></FileName>'-
    '<ErrorCode>7777</ErrorCode>'-
    '<ErrorDescription>Connection: Success 4</ErrorDescription>'-
  '</GOMReport>'
   ESCAPE MODULE
 END-SUBROUTINE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
END
