* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPXML - modify print file & add XML Info
*   SEE ATPXML2 for a version of combined XLM files
*******************************************
*                       MODIFICATION LOG
* USER DATE     TAG  REASON
* DRW  03102005 xxx  Created
* DRW  04142005 DW1  Counted Documents by CN
* DRW  05092005 DW2  Use Policy Number & Use '~~' to Indicate M/E Notics
* DRW  05312005 DW3  Shift DOC TYPES
* DRW  06022005 DW4  Replace '&<>' with XML OK chars &amp; &lt; &gt;
* DRW  04222006 DW5  Add 5-YR Renewal Letter Process
* DRW  04282006 DW6  Reset lines skipped on each new page
* DRW  05172006 DW7  Do not remove AAFM BAR CODE from Notices for DAL
*                    It will be used temporarily to print notices
* DRW  06122006 DW8  Remove '1' from above line which ind AAFM bar code
* DRW  12132006 DW9  Remove ~~ ~P WES AAFM and E? from Notice Lines
* DRW  09252007 DW10 Use Parm Date or system date for transfer date
* DRW  10032007 DW11 Change for Paid-up-Notices
* DRW  10112007 DW12 Make PDUP & RTRENEW letters break on only CN Number
* PAM  01062011 PM13 Added new first line
* YAK  03102017 YK1  Replace DOC type with new values, add lines for DALe
*******************************************
*
DEFINE DATA
LOCAL
*
1 #JCL-PARM       (A10)
1 REDEFINE #JCL-PARM   /* DATE PARM 03/01/1999
  2 #JCL-MM    (A2)
  2 #JCL-SL1   (A1)
  2 #JCL-DD    (A2)
  2 #JCL-SL2   (A1)
  2 #JCL-YYYY  (A4)
1 REDEFINE #JCL-PARM
  2 #JCL-DOC-TYPE      (A8)  /* TERM/LOANPMT/NOTICE
*
1 #PARM-YYYYMMDD      (A8)
1 #PARM-MMDDYYYY      (A10)
1 #DOC-TYPE    (A8)
*
1 #ONLY-CHECK-CN  (L)          /* DW12
1 #TRANSFER-DATE   (A10)       /* DW10
1 #YYYYMMDD   (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY  (A4)
  2 #MM-A  (A2)
  2 #DD-A  (A2)
*
1 #I1        (I2)
1 #I2        (I2)
1 #I3        (I2)
1 #PAGE-TOP  (A1) INIT <H'0C'>
1 #ME-IND      (A2)  INIT <'~~'> /* Inds M/E notices from ATHP07P0 DW2
1 #ME-IND-PDUP (A2)  INIT <'~P'> /* Inds M/E Paid-up-Notice        DW2
1 #POL-NUM     (A16)     /* DW2
1 #CN     (N6)
1 REDEFINE #CN
  2 #CN-A   (A6)
1 #LAST-CN       (N6)   /* DW2
1 #LAST-POL-NUM  (A16)   /* DW2
1 #LINES-SKIPPED (N3)
1 #DOC-TYPE-SUB  (A20)
1 #NUM-DOCS      (N7)
1 #PAGE-NUM      (N7)
1 #NUM-PAGES     (N7)
1 #M-E-NOTC          (L)
1 #M-E-NOTC-1ST-LINE (L)
1 #M-E-NOTC-ASTS     (L)
1 #M-E-NOTC-TOTAL-PAGE (L)
*
1 INPUT-FILE   (A81)
1 REDEFINE INPUT-FILE
  2 INPUT-FILE-X   (A1/81)   /* DW4
1 REDEFINE INPUT-FILE
  2 INP-POS-1      (A1)
  2 INP-POS-2-81  (A80)
  2 REDEFINE INP-POS-2-81
    3 INP-POS-2-81-X (A1/80)   /* DW7
  2 REDEFINE INP-POS-2-81
    3 INP-POS-2   (A1)
    3 INP-CMND    (A2)
    3 INP-FIL1    (A1)
    3 INP-ID      (A6)
    3 REDEFINE  INP-ID
      4 INP-CN-6-A (A6)
    3 REDEFINE  INP-ID
      4 INP-CN-5-A (A5)
    3 REDEFINE  INP-ID
      4 INP-CN-4-A (A4)
    3 REDEFINE  INP-ID
      4 INP-CN-3-A (A3)
    3 REDEFINE  INP-ID
      4 INP-CN-6   (N6)
    3 REDEFINE  INP-ID
      4 INP-CN-5   (N5)
    3 REDEFINE  INP-ID
      4 INP-CN-4   (N4)
    3 REDEFINE  INP-ID
      4 INP-CN-3   (N3)
    3 INP-FIL2    (A3)
    3 INP-FIL3    (A1)
    3 INP-SUFFIX  (A3)
    3 INP-17-20   (A4)
    3 INP-REF     (A3)
    3 INP-FIL4    (A34)
    3 INP-POL-NUM (A16) /* Policy Number                  /* DW2
    3 INP-FIL5    (A6)
  2 REDEFINE INP-POS-2-81   /* M/E Notice layout
    3 INP-NOTC-FIL1   (A44)
    3 REDEFINE INP-NOTC-FIL1
      4 INP-NOTC-FIL2  (A8)
      4 INP-NOTC-ASTS  (A14)
      4 INP-NOTC-FIL3  (A22)
    3 INP-NOTC-CN     (N6) /* Mailed to CN (Owner of pol) Usually Insured
    3 INP-NOTC-FIL4   (A1)
    3 INP-NOTC-FOR-CN (A6)    /* Insured CN if mailed to Owner
    3 INP-NOTC-FIL5   (A20)
    3 INP-NOTC-ME-IND (A2)   /* '~~' to indicate M/E Notices   /* DW2
*
1 OUTPUT-FILE  (A100)
1 #PARSED-LINE (A100)     /* DW4
1 REDEFINE #PARSED-LINE
  2 #PARSED-LINE-X (A1/100)   /* DW4
*
1 #1ST-REC     (L)
1 #1ST-TIME    (L)
1 #FOUND-REF   (L)
1 #LAST-ID     (A6)
1 #RECS-IN    (P7)
1 #RECS-OUT   (P7)
1 #PAGES-OUT   (P7)
1 #RECS-CLEARED (P7)
1 #RTRENEW     (L)          /* 20060118 - PM
1 #PDUP        (L)             /* DW11
*
1 #LINES-ON-A-PAGE   (N3)
*
END-DEFINE
*
READ WORK 1 ONCE RECORD #JCL-PARM
MOVE #JCL-DOC-TYPE TO #DOC-TYPE
WRITE 'TOP of ATHPXML Initial doc-type=' #DOC-TYPE
*
IF #DOC-TYPE = 'RTRN'       /* 20060118 - PM
  #RTRENEW := TRUE          /* 20060118 - PM
END-IF                      /* 20060118 - PM
*
IF #DOC-TYPE = 'PDUP'       /* DW11
  #PDUP := TRUE
END-IF

*
* IF #DOC-TYPE = 'CCEX' OR = 'CC2Q'   /* DW3
* IF #DOC-TYPE = 'CCEX' OR = 'CC2Q' OR = 'RTRN'   /* DW5
*   MOVE 'NOTC' TO #DOC-TYPE
* END-IF
*
IF #DOC-TYPE = 'CC2Q'               /* YK1
  MOVE 'CCRD' TO #DOC-TYPE          /* YK1
END-IF                              /* YK1
*
IF #DOC-TYPE = 'ASLT'               /* YK1
  MOVE 'ALLT' TO #DOC-TYPE          /* YK1
END-IF                              /* YK1
*
IF #DOC-TYPE = 'PADS'               /* DW3
  MOVE 'EZP' TO #DOC-TYPE
END-IF
*
READ WORK 1 ONCE RECORD #JCL-PARM
WRITE 'JCL-DATE-PARM =' #JCL-PARM
MOVE #JCL-PARM TO #PARM-MMDDYYYY
COMPRESS #JCL-YYYY #JCL-MM #JCL-DD INTO #PARM-YYYYMMDD LEAVING NO
*
IF #DOC-TYPE = 'TERM' OR = 'LOAN'                /* Use SYSTEM Date   DW10
  MOVE *DAT4U TO #TRANSFER-DATE
ELSE
  MOVE #PARM-MMDDYYYY TO #TRANSFER-DATE          /* Use Parm Date
END-IF
*
WRITE 'PARM DATE =' #PARM-YYYYMMDD  #PARM-MMDDYYYY 'FINAL DOC-TYPE=' #DOC-TYPE
  'Transfer date=' #TRANSFER-DATE
*
* * * * * * * REPORT HEADER * * * * * *
FORMAT      LS=145 PS=76
FORMAT (1)  LS=145 PS=76
FORMAT (2)  LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  '(2) AAFMAA Print lines deleted'
  5X 'DATE: '*DATX 5X 'TIME: ' *TIMX  //
*
RESET #ONLY-CHECK-CN                                 /* DW12
IF #PDUP OR #RTRENEW /* POL NUM may not match
  MOVE TRUE TO #ONLY-CHECK-CN
END-IF
*
MOVE TRUE TO #1ST-REC
READ WORK 2 RECORD INPUT-FILE    /* Count documents prior to processing
  ADD 1 TO #RECS-IN
  WRITE 'rec read' #RECS-IN 'is below'           /* DW11
  WRITE INPUT-FILE
*
  IF #1ST-REC
    RESET #1ST-REC
    IF INP-FIL1 = MASK (N) OR INP-POS-1 EQ '2'   /* PM8 & PM9 to match logic below
      MOVE INPUT-FILE TO INP-POS-2-81            /* SAG-AB 20060726
    END-IF                                                                /* PM8
**    IF NOT INP-POS-1 = '1' OR = #PAGE-TOP      /* SAG-AB 20060726
    MOVE #PAGE-TOP TO INP-POS-1                  /* SAG-AB 20060726
**    END-IF                                     /* SAG-AB 20060726
  END-IF
*
**  IF  ((INP-POS-1 = '1')   /* top of page      /* SAG-AB 20060726
**      OR  (INP-POS-1 = #PAGE-TOP))
  IF  (INP-POS-1 = #PAGE-TOP)   /* top of page
      AND (INP-POS-2-81 NE MASK ('TOTAL COUNTS')) /* M/E Notice total page  /* SAG-AB 20061106
**    AND (INP-POS-2-81 NE MASK (' TOTAL COUNTS')) /* M/E Notice total page /* SAG-AB 20061106
      AND (INP-NOTC-ASTS NE '**************')     /*Must be M/E Setup Page
    IF INP-POS-2 NE ' '   /* Must be top of M/E notice (ZIP Bar-Code)
      READ WORK 2 ONCE RECORD INPUT-FILE  /* GET NEXT REC for TOP OF PAG
      IF INP-NOTC-ASTS = '**************'
        ESCAPE TOP
      END-IF
    END-IF
**                                     /* SAG-AB 20061106 START
    IF INP-SUFFIX EQ 'L2R' OR EQ 'LAP' OR EQ 'LPV' OR EQ 'LPB' OR EQ 'LPF'
        OR #RTRENEW                       /* 20060117 - PAM
        OR #PDUP                          /* DW11
      WRITE 'Found PDUP DO not shift'
      IGNORE
    ELSE
      MOVE INPUT-FILE TO INP-POS-2-81
      RESET INP-POS-1
    END-IF                             /* SAG-AB 20061106 END
*
    RESET #CN                      /* DW1
    MOVE INP-POL-NUM TO #POL-NUM   /* DW2
    IF   (INP-NOTC-CN = MASK (NNNNNN)) /* Must be M/E Notc 1st Addr Lin
        AND (INP-NOTC-ME-IND = #ME-IND OR = #ME-IND-PDUP)     /* DW2
      IF INP-NOTC-FOR-CN = MASK (NNNNNN)  /* Notice sent to Owner
        MOVE INP-NOTC-FOR-CN TO #CN-A     /* Index with Insured
      ELSE                                /* Notices sent to Insured
        MOVE INP-NOTC-CN TO #CN           /* Index with Insured
      END-IF
      MOVE TRUE TO #M-E-NOTC
    ELSE
      RESET #M-E-NOTC
      IF INP-CN-6-A = MASK (NNNNNN)
        MOVE INP-CN-6 TO #CN
      ELSE
        IF INP-CN-5-A = MASK (NNNNN)
          MOVE INP-CN-5 TO #CN
        ELSE
          IF INP-CN-4-A = MASK (NNNN)
            MOVE INP-CN-4 TO #CN
          ELSE
            IF INP-CN-3-A = MASK (NNN)
              MOVE INP-CN-3 TO #CN
            ELSE
              WRITE INP-CN-6-A
              WRITE INP-CN-5-A
              WRITE INP-CN-4-A
              WRITE INP-CN-3-A
              WRITE 'CN format not found on' INP-ID 'Count Phase'   /* SAG-AB 20061106 excluded
                'on doc#' #NUM-DOCS 'on rec#' #RECS-IN              /* temporarily
              WRITE 'INT-NOTC-AST=' INP-NOTC-ASTS
              WRITE INPUT-FILE
            END-IF
          END-IF
        END-IF
      END-IF
    END-IF
*
*   DISPLAY #POL-NUM #LAST-POL-NUM #CN #LAST-CN
*   IF  (#POL-NUM NE #LAST-POL-NUM)    /* DW2
*    OR (#CN      NE #LAST-CN)         /* DW2
*   IF   ((#POL-NUM = #LAST-POL-NUM) AND (#LAST-POL-NUM NE ' ')) /* DW2
*    AND ((#CN      = #LAST-CN)      AND (#LAST-CN      NE 0  ))  /* DW2
    IF (#ONLY-CHECK-CN            /* POL NUM may not match for these /* DW12
        AND ((#CN = #LAST-CN) AND (#LAST-CN NE 0)))
        OR (NOT #ONLY-CHECK-CN
        AND ((#POL-NUM = #LAST-POL-NUM) AND (#LAST-POL-NUM NE ' '))
        AND ((#CN      = #LAST-CN)      AND (#LAST-CN      NE 0)))
      IGNORE
    ELSE
      ADD 1 TO #NUM-DOCS
    END-IF
*
    MOVE #POL-NUM TO #LAST-POL-NUM
    MOVE #CN      TO #LAST-CN
  END-IF
END-WORK
RESET #CN #POL-NUM #LAST-POL-NUM #LAST-CN #RECS-IN
*
WRITE 'num-docs =' #NUM-DOCS
*
MOVE '<?xml version="1.0" encoding="ISO-8859-1"?>'              /* PM13
  TO OUTPUT-FILE                                                /* PM13
PERFORM WRITE-PRINT-LINE                                        /* PM13
*
MOVE '<ns0:DALTransfer xmlns:ns0="http://DALSchema.Request">'
  TO OUTPUT-FILE
PERFORM WRITE-PRINT-LINE
*
COMPRESS '<TRANSFERDATE>' #TRANSFER-DATE  '</TRANSFERDATE>'     /* DW10
  INTO OUTPUT-FILE LEAVING NO
PERFORM WRITE-PRINT-LINE
*
COMPRESS '<TOTALDOCUMENTS>' #NUM-DOCS '</TOTALDOCUMENTS>'
  INTO OUTPUT-FILE LEAVING NO
PERFORM WRITE-PRINT-LINE
*
COMPRESS '<BATCHID>' '??' '</BATCHID>' INTO OUTPUT-FILE LEAVING NO
PERFORM WRITE-PRINT-LINE
* YK1 >
* COMPRESS '<DOCTYPE>' #DOC-TYPE '</DOCTYPE>' INTO OUTPUT-FILE LEAVING NO
COMPRESS '<DOCTITLE>' #DOC-TYPE '</DOCTITLE>' INTO OUTPUT-FILE LEAVING NO
PERFORM WRITE-PRINT-LINE
COMPRESS '<DESCRIPTION></DESCRIPTION>' INTO OUTPUT-FILE LEAVING NO
PERFORM WRITE-PRINT-LINE
COMPRESS '<ORGANIZATION>AAFMAA</ORGANIZATION>' INTO OUTPUT-FILE LEAVING NO
PERFORM WRITE-PRINT-LINE
COMPRESS '<MEMBERACCESSIBLE>false</MEMBERACCESSIBLE>' INTO OUTPUT-FILE LEAVING NO
* > YK1
PERFORM WRITE-PRINT-LINE
*
MOVE '<DOCUMENTS>' TO OUTPUT-FILE
PERFORM WRITE-PRINT-LINE
*
MOVE TRUE TO #1ST-TIME #1ST-REC
READ WORK 2 RECORD INPUT-FILE
  ADD +1 TO #RECS-IN
*
  IF #1ST-REC
    RESET #1ST-REC
    IF INP-FIL1 = MASK (N) OR INP-POS-1 EQ '2'           /* PM8 & SAG-AB
      MOVE INPUT-FILE TO INP-POS-2-81               /* SAG-AB 20060726
    END-IF                                               /* PM8
**    IF NOT INP-POS-1 = '1' OR = #PAGE-TOP         /* SAG-AB 20060726
    MOVE #PAGE-TOP TO INP-POS-1                     /* SAG-AB 20060726
**    END-IF                                        /* SAG-AB 20060726
  END-IF
**
  IF INP-POS-1 EQ #PAGE-TOP                        /* SAG-AB 20060726
    IGNORE                                          /* SAG-AB 20060726
  ELSE                                              /* SAG-AB 20060726
    MOVE INPUT-FILE TO INP-POS-2-81                 /* SAG-AB 20060726
    RESET INP-POS-1                                 /* SAG-AB 20060726
  END-IF                                            /* SAG-AB 20060726
*
  IF INP-POS-2 NE ' ' /* Could be Postal Bar CD or AAFM Bar code /*DW7
    WRITE (2) INPUT-FILE
    IF INP-POS-2 = '1'   /* 1 = AAFM BAR CODE      /* DW7
      FOR #I3 1 TO 70
        IF INP-POS-2-81-X (#I3) = '!'
          RESET INP-POS-2-81-X (#I3)               /* DW7
        ELSE
          IF INP-POS-2-81-X (#I3) = '*'
            MOVE '!' TO INP-POS-2-81-X (#I3)       /* DW7
          END-IF
        END-IF
      END-FOR
    ELSE
      RESET INP-POS-2-81
    END-IF
*
**  IF INP-POS-1 = '1' /* Must be M/E Notice since this is bar code line
    IF INP-POS-1 = #PAGE-TOP /* Must be M/E Notice since this is bar code line /* SAG-AB 20060726
      IGNORE           /* Page top will be developed on next line
    ELSE
      IF INP-POS-2 EQ '1'   /* bar code line - do not count as skipped
        IGNORE
      ELSE
        IF INP-POS-1 = '0'  /* skip 2 line
          ADD 2 TO #LINES-SKIPPED
        ELSE
          IF INP-POS-1 = '-'  /* skip 3 line
            ADD 3 TO #LINES-SKIPPED
          ELSE
            ADD 1 TO #LINES-SKIPPED
          END-IF
        END-IF
      END-IF
    END-IF
*
    IF INP-POS-2 EQ '1'   /* 1 = AAFM BAR CODE      /* DW7
      RESET INP-POS-2     /* SAG-AB 20060912 clear bar code indicator
    ELSE
      ADD 1 TO #RECS-CLEARED
      ESCAPE TOP
    END-IF
  END-IF
*
  RESET #M-E-NOTC-1ST-LINE
  IF   (INP-NOTC-CN = MASK (NNNNNN)) /* Must be M/E Notice 1st Addr Line
      AND (INP-NOTC-ME-IND = #ME-IND OR = #ME-IND-PDUP)   /* DW2
    MOVE #PAGE-TOP TO INP-POS-1
    MOVE TRUE TO #M-E-NOTC-1ST-LINE
*   WRITE 'Found M/E 1st line' INPUT-FILE
  END-IF
*
  IF   (INP-NOTC-ASTS = '**************') /*Must be M/E Setup Page
      AND (INP-NOTC-ME-IND = #ME-IND OR = #ME-IND-PDUP)   /* DW2
    MOVE '1' TO INP-POS-1
*   WRITE 'Found M/E **** 1st line A' INPUT-FILE
  END-IF
*
  IF  (INP-POS-1 = '1')   /* top of page
      OR (INP-POS-1 = #PAGE-TOP)
    ADD 1 TO #NUM-PAGES
    RESET #POL-NUM      /* DW2
    RESET #LINES-SKIPPED /* DW6
*   IF #NUM-PAGES GT 200
*     ESCAPE BOTTOM
*   END-IF
*
    IF INP-REF = 'REF'   /* TOP OF PAGE OF AD REF   ?????
      MOVE TRUE TO #FOUND-REF
      MOVE INP-ID TO #LAST-ID
    ELSE
      IF (#FOUND-REF) AND (INP-ID = #LAST-ID)
        RESET #FOUND-REF
        ESCAPE TOP
      END-IF
    END-IF
*
    RESET #M-E-NOTC-TOTAL-PAGE
    IF INP-POS-2-81 = MASK (' TOTAL COUNTS') /* M/E Notice total page
      MOVE TRUE TO #M-E-NOTC-TOTAL-PAGE
*     WRITE 'Found Notc Total Page'
      ESCAPE TOP
    END-IF
*
    IF   (INP-NOTC-ASTS = '**************') /* Must be M/E Setup Page
        AND (INP-NOTC-ME-IND = #ME-IND OR = #ME-IND-PDUP)   /* DW2
      MOVE TRUE TO #M-E-NOTC-ASTS
*     WRITE 'Found M/E **** 1st line B' INPUT-FILE
      ESCAPE TOP
    ELSE
      RESET #M-E-NOTC-ASTS
    END-IF
*
    RESET #CN
    MOVE INP-POL-NUM TO #POL-NUM   /* DW2
    IF #M-E-NOTC-1ST-LINE
*     DISPLAY INP-NOTC-CN INP-NOTC-FOR-CN
      IF INP-NOTC-FOR-CN = MASK (NNNNNN)  /* Notice sent to Owner
        MOVE INP-NOTC-FOR-CN TO #CN-A     /* Index with Insured
      ELSE                                /* Notices sent to Insured
        MOVE INP-NOTC-CN TO #CN           /* Index with Insured
      END-IF
*
      MOVE TRUE TO #M-E-NOTC
    ELSE
      RESET #M-E-NOTC
      IF INP-CN-6-A = MASK (NNNNNN)
        MOVE INP-CN-6 TO #CN
      ELSE
        IF INP-CN-5-A = MASK (NNNNN)
          MOVE INP-CN-5 TO #CN
        ELSE
          IF INP-CN-4-A = MASK (NNNN)
            MOVE INP-CN-4 TO #CN
          ELSE
            IF INP-CN-3-A = MASK (NNN)
              MOVE INP-CN-3 TO #CN
            ELSE
              WRITE 'CN format not found on' INP-ID 'Process Phase'
            END-IF
          END-IF
        END-IF
      END-IF
    END-IF
*
    PERFORM DEVELOPE-SUB-TYPE
*
    WRITE 'curr-cn=' #CN 'last-cn=' #LAST-CN
      'curr-pol-num=' #POL-NUM 'last-pol-num=' #LAST-POL-NUM
*
    IF (#ONLY-CHECK-CN            /* POL NUM may not match for these /* DW11/DW12
        AND ((#CN = #LAST-CN) AND (#LAST-CN NE 0)))
        OR (NOT #ONLY-CHECK-CN
        AND ((#POL-NUM = #LAST-POL-NUM) AND (#LAST-POL-NUM NE ' '))    /* DW11
        AND ((#CN      = #LAST-CN)      AND (#LAST-CN      NE 0)))
      PERFORM CLOSE-PAGE
    ELSE
      IF  (#LAST-POL-NUM NE ' ')
          OR (#LAST-CN      NE 0)
        PERFORM CLOSE-PAGE
        PERFORM CLOSE-DOCUMENT
        RESET #PAGE-NUM
      END-IF
*
      MOVE '<DOCUMENT>' TO OUTPUT-FILE
      PERFORM WRITE-PRINT-LINE
*
      COMPRESS '<CN>' #CN '</CN>' INTO OUTPUT-FILE LEAVING NO
      PERFORM WRITE-PRINT-LINE
*
      IF #POL-NUM NE ' '                                    /* DW2
        COMPRESS '<POL-NUM>' #POL-NUM '</POL-NUM>'          /* DW2
          INTO OUTPUT-FILE LEAVING NO
        PERFORM WRITE-PRINT-LINE
      END-IF
*
      COMPRESS '<PAGES numPages="' '??' '">' INTO OUTPUT-FILE LEAVING NO
      PERFORM WRITE-PRINT-LINE
    END-IF
*
    MOVE #POL-NUM TO #LAST-POL-NUM
    MOVE #CN      TO #LAST-CN
    ADD 1 TO #PAGE-NUM
*
    COMPRESS '<PAGE number="' #PAGE-NUM '">' INTO OUTPUT-FILE LEAVING NO
    PERFORM WRITE-PRINT-LINE
*
    MOVE '<BODY>' TO OUTPUT-FILE
    PERFORM WRITE-PRINT-LINE
*
    ADD 1 TO #PAGES-OUT
    RESET #LINES-ON-A-PAGE
    RESET INP-POS-1
*
    IF #1ST-TIME   /* no page top on 1st record
      RESET #1ST-TIME
    ELSE
      RESET INP-POS-1   /* aafm top of page
    END-IF
  ELSE
    IF  #M-E-NOTC-ASTS       /* SKIP all M/E Setup pages
        OR #M-E-NOTC-TOTAL-PAGE /* SKIP all M/E Total pages
      ESCAPE TOP
    END-IF
*
    IF   (INP-POS-1 = ' ')
        AND (INP-POS-2-81 = ' ')    /* Skip 1 line
      ADD 1 TO #LINES-SKIPPED
      ESCAPE TOP
    END-IF
*
    IF   (INP-POS-1 = '0')  /* skip 2 line
        AND (INP-POS-2-81 = ' ')
      ADD 2 TO #LINES-SKIPPED
      ESCAPE TOP
    END-IF
*
    IF   (INP-POS-1 = '-')  /* skip 3 line
        AND (INP-POS-2-81 = ' ')
      ADD 3 TO #LINES-SKIPPED
      ESCAPE TOP
    END-IF
*
    IF   (INP-POS-1 = '0')  /* skip 2 lines with current data
        AND (INP-POS-2-81 NE ' ')
      ADD 1 TO #LINES-SKIPPED
*     PERFORM LINES-SKIPPED-TEST
      RESET INP-POS-1
    END-IF
*
    IF   (INP-POS-1 = '-')  /* skip 3 lines with current data
        AND (INP-POS-2-81 NE ' ')
      ADD 2 TO #LINES-SKIPPED
*     PERFORM LINES-SKIPPED-TEST
      RESET INP-POS-1
    END-IF
*
    PERFORM LINES-SKIPPED-TEST
  END-IF
*
  PERFORM PARSE-INPUT-FILE     /* DW4
  COMPRESS '<LINE>' #PARSED-LINE '</LINE>' INTO OUTPUT-FILE LEAVING NO
  PERFORM WRITE-PRINT-LINE
END-WORK
*
IF #RECS-IN GT 0   /* Close out prior document
  PERFORM CLOSE-PAGE
  PERFORM CLOSE-DOCUMENT
END-IF
*
MOVE '</DOCUMENTS>' TO OUTPUT-FILE
PERFORM WRITE-PRINT-LINE
*
MOVE '</ns0:DALTransfer>' TO OUTPUT-FILE
PERFORM WRITE-PRINT-LINE
*
WRITE  'TOTAL RECS read    =' #RECS-IN
WRITE  'TOTAL RECS written =' #RECS-OUT
WRITE  'TOTAL pages out    =' #PAGES-OUT
WRITE  'TOTAL pages written=' #NUM-PAGES
WRITE  'TOTAL Num Documents=' #NUM-DOCS
WRITE  'TOTAL RECS cleared =' #RECS-CLEARED
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LINES-SKIPPED-TEST
* * * * * * * * * * * * * * * * * *
*
IF #LINES-SKIPPED NE 0
  COMPRESS '<LINE break="' #LINES-SKIPPED '"/>'
    INTO OUTPUT-FILE LEAVING NO
  PERFORM WRITE-PRINT-LINE
  RESET #LINES-SKIPPED
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE CLOSE-PAGE
* * * * * * * * * * * * * *
*
MOVE '</BODY>' TO OUTPUT-FILE
PERFORM WRITE-PRINT-LINE
*
MOVE '</PAGE>' TO OUTPUT-FILE
PERFORM WRITE-PRINT-LINE
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CLOSE-DOCUMENT
* * * * * * * * * * * * * * * * *
*
MOVE '</PAGES>' TO OUTPUT-FILE
PERFORM WRITE-PRINT-LINE
MOVE '</DOCUMENT>' TO OUTPUT-FILE
PERFORM WRITE-PRINT-LINE
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE DEVELOPE-SUB-TYPE
* * * * * * * * * * * * * * * * * *
*
IF #M-E-NOTC               /* M/E Prem/Int/Etc notice
  MOVE 'M/E Notice' TO #DOC-TYPE-SUB
ELSE
  IF INP-CMND = 'ST'    /* Status Screen
    MOVE 'Status' TO #DOC-TYPE-SUB
  ELSE
    IF   (INP-CMND = 'AD')   /* Loan Pmt letter
        AND (INP-SUFFIX = MASK ('LP'))
      MOVE 'Loan-pmt' TO #DOC-TYPE-SUB
    ELSE
      IF   (INP-CMND = 'AD')   /* Auto Lapse letter
          AND (INP-SUFFIX = 'LAP')
        MOVE 'Lapse-Ltr' TO #DOC-TYPE-SUB
      ELSE
        IF   (INP-CMND = 'AD')   /* Loan Pmt Letter
            AND (INP-SUFFIX = MASK ('LP'))
          MOVE 'Loan-Pmt-Ltr' TO #DOC-TYPE-SUB
        ELSE
          IF   (INP-CMND = 'CI')   /* Info from CI on an Auto Lapse
            MOVE 'Lapse-Info' TO #DOC-TYPE-SUB
          ELSE
            IF   (INP-SUFFIX = 'RTR')  /* Info from ATHPRTCK  /* DW5
              MOVE '5-YR Renewal' TO #DOC-TYPE-SUB
            ELSE
              IF   (INP-SUFFIX = 'PDU')  /* Info from ATHP07P0  /* DW11
                MOVE 'Paid-Up Notice' TO #DOC-TYPE-SUB
              ELSE
                MOVE 'Unknown' TO #DOC-TYPE-SUB   /* Unknown type
              END-IF
            END-IF
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE WRITE-PRINT-LINE
* * * * * * * * * * * * * * * * *
*
WRITE WORK 3 OUTPUT-FILE
ADD +1 TO #RECS-OUT
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE PARSE-INPUT-FILE     /* DW4
* * * * * * * * * * * * * * * * *
*
IF INP-NOTC-ME-IND = #ME-IND OR = #ME-IND-PDUP   /* DW9
  RESET INP-NOTC-ME-IND
END-IF
*
RESET #PARSED-LINE #I2
*
FOR #I1 1 TO 81
  IF INPUT-FILE-X (#I1) = '&' OR = '<' OR = '>'
    ADD 1 TO #I2
    MOVE '&' TO #PARSED-LINE-X (#I2)
    IF INPUT-FILE-X (#I1) = '&'
      MOVE 'a' TO #PARSED-LINE-X (#I2 + 1)
      MOVE 'm' TO #PARSED-LINE-X (#I2 + 2)
      MOVE 'p' TO #PARSED-LINE-X (#I2 + 3)
      ADD 3 TO #I2
    END-IF
*
    IF INPUT-FILE-X (#I1) = '<'
      MOVE 'l' TO #PARSED-LINE-X (#I2 + 1)
      MOVE 't' TO #PARSED-LINE-X (#I2 + 2)
      ADD 2 TO #I2
    END-IF
*
    IF INPUT-FILE-X (#I1) = '>'
      MOVE 'g' TO #PARSED-LINE-X (#I2 + 1)
      MOVE 't' TO #PARSED-LINE-X (#I2 + 2)
      ADD 2 TO #I2
    END-IF
*
    ADD 1 TO #I2
    MOVE ';' TO #PARSED-LINE-X (#I2)
    WRITE 'Parse=' INPUT-FILE #PARSED-LINE
  ELSE
    ADD 1 TO #I2
    MOVE INPUT-FILE-X (#I1) TO #PARSED-LINE-X (#I2)
  END-IF
END-FOR
*
END-SUBROUTINE
*
END
