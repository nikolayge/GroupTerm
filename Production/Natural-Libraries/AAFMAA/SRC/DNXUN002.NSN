* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
**************************************************************************
* SUBPROGRAM-ID: DNXUN002
* DESCRIPTION:   Entitlements
**************************************************************************
*        MODIFICATION LOG
**************************************************************************
* USER   DATE      TAG  REASON
* NGG  12/22/2010  None Creation   D3120SBA
* bz   12/27/2010  bz1  Various changes
**************************************************************************
*
DEFINE DATA
PARAMETER
1 #ISN              (P8)
1 #CLERK-ID         (A3)
1 #MODE             (A1)
1 #MSG                       (A72) 1 redefine #MSG
  2 #GLOBAL-USER-COMPANY     (A1)
  2 #GLOBAL-SECURITY-CODE    (N2)
LOCAL USING A-CTDATA
LOCAL USING GPRA0004           /* Parameters passed to write transaction log
LOCAL
1 #H1                          (A78)
1 #H2                          (A78)
1 #H3                          (A78)
1 #ID-NUMBER                   (N6)
1 #CONTACT-ID                  (N8)
1 #RANK-TEXT                   (A67/2)

1 #SCREEN
  2 #MIL-SBP-OPT                 (A1)
  2 #MIL-SBP-OPT-TXT             (A30)       /* bz1
  2 #MIL-SBP-AMT                 (N5)        /* bz1
  2 #RETIRED-PAY-AMT             (A5)
  2 #VA-DIS-PCT                  (N3)        /* bz1
  2 #VA-DIS-DATE                 (A8)
  2 REDEFINE #VA-DIS-DATE
    3 #MM   (A2)
    3 #DD   (A2)
    3 #YYYY (A4)
  2 #VA-CLM-NO                   (A12)
  2 #SVC-CONN                    (A1)
  2 #BURIAL-ALLOWANCE            (N4.2)
  2 #LAST-DATE-UPD               (A10)
  2 #LAST-USER-UPD               (A20)
  2 #SVC-CONN-TXT                (A20)
  2 #BURIAL-LOC                  (A1)
  2 #BURIAL-LOC-TXT              (A20)
  2 #BURIAL-INFO                 (A35)
1 #POS                           (I4)
1 #MAP-CV                        (C)
1 #ERRORS                        (L)
1 #UPDATED                       (L)
*
1 BLANK       (A1) CONST <' '>
1 CONTACT-V VIEW OF A-CONTACTS
  2 CONTACT-ID
  2 ID-NUMBER
  2 RANK-ID
  2 SPECIAL-PAY-IND
  2 BURIAL-LOC       (A1)
  2 BURIAL-INFO      (A35)
  2 LAST-USER-UPD
  2 LAST-DATE-UPD 2 REDEFINE LAST-DATE-UPD
    3 #LDU-YYYY  (A4)
    3 #LDU-MM    (A2)
    3 #LDU-DD    (A2)
*
1 #DISABILITY-PCT             (P3)
1 STATUS-V VIEW OF A-STATUS
  2 DISABILITY-PCT            (P1.2)
  2 VA-DISABILITY-PCT         (P1.2)
  2 REDEFINE VA-DISABILITY-PCT
    3 VA-DISABILITY-PCT-999    (P3)
  2 VA-DISABLE-DATE           (N8)
  2 REDEFINE VA-DISABLE-DATE
    3 #DIS-DATE-YY (A4)
    3 #DIS-DATE-MM (A2)
    3 #DIS-DATE-DD (A2)
  2 VA-CLAIM-NUMBER           (A12)
  2 RETIRED-PAY-AMT           (P5.0)
  2 MIL-SBP-OPT               (A1)
  2 MIL-SBP-AMT               (P5)
  2 LAST-FM-DATE
  2 DTS-DATN
  2 DTS-TIMN

1 ST-V VIEW OF A-STATUS
  2 RANK
  2 MILITARY-STATUS
  2 MILITARY-SERVICE
  2 CHIEF-OF-STAFF-IND
  2 DEATH-SERVICE-CON
*
1 #CN-TEXT                     (A2)
1 #CI-TEXT                     (A2)
1 #PROTECT                     (A1)
1 P_PARMS
  2 P_ERROR_NUM (I4) /*ERROR NUMBER
  2 P_ERROR_LINE (I4) /*ERROR LINE
  2 P_ERROR_PROGRAM (A32)
  2 P_ERROR_LIB (A32)
  2 P_ERROR_DBID (I4)
  2 P_ERROR_FNR (I4)
  2 P_ERROR_TIME (T)
  2 P_ERROR_PGM_TYPE (A1)
  2 P_ERROR_PGM_TYPE_LONG (A11)
  2 P_ERROR_LANG (I4)
  2 P_ERROR_LEVEL (I4)
  2 P_ERROR_CLASS (I1)
  2 P_ERROR_TYPE (I1)

1 #STATUS-ISN          (P8)
1 #CGA-USER-COMPANY    (A1)
1 #D                   (D)
1 #x                   (N2)
END-DEFINE
*
DEFINE WINDOW SPI-Text
  SIZE 11 * 53
  BASE 10/3
  FRAMED ON POSITION SYMBOL AUTO
*
DEFINE WINDOW Contact
  SIZE 20 * 74
  BASE 4/3
  FRAMED ON POSITION SYMBOL AUTO
*
SET KEY ENTR NAMED 'Save'
SET KEY PF1=HELP
SET KEY PF3 NAMED 'Exit'
SET KEY PF7 NAMED 'Prev'
SET KEY PF8 NAMED 'Next'
SET KEY PF12 NAMED 'Reln'
*
PERFORM INITIAL-SETTINGS

DEFINE INITIAL-SETTINGS
/*     ================
#CGA-USER-COMPANY := #GLOBAL-USER-COMPANY
RESET #SCREEN #MSG

GET CONTACT-V #ISN
#CONTACT-ID := CONTACT-V.CONTACT-ID
#ID-NUMBER  := CONTACT-V.ID-NUMBER
*
IF F-CONTACT-INFO(<#CONTACT-ID,F-CONTACT-DATA>)
  IGNORE
END-IF
*
CALLNAT 'ADRN0004' #CONTACT-ID #H1 #H2
*
IF #CONT-ID-NUMBER > 0
  MOVE 'CN' TO #CN-TEXT
END-IF
MOVE 'CI' TO #CI-TEXT
*
CALLNAT 'DNXVN001' #CONTACT-ID #ISN #RANK-TEXT (*)
*
FIND (1) STATUS-V WITH ID-NUMBER = CONTACT-V.ID-NUMBER
  #STATUS-ISN := *ISN (0165)
END-FIND

END-SUBROUTINE

REPEAT
  PERFORM LOAD-DATA
  REPEAT
    INPUT WITH TEXT #MSG MARK #POS USING MAP 'DNXUM002'
    DECIDE ON FIRST VALUE OF *PF-KEY
      VALUE 'PF3','PF7','PF8'
        SET WINDOW OFF
        ESCAPE BOTTOM
      VALUE 'ENTR'
        PERFORM INPUT-VALIDATION
      VALUE 'PF12'
        CALLNAT 'GPF12SXX' #CONTACT-ID
        ESCAPE TOP
      NONE VALUE
      IGNORE                         /* bz1
*      print *PF-KEY
    END-DECIDE
    UNTIL NOT #ERRORS
  END-REPEAT
  IF *PF-KEY NE 'PF3'
    PERFORM DB-UPDATE
    IF #UPDATED
      #MSG := 'Record successfully updated'
      IF #CLERK-ID = 'NG'
       IGNORE
*      PRINT #MSG / CONTACT-V
      END-IF
      END TRANSACTION
    ELSE
      #MSG := 'No updates'
      IF #CLERK-ID = 'NG'
         IGNORE
*        PRINT #MSG
      END-IF
      BACKOUT TRANSACTION
    END-IF
  END-IF
  UNTIL *PF-KEY = 'PF3' OR= 'PF7' OR= 'PF8'
END-REPEAT
*
***************************
DEFINE SUBROUTINE LOAD-DATA
***************************
MOVE (AD=U) TO #MAP-CV
GET CONTACT-V #ISN

#LAST-USER-UPD := FUNCTION-CLERK-NAME (< #CLERK-ID >)
* #LAST-DATE-UPD := CONTACT-V.LAST-DATE-UPD
COMPRESS #LDU-MM '/' #LDU-DD '/' #LDU-YYYY
  INTO #LAST-DATE-UPD LEAVING NO

GET STATUS-V #STATUS-ISN

* IF VA-DISABILITY-PCT NE 0               /* bz1
   #VA-DIS-PCT := VA-DISABILITY-PCT-999   /* bz1
* ELSE                                    /* bz1
*  RESET #VA-DIS-PCT                      /* bz1
* END-IF                                  /* bz1
MOVE VA-CLAIM-NUMBER TO #VA-CLM-NO
MOVE MIL-SBP-OPT TO #MIL-SBP-OPT
IF MIL-SBP-AMT NE 0
  MOVE MIL-SBP-AMT TO #MIL-SBP-AMT
ELSE
  RESET #MIL-SBP-AMT
END-IF
IF STATUS-V.VA-DISABLE-DATE NE 0
*  #VA-DIS-DATE := STATUS-V.VA-DISABLE-DATE
  COMPRESS #DIS-DATE-MM  #DIS-DATE-DD #DIS-DATE-YY
    INTO #VA-DIS-DATE LEAVING NO
ELSE
  RESET #VA-DIS-DATE
END-IF
#BURIAL-LOC  := CONTACT-V.BURIAL-LOC
IF #BURIAL-LOC = BLANK
  #BURIAL-LOC := 'U'
END-IF
#BURIAL-INFO := CONTACT-V.BURIAL-INFO
IF #SVC-CONN NE 'Y'
  #BURIAL-ALLOWANCE := 300
ELSE
  #BURIAL-ALLOWANCE := 2000
END-IF
#BURIAL-LOC-TXT  := FUNCTION-CODE-1-DESC (< '037', #BURIAL-LOC >)
#SVC-CONN-TXT    := FUNCTION-CODE-1-DESC (< '030', #SVC-CONN >)
#MIL-SBP-OPT-TXT := FUNCTION-CODE-1-DESC (< '031', #MIL-SBP-OPT >)

#POS := POS ( #MIL-SBP-OPT )   /* bz1

END-SUBROUTINE
*********************************
DEFINE SUBROUTINE INPUT-VALIDATION
*********************************
*
RESET #ERRORS
#MSG := FUNCTION-CV-CHECK (<'030',#SVC-CONN>)
IF #MSG NE BLANK
  #ERRORS := TRUE
  #POS := POS ( #SVC-CONN )
  ESCAPE ROUTINE
END-IF
*
IF #MIL-SBP-OPT NE BLANK
  #MSG := FUNCTION-CV-CHECK (<'031',#MIL-SBP-OPT>)
  IF #MSG NE BLANK
    #ERRORS := TRUE
    #POS := POS ( #MIL-SBP-OPT )
    ESCAPE ROUTINE
  END-IF
* ELSE                                       /* bz1
*   #MSG := 'Please enter SBP-Option'        /* bz1
*   #ERRORS := TRUE                          /* bz1
*   #POS := POS ( #MIL-SBP-OPT )             /* bz1
*   ESCAPE ROUTINE                           /* bz1
END-IF
*
* IF #MIL-SBP-AMT IS (N5) IGNORE
* ELSE                                       /* bz1
*   #MSG := 'Please enter numeric amount'    /* bz1
*   #ERRORS := TRUE                          /* bz1
*   #POS := POS ( #MIL-SBP-AMT )             /* bz1
*   ESCAPE ROUTINE                           /* bz1
* END-IF
* IF #VA-DIS-PCT IS (N3) IGNORE
* ELSE                                       /* bz1
*   #MSG := 'Please enter VA-Dis'            /* bz1
*   #ERRORS := TRUE                          /* bz1
*   #POS := POS ( #VA-DIS-PCT )              /* bz1
*   ESCAPE ROUTINE                           /* bz1
* END-IF
IF #VA-DIS-DATE <> ' '                       /* bz1
  IF #VA-DIS-DATE = MASK (MMDDYYYY)
     move edited #VA-DIS-DATE to #D (EM=MMDDYYYY)
  ELSE                                       /* bz1
    #MSG := 'Please enter VA-Dis-Date'       /* bz1
    #ERRORS := TRUE                          /* bz1
    #POS := POS ( #VA-DIS-DATE )             /* bz1
    ESCAPE ROUTINE                           /* bz1
  END-IF
  IF #D > *DATX
    #MSG := 'The VA-Dis-Date can not be future date'
    #ERRORS := TRUE
    #POS := POS ( #VA-DIS-DATE )
    ESCAPE ROUTINE
  END-IF
END-IF                                       /* bz1
*
EXAMINE #BURIAL-INFO FOR '?' GIVING POSITION #x                    /* bz1
IF #x = 0 EXAMINE #BURIAL-INFO FOR '/' GIVING POSITION #x END-IF   /* bz1
IF #x = 0 EXAMINE #BURIAL-INFO FOR '!' GIVING POSITION #x END-IF   /* bz1
IF #x = 0 EXAMINE #BURIAL-INFO FOR '\' GIVING POSITION #x END-IF   /* bz1

IF #x <> 0                                                         /* bz1
  #MSG := 'The Burial Info containes special character'            /* bz1
  #ERRORS := TRUE                                                  /* bz1
  #POS := POS ( #BURIAL-INFO )                                     /* bz1
  ESCAPE ROUTINE                                                   /* bz1
END-IF                                                             /* bz1


END-SUBROUTINE
***********************************
DEFINE SUBROUTINE DB-UPDATE
**********************************
RESET #UPDATED
*
GET CONTACT-V #ISN
CONTACT-V.BURIAL-LOC := #BURIAL-LOC
CONTACT-V.BURIAL-INFO := #BURIAL-INFO
UPDATE (0336)
*
PERFORM UPDATE-STATUS/TRANS-REG
*
#UPDATED := TRUE
END TRANSACTION
*
END-SUBROUTINE
*****************************************
DEFINE SUBROUTINE UPDATE-STATUS/TRANS-REG
*****************************************
GET STATUS-V #STATUS-ISN
* PRINT #SCREEN
* #DISABILITY-PCT := VAL ( #VA-DIS-PCT )
* #DISABILITY-PCT :=  #VA-DIS-PCT                  /* bz1
* VA-DISABILITY-PCT  := #DISABILITY-PCT / 100      /* bz1

VA-DISABILITY-PCT-999 := #VA-DIS-PCT                   /* bz1

COMPRESS #YYYY #MM #DD INTO #VA-DIS-DATE LEAVING NO
IF #VA-DIS-DATE = ' '
   VA-DISABLE-DATE := 0
ELSE
   VA-DISABLE-DATE := VAL (#VA-DIS-DATE)
END-IF
VA-CLAIM-NUMBER := #VA-CLM-NO
* RETIRED-PAY-AMT := VAL ( #RETIRED-PAY-AMT )
* MIL-SBP-AMT     := VAL ( #MIL-SBP-AMT )
MIL-SBP-AMT     :=  #MIL-SBP-AMT
MIL-SBP-OPT     := #MIL-SBP-OPT
* print status-v
UPDATE (0350)

END-SUBROUTINE
*********************************
DEFINE SUBROUTINE WRITE-TRANS-REG
*********************************
CALLNAT 'GPRN0004'
  #TR-FIELDS #SYNC-FIELD-TABLE(*)
  #OLD-DATA-TABLE(*) #NEW-DATA-TABLE(*)
RESET #FIELD-DESCRIPTION(*)
*
END-SUBROUTINE
*
ON ERROR
  CALLNAT 'USR2001N' P_PARMS  /* Get the actual error line details
  COMPRESS 'Application error' P_ERROR_NUM 'In program' P_ERROR_PROGRAM
    'Error line' P_ERROR_LINE
    INTO #MSG
  INPUT //// #MSG (AD=IO)
    / 'Please call production support'
  #MSG := 'PF3'
  ESCAPE ROUTINE
END-ERROR

END

