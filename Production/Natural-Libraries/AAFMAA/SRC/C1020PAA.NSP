* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: C1020PAA
*  THIS PROGRAM DISPLAYS AN ADDRESS SCREEN FOR THE APPLICATION
*    TRACKING 'I' PEOPLE
*
* MODIFICATIONS:
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE       TAG  REASON                                          *
* JAKL 0689            ADD THANK YOU LINE  PER MITCHELL                *
* JAK  0789            ALLOW FIND ON SSN   PER MITCHELL                *
* JAK  0789            ADD RETD TO NAME FIELD PER MITCHELL             *
* DRW  1289            GO TO AV AFTER THIS SCREEN                      *
* JAK  0190            CHANGE WORDING ONSCREEN PER MITCHELL            *
* DRW  10122005   DW1  make AA xxxxx WIN show address higher           *
* PAM  03112005   PM1  Reset display fields for GRANKSXX               *
* DRW  09272007   DW2  Remove Suffix LTR logic                         *
* PAM  03/06/2009 PM3  Use table instead so lower case stays           *
* NGG  20130812   NG1  Address normalization
* TMT  10/15/5013 TT1  ADDRESS NORMALIZATION
************************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX     /* WORK FIELDS FOR GONERCXX - ERROR ROUTINE
LOCAL USING C1020LAA
LOCAL USING ADDA0001    /*TT1
LOCAL
1 ST-V VIEW OF A-STATUS
  2 RANK       (A3)
  2 NAME       (A25)
  2 MILITARY-STATUS (A1)
1 #REF-MBR-N    (N6)
1 REDEFINE #REF-MBR-N
  2 #REF-MBR    (A6)
1 #FULL-RANK       (A23)
1 #RANK-DISPLAY    (A5)
1 #XXX            (A3) INIT <'XXX'>
1 #EDIT-INVALID (L)
1 #RANK-LITERAL (A23)
1 #DISPL        (P2)
1 #PASS-COMMAND (A2)   INIT <'AD'>
*
1 #ERROR-MESSAGE      (A25)
1 #AD-FF-3  (A78)
1 #AD-FF-4  (A78)
1 #AD-FF-5  (A78)       1 #AD-FF-6  (A78)
1 #AD-FF-12 (A78)                                  /* DW2
1 #AD-FF-13 (A78)
1 #AD-FF-14 (A78)
1 #AD-FF-15 (A78)
1 #AD-FF-16 (A78)
1 #AD-FF-17 (A78)
1 #AD-FF-18 (A78)
1 #AD-FF-19 (A78)
1 #AD-FF-20 (A78)
1 #AD-FF-21 (A78)
1 #AD-FF-22 (A78)
1 #AD-FF-23 (A78)
1 #AD-FF-24 (A78)
*
1 #AA-LINE  (A78/12)                               /* PM3
*
1 #CORR-MSG  (A50) INIT<'THIS CORRESPONDENCE HAS BEEN PREPARED FOR'
  -' YOU BY:'>
1 #INVALID (L)
1 #CLERK-ABB-NAME-PASS   (A20)
1 #CLERK-ABB-PASS   (A3)
1 #FORMATED-NAME   (A45)
1 #SECOND-ADDRESS (A40)
1 #THIRD-ADDRESS  (A40)
1 #FORMAT-CN      (A7)
1 #FORMAT-MEMSHIP (A2)
*
1 #FND-AT  (L)
1 #I1      (I2)
1 #DEL       (A1) CONST<','>
1 #LAST-NAME    (A25)
1 #FIRST/MID    (A25)
1 #SUFFIX       (A25)
1 #EXTRA1      (A25)
1 #EXTRA2      (A25)
*
1 #HOLD-EDIT-ZIP   (A10)
1 REDEFINE #HOLD-EDIT-ZIP
  2 #HOLD-ZIP      (A5)
  2 #HOLD-ZIP2     (A5)
*
1 #HOLD-TEMP-NAME  (A25)
1 #HOLD-ID         (N9)
1 #HOLD-SUFFIX     (A3)
1 #BEG-ID          (N6)
1 #END-ID          (N6)
1 #SCR-TEXT        (A76)
1 #TEXT            (A78/22)
1 #S-X             (I2)
1 #AA-CNT          (P3)
1 #AA-TYPE         (A1) INIT <'I'>
*
END-DEFINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
INCLUDE GONERCXX      /* NATURAL ERROR ROUTINE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*
IF #CGA-SCR-SUFFIX = 'DAT'
    AND (#CGA-SCR-ID = 0)
  MOVE '*' TO #CGA-SCR-COMMAND
  INPUT MARK *#BEG-ID USING MAP 'C1022MAA'   /*TT1
*
  IF #CGA-SCR-COMMAND NE '*'
    FETCH 'G1000PXX'
  END-IF
*
  IF  (#BEG-ID LT 500000)
      OR (#BEG-ID GT 700000)
    REINPUT 'STARTING ID-NUMBER MUST BE BETWEEN 500000 AND 700000'
      MARK *#BEG-ID
  END-IF
*
  IF #END-ID LT #BEG-ID
    REINPUT 'ENDING ID-NUMBER MUST BE GTR THAT BEG ID'
      MARK *#END-ID
  END-IF
*
  IF (#END-ID - #BEG-ID) GT 50
    REINPUT 'CALL DAVE MEYER OR EDS TO PROCESS MORE THAN 50'
      MARK *#END-ID
  END-IF
*
  IF NOT #AA-TYPE = 'I' OR = 'P' OR = 'C'
    REINPUT 'TYPE MUST BE "I" OR "P" ir "C"'
      MARK *#AA-TYPE
  END-IF
*
  RESET #CGA-SCR-COMMAND
    #CGA-SCR-ID
    #CGA-SCR-SUFFIX
*
  REPEAT UNTIL APPL-TRACK-V.ID-NUMBER GT #END-ID
    RESET #AA-CNT
    RESET #S-X
    RESET #TEXT (*)
*
    READ APPL-TRACK-V BY ID-NUMBER FROM #BEG-ID
      IF #AA-TYPE = 'C'   /* only show CAP's
*       IF APPL-SOURCE NE 'CAP'
        IF CAP-IND NE 'Y'
          ESCAPE TOP
        END-IF
      ELSE
        IF ACTION-FLAG NE #AA-TYPE
*        OR (APPL-SOURCE = 'CAP')
            OR (CAP-IND = 'Y')
          ESCAPE TOP
        END-IF
      END-IF
*
      ADD 1 TO #AA-CNT
      IF  (#AA-CNT GT 3)
          OR (ID-NUMBER GT #END-ID)
        ESCAPE BOTTOM
      END-IF
*
      PERFORM PREPARE-INFO
      PERFORM FORMAT-AA-DAT
    END-READ
*
    IF #AA-CNT = 0
      MOVE 'NO "AA" RECORDS FOUND' TO #SCR-TEXT
    END-IF
*
    INPUT TEXT #SCR-TEXT USING MAP 'C1021MAA'
*
    IF  (#CGA-SCR-COMMAND NE ' ')
        OR (APPL-TRACK-V.ID-NUMBER = 0)
      ESCAPE BOTTOM
    END-IF
*
    MOVE APPL-TRACK-V.ID-NUMBER TO #BEG-ID
  END-REPEAT
*
  IF #CGA-SCR-COMMAND = ' '
    MOVE 'AA' TO #CGA-SCR-COMMAND
    MOVE 'DAT' TO #CGA-SCR-SUFFIX
  END-IF
*
  FETCH 'G1000PXX'
END-IF
*
IF #CGA-SCR-ID LT 500000
  INPUT TEXT 'NOT A VALID ID' MARK *#CGA-SCR-ID  USING MAP'G1000MXX'
  FETCH 'G1000PXX'
ELSE
  IF #CGA-SCR-ID LT 700000
    PERFORM FIND-ID
  ELSE
    PERFORM FIND-SSN
  END-IF
END-IF
*
GET APPL-TRACK-V #CGA-ISN
*
PERFORM PREPARE-INFO
*
MOVE #CGA-SCR-ID     TO #HOLD-ID
MOVE #CGA-SCR-SUFFIX TO #HOLD-SUFFIX
*
IF #CGA-SCR-SUFFIX = 'DAT'
  RESET #CGA-SCR-COMMAND
    #CGA-SCR-ID
    #CGA-SCR-SUFFIX
  RESET #S-X
  PERFORM FORMAT-AA-DAT
*
  INPUT USING MAP 'C1021MAA'
*
  IF #CGA-SCR-COMMAND = ' '
    MOVE #CGA-ORIG-COMMAND TO #CGA-SCR-COMMAND
    MOVE #CGA-ORIG-ID TO #CGA-SCR-ID
    MOVE #CGA-ORIG-SUFFIX  TO #CGA-SCR-SUFFIX
    INPUT USING MAP 'G1000MXX'
    FETCH 'G1000PXX'
  END-IF
ELSE
  IF #CGA-SCR-SUFFIX = 'WIN'  /* FOR WINDOW ENVL    /* DW1
    RESET #CGA-SCR-SUFFIX
    INPUT WITH TEXT #ERROR-MESSAGE USING MAP 'C102WMAA'  /* DW1
  ELSE
    INPUT TEXT #ERROR-MESSAGE USING MAP 'C1020MAA'
  END-IF
*
  IF   (#CGA-SCR-COMMAND = 'AA')   /* IF NOT CHANGED
      AND (#CGA-SCR-ID     = #HOLD-ID)
      AND (#CGA-SCR-SUFFIX = #HOLD-SUFFIX)
    IF APPL-TRACK-V.RANK = 'CDT' OR = '2LT' OR = '1LT' OR = 'CPT'
        OR = 'MAJ' OR = 'LTC' OR = 'COL' OR = 'BG'  OR = 'MG'
        OR = 'LTG' OR = 'GEN'
        OR (APPL-TRACK-V.DATE-OF-BIRTH NE 0)
      MOVE 'AV' TO #CGA-SCR-COMMAND
    END-IF
  END-IF
END-IF
*
FETCH 'G1000PXX'
*
DEFINE SUBROUTINE FIND-ID
FIND (1) APPL-TRACK-V WITH ID-NUMBER = #CGA-SCR-ID
  IF NO RECORDS FOUND
    INPUT WITH TEXT 'NO APPLICATION ID' USING MAP 'G1000MXX'
    FETCH 'G1000PXX'
  END-NOREC
*
  ASSIGN #CGA-ISN = *ISN
END-FIND
*
END-SUBROUTINE
*
* * * * * * * * * * * * *
DEFINE SUBROUTINE FIND-SSN
* * * * * * * * * * * * *
*
RESET #FND-AT
FIND APPL-TRACK-V WITH SSN = #CGA-SCR-ID
  IF  ((#CGA-USER-COMPANY = 'I') AND (APPL-TRACK-V.INTRO-FLAG = 'V'))
      OR ((#CGA-USER-COMPANY = 'S') AND (APPL-TRACK-V.INTRO-FLAG NE 'V'))
    ESCAPE TOP
  END-IF
*
  MOVE TRUE TO #FND-AT
  ASSIGN #CGA-ISN = *ISN
END-FIND
*
IF NOT #FND-AT
  INPUT TEXT 'SSN notfoundD' USING MAP 'G1000MXX'
  FETCH 'G1000PXX'
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE PREPARE-INFO
* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
RESET #DISPL #RANK-LITERAL #RANK-DISPLAY                          /* PM1
CALLNAT 'GRANKSXX' #PASS-COMMAND RANK MIL-SERVICE
  #EDIT-INVALID #DISPL #RANK-LITERAL #RANK-DISPLAY
*
SEPARATE NAME INTO #LAST-NAME #FIRST/MID
  #SUFFIX #EXTRA1 #EXTRA2 WITH DELIMITER #DEL
MOVE LEFT #FIRST/MID TO #FIRST/MID
COMPRESS #RANK-DISPLAY #FIRST/MID #LAST-NAME INTO #FORMATED-NAME
*
IF #SUFFIX NE ' '
  COMPRESS #FORMATED-NAME ',' #SUFFIX INTO #FORMATED-NAME LEAVING NO
END-IF
*
IF MIL-STATUS = 'R'
  COMPRESS #FORMATED-NAME ', RET' INTO #FORMATED-NAME LEAVING NO
END-IF

RESET #PDA-ADDRESS                             /*TT1 BEGIN
  #ADD-CONTACT-ID := APPL-TRACK-V.CONTACT-ID
  #ADD-TYPE       := 'P'
CALLNAT 'ADDN0001' #PDA-ADDRESS
*
  #SECOND-ADDRESS := #ADD-LINE-2 
  #SECOND-ADDRESS := #ADD-LINE-3 
*                                              /*TT1 END
*                     NG99
* IF ADDRESS-1 = ' '
*   MOVE 'NO USEABLE ADDRESS' TO #ERROR-MESSAGE
* END-IF
* *
* MOVE EDITED ZIP-CODE (EM=99999-9999) TO #HOLD-EDIT-ZIP
* *
* IF #HOLD-ZIP2 = '-0000'
*   MOVE '     ' TO #HOLD-ZIP2
* END-IF
* *
* IF ADDRESS-3 = ' '
*   COMPRESS ADDRESS-2 #HOLD-EDIT-ZIP INTO #SECOND-ADDRESS
*   RESET #THIRD-ADDRESS
* ELSE
*   COMPRESS ADDRESS-3 #HOLD-EDIT-ZIP INTO #THIRD-ADDRESS
*   MOVE ADDRESS-2 TO #SECOND-ADDRESS
* END-IF
* *
* IF ADDRESS-2 = ' '
*   MOVE 'INSUFFICIENT LINES' TO #ERROR-MESSAGE
* END-IF
*
MOVE #CGA-CLERK TO #CLERK-ABB-PASS
MOVE ' ' TO #CLERK-ABB-NAME-PASS
CALLNAT 'GCKNMSXX' #CLERK-ABB-PASS
  #INVALID
  #CLERK-ABB-NAME-PASS
COMPRESS #CORR-MSG #CLERK-ABB-NAME-PASS INTO #AD-FF-24
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FORMAT-AA-DAT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
ADD 1 TO #S-X
COMPRESS APPL-TRACK-V.ID-NUMBER '$$' INTO #TEXT (#S-X) LEAVING NO
*
IF #FORMATED-NAME NE ' '
  ADD 1 TO #S-X
  COMPRESS #FORMATED-NAME '$$' INTO #TEXT (#S-X) LEAVING NO
END-IF
*                          NG99
* IF ADDRESS-1 NE ' '
*   ADD 1 TO #S-X
*   MOVE ADDRESS-1                 TO #TEXT (#S-X)
* END-IF
* *
* IF #THIRD-ADDRESS = ' '
*   IF #SECOND-ADDRESS NE ' '
*     ADD 1 TO #S-X
*     COMPRESS #SECOND-ADDRESS '$$' INTO #TEXT (#S-X) LEAVING NO
*   END-IF
* ELSE
*   IF #SECOND-ADDRESS NE ' '
*     ADD 1 TO #S-X
*     MOVE #SECOND-ADDRESS TO #TEXT (#S-X)
*   END-IF
* *
*   ADD 1 TO #S-X
*   COMPRESS #THIRD-ADDRESS '$$' INTO #TEXT (#S-X) LEAVING NO
* END-IF
*
IF  (RANK = MASK ('CW'))
    OR (RANK = MASK ('MW'))
    OR (RANK = MASK ('WO'))
  MOVE 'MR' TO #FULL-RANK
ELSE
  RESET #DISPL #RANK-LITERAL #RANK-DISPLAY                        /* PM1
  CALLNAT 'GRANKSXX' #PASS-COMMAND RANK #XXX #EDIT-INVALID #DISPL
    #RANK-LITERAL #RANK-DISPLAY
  MOVE #RANK-LITERAL TO #FULL-RANK
END-IF
*
ADD 1 TO #S-X
IF #FULL-RANK = ' '
  MOVE #LAST-NAME TO #TEXT (#S-X)
ELSE
  COMPRESS #FULL-RANK #LAST-NAME INTO #TEXT (#S-X)
END-IF
COMPRESS #TEXT (#S-X) '$$' INTO #TEXT (#S-X) LEAVING NO
*
FOR #I1 1 TO 2
  IF REFERING-ID-NUMBER (#I1) NE 0
    MOVE REFERING-ID-NUMBER (#I1) TO #REF-MBR-N
    FIND (1) ST-V WITH MEMBER-KEY = #REF-MBR
      ADD 1 TO #S-X
      SEPARATE NAME INTO #LAST-NAME #FIRST/MID
        #SUFFIX #EXTRA1 #EXTRA2 WITH DELIMITER #DEL
      MOVE LEFT #FIRST/MID TO #FIRST/MID
      COMPRESS #RANK-DISPLAY #FIRST/MID #LAST-NAME INTO #TEXT (#S-X)
*
      IF #SUFFIX NE '   '
        COMPRESS #TEXT (#S-X) ',' #SUFFIX INTO #TEXT (#S-X) LEAVING NO
      END-IF
*
      IF MIL-STATUS = 'R'
        COMPRESS #TEXT (#S-X) ', RET' INTO #TEXT (#S-X) LEAVING NO
      END-IF
*
      COMPRESS #TEXT (#S-X) '$$' INTO #TEXT (#S-X) LEAVING NO
    END-FIND
  END-IF
END-FOR
*
COMPRESS #TEXT (#S-X) '@@' INTO #TEXT (#S-X) LEAVING NO
*
END-SUBROUTINE
*
END
