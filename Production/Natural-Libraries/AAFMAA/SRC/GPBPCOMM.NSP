* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* PROGRAM-ID: GPBPCOMM - Load the file for creating letters in SSRS
*******************************************************************
* Created for Letters @ Emails project
******************************************************************
* MODIFICATION LOG
******************************************************************
* YAK  08012013       Initial Creation
* YAK  12272013  YK1  Remove Index file creation to a separate request
*                     from SSRS via EntireX (RQSTN004)
*                     Use LDA for Letters file structure
* YAK  02012017  YK2  Correct logic for Annual Renewable
* bz-Name 07/07/2017     Fine Names
******************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING OBJLSTAT      /* Status file structure
LOCAL USING OBJLLETT      /* Letters file structure                 /* YK1
LOCAL USING ADDA0001      /* PDA to call address generic program
LOCAL USING GPRL0EML      /* PDA to send notification email
LOCAL USING E4205LDM
LOCAL USING CONTPDA1      /* TT1
LOCAL
1 #RECORD-DATA
  2 INSURED-CN                        (N6)
  2 POLICY-NUMBER                     (A16)
  2 PLAN                              (A10)
  2 DATE-OF-BIRTH                     (N8)
  2 SMOKER                            (A1)
  2 OWNER-CN                          (N6)
  2 OWNER-SALUTATION                  (A75)
  2 OWNER-RANK                        (A20)
  2 OWNER-NAME                        (A75)
  2 EMAIL-ADDRESS                     (A70)
  2 INSURED-NAME                      (A75)
  2 ADDRESS-1                         (A75)
  2 ADDRESS-2                         (A75)
  2 ADDRESS-3                         (A75)
  2 OWNER-HOME-PHONE                  (A20)
  2 OWNER-WORK-PHONE                  (A20)
  2 OWNER-CELL-PHONE                  (A20)
  2 FORMATTED-ISSUE-DATE              (A20)
  2 BENEFIT-DECREASE-DATE             (A20)
  2 POLICY-EXPIRATION-DATE            (A20)
* Annual renewable - policy renewal date
* EZ-Term - Premium change date
* RT - policy renewal date
  2 POLICY-RENEWAL-DATE               (A20)
  2 DEATH-BENEFIT                     (A15)
  2 DEATH-BENEFIT-DECREASED-1         (A15)
  2 DEATH-BENEFIT-DECREASED-2         (A15)
* RT renewal
* RT-PREMIUMS(1) = current premium
* RT-PREMIUMS(2) = new premium
* RT-PREMIUMS(3) = current allotment premium total
* RT-PREMIUMS(4) = new allotment premium total
* For LTI
* RT premiums as an option for new insurance
  2 RT-PREMIUMS                       (A15/6)
* LT2 premiums as an option for new insurance
  2 LT2-PREMIUMS                      (A15/4)
* New calculated premium for Annual renewable and EZ Term
  2 MONTHLY-PREMIUM                   (A15)
  2 PAYMENT-MODE                      (A1)
  2 POLICY-CHANGE-DATE                (A10)
  2 TEMPLATE-NAME                     (A20)
  2 REPORT-NAME                       (A20)
  2 SEND-CORR-IND                     (A1)
  2 IS-SENT                           (A1)
*
1 #REPORT
  2 INSURED-CN                        (N6)
  2 POLICY-NUMBER                     (A16)
  2 PLAN                              (A10)
  2 ISSUE-AGE                         (A2)
  2 DATE-OF-BIRTH                     (N8)
  2 CURRENT-AGE                       (N2)
  2 SMOKER                            (A1)
  2 OWNER-CN                          (N6)
  2 OWNER-NAME                        (A75)
  2 EMAIL-ADDRESS                     (A70)
  2 INSURED-NAME                      (A75)
  2 ADDRESS-1                         (A75)
  2 ADDRESS-2                         (A75)
  2 ADDRESS-3                         (A75)
  2 FORMATTED-ISSUE-DATE              (A20)
  2 BENEFIT-DECREASE-DATE             (A20)
  2 POLICY-EXPIRATION-DATE            (A20)
  2 POLICY-RENEWAL-DATE               (A20)
  2 DEATH-BENEFIT                     (A15)
  2 CURR-PREM                         (A15)
  2 RT10-PREM                         (A15)
  2 AR-PREM                           (A15)
  2 PREF-PHONE                        (A20)
  2 REPORT-NAME                       (A20)
  2 SEND-CORR-IND                     (A1)
*
1 ST-V-UPD VIEW OF A-STATUS
  2 ID-NUMBER
  2 RENEW-FLAG    (9)
*
1 #DATN           (N8)
1 REDEFINE #DATN
  2 #DATN-6       (N6)
1 #TIMN           (N7)
1 #USER           (A8)
1 GPREMSXX_COM_Area
  2 #CGA-SCR-COMMAND (A2)
  2 #CGA-SCR-ID      (N9)
  2 #CGA-SCR-SUFFIX  (A3)
  2 #PLAN-PASS       (A3)
  2 #AGE             (N2)
  2 #APREM           (N7.2)
  2 #ISSUE-DATE      (N8)
  2 #SMOKER-FLAG     (A1)
  2 #FACE-AMT        (N7.2)
  2 #SEX             (A1)
*
* Letter & Email Templates
1 #TEMPLATES-TABLE
* LTI Templates
  2 #LET-38-6        (A20) CONST <'LTI_LET_38Y_6M_S'>
  2 #EML-38-5        (A20) CONST <'LTI_EML_38Y_5M_S'>
  2 #LET-38-4        (A20) CONST <'LTI_LET_38Y_4M_S'>
  2 #EML-38-3        (A20) CONST <'LTI_EML_38Y_3M_S'>
  2 #LET-40-6        (A20) CONST <'LTI_LET_40Y_6M_S'>
  2 #EML-40-5        (A20) CONST <'LTI_EML_40Y_5M_S'>
  2 #LET-40-4        (A20) CONST <'LTI_LET_40Y_4M_S'>
  2 #EML-40-3        (A20) CONST <'LTI_EML_40Y_3M_S'>
  2 #LET-40-1        (A20) CONST <'LTI_LET_40Y_1M_S'>
  2 #EML-40-1        (A20) CONST <'LTI_EML_40Y_1M_S'>
  2 #LET-45-4        (A20) CONST <'LTI_LET_45Y_4M_S'>
  2 #EML-45-3        (A20) CONST <'LTI_EML_45Y_3M_S'>
  2 #LET-45-1        (A20) CONST <'LTI_LET_45Y_1M_S'>
  2 #EML-45-1        (A20) CONST <'LTI_EML_45Y_1M_S'>
  2 #LET-48-6        (A20) CONST <'LTI_LET_48Y_6M_N'>
  2 #EML-48-5        (A20) CONST <'LTI_EML_48Y_5M_N'>
  2 #LET-48-4        (A20) CONST <'LTI_LET_48Y_4M_N'>
  2 #LET-50-6N       (A20) CONST <'LTI_LET_50Y_6M_N'>
  2 #EML-50-5N       (A20) CONST <'LTI_EML_50Y_5M_N'>
  2 #LET-50-4N       (A20) CONST <'LTI_LET_50Y_4M_N'>
  2 #LET-50-1N       (A20) CONST <'LTI_LET_50Y_1M_N'>
  2 #EML-50-1N       (A20) CONST <'LTI_EML_50Y_1M_N'>
  2 #LET-50-6S       (A20) CONST <'LTI_LET_50Y_6M_S'>
  2 #EML-50-5S       (A20) CONST <'LTI_EML_50Y_5M_S'>
  2 #LET-50-4S       (A20) CONST <'LTI_LET_50Y_4M_S'>
  2 #EML-50-3S       (A20) CONST <'LTI_EML_50Y_3M_S'>
  2 #LET-50-EXP      (A20) CONST <'LTI_LET_50Y_EXP'>
  2 #LET-55-4        (A20) CONST <'LTI_LET_55Y_4M_N'>
  2 #EML-55-3        (A20) CONST <'LTI_EML_55Y_3M_N'>
  2 #LET-55-1        (A20) CONST <'LTI_LET_55Y_1M_N'>
  2 #EML-55-1        (A20) CONST <'LTI_EML_55Y_1M_N'>
  2 #LET-60-6        (A20) CONST <'LTI_LET_60Y_6M_N'>
  2 #EML-60-5        (A20) CONST <'LTI_EML_60Y_5M_N'>
  2 #LET-60-4        (A20) CONST <'LTI_LET_60Y_4M_N'>
  2 #EML-60-3        (A20) CONST <'LTI_EML_60Y_3M_N'>
  2 #LET-60-EXP      (A20) CONST <'LTI_LET_60Y_EXP'>
* LTII Templates
  2 #LET-LTII-4      (A20) CONST <'LTII_LET_4M_'>
  2 #EML-LTII-3      (A20) CONST <'LTII_EML_3M_'>
  2 #LET-LTII-1      (A20) CONST <'LTII_LET_1M_'>
  2 #EML-LTII-1      (A20) CONST <'LTII_EML_1M_'>
  2 #LET-LTII-EXP    (A20) CONST <'LTII_LET_EXP'>
* LTII Plus Templates
  2 #LET-LTII-PLUS-6 (A20) CONST <'LTII_PLUS_LET_6M_'>
  2 #EML-LTII-PLUS-5 (A20) CONST <'LTII_PLUS_EML_5M_'>
  2 #LET-LTII-PLUS-4 (A20) CONST <'LTII_PLUS_LET_4M_'>
  2 #EML-LTII-PLUS-3 (A20) CONST <'LTII_PLUS_EML_3M_'>
  2 #LET-LTII-PLUS-1 (A20) CONST <'LTII_PLUS_LET_1M_'>
  2 #LET-LTII-PLUS-REN  (A20) CONST <'LTII_PLUS_LET_REN'>
  2 #LET-LTII-PLUS-EXP  (A20) CONST <'LTII_PLUS_LET_EXP'>
* EZ Term Templates
  2 #LET-EZ-INCREASE (A20) CONST <'EZ_LET_INC_2M'>
  2 #EML-EZ-INCREASE (A20) CONST <'EZ_EML_INC_2M'>
  2 #LET-EZ-EXP      (A20) CONST <'EZ_LET_EXP'>
  2 #EML-EZ-EXP      (A20) CONST <'EZ_EML_EXP'>
* 5 Years Renewal Term Templates
  2 #LET-RT-REN-6    (A20) CONST <'RT_LET_REN_6M'>
  2 #EML-RT-REN-5    (A20) CONST <'RT_EML_REN_5M'>
  2 #LET-RT-REN-4    (A20) CONST <'RT_LET_REN_4M'>
  2 #EML-RT-REN-3    (A20) CONST <'RT_EML_REN_3M'>
  2 #LET-RT-EXP      (A20) CONST <'RT_LET_EXP'>
*
1 #REPORTS-LIST
  2 #REP-38-2        (A2) CONST <'38'>
  2 #REP-40-2        (A2) CONST <'40'>
  2 #REP-45-2        (A2) CONST <'45'>
  2 #REP-48-2        (A2) CONST <'48'>
  2 #REP-50-2        (A2) CONST <'50'>
  2 #REP-55-2        (A2) CONST <'55'>
  2 #REP-60-2        (A2) CONST <'60'>
  2 #REP-LTII-EXP-2  (A2) CONST <'00'>

1 #WINDOWS-TEST-DIR       (A) DYNAMIC INIT <'Ftp/EDS/Downloads/Test/'>
1 #WINDOWS-USER-DIR       (A) DYNAMIC INIT <'Ftp/Marketing/'>
1 #WINDOWS-SUBDIR         (A) DYNAMIC
1 #UNIX-DIR               (A) DYNAMIC CONST <'/usr/SAG/AAFMAA/batch/workfiles/PERMDA/COM/'>
1 #FTP-SCRIPT-NAME        (A) DYNAMIC CONST <'/usr/SAG/cronus/.scripts/ftpAafmaaLocal'>
1 #REPORT-FILE-LTI        (A) DYNAMIC CONST <'2M_LTI_REPORT_'>
1 #REPORT-FILE-LTII       (A) DYNAMIC CONST <'2M_LTII_REPORT_'>
1 #WIN-FILE-NAME          (A) DYNAMIC
1 #UNIX-FILE-NAME         (A) DYNAMIC
1 #OUTPUT                 (A32000)
*
1 CONSTANTS
  2 #CLERK-ID               (A3)  CONST <'EDS'>
  2 #TAB                    (A1)  CONST <H'09'>
  2 #SMOKER                 (A)   DYNAMIC CONST <'Smoker'>
  2 #NON-SMOKER             (A)   DYNAMIC CONST <'Non Smoker'>
  2 #LTI                    (A)   DYNAMIC CONST <'LTI'>
  2 #LTII                   (A)   DYNAMIC CONST <'LTII'>
  2 #LTII-PLUS              (A)   DYNAMIC CONST <'LTII+'>
  2 #AR                     (A)   DYNAMIC CONST <'AR'>
  2 #EZ                     (A)   DYNAMIC CONST <'EZ'>
  2 #RT                     (A)   DYNAMIC CONST <'RT'>
  2 #EMAIL-ADDRESS-ERROR    (A)   DYNAMIC CONST <'No email address available for owner, member or insured'>
  2 #CONTACT-ID-ERROR       (A)   DYNAMIC CONST <'Contact ID for the owner is zero - no information can be retrieved'>
  2 #RT-RATES-38            (A/4) DYNAMIC CONST <'LTI_LET_38Y_6M_S', 'LTI_EML_38Y_5M_S', 'LTI_LET_38Y_4M_S', 'LTI_EML_38Y_3M_S'>
  2 #RT-RATES-48            (A/3) DYNAMIC CONST <'LTI_LET_48Y_6M_N', 'LTI_EML_48Y_5M_N', 'LTI_LET_48Y_4M_N'>
  2 #LET-LTI-EXPIRATION     (A)   DYNAMIC CONST <'* Sent letter: LTI - Policy Termination (Age 99)'>
  2 #LET-LTI-EXP-WARNINIG   (A)   DYNAMIC CONST <'* Sent letter: LTI - Policy exp. warning (XM before age 99)'>
  2 #EML-LTI-EXP-WARNINIG   (A)   DYNAMIC CONST <'* Sent email: LTI - Policy exp. warning (XM before age 99)'>
  2 #LET-DB-DECREASE        (A)   DYNAMIC CONST <'* Sent letter: LTI - DB decrease (XM before age 99)'>
  2 #EML-DB-DECREASE        (A)   DYNAMIC CONST <'* Sent email: LTI - DB decrease (XM before age 99)'>
  2 #LET-EML-DB-DECREASE    (A)   DYNAMIC CONST <'* Sent letter/email: LTI - DB decrease (XM before age 99)'>
  2 #LET-LTI-CONV-OPTIONS   (A)   DYNAMIC CONST <'* Sent letter: LTI - conversion options (XM before age 99)'>
  2 #EML-LTI-CONV-OPTIONS   (A)   DYNAMIC CONST <'* Sent email: LTI - conversion options (XM before age 99)'>
*
  2 #LET-LTII-EXPIRATION      (A) DYNAMIC CONST <'* Sent letter: LTII - Policy Termination'>
  2 #LET-LTII-EXP-WARNING     (A) DYNAMIC CONST <'* Sent letter: LTII - Policy exp. warning (XM)'>
  2 #EML-LTII-EXP-WARNING     (A) DYNAMIC CONST <'* Sent email: LTII - Policy exp. warning (XM)'>
  2 #LET-EML-LTII-EXP-WARNING (A) DYNAMIC CONST <'* Sent letter/email: LTII - Policy exp. warning (XM)'>
*
  2 #LET-LTII-PLUS-EXPIRATION      (A) DYNAMIC CONST <'* Sent letter: LTII+ - Policy Termination'>
  2 #LET-LTII-PLUS-RENEWAL         (A) DYNAMIC CONST <'* Sent letter: LTII+ - Policy Renewal'>
  2 #LET-LTII-PLUS-EXP-WARNING     (A) DYNAMIC CONST <'* Sent letter: LTII+ - Policy exp. warning (XM)'>
  2 #EML-LTII-PLUS-EXP-WARNING     (A) DYNAMIC CONST <'* Sent email: LTII+ - Policy exp. warning (XM)'>
  2 #LET-EML-LTII-PLUS-EXP-WARNING (A) DYNAMIC CONST <'* Sent letter/email: LTII+ - Policy exp. warning (XM)'>
*
  2 #LET-EML-EZ-PREM-INCREASE-WARNING (A) DYNAMIC CONST <'* Sent letter/email: EZ-Term-Premium Increase warn. age 99(2M)'>
  2 #LET-EML-EZ-EXP-WARNING           (A) DYNAMIC CONST <'* Sent letter/email: EZ-Term-Policy exp. warning age 80 (XM)'>
*
  2 #LET-RT-RENEWAL (A) DYNAMIC CONST <'* Sent letter: RT Renewal (XM)'>
  2 #EML-RT-RENEWAL (A) DYNAMIC CONST <'* Sent email: RT Renewal (XM)'>
  2 #LET-RT-EXP-WARNING (A) DYNAMIC CONST <'* Sent letter: RT Policy exp. warning (3M)'>
*
* Work variables
1 #COUNTERS
  2 #REC-CNT           (N7)
  2 #REP-CNT           (N7)
  2 #I                 (I2)
  2 #II                (I2)
  2 #OWNER-BAD-CI      (N2)
  2 #NO-EMAIL-ADDR-CNT (N2)

1 #ID-NUMBER           (N6)
1 REDEFINE #ID-NUMBER
  2 #ID-NUMBER-A       (A6)
1 #ST-ISN              (P9)
1 #UPDATE-ST           (L)
1 #RENEW-FLAG          (A1/9)

1 #LETTER-DATES        (N6/45)
1 #REPORT-2M-DATES     (N6/10)

1 #RECORD-VARIABLES
  2 #EXPIRE              (L)
  2 #RENEW               (L)
  2 #AGE-A               (A2)
  2 #MONTH               (A1)
  2 #LETTER-NOTE         (A) DYNAMIC
  2 #LET_EML             (L)
  2 #LEVEL-TERM          (L)
  2 #LEGACY-LTII         (L)
  2 #RENEWABLE-LTII      (L)
  2 #EZ-TERM             (L)
  2 #RT-RENEW            (L)
  2 #RT-EXPIRE           (L)
  2 #NO-EMAIL-ADDR       (L)
  2 #NO-RESPONSE         (L)

1 #DYNAMIC-VARIABLES
  2 #DB-AMT               (N7.2)
  2 #DEATH-BENEFIT        (N7.2)
  2 #CURR-DEATH-BENEFIT   (N7.2)
  2 #NEW-ALOT-AMT         (N7.2)
  2 #DOB-YYYY-MM          (N6)
  2 #AMOUNT               (A) DYNAMIC
  2 #ERROR-MESSAGE        (A75)
  2 #NOTE-TEXT            (A60/10)
  2 #Dynamic_Name             (A) DYNAMIC
  2 #CONTACT-ID               (N8)
  2 #OWNER-CONTACT-ID         (N8)
  2 #OWNER-CN                 (N6)
  2 #S_N                      (A) DYNAMIC
  2 #PLAN                     (A) DYNAMIC
  2 #TERM                     (A2)
  2 #CHANGE-DATE              (N8)
  2 REDEFINE #CHANGE-DATE
    3 #CHANGE-DATE-YYYYMM     (N6)
    3 #CHANGE-DATE-DD         (N2)
  2 #EMAIL                    (L)
  2 #NEW-ISSUE-AGE            (N2)
  2 #DATE-W                   (N8)
  2 REDEFINE #DATE-W
    3 #YYYY                   (A4)
    3 #MM                     (A2)
    3 #DD                     (A2)
*
1 #RT-REDUCTION-RATES-N       (N0.4/6) CONST <0,0.52,0.4186,0.3485,0.2979,0.4689>
1 #RT-REDUCTION-RATES-S       (N0.4/6) CONST <0,0.5,0.4805,0.3419,0.2778,0.4689>
1 #PARM-ALLOTMENT-INFORMATION
  2 ##CGA-ISN               (P8)
  2 ##CGA-SCR-COMMAND       (A2)
  2 ##CGA-SCR-ID            (N9)
  2 ##CGA-SCR-SUFFIX        (A3)
1 #ALLOTMENT-INFORMATION    (A16)
1 REDEFINE #ALLOTMENT-INFORMATION
  2 #STOP-AMT               (A8)
  2 #START-AMT              (A8)
*
1 ST-DATE-OF-BIRTH               (N8.0)           /* TT1 BEGIN
1 REDEFINE ST-DATE-OF-BIRTH
  2 ST-DOB-YYYY-MM               (N6.0)           /* TT1 END
1 ST-GENDER                 (A1)
*
* Variables for running program online (testing/debugging)
1 f_1     (A80) INIT <"/usr/SAG/tmp/Exception_report.txt">
1 f_2     (A80) INIT <"/usr/SAG/tmp/Statistics_report.txt">
1 v_PN    (I1)
1 v_RC    (N3)

END-DEFINE
*
ON ERROR
  WRITE 'CN = ' #ID-NUMBER
END-ERROR
*
IF *DEVICE = 'BATCH'
  IGNORE
ELSE
  PERFORM DEFINE-PRINTERS
END-IF
* Check on which server process is running (Test/Prod)
IF F-IS-DEV(<>)
  #WINDOWS-USER-DIR := #WINDOWS-TEST-DIR
END-IF
*
#USER := *USER
#TIMN := *TIMN
#DATN := *DATN
WRITE 'Start Time:    '   *TIMN
*
FORMAT (1) LS=133 PS=60
FORMAT (2) LS=133 PS=60
*
**===============================
DEFINE SUBROUTINE DEFINE-PRINTERS
**===============================
v_PN := 1
v_RC := PRT_FN_PUT(<v_PN, f_1>)
IF v_RC <> 0
  PRINT (0)  'Error in print file 1 assigment'
  ESCAPE ROUTINE
END-IF
v_PN := 2
v_RC := PRT_FN_PUT(<v_PN, f_2>)
IF v_RC <> 0
  PRINT (0)  'Error in print file 2 assigment'
  ESCAPE ROUTINE
END-IF
END-SUBROUTINE
*
COMPRESS #UNIX-DIR #REPORT-FILE-LTI INTO #UNIX-FILE-NAME LEAVING NO
DEFINE WORK FILE 2 #UNIX-FILE-NAME TYPE 'ASCII-COMPRESSED'
COMPRESS #UNIX-DIR #REPORT-FILE-LTII INTO #UNIX-FILE-NAME LEAVING NO
DEFINE WORK FILE 3 #UNIX-FILE-NAME TYPE 'ASCII-COMPRESSED'
*
COMPRESS 'Insured CN' 'Policy Number' 'Insured Name' 'Plan' 'Issue Age' 'Date of Birth' 'Smoker/Non-Smoker'
  'Owner CN' 'Owner Name' 'Address 1' 'Address 2' 'Address 3' 'Issue Date'
  'Benefit Change Date' 'Policy Expiration Date' 'Death Benefit' 'Current Premium' 'LTII Select 10Y premium'
  'Preferred Phone' 'Email' 'Age in 2M' 'Send Ind.'
  INTO #OUTPUT WITH DELIMITER #TAB
WRITE WORK FILE 2 #OUTPUT
COMPRESS 'Insured CN' 'Policy Number' 'Insured Name' 'Plan' 'Issue Age' 'Date of Birth' 'Smoker/Non-Smoker' 'Current Age'
  'Owner CN' 'Owner Name' 'Address 1' 'Address 2' 'Address 3' 'Issue Date' 'Policy Expiration Date'
  'Death Benefit' 'Current Premium' 'LTII Select 10Y premium' 'LTII+ AR Premium'
  'Preferred Phone' 'Email' 'Age in 2M' 'Send Ind.'
  INTO #OUTPUT WITH DELIMITER #TAB
WRITE WORK FILE 3 #OUTPUT
*
#LETTER-DATES(1)  := F-LET-DATE(<'38','06'>)
#LETTER-DATES(2)  := F-LET-DATE(<'38','05'>)
#LETTER-DATES(3)  := F-LET-DATE(<'38','04'>)
#LETTER-DATES(4)  := F-LET-DATE(<'38','03'>)
#LETTER-DATES(5)  := F-LET-DATE(<'40','06'>)
#LETTER-DATES(6)  := F-LET-DATE(<'40','05'>)
#LETTER-DATES(7)  := F-LET-DATE(<'40','04'>)
#LETTER-DATES(8)  := F-LET-DATE(<'40','03'>)
#LETTER-DATES(9)  := F-LET-DATE(<'40','01'>)
#LETTER-DATES(10) := F-LET-DATE(<'45','04'>)
#LETTER-DATES(11) := F-LET-DATE(<'45','03'>)
#LETTER-DATES(12) := F-LET-DATE(<'45','01'>)
#LETTER-DATES(13) := F-LET-DATE(<'48','06'>)
#LETTER-DATES(14) := F-LET-DATE(<'48','05'>)
#LETTER-DATES(15) := F-LET-DATE(<'48','04'>)
#LETTER-DATES(16) := F-LET-DATE(<'50','06'>)
#LETTER-DATES(17) := F-LET-DATE(<'50','05'>)
#LETTER-DATES(18) := F-LET-DATE(<'50','04'>)
#LETTER-DATES(19) := F-LET-DATE(<'50','03'>)
#LETTER-DATES(20) := F-LET-DATE(<'50','01'>)
#LETTER-DATES(21) := F-LET-DATE(<'50','00'>)
#LETTER-DATES(22) := F-LET-DATE(<'55','04'>)
#LETTER-DATES(23) := F-LET-DATE(<'55','03'>)
#LETTER-DATES(24) := F-LET-DATE(<'55','01'>)
#LETTER-DATES(25) := F-LET-DATE(<'60','06'>)
#LETTER-DATES(26) := F-LET-DATE(<'60','05'>)
#LETTER-DATES(27) := F-LET-DATE(<'60','04'>)
#LETTER-DATES(28) := F-LET-DATE(<'60','03'>)
#LETTER-DATES(29) := F-LET-DATE(<'60','00'>)
* LTII, LTII Plus
#LETTER-DATES(30) := F-LET-DATE(<'00','06'>)
#LETTER-DATES(31) := F-LET-DATE(<'00','05'>)
#LETTER-DATES(32) := F-LET-DATE(<'00','04'>)
#LETTER-DATES(33) := F-LET-DATE(<'00','03'>)
#LETTER-DATES(34) := F-LET-DATE(<'00','01'>)
#LETTER-DATES(35) := F-LET-DATE(<'00','00'>)
* EZ-Term
#LETTER-DATES(36) := F-LET-DATE(<'50','02'>)
#LETTER-DATES(37) := F-LET-DATE(<'55','02'>)
#LETTER-DATES(38) := F-LET-DATE(<'60','02'>)
#LETTER-DATES(39) := F-LET-DATE(<'65','02'>)
#LETTER-DATES(40) := F-LET-DATE(<'70','02'>)
#LETTER-DATES(41) := F-LET-DATE(<'75','02'>)
#LETTER-DATES(42) := F-LET-DATE(<'80','03'>)
#LETTER-DATES(43) := F-LET-DATE(<'80','02'>)
* LTI
#REPORT-2M-DATES(1) := F-LET-DATE(<'38','02'>)
#REPORT-2M-DATES(2) := F-LET-DATE(<'40','02'>)
#REPORT-2M-DATES(3) := F-LET-DATE(<'45','02'>)
#REPORT-2M-DATES(4) := F-LET-DATE(<'48','02'>)
#REPORT-2M-DATES(5) := F-LET-DATE(<'50','02'>)
#REPORT-2M-DATES(6) := F-LET-DATE(<'55','02'>)
#REPORT-2M-DATES(7) := F-LET-DATE(<'60','02'>)
* LTII, LTII Plus
#REPORT-2M-DATES(8) := F-LET-DATE(<'00','02'>)
*
R_ST.
READ ST-V BY ID-NUMBER = 1900
*
  IF ST-V.STATUS(*) = 'D'
    #ID-NUMBER := ST-V.ID-NUMBER
    #ST-ISN    := *ISN
    RESET #UPDATE-ST #RENEW-FLAG(*)
*
    RESET PDA-CONTACT  ST-DATE-OF-BIRTH ST-GENDER       /* TT1
    P-CONTACT-ID := ST-V.MEMBER-CONTACT-ID              /* TT1
    CALLNAT 'CONTS001' PDA-CONTACT                      /* TT1
    ST-DATE-OF-BIRTH   := P-DATE-OF-BIRTH               /* TT1
    ST-GENDER          := P-GENDER                      /* TT1
*
    FOR #I = 1 TO C*ACTIVE-SEGMENTS
      IF (NOT FUNCTION-TERM-POLICY(<ST-V.PLAN(#I)>)) OR (ST-V.STATUS(#I) <> 'D')
        ESCAPE TOP
      END-IF
*
      RESET LT-V #REPORT #RECORD-DATA
      RESET #RECORD-VARIABLES
      PERFORM FIND-TEMPLATE-REPORT-NAME
      DECIDE FOR FIRST CONDITION
        WHEN #RECORD-DATA.TEMPLATE-NAME <> ' ' AND ST-V.RENEW-FLAG(#I) <> 'X'
          RESET #DYNAMIC-VARIABLES
          RESET #PDA-ADDRESS
          PERFORM CREATE-FILE-RECORD
          PERFORM WRITE-NOTE
          END TRANSACTION
        WHEN #RECORD-DATA.REPORT-NAME <> ' '
          RESET #DYNAMIC-VARIABLES
          RESET #PDA-ADDRESS
          PERFORM CREATE-REPORT-RECORD
        WHEN NONE
          IGNORE
      END-DECIDE
    END-FOR
    IF #UPDATE-ST
      GT. GET ST-V-UPD #ST-ISN
      ST-V-UPD.RENEW-FLAG(*) := #RENEW-FLAG(*)
      UPDATE (GT.)
      END TRANSACTION
    END-IF
  END-IF
*
END-READ
END TRANSACTION
*
PERFORM SEND-REPORT
*
WRITE 'End   Time:    '   *TIMN
WRITE(2)
  'Records created               :'      #REC-CNT
  'No Email address              :'      #NO-EMAIL-ADDR-CNT
IF #OWNER-BAD-CI <> 0
  WRITE(2) 'Owner contact id zero         :'      #OWNER-BAD-CI
END-IF
*
RESET p_EMAIL
P_TO     := 'ykegeles@aafmaa.com'
P_SUBJ   := '"Statistics report on Letters file load"'
COMPRESS FULL 'Records created               :' #REC-CNT INTO P_MSG(1)
COMPRESS FULL 'No Email address              :' #NO-EMAIL-ADDR-CNT INTO P_MSG(2)
IF #OWNER-BAD-CI <> 0
  COMPRESS FULL 'Owner contact id zero         :' #OWNER-BAD-CI INTO P_MSG(3)
END-IF
CALLNAT 'GPRS0EML' p_EMAIL
*
*******************************************
DEFINE SUBROUTINE FIND-TEMPLATE-REPORT-NAME
*******************************************
*
#DOB-YYYY-MM := ST-DOB-YYYY-MM                    /* TT1
DECIDE FOR FIRST CONDITION
* LT age 38,40,45, 50 smoker
* Smoker Decrease - 38,40,45; Expire - 50
  WHEN ST-V.PLAN(#I) = 'LT' AND ST-V.SMOKER-FLAG(#I) = 'S'
    #LEVEL-TERM := TRUE
    DECIDE ON FIRST VALUE #DOB-YYYY-MM
      VALUE #LETTER-DATES(1)                  /* mailed 6 months before DOB
        #RECORD-DATA.TEMPLATE-NAME := #LET-38-6
        #LETTER-NOTE := #LET-LTI-CONV-OPTIONS
        #AGE-A := 38
        #MONTH := 6
      VALUE #LETTER-DATES(2)                  /* e-mailed 5 months before DOB
        #RECORD-DATA.TEMPLATE-NAME := #EML-38-5
        #LETTER-NOTE := #EML-LTI-CONV-OPTIONS
        #AGE-A := 38
        #MONTH := 5
      VALUE #LETTER-DATES(3)                  /* mailed 4 months before DOB 38
        #RECORD-DATA.TEMPLATE-NAME := #LET-38-4
        #LETTER-NOTE := #LET-LTI-CONV-OPTIONS
        #AGE-A := 38
        #MONTH := 4
      VALUE #LETTER-DATES(4)                  /* e-mailed 3 months before DOB 38
        #RECORD-DATA.TEMPLATE-NAME := #EML-38-3
        #LETTER-NOTE := #EML-LTI-CONV-OPTIONS
        #AGE-A := 38
        #MONTH := 3
      VALUE #LETTER-DATES(5)                  /* mailed 6 months before DOB 40
        #RECORD-DATA.TEMPLATE-NAME := #LET-40-6
        #LETTER-NOTE := #LET-DB-DECREASE
        #AGE-A := 40
        #MONTH := 6
      VALUE #LETTER-DATES(6)                  /* e-mailed 5 months before DOB 40
        #RECORD-DATA.TEMPLATE-NAME := #EML-40-5
        #LETTER-NOTE := #EML-DB-DECREASE
        #AGE-A := 40
        #MONTH := 5
      VALUE #LETTER-DATES(7)                  /* mailed 4 months before DOB 40
        #RECORD-DATA.TEMPLATE-NAME := #LET-40-4
        #LETTER-NOTE := #LET-DB-DECREASE
        #AGE-A := 40
        #MONTH := 4
      VALUE #LETTER-DATES(8)                   /* e-mailed 3 months before DOB 40
        #RECORD-DATA.TEMPLATE-NAME := #EML-40-3
        #LETTER-NOTE := #EML-DB-DECREASE
        #AGE-A := 40
        #MONTH := 3
      VALUE #LETTER-DATES(9)                   /* mailed & emailed 1 month before DOB 40
        #RECORD-DATA.TEMPLATE-NAME := #LET-40-1
        #LETTER-NOTE := #LET-EML-DB-DECREASE
        #LET_EML := TRUE
        #AGE-A := 40
        #MONTH := 1
      VALUE #LETTER-DATES(10)                  /* mailed 4 months before DOB 45
        #RECORD-DATA.TEMPLATE-NAME := #LET-45-4
        #LETTER-NOTE := #LET-DB-DECREASE
        #AGE-A := 45
        #MONTH := 4
      VALUE #LETTER-DATES(11)                  /* e-mailed 3 months before DOB 45
        #RECORD-DATA.TEMPLATE-NAME := #EML-45-3
        #LETTER-NOTE := #EML-DB-DECREASE
        #AGE-A := 45
        #MONTH := 3
      VALUE #LETTER-DATES(12)                  /* mailed & emailed 1 month before DOB 45
        #RECORD-DATA.TEMPLATE-NAME := #LET-45-1
        #LETTER-NOTE := #LET-EML-DB-DECREASE
        #LET_EML := TRUE
        #AGE-A := 45
        #MONTH := 1
      VALUE #LETTER-DATES(16)                  /* mailed 6 months before DOB 50
        #RECORD-DATA.TEMPLATE-NAME := #LET-50-6S
        #LETTER-NOTE := #LET-LTI-EXP-WARNINIG
        #AGE-A := 50
        #MONTH := 6
        #EXPIRE:= TRUE
      VALUE #LETTER-DATES(17)                  /* e-mailed 5 months before DOB 50
        #RECORD-DATA.TEMPLATE-NAME := #EML-50-5S
        #LETTER-NOTE := #EML-LTI-EXP-WARNINIG
        #AGE-A := 50
        #MONTH := 5
        #EXPIRE:= TRUE
      VALUE #LETTER-DATES(18)                  /* mailed 4 months before DOB 50
        #RECORD-DATA.TEMPLATE-NAME := #LET-50-4S
        #LETTER-NOTE := #LET-LTI-EXP-WARNINIG
        #AGE-A := 50
        #MONTH := 4
        #EXPIRE:= TRUE
      VALUE #LETTER-DATES(19)                  /* e-mailed 3 months before DOB 50
        #RECORD-DATA.TEMPLATE-NAME := #EML-50-3S
        #LETTER-NOTE := #EML-LTI-EXP-WARNINIG
        #AGE-A := 50
        #MONTH := 3
        #EXPIRE:= TRUE
      VALUE #LETTER-DATES(21)                  /* mailed the month of DOB 50
        #RECORD-DATA.TEMPLATE-NAME := #LET-50-EXP
        #LETTER-NOTE := #LET-LTI-EXPIRATION
        #AGE-A := 50
        #EXPIRE:= TRUE
*
      VALUE #REPORT-2M-DATES(1)                /* report created 2 months before DOB 38
        #RECORD-DATA.REPORT-NAME := #AGE-A := #REP-38-2
      VALUE #REPORT-2M-DATES(2)                /* report created 2 months before DOB 40
        #RECORD-DATA.REPORT-NAME := #AGE-A := #REP-40-2
      VALUE #REPORT-2M-DATES(3)                /* report created 2 months before DOB 45
        #RECORD-DATA.REPORT-NAME := #AGE-A := #REP-45-2
      VALUE #REPORT-2M-DATES(5)                /* report created 2 months before DOB 50
        #RECORD-DATA.REPORT-NAME := #AGE-A := #REP-50-2
        #EXPIRE := TRUE
      NONE VALUE
        IGNORE
    END-DECIDE
* LT age 48, 50 non-smoker
* Non Smoker Decrease - 48,50,55 Expire - 60
  WHEN ST-V.PLAN(#I) = 'LT' AND ST-V.SMOKER-FLAG(#I) = 'N'
    #LEVEL-TERM := TRUE
    DECIDE ON FIRST VALUE #DOB-YYYY-MM
      VALUE #LETTER-DATES(13)                  /* mailed 6 months before DOB 48
        #RECORD-DATA.TEMPLATE-NAME := #LET-48-6
        #LETTER-NOTE := #LET-LTI-CONV-OPTIONS
        #AGE-A := 48
        #MONTH := 6
      VALUE #LETTER-DATES(14)                  /* e-mailed 5 months before DOB 48
        #RECORD-DATA.TEMPLATE-NAME := #EML-48-5
        #LETTER-NOTE := #EML-LTI-CONV-OPTIONS
        #AGE-A := 48
        #MONTH := 5
      VALUE #LETTER-DATES(15)                  /* mailed 4 months before DOB 48
        #RECORD-DATA.TEMPLATE-NAME := #LET-48-4
        #LETTER-NOTE := #LET-LTI-CONV-OPTIONS
        #AGE-A := 48
        #MONTH := 4
      VALUE #LETTER-DATES(16)                  /* mailed 6 months before DOB 50
        #RECORD-DATA.TEMPLATE-NAME := #LET-50-6N
        #LETTER-NOTE := #LET-DB-DECREASE
        #AGE-A := 50
        #MONTH := 6
      VALUE #LETTER-DATES(17)                  /* e-mailed 5 months before DOB 50
        #RECORD-DATA.TEMPLATE-NAME := #EML-50-5N
        #LETTER-NOTE := #EML-DB-DECREASE
        #AGE-A := 50
        #MONTH := 5
      VALUE #LETTER-DATES(18)                  /* mailed 4 months before DOB 50
        #RECORD-DATA.TEMPLATE-NAME := #LET-50-4N
        #LETTER-NOTE := #LET-DB-DECREASE
        #AGE-A := 50
        #MONTH := 4
      VALUE #LETTER-DATES(20)                  /* mailed & emailed 1 month before DOB 50
        #RECORD-DATA.TEMPLATE-NAME := #LET-50-1N
        #LETTER-NOTE := #LET-EML-DB-DECREASE
        #AGE-A := 50
        #MONTH := 1
        #LET_EML := TRUE
      VALUE #LETTER-DATES(22)                  /* mailed 4 months before DOB 55
        #RECORD-DATA.TEMPLATE-NAME := #LET-55-4
        #LETTER-NOTE := #LET-DB-DECREASE
        #AGE-A := 55
        #MONTH := 4
      VALUE #LETTER-DATES(23)                  /* e-mailed 3 months before DOB 55
        #RECORD-DATA.TEMPLATE-NAME := #EML-55-3
        #LETTER-NOTE := #EML-DB-DECREASE
        #AGE-A := 55
        #MONTH := 3
      VALUE #LETTER-DATES(24)                  /* mailed & emailed 1 month before DOB 55
        #RECORD-DATA.TEMPLATE-NAME := #LET-55-1
        #LETTER-NOTE := #LET-EML-DB-DECREASE
        #LET_EML := TRUE
        #AGE-A := 55
        #MONTH := 1
      VALUE #LETTER-DATES(25)                  /* mailed 6 months before DOB 60
        #RECORD-DATA.TEMPLATE-NAME := #LET-60-6
        #LETTER-NOTE := #LET-LTI-EXP-WARNINIG
        #AGE-A := 60
        #MONTH := 6
        #EXPIRE:= TRUE
      VALUE #LETTER-DATES(26)                  /* e-mailed 5 months before DOB 60
        #RECORD-DATA.TEMPLATE-NAME := #EML-60-5
        #LETTER-NOTE := #EML-LTI-EXP-WARNINIG
        #AGE-A := 60
        #MONTH := 5
        #EXPIRE:= TRUE
      VALUE #LETTER-DATES(27)                  /* mailed 4 months before DOB 60
        #RECORD-DATA.TEMPLATE-NAME := #LET-60-4
        #LETTER-NOTE := #LET-LTI-EXP-WARNINIG
        #AGE-A := 60
        #MONTH := 4
        #EXPIRE:= TRUE
      VALUE #LETTER-DATES(28)                  /* e-mailed 3 months before DOB 60
        #RECORD-DATA.TEMPLATE-NAME := #EML-60-3
        #LETTER-NOTE := #EML-LTI-EXP-WARNINIG
        #AGE-A := 60
        #MONTH := 3
        #EXPIRE:= TRUE
      VALUE #LETTER-DATES(29)                  /* mailed the month of DOB 60
        #RECORD-DATA.TEMPLATE-NAME := #LET-60-EXP
        #LETTER-NOTE := #LET-LTI-EXPIRATION
        #AGE-A := 60
        #EXPIRE:= TRUE
*
      VALUE #REPORT-2M-DATES(4)                /* report created 2 months before DOB 48
        #RECORD-DATA.REPORT-NAME := #AGE-A := #REP-48-2
      VALUE #REPORT-2M-DATES(5)                /* report created 2 months before DOB 50
        #RECORD-DATA.REPORT-NAME := #AGE-A := #REP-50-2
      VALUE #REPORT-2M-DATES(6)                /* report created 2 months before DOB 55
        #RECORD-DATA.REPORT-NAME := #AGE-A := #REP-55-2
      VALUE #REPORT-2M-DATES(7)                /* report created 2 months before DOB 60
        #RECORD-DATA.REPORT-NAME := #AGE-A := #REP-60-2
        #EXPIRE := TRUE
      NONE VALUE
        IGNORE
    END-DECIDE
* LTII Expiration
  WHEN F-LT2L-TRUE(<ST-V.PLAN(#I)>)
    #LEGACY-LTII := TRUE
    DECIDE ON FIRST VALUE PAID-UP-DATE-YYYYMM(#I)
      VALUE #LETTER-DATES(32)                       /* mailed 4 months before EXPIRATION DATE
        #RECORD-DATA.TEMPLATE-NAME := #LET-LTII-4
        #LETTER-NOTE := #LET-LTII-EXP-WARNING
        #MONTH := 4
      VALUE #LETTER-DATES(33)                       /* e-mailed 3 months before EXPIRATION DATE
        #RECORD-DATA.TEMPLATE-NAME := #EML-LTII-3
        #LETTER-NOTE := #EML-LTII-EXP-WARNING
        #MONTH := 3
      VALUE #LETTER-DATES(34)                       /* mailed/emailed 1 months before EXPIRATION DATE
        #RECORD-DATA.TEMPLATE-NAME := #LET-LTII-1
        #LETTER-NOTE := #LET-EML-LTII-EXP-WARNING
        #LET_EML := TRUE
        #MONTH := 1
      VALUE #LETTER-DATES(35)                        /* mailed the month of expiration
        #RECORD-DATA.TEMPLATE-NAME := #LET-LTII-EXP
        #LETTER-NOTE := #LET-LTII-EXPIRATION
*
      VALUE #REPORT-2M-DATES(8)                     /* report created 2 months before LTII expiration
        #RECORD-DATA.REPORT-NAME := #REP-LTII-EXP-2
        #EXPIRE := TRUE
      NONE VALUE
        IGNORE
    END-DECIDE
* LTII+ Expiration/Renewal
  WHEN F-LT2PLUS-TRUE(<ST-V.PLAN(#I)>)
    #RENEWABLE-LTII := TRUE
    IF ST-V.RENEW-FLAG(#I) = ' '
      #NO-RESPONSE := TRUE
    END-IF
    DECIDE FOR FIRST CONDITION
      WHEN PAID-UP-DATE-YYYYMM(#I) = #LETTER-DATES(30) AND #NO-RESPONSE   /* mailed 6 months before EXPIRATION DATE
        #RECORD-DATA.TEMPLATE-NAME := #LET-LTII-PLUS-6
        #LETTER-NOTE := #LET-LTII-PLUS-EXP-WARNING
        #MONTH := 6
      WHEN PAID-UP-DATE-YYYYMM(#I) = #LETTER-DATES(31) AND #NO-RESPONSE   /* e-mailed 5 months before EXPIRATION DATE
        #RECORD-DATA.TEMPLATE-NAME := #EML-LTII-PLUS-5
        #LETTER-NOTE := #EML-LTII-PLUS-EXP-WARNING
        #MONTH := 5
      WHEN PAID-UP-DATE-YYYYMM(#I) = #LETTER-DATES(32) AND #NO-RESPONSE   /* mailed 4 months before EXPIRATION DATE
        #RECORD-DATA.TEMPLATE-NAME := #LET-LTII-PLUS-4
        #LETTER-NOTE := #LET-LTII-PLUS-EXP-WARNING
        #MONTH := 4
      WHEN PAID-UP-DATE-YYYYMM(#I) = #LETTER-DATES(33) AND #NO-RESPONSE   /* e-mailed 3 months before EXPIRATION DATE
        #RECORD-DATA.TEMPLATE-NAME := #EML-LTII-PLUS-3
        #LETTER-NOTE := #EML-LTII-PLUS-EXP-WARNING
        #MONTH := 3
      WHEN PAID-UP-DATE-YYYYMM(#I) = #LETTER-DATES(34) AND #NO-RESPONSE   /* mailed/emailed 1 months before EXPIRATION DATE
        #RECORD-DATA.TEMPLATE-NAME := #LET-LTII-PLUS-1
        #LETTER-NOTE := #LET-EML-LTII-PLUS-EXP-WARNING
        #LET_EML := TRUE
        #MONTH := 1
      WHEN PAID-UP-DATE-YYYYMM(#I) = #LETTER-DATES(35)                    /* created the month of expiration/renewal
        IF ST-V.RENEW-FLAG(#I) = 'N'
          #EXPIRE := TRUE
          #RECORD-DATA.TEMPLATE-NAME := #LET-LTII-PLUS-EXP
          #LETTER-NOTE := #LET-LTII-PLUS-EXPIRATION
        ELSE
          #RECORD-DATA.TEMPLATE-NAME := #LET-LTII-PLUS-REN
          #LETTER-NOTE := #LET-LTII-PLUS-RENEWAL
        END-IF
*
      WHEN PAID-UP-DATE-YYYYMM(#I) = #REPORT-2M-DATES(8)                  /* report created 2 months before LTII expiration
        #RECORD-DATA.REPORT-NAME := #REP-LTII-EXP-2
        IF ST-V.RENEW-FLAG(#I) = 'N'
          #EXPIRE := TRUE
        END-IF
      WHEN NONE
        IGNORE
    END-DECIDE
* EZ-Term Expiration / Renewal
  WHEN ST-V.PLAN(#I) = #EZ
    #EZ-TERM := TRUE
    DECIDE ON FIRST VALUE #DOB-YYYY-MM
      VALUE #LETTER-DATES(36)                               /* mailed/emailed 2 months before DOB 50
        #RECORD-DATA.TEMPLATE-NAME := #LET-EZ-INCREASE
        #LETTER-NOTE := #LET-EML-EZ-PREM-INCREASE-WARNING
        #LET_EML := TRUE
        #AGE-A := 50
      VALUE #LETTER-DATES(37)                               /* mailed/emailed 2 months before DOB 55
        #RECORD-DATA.TEMPLATE-NAME := #LET-EZ-INCREASE
        #LETTER-NOTE := #LET-EML-EZ-PREM-INCREASE-WARNING
        #LET_EML := TRUE
        #AGE-A := 55
      VALUE #LETTER-DATES(38)                               /* mailed/emailed 2 months before DOB 60
        #RECORD-DATA.TEMPLATE-NAME := #LET-EZ-INCREASE
        #LETTER-NOTE := #LET-EML-EZ-PREM-INCREASE-WARNING
        #LET_EML := TRUE
        #AGE-A := 60
      VALUE #LETTER-DATES(39)
        #RECORD-DATA.TEMPLATE-NAME := #LET-EZ-INCREASE      /* mailed/emailed 2 months before DOB 65
        #LETTER-NOTE := #LET-EML-EZ-PREM-INCREASE-WARNING
        #LET_EML := TRUE
        #AGE-A := 65
      VALUE #LETTER-DATES(40)
        #RECORD-DATA.TEMPLATE-NAME := #LET-EZ-INCREASE      /* mailed/emailed 2 months before DOB 70
        #LETTER-NOTE := #LET-EML-EZ-PREM-INCREASE-WARNING
        #LET_EML := TRUE
        #AGE-A := 70
      VALUE #LETTER-DATES(41)                               /* mailed/emailed 2 months before DOB 75
        #RECORD-DATA.TEMPLATE-NAME := #LET-EZ-INCREASE
        #LETTER-NOTE := #LET-EML-EZ-PREM-INCREASE-WARNING
        #LET_EML := TRUE
        #AGE-A := 75
      VALUE #LETTER-DATES(42)                               /* mailed/emailed 3 months before DOB 80
        #RECORD-DATA.TEMPLATE-NAME := #LET-EZ-EXP
        #LETTER-NOTE := #LET-EML-EZ-EXP-WARNING
        #LET_EML := TRUE
        #MONTH := 3
        #AGE-A := 80
      VALUE #LETTER-DATES(43)                               /* mailed/emailed 2 months before DOB 80
        #RECORD-DATA.TEMPLATE-NAME := #LET-EZ-EXP
        #LETTER-NOTE := #LET-EML-EZ-EXP-WARNING
        #LET_EML := TRUE
        #MONTH := 2
        #AGE-A := 80
      NONE VALUE IGNORE
    END-DECIDE
* RT renewal
  WHEN ST-V.PLAN(#I) = #RT
    DECIDE FOR FIRST CONDITION
* rate is not changing
      WHEN VAL(ST-V.ISSUE-AGE(#I)) <= 44
        IGNORE
* eligible for renew
      WHEN VAL(ST-V.ISSUE-AGE(#I)) <= 65
* check if already replied with option
        PERFORM CHECK-RT-RESPONSE
        #RT-RENEW := TRUE
        DECIDE ON FIRST VALUE PAID-UP-DATE-YYYYMM(#I)
          VALUE #LETTER-DATES(30)                       /* mailed 6 months before renewal date
            #RECORD-DATA.TEMPLATE-NAME := #LET-RT-REN-6
            #LETTER-NOTE := #LET-RT-RENEWAL
            #MONTH := 6
          VALUE #LETTER-DATES(31)                       /* emailed 5 months before renewal date
            #RECORD-DATA.TEMPLATE-NAME := #EML-RT-REN-5
            #LETTER-NOTE := #EML-RT-RENEWAL
            #MONTH := 5
          VALUE #LETTER-DATES(32)                       /* mailed 4 months before renewal date
            #RECORD-DATA.TEMPLATE-NAME := #LET-RT-REN-4
            #LETTER-NOTE := #LET-RT-RENEWAL
            #MONTH := 4
          VALUE #LETTER-DATES(33)                       /* emailed 3 months before renewal date
            #RECORD-DATA.TEMPLATE-NAME := #EML-RT-REN-3
            #LETTER-NOTE := #EML-RT-RENEWAL
            #MONTH := 3
          NONE VALUE
            IGNORE
        END-DECIDE
* about to expire
      WHEN VAL(ST-V.ISSUE-AGE(#I)) > 65
        IF PAID-UP-DATE-YYYYMM(#I) = #LETTER-DATES(33) /* mailed 3 months before expiration date
          #RT-EXPIRE := TRUE
          #RECORD-DATA.TEMPLATE-NAME := #LET-RT-EXP
          #LETTER-NOTE := #LET-RT-EXP-WARNING
          #MONTH := 3
        END-IF
      WHEN NONE
        IGNORE
    END-DECIDE
  WHEN NONE
    IGNORE
END-DECIDE
END-SUBROUTINE
*
************************************
DEFINE SUBROUTINE CREATE-FILE-RECORD
************************************
*
#CONTACT-ID := #OWNER-CONTACT-ID := ST-V.MEMBER-CONTACT-ID
#RECORD-DATA.INSURED-CN    := ST-V.ID-NUMBER
#RECORD-DATA.POLICY-NUMBER := ST-V.POLICY-ID(#I)
PERFORM GET-OWNER-INFO
* Do not create a record
IF #OWNER-CONTACT-ID = 0
  #OWNER-BAD-CI := #OWNER-BAD-CI + 1
  COMPRESS #RECORD-DATA.POLICY-NUMBER #CONTACT-ID-ERROR INTO #ERROR-MESSAGE
  WRITE (1) #ERROR-MESSAGE
  ESCAPE ROUTINE
END-IF
#RECORD-DATA.OWNER-CN := #OWNER-CN
*
PERFORM POPULATE-DATA
IF #EMAIL AND #NO-EMAIL-ADDR
  ESCAPE ROUTINE
END-IF
*
MOVE BY NAME #RECORD-DATA TO LT-V
LT-V.LAST-LOAD-USER := #USER
LT-V.LAST-LOAD-DATE := #DATN
LT-V.LAST-LOAD-TIME := *TIMN
*
STORE LT-V
#REC-CNT := #REC-CNT + 1
IF #LET_EML AND (NOT #NO-EMAIL-ADDR)
  EXAMINE LT-V.TEMPLATE-NAME FOR 'LET' REPLACE 'EML'
  STORE LT-V
  #REC-CNT := #REC-CNT + 1
END-IF
*
END-SUBROUTINE
*
**************************************
DEFINE SUBROUTINE CREATE-REPORT-RECORD
**************************************
*
* Insured-cn
* Insured-name
* Owner-cn
* Owner-name
* Issue-date
* Termination-Date
* Date of Birth
* Pol-num Issue-age
* Face-amt
* Plan
* Cur-Prem
* R10-prem
* Email
* Pref Phone / Home Phone / Work-Phone
* Street
* Street2
* City
* State
*
#CONTACT-ID := #OWNER-CONTACT-ID := ST-V.MEMBER-CONTACT-ID
#RECORD-DATA.INSURED-CN    := ST-V.ID-NUMBER
#RECORD-DATA.POLICY-NUMBER := ST-V.POLICY-ID(#I)
PERFORM GET-OWNER-INFO
* Create a record on the report with insured data if there is an error for owner
IF #OWNER-CONTACT-ID = 0
  #OWNER-BAD-CI := #OWNER-BAD-CI + 1
  COMPRESS #REPORT.POLICY-NUMBER #CONTACT-ID-ERROR INTO #ERROR-MESSAGE
  WRITE (1) #ERROR-MESSAGE
  #CONTACT-ID := #OWNER-CONTACT-ID := ST-V.MEMBER-CONTACT-ID
END-IF
#RECORD-DATA.OWNER-CN := #OWNER-CN
PERFORM POPULATE-DATA
*
MOVE BY NAME #RECORD-DATA TO #REPORT
* Get current premium
#APREM       := ST-V.ANNUAL-PREM(#I)/12
MOVE EDITED #APREM (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
#AMOUNT := *TRIM(#AMOUNT)
COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
#REPORT.CURR-PREM  := #AMOUNT
#REPORT.ISSUE-AGE  := ST-V.ISSUE-AGE(#I)
*
* Calculate age to get new rates
DECIDE FOR EVERY CONDITION
  WHEN #LEVEL-TERM
    #AGE := VAL(#AGE-A) - 1                          /* 2 months before next birthday
  WHEN #LEGACY-LTII OR #RENEWABLE-LTII
    #DATE-W := ST-V.PAID-UP-DATE(#I) - ST-DATE-OF-BIRTH          /* TT1
    #AGE    := VAL(#YYYY)
    #REPORT.REPORT-NAME := #AGE                      /* Age at expiration
    #DATE-W := #DATN - ST-DATE-OF-BIRTH                           /* TT1
    #AGE := VAL(#YYYY)
    #REPORT.CURRENT-AGE := #AGE                      /* Current age
  WHEN #RENEWABLE-LTII
* AR rate at expiration calcualted as part of "POPULATE-DATA" routine
    #REPORT.AR-PREM := #RECORD-DATA.MONTHLY-PREMIUM
  WHEN NONE
    IGNORE
END-DECIDE
* New LTII+ rate for R10 plan after expiration of current LTI or LTII (if eligible)
* Get new rate with current age
IF #AGE < 76
  #ISSUE-DATE  := #DATN
  #SEX         := ST-GENDER                          /* TT1
  IF #CURR-DEATH-BENEFIT = 0                         /* Calculated only for LTI
    #CURR-DEATH-BENEFIT := #DEATH-BENEFIT
  END-IF
  #FACE-AMT    := #CURR-DEATH-BENEFIT
  #SMOKER-FLAG := #RECORD-DATA.SMOKER
  #PLAN-PASS := 'R10'
  CALLNAT 'GPREMSXX' USING GPREMSXX_Com_Area
  #APREM := #APREM / 12
  MOVE EDITED #APREM (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
  #AMOUNT := *TRIM(#AMOUNT)
  COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
  #REPORT.RT10-PREM  := #AMOUNT
END-IF
*
#REPORT.PREF-PHONE := F-PREF-PHONE(<#OWNER-CONTACT-ID>)
IF #REPORT.PREF-PHONE = ' '
  #REPORT.PREF-PHONE := F-FORMATTED-PHONE(<#OWNER-CONTACT-ID,'C'>)
  IF #REPORT.PREF-PHONE = ' '
    #REPORT.PREF-PHONE := F-FORMATTED-PHONE(<#OWNER-CONTACT-ID,'H'>)
  END-IF
END-IF
#REP-CNT := #REP-CNT + 1
DECIDE FOR FIRST CONDITION
  WHEN #LEVEL-TERM
* LTI report
    COMPRESS  #REPORT.INSURED-CN #TAB #REPORT.POLICY-NUMBER #TAB #REPORT.INSURED-NAME #TAB #REPORT.PLAN #TAB #REPORT.ISSUE-AGE #TAB #REPORT.DATE-OF-BIRTH #TAB
      #REPORT.SMOKER #TAB #REPORT.OWNER-CN #TAB #REPORT.OWNER-NAME #TAB #REPORT.ADDRESS-1 #TAB #REPORT.ADDRESS-2 #TAB #REPORT.ADDRESS-3 #TAB
      #REPORT.FORMATTED-ISSUE-DATE #TAB #REPORT.BENEFIT-DECREASE-DATE #TAB #REPORT.POLICY-EXPIRATION-DATE #TAB #REPORT.DEATH-BENEFIT #TAB
      #REPORT.CURR-PREM #TAB #REPORT.RT10-PREM #TAB #REPORT.PREF-PHONE #TAB #REPORT.EMAIL-ADDRESS #TAB #REPORT.REPORT-NAME #TAB #REPORT.SEND-CORR-IND INTO #OUTPUT
    WRITE WORK FILE 2 #OUTPUT
  WHEN #LEGACY-LTII OR #RENEWABLE-LTII
* LTII LTII+ report
    COMPRESS  #REPORT.INSURED-CN #TAB #REPORT.POLICY-NUMBER #TAB #REPORT.INSURED-NAME #TAB #REPORT.PLAN #TAB #REPORT.ISSUE-AGE #TAB #REPORT.DATE-OF-BIRTH #TAB
      #REPORT.SMOKER #TAB #REPORT.CURRENT-AGE #TAB #REPORT.OWNER-CN #TAB #REPORT.OWNER-NAME #TAB #REPORT.ADDRESS-1 #TAB #REPORT.ADDRESS-2 #TAB #REPORT.ADDRESS-3 #TAB
      #REPORT.FORMATTED-ISSUE-DATE #TAB #REPORT.POLICY-EXPIRATION-DATE #TAB #REPORT.DEATH-BENEFIT #TAB #REPORT.CURR-PREM #TAB #REPORT.RT10-PREM #TAB
      #REPORT.AR-PREM #TAB #REPORT.PREF-PHONE #TAB #REPORT.EMAIL-ADDRESS #TAB #REPORT.REPORT-NAME #TAB #REPORT.SEND-CORR-IND INTO #OUTPUT
    WRITE WORK FILE 3 #OUTPUT
  WHEN NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
********************************
DEFINE SUBROUTINE GET-OWNER-INFO
********************************
*
#OWNER-CN := GET-POLICY-OWNER(<#RECORD-DATA.POLICY-NUMBER>)
IF #RECORD-DATA.INSURED-CN <> #OWNER-CN
  #OWNER-CONTACT-ID := F-GET-CONTACT-ID(<#OWNER-CN>)
END-IF
*
END-SUBROUTINE
*
*******************************
DEFINE SUBROUTINE POPULATE-DATA
*******************************
*
IF #RECORD-DATA.TEMPLATE-NAME = SCAN 'EML'
  #EMAIL := TRUE
END-IF
#PLAN := ST-V.PLAN(#I)
*
DECIDE FOR FIRST CONDITION
  WHEN #LEVEL-TERM
    #PLAN := #LTI
  WHEN #LEGACY-LTII
    #PLAN := #LTII
  WHEN #PLAN = MASK('T99')
    #PLAN := #AR
  WHEN #RENEWABLE-LTII
    #PLAN := #LTII-PLUS
  WHEN NONE
    IGNORE
END-DECIDE
*
#RECORD-DATA.PLAN := #PLAN
#RECORD-DATA.SMOKER := ST-V.SMOKER-FLAG(#I)
#RECORD-DATA.SEND-CORR-IND := ST-V.RENEW-FLAG(#I)
*
#Dynamic_Name := '!L'
CALLNAT 'GPRS0CNT' #OWNER-CONTACT-ID #Dynamic_Name
#RECORD-DATA.OWNER-NAME := #Dynamic_Name
*
#Dynamic_Name := '!L'
CALLNAT 'GPRS0CNT' #CONTACT-ID #Dynamic_Name
#RECORD-DATA.INSURED-NAME := #Dynamic_Name
*
IF #RECORD-DATA.TEMPLATE-NAME <> ' '
  #Dynamic_Name := 'S1'
  CALLNAT 'GPRS0CNT' #OWNER-CONTACT-ID #Dynamic_Name
*  #Dynamic_Name := EDIT_NAME_LOWCASE (< #Dynamic_Name >) /* bz-Name 
  #RECORD-DATA.OWNER-SALUTATION    := #Dynamic_Name
END-IF
*
#RECORD-DATA.DATE-OF-BIRTH := ST-DATE-OF-BIRTH                   /* TT1
IF #RECORD-DATA.SMOKER = 'S'
  #S_N := #SMOKER
ELSE
  #S_N := #NON-SMOKER
END-IF
* if email to be sent find an email address
IF #EMAIL OR #LET_EML OR #RECORD-DATA.REPORT-NAME <> ' '
  #RECORD-DATA.EMAIL-ADDRESS := F-PREF-EMAIL(<#OWNER-CONTACT-ID>)
  IF #RECORD-DATA.EMAIL-ADDRESS = ' '                            /* Owner does not have e-mail
    IF INTRO-FLAG = 'S' OR INTRO-FLAG = 'K' OR INTRO-FLAG = 'G'  /* Retreive member email if spouse, child or grandchild
      #RECORD-DATA.EMAIL-ADDRESS := FUNCTION-MEMBER-EMAIL(<#ID-NUMBER-A>)
    END-IF
  END-IF
  IF #RECORD-DATA.EMAIL-ADDRESS = ' '                                    /* Use insured'e email address
    #RECORD-DATA.EMAIL-ADDRESS := F-PREF-EMAIL(<ST-V.MEMBER-CONTACT-ID>)
  END-IF
  IF #RECORD-DATA.EMAIL-ADDRESS = ' '
    COMPRESS #RECORD-DATA.POLICY-NUMBER #EMAIL-ADDRESS-ERROR INTO #ERROR-MESSAGE
    WRITE (1) #ERROR-MESSAGE
    RESET #ERROR-MESSAGE
    #NO-EMAIL-ADDR := TRUE
    #NO-EMAIL-ADDR-CNT := #NO-EMAIL-ADDR-CNT + 1
  END-IF
END-IF
*
#ADD-CONTACT-ID := #OWNER-CONTACT-ID
#ADD-TYPE       := 'P'  /* Primary
CALLNAT 'ADDN0001' #PDA-ADDRESS
#RECORD-DATA.ADDRESS-1 := #ADD-LINE-1
#RECORD-DATA.ADDRESS-2 := #ADD-LINE-2
#RECORD-DATA.ADDRESS-3 := #ADD-LINE-3
*
* Get owner phone numbers for LTII+ from
IF #RENEWABLE-LTII
  #RECORD-DATA.OWNER-HOME-PHONE := F-FORMATTED-PHONE(<#OWNER-CONTACT-ID,'H'>)
  #RECORD-DATA.OWNER-WORK-PHONE := F-FORMATTED-PHONE(<#OWNER-CONTACT-ID,'W'>)
  #RECORD-DATA.OWNER-CELL-PHONE := F-FORMATTED-PHONE(<#OWNER-CONTACT-ID,'C'>)
END-IF
*
#RECORD-DATA.FORMATTED-ISSUE-DATE  := FUNCTION-CALENDAR(<ST-V.ISSUE-DATE(#I),'F'>)
* If policy did not go through the ME
#DEATH-BENEFIT := ST-V.DEATH-BENEFIT(#I)
IF #DEATH-BENEFIT = 0
  WRITE ST-V.ID-NUMBER
  #DEATH-BENEFIT := ST-V.FACE-AMOUNT(#I)
END-IF
*
DECIDE FOR FIRST CONDITION
  WHEN #LEVEL-TERM
    #CHANGE-DATE := ST-DATE-OF-BIRTH + VAL(#AGE-A) * 10000                   /* TT1
    IF #EXPIRE
      #RECORD-DATA.POLICY-EXPIRATION-DATE := FUNCTION-CALENDAR(<#CHANGE-DATE,'F'>)
    ELSE  /* #DECREASE
      #RECORD-DATA.BENEFIT-DECREASE-DATE := FUNCTION-CALENDAR(<#CHANGE-DATE,'F'>)
    END-IF
* Check for decrease amount
    PERFORM CALCULATE-DEATH-BENEFIT-LTI
  WHEN #LEGACY-LTII OR #RENEWABLE-LTII
    #CHANGE-DATE-YYYYMM := ST-V.PAID-UP-DATE-YYYYMM(#I)
    #CHANGE-DATE-DD     := ST-V.ISSUE-DATE-DD(#I)
    #RECORD-DATA.POLICY-EXPIRATION-DATE := FUNCTION-CALENDAR(<#CHANGE-DATE,'F'>)
    MOVE EDITED #DEATH-BENEFIT (EM=Z,ZZZ,ZZ9) TO #AMOUNT
    #AMOUNT := *TRIM(#AMOUNT)
    COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
    #RECORD-DATA.DEATH-BENEFIT := #AMOUNT
    IF #RENEWABLE-LTII
      DECIDE FOR FIRST CONDITION
        WHEN #RECORD-DATA.TEMPLATE-NAME = #LET-LTII-PLUS-REN
          #RECORD-DATA.POLICY-RENEWAL-DATE := #RECORD-DATA.POLICY-EXPIRATION-DATE
          #CHANGE-DATE := #CHANGE-DATE + 10000
          #RECORD-DATA.POLICY-EXPIRATION-DATE := FUNCTION-CALENDAR(<#CHANGE-DATE,'F'>)
          #RECORD-DATA.IS-SENT := 'N'                                        /* marked to send during month end
        WHEN #RECORD-DATA.TEMPLATE-NAME = #LET-LTII-PLUS-EXP
          #RECORD-DATA.IS-SENT := 'N'                                        /* marked to send during month end
        WHEN NONE
          IGNORE
      END-DECIDE
    END-IF
  WHEN #EZ-TERM
    #CHANGE-DATE := ST-DATE-OF-BIRTH + VAL(#AGE-A) * 10000                   /* TT1
    IF #EXPIRE
      #RECORD-DATA.POLICY-EXPIRATION-DATE := FUNCTION-CALENDAR(<#CHANGE-DATE,'F'>)
    ELSE  /* new age band rate
      #RECORD-DATA.POLICY-RENEWAL-DATE := FUNCTION-CALENDAR(<#CHANGE-DATE,'F'>)
    END-IF
    MOVE EDITED #DEATH-BENEFIT (EM=Z,ZZZ,ZZ9) TO #AMOUNT
    #AMOUNT := *TRIM(#AMOUNT)
    COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
    #RECORD-DATA.DEATH-BENEFIT := #AMOUNT
  WHEN #RT-RENEW
    DECIDE ON FIRST VALUE ST-V.MODE(#I)
      VALUE 'G'
        #RECORD-DATA.PAYMENT-MODE := 'A'  /* Allotment
      VALUE 'E'
        #RECORD-DATA.PAYMENT-MODE := 'E'  /* EZ-pay
      VALUE '1','2','4','0'
        #RECORD-DATA.PAYMENT-MODE := 'C'  /* Credit Card
      VALUE 'M','Q','S','A'
        #RECORD-DATA.PAYMENT-MODE := 'D'  /* Direct Bill
      NONE VALUE
        IGNORE
    END-DECIDE
* this date should be in the format MMDDYYYY for SSRS to use in letter text
    #CHANGE-DATE-YYYYMM := ST-V.PAID-UP-DATE-YYYYMM(#I)
    #CHANGE-DATE-DD     := ST-V.ISSUE-DATE-DD(#I)
    #RECORD-DATA.POLICY-CHANGE-DATE  := FUNCTION-CALENDAR(<#CHANGE-DATE,'D'>)
    #RECORD-DATA.POLICY-RENEWAL-DATE := FUNCTION-CALENDAR(<#CHANGE-DATE,'F'>)
    MOVE EDITED #DEATH-BENEFIT (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
    #AMOUNT := *TRIM(#AMOUNT)
    COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
    #RECORD-DATA.DEATH-BENEFIT := #AMOUNT
    #APREM := ST-V.ANNUAL-PREM(#I) / 12
    MOVE EDITED #APREM (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
    #AMOUNT := *TRIM(#AMOUNT)
    COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
    #RECORD-DATA.RT-PREMIUMS (1):= #AMOUNT
  WHEN #RT-EXPIRE
    #CHANGE-DATE-YYYYMM := ST-V.PAID-UP-DATE-YYYYMM(#I)
    #CHANGE-DATE-DD     := ST-V.ISSUE-DATE-DD(#I)
    #RECORD-DATA.POLICY-EXPIRATION-DATE := FUNCTION-CALENDAR(<#CHANGE-DATE,'F'>)
    MOVE EDITED #DEATH-BENEFIT (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
    #AMOUNT := *TRIM(#AMOUNT)
    COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
    #RECORD-DATA.DEATH-BENEFIT := #AMOUNT
  WHEN NONE
    IGNORE
END-DECIDE
*
IF #RECORD-DATA.TEMPLATE-NAME <> ' ' OR #RECORD-DATA.REPORT-NAME = #REP-LTII-EXP-2
* Get rates for new plans if applicable
  DECIDE FOR FIRST CONDITION
    WHEN #RECORD-DATA.TEMPLATE-NAME = #RT-RATES-38(*)
      #AGE := 37
      PERFORM GET-RATES
    WHEN #RECORD-DATA.TEMPLATE-NAME = #RT-RATES-48(*)
      #AGE := 47
      PERFORM GET-RATES
    WHEN #RENEWABLE-LTII OR #EZ-TERM OR #RT-RENEW
      PERFORM CALC-NEW-PREM
    WHEN NONE
      IGNORE
  END-DECIDE
END-IF
*
END-SUBROUTINE
*
**===========================================
DEFINE SUBROUTINE CALCULATE-DEATH-BENEFIT-LTI
**===========================================
*
DECIDE FOR FIRST CONDITION
  WHEN (#RECORD-DATA.SMOKER = 'S' AND (#AGE-A = '38' OR #AGE-A = '40')) OR
      (#RECORD-DATA.SMOKER = 'N' AND (#AGE-A = '48' OR #AGE-A = '50'))
    #CURR-DEATH-BENEFIT := #DEATH-BENEFIT
    #DB-AMT := #DEATH-BENEFIT * 0.27
    MOVE EDITED #DB-AMT (EM=Z,ZZZ,ZZ9) TO #AMOUNT
    #AMOUNT := *TRIM(#AMOUNT)
    COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
    #RECORD-DATA.DEATH-BENEFIT-DECREASED-1 := #AMOUNT
    #DB-AMT := #DEATH-BENEFIT * 0.20
    MOVE EDITED #DB-AMT (EM=Z,ZZZ,ZZ9) TO #AMOUNT
    #AMOUNT := *TRIM(#AMOUNT)
    COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
    #RECORD-DATA.DEATH-BENEFIT-DECREASED-2 := #AMOUNT
  WHEN #RECORD-DATA.SMOKER = 'S' AND #AGE-A = '45' OR
      #RECORD-DATA.SMOKER = 'N' AND #AGE-A = '55'
    #CURR-DEATH-BENEFIT := #DEATH-BENEFIT * 0.27
    #DB-AMT := #DEATH-BENEFIT * 0.20
    MOVE EDITED #DB-AMT (EM=Z,ZZZ,ZZ9) TO #AMOUNT
    #AMOUNT := *TRIM(#AMOUNT)
    COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
    #RECORD-DATA.DEATH-BENEFIT-DECREASED-1 := #AMOUNT
  WHEN #RECORD-DATA.SMOKER = 'S' AND #AGE-A = '50' OR
      #RECORD-DATA.SMOKER = 'N' AND #AGE-A = '60'
    #CURR-DEATH-BENEFIT := #DEATH-BENEFIT * 0.20
  WHEN NONE
    IGNORE
END-DECIDE
*
MOVE EDITED #CURR-DEATH-BENEFIT (EM=Z,ZZZ,ZZ9) TO #AMOUNT
#AMOUNT := *TRIM(#AMOUNT)
COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
#RECORD-DATA.DEATH-BENEFIT := #AMOUNT
*
END-SUBROUTINE
*
**=========================
DEFINE SUBROUTINE GET-RATES
**=========================
* New LTII rates
#ISSUE-DATE  := #DATN
#SEX         := ST-GENDER                    /* TT1
#FACE-AMT    := #CURR-DEATH-BENEFIT
#SMOKER-FLAG := #RECORD-DATA.SMOKER
#PLAN-PASS := 'R10'
CALLNAT 'GPREMSXX' USING GPREMSXX_Com_Area
#APREM := #APREM / 12
MOVE EDITED #APREM (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
#AMOUNT := *TRIM(#AMOUNT)
COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
#RECORD-DATA.LT2-PREMIUMS (1):= #AMOUNT
#PLAN-PASS := 'R15'
CALLNAT 'GPREMSXX' USING GPREMSXX_Com_Area
#APREM := #APREM / 12
MOVE EDITED #APREM (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
#AMOUNT := *TRIM(#AMOUNT)
COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
#RECORD-DATA.LT2-PREMIUMS (2):= #AMOUNT
#PLAN-PASS := 'R20'
CALLNAT 'GPREMSXX' USING GPREMSXX_Com_Area
#APREM := #APREM / 12
MOVE EDITED #APREM (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
#AMOUNT := *TRIM(#AMOUNT)
COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
#RECORD-DATA.LT2-PREMIUMS (3):= #AMOUNT
#PLAN-PASS := 'R30'
CALLNAT 'GPREMSXX' USING GPREMSXX_Com_Area
#APREM := #APREM / 12
MOVE EDITED #APREM (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
#AMOUNT := *TRIM(#AMOUNT)
COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
#RECORD-DATA.LT2-PREMIUMS (4):= #AMOUNT
*
* New RT Rates
#PLAN-PASS   := 'RT'
#II  := 1
REPEAT UNTIL #AGE > 65
  CALLNAT 'GPREMSXX' USING GPREMSXX_Com_Area
  #APREM := #APREM / 12
  MOVE EDITED #APREM (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
  #AMOUNT := *TRIM(#AMOUNT)
  COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
  #RECORD-DATA.RT-PREMIUMS (#II):= #AMOUNT
  #AGE := #AGE + 5
  #II := #II + 1
END-REPEAT
*
END-SUBROUTINE
*
*******************************
DEFINE SUBROUTINE CALC-NEW-PREM
*******************************
*
* Get new rate for Annual renewable/EZ Term - Returns monthly premium #NEW-PREM
DECIDE FOR FIRST CONDITION
  WHEN #RENEWABLE-LTII
* Annual Renewable
* Calculate new issue age
    #DATE-W := ST-V.PAID-UP-DATE(#I) - ST-DATE-OF-BIRTH
    #NEW-ISSUE-AGE := VAL(#YYYY)
    #APREM := F-LTII-RENEW-RATES (< #NEW-ISSUE-AGE >)
    #APREM := #APREM * (ST-V.FACE-AMOUNT(#I) / 10000)   /* New Monthly LTII+ Premium
    MOVE EDITED #APREM (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
    #AMOUNT := *TRIM(#AMOUNT)
    COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
    #RECORD-DATA.MONTHLY-PREMIUM := #AMOUNT
  WHEN #EZ-TERM
* EZ Term New Annual Premium
*   #DATE-W := #DATN - ST-V.DATE-OF-BIRTH
    #NEW-ISSUE-AGE :=  VAL(#AGE-A)
    #FACE-AMT      :=  ST-V.FACE-AMOUNT(#I)
    CALLNAT 'GPRNNMT1' #NEW-ISSUE-AGE ST-GENDER #FACE-AMT #APREM          /* TT1
    #APREM := #APREM / 12                               /* New Monthly EZ-Term Premium
    MOVE EDITED #APREM (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
    #AMOUNT := *TRIM(#AMOUNT)
    COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
    #RECORD-DATA.MONTHLY-PREMIUM := #AMOUNT
  WHEN #RT-RENEW
* Calculate next 5 years RT rate with the same death benefit
    #ISSUE-DATE  := ST-V.ISSUE-DATE(#I)
    #SEX         := ST-GENDER                           /* TT1
    #FACE-AMT    := ST-V.FACE-AMOUNT(#I)
    #SMOKER-FLAG := #RECORD-DATA.SMOKER
    #PLAN-PASS   := 'RT'
    #AGE := VAL(ST-V.ISSUE-AGE(#I)) + 5
    CALLNAT 'GPREMSXX' USING GPREMSXX_Com_Area
    #APREM := #APREM / 12
    MOVE EDITED #APREM (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
    #AMOUNT := *TRIM(#AMOUNT)
    COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
    #RECORD-DATA.RT-PREMIUMS (2):= #AMOUNT
* Calculate decreased death benefit with the same rate (option to choose)
    PERFORM CALC-NEW-DB
* If allotment payer - get allotment total if a member is paying for Linked-cn's
    IF #RECORD-DATA.PAYMENT-MODE = 'A'
      PERFORM CALC-ALLOTMENT-TOTAL
    END-IF
  WHEN NONE
    IGNORE
END-DECIDE
END-SUBROUTINE
*
**===========================
DEFINE SUBROUTINE CALC-NEW-DB
**===========================
*
DECIDE FOR FIRST CONDITION
  WHEN #AGE < 50 #II := 1
  WHEN #AGE < 55 #II := 2
  WHEN #AGE < 60 #II := 3
  WHEN #AGE < 65 #II := 4
  WHEN #AGE < 70 #II := 5
  WHEN #AGE = 70 #II := 6
  WHEN NONE
    IGNORE
END-DECIDE
IF SMOKER-FLAG(#I) = 'S'
  COMPUTE ROUNDED #DEATH-BENEFIT = #DEATH-BENEFIT * (1 - #RT-REDUCTION-RATES-S(#II))
ELSE
  COMPUTE ROUNDED #DEATH-BENEFIT = #DEATH-BENEFIT * (1 - #RT-REDUCTION-RATES-N(#II))
END-IF
MOVE EDITED #DEATH-BENEFIT (EM=Z,ZZZ,ZZ9.99) TO #AMOUNT
#AMOUNT := *TRIM(#AMOUNT)
COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
#RECORD-DATA.DEATH-BENEFIT-DECREASED-1 := #AMOUNT
END-SUBROUTINE
*
**====================================
DEFINE SUBROUTINE CALC-ALLOTMENT-TOTAL
**====================================
*
* Get total current / total increased allotment with higher prems
RESET #PARM-ALLOTMENT-INFORMATION #ALLOTMENT-INFORMATION
##CGA-ISN         := #ST-ISN
##CGA-SCR-COMMAND := 'FA'
##CGA-SCR-ID      := ST-V.ID-NUMBER
##CGA-SCR-SUFFIX  := 'RTL'
STACK TOP DATA #PARM-ALLOTMENT-INFORMATION
FETCH RETURN 'C2800PFA'
*
IF *DATA NE 0
  INPUT #STOP-AMT #START-AMT
  RELEASE STACK
END-IF
*
#AMOUNT := *TRIM(#STOP-AMT)
COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
#RECORD-DATA.RT-PREMIUMS(3) := #AMOUNT
*
#AMOUNT := *TRIM(#START-AMT)
COMPRESS '$' #AMOUNT INTO #AMOUNT LEAVING NO
#RECORD-DATA.RT-PREMIUMS(4) := #AMOUNT
END-SUBROUTINE
*
***********************************
DEFINE SUBROUTINE CHECK-RT-RESPONSE
***********************************
*
FIND NOTES-V WITH ID-NUMBER = ST-V.ID-NUMBER
  FOR #II = 1 TO C*NOTE-TABLE
    IF NOTE-TEXT(#II) = MASK('* MEMBER ELECTS TO')
        AND NOTE-DATE(#II) > (#DATN - 10000)                 /* Within the last year
      IF ST-V.RENEW-FLAG(#I) = ' '
        #RENEW-FLAG(#I) := ST-V.RENEW-FLAG(#I) := 'X'
        #UPDATE-ST := TRUE
      END-IF
    END-IF
  END-FOR
END-FIND
*
END-SUBROUTINE
*
****************************
DEFINE SUBROUTINE WRITE-NOTE
****************************
*
IF (#EMAIL AND #NO-EMAIL-ADDR) OR #ERROR-MESSAGE <> ' '
  ESCAPE ROUTINE
END-IF
EXAMINE #LETTER-NOTE FOR 'X'  REPLACE #MONTH
EXAMINE #LETTER-NOTE FOR '99' REPLACE #AGE-A
IF #LET_EML AND #NO-EMAIL-ADDR
  EXAMINE #LETTER-NOTE FOR '/email' DELETE
END-IF
#II := 1
#NOTE-TEXT (#II) := #LETTER-NOTE
*
CALLNAT 'E4205SDM' #ID-NUMBER
  #II
  #CLERK-ID
  #NOTE-TEXT (1:10)
*
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE SEND-REPORT
******************************
* send LTI report
CLOSE WORK FILE 2
COMPRESS #UNIX-DIR #REPORT-FILE-LTI INTO #UNIX-FILE-NAME LEAVING NO
COMPRESS #WINDOWS-USER-DIR #REPORT-FILE-LTI #DATN '.txt' INTO #WIN-FILE-NAME LEAVING NO
CALLNAT 'GPRN0002' #FTP-SCRIPT-NAME #UNIX-FILE-NAME #WIN-FILE-NAME
* send LTII report
CLOSE WORK FILE 3
COMPRESS #UNIX-DIR #REPORT-FILE-LTII INTO #UNIX-FILE-NAME LEAVING NO
COMPRESS #WINDOWS-USER-DIR #REPORT-FILE-LTII #DATN '.txt' INTO #WIN-FILE-NAME LEAVING NO
CALLNAT 'GPRN0002' #FTP-SCRIPT-NAME #UNIX-FILE-NAME #WIN-FILE-NAME
*
END-SUBROUTINE
END
