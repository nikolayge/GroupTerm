* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: AMORTIZ    -   calc amortization
*
*
DEFINE DATA
LOCAL
1 #ADDL-PMT     (N5.2)
1 #ADDL-PMT-STRT-MM (N2)
1 #ADDL-PMT-STRT-YYYY (N4)
1 #ADDL-PMT-END-MM (N2)
1 #ADDL-PMT-END-YYYY (N4)
1 #BEG-BAL      (N5.2)
1 #INT-RATE     (N0.5)
1 #MON-PRIN-PMT (N4.2)
1 #NEW-PRIN     (N5.2)
1 #MON-INT-5    (N5.5)
1 #MON-INT      (N5.2)
1 #TOT-INT      (N5.2)
1 #TOT-MON-PMT  (N5.2)
1 #TOT-MON-PMT-TO-USE  (N5.2)
1 #LAST-PMT     (N5.2)
1 #PMT-NUM      (N5)
1 #YTD-INT      (N5.2)
1 #EVEN-TOT-PMT (L)
1 #BEG-MONTH    (N2)
1 #BEG-YYYY     (N4)
1 #CUR-MONTH    (N2)
1 #CUR-YYYY     (N4)
*
END-DEFINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
MOVE 10     TO #BEG-MONTH
MOVE 2003   TO #BEG-YYYY
MOVE 76000  TO #BEG-BAL
MOVE .03918 TO #INT-RATE
MOVE 1150   TO #TOT-MON-PMT
MOVE 500    TO #ADDL-PMT           /* was 1000
MOVE 08     TO #ADDL-PMT-STRT-MM   /* was 12
MOVE 2004   TO #ADDL-PMT-STRT-YYYY /* was 2003
MOVE 12     TO #ADDL-PMT-END-MM    /* was 12
MOVE 2006   TO #ADDL-PMT-END-YYYY  /* was 2004
*
REPEAT
INPUT MARK *#BEG-MONTH USING MAP 'ZAMORTIM'
*
IF #BEG-MONTH = 99
  STOP
END-IF
*
IF   (#MON-PRIN-PMT NE 0)
 AND (#TOT-MON-PMT NE 0)
  REINPUT 'Only 1 of Mon-Prin-Pmt and Tot-mon-pmt can be entered'
  MARK *#BEG-MONTH
END-IF
*
FORMAT LS=133 PS=76
*
RESET #YTD-INT #TOT-INT #PMT-NUM
*
IF #TOT-MON-PMT NE 0
  MOVE TRUE TO #EVEN-TOT-PMT
END-IF
*
MOVE #BEG-MONTH TO #CUR-MONTH
MOVE #BEG-YYYY  TO #CUR-YYYY
MOVE #BEG-BAL TO #NEW-PRIN
WRITE 'BEG balance =' #NEW-PRIN
WRITE 'INT RATE    =' #INT-RATE
WRITE 'Mon-Prin-Pmt=' #MON-PRIN-PMT
WRITE 'Tot Mon Pmt =' #TOT-MON-PMT
REPEAT
*
  COMPUTE ROUNDED #MON-INT-5 = (#NEW-PRIN * #INT-RATE) / 12
  MOVE ROUNDED #MON-INT-5 TO #MON-INT
  ADD #MON-INT TO #YTD-INT
  ADD #MON-INT TO #TOT-INT
*
  IF #EVEN-TOT-PMT
    MOVE #TOT-MON-PMT TO #TOT-MON-PMT-TO-USE
*   WRITE #CUR-YYYY #CUR-MONTH #ADDL-PMT-STRT-YYYY #ADDL-PMT-END-MM
    IF #ADDL-PMT NE 0
      IF ((#CUR-YYYY  GT #ADDL-PMT-STRT-YYYY)
       OR ((#CUR-YYYY  = #ADDL-PMT-STRT-YYYY)
                  AND (#CUR-MONTH GE #ADDL-PMT-STRT-MM)))
      AND ((#CUR-YYYY  LT #ADDL-PMT-END-YYYY)
       OR ((#CUR-YYYY  = #ADDL-PMT-END-YYYY)
                  AND (#CUR-MONTH LE #ADDL-PMT-END-MM)))
*       WRITE 'add 1000'
        ADD #ADDL-PMT TO #TOT-MON-PMT-TO-USE
      END-IF
    END-IF
*
    IF #TOT-MON-PMT-TO-USE GT (#NEW-PRIN + #MON-INT)
      COMPUTE #TOT-MON-PMT-TO-USE = #MON-INT + #NEW-PRIN
      MOVE #NEW-PRIN TO #MON-PRIN-PMT
      RESET #NEW-PRIN
*     WRITE 'LAST PMT =' #TOT-MON-PMT-to-use
    ELSE
      COMPUTE #MON-PRIN-PMT = #TOT-MON-PMT-TO-USE - #MON-INT
      COMPUTE #NEW-PRIN = #NEW-PRIN - #MON-PRIN-PMT
    END-IF
  ELSE
    IF (#MON-PRIN-PMT + #MON-INT) GT #NEW-PRIN
      COMPUTE #TOT-MON-PMT-TO-USE = #MON-INT + #NEW-PRIN
      MOVE #NEW-PRIN TO #MON-PRIN-PMT
      RESET #NEW-PRIN
*     WRITE 'LAST PMT =' #TOT-MON-PMT-to-use
    ELSE
      COMPUTE #TOT-MON-PMT-TO-USE = #MON-PRIN-PMT + #MON-INT
      COMPUTE #NEW-PRIN = #NEW-PRIN - #MON-PRIN-PMT
    END-IF
  END-IF
*
  ADD 1 TO #PMT-NUM
  DISPLAY 'PMT/NUM' #PMT-NUM
   'MON'      #CUR-MONTH
   'YYYY'     #CUR-YYYY
   'NEW/PRIN' #NEW-PRIN
   'PRIN/PMT' #MON-PRIN-PMT
   'INT/PMT'  #MON-INT
   'INT/PMT'  #MON-INT
   'TOT/PMT'  #TOT-MON-PMT-TO-USE
   'YTD/INT'  #YTD-INT
*
  IF #CUR-MONTH = 12 OR = 24 OR = 36 OR = 48 OR = 60 OR = 72
    WRITE ' '
    RESET #YTD-INT
    ADD 1 TO #CUR-YYYY
    RESET #CUR-MONTH
  END-IF
*
  ADD 1 TO #CUR-MONTH
*
  IF #NEW-PRIN LE 0
    ESCAPE BOTTOM
  END-IF
END-REPEAT
*
WRITE // #TOT-INT 'TOTAL-INT PAID'
*
IF #EVEN-TOT-PMT
  RESET #MON-PRIN-PMT
ELSE
  RESET #TOT-MON-PMT
END-IF
*
END-REPEAT
*
END
