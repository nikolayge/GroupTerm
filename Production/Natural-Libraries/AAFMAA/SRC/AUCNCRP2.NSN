* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCNCRP1'
*
* DESCRIPTION
*   XML Parser implementationfor file:
*
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
LOCAL USING AUCACR07
LOCAL USING PARSER-X
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
*
LOCAL
1 #LEN              (I4)
1 #PARSE-ERROR      (I4)  CONST <-7>
1 #GET              (I4)  CONST <0>
1 #TRUE             (A4)  CONST <'TRUE'>
1 #FALSE            (A5)  CONST <'FALSE'>
END-DEFINE
* ----------------------------------------------------------------
RESET ContactRelations
ASSIGN #LEN := *LENGTH (#XML_INPUT)
IF #LEN <= 0
  ContactRelations.ErrorCode := #PARSE-ERROR
  ContactRelations.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNRLS2' #XML_OUTPUT ContactRelations
  ESCAPE ROUTINE
END-IF
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
ContactRelations.ErrorCode := #PARSE-ERROR
ContactRelations.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNRLS2' #XML_OUTPUT ContactRelations
END-SUBROUTINE
*
DEFINE SUBROUTINE CALLBACK
/*                ========
IF XML_PARSER_CONTENT_IS_EMPTY THEN
  IGNORE
ELSE
  #XML_VALUE := *TRIM (#XML_VALUE)
  MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
  PERFORM PARSE-DOCUMENT
END-IF
END-SUBROUTINE
*
CALLNAT 'AUCNCRG1' ContactRelations.ContactID #XML_OUTPUT
* ------------------------------------------------- CALL THE PARSER
* PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE #XML_VALUE
*
DEFINE PARSE-DOCUMENT
/*     ==============
DECIDE ON FIRST #XML_PATH
  VALUE 'ContactRelations//'
    IGNORE
  VALUE 'ContactRelations'
    RESET INITIAL ContactRelations
  VALUE 'ContactRelations/ActionType//'
    IGNORE
  VALUE 'ContactRelations/ActionType'
    IGNORE
  VALUE 'ContactRelations/ActionType/$'
    ContactRelations.ActionType := VAL(#XML_VALUE)
  VALUE 'ContactRelations/ErrorCode//'
    IGNORE
  VALUE 'ContactRelations/ErrorCode'
    IGNORE
  VALUE 'ContactRelations/ErrorCode/$'
    ContactRelations.ErrorCode := VAL(#XML_VALUE)
  VALUE 'ContactRelations/ErrorDescription//'
    IGNORE
  VALUE 'ContactRelations/ErrorDescription'
    IGNORE
  VALUE 'ContactRelations/ErrorDescription/$'
    ContactRelations.ErrorDescription := #XML_VALUE
  VALUE 'ContactRelations/ContactID//'
    IGNORE
  VALUE 'ContactRelations/ContactID'
    IGNORE
  VALUE 'ContactRelations/ContactID/$'
    ContactRelations.ContactID := VAL(#XML_VALUE)
  VALUE 'ContactRelations/CN//'
    IGNORE
  VALUE 'ContactRelations/CN'
    IGNORE
  VALUE 'ContactRelations/CN/$'
    ContactRelations.CN := VAL(#XML_VALUE)
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END
