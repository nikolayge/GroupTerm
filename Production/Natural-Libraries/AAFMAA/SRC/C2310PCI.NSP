* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: C2310PCI
*
*    CI SCREEN 'RTAD' PROCESSING   RT ADJUST - switch to opposite choice
*                                  after RT RENEWAL
*********************************************************
*                       MODIFICATION LOG
* USER DATE      TAG   REASON
*
* PAM  07142004  PM1   Added original death benefit to RT reversal
*                      note if the reversal lowers the DB.
* DRW  09292004  DW2   Add Credit Card Processing
* DRW  05152005  DW3   Add SEX for LTII prem calc
* DRW  07202005  DW4   Create Acct TR if DB/CR or BADJ chges
* DRW 04/07/2008 DW5   Add TIMN to C2522SAM Linkage so all trans have same time
* NGG 20131202   NG1   1M$ project changes
* TMT 06/12/2014 TT1   Contact Normalization - DOB and Sex
******************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK.CI-BLOCK
LOCAL
*
* Linkage to C2522SAM below    /* DW4
1 #SOURCE-PROG  (A8)   /* Prog sending Info
1 #EFF-DT       (N8)
1 #ILN1       (I2)
1 #TR-CD      (A4)
1 #ADJ-AMT    (N5.2)
1 #OLD-FPF         (N7.2)
1 #NEW-FPF         (N7.2)
1 #LAST-DATE-UPDATE (N8)
1 #NEW-DATE-UPDATE  (N8)
1 #ISSUE-DATE      (N8)   /* issue date of affected policy
1 #SCR-TRAN-COD    (A4)   /* TRAN Code if from CI
1 #CMBX            (A4)   /* Used to send indicator to C2522sam for Desc
1 #TIMN            (n7)              /* DW5
* Linkage to C2522SAM above
*
1 #TR-REG-OLD-RTAD-GR
 2 #TR-OLD-RTAD-LBL        (A07) INIT <'CI-RTAD'>
 2 #TR-OLD-RTAD-ISS-LBL    (A08) INIT <' ISS-DT '>
 2 #TR-OLD-RTAD-ISS        (N8)
 2 #TR-OLD-RTAD-PRM-LBL    (A06) INIT <' PREM '>
 2 #TR-OLD-RTAD-PRM        (A09)
 2 #TR-OLD-RTAD-DB-LBL     (A12) INIT <' DEATH BENE '>
 2 #TR-OLD-RTAD-DB         (A10)
 2 #TR-OLD-RTAD-ADJ-LBL    (A11) INIT <' PREM DIFF '>
 2 #TR-OLD-RTAD-ADJ        (A10)
1 REDEFINE #TR-REG-OLD-RTAD-GR
 2 #TR-OLD-RTAD              (A81)
*
1 #TR-REG-NEW-RTAD-GR
 2 #TR-NEW-RTAD-LBL        (A07) INIT <'CI-RTAD'>
 2 #TR-NEW-RTAD-ISS-LBL    (A08) INIT <' ISS-DT '>
 2 #TR-NEW-RTAD-ISS        (N8)
 2 #TR-NEW-RTAD-PRM-LBL    (A06) INIT <' PREM '>
 2 #TR-NEW-RTAD-PRM        (A09)
 2 #TR-NEW-RTAD-DB-LBL     (A12) INIT <' DEATH BENE '>
 2 #TR-NEW-RTAD-DB         (A10)
 2 #TR-NEW-RTAD-ADJ-LBL    (A11) INIT <' PREM DIFF '>
 2 #TR-NEW-RTAD-ADJ        (A10)
1 REDEFINE #TR-REG-NEW-RTAD-GR
 2 #TR-NEW-RTAD              (A81)
*
1 NT-V VIEW OF A-NOTES
 2 NOTE-TEXT   (A60/60)
 2 REDEFINE NOTE-TEXT
  3 NOTE-OCC     (60)
   4 NOTE-TEXT-FOR-POL-ISS
    5 NT-POL-ISS   (A10)
    5 NT-PI-MM     (A2)
    5 NT-FIL1      (A1)
    5 NT-PI-DD     (A2)
    5 NT-FIL2      (A1)
    5 NT-PI-YYYY   (A4)
    5 NT-DB-REST   (A40)
    5 REDEFINE NT-DB-REST   /* DB LOWERED
     6 NT-DB-LBL    (A4)    /* ' DB '
     6 NT-DB-THOU   (A3)
     6 NT-FIL3      (A1)
     6 NT-DB-HUND   (A3)
     6 NT-FIL4      (A1)
     6 NT-DB-PENN   (A2)
     6 NT-FIL5      (A26)
    5 REDEFINE NT-DB-REST   /* prem raised
     6 NT-PR-LBL    (A6)    /* ' PREM '
     6 NT-PR-THOU   (A2)    /* Prior Premium
     6 NT-FIL6      (A1)
     6 NT-PR-HUND   (A3)
     6 NT-FIL7      (A1)
     6 NT-PR-PENN   (A2)
     6 NT-FIL8      (A25)
*
1 #YYYYMMDD    (N8)
1 REDEFINE #YYYYMMDD
 2 #YYYY     (N4)
 2 #MM       (N2)
 2 #DD       (N2)
1 REDEFINE #YYYYMMDD
 2 #YYYY-A   (A4)
 2 #MM-A     (A2)
 2 #DD-A     (A2)
1 REDEFINE #YYYYMMDD
 2 #YYYYMMDD-A (A8)
*
1 #AMT-8     (A8)
1 REDEFINE #AMT-8
 2 #AMT-8-X  (A1/8)
1 REDEFINE #AMT-8
 2 #AMT-8-N  (N6.2)
*
1 #AMT-7     (A7)
1 REDEFINE #AMT-7
 2 #AMT-7-X  (A1/7)
1 REDEFINE #AMT-7
 2 #AMT-7-N  (N5.2)
1 REDEFINE #AMT-7
 2 #AMT-7-THOU  (A2)
 2 #AMT-7-HUND  (A3)
 2 #AMT-7-PENN  (A2)
*
1 #INT           (I2)
1 #NOTE-TEXT     (A60/10)
1 #CURR-PREM  (N5.2)
1 #NEW-PREM   (N5.2)
1 #CURR-DB    (N6.2)
1 #NEW-DB     (N6.2)
1 #PRIOR-DB   (A10)                                               /* PM1
1 #PRIOR-PREM (N5.2)
1 #I2         (I2)
1 #I3         (I2)
1 #DB-WAS-LOWERED  (L)
1 #PREM-WAS-RAISED (L)
1 #SUFFIX          (A3)
1 #PREM-6-2        (N7.2)           /* NG1
1 #WORK-FREQ       (N2)
1 #NEW-AGE         (N2)
1 #NUM-MONTHS      (N5)
1 #NEW-PRMS-PD     (N5.2)
1 #PREMS-DIFF      (N5.2)
1 #OLD-PRMS-PD     (N5.2)
1 #ISS-DTE       (A10)
*
*  BELOW ALSO IN ATHPRTCK          55-59     65-69
1 #REDUCTION-RATES /*    <50  50-54     60-64     70
 2 #NON-SMK (A30) INIT <'0000/5200/4186/3485/2979/4689/'>
 2 #SMOKER  (A30) INIT <'0000/5000/4805/3419/2778/4689/'>
1 REDEFINE #REDUCTION-RATES
 2 #REDUCT-N-S    (2)   /* non-smoker/smoker
  3 #REDUCT-AGES  (6)   /* under 50/50-54/55-59/60-64/65-69/70 & over
   4 #REDUCT-RATE   (N0.4)
   4 #FILL          (A1)
1 #SEX              (A1)           /* TT1
*
END-DEFINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
move *timn to #timn                    /* DW5
RESET #CGA-MF-SCR-PARM-1-N   /* used to pass to c2300pci (bill-adj)
MOVE CI-V.ANNUAL-PREM   (#IFL) TO #CURR-PREM
MOVE CI-V.DEATH-BENEFIT (#IFL) TO #CURR-DB
*
MOVE CI-V.ISSUE-DATE (#IFL) TO #TR-OLD-RTAD-ISS
MOVE EDITED #CURR-PREM (EM=ZZ,ZZZ.99)  TO #TR-OLD-RTAD-PRM
MOVE EDITED #CURR-DB   (EM=ZZZ,ZZZ.99) TO #TR-OLD-RTAD-DB
*
ADD 1 TO #ITR2
MOVE #TR-OLD-RTAD TO TR-REG-V.OLD-DATA (#ITR1)
*
FIND NT-V WITH ID-NUMBER = CI-V.ID-NUMBER
  FOR #I1 60 TO 1 STEP -1
    IF NT-POL-ISS (#I1) = '* POL ISS'
      COMPRESS NT-PI-YYYY (#I1) NT-PI-MM (#I1) NT-PI-DD (#I1)
         INTO #YYYYMMDD-A LEAVING NO
*
      IF #YYYYMMDD = CI-V.ISSUE-DATE (#IFL)
        IF   (NT-DB-LBL  (#I1) = ' RT ')
         AND (NT-DB-THOU (#I1) = 'ren')
          WRITE /  'RT renewal not allowed 2 times'
                // 'Press ENTER to continue'
          ESCAPE BOTTOM
        END-IF
*
        IF NT-DB-LBL (#I1) = ' DB '
          MOVE TRUE TO #DB-WAS-LOWERED
          COMPRESS NT-DB-THOU (#I1) NT-DB-HUND (#I1) NT-DB-PENN (#I1)
               INTO #AMT-8 LEAVING NO
          FOR #I2 1 TO 8
            IF #AMT-8-X (#I2) = ' '
              MOVE '0' TO #AMT-8-X (#I2)
            END-IF
          END-FOR
*
          MOVE #AMT-8-N TO #NEW-DB #SCR-FACE-AMT (#ISC)
          ESCAPE BOTTOM
        ELSE
          IF NT-PR-LBL (#I1) = ' PREM '
            MOVE TRUE TO #PREM-WAS-RAISED
            MOVE NT-PR-THOU (#I1) TO #AMT-7-THOU
            MOVE NT-PR-HUND (#I1) TO #AMT-7-HUND
            MOVE NT-PR-PENN (#I1) TO #AMT-7-PENN
*
            FOR #I2 1 TO 7
              IF #AMT-7-X (#I2) = ' '
                MOVE '0' TO #AMT-7-X (#I2)
              END-IF
            END-FOR
*
            MOVE #AMT-7-N TO #PRIOR-PREM
            ESCAPE BOTTOM
          END-IF
        END-IF
      END-IF
    END-IF
  END-FOR
END-FIND
*
IF NOT (#PREM-WAS-RAISED OR #DB-WAS-LOWERED)
  ESCAPE ROUTINE
END-IF
*
MOVE TRUE TO #REC-CHGD
*
IF #PREM-WAS-RAISED  /* will now lower prems & lower db
  MOVE #SCR-AGE-N (#ISC)    TO #NEW-AGE
  MOVE DEATH-BENEFIT (#ISC) TO #NEW-DB
  MOVE EDITED DEATH-BENEFIT (#ISC) (EM=ZZZ,ZZ9.99) TO #PRIOR-DB   /* PM1
  PERFORM CALC-NEW-DB
END-IF
*
MOVE #NEW-DB TO #SCR-FACE-AMT (#ISC) #SCR-DB (#ISC)
*
PERFORM CALC-PREM
*
MOVE PAID-TO-DATE (#IFL) TO #YYYYMMDD
IF #MM LT #TODAY-MM
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
*
COMPUTE #NUM-MONTHS = ((#YYYY - #TODAY-YYYY) * 12) + (#MM - #TODAY-MM)
COMPUTE #OLD-PRMS-PD = (ANNUAL-PREM  (#IFL) / 12) * #NUM-MONTHS
COMPUTE #NEW-PRMS-PD = (#SCR-ANN-PRM (#ISC) / 12) * #NUM-MONTHS
COMPUTE #PREMS-DIFF  = #NEW-PRMS-PD - #OLD-PRMS-PD
*
IF MODE (#IFL) = 'A' OR = 'S' OR = 'Q' OR = 'M'
            OR = '0' OR = '1' OR = '2' OR = '4'   /* DW2
  COMPUTE #CGA-MF-SCR-PARM-1-N = #PREMS-DIFF * 100  /* BADJ ADJ is done in C2300PCI
  MOVE 'BADJ' TO #TR-CD                            /* DW4
  MOVE #prems-diff TO #ADJ-AMT                     /* DW4
  PERFORM CALL-C2522SAM                            /* DW4
ELSE
  ADD #PREMS-DIFF TO CI-V.DEBIT-CREDIT-AMT
*
  IF #PREMS-DIFF NE 0            /* DW4
    IF #PREMS-DIFF GT 0
      MOVE 'RDCR' TO #TR-CD
    ELSE
      MOVE 'ADCR' TO #TR-CD
    END-IF
*
    MOVE #PREMS-DIFF TO #ADJ-AMT
    PERFORM CALL-C2522SAM
  END-IF
END-IF
*
* DISPLAY
*  'old/ann/prm'   ANNUAL-PREM (#IFL)
*  'nu/ann/prm'    #SCR-ANN-PRM (#ISC)
*  'pd-to/date'    PAID-TO-DATE (#IFL)
*  'num/mons'      #NUM-MONTHS
*  'old/prms/paid' #OLD-PRMS-PD
*  'new/prms/paid' #NEW-PRMS-PD
*  'prem/diff'     #PREMS-DIFF
*
MOVE #SCR-ANN-PRM (#ISC) TO CI-V.ANNUAL-PREM (#IFL)
MOVE #SCR-DB      (#ISC) TO CI-V.FACE-AMOUNT (#IFL)
                            CI-V.DEATH-BENEFIT (#IFL)
                            CI-V.NXT-MON-DEATH-BENEFIT (#IFL)
*
RESET #NOTE-TEXT (*)
MOVE ISSUE-DATE (#IFL) TO #YYYYMMDD
COMPRESS #MM-A '/' #DD-A '/' #YYYY-A INTO #ISS-DTE LEAVING NO
COMPRESS '* POL ISS' #ISS-DTE 'RT RENEWAL REVERSED' INTO #NOTE-TEXT (1)
IF #PREM-WAS-RAISED                                               /* PM1
  COMPRESS #NOTE-TEXT (1) 'FROM' #PRIOR-DB INTO #NOTE-TEXT (1)    /* PM1
END-IF                                                            /* PM1
MOVE 1 TO #INT
CALLNAT 'E4205SDM' CI-V.ID-NUMBER #INT #CGA-CLERK
  #NOTE-TEXT(1:10)
*
MOVE CI-V.ISSUE-DATE (#IFL) TO #TR-NEW-RTAD-ISS
MOVE EDITED CI-V.ANNUAL-PREM (#IFL)   (EM=ZZ,ZZZ.99) TO #TR-NEW-RTAD-PRM
MOVE EDITED CI-V.DEATH-BENEFIT (#IFL) (EM=ZZZ,ZZZ.99) TO #TR-NEW-RTAD-DB
MOVE EDITED #PREMS-DIFF (EM=-ZZ,ZZZ.99) TO #TR-NEW-RTAD-ADJ
MOVE #TR-NEW-RTAD TO TR-REG-V.NEW-DATA (#ITR1)
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-PREM
* * * * * * * * * * * * * *
*
IF #PREM-WAS-RAISED
 AND (#PRIOR-PREM NE 0)
  MOVE #PRIOR-PREM TO #PREM-6-2
ELSE
  RESET #SUFFIX #SEX
  #SEX := GET-GENDER(<CI-V.MEMBER-CONTACT-ID>)
  MOVE #SCR-ANN-PRM (#ISC) TO #PREM-6-2
*
* rating not needed since only rt
  CALLNAT 'GPREMSXX' #CGA-SCR-COMMAND #CGA-SCR-ID #SUFFIX
                     #SCR-PLN (#ISC) #SCR-AGE-N (#ISC)
      #PREM-6-2 #SCR-EFF-DTE-YYYYMMDD (#ISC)
      #SCR-SMK (#ISC) #SCR-FACE-AMT (#ISC) #SEX   /* DW4            /* TT1
END-IF
*
MOVE #PREM-6-2 TO #SCR-ANN-PRM (#ISC)
*
IF CI-V.MODE (#IFL) = 'A' OR = '1'   /* DW2
  MOVE  1 TO #WORK-FREQ
ELSE
  IF CI-V.MODE (#IFL) = 'S' OR = '2'  /* DW2
    MOVE 2 TO #WORK-FREQ
  ELSE
    IF CI-V.MODE (#IFL) = 'Q' OR = '4' /* DW2
      MOVE 4 TO #WORK-FREQ
    ELSE
      MOVE 12 TO #WORK-FREQ
    END-IF
  END-IF
END-IF
*
COMPUTE #SCR-MODAL-PRM (#ISC) = #SCR-ANN-PRM (#ISC) / #WORK-FREQ
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-NEW-DB
* * * * * * * * * * * * * * * *
*
IF SMOKER-FLAG (#IFL) = 'S'
  MOVE 2 TO #I2
ELSE
  MOVE 1 TO #I2
END-IF
*
IF #NEW-AGE LT 50 MOVE 1 TO #I3 ELSE
IF #NEW-AGE LT 55 MOVE 2 TO #I3 ELSE
IF #NEW-AGE LT 60 MOVE 3 TO #I3 ELSE
IF #NEW-AGE LT 65 MOVE 4 TO #I3 ELSE
IF #NEW-AGE LT 70 MOVE 5 TO #I3 ELSE
                  MOVE 6 TO #I3
END-IF END-IF END-IF END-IF END-IF
*
COMPUTE ROUNDED #NEW-DB =
     #NEW-DB - (#NEW-DB * (#REDUCT-RATE (#I2, #I3)))
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALL-C2522SAM   /* DW4
* * * * * * * * * * * * * * * *
*
MOVE CI-V.DATE-ACCT-UPDATE TO #LAST-DATE-UPDATE
MOVE *DATN TO CI-V.DATE-ACCT-UPDATE #NEW-DATE-UPDATE #EFF-DT
*
MOVE 'C2310PCI' TO #SOURCE-PROG
MOVE CI-V.ISSUE-DATE (#IFL) TO #ISSUE-DATE
MOVE #SCR-MODE (#ISC) TO #SCR-TRAN-COD /* C2522SAM USES FOR MACV
MOVE 'RTAD' TO #CMBX
*
CALLNAT 'C2522SAM'
  #CGA-SCR-COMMAND
  #CGA-SCR-ID
  #CGA-SCR-SUFFIX
  #CGA-CLERK
  CI-V.ID-NUMBER
  #SOURCE-PROG
  #EFF-DT
  #TR-CD
  #ADJ-AMT
  #OLD-FPF
  #NEW-FPF
  #LAST-DATE-UPDATE
  #NEW-DATE-UPDATE
  #ISSUE-DATE
  #SCR-TRAN-COD
  #CMBX
  #timn                     /* DW5
*
END-SUBROUTINE
*
END
