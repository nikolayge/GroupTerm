* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: ATHPLNKF    *** REMOVE DELETED LINKED CN'S FROM A-STATUS ***
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE      TAG     REASON                                      *
* YAK    03312011  YK1     Do not delete MBR-MBR links                 *
*                          Used for members with more than 9 policies  * 
*                          (still create the report)                   *  
************************************************************************
DEFINE DATA
LOCAL
*
1 ST-V VIEW OF A-STATUS
 2 ID-NUMBER
 2 REDEFINE ID-NUMBER
  3 ID-NUMBER-A  (A6)
 2 LINKED-CN      (N6/40)
 2 REDEFINE LINKED-CN
  3 #LINKED-CN-A  (A6/40)
 2 PROCESS-IND
 2 INTRO-FLAG
*
1 LK-V VIEW OF A-STATUS
 2 ID-NUMBER
 2 REDEFINE ID-NUMBER
  3 ID-NUMBER-A  (A6)
 2 LINKED-CN      (N6/40)
 2 INTRO-FLAG
 2 PROCESS-IND
*
1 AT-V VIEW OF A-APPL-TRACKING
 2 ID-NUMBER
 2 REDEFINE ID-NUMBER
  3 ID-NUMBER-C  (A6)
 2 CAP-IND
1 #I1            (I2)
1 #CNT-1         (N4) INIT <0>
1 #CNT-2         (N4) INIT <0>
1 #CNT-3         (N4) INIT <0>
1 #CNT-4         (N4) INIT <0>
1 #CNT-5         (N4) INIT <0>
1 #OTHER         (N8)
1 #UPDATE        (L)
1 #REASON        (A9)
1 #DISPLAY       (N1)
1 #DELETED-LINK (L)
*
END-DEFINE
* * * * * * * *
* INCLUDE GONERCXX
* * * * * * * *
*
FORMAT (1) LS=133 PS=76
WRITE  (1) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
                  'linked cn"s with "at" records not found   '
                   5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
SKIP 1
*
FORMAT (2) LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
                  'linked cn records not found   '
                   5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
SKIP 1
*
FORMAT (3) LS=133 PS=76
WRITE  (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
                  'linked cn"s with "link fso" records not found'
                   5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
SKIP 1
*
FORMAT (4) LS=133 PS=76
WRITE  (4) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
                  'linked cn"s with "mbr fso" records not found'
                   5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
SKIP 1
*
FORMAT (5) LS=133 PS=76
WRITE  (5) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
                  ' member to member linked cn"s '
                   5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
SKIP 1
*
READ ST-V BY MEMBER-KEY FROM '001900'
  IF LINKED-CN (1) = 0
    END TRANSACTION
    ESCAPE TOP
  END-IF
*
  RESET #UPDATE
*
  FOR #I1 1 TO 40
    RESET #DELETED-LINK
    IF ST-V.LINKED-CN(#I1) > 0
      FIND (1) LK-V WITH MEMBER-KEY = #LINKED-CN-A(#I1)
        IF NO RECORDS FOUND
          FIND (1) LK-V WITH WIDOW-KEY = #LINKED-CN-A(#I1)
            IF NO RECORDS FOUND
              IF (ST-V.LINKED-CN(#I1) GT 499999
               AND ST-V.LINKED-CN(#I1) LT 600000)
                FIND (1) AT-V WITH ID-NUMBER = ST-V.LINKED-CN(#I1)
                  IF NO RECORDS FOUND
                    ADD 1 TO #CNT-1
                    MOVE ' AT NFND ' TO #REASON
                    MOVE 1 TO #DISPLAY
                    PERFORM WRITE-DELETES
                    RESET ST-V.LINKED-CN(#I1)
                    MOVE TRUE TO #UPDATE
                    MOVE TRUE TO #DELETED-LINK
                    ESCAPE BOTTOM
                  END-NOREC
                END-FIND
              ELSE
                ADD 1 TO #CNT-2
                MOVE ' NOT FND ' TO #REASON
                MOVE 2 TO #DISPLAY
                PERFORM WRITE-DELETES
*
                IF ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
                  WRITE (2) 'Above reset bypassed'
                ELSE
                  RESET ST-V.LINKED-CN(#I1)
                  MOVE TRUE TO #UPDATE
                  MOVE TRUE TO #DELETED-LINK
                END-IF
                ESCAPE BOTTOM
              END-IF
            END-NOREC
          END-FIND
        END-NOREC
*
        IF  ((ST-V.LINKED-CN(#I1) GT 499999)
         AND (ST-V.LINKED-CN(#I1) LT 600000))
          OR (ST-V.PROCESS-IND = 'C')
          OR (LK-V.PROCESS-IND = 'C')
          ESCAPE TOP
        END-IF
*
        IF #DELETED-LINK
          ESCAPE TOP
        END-IF
*
        IF LK-V.INTRO-FLAG = 'F'
          ADD 1 TO #CNT-3
          MOVE 3 TO #DISPLAY
          MOVE ' LNK FSO ' TO #REASON
          PERFORM WRITE-DELETES
*
          IF ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
             WRITE (3) 'Above reset bypassed'
          ELSE
            RESET ST-V.LINKED-CN(#I1)
            MOVE TRUE TO #UPDATE
          END-IF
          ESCAPE BOTTOM
        ELSE
          IF   ((NOT ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G')
           AND  (NOT LK-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'))
          OR   ((ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G')
           AND  (LK-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'))
            ADD 1 TO #CNT-5
            MOVE 5 TO #DISPLAY
            MOVE ' MBR-MBR ' TO #REASON
            PERFORM WRITE-DELETES
*           RESET ST-V.LINKED-CN(#I1)                  /* YK1
*           MOVE TRUE TO #UPDATE                       /* YK1
            ESCAPE BOTTOM
          END-IF
        END-IF
      END-FIND
    ELSE
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF #UPDATE
    UPDATE (0087)
  END-IF
*
  END TRANSACTION
*
END-READ
*
*******************************
DEFINE SUBROUTINE WRITE-DELETES
*******************************
IF #DISPLAY = 1
  DISPLAY (1)
              #CNT-1
   'ST-V/CN ' ST-V.ID-NUMBER
   'ST-V/LNK' ST-V.LINKED-CN(#I1)
   'ST INTRO/FLAG ' ST-V.INTRO-FLAG
   'LK-V/CN ' LK-V.ID-NUMBER
   'LK-V/LNK' LK-V.LINKED-CN (#I1)
   'LK INTRO/FLAG ' LK-V.INTRO-FLAG
   'DELETE/REASON ' #REASON
END-IF
*
IF #DISPLAY = 2
  DISPLAY (2)
              #CNT-2
   'ST-V/CN ' ST-V.ID-NUMBER
   'ST-V/LNK' ST-V.LINKED-CN(#I1)
   'ST INTRO/FLAG ' ST-V.INTRO-FLAG
   'LK-V/CN ' LK-V.ID-NUMBER
   'LK-V/LNK' LK-V.LINKED-CN (#I1)
   'LK INTRO/FLAG ' LK-V.INTRO-FLAG
   'DELETE/REASON ' #REASON
END-IF
*
IF #DISPLAY = 3
  DISPLAY (3)
              #CNT-3
   'ST-V/CN ' ST-V.ID-NUMBER
   'ST-V/LNK' ST-V.LINKED-CN(#I1)
   'ST INTRO/FLAG ' ST-V.INTRO-FLAG
   'LK-V/CN ' LK-V.ID-NUMBER
   'LK-V/LNK' LK-V.LINKED-CN (#I1)
   'LK INTRO/FLAG ' LK-V.INTRO-FLAG
   'DELETE/REASON ' #REASON
END-IF
*
IF #DISPLAY = 4
  DISPLAY (4)
              #CNT-4
   'ST-V/CN ' ST-V.ID-NUMBER
   'ST-V/LNK' ST-V.LINKED-CN(#I1)
   'ST INTRO/FLAG ' ST-V.INTRO-FLAG
   'LK-V/CN ' LK-V.ID-NUMBER
   'LK-V/LNK' LK-V.LINKED-CN (#I1)
   'LK INTRO/FLAG ' LK-V.INTRO-FLAG
   'DELETE/REASON ' #REASON
END-IF
*
IF #DISPLAY = 5
  DISPLAY (5)
              #CNT-5
   'ST-V/CN ' ST-V.ID-NUMBER
   'ST-V/LNK' ST-V.LINKED-CN(#I1)
   'ST INTRO/FLAG ' ST-V.INTRO-FLAG
   'LK-V/CN ' LK-V.ID-NUMBER
   'LK-V/LNK' LK-V.LINKED-CN (#I1)
   'LK INTRO/FLAG ' LK-V.INTRO-FLAG
   'DELETE/REASON ' #REASON
END-IF
*
END-SUBROUTINE
*
END
