* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* PROGRAM-ID: G4100PMS
DEFINE DATA
*****************
*        MODIFICATION LOG
* USER DATE     TAG  REASON
* DRW  02232005 DW1  Add AL (Annuity Life) PROCESSING
* DRW  03162005 DW2  Use TOT DB-BY-TYPE for INs-in-force
* DRW  05112005 DW3  REMOVE INS-ONLY GAIN/LOSS STATS SCREEN ON STATS
*                    NAMED (INS-ONLY-GAIN-PLANS & INS-ONLY-LOSS-PLANS)
* DRW  01312006 DW4  chg mort rates (yearly)
* DRW  10/01/2007 DW5 Delete AFSC Suffix's (FSO)
* DRW  08/20/2008 DW6 Gen Plus Statistics
* DRW  09/30/2008 DW7 Fix GEN PLUS MTS Plans/Losses Accum
* DRW  10/01/2008 DW8 REmove Form Printing
* bz   23/03/2011 bz1 add afa reporting (suffix = AFA)
* RSE  11/08/2012 RE1 Screen modifications for LT II Annual Renewable Requirements
*                     Added new plans (LT II AR & No Medical Term (NMT))
* vxt  01/30/2014 vt1 change the mortality ratings /Ticket 2541/
* vxt  02/24/2015 vt2 change mortality ratings /Ticket 3358/
* vxt  02/01/2016 vt3 change mortality ratings /Ticket 4189 e-mail from Michael Meese/ 
* vxt  01/25/2017 vt4 change mortality ratings /TicketHD-2501/
* vxt  02/05/2018 vt5 change the mortality ratings by Crook's request
*****************change 
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING G4100LMS
LOCAL USING GONERLXX
LOCAL
1 #MORTALITY-PORTION (P0.2) INIT <.72>  /* was .73 .62 .65  /* DW4    /* vt1 was .75        /* vt2 was 0.71 /* vt3 was .67
1 #EXPENSE-PORTION   (P0.2) INIT <.28>  /* was .27 .38 .35            /* vt1 was .25        /* vt2 was 0.29 /* vt3 was .33 
1 #LAST-ENTERED-MORT-YR (P4) INIT <2016> /* UPDT WHEN CROOKS chges DW4 /* vt1 was 2006      /* vt2 was 2014 /* vt3 was 2015
1 #REQ-CUR-MONTH      (L)
1 #SCR-CV                  (C) /* IN 2006         /* DW4
1 #CSO-YEARLY-EXPECTED     (P5)  INIT <3456>                           /* vt1 was 3084      /* vt2 was 3324  /* vt3 was 3264  /* vt4 was 3312 /* vt5 was 3156
1 #CSO-MNTHLY-EXPECTED     (P5)  INIT <288>                            /* vt1 was 257       /* vt2 was 277   /* vt3 was 272   /* vt4 was 276  /* vt5 was 263
1 #S-U-YEARLY-EXPECTED     (P5)  INIT <3156>                           /* vt1 was 2820      /* vt2 was 3036  /* vt3 was 2976  /* vt4 was 3024 /* vt5 was 2880
1 #S-U-MNTHLY-EXPECTED     (P5)  INIT <263>                            /* vt1 was 235       /* vt2 was 253   /* vt3 was 248   /* vt4 was 252  /* vt5 was 240
1 #NET-DB-YEARLY-EXPECTED  (P11) INIT <52956360>                       /* vt1 was 28940400  /* vt2 was 46416900  /* vt3 was 45157176  /* vt4 was 49802083 /* vt5 was 50036124
1 #NET-DB-MNTHLY-EXPECTED  (P11) INIT <4413030>                        /* vt1 was 2411700   /* vt2 was 3868075   /* vt3 was 3763098   /* vt4 was 4150174 /* vt5 was 4169677
*                                  IN 2005        /* IN 2004  in 2003
1 #CSO-YEARLY-EXP-LST-YR   (P5)  INIT <3156>      /*    2796     2712  /* vt1 was 3012     /* vt2 was 3084      /* vt3 was 3324  /* vt4 was 3264  /* vt5 was 3312
1 #CSO-MNTHLY-EXP-LST-YR   (P5)  INIT <263>       /*     233      226  /* vt1 was 251      /* vt2 was 257       /* vt3 was 277   /* vt4 was 272   /* vt5 was 276 
1 #S-U-YEARLY-EXP-LST-YR   (P5)  INIT <2880>      /*    2568     2496  /* vt1 was 2760     /* vt2 was 2820      /* vt3 was 3036  /* vt4 was 2976  /* vt was 3024
1 #S-U-MNTHLY-EXP-LST-YR   (P5)  INIT <240>       /*     214      208  /* vt1 was 230      /* vt2 was 235       /* vt3 was 253   /* vt4 was 248   /* vt5 was 252
1 #NET-DB-YEARLY-EXP-LST-YR (P11) INIT <50036124> /*17456904 16869964  /* vt1 was 25257348 /* vt2 was 28940400  /* vt3 was 46416900  /* vt4 was 45157176  /* vt5 was 49802083
1 #NET-DB-MNTHLY-EXP-LST-YR (P11) INIT <4169677>  /* 1454742  1405830  /* vt1 was 2104779  /* vt2 was 2411700   /* vt3 was 3868075   /* vt4 was 3763098   /* vt5 was 4150174
1 #SO-AL-LBL-1   (A7)  INIT <'SO.....'>      /* DW1
1 #SO-AL-LBL-2   (A12) INIT <'ADD (SO/FSO)'> /* DW1
1 #FSO-LBL-1     (A4)  INIT <'(FSO'>         /* DW1
1 #FSO-LBL-2     (A4)  INIT <')'>            /* DW1
1 #AL-LBL-1      (a7)  init <'AL/SO..'>      /* DW6
1 #TOT-INS-FORCE   (P11.2)   /* DW2
1 #MTD-MBR-STATS (A1)
1 #FILE-STATS    (A1)
1 #MORT-STATS    (A1)
1 #MBR-STATS     (A1)
1 #WID-STATS     (A1)
1 #LOSS-STATS    (A1)
1 #YTD-STATS     (A1)
1 #LCYC-TOTS     (A1)
1 #AFSC-STATS    (A1)
1 #MTD-DEMO-STATS (A1)
1 #YTD-DEMO-STATS (A1)
1 #MTD-DEMO-SERV  (A1/3)
1 #YTD-DEMO-SERV  (A1/3)
*
1 #SCR-GAIN-MBRS (P5/27)                           /* DW6     RE1 START was 23
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-1  (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-2  (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-3  (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-4  (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-5  (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-6  (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-7  (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-8  (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-9  (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-10 (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-11 (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-12 (p5/27)                               /* RE1 END
1 redefine #scr-gain-mbrs                                  /* RE1 START new fields
  2 #SCR-GAIN-MBRS-13 (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-14 (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-15 (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-16 (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-17 (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-18 (p5/27)
1 redefine #scr-gain-mbrs
  2 #SCR-GAIN-MBRS-19 (p5/27)                               /* RE1 END
*
1 #SCR-SG-GAIN-MBRS      (P5/25)    /* was 19       DW6    RE1 START was 21
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-1   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-2   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-3   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-4   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-5   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-6   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-7   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-8   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-9   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-10  (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-11   (p5/25)                        /* RE1 END
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-12   (p5/25)                        /* RE1 START new fields
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-13   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-14   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-15   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-16  (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-17   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-18   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-19   (p5/25)
1 redefine #scr-sg-gain-mbrs
  2 #scr-sg-gain-mbrs-20   (p5/25)                        /* RE1 END
*
1 #SCR-GAIN-FAC-AMT       (P9/27)                  /* DW6  RE1 START was 23
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-1    (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-2    (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-3    (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-4    (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-5    (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-6    (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-7    (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-8    (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-9    (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-10   (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-11   (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-12   (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-13   (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-14   (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-15   (p9/27)                      /* RE1 START new fields
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-16   (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-17   (p9/27)
1 redefine #scr-gain-fac-amt
  2 #scr-gain-fac-amt-18   (p9/27)                      /* RE1 END
*
1 #scr-sg-addl-al-gpl    (p5)                   /* DW6
*
1 #SCR-FSO-MBRS  (P5)     /* On;y for past FSO's
1 #SCR-TOT-GAIN-MBRS     (P5)
1 #SCR-TOT-GAIN-PLANS    (P5)
1 #SCR-TOT-GAIN-MBRS-NCO (P5)
1 #SCR-TOT-GAIN-ADDL-MBRS  (P5)
1 #SCR-TOT-GAIN-ADDL-MBRS-NCO  (P5)
1 #SCR-GAIN-SHIPS         (P5/20)
1 #SCR-TOT-GAIN-SHIPS     (P5)
1 #SCR-TOT-GAIN-SHIPS-NCO (P5)
1 #SCR-TOT-GAIN-FAC-AMT   (P9)
1 #SCR-TOT-GAIN-NEW-UNITS (P5)
1 #SCR-TOT-GAIN-ADDL-UNITS (P5)
1 #SCR-SG-TOT-GAIN-MBRS  (P5)
1 #SCR-SG-TOT-GAIN-ADDL-MBRS (P5)
1 #SCR-SG-TOT-GAIN-PLANS  (P5)
1 #SCR-X-TOT-GAIN-MBRS    (P5)
1 #SCR-X-TOT-GAIN-PLANS   (P5)
1 #SCR-SG-LOSS-MBRS       (P5/3)
1 #SCR-SG-TOT-LOSS-MBRS   (P5)
1 #SCR-X-TOT-LOSS-MBRS    (P5)
1 #SCR-SG-LOSS-PLANS      (P5/3)
1 #SCR-SG-TOT-LOSS-PLANS  (P5)
1 #SCR-X-TOT-LOSS-PLANS   (P5)
1 #DATN-DISP         (A11)
*
1 #GAINS-BY-PLAN     (P5/9)                   /* DW6   RE1 START formerly 7
1 redefine #gains-by-plan
  2 #gains-by-plan-1  (p5/9)
1 redefine #gains-by-plan
  2 #gains-by-plan-2  (p5/9)
1 redefine #gains-by-plan
  2 #gains-by-plan-3  (p5/9)                        /* RE1 END
1 redefine #gains-by-plan                           /* RE1 START new fields
  2 #gains-by-plan-4  (p5/9)
1 redefine #gains-by-plan
  2 #gains-by-plan-5  (p5/9)                         
1 redefine #gains-by-plan
  2 #gains-by-plan-6  (p5/9)                        /* RE1 END
1 REDEFINE #GAINS-BY-PLAN
  2 #GAINS-BY-PLAN-7  (P5/9)                        /* NG1 END
*
1 #GAINS-BY-PLAN-DB  (P9.2/9)                 /* DW6   RE1 START formerly 7
1 redefine #GAINS-BY-PLAN-DB
  2 #GAINS-BY-PLAN-DB-1  (P9.2/9)
1 redefine #GAINS-BY-PLAN-DB
  2 #GAINS-BY-PLAN-DB-2  (P9.2/9)
1 redefine #GAINS-BY-PLAN-DB
  2 #GAINS-BY-PLAN-DB-3  (P9.2/9)                   /* RE1 END
1 redefine #GAINS-BY-PLAN-DB                        /* RE1 START new fields
  2 #GAINS-BY-PLAN-DB-4  (P9.2/9)
1 redefine #GAINS-BY-PLAN-DB
  2 #GAINS-BY-PLAN-DB-5  (P9.2/9)                    
1 redefine #GAINS-BY-PLAN-DB
  2 #GAINS-BY-PLAN-DB-6  (P9.2/9)                   /* RE1 END
1 REDEFINE #GAINS-BY-PLAN-DB
  2 #GAINS-BY-PLAN-DB-7  (P9.2/9)                   /* NG1 END
*
1 #LOSSES-BY-PLAN    (P5/9)                     /* DW6 RE1 START formerly 7
1 redefine #LOSSES-BY-PLAN
  2 #LOSSES-BY-PLAN-1    (P5/9)
1 redefine #LOSSES-BY-PLAN
  2 #LOSSES-BY-PLAN-2    (P5/9)
1 redefine #LOSSES-BY-PLAN
  2 #LOSSES-BY-PLAN-3    (P5/9)                     /* RE1 END
1 redefine #LOSSES-BY-PLAN                          /* RE1 START new fields
  2 #LOSSES-BY-PLAN-4    (P5/9)
1 redefine #LOSSES-BY-PLAN
  2 #LOSSES-BY-PLAN-5    (P5/9)                      
1 redefine #LOSSES-BY-PLAN
  2 #LOSSES-BY-PLAN-6    (P5/9)                      
1 redefine #LOSSES-BY-PLAN
  2 #LOSSES-BY-PLAN-7    (P5/9)                     /* RE1 END
*
1 #LOSSES-BY-PLAN-DB  (P9.2/9)                        /* DW6 RE1 START formerly 7
1 redefine #LOSSES-BY-PLAN-DB
  2 #LOSSES-BY-PLAN-DB-1  (P9.2/9)
1 redefine #LOSSES-BY-PLAN-DB
  2 #LOSSES-BY-PLAN-DB-2  (P9.2/9)
1 redefine #LOSSES-BY-PLAN-DB
  2 #LOSSES-BY-PLAN-DB-3  (P9.2/9)                        /* RE1 END
1 redefine #LOSSES-BY-PLAN-DB                             /* RE1 START new fields
  2 #LOSSES-BY-PLAN-DB-4  (P9.2/9)
1 redefine #LOSSES-BY-PLAN-DB
  2 #LOSSES-BY-PLAN-DB-5  (P9.2/9)                         
1 redefine #LOSSES-BY-PLAN-DB
  2 #LOSSES-BY-PLAN-DB-6  (P9.2/9)                         
1 redefine #LOSSES-BY-PLAN-DB
  2 #LOSSES-BY-PLAN-DB-7  (P9.2/9)                        /* RE1 END
*
1 #TOT-GAINS-BY-PLAN  (P5)
1 #TOT-GAINS-BY-PLAN-DB  (P9.2)
1 #TOT-LOSSES-BY-PLAN (P5)
1 #TOT-LOSSES-BY-PLAN-DB (P9.2)
1 #GL-BY-PLAN-NET     (P5)
1 #GL-BY-PLAN-NET-DB  (P9.2)
1 #GAINS-LIVES-BY-CAT  (P5/4)
1 #LOSSES-LIVES-BY-CAT (P5/4)
1 #TOT-GAINS-LIVES-BY-CAT (P5)
1 #TOT-LOSSES-LIVES-BY-CAT (P5)
1 #GL-LIVES-BY-CAT-NET (P5)
1 #FBR-PLAN-GAINS     (P5/3)
1 #FBR-CAT-GAINS      (P5/2)
*
1 MS-V VIEW OF A-MBRSHIP-STATS
  2 LOSS-PLANS-DEATHS
  2 LOSS-PLANS-NON-DEATHS
*
  2 m-e-db-by-type       (12,4)                /* DW6
  2 m-e-plans-by-type    (12,4)
  2 m-e-pu-plans-by-type (9,4)
  2 me-ins-only-by-plan    (12)
  2 m-e-plans-by-type-caps (12)
*
1 #PCT-9-DIGIT     (N3.2)
1 #WID-PCT-9-DIGIT (N3.2)
1 NT-V VIEW OF A-NOTES
  2 ID-NUMBER     (N6)
  2 NOTE-DATE     (N8/1)
  2 NOTE-TEXT     (A60/40)
  2 REDEFINE NOTE-TEXT
    3 NT-OLDEST-MBR-CN    (N6)
    3 NT-OLDEST-MBR-AGE   (N3)
    3 NT-YOUNGEST-MBR-CN  (N6)
    3 NT-YOUNGEST-MBR-AGE (N3)
    3 NT-OLDEST-WID-CN    (N6)
    3 NT-OLDEST-WID-AGE   (N3)
    3 NT-YOUNGEST-WID-CN  (N6)
    3 NT-YOUNGEST-WID-AGE (N3)
    3 NT-NUM-PEBD-GTR-19860801 (N5)
    3 NT-NUM-PEBD-GTR-19800908 (N5)
    3 NT-NUM-MIL-DISAB-100-PCT (N5)
    3 NT-NUM-VA-DISAB-100-PCT  (N5)
    3 NT-NUM-WID-MIL-DISAB-100-PCT (N5)
    3 NT-NUM-WID-VA-DISAB-100-PCT  (N5)
    3 NT-LONGEST-CN       (N6)
    3 NT-LONGEST-YEARS    (N3)
    3 NT-LONGEST-WID-CN   (N6)
    3 NT-LONGEST-WID-YEARS (N3)
    3 NT-ZIP-ZERO         (N6)
    3 NT-ZIP-5-DIGIT      (N6)
    3 NT-ZIP-9-DIGIT      (N6)
    3 NT-WID-ZIP-ZERO     (N6)
    3 NT-WID-ZIP-5-DIGIT  (N6)
    3 NT-WID-ZIP-9-DIGIT  (N6)
    3 NT-NUM-RSFPP        (N5)
    3 NT-RET-B4-1957-1-1  (N5)
    3 NT-RETIREES-OVER-62 (N5)
    3 NT-RETIREES-UNDER-62  (N5)
    3 NT-NUM-ACT-BY-MIL-ID  (P5/20)
    3 NT-NUM-RET-BY-MIL-ID  (P5/20)
    3 NT-NUM-CIV-BY-MIL-ID  (P5/20)
    3 NT-NUM-20-YR-LTR      (N5)
    3 NT-NUM-DOB-PRIOR-1918 (N5)
    3 NT-NUM-SSBP      (N5)
    3 NT-NUM-O-E-DATE  (N5)
    3 NT-NUM-MODES-M-G (N5)
    3 NT-NUM-MODES-E   (N5)
    3 NT-NUM-MODES-Q   (N5)
    3 NT-NUM-MODES-S   (N5)
    3 NT-NUM-MODES-A   (N5)
    3 NT-NUM-SAV-INV   (N5)
    3 NT-NUM-SP-COD    (N5/19)
    3 NT-NUM-SPS-CSRS  (N5)
    3 NT-NUM-FIN-BENES (N5)
    3 NT-NUM-FIN-BENES-POLS (N5)
    3 NT-NUM-TICKERS     (N5)
    3 NT-NUM-CAP-MBRS    (N5)
* NT-NUM-LCYC-xxx follows used by g4200pms
  2 REDEFINE NOTE-TEXT
    3 NT-6-LEVELS      (6)
      4 CURR-YEAR      (N5)
      4 NEXT-YEAR      (N5)
      4 NEXT-NEXT-YEAR (N5)
      4 OTHER-YEAR     (N5)
      4 FILLER         (A40)
  2 REDEFINE NOTE-TEXT
    3 ANN-MTG-CNT   (N5)
  2 REDEFINE NOTE-TEXT
    3 LIFE-OCCURENCE  (3)
      4 LIFE-AVG     (N6)
      4 LIFE-MED     (N6)
      4 LIFE-MAX     (N6)
      4 LIFE-MIN     (N6)
      4 LIFE-STD-DEV (N6.2)
    3 LIFE-TOTAL    (N6)
    3 LAST-UPDATE-YYYY  (N4)
    3 REDEFINE LAST-UPDATE-YYYY
      4 LAST-UPDATE-YYYY-A (A4)
    3 LAST-UPDATE-MM      (N2)
    3 TOTAL-THIS-MONTH    (N6)
1 #NT-AS-OF-DATE       (A10)
1 #CAP-STATS-PROSP     (A1)
1 #CAP-STATS-CONS      (A1)
1 #PROSP-STATS         (A1)
1 #MARKET-STATS        (A1)
1 #MANNING-STATS       (A1)
1 #INTRO-MBR-STATS     (A1)
1 #INS-POLS-IN-VLT-INACT     (P7)
1 #INS-POLS-NOT-IN-VLT-INACT (P7)
1 #INS-POLS-IN-VLT       (P7)
1 #INS-POLS-NOT-IN-VLT   (P7)
1 #WID-POLS-IN-VLT-DEAD  (P7)
1 #WID-POLS-NOT-IN-VLT-DEAD (P7)
1 #WID-POLS-IN-VLT     (P7)
1 #WID-POLS-NOT-IN-VLT (P7)
1 #MBR-CERT-COD-TOTALS (P7/4)
1 #MBR-CERT-COD-IN-VLT (P7/6)
1 #WID-CERT-COD-TOTALS (P7/4)
1 #WID-CERT-COD-IN-VLT (P7/7)
1 #WID-TOTAL           (P7)
1 #WID-NET-TOTAL       (P7)
1 #DECEASED            (P7)
1 #INTRO-TOTALS (N5/4)
1 #SCN-SCHOOL-TOTS (P5/6)
1 #SCN-CLASS-YYYY  (N4/4)
1 #GRAND-INTRO-TOTAL (P5)
1 #CSO-YTD-EXPECTED     (P5)
1 #S-U-YTD-EXPECTED     (P5)
1 #NET-DB-YTD-EXPECTED  (P11)
1 #NET-DB-YTD-MORT-PORT (P11)
1 #SCR-CSO-MTD-RATIO    (P5)
1 #SCR-CSO-YTD-RATIO    (P5)
1 #SCR-S-U-MTD-RATIO    (P5)
1 #SCR-S-U-YTD-RATIO    (P5)
1 #SCR-MTD-NET-DB-RATIO (P5)
1 #SCR-YTD-NET-DB-RATIO (P5)
1 #SCR-YTD-DEAD-MBRS    (P5)
1 #SCR-YTD-DEAD-SHIPS   (P5) /* really plans
1 #SCR-LAST-NU-POL-ADDED     (A10)
1 REDEFINE #SCR-LAST-NU-POL-ADDED
  2 #SCR-LST-NU-POL-ADDED-MM  (N2)
  2 #SCR-LST-NU-POL-ADDED-/1  (A1)
  2 #SCR-LST-NU-POL-ADDED-DD  (N2)
  2 #SCR-LST-NU-POL-ADDED-/2  (A1)
  2 #SCR-LST-NU-POL-ADDED-YYYY (N4)
1 #SCR-CURR-DD        (N2)
1 #SCR-CURR-MONTH     (A3)
1 #SCR-CURR-MM        (N2)
1 #SCR-CURR-YEAR      (N4)
1 #SCR-LAST-MONTH     (A3)
1 #SCR-LAST-MM        (N2)
1 #SCR-LAST-MONTH-LAST-YEAR  (N4)
1 #SCR-NEXT-MONTH     (A3)
1 #SCR-NEXT-MONTH-YEAR (N4)
1 #SCR-LAST-YEAR   (N4)
1 #PRIOR-ME-YYYY   (N4)
1 #PRIOR-ME-MM     (N2)
1 #PRIOR-ME-DD     (N2)
1 #PRIOR-ME-MONTH  (A3)
*
1 #SCR-M-E-LABEL        (A8)
1 REDEFINE #SCR-M-E-LABEL
  2 #SCR-REQUESTED-MON    (A4)
  2 #SCR-REQUESTED-YEAR   (N4)
*
1 #SCR-AS-OF-DATE       (A10)
1 REDEFINE #SCR-AS-OF-DATE
  2 #SCR-AS-OF-DATE-MM   (N2)
  2 #SCR-AS-OF-DATE-/1   (A1)
  2 #SCR-AS-OF-DATE-DD   (N2)
  2 #SCR-AS-OF-DATE-/2   (A1)
  2 #SCR-AS-OF-DATE-YYYY (N4)
*
1 #SCR-PAID-UP-DB   (P11)
1 #SCR-ETI-DB       (P11)
1 #SCR-TOT-ME-MBR-BY-UNITS   (P7)
1 #SCR-TOT-ME-S-G-BY-UNITS   (P7)
1 #SCR-TOT-ME-SHIPS-BY-UNITS (P7)
1 #SCR-TOT-ME-LINES-BY-PLAN  (P7)
1 #SCR-LST-ME-TOT-MBR-BY-UNITS   (P7)
1 #SCR-LST-ME-TOT-SHIPS-BY-UNITS (P7)
*
1 #SCR-TOT-ALL-CSV-MBRS-DET  (P5/3)
1 #SCR-TOT-ALL-CSV-UNITS-DET (P5/3)
1 #SCR-TOT-ALL-CSV-MBRS      (P5)
1 #SCR-TOT-ALL-CSV-UNITS     (P5)
1 #SCR-PARTIAL-ALL-CSV-UNITS (P5)
1 #SCR-TOT-ALL-LAP-MBRS-DET  (P5/3)
1 #SCR-TOT-ALL-LAP-UNITS-DET (P5/3)
1 #SCR-TOT-ALL-LAP-MBRS      (P5)
1 #SCR-TOT-ALL-LAP-UNITS     (P5)
1 #SCR-PARTIAL-ALL-LAP-UNITS (P5)
1 #SCR-TOT-MBRS-LOSSES       (P5/8)
1 #SCR-TOT-UNITS-LOSSES      (P5/8)
1 #SCR-TOT-TOT-MBRS-LOSSES   (P5)
1 #SCR-TOT-TOT-UNITS-LOSSES  (P5)
1 #SCR-TOT-MANNING-ARMY-AUTH (P7)
1 #SCR-TOT-MANNING-ARMY-AAFMAA (P7)
1 #SCR-TOT-MANNING-AIRF-AUTH   (P7)
1 #SCR-TOT-MANNING-AIRF-AAFMAA (P7)
1 #SCR-TOT-MAN-NCO-ARMY-AUTH   (P7)
1 #SCR-TOT-MAN-NCO-ARMY-AAFMAA (P7)
1 #SCR-TOT-MAN-NCO-AIRF-AUTH   (P7)
1 #SCR-TOT-MAN-NCO-AIRF-AAFMAA (P7)
1 #SCR-MANNING-ARMY-PCT  (P3/12)
1 #SCR-MANNING-AIRF-PCT  (P3/12)
1 #SCR-MAN-NCO-ARMY-PCT  (P3/7)
1 #SCR-MAN-NCO-AIRF-PCT  (P3/7)
1 #WORK-PCT              (P3.5)
*
1 #SCR-TOTS-BY-ARC         (P5/3)
1 #SCR-GAIN-ARMY-MBRS      (P5)
1 #SCR-GAIN-ARMY-ADDL-MBRS (P5)
1 #SCR-GAIN-ARMY-UNITS     (P5)
1 #SCR-GAIN-ARMY-MBRS-NCO  (P5)
1 #SCR-GAIN-ARMY-ADDL-MBRS-NCO (P5)
1 #SCR-GAIN-ARMY-UNITS-NCO (P5)
*
1 #SCR-GAIN-AIRF-MBRS        (P5)
1 #SCR-GAIN-AIRF-ADDL-MBRS   (P5)
1 #SCR-GAIN-AIRF-UNITS       (P5)
1 #SCR-GAIN-AIRF-MBRS-NCO      (P5)
1 #SCR-GAIN-AIRF-ADDL-MBRS-NCO (P5)
1 #SCR-GAIN-AIRF-UNITS-NCO     (P5)
*
1 #SCR-LOSS-DEATH-ACT-MBRS   (P5)
1 #SCR-LOSS-DEATH-ACT-UNITS  (P5)
1 #SCR-LOSS-DEATH-RET-MBRS   (P5)
1 #SCR-LOSS-DEATH-RET-UNITS  (P5)
*
1 #SCR-TOT-GAIN-MBRS-AF      (P5)
1 #SCR-TOT-GAIN-ADDL-MBRS-AF (P5)
1 #SCR-TOT-GAIN-UNITS-AF     (P5)
1 #SCR-TOT-GAIN-MBRS-AF-NCO      (P5)
1 #SCR-TOT-GAIN-ADDL-MBRS-AF-NCO (P5)
1 #SCR-TOT-GAIN-UNITS-AF-NCO     (P5)
1 #SCR-TOT-MBRS-A-OTHERS     (P5)
1 #SCR-TOT-MBRS-A-F-OTHERS   (P5)
*
1 #SCR-LOSS-MBRS       (P5/4)
1 #SCR-TOT-LOSS-MBRS  (P5)
1 #SCR-LOSS-PLANS     (P5/4)
1 #SCR-TOT-LOSS-PLANS (P5)
1 #SCR-LOSS-SHIPS     (P5/4)
1 #SCR-TOT-LOSS-SHIPS (P5)
*
1 #SCR-NET-GAIN-MBRS  (P5)
1 #SCR-NET-GAIN-SG    (P5)
1 #SCR-NET-GAIN-PLANS (P5)
1 #SCR-NET-GAIN-SHIPS (P5)
*
1 #SCR-LST-YR-NET-GAIN-MBRS  (P5)
1 #SCR-LST-YR-NET-GAIN-SG    (P5)
1 #SCR-LST-YR-NET-GAIN-PLANS (P5)
1 #SCR-LST-YR-NET-GAIN-SHIPS (P5)
*
1 #SCR-LST-YR-GAIN-MBRS       (P5)
1 #SCR-LST-YR-GAIN-ADDL-MBRS  (P5)
1 #SCR-LST-YR-GAIN-UNITS      (P5)
1 #SCR-LST-YR-GAIN-MBRS-NCO       (P5)
1 #SCR-LST-YR-GAIN-ADDL-MBRS-NCO  (P5)
1 #SCR-LST-YR-GAIN-UNITS-NCO      (P5)
*
1 #SCR-GAIN-DIFF-MBRS       (P5)
1 #SCR-GAIN-DIFF-ADDL-MBRS  (P5)
1 #SCR-GAIN-DIFF-UNITS      (P5)
1 #SCR-GAIN-DIFF-MBRS-NCO      (P5)
1 #SCR-GAIN-DIFF-ADDL-MBRS-NCO (P5)
1 #SCR-GAIN-DIFF-UNITS-NCO     (P5)
*
1 #SCR-LST-YTD-GAIN-MBRS      (P5)
1 #SCR-LST-YTD-GAIN-ADDL-MBRS (P5)
1 #SCR-LST-YTD-GAIN-UNITS     (P5)
1 #SCR-LST-YTD-GAIN-MBRS-NCO  (P5)
1 #SCR-LST-YTD-GAIN-ADDL-MBRS-NCO (P5)
1 #SCR-LST-YTD-GAIN-UNITS-NCO     (P5)
*
1 #SCR-YTD-GAIN-MBRS       (P5)
1 #SCR-YTD-GAIN-ADDL-MBRS  (P5)
1 #SCR-YTD-GAIN-UNITS      (P5)
1 #SCR-YTD-GAIN-MBRS-NCO      (P5)
1 #SCR-YTD-GAIN-ADDL-MBRS-NCO (P5)
1 #SCR-YTD-GAIN-UNITS-NCO     (P5)
*
1 #SCR-YTD-DIFF-GAIN-MBRS      (P5)
1 #SCR-YTD-DIFF-GAIN-ADDL-MBRS (P5)
1 #SCR-YTD-DIFF-GAIN-UNITS     (P5)
1 #SCR-YTD-DIFF-GAIN-MBRS-NCO  (P5)
1 #SCR-YTD-DIFF-GAIN-ADDL-MBRS-NCO (P5)
1 #SCR-YTD-DIFF-GAIN-UNITS-NCO (P5)
*
1 #SCR-DEAD-AVG-AGE            (P3)
*
1 #SCR-INS-IN-FORCE         (P12)
1 #SCR-LST-YR-INS-IN-FORCE  (P12)
1 #SCR-NET-DB               (P11)
1 #SCR-YTD-NET-DB           (P11)
*
1 #SCR-APP-REJ-NEW-MBRS   (P5)
1 #SCR-APP-REJ-ADDL-MBRS  (P5)
1 #SCR-APP-REJ-UNITS   (P5)
*
1 #SCR-RESTR-NEW-MBRS  (P5)
1 #SCR-RESTR-UNITS     (P5)
*
1 #SCR-TOTAL-TABLE
  2 #SCR-NUM-OCCUR       (3)
    3 #SCR-AVG   (N6)
    3 #SCR-MED   (N6)
    3 #SCR-MAX   (N6)
    3 #SCR-MIN   (N6)
    3 #SCR-STD-DEV (N6.2)
  2 #SCR-TOTAL    (N6)
  2 #SCR-LAST-UPDATE  (A8)
  2 #SCR-TOTAL-THIS-MONTH (N6)
*
1 #LIFE-OCCUR (I2)
*
1 #SCR-STD-DEV-SUR-YEARS  (N2)
1 #SCR-STD-DEV-SUR-MONTHS (N2)
1 #SCR-AVG-SUR-YEARS    (N2)
1 #SCR-AVG-SUR-MONTHS  (N2)
1 #SCR-MAX-SUR-YEARS   (N2)
1 #SCR-MAX-SUR-MONTHS  (N2)
1 #SCR-MIN-SUR-YEARS   (N2)
1 #SCR-MIN-SUR-MONTHS  (N2)
1 #SCR-MED-SUR-YEARS   (N2)
1 #SCR-MED-SUR-MONTHS  (N2)
*
1 #TEXT               (A60)
1 #STAT-REC-FOUND     (L)
1 #I1                 (I2)
1 #I2                 (I2)
*
1 #DATAIN-REC         (A80)
1 #BATCH-PARM         (A32)
1 REDEFINE #BATCH-PARM
  2 #BATCH-MM          (N2)
  2 #BATCH-DD          (N2)
  2 #BATCH-YYYY        (N4)
  2 #REST-OF-05P0-PARM (A24)
*
1 #DATN               (N8)
1 REDEFINE #DATN
  2 #DATN-YYYYMM       (N6)
  2 REDEFINE #DATN-YYYYMM
    3 #DATN-YYYY        (N4)
    3 REDEFINE #DATN-YYYY
      4 #DATN-CENT   (N2)
      4 #DATN-YY     (N2)
    3 #DATN-MM      (N2)
  2 #DATN-DD       (N2)
*
1 #WORK-YYYYMM        (N6)
1 REDEFINE #WORK-YYYYMM
  2 #WORK-YYYY         (N4)
  2 #WORK-MM           (N2)
*
1 #SCR-YYYYMM       (N6)
1 #YYYYMMDD         (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM          (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY           (N4)
    3 REDEFINE #YYYY
      4 #YYYY-A        (A4)
    3 REDEFINE #YYYY
      4 #CENT          (A2)
      4 #YY-A          (A2)
    3 #MM             (N2)
    3 REDEFINE #MM
      4 #MM-A          (A2)
  2 #DD              (N2)
  2 REDEFINE #DD
    3 #DD-A           (A2)
*
1 #MONTH-G (A48)
  INIT <'JanFebMarAprMayJunJulAugSepOctNovDec'>
1 REDEFINE #MONTH-G
  2 #MONTH-OCC     (12)
    3 #MONTH        (A3)
*
END-DEFINE
*
INCLUDE GONERCXX
*
SET GLOBALS ZD=OFF
IF #CGA-SCR-SUFFIX = 'AFA'      /* bz1
  FETCH RETURN 'AFAP0REP'      /* bz1
  #CGA-SCR-SUFFIX := ' '       /* bz1
END-IF                          /* bz1

MOVE *DATX TO #SCR-LAST-NU-POL-ADDED
MOVE *DATN TO #YYYYMMDD
MOVE *DATN TO #DATN
COMPRESS #DD-A #MONTH (#MM) #YYYY-A INTO #DATN-DISP
*
IF *DEVICE = 'BATCH'
  READ WORK 1 ONCE RECORD #BATCH-PARM
  READ WORK 1 ONCE RECORD #BATCH-PARM
*
  MOVE #BATCH-YYYY TO #SCR-AS-OF-DATE-YYYY
  MOVE #BATCH-MM TO #SCR-AS-OF-DATE-MM
  SUBTRACT 1   FROM #SCR-AS-OF-DATE-MM
*
  IF #SCR-AS-OF-DATE-MM LT 01
    MOVE 12      TO #SCR-AS-OF-DATE-MM
    SUBTRACT 1 FROM #SCR-AS-OF-DATE-YYYY
  END-IF
*
  IF #SCR-AS-OF-DATE-MM = 4 OR = 6 OR = 9 OR = 11
    MOVE 30 TO #SCR-AS-OF-DATE-DD
  ELSE
    IF #SCR-AS-OF-DATE-MM = 2
      MOVE 28 TO #SCR-AS-OF-DATE-DD
    ELSE
      MOVE 31 TO #SCR-AS-OF-DATE-DD
    END-IF
  END-IF
*
  MOVE #SCR-AS-OF-DATE-YYYY TO #PRIOR-ME-YYYY
  MOVE #SCR-AS-OF-DATE-MM TO #PRIOR-ME-MM
  SUBTRACT 1 FROM #PRIOR-ME-MM
*
  IF #PRIOR-ME-MM LT 01
    MOVE 12      TO #PRIOR-ME-MM
    SUBTRACT 1 FROM #PRIOR-ME-YYYY
  END-IF
*
  MOVE #MONTH (#PRIOR-ME-MM) TO #PRIOR-ME-MONTH
*
  IF #PRIOR-ME-MM = 4 OR = 6 OR = 9 OR = 11
    MOVE 30 TO #PRIOR-ME-DD
  ELSE
    IF #PRIOR-ME-MM = 2
      MOVE 28 TO #PRIOR-ME-DD
    ELSE
      MOVE 31 TO #PRIOR-ME-DD
    END-IF
  END-IF
*
  MOVE #BATCH-YYYY TO #YYYY
*
  MOVE #YYYY     TO #SCR-NEXT-MONTH-YEAR
  MOVE #MONTH (#BATCH-MM) TO #SCR-NEXT-MONTH
*
  MOVE #BATCH-MM TO #MM
  SUBTRACT 1 FROM #MM
*
  IF #MM = 0
    MOVE 12 TO #MM
    SUBTRACT 1 FROM #YYYY
  END-IF
ELSE
  FIND (1) NT-V WITH ID-NUMBER = 800107
    COMPRESS 'Ann Mtg Count =' ANN-MTG-CNT INTO #TEXT
  END-FIND
*
  MOVE *DATX TO #SCR-AS-OF-DATE
  MOVE '*' TO #CGA-SCR-COMMAND
  RESET   #CGA-SCR-ID
  RESET   #SCR-CV
*
  IF #CGA-ORIG-COMMAND = 'MS'
    MOVE 03 TO *CURS-LINE
  ELSE
    MOVE 05 TO *CURS-LINE
  END-IF
*
  IF #MM GT 9
    MOVE 46 TO *CURS-COL
  ELSE
    MOVE 47 TO *CURS-COL
  END-IF
*
  MOVE (AD=I) TO #SCR-CV
  IF #CGA-ORIG-COMMAND = 'MS'
    INPUT TEXT #TEXT USING MAP 'G4100MMS'
  ELSE
    INPUT TEXT #TEXT USING MAP 'G4100MMK'
  END-IF
*
  IF #CGA-SCR-COMMAND NE '*'
    FETCH 'G1000PXX'
  END-IF
*
  IF #YYYYMM NE MASK (YYYYMM)
    REINPUT 'Invalid year or month'
      MARK *#YYYYMM
  END-IF
*
  IF #AFSC-STATS NE ' '
    FETCH 'G4103PMS' #YYYYMM
  END-IF
*
  IF #MTD-DEMO-STATS NE ' '
    IF   #MTD-DEMO-SERV(1) = ' '
        AND #MTD-DEMO-SERV(2) = ' '
        AND #MTD-DEMO-SERV(3) = ' '
      REINPUT 'MUST SELECT ARMY, AIRFORCE, OR AGGREGATE'
        MARK *#MTD-DEMO-SERV(1) END-IF
    FETCH 'G4104PMS' #YYYYMM #MTD-DEMO-SERV(*)
  END-IF
*
  IF #YTD-DEMO-STATS NE ' '
    IF   #YTD-DEMO-SERV(1) = ' '
        AND #YTD-DEMO-SERV(2) = ' '
        AND #YTD-DEMO-SERV(3) = ' '
      REINPUT 'MUST SELECT ARMY, AIRFORCE, OR AGGREGATE'
        MARK *#YTD-DEMO-SERV(1) END-IF
    FETCH 'G4105PMS' #YYYYMM #YTD-DEMO-SERV(*)
  END-IF
*
  IF #YTD-STATS NE ' '
    FETCH 'G4101PMS' #YYYYMM
  END-IF
*
  IF   (#CGA-ORIG-COMMAND = 'MK')
      AND ((#CAP-STATS-PROSP NE ' ') OR (#CAP-STATS-CONS  NE ' '))
    IF #CAP-STATS-PROSP NE ' '
      MOVE 'CAP' TO #CGA-SCR-SUFFIX
      FETCH 'ATHPATUP'
    ELSE
      MOVE 'CAP' TO #CGA-SCR-SUFFIX
      FETCH 'ATHPCAPC'
    END-IF
  END-IF
*
  IF (#CGA-ORIG-COMMAND = 'MK')
      AND (#PROSP-STATS NE ' ')
    IF #CGA-SCR-SUFFIX = 'ALL'
      MOVE 'PRA' TO #CGA-SCR-SUFFIX /* show all users
    ELSE
      MOVE 'PRO' TO #CGA-SCR-SUFFIX  /* only show MBRSRV users
    END-IF
    FETCH 'ATHPATUP'
  END-IF
*
  IF #LCYC-TOTS NE ' '
    MOVE 'LC' TO #CGA-SCR-SUFFIX
    FETCH 'G4200PMS'
  END-IF
*
  RESET #SCR-CV
  MOVE #YYYYMM TO #SCR-YYYYMM
*
  IF   (#YYYYMM = #DATN-YYYYMM)
      AND ((#LOSS-STATS    NE ' ')  /* ASSUME LAST M/E IF THE PICK CURR MM
      OR (#WID-STATS     NE ' ')
      OR (#MANNING-STATS NE ' '))
*
    SUBTRACT 1 FROM #MM
*
    IF #MM = 0
      MOVE 12 TO #MM
      SUBTRACT 1 FROM #YYYY
    END-IF
  END-IF
*
  IF #YYYYMM = #DATN-YYYYMM
    MOVE TRUE TO #REQ-CUR-MONTH
    MOVE #DATN-DD TO #SCR-CURR-DD
  ELSE
    IF #MM = 4 OR = 6 OR = 9 OR = 11
      MOVE 30 TO #SCR-CURR-DD
    ELSE
      IF #MM = 2
        MOVE 28 TO #SCR-CURR-DD
      ELSE
        MOVE 31 TO #SCR-CURR-DD
      END-IF
    END-IF
  END-IF
*
  IF #MM = 12
    MOVE 'JAN' TO #SCR-NEXT-MONTH
    COMPUTE #SCR-NEXT-MONTH-YEAR = #YYYY + 1
  ELSE
    MOVE #YYYY     TO #SCR-NEXT-MONTH-YEAR
    COMPUTE #WORK-MM = #MM + 1
    MOVE #MONTH (#WORK-MM) TO #SCR-NEXT-MONTH
  END-IF
*
  IF #CGA-ORIG-COMMAND = 'MS'
    IF   (#MTD-MBR-STATS = ' ')
        AND (#MORT-STATS    = ' ')
        AND (#MBR-STATS     = ' ')
        AND (#WID-STATS     = ' ')
        AND (#LOSS-STATS    = ' ')
        AND (#YTD-STATS     = ' ')
        AND (#FILE-STATS    = ' ')
        AND (#AFSC-STATS    = ' ')
        AND (#MTD-DEMO-STATS = ' ')
        AND (#YTD-DEMO-STATS = ' ')
      REINPUT 'At least one type selection must be made'
        MARK *#MTD-MBR-STATS
    END-IF
  ELSE
    IF   (#MARKET-STATS    = ' ')
        AND (#MANNING-STATS   = ' ')
        AND (#INTRO-MBR-STATS = ' ')
      REINPUT 'At least one type selection must be made'
        MARK *#MTD-MBR-STATS
    END-IF
  END-IF
END-IF
*
IF #YYYY LT #LAST-ENTERED-MORT-YR  /* IF ASKING FOR PRIOR YEAR
  MOVE #CSO-YEARLY-EXP-LST-YR TO #CSO-YEARLY-EXPECTED
  MOVE #CSO-MNTHLY-EXP-LST-YR TO #CSO-MNTHLY-EXPECTED
  MOVE #S-U-YEARLY-EXP-LST-YR TO #S-U-YEARLY-EXPECTED
  MOVE #S-U-MNTHLY-EXP-LST-YR TO #S-U-MNTHLY-EXPECTED
  MOVE #NET-DB-YEARLY-EXP-LST-YR  TO #NET-DB-YEARLY-EXPECTED
  MOVE #NET-DB-MNTHLY-EXP-LST-YR  TO #NET-DB-MNTHLY-EXPECTED
END-IF
*
MOVE #YYYY TO #SCR-CURR-YEAR
MOVE #MM   TO #SCR-CURR-MM
MOVE #YYYY TO #SCR-LAST-YEAR
SUBTRACT 1 FROM #SCR-LAST-YEAR
MOVE #MONTH (#MM) TO #SCR-CURR-MONTH
MOVE #SCR-LAST-YEAR TO #SCR-LAST-MONTH-LAST-YEAR
MOVE #MM   TO #SCR-LAST-MM
*
IF #DATN-YYYYMM = #YYYYMM
  SUBTRACT 1 FROM #SCR-LAST-MM
*
  IF #SCR-LAST-MM = 0
    MOVE 12 TO #SCR-LAST-MM
    SUBTRACT 1 FROM #SCR-LAST-MONTH-LAST-YEAR
  END-IF
END-IF
*
MOVE #MONTH (#SCR-LAST-MM) TO #SCR-LAST-MONTH
*
* GET LAST YEARS STATISTICS RECORD
*
IF  (#MTD-MBR-STATS NE ' ')
    OR (#FILE-STATS    NE ' ')
    OR (#MORT-STATS    NE ' ')
    OR (#MARKET-STATS  NE ' ')
  MOVE #YYYYMM TO #WORK-YYYYMM
  SUBTRACT 1 FROM #WORK-YYYY
*
  FIND (1) MBRSHIP-STATS-V WITH MONTH-KEY = #WORK-YYYYMM
    ADD MBRSHIP-STATS-V.GAIN-MBRS (1:10)    TO   #SCR-LST-YR-NET-GAIN-MBRS
    ADD MBRSHIP-STATS-V.GAIN-MBRS (20)      TO   #SCR-LST-YR-NET-GAIN-MBRS
    ADD MBRSHIP-STATS-V.GAIN-MBRS (22)      TO   #SCR-LST-YR-NET-GAIN-MBRS
    ADD MBRSHIP-STATS-V.GAIN-MBRS (24)      TO   #SCR-LST-YR-NET-GAIN-MBRS    /* RE1
    ADD MBRSHIP-STATS-V.GAIN-MBRS (26)      TO   #SCR-LST-YR-NET-GAIN-MBRS    /* RE1
    SUBTRACT MBRSHIP-STATS-V.LOSS-MBRS(*) FROM #SCR-LST-YR-NET-GAIN-MBRS
    ADD MBRSHIP-STATS-V.SPS-GEN-GAIN-PLANS(1:6) TO #SCR-LST-YR-NET-GAIN-SG
    ADD MBRSHIP-STATS-V.SPS-GEN-GAIN-PLANS(13:14)
      TO #SCR-LST-YR-NET-GAIN-SG
    ADD MBRSHIP-STATS-V.SPS-GEN-GAIN-PLANS(16) TO #SCR-LST-YR-NET-GAIN-SG
    ADD MBRSHIP-STATS-V.SPS-GEN-GAIN-PLANS(18) TO #SCR-LST-YR-NET-GAIN-SG
    ADD MBRSHIP-STATS-V.SPS-GEN-GAIN-PLANS(20) TO #SCR-LST-YR-NET-GAIN-SG /*DW6        
    ADD MBRSHIP-STATS-V.SPS-GEN-GAIN-PLANS(22) TO #SCR-LST-YR-NET-GAIN-SG     /* RE1
    ADD MBRSHIP-STATS-V.SPS-GEN-GAIN-PLANS(24) TO #SCR-LST-YR-NET-GAIN-SG     /* RE1
    SUBTRACT SPS-GEN-LOSS-MBRS(*) FROM #SCR-LST-YR-NET-GAIN-SG
*
    ADD MBRSHIP-STATS-V.GAIN-MBRS (1:20) TO #SCR-LST-YR-NET-GAIN-PLANS
    ADD MBRSHIP-STATS-V.GAIN-MBRS (22)   TO #SCR-LST-YR-NET-GAIN-PLANS
    ADD MBRSHIP-STATS-V.GAIN-MBRS (24:27) TO #SCR-LST-YR-NET-GAIN-PLANS       /* RE1
    ADD MBRSHIP-STATS-V.SPS-GEN-GAIN-PLANS (*)
      TO #SCR-LST-YR-NET-GAIN-PLANS
    IF #YYYYMM GE 199712
      SUBTRACT MBRSHIP-STATS-V.LOSS-PLANS (*)
        FROM #SCR-LST-YR-NET-GAIN-PLANS
      SUBTRACT MBRSHIP-STATS-V.SPS-GEN-LOSS-PLANS (*)
        FROM #SCR-LST-YR-NET-GAIN-PLANS
    END-IF
*
    ADD MBRSHIP-STATS-V.GAIN-SHIPS (*)     TO   #SCR-LST-YR-NET-GAIN-SHIPS
    SUBTRACT MBRSHIP-STATS-V.LOSS-SHIPS(*) FROM #SCR-LST-YR-NET-GAIN-SHIPS
    ADD M-E-DB-BY-TYPE (*, *) TO #SCR-LST-YR-INS-IN-FORCE  /* DW2
*
    ADD MBRSHIP-STATS-V.GAIN-MBRS (1:10)   TO   #SCR-LST-YR-GAIN-MBRS
    ADD MBRSHIP-STATS-V.GAIN-MBRS (20)     TO   #SCR-LST-YR-GAIN-MBRS
    ADD MBRSHIP-STATS-V.GAIN-MBRS (22)     TO   #SCR-LST-YR-GAIN-MBRS
    ADD MBRSHIP-STATS-V.GAIN-MBRS (24)     TO   #SCR-LST-YR-GAIN-MBRS         /* RE1
    ADD MBRSHIP-STATS-V.GAIN-MBRS (26)     TO   #SCR-LST-YR-GAIN-MBRS         /* RE1
    ADD MBRSHIP-STATS-V.GAIN-MBRS (11:19)  TO   #SCR-LST-YR-GAIN-ADDL-MBRS
    ADD MBRSHIP-STATS-V.GAIN-MBRS (21)     TO   #SCR-LST-YR-GAIN-ADDL-MBRS
    ADD MBRSHIP-STATS-V.GAIN-MBRS (25)     TO   #SCR-LST-YR-GAIN-ADDL-MBRS    /* RE1
    ADD MBRSHIP-STATS-V.GAIN-MBRS (27)     TO   #SCR-LST-YR-GAIN-ADDL-MBRS    /* RE1
    ADD MBRSHIP-STATS-V.GAIN-SHIPS (*)     TO   #SCR-LST-YR-GAIN-UNITS
    COMPUTE #SCR-LST-YR-GAIN-MBRS-NCO = TOT-GAIN-ARMY-NEW-MBRS-NCO
      + TOT-GAIN-AIRF-NEW-MBRS-NCO
    COMPUTE #SCR-LST-YR-GAIN-ADDL-MBRS-NCO = TOT-GAIN-ARMY-ADDL-MBRS-NCO
      + TOT-GAIN-AIRF-ADDL-MBRS-NCO
    COMPUTE #SCR-LST-YR-GAIN-UNITS-NCO = TOT-GAIN-ARMY-UNITS-NCO
      + TOT-GAIN-AIRF-UNITS-NCO
*
  END-FIND
END-IF
*
* GET LAST YEARS + 1 STATISTICS RECORD
*
IF  (#MTD-MBR-STATS NE ' ')
    OR (#FILE-STATS    NE ' ')
    OR (*DEVICE = 'BATCH')  /* PM - ADDED 05/2000
  ADD 1 TO #WORK-MM
  IF #WORK-MM GT 12
    MOVE 01 TO #WORK-MM
    ADD 1 TO #WORK-YYYY
  END-IF
*
  FIND (1) MBRSHIP-STATS-V WITH MONTH-KEY = #WORK-YYYYMM
    IF (#DATN-YYYYMM NE #YYYYMM)     /* REQUESTED PRIOR MONTH
      MOVE ROUNDED MBRSHIP-STATS-V.ME-INS-IN-FORCE
        TO #SCR-LST-YR-INS-IN-FORCE
    END-IF
    IF #YYYYMM LT 199712 /* SINCE LOSS BY PLAN DID'NT START TILL 12 96
      SUBTRACT MBRSHIP-STATS-V.LOSS-PLANS-DEATHS
        FROM #SCR-LST-YR-NET-GAIN-PLANS
      SUBTRACT MBRSHIP-STATS-V.LOSS-PLANS-NON-DEATHS
        FROM #SCR-LST-YR-NET-GAIN-PLANS
    END-IF
  END-FIND
END-IF
*
* ACCUM PRIOR YTD INFO
*
MOVE #SCR-LAST-YEAR TO #WORK-YYYY
*
IF  (#MTD-MBR-STATS NE ' ')
    OR (#FILE-STATS    NE ' ')
    OR (#MORT-STATS    NE ' ')
    OR (#MARKET-STATS  NE ' ')
    OR (*DEVICE = 'BATCH')
  FOR #WORK-MM = 1 TO #MM      /* START AT MONTH 1 AND GO TO CURR MONTH
    FIND (1) MBRSHIP-STATS-V WITH MONTH-KEY = #WORK-YYYYMM
      ADD MBRSHIP-STATS-V.GAIN-MBRS (1:10) TO #SCR-LST-YTD-GAIN-MBRS
      ADD MBRSHIP-STATS-V.GAIN-MBRS (20)   TO #SCR-LST-YTD-GAIN-MBRS
      ADD MBRSHIP-STATS-V.GAIN-MBRS (22)   TO #SCR-LST-YTD-GAIN-MBRS
      ADD MBRSHIP-STATS-V.GAIN-MBRS (24)   TO #SCR-LST-YTD-GAIN-MBRS          /* RE1
      ADD MBRSHIP-STATS-V.GAIN-MBRS (26)   TO #SCR-LST-YTD-GAIN-MBRS          /* RE1
      ADD MBRSHIP-STATS-V.GAIN-MBRS(11:19) TO #SCR-LST-YTD-GAIN-ADDL-MBRS
      ADD MBRSHIP-STATS-V.GAIN-MBRS(21)    TO #SCR-LST-YTD-GAIN-ADDL-MBRS
      ADD MBRSHIP-STATS-V.GAIN-MBRS(25)    TO #SCR-LST-YTD-GAIN-ADDL-MBRS     /* RE1
      ADD MBRSHIP-STATS-V.GAIN-MBRS(27)    TO #SCR-LST-YTD-GAIN-ADDL-MBRS     /* RE1
      ADD MBRSHIP-STATS-V.GAIN-SHIPS (*)   TO #SCR-LST-YTD-GAIN-UNITS
*
      COMPUTE #SCR-LST-YTD-GAIN-MBRS-NCO = #SCR-LST-YTD-GAIN-MBRS-NCO
        + TOT-GAIN-ARMY-NEW-MBRS-NCO
        + TOT-GAIN-AIRF-NEW-MBRS-NCO
      COMPUTE #SCR-LST-YTD-GAIN-ADDL-MBRS-NCO =
        #SCR-LST-YTD-GAIN-ADDL-MBRS-NCO
        + TOT-GAIN-ARMY-ADDL-MBRS-NCO
        + TOT-GAIN-AIRF-ADDL-MBRS-NCO
      COMPUTE #SCR-LST-YTD-GAIN-UNITS-NCO = #SCR-LST-YTD-GAIN-UNITS-NCO
        + TOT-GAIN-ARMY-UNITS-NCO
        + TOT-GAIN-AIRF-UNITS-NCO
    END-FIND
  END-FOR
*
* ACCUM CURRENT YTD INFO
*
  MOVE #YYYYMM TO #WORK-YYYYMM
*
  FOR #WORK-MM = 1 TO #MM      /* START AT MONTH 1 AND GO TO CURR MONTH
    FIND (1) MBRSHIP-STATS-V WITH MONTH-KEY = #WORK-YYYYMM
      ADD MBRSHIP-STATS-V.LOSS-MBRS  (1) TO   #SCR-YTD-DEAD-MBRS
      ADD MBRSHIP-STATS-V.LOSS-PLANS (1) TO   #SCR-YTD-DEAD-SHIPS
      ADD MBRSHIP-STATS-V.NET-DEATH-BENE TO   #SCR-YTD-NET-DB
*
      ADD MBRSHIP-STATS-V.GAIN-MBRS (1:10)  TO #SCR-YTD-GAIN-MBRS
      ADD MBRSHIP-STATS-V.GAIN-MBRS (20)    TO #SCR-YTD-GAIN-MBRS
      ADD MBRSHIP-STATS-V.GAIN-MBRS (22)    TO #SCR-YTD-GAIN-MBRS
      ADD MBRSHIP-STATS-V.GAIN-MBRS (24)    TO #SCR-YTD-GAIN-MBRS             /* RE1
      ADD MBRSHIP-STATS-V.GAIN-MBRS (26)    TO #SCR-YTD-GAIN-MBRS             /* RE1
      ADD MBRSHIP-STATS-V.GAIN-MBRS (11:19) TO #SCR-YTD-GAIN-ADDL-MBRS
      ADD MBRSHIP-STATS-V.GAIN-MBRS (21)    TO #SCR-YTD-GAIN-ADDL-MBRS
      ADD MBRSHIP-STATS-V.GAIN-MBRS (25)    TO #SCR-YTD-GAIN-ADDL-MBRS        /* RE1
      ADD MBRSHIP-STATS-V.GAIN-MBRS (27)    TO #SCR-YTD-GAIN-ADDL-MBRS        /* RE1
      ADD MBRSHIP-STATS-V.GAIN-SHIPS (*)    TO #SCR-YTD-GAIN-UNITS
      COMPUTE #SCR-YTD-GAIN-MBRS-NCO = #SCR-YTD-GAIN-MBRS-NCO
        + TOT-GAIN-ARMY-NEW-MBRS-NCO
        + TOT-GAIN-AIRF-NEW-MBRS-NCO
      COMPUTE #SCR-YTD-GAIN-ADDL-MBRS-NCO = #SCR-YTD-GAIN-ADDL-MBRS-NCO
        + TOT-GAIN-ARMY-ADDL-MBRS-NCO
        + TOT-GAIN-AIRF-ADDL-MBRS-NCO
      COMPUTE #SCR-YTD-GAIN-UNITS-NCO = #SCR-YTD-GAIN-UNITS-NCO
        + TOT-GAIN-ARMY-UNITS-NCO
        + TOT-GAIN-AIRF-UNITS-NCO
    END-FIND
  END-FOR
*
  COMPUTE #SCR-YTD-DIFF-GAIN-MBRS
    = #SCR-YTD-GAIN-MBRS - #SCR-LST-YTD-GAIN-MBRS
  COMPUTE #SCR-YTD-DIFF-GAIN-ADDL-MBRS
    = #SCR-YTD-GAIN-ADDL-MBRS - #SCR-LST-YTD-GAIN-ADDL-MBRS
  COMPUTE #SCR-YTD-DIFF-GAIN-UNITS
    = #SCR-YTD-GAIN-UNITS - #SCR-LST-YTD-GAIN-UNITS
  COMPUTE #SCR-YTD-DIFF-GAIN-MBRS-NCO
    = #SCR-YTD-GAIN-MBRS-NCO - #SCR-LST-YTD-GAIN-MBRS-NCO
  COMPUTE #SCR-YTD-DIFF-GAIN-ADDL-MBRS-NCO
    = #SCR-YTD-GAIN-ADDL-MBRS-NCO - #SCR-LST-YTD-GAIN-ADDL-MBRS-NCO
  COMPUTE #SCR-YTD-DIFF-GAIN-UNITS-NCO
    = #SCR-YTD-GAIN-UNITS-NCO - #SCR-LST-YTD-GAIN-UNITS-NCO
END-IF
*
* GET CURRENT STATISTICS RECORD
*
FIND (1) MBRSHIP-STATS-V WITH MONTH-KEY = #YYYYMM
  IF NO RECORDS FOUND
    IF *DEVICE = 'BATCH'
      IGNORE
    ELSE
      COMPRESS 'MS rec not found for' #YYYYMM INTO #TEXT
      MOVE 'MS'   TO #CGA-SCR-COMMAND
      MOVE (AD=P) TO #SCR-CV
      INPUT TEXT #TEXT MARK *#YYYYMM USING MAP 'G4100MMS'
      FETCH 'G1000PXX'
    END-IF
  END-NOREC
END-FIND
*
ADD MBRSHIP-STATS-V.ME-MBR-BY-UNITS   (*)
  TO #SCR-LST-ME-TOT-MBR-BY-UNITS
ADD MBRSHIP-STATS-V.ME-SHIPS-BY-UNITS (*)
  TO #SCR-LST-ME-TOT-SHIPS-BY-UNITS
IF #YYYYMM LT 199701
  ADD MBRSHIP-STATS-V.ME-PAID-UP-UNITS TO #SCR-LST-ME-TOT-SHIPS-BY-UNITS
  ADD MBRSHIP-STATS-V.ME-ETI-UNITS     TO #SCR-LST-ME-TOT-SHIPS-BY-UNITS
END-IF
*
MOVE #SCR-CURR-MM   TO #SCR-LST-NU-POL-ADDED-MM
MOVE '-'            TO #SCR-LST-NU-POL-ADDED-/1
MOVE MBRSHIP-STATS-V.LAST-NU-POL-ADDED-DAY TO #SCR-LST-NU-POL-ADDED-DD
MOVE '-'            TO #SCR-LST-NU-POL-ADDED-/2
MOVE #SCR-CURR-YEAR TO #SCR-LST-NU-POL-ADDED-YYYY
*
MOVE MBRSHIP-STATS-V.TOT-GAIN-ARMY-NEW-MBRS  TO #SCR-GAIN-ARMY-MBRS
MOVE MBRSHIP-STATS-V.TOT-GAIN-ARMY-ADDL-MBRS TO #SCR-GAIN-ARMY-ADDL-MBRS
MOVE MBRSHIP-STATS-V.TOT-GAIN-ARMY-UNITS     TO #SCR-GAIN-ARMY-UNITS
MOVE TOT-GAIN-ARMY-NEW-MBRS-NCO  TO #SCR-GAIN-ARMY-MBRS-NCO
MOVE TOT-GAIN-ARMY-ADDL-MBRS-NCO TO #SCR-GAIN-ARMY-ADDL-MBRS-NCO
MOVE TOT-GAIN-ARMY-UNITS-NCO     TO #SCR-GAIN-ARMY-UNITS-NCO
*
MOVE MBRSHIP-STATS-V.TOT-GAIN-AIRF-NEW-MBRS  TO #SCR-GAIN-AIRF-MBRS
MOVE MBRSHIP-STATS-V.TOT-GAIN-AIRF-ADDL-MBRS TO #SCR-GAIN-AIRF-ADDL-MBRS
MOVE MBRSHIP-STATS-V.TOT-GAIN-AIRF-UNITS     TO #SCR-GAIN-AIRF-UNITS
MOVE TOT-GAIN-AIRF-NEW-MBRS-NCO  TO #SCR-GAIN-AIRF-MBRS-NCO
MOVE TOT-GAIN-AIRF-ADDL-MBRS-NCO TO #SCR-GAIN-AIRF-ADDL-MBRS-NCO
MOVE TOT-GAIN-AIRF-UNITS-NCO     TO #SCR-GAIN-AIRF-UNITS-NCO
*
MOVE MBRSHIP-STATS-V.LOSS-DEATH-ACTIVE-MBRS
  TO #SCR-LOSS-DEATH-ACT-MBRS
MOVE MBRSHIP-STATS-V.LOSS-DEATH-ACTIVE-UNITS
  TO #SCR-LOSS-DEATH-ACT-UNITS
MOVE MBRSHIP-STATS-V.LOSS-DEATH-RETIRED-MBRS
  TO #SCR-LOSS-DEATH-RET-MBRS
MOVE MBRSHIP-STATS-V.LOSS-DEATH-RETIRED-UNITS
  TO #SCR-LOSS-DEATH-RET-UNITS
*
ADD #SCR-GAIN-ARMY-MBRS      TO #SCR-TOT-GAIN-MBRS-AF
ADD #SCR-GAIN-AIRF-MBRS      TO #SCR-TOT-GAIN-MBRS-AF
ADD #SCR-GAIN-ARMY-ADDL-MBRS TO #SCR-TOT-GAIN-ADDL-MBRS-AF
ADD #SCR-GAIN-AIRF-ADDL-MBRS TO #SCR-TOT-GAIN-ADDL-MBRS-AF
ADD #SCR-GAIN-ARMY-UNITS     TO #SCR-TOT-GAIN-UNITS-AF
ADD #SCR-GAIN-AIRF-UNITS     TO #SCR-TOT-GAIN-UNITS-AF
ADD #SCR-GAIN-ARMY-MBRS-NCO      TO #SCR-TOT-GAIN-MBRS-AF-NCO
ADD #SCR-GAIN-AIRF-MBRS-NCO      TO #SCR-TOT-GAIN-MBRS-AF-NCO
ADD #SCR-GAIN-ARMY-ADDL-MBRS-NCO TO #SCR-TOT-GAIN-ADDL-MBRS-AF-NCO
ADD #SCR-GAIN-AIRF-ADDL-MBRS-NCO TO #SCR-TOT-GAIN-ADDL-MBRS-AF-NCO
ADD #SCR-GAIN-ARMY-UNITS-NCO     TO #SCR-TOT-GAIN-UNITS-AF-NCO
ADD #SCR-GAIN-AIRF-UNITS-NCO     TO #SCR-TOT-GAIN-UNITS-AF-NCO
*
ADD MBRSHIP-STATS-V.GAIN-MBRS (1:20)  TO #SCR-GAIN-MBRS (1:20)
ADD MBRSHIP-STATS-V.GAIN-MBRS (21)  TO #SCR-FSO-MBRS
ADD MBRSHIP-STATS-V.GAIN-MBRS (22:23)  TO #SCR-GAIN-MBRS (22:23)
ADD MBRSHIP-STATS-V.GAIN-MBRS (24:27)  TO #SCR-GAIN-MBRS (24:27)       /* RE1
ADD MBRSHIP-STATS-V.GAIN-MBRS (1:10)  TO #SCR-TOT-GAIN-MBRS
ADD MBRSHIP-STATS-V.GAIN-MBRS (20)    TO #SCR-TOT-GAIN-MBRS
ADD MBRSHIP-STATS-V.GAIN-MBRS (22)    TO #SCR-TOT-GAIN-MBRS
ADD MBRSHIP-STATS-V.GAIN-MBRS (24)    TO #SCR-TOT-GAIN-MBRS            /* RE1
ADD MBRSHIP-STATS-V.GAIN-MBRS (26)    TO #SCR-TOT-GAIN-MBRS            /* RE1
ADD MBRSHIP-STATS-V.GAIN-MBRS (11:19) TO #SCR-TOT-GAIN-ADDL-MBRS
ADD MBRSHIP-STATS-V.GAIN-MBRS (21)    TO #SCR-TOT-GAIN-ADDL-MBRS
ADD MBRSHIP-STATS-V.GAIN-MBRS (23)    TO #SCR-TOT-GAIN-ADDL-MBRS
ADD MBRSHIP-STATS-V.GAIN-MBRS (25)    TO #SCR-TOT-GAIN-ADDL-MBRS       /* RE1
ADD MBRSHIP-STATS-V.GAIN-MBRS (27)    TO #SCR-TOT-GAIN-ADDL-MBRS       /* RE1
*
ADD MBRSHIP-STATS-V.GAIN-MBRS (1:20)  TO #SCR-TOT-GAIN-PLANS
ADD MBRSHIP-STATS-V.GAIN-MBRS (22:23) TO #SCR-TOT-GAIN-PLANS
ADD MBRSHIP-STATS-V.GAIN-MBRS (24:27) TO #SCR-TOT-GAIN-PLANS           /* RE1
*
ADD SPS-GEN-GAIN-PLANS (*)   TO #SCR-SG-GAIN-MBRS (*)
ADD SPS-GEN-GAIN-PLANS (1:6)    TO #SCR-SG-TOT-GAIN-MBRS
ADD SPS-GEN-GAIN-PLANS (13:14)  TO #SCR-SG-TOT-GAIN-MBRS
ADD SPS-GEN-GAIN-PLANS (16)     TO #SCR-SG-TOT-GAIN-MBRS
ADD SPS-GEN-GAIN-PLANS (18)     TO #SCR-SG-TOT-GAIN-MBRS
ADD SPS-GEN-GAIN-PLANS (20)     TO #SCR-SG-TOT-GAIN-MBRS   /* DW6
ADD SPS-GEN-GAIN-PLANS (22)     TO #SCR-SG-TOT-GAIN-MBRS   /* RE1
ADD SPS-GEN-GAIN-PLANS (24)     TO #SCR-SG-TOT-GAIN-MBRS   /* RE1
ADD SPS-GEN-GAIN-PLANS (7:12) TO #SCR-SG-TOT-GAIN-ADDL-MBRS
ADD SPS-GEN-GAIN-PLANS (15) TO #SCR-SG-TOT-GAIN-ADDL-MBRS
ADD SPS-GEN-GAIN-PLANS (17) TO #SCR-SG-TOT-GAIN-ADDL-MBRS
ADD SPS-GEN-GAIN-PLANS (19) TO #SCR-SG-TOT-GAIN-ADDL-MBRS
ADD SPS-GEN-GAIN-PLANS (21) TO #SCR-SG-TOT-GAIN-ADDL-MBRS   /* DW6
ADD SPS-GEN-GAIN-PLANS (23) TO #SCR-SG-TOT-GAIN-ADDL-MBRS   /* RE1
ADD SPS-GEN-GAIN-PLANS (25) TO #SCR-SG-TOT-GAIN-ADDL-MBRS   /* RE1
compute #scr-sg-addl-al-gpl = sps-gen-gain-plans (19)   /* ADDL AL   DW6
  + sps-gen-gain-plans (21)   /* ADDL GPL
ADD SPS-GEN-GAIN-PLANS (*)  TO #SCR-SG-TOT-GAIN-PLANS
COMPUTE #SCR-X-TOT-GAIN-MBRS =
  #SCR-TOT-GAIN-MBRS + #SCR-SG-TOT-GAIN-MBRS
COMPUTE #SCR-X-TOT-GAIN-PLANS =
  #SCR-TOT-GAIN-PLANS + #SCR-SG-TOT-GAIN-PLANS
*
ADD MBRSHIP-STATS-V.GAIN-MBRS (1:20)  TO #SCR-TOT-GAIN-PLANS
ADD MBRSHIP-STATS-V.GAIN-MBRS (22:23) TO #SCR-TOT-GAIN-PLANS
ADD MBRSHIP-STATS-V.GAIN-MBRS (24:27) TO #SCR-TOT-GAIN-PLANS   /* RE1
*
ADD MBRSHIP-STATS-V.GAIN-SHIPS (1:20) TO #SCR-GAIN-SHIPS (1:20)
ADD MBRSHIP-STATS-V.GAIN-SHIPS (*)    TO #SCR-TOT-GAIN-SHIPS
COMPUTE #SCR-TOT-GAIN-MBRS-NCO = TOT-GAIN-ARMY-NEW-MBRS-NCO
  + TOT-GAIN-AIRF-NEW-MBRS-NCO
COMPUTE #SCR-TOT-GAIN-ADDL-MBRS-NCO = TOT-GAIN-ARMY-ADDL-MBRS-NCO
  + TOT-GAIN-AIRF-ADDL-MBRS-NCO
COMPUTE #SCR-TOT-GAIN-SHIPS-NCO = TOT-GAIN-ARMY-UNITS-NCO
  + TOT-GAIN-AIRF-UNITS-NCO
*
COMPUTE #SCR-GAIN-DIFF-MBRS
  = #SCR-TOT-GAIN-MBRS - #SCR-LST-YR-GAIN-MBRS
COMPUTE #SCR-GAIN-DIFF-ADDL-MBRS
  = #SCR-TOT-GAIN-ADDL-MBRS - #SCR-LST-YR-GAIN-ADDL-MBRS
COMPUTE #SCR-GAIN-DIFF-UNITS
  = #SCR-TOT-GAIN-SHIPS - #SCR-LST-YR-GAIN-UNITS
COMPUTE #SCR-GAIN-DIFF-MBRS-NCO
  = #SCR-TOT-GAIN-MBRS-NCO - #SCR-LST-YR-GAIN-MBRS-NCO
COMPUTE #SCR-GAIN-DIFF-ADDL-MBRS-NCO
  = #SCR-TOT-GAIN-ADDL-MBRS-NCO - #SCR-LST-YR-GAIN-ADDL-MBRS-NCO
COMPUTE #SCR-GAIN-DIFF-UNITS-NCO
  = #SCR-TOT-GAIN-SHIPS-NCO - #SCR-LST-YR-GAIN-UNITS-NCO
*
ADD MBRSHIP-STATS-V.GAIN-SHIPS (1:10)  TO #SCR-TOT-GAIN-NEW-UNITS
ADD MBRSHIP-STATS-V.GAIN-SHIPS (20)    TO #SCR-TOT-GAIN-NEW-UNITS
ADD MBRSHIP-STATS-V.GAIN-SHIPS (24)    TO #SCR-TOT-GAIN-NEW-UNITS     /* RE1
ADD MBRSHIP-STATS-V.GAIN-SHIPS (26)    TO #SCR-TOT-GAIN-NEW-UNITS     /* RE1
ADD MBRSHIP-STATS-V.GAIN-SHIPS (11:19) TO #SCR-TOT-GAIN-ADDL-UNITS
ADD MBRSHIP-STATS-V.GAIN-SHIPS (25)    TO #SCR-TOT-GAIN-ADDL-UNITS    /* RE1
ADD MBRSHIP-STATS-V.GAIN-SHIPS (27)    TO #SCR-TOT-GAIN-ADDL-UNITS    /* RE1
*
ADD ROUNDED GAIN-FAC-AMT            (*) TO #SCR-GAIN-FAC-AMT (*)
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT  (1:6) TO #SCR-GAIN-FAC-AMT (1:6)
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (14) TO #SCR-GAIN-FAC-AMT (8)
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (16) TO #SCR-GAIN-FAC-AMT (22)      
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT (7:12) TO #SCR-GAIN-FAC-AMT (11:16)
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (15) TO #SCR-GAIN-FAC-AMT (18)
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (17) TO #SCR-GAIN-FAC-AMT (23)      
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (13) TO #SCR-GAIN-FAC-AMT (20)
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (18) TO #SCR-GAIN-FAC-AMT (7)
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (19) TO #SCR-GAIN-FAC-AMT (17)
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (20) TO #SCR-GAIN-FAC-AMT (9)  /* GPL DW6
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (21) TO #SCR-GAIN-FAC-AMT (17) /* addl GPL DW6
*                                    ADDL GPL face amount is combined with AL
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (22) TO #SCR-GAIN-FAC-AMT (24)       /* RE1
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (23) TO #SCR-GAIN-FAC-AMT (25)       /* RE1
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (24) TO #SCR-GAIN-FAC-AMT (26)       /* RE1
ADD ROUNDED SPS-GEN-GAIN-FAC-AMT   (25) TO #SCR-GAIN-FAC-AMT (27)       /* RE1
ADD #SCR-GAIN-FAC-AMT (*)               TO #SCR-TOT-GAIN-FAC-AMT
*
ADD MBRSHIP-STATS-V.LOSS-MBRS (1:4)   TO #SCR-LOSS-MBRS (1:4)
ADD #SCR-LOSS-MBRS (*)                TO #SCR-TOT-LOSS-MBRS
*
ADD MBRSHIP-STATS-V.LOSS-PLANS(1:4)   TO #SCR-LOSS-PLANS(1:4)
ADD #SCR-LOSS-PLANS(*)                TO #SCR-TOT-LOSS-PLANS
*
ADD MBRSHIP-STATS-V.LOSS-SHIPS (1:4)   TO #SCR-LOSS-SHIPS (1:4)
ADD #SCR-LOSS-SHIPS (*)                TO #SCR-TOT-LOSS-SHIPS
*
ADD SPS-GEN-LOSS-MBRS (*)  TO #SCR-SG-LOSS-MBRS (*)
ADD SPS-GEN-LOSS-PLANS (*)  TO #SCR-SG-LOSS-PLANS (*)
ADD SPS-GEN-LOSS-MBRS (*) TO #SCR-SG-TOT-LOSS-MBRS
ADD SPS-GEN-LOSS-PLANS (*) TO #SCR-SG-TOT-LOSS-PLANS
COMPUTE #SCR-X-TOT-LOSS-MBRS =
  #SCR-TOT-LOSS-MBRS + #SCR-SG-TOT-LOSS-MBRS
COMPUTE #SCR-X-TOT-LOSS-PLANS =
  #SCR-TOT-LOSS-PLANS + #SCR-SG-TOT-LOSS-PLANS
*
COMPUTE #SCR-NET-GAIN-MBRS =
  #SCR-TOT-GAIN-MBRS - #SCR-TOT-LOSS-MBRS
COMPUTE #SCR-NET-GAIN-SG =
  #SCR-SG-TOT-GAIN-MBRS - #SCR-SG-TOT-LOSS-MBRS
COMPUTE #SCR-NET-GAIN-PLANS =
  #SCR-X-TOT-GAIN-PLANS - #SCR-X-TOT-LOSS-PLANS
COMPUTE #SCR-NET-GAIN-SHIPS =
  #SCR-TOT-GAIN-SHIPS - #SCR-TOT-LOSS-SHIPS
*
MOVE MBRSHIP-STATS-V.RESTRICTED-NEW-MBRS TO #SCR-RESTR-NEW-MBRS
MOVE MBRSHIP-STATS-V.RESTRICTED-NEW-MBRS TO #SCR-RESTR-UNITS
MOVE MBRSHIP-STATS-V.APPL-REJ-NEW-MBRS TO #SCR-APP-REJ-NEW-MBRS
MOVE MBRSHIP-STATS-V.APPL-REJ-ADDL-MBRS TO #SCR-APP-REJ-ADDL-MBRS
MOVE MBRSHIP-STATS-V.APPL-REJ-UNITS TO #SCR-APP-REJ-UNITS
*
COMPUTE ROUNDED #SCR-DEAD-AVG-AGE
  = MBRSHIP-STATS-V.LOSS-DEATH-TOTAL-AGE / #SCR-LOSS-MBRS (1)
*
COMPUTE #CSO-YTD-EXPECTED = #CSO-MNTHLY-EXPECTED * #MM
COMPUTE #S-U-YTD-EXPECTED = #S-U-MNTHLY-EXPECTED * #MM
COMPUTE #NET-DB-YTD-EXPECTED = #NET-DB-MNTHLY-EXPECTED * #MM
*
MOVE ROUNDED MBRSHIP-STATS-V.NET-DEATH-BENE  TO #SCR-NET-DB
*
COMPUTE ROUNDED #SCR-CSO-MTD-RATIO =
  ((#SCR-LOSS-PLANS (1) * 100) / #CSO-MNTHLY-EXPECTED)
COMPUTE ROUNDED #SCR-S-U-MTD-RATIO =
  ((#SCR-LOSS-PLANS (1) * 100) / #S-U-MNTHLY-EXPECTED)
COMPUTE ROUNDED #SCR-MTD-NET-DB-RATIO =
  ((#SCR-NET-DB * 100) / #NET-DB-MNTHLY-EXPECTED)
*
COMPUTE ROUNDED #SCR-CSO-YTD-RATIO =
  ((#SCR-YTD-DEAD-SHIPS * 100) / #CSO-YTD-EXPECTED)
COMPUTE ROUNDED #SCR-S-U-YTD-RATIO =
  ((#SCR-YTD-DEAD-SHIPS * 100) / #S-U-YTD-EXPECTED)
COMPUTE ROUNDED #NET-DB-YTD-MORT-PORT =
  #NET-DB-YTD-EXPECTED * #MORTALITY-PORTION
COMPUTE ROUNDED #SCR-YTD-NET-DB-RATIO =
  ((#SCR-YTD-NET-DB * 100) / #NET-DB-YTD-MORT-PORT)
* BELOW ADDED 1/2000
MOVE GAINS-BY-PLAN     (*) TO #GAINS-BY-PLAN    (*)
MOVE GAINS-BY-PLAN-DB  (*) TO #GAINS-BY-PLAN-DB (*)
MOVE LOSSES-BY-PLAN    (*) TO #LOSSES-BY-PLAN   (*)
MOVE LOSSES-BY-PLAN-DB (*) TO #LOSSES-BY-PLAN-DB(*)
ADD GAINS-BY-PLAN      (*) TO #TOT-GAINS-BY-PLAN   
ADD GAINS-BY-PLAN-DB   (*) TO #TOT-GAINS-BY-PLAN-DB
**ADD LOSSES-BY-PLAN    (1:7) TO #TOT-LOSSES-BY-PLAN    /* DW1   /* DW7      
ADD LOSSES-BY-PLAN    (1:9) TO #TOT-LOSSES-BY-PLAN    /* DW1   /* DW7     
**ADD LOSSES-BY-PLAN-DB (1:7) TO #TOT-LOSSES-BY-PLAN-DB /* DW1   /* DW7  
ADD LOSSES-BY-PLAN-DB (1:9) TO #TOT-LOSSES-BY-PLAN-DB                   /* RE1 END
COMPUTE #GL-BY-PLAN-NET = #TOT-GAINS-BY-PLAN - #TOT-LOSSES-BY-PLAN
COMPUTE #GL-BY-PLAN-NET-DB =
  #TOT-GAINS-BY-PLAN-DB - #TOT-LOSSES-BY-PLAN-DB
MOVE GAINS-LIVES-BY-CAT (*) TO #GAINS-LIVES-BY-CAT  (*)
MOVE LOSSES-LIVES-BY-CAT (*) TO #LOSSES-LIVES-BY-CAT (*)
ADD GAINS-LIVES-BY-CAT (*) TO #TOT-GAINS-LIVES-BY-CAT
ADD LOSSES-LIVES-BY-CAT (*) TO #TOT-LOSSES-LIVES-BY-CAT
COMPUTE #GL-LIVES-BY-CAT-NET = #TOT-GAINS-LIVES-BY-CAT
  - #TOT-LOSSES-LIVES-BY-CAT
MOVE FBR-PLAN-GAINS (*) TO #FBR-PLAN-GAINS (*)
MOVE FBR-CAT-GAINS  (*) TO #FBR-CAT-GAINS (*)
ADD M-E-DB-BY-TYPE (*, *) TO #SCR-INS-IN-FORCE  /* DW2
ADD M-E-DB-BY-TYPE (*, *) TO #TOT-INS-FORCE     /* DW2
*
* * * * * * GET NEXT MONTHS RECORD FOR CURRENT INFO FOR TOP OF PAGE
*
IF  (*DEVICE = 'BATCH')
    OR (#DATN-YYYYMM NE #YYYYMM)     /* REQUESTED PRIOR MONTH
  MOVE #SCR-CURR-MONTH TO #SCR-REQUESTED-MON
  MOVE #SCR-CURR-YEAR  TO #SCR-REQUESTED-YEAR
  ADD 1 TO #MM
*
  IF #MM GT 12
    MOVE 1 TO #MM
    ADD 1 TO #YYYY
  END-IF
*
  FIND (1) MBRSHIP-STATS-V WITH MONTH-KEY = #YYYYMM
*
  END-FIND
ELSE
*
  MOVE #SCR-CURR-YEAR TO #SCR-REQUESTED-YEAR
  MOVE #SCR-CURR-MM    TO #WORK-MM
  SUBTRACT 1 FROM #WORK-MM
*
  IF #WORK-MM = 0
    MOVE 12 TO #WORK-MM
    SUBTRACT 1 FROM #SCR-REQUESTED-YEAR
  END-IF
*
  MOVE #MONTH (#WORK-MM) TO #SCR-REQUESTED-MON
END-IF
*
MOVE ROUNDED MBRSHIP-STATS-V.ME-PAID-DB   TO #SCR-PAID-UP-DB
MOVE ROUNDED MBRSHIP-STATS-V.ME-ETI-DB    TO #SCR-ETI-DB
ADD MBRSHIP-STATS-V.ME-MBR-BY-UNITS   (*) TO #SCR-TOT-ME-MBR-BY-UNITS
ADD MBRSHIP-STATS-V.ME-S-G-BY-UNITS   (*) TO #SCR-TOT-ME-S-G-BY-UNITS
ADD MBRSHIP-STATS-V.ME-SHIPS-BY-UNITS (*) TO #SCR-TOT-ME-SHIPS-BY-UNITS
ADD MBRSHIP-STATS-V.ME-LINES-BY-PLAN  (*) TO #SCR-TOT-ME-LINES-BY-PLAN
IF #SCR-CURR-YEAR LT 1997
  ADD MBRSHIP-STATS-V.ME-PAID-UP-UNITS TO #SCR-TOT-ME-SHIPS-BY-UNITS
  ADD MBRSHIP-STATS-V.ME-ETI-UNITS     TO #SCR-TOT-ME-SHIPS-BY-UNITS
END-IF
MOVE ROUNDED MBRSHIP-STATS-V.ME-INS-IN-FORCE TO #SCR-INS-IN-FORCE
*
COMPUTE #SCR-TOT-ALL-CSV-MBRS-DET (1)
  = MBRSHIP-STATS-V.LOSSES-MBRS-ACT (1)
  + MBRSHIP-STATS-V.LOSSES-MBRS-ACT (2)
COMPUTE #SCR-TOT-ALL-CSV-MBRS-DET (2)
  = MBRSHIP-STATS-V.LOSSES-MBRS-RET (1)
  + MBRSHIP-STATS-V.LOSSES-MBRS-RET (2)
COMPUTE #SCR-TOT-ALL-CSV-MBRS-DET (3)
  = MBRSHIP-STATS-V.LOSSES-MBRS-SEP (1)
  + MBRSHIP-STATS-V.LOSSES-MBRS-SEP (2)
ADD #SCR-TOT-ALL-CSV-MBRS-DET (*) TO #SCR-TOT-ALL-CSV-MBRS
*
COMPUTE #SCR-TOT-ALL-CSV-UNITS-DET (1)
  = MBRSHIP-STATS-V.LOSSES-UNITS-ACT (1)
  + MBRSHIP-STATS-V.LOSSES-UNITS-ACT (2)
COMPUTE #SCR-TOT-ALL-CSV-UNITS-DET (2)
  = MBRSHIP-STATS-V.LOSSES-UNITS-RET (1)
  + MBRSHIP-STATS-V.LOSSES-UNITS-RET (2)
COMPUTE #SCR-TOT-ALL-CSV-UNITS-DET (3)
  = MBRSHIP-STATS-V.LOSSES-UNITS-SEP (1)
  + MBRSHIP-STATS-V.LOSSES-UNITS-SEP (2)
ADD #SCR-TOT-ALL-CSV-UNITS-DET (*) TO #SCR-TOT-ALL-CSV-UNITS
*
COMPUTE #SCR-PARTIAL-ALL-CSV-UNITS
  = MBRSHIP-STATS-V.LOSSES-PARTIAL-UNITS (1)
  + MBRSHIP-STATS-V.LOSSES-PARTIAL-UNITS (2)
*
COMPUTE #SCR-TOT-ALL-LAP-MBRS-DET (1)
  = MBRSHIP-STATS-V.LOSSES-MBRS-ACT (3)
  + MBRSHIP-STATS-V.LOSSES-MBRS-ACT (7)
  + MBRSHIP-STATS-V.LOSSES-MBRS-ACT (8)
COMPUTE #SCR-TOT-ALL-LAP-MBRS-DET (2)
  = MBRSHIP-STATS-V.LOSSES-MBRS-RET (3)
  + MBRSHIP-STATS-V.LOSSES-MBRS-RET (7)
  + MBRSHIP-STATS-V.LOSSES-MBRS-RET (8)
COMPUTE #SCR-TOT-ALL-LAP-MBRS-DET (3)
  = MBRSHIP-STATS-V.LOSSES-MBRS-SEP (3)
  + MBRSHIP-STATS-V.LOSSES-MBRS-SEP (7)
  + MBRSHIP-STATS-V.LOSSES-MBRS-SEP (8)
ADD #SCR-TOT-ALL-LAP-MBRS-DET (*) TO #SCR-TOT-ALL-LAP-MBRS
*
COMPUTE #SCR-TOT-ALL-LAP-UNITS-DET (1)
  = MBRSHIP-STATS-V.LOSSES-UNITS-ACT (3)
  + MBRSHIP-STATS-V.LOSSES-UNITS-ACT (7)
  + MBRSHIP-STATS-V.LOSSES-UNITS-ACT (8)
COMPUTE #SCR-TOT-ALL-LAP-UNITS-DET (2)
  = MBRSHIP-STATS-V.LOSSES-UNITS-RET (3)
  + MBRSHIP-STATS-V.LOSSES-UNITS-RET (7)
  + MBRSHIP-STATS-V.LOSSES-UNITS-RET (8)
COMPUTE #SCR-TOT-ALL-LAP-UNITS-DET (3)
  = MBRSHIP-STATS-V.LOSSES-UNITS-SEP (3)
  + MBRSHIP-STATS-V.LOSSES-UNITS-SEP (7)
  + MBRSHIP-STATS-V.LOSSES-UNITS-SEP (8)
ADD #SCR-TOT-ALL-LAP-UNITS-DET (*) TO #SCR-TOT-ALL-LAP-UNITS
*
COMPUTE #SCR-PARTIAL-ALL-LAP-UNITS
  = MBRSHIP-STATS-V.LOSSES-PARTIAL-UNITS (3)
  + MBRSHIP-STATS-V.LOSSES-PARTIAL-UNITS (7)
  + MBRSHIP-STATS-V.LOSSES-PARTIAL-UNITS (8)
*
ADD MBRSHIP-STATS-V.LOSSES-MBRS-ACT (*) TO #SCR-TOT-MBRS-LOSSES(*)
ADD MBRSHIP-STATS-V.LOSSES-MBRS-RET (*) TO #SCR-TOT-MBRS-LOSSES(*)
ADD MBRSHIP-STATS-V.LOSSES-MBRS-SEP (*) TO #SCR-TOT-MBRS-LOSSES(*)
ADD MBRSHIP-STATS-V.LOSSES-UNITS-ACT(*) TO #SCR-TOT-UNITS-LOSSES(*)
ADD MBRSHIP-STATS-V.LOSSES-UNITS-RET(*) TO #SCR-TOT-UNITS-LOSSES(*)
ADD MBRSHIP-STATS-V.LOSSES-UNITS-SEP(*) TO #SCR-TOT-UNITS-LOSSES(*)
ADD #SCR-TOT-MBRS-LOSSES  (*)    TO #SCR-TOT-TOT-MBRS-LOSSES
ADD #SCR-TOT-UNITS-LOSSES (*)    TO #SCR-TOT-TOT-UNITS-LOSSES
*
ADD MBRSHIP-STATS-V.ARMY-AUTH  (1:11) TO #SCR-TOT-MANNING-ARMY-AUTH
ADD MBRSHIP-STATS-V.AIRF-AUTH  (1:11) TO #SCR-TOT-MANNING-AIRF-AUTH
ADD MBRSHIP-STATS-V.ARMY-AAFMAA(1:11) TO #SCR-TOT-MANNING-ARMY-AAFMAA
ADD MBRSHIP-STATS-V.AIRF-AAFMAA(1:11) TO #SCR-TOT-MANNING-AIRF-AAFMAA
*
ADD MBRSHIP-STATS-V.ARMY-AUTH  (12:17) TO #SCR-TOT-MAN-NCO-ARMY-AUTH
ADD MBRSHIP-STATS-V.AIRF-AUTH  (12:17) TO #SCR-TOT-MAN-NCO-AIRF-AUTH
ADD MBRSHIP-STATS-V.ARMY-AAFMAA(12:17) TO #SCR-TOT-MAN-NCO-ARMY-AAFMAA
ADD MBRSHIP-STATS-V.AIRF-AAFMAA(12:17) TO #SCR-TOT-MAN-NCO-AIRF-AAFMAA
*
FOR #I1 1 TO 11
  COMPUTE ROUNDED #WORK-PCT = 100 *
    (MBRSHIP-STATS-V.ARMY-AAFMAA(#I1) / MBRSHIP-STATS-V.ARMY-AUTH(#I1))
  MOVE ROUNDED #WORK-PCT TO #SCR-MANNING-ARMY-PCT (#I1)
*
  COMPUTE ROUNDED #WORK-PCT = 100 *
    (MBRSHIP-STATS-V.AIRF-AAFMAA(#I1) / MBRSHIP-STATS-V.AIRF-AUTH(#I1))
  MOVE ROUNDED #WORK-PCT TO #SCR-MANNING-AIRF-PCT (#I1)
END-FOR
*
COMPUTE ROUNDED #WORK-PCT = 100 *
  (#SCR-TOT-MANNING-ARMY-AAFMAA / #SCR-TOT-MANNING-ARMY-AUTH)
MOVE ROUNDED #WORK-PCT TO #SCR-MANNING-ARMY-PCT (12)
COMPUTE ROUNDED #WORK-PCT = 100 *
  (#SCR-TOT-MANNING-AIRF-AAFMAA / #SCR-TOT-MANNING-AIRF-AUTH)
MOVE ROUNDED #WORK-PCT TO #SCR-MANNING-AIRF-PCT (12)
*
RESET #I2
FOR #I1 12 TO 17
  ADD 1 TO #I2
  COMPUTE ROUNDED #WORK-PCT = 100 *
    (MBRSHIP-STATS-V.ARMY-AAFMAA(#I1) / MBRSHIP-STATS-V.ARMY-AUTH(#I1))
  MOVE ROUNDED #WORK-PCT TO #SCR-MAN-NCO-ARMY-PCT (#I2)
  IF #I1 NE 17  /* no E4
    COMPUTE ROUNDED #WORK-PCT = 100 *
      (MBRSHIP-STATS-V.AIRF-AAFMAA(#I1) / MBRSHIP-STATS-V.AIRF-AUTH(#I1))
    MOVE ROUNDED #WORK-PCT TO #SCR-MAN-NCO-AIRF-PCT (#I2)
  END-IF
END-FOR
*
COMPUTE ROUNDED #WORK-PCT = 100 *
  (#SCR-TOT-MAN-NCO-ARMY-AAFMAA / #SCR-TOT-MAN-NCO-ARMY-AUTH)
MOVE ROUNDED #WORK-PCT TO #SCR-MAN-NCO-ARMY-PCT (7)
COMPUTE ROUNDED #WORK-PCT = 100 *
  (#SCR-TOT-MAN-NCO-AIRF-AAFMAA / #SCR-TOT-MAN-NCO-AIRF-AUTH)
MOVE ROUNDED #WORK-PCT TO #SCR-MAN-NCO-AIRF-PCT (7)
*
MOVE MBRSHIP-STATS-V.ME-TOT-ARMY-MBRS  TO #SCR-TOT-MBRS-A-OTHERS
ADD MBRSHIP-STATS-V.ME-TOT-OTHERS-MBRS TO #SCR-TOT-MBRS-A-OTHERS
COMPUTE #SCR-TOT-MBRS-A-F-OTHERS = #SCR-TOT-MBRS-A-OTHERS
  + ME-TOT-AIRF-MBRS
*
IF #INTRO-MBR-STATS NE ' '
  IF #DATN-MM GE 9
    COMPUTE #SCN-CLASS-YYYY (4) = #DATN-YYYY + 1
  ELSE
    MOVE #DATN-YYYY   TO #SCN-CLASS-YYYY (4)
  END-IF
*
  COMPUTE #SCN-CLASS-YYYY (3) = #DATN-YYYY + 1
  COMPUTE #SCN-CLASS-YYYY (2) = #DATN-YYYY + 2
  COMPUTE #SCN-CLASS-YYYY (1) = #DATN-YYYY + 3
*
  IF #REQ-CUR-MONTH                    /* REQUESTED CURR MONTH
    FIND (1) NT-V WITH ID-NUMBER = 800001
      MOVE CURR-YEAR      (1) TO MBRSHIP-STATS-V.INT-MBR-ARMY      (4)
      MOVE CURR-YEAR      (2) TO MBRSHIP-STATS-V.INT-MBR-AIRF      (4)
      MOVE CURR-YEAR      (3) TO MBRSHIP-STATS-V.INT-MBR-ARMY-ROTC (4)
      MOVE CURR-YEAR      (4) TO MBRSHIP-STATS-V.INT-MBR-AIRF-ROTC (4)
      MOVE CURR-YEAR      (5) TO MBRSHIP-STATS-V.INT-MBR-ARMY-OCS  (4)
      MOVE CURR-YEAR      (6) TO MBRSHIP-STATS-V.INT-MBR-AIRF-OTS  (4)
      MOVE NEXT-YEAR      (1) TO MBRSHIP-STATS-V.INT-MBR-ARMY      (3)
      MOVE NEXT-YEAR      (2) TO MBRSHIP-STATS-V.INT-MBR-AIRF      (3)
      MOVE NEXT-YEAR      (3) TO MBRSHIP-STATS-V.INT-MBR-ARMY-ROTC (3)
      MOVE NEXT-YEAR      (4) TO MBRSHIP-STATS-V.INT-MBR-AIRF-ROTC (3)
      MOVE NEXT-YEAR      (5) TO MBRSHIP-STATS-V.INT-MBR-ARMY-OCS  (3)
      MOVE NEXT-YEAR      (6) TO MBRSHIP-STATS-V.INT-MBR-AIRF-OTS  (3)
      MOVE NEXT-NEXT-YEAR (1) TO MBRSHIP-STATS-V.INT-MBR-ARMY      (2)
      MOVE NEXT-NEXT-YEAR (2) TO MBRSHIP-STATS-V.INT-MBR-AIRF      (2)
      MOVE NEXT-NEXT-YEAR (3) TO MBRSHIP-STATS-V.INT-MBR-ARMY-ROTC (2)
      MOVE NEXT-NEXT-YEAR (4) TO MBRSHIP-STATS-V.INT-MBR-AIRF-ROTC (2)
      MOVE NEXT-NEXT-YEAR (5) TO MBRSHIP-STATS-V.INT-MBR-ARMY-OCS  (2)
      MOVE NEXT-NEXT-YEAR (6) TO MBRSHIP-STATS-V.INT-MBR-AIRF-OTS  (2)
      MOVE OTHER-YEAR     (1) TO MBRSHIP-STATS-V.INT-MBR-ARMY      (1)
      MOVE OTHER-YEAR     (2) TO MBRSHIP-STATS-V.INT-MBR-AIRF      (1)
      MOVE OTHER-YEAR     (3) TO MBRSHIP-STATS-V.INT-MBR-ARMY-ROTC (1)
      MOVE OTHER-YEAR     (4) TO MBRSHIP-STATS-V.INT-MBR-AIRF-ROTC (1)
      MOVE OTHER-YEAR     (5) TO MBRSHIP-STATS-V.INT-MBR-ARMY-OCS  (1)
      MOVE OTHER-YEAR     (6) TO MBRSHIP-STATS-V.INT-MBR-AIRF-OTS  (1)
    END-FIND
  END-IF
*
  FOR #I1 1 TO 4
    ADD MBRSHIP-STATS-V.INT-MBR-ARMY      (#I1) TO #INTRO-TOTALS(#I1)
    ADD MBRSHIP-STATS-V.INT-MBR-AIRF      (#I1) TO #INTRO-TOTALS(#I1)
    ADD MBRSHIP-STATS-V.INT-MBR-ARMY-ROTC (#I1) TO #INTRO-TOTALS(#I1)
    ADD MBRSHIP-STATS-V.INT-MBR-AIRF-ROTC (#I1) TO #INTRO-TOTALS(#I1)
    ADD MBRSHIP-STATS-V.INT-MBR-ARMY-OCS  (#I1) TO #INTRO-TOTALS(#I1)
    ADD MBRSHIP-STATS-V.INT-MBR-AIRF-OTS  (#I1) TO #INTRO-TOTALS(#I1)
  END-FOR
*
  FOR #I1 1 TO 4
    ADD MBRSHIP-STATS-V.INT-MBR-ARMY      (#I1) TO #SCN-SCHOOL-TOTS (1)
    ADD MBRSHIP-STATS-V.INT-MBR-AIRF      (#I1) TO #SCN-SCHOOL-TOTS (2)
    ADD MBRSHIP-STATS-V.INT-MBR-ARMY-ROTC (#I1) TO #SCN-SCHOOL-TOTS (3)
    ADD MBRSHIP-STATS-V.INT-MBR-AIRF-ROTC (#I1) TO #SCN-SCHOOL-TOTS (4)
    ADD MBRSHIP-STATS-V.INT-MBR-ARMY-OCS  (#I1) TO #SCN-SCHOOL-TOTS (5)
    ADD MBRSHIP-STATS-V.INT-MBR-AIRF-OTS  (#I1) TO #SCN-SCHOOL-TOTS (6)
  END-FOR
*
  FOR #I1 1 TO 4
    ADD #INTRO-TOTALS (#I1) TO #GRAND-INTRO-TOTAL
  END-FOR
END-IF
*
IF #MBR-STATS NE ' '
*
  FIND NT-V WITH ID-NUMBER = 800114 /* PM ADDED 04/2000 LIFE EXPECT
    FOR #LIFE-OCCUR 1 TO 2
      MOVE LIFE-AVG (#LIFE-OCCUR)     TO  #SCR-AVG (#LIFE-OCCUR)
      MOVE LIFE-MED (#LIFE-OCCUR)     TO  #SCR-MED (#LIFE-OCCUR)
      MOVE LIFE-MAX (#LIFE-OCCUR)     TO  #SCR-MAX (#LIFE-OCCUR)
      MOVE LIFE-MIN (#LIFE-OCCUR)     TO  #SCR-MIN (#LIFE-OCCUR)
      MOVE LIFE-STD-DEV (#LIFE-OCCUR) TO  #SCR-STD-DEV (#LIFE-OCCUR)
    END-FOR
*
    DIVIDE 12 INTO LIFE-STD-DEV (3) GIVING #SCR-STD-DEV-SUR-YEARS
      REMAINDER  #SCR-STD-DEV-SUR-MONTHS
    DIVIDE 12 INTO LIFE-AVG (3) GIVING #SCR-AVG-SUR-YEARS
      REMAINDER  #SCR-AVG-SUR-MONTHS
    DIVIDE 12 INTO LIFE-MED (3) GIVING #SCR-MED-SUR-YEARS
      REMAINDER  #SCR-MED-SUR-MONTHS
    DIVIDE 12 INTO LIFE-MAX (3) GIVING #SCR-MAX-SUR-YEARS
      REMAINDER  #SCR-MAX-SUR-MONTHS
    DIVIDE 12 INTO LIFE-MIN (3) GIVING #SCR-MIN-SUR-YEARS
      REMAINDER  #SCR-MIN-SUR-MONTHS
    MOVE LIFE-TOTAL                   TO  #SCR-TOTAL
    MOVE TOTAL-THIS-MONTH             TO  #SCR-TOTAL-THIS-MONTH
    COMPRESS #MONTH (LAST-UPDATE-MM) LAST-UPDATE-YYYY-A
      INTO #SCR-LAST-UPDATE
  END-FIND
*
  FOR #I1 1 TO 3
    ADD MBRSHIP-STATS-V.ARMY-MBRS  (#I1) TO #SCR-TOTS-BY-ARC (#I1)
    ADD MBRSHIP-STATS-V.AIRF-MBRS  (#I1) TO #SCR-TOTS-BY-ARC (#I1)
    ADD MBRSHIP-STATS-V.NV-CG-MBRS (#I1) TO #SCR-TOTS-BY-ARC (#I1)
    ADD MBRSHIP-STATS-V.MAR-MBRS   (#I1) TO #SCR-TOTS-BY-ARC (#I1)
  END-FOR
*
  ADD MBRSHIP-STATS-V.INS-POL-CODE-COUNTS(1:2) TO #INS-POLS-IN-VLT
  ADD MBRSHIP-STATS-V.INS-POL-CODE-COUNTS(3:4) TO #INS-POLS-NOT-IN-VLT
  ADD MBRSHIP-STATS-V.INACT-DEAD-INS-POL-CODE-COUNTS(1:2)
    TO #INS-POLS-IN-VLT-INACT
  ADD MBRSHIP-STATS-V.INACT-DEAD-INS-POL-CODE-COUNTS(3:4)
    TO #INS-POLS-NOT-IN-VLT-INACT
  ADD MBRSHIP-STATS-V.MBR-BRTH-CERT-COUNTS(1) TO #MBR-CERT-COD-TOTALS(1)
  ADD MBRSHIP-STATS-V.SPS-BRTH-CERT-COUNTS(1) TO #MBR-CERT-COD-TOTALS(1)
  ADD MBRSHIP-STATS-V.MAR-CERT-COUNTS     (1) TO #MBR-CERT-COD-TOTALS(1)
  ADD MBRSHIP-STATS-V.DEP-BRTH-CERT-COUNTS(1) TO #MBR-CERT-COD-TOTALS(1)
  ADD MBRSHIP-STATS-V.MBR-BRTH-CERT-COUNTS(2) TO #MBR-CERT-COD-TOTALS(2)
  ADD MBRSHIP-STATS-V.SPS-BRTH-CERT-COUNTS(2) TO #MBR-CERT-COD-TOTALS(2)
  ADD MBRSHIP-STATS-V.MAR-CERT-COUNTS     (2) TO #MBR-CERT-COD-TOTALS(2)
  ADD MBRSHIP-STATS-V.DEP-BRTH-CERT-COUNTS(2) TO #MBR-CERT-COD-TOTALS(2)
  ADD MBRSHIP-STATS-V.MBR-BRTH-CERT-COUNTS(3) TO #MBR-CERT-COD-TOTALS(3)
  ADD MBRSHIP-STATS-V.SPS-BRTH-CERT-COUNTS(3) TO #MBR-CERT-COD-TOTALS(3)
  ADD MBRSHIP-STATS-V.MAR-CERT-COUNTS     (3) TO #MBR-CERT-COD-TOTALS(3)
  ADD MBRSHIP-STATS-V.DEP-BRTH-CERT-COUNTS(3) TO #MBR-CERT-COD-TOTALS(3)
  ADD MBRSHIP-STATS-V.MBR-BRTH-CERT-COUNTS(4) TO #MBR-CERT-COD-TOTALS(4)
  ADD MBRSHIP-STATS-V.SPS-BRTH-CERT-COUNTS(4) TO #MBR-CERT-COD-TOTALS(4)
  ADD MBRSHIP-STATS-V.MAR-CERT-COUNTS     (4) TO #MBR-CERT-COD-TOTALS(4)
  ADD MBRSHIP-STATS-V.DEP-BRTH-CERT-COUNTS(4) TO #MBR-CERT-COD-TOTALS(4)
  ADD MBRSHIP-STATS-V.INACT-DEAD-CERT-COUNTS (1:4)
    TO #MBR-CERT-COD-TOTALS(1:4)
  ADD MBRSHIP-STATS-V.MBR-BRTH-CERT-COUNTS (2:4)
    TO #MBR-CERT-COD-IN-VLT(1)
  ADD MBRSHIP-STATS-V.SPS-BRTH-CERT-COUNTS (2:4)
    TO #MBR-CERT-COD-IN-VLT(2)
  ADD MBRSHIP-STATS-V.MAR-CERT-COUNTS      (2:4)
    TO #MBR-CERT-COD-IN-VLT(3)
  ADD MBRSHIP-STATS-V.DEP-BRTH-CERT-COUNTS (2:4)
    TO #MBR-CERT-COD-IN-VLT(4)
  ADD MBRSHIP-STATS-V.INACT-DEAD-CERT-COUNTS(2:4)
    TO #MBR-CERT-COD-IN-VLT(5)
  ADD #MBR-CERT-COD-IN-VLT (1:5)    TO #MBR-CERT-COD-IN-VLT(6)
END-IF
*
IF #WID-STATS NE ' '
  COMPUTE #WID-TOTAL = MBRSHIP-STATS-V.WID-WITH-SPS
    + MBRSHIP-STATS-V.WID-WITH-FMR-SPS
    + MBRSHIP-STATS-V.WID-WITH-DEPN
    + MBRSHIP-STATS-V.WID-WITH-NONE
  COMPUTE #WID-NET-TOTAL = #WID-TOTAL - MBRSHIP-STATS-V.WID-DECEASED
  COMPUTE #DECEASED = MBRSHIP-STATS-V.WID-DECEASED * -1
*
  ADD MBRSHIP-STATS-V.INS-POL-CODE-COUNTS(5:6) TO #WID-POLS-IN-VLT
  ADD MBRSHIP-STATS-V.INS-POL-CODE-COUNTS(7:8) TO #WID-POLS-NOT-IN-VLT
  ADD MBRSHIP-STATS-V.INACT-DEAD-INS-POL-CODE-COUNTS(5:6)
    TO #WID-POLS-IN-VLT-DEAD
  ADD MBRSHIP-STATS-V.INACT-DEAD-INS-POL-CODE-COUNTS(7:8)
    TO #WID-POLS-NOT-IN-VLT-DEAD
  ADD MBRSHIP-STATS-V.MBR-BRTH-CERT-COUNTS(5) TO #WID-CERT-COD-TOTALS(1)
  ADD MBRSHIP-STATS-V.SPS-BRTH-CERT-COUNTS(5) TO #WID-CERT-COD-TOTALS(1)
  ADD MBRSHIP-STATS-V.MAR-CERT-COUNTS     (5) TO #WID-CERT-COD-TOTALS(1)
  ADD MBRSHIP-STATS-V.DTH-CERT-COUNTS     (1) TO #WID-CERT-COD-TOTALS(1)
  ADD MBRSHIP-STATS-V.DEP-BRTH-CERT-COUNTS(5) TO #WID-CERT-COD-TOTALS(1)
  ADD MBRSHIP-STATS-V.MBR-BRTH-CERT-COUNTS(6) TO #WID-CERT-COD-TOTALS(2)
  ADD MBRSHIP-STATS-V.SPS-BRTH-CERT-COUNTS(6) TO #WID-CERT-COD-TOTALS(2)
  ADD MBRSHIP-STATS-V.MAR-CERT-COUNTS     (6) TO #WID-CERT-COD-TOTALS(2)
  ADD MBRSHIP-STATS-V.DTH-CERT-COUNTS     (2) TO #WID-CERT-COD-TOTALS(2)
  ADD MBRSHIP-STATS-V.DEP-BRTH-CERT-COUNTS(6) TO #WID-CERT-COD-TOTALS(2)
  ADD MBRSHIP-STATS-V.MBR-BRTH-CERT-COUNTS(7) TO #WID-CERT-COD-TOTALS(3)
  ADD MBRSHIP-STATS-V.SPS-BRTH-CERT-COUNTS(7) TO #WID-CERT-COD-TOTALS(3)
  ADD MBRSHIP-STATS-V.MAR-CERT-COUNTS     (7) TO #WID-CERT-COD-TOTALS(3)
  ADD MBRSHIP-STATS-V.DTH-CERT-COUNTS     (3) TO #WID-CERT-COD-TOTALS(3)
  ADD MBRSHIP-STATS-V.DEP-BRTH-CERT-COUNTS(7) TO #WID-CERT-COD-TOTALS(3)
  ADD MBRSHIP-STATS-V.MBR-BRTH-CERT-COUNTS(8) TO #WID-CERT-COD-TOTALS(4)
  ADD MBRSHIP-STATS-V.SPS-BRTH-CERT-COUNTS(8) TO #WID-CERT-COD-TOTALS(4)
  ADD MBRSHIP-STATS-V.MAR-CERT-COUNTS     (8) TO #WID-CERT-COD-TOTALS(4)
  ADD MBRSHIP-STATS-V.DTH-CERT-COUNTS     (4) TO #WID-CERT-COD-TOTALS(4)
  ADD MBRSHIP-STATS-V.DEP-BRTH-CERT-COUNTS(8) TO #WID-CERT-COD-TOTALS(4)
  ADD MBRSHIP-STATS-V.INACT-DEAD-CERT-COUNTS (5:8)
    TO #WID-CERT-COD-TOTALS(1:4)
  ADD MBRSHIP-STATS-V.MBR-BRTH-CERT-COUNTS(6:8)
    TO #WID-CERT-COD-IN-VLT (1)
  ADD MBRSHIP-STATS-V.SPS-BRTH-CERT-COUNTS(6:8)
    TO #WID-CERT-COD-IN-VLT (2)
  ADD MBRSHIP-STATS-V.MAR-CERT-COUNTS     (6:8)
    TO #WID-CERT-COD-IN-VLT (3)
  ADD MBRSHIP-STATS-V.DTH-CERT-COUNTS(2:4)
    TO #WID-CERT-COD-IN-VLT (4)
  ADD MBRSHIP-STATS-V.DEP-BRTH-CERT-COUNTS(6:8)
    TO #WID-CERT-COD-IN-VLT (5)
  ADD MBRSHIP-STATS-V.INACT-DEAD-CERT-COUNTS(6:8)
    TO #WID-CERT-COD-IN-VLT (6)
  ADD #WID-CERT-COD-IN-VLT (1:6)    TO #WID-CERT-COD-IN-VLT (7)
END-IF
*
IF *DEVICE = 'BATCH'
  PERFORM PRINT-STATS-RPT
ELSE
  IF #CGA-ORIG-COMMAND = 'MS'
    PERFORM SHOW-STATS-SCREENS
    FETCH 'G1000PXX'
  ELSE
    REPEAT
      PERFORM SHOW-MARKETING-SCREENS    /* IF 'MK' WAS ENTERED
    END-REPEAT
  END-IF
END-IF
*
* * * * * * * * *
DEFINE SUBROUTINE SHOW-STATS-SCREENS
* * * * * * * * *
*
FIND (1) NT-V WITH ID-NUMBER = 800101
  MOVE NOTE-DATE (1) TO #YYYYMMDD
  COMPRESS #MM-A #DD-A #YYYY-A INTO #NT-AS-OF-DATE WITH '-'
  COMPUTE ROUNDED #WORK-PCT =
    (NT-ZIP-9-DIGIT / (NT-ZIP-9-DIGIT + NT-ZIP-5-DIGIT)) * 100
  MOVE ROUNDED #WORK-PCT TO #PCT-9-DIGIT
  COMPUTE ROUNDED #WORK-PCT =
    (NT-WID-ZIP-9-DIGIT / (NT-WID-ZIP-9-DIGIT + NT-WID-ZIP-5-DIGIT)) * 100
  MOVE ROUNDED #WORK-PCT TO #WID-PCT-9-DIGIT
END-FIND
*
MOVE 'MS' TO #CGA-SCR-COMMAND
RESET        #CGA-SCR-ID
RESET        #CGA-SCR-SUFFIX
*
IF   (#MTD-MBR-STATS NE ' ')
    AND (#CGA-SCR-COMMAND = 'MS')
  MOVE '*' TO #CGA-SCR-COMMAND
  MOVE 'Press ENTER for more statistics' TO #TEXT
*
  IF #SCR-CURR-YEAR GE 1997
    IF #SCR-CURR-YEAR GE 2005
      MOVE 'AL/GPL.' TO #SO-AL-LBL-1     /* DW1
      MOVE 'AL.....' TO #AL-LBL-1                 /* DW6
      MOVE 'ANNUITY LIFE' TO #SO-AL-LBL-2
      RESET #FSO-LBL-1 #FSO-LBL-2        /* DW1
      move 'GPL' to #fso-lbl-1                         /* DW6
    END-IF
*
    INPUT TEXT #TEXT USING MAP 'G4108MMS'  /* MTD STATS PAGE 1
*
    IF #CGA-SCR-COMMAND NE '*'                      /* RE1 START
      FETCH 'G1000PXX'
    END-IF
*
    INPUT TEXT #TEXT USING MAP 'G4153MMS'           /* RE1 END
*
    IF #CGA-SCR-COMMAND NE '*'
      ESCAPE ROUTINE
    END-IF
*
    INPUT TEXT #TEXT USING MAP 'G4138MMS'  /* GAINS/LOSSES BY PLN(PG 2)    RE1 Only Gains (Pg 3)
*
    IF #CGA-SCR-COMMAND NE '*'
      ESCAPE ROUTINE
    END-IF
*
    INPUT TEXT #TEXT USING MAP 'G4154MMS'  /* LOSSES BY PLN(PG 4)          RE1 START
*
    IF #CGA-SCR-COMMAND NE '*'
      ESCAPE ROUTINE
    END-IF                                                              
*
    INPUT TEXT #TEXT USING MAP 'G4155MMS'  /* GAINS AND LOSSES SUMMARY BY PLN(PG 5)      
*
    IF #CGA-SCR-COMMAND NE '*'
      ESCAPE ROUTINE
    END-IF                                                              /* RE1 END
*
    MOVE 'MS' TO #CGA-SCR-COMMAND
    RESET #TEXT
    INPUT TEXT #TEXT USING MAP 'G4136MMS'  /* MTD STATS PAGE 4 (FBR)
  ELSE
    MOVE 'MS' TO #CGA-SCR-COMMAND
    RESET #TEXT
    INPUT TEXT #TEXT USING MAP 'G4101MMS'  /* OLD MTD STATS
  END-IF
*
  IF #CGA-SCR-COMMAND NE '*'
    ESCAPE ROUTINE
  END-IF
END-IF
*
IF #FILE-STATS NE ' '
  MOVE 'MS' TO #CGA-SCR-COMMAND
  RESET #TEXT
  IF #SCR-CURR-YEAR GE 1997
    IF (#SCR-CURR-YEAR = 1997) AND (#SCR-CURR-MM LT 05)
      INPUT TEXT #TEXT USING MAP 'G4109MMS'  /* MTD STATS PAGE 2
    ELSE
      FETCH 'G4102PMS' #SCR-YYYYMM   /* SHOW FILE STATS
        #SCR-NET-GAIN-MBRS #SCR-NET-GAIN-SG #SCR-NET-GAIN-PLANS
    END-IF
  ELSE
    INPUT TEXT #TEXT USING MAP 'G4103MMS'   /* OLD FILE STATS
  END-IF
  ESCAPE ROUTINE
END-IF
*
IF #MORT-STATS NE ' '
  INPUT TEXT #TEXT USING MAP 'G4102MMS'    /* MORTALITY STATS
  ESCAPE ROUTINE
END-IF
*
IF   (#MBR-STATS NE ' ')
    AND (#CGA-SCR-COMMAND = 'MS')
  MOVE '*' TO #CGA-SCR-COMMAND
  MOVE 'PRESS ENTER FOR 2ND MEMBER STATS SCREEN' TO #TEXT
  INPUT TEXT #TEXT USING MAP 'G4112MMS'  /* MBR STATS PAGE 1
*
  IF #CGA-SCR-COMMAND NE '*'
    ESCAPE ROUTINE
  END-IF
END-IF
*
IF #MBR-STATS NE ' '
  MOVE 'PRESS ENTER FOR 3RD MEMBER STATS SCREEN' TO #TEXT
  INPUT TEXT #TEXT USING MAP 'G4119MMS'  /* MBR STATS PAGE 2 (spc-cod)
  RESET #TEXT
*
  IF #CGA-SCR-COMMAND NE '*'
    ESCAPE ROUTINE
  END-IF
END-IF
*
IF #MBR-STATS NE ' '
  MOVE 'PRESS ENTER FOR 4TH MEMBER STATS SCREEN' TO #TEXT
  INPUT TEXT #TEXT USING MAP 'G4118MMS'  /* MBR STATS PAGE 3 (MIL-SERV)
  RESET #TEXT
*
  IF #CGA-SCR-COMMAND NE '*'
    ESCAPE ROUTINE
  END-IF
END-IF
*
IF #MBR-STATS NE ' '
  MOVE 'PRESS ENTER FOR 5TH MEMBER STATS SCREEN' TO #TEXT
  INPUT TEXT #TEXT USING MAP 'G4114MMS'  /* MBR STATS PAGE 4
  RESET #TEXT
*
  IF #CGA-SCR-COMMAND NE '*'
    ESCAPE ROUTINE
  END-IF
END-IF
*
IF  #MBR-STATS NE ' '
  MOVE 'MS' TO #CGA-SCR-COMMAND
  INPUT TEXT #TEXT USING MAP 'G4123MMS'  /* MBR STATS PAGE 4
  ESCAPE ROUTINE
END-IF
*
IF   (#WID-STATS NE ' ')
  MOVE '*' TO #CGA-SCR-COMMAND
  MOVE 'PRESS ENTER FOR 2ND WIDOW STATS SCREEN' TO #TEXT
  IF  (#SCR-CURR-YEAR GE 2003)
      OR  ((#SCR-CURR-YEAR = 2002) AND (#SCR-CURR-MM GE 07))
    INPUT TEXT #TEXT USING MAP 'G4113MMS'
  ELSE
    INPUT TEXT #TEXT USING MAP 'G4152MMS'
  END-IF
*
  RESET #TEXT
*
  IF #CGA-SCR-COMMAND NE '*'
    ESCAPE ROUTINE
  END-IF
END-IF
*
IF   (#WID-STATS NE ' ')
  MOVE 'MS' TO #CGA-SCR-COMMAND
  INPUT TEXT #TEXT USING MAP 'G4117MMS'  /* WID STATS PAGE 2
  ESCAPE ROUTINE
END-IF
*
IF   (#LOSS-STATS NE ' ')
  MOVE '*' TO #CGA-SCR-COMMAND
  MOVE 'PRESS ENTER FOR 2ND MBR LOSS STAT SCREEN' TO #TEXT
  INPUT TEXT #TEXT USING MAP 'G4110MMS' /* LOSS STATS PG 1
  RESET #TEXT
*
  IF #CGA-SCR-COMMAND NE '*'
    ESCAPE ROUTINE
  END-IF
END-IF
*
IF   (#LOSS-STATS NE ' ')
  MOVE 'MS' TO #CGA-SCR-COMMAND
  INPUT TEXT #TEXT USING MAP 'G4116MMS' /* LOSS STATS PG 2
  ESCAPE ROUTINE
END-IF
*
END-SUBROUTINE /* (1691)
*
* * * * * * * * * *
DEFINE SUBROUTINE SHOW-MARKETING-SCREENS
* * * * * * * * * *
*
MOVE 'MK' TO #CGA-SCR-COMMAND
RESET        #CGA-SCR-ID
RESET        #CGA-SCR-SUFFIX
*
IF #MARKET-STATS NE ' '
  MOVE '*' TO #CGA-SCR-COMMAND
  MOVE 'PRESS ENTER FOR PAGE 2 OF THE MARKETING SCREENS' TO #TEXT
*
  IF #SCR-CURR-YEAR GE 1997
    INPUT TEXT #TEXT USING MAP 'G4121MMK'
  ELSE
    IF #REQ-CUR-MONTH
*     INPUT TEXT #TEXT USING MAP 'G4106MMK'
      INPUT TEXT #TEXT USING MAP 'G4104MMK'
    ELSE
      INPUT TEXT #TEXT USING MAP 'G4104MMK'
    END-IF
  END-IF
*
  IF #CGA-SCR-COMMAND NE '*'
    FETCH 'G1000PXX'
  END-IF
*
  RESET #TEXT
  MOVE 'MK' TO #CGA-SCR-COMMAND
*
  IF #SCR-CURR-YEAR GE 1997
    INPUT TEXT #TEXT USING MAP 'G4122MMK'
  ELSE
    INPUT TEXT #TEXT USING MAP 'G4105MMK'
  END-IF
*
  IF #CGA-SCR-COMMAND NE 'MK'
    FETCH 'G1000PXX'
  END-IF
END-IF
*
IF   (#INTRO-MBR-STATS NE ' ')
    AND (#CGA-SCR-COMMAND = 'MK')
  MOVE '*' TO #CGA-SCR-COMMAND
  MOVE 'PRESS ENTER FOR PAGE 2 OF THE INTRO STATS SCREENS' TO #TEXT
*
  INPUT TEXT #TEXT USING MAP 'G4114MMK'
  IF #CGA-SCR-COMMAND NE '*'
    FETCH 'G1000PXX'
  END-IF
*
  RESET #TEXT
  MOVE 'MK' TO #CGA-SCR-COMMAND
  INPUT TEXT #TEXT USING MAP 'G4115MMK'
END-IF
*
IF   (#MANNING-STATS NE ' ')
    AND (#CGA-SCR-COMMAND = 'MK')
  MOVE '*' TO #CGA-SCR-COMMAND
  MOVE 'PRESS ENTER FOR NCO MANNING STATS' TO #TEXT
*
  INPUT TEXT #TEXT USING MAP 'G4111MMS'   /* OFFIC MANNING
*
  IF #CGA-SCR-COMMAND NE '*'
    FETCH 'G1000PXX'
  END-IF
  RESET #TEXT
  MOVE 'MK' TO #CGA-SCR-COMMAND
*
  INPUT TEXT #TEXT USING MAP 'G411AMMS'   /* NCO MANNING
END-IF
*
IF #CGA-SCR-COMMAND NE 'RF'
  FETCH 'G1000PXX'
END-IF
*
END-SUBROUTINE /* (1878)
* * * * * * * *
DEFINE SUBROUTINE PRINT-STATS-RPT
* * * * * * * *
RESET        #CGA-SCR-COMMAND
RESET        #CGA-SCR-ID
RESET        #CGA-SCR-SUFFIX
* IF #SCR-CURR-YEAR GE 1997                                   /* DW8
*   WRITE (2) NOTITLE USING FORM 'G4108FMS' /* MBRSHIP STATS
* ELSE
*   WRITE (2) NOTITLE USING FORM 'G4101FMS'
* END-IF
WRITE (2) NOTITLE USING FORM 'G4107FMS' /*  + GAINS/LOSSES
WRITE (2) NOTITLE USING FORM 'G4102FMS' /* MORTALITY STATS
WRITE (2) NOTITLE USING FORM 'G4110FMS' /* LOSS BY TYPE + WID DETHS
IF #SCR-CURR-YEAR GE 1997
  WRITE (2) NOTITLE USING FORM 'G4121FMK' /* MARKETING STATS
ELSE
  WRITE (2) NOTITLE USING FORM 'G4104FMK'
END-IF
*
END-SUBROUTINE /* (0582)
*
END
