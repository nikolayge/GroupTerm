* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* G0000SDQ
* Death report worksheet
* BZ 03/15/2011 Created
* bz-Name-C 07/07/2017     Fine Names. Keep all capital  
DEFINE DATA
PARAMETER
* LOCAL                            /*   --db
1 p_CL-ID (A3)
1 p_SCR-ID (N9)
1 p_SFX    (A3)
LOCAL USING NPPA0001      /* Policy Data
LOCAL
1 p_Bene
  2 #PARM-ID-NUMBER (N6)
  2 #SEQ-NBR        (N2)
  2 #PARM-ISN       (P8)
  2 #BEN-COMPLETED  (L)
1 p_GPRS00BD
  2 v_CI  (N8)
  2 v_BD_CN  (N6/100)
  2 REDEFINE v_BD_CN 3 v_BD_CN_A (A6/100)
  2 v_TYPE (A10/100)
  2 v_POL (A16/100,7)
LOCAL USING GPRL0EML
LOCAL USING ADDA0001
LOCAL
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 REDEFINE ID-NUMBER 3 ID-NUMBER_A (A6)
  2 MEMBER-CONTACT-ID
  2 SPOUSE-CONTACT-ID
  2 DATE-OF-MARRIAGE
  2 STATUS-CODE-SP
  2 DATE-DEATH-NOTIFY
  2 DEATH-SERVICE-CON (A2)
  2 C*ACTIVE-SEGMENTS

1 CNT-V VIEW OF A-CONTACTS
   2 CONTACT-ID       (N8)         /* D
   2 ID-NUMBER        (N6)         /* D
   2  FULL-NAME
     3 FIRST-NAME       (A25)
     3 MIDDLE-NAME      (A25)
     3 LAST-NAME        (A25)
     3 SUFFIX           (A10)
   2 GENDER-CD        (A1)         /* --NA
   2 DATE-OF-BIRTH    (N8)
   2 BIRTH-CERT-CODE  (A1)
   2 SSN              (N9)         /* D
   2 DATE-OF-DEATH    (N8)
*
   2 DATE-OF-DEATH-REPORTED
   2 DATE-OF-DEATH-STATUS-CODE
   2 DATE-OF-DEATH-STATUS-DATE
   2 DEATH-NOTIFIED-BY-CONTACT-ID
   2 DEATH-CERT-CODE
   2 BURIAL-LOC
   2 BURIAL-INFO
   2 PLACE-OF-DEATH
   2 CAUSE-OF-DEATH
   2 PLACE-OF-BIRTH
   2 HOMICIDE-SUICIDE-ACCIDENT-IND
   2 DEATH-DOCUMENT-VALIDATION-CODE
*
1 CNTW-V VIEW OF A-CONTACTS
   2 CONTACT-ID       (N8)         /* D
   2  FULL-NAME
     3 FIRST-NAME       (A25)
     3 MIDDLE-NAME      (A25)
     3 LAST-NAME        (A25)
     3 SUFFIX           (A10)
   2 FIRM-ORGANIZATION-NAME
   2 CONTACT-REMARKS             (3)

1 CR-V VIEW OF A-CONTACT-RELATIONSHIPS
   2 CONTACT-1-ID                      (N8.0) /* Descriptor
   2 ROLE-1-CD                         (A1)
   2 CONTACT-2-ID                      (N8.0) /* Descriptor
   2 ROLE-2-CD                         (A1)
*
1 AR-V VIEW OF A-ADDRESS-RELATIONSHIP
  2 CONTACT-ID
  2  ADDRESS-POOL-ID
  2  ADDR-TYPE-CD   /*     Prim/Sec/Bill/Notif
  2  ADDR-LOCATION  /*     Home/Business/etc
*
1 TRM-V VIEW OF A-TERMINALS
  2 CLERK-ID              (A3)     /* F D
  2 INIT-USER
  2 COMMENTS
  2 EMAIL                 (A60)
*
1 FIR-V VIEW OF A-FIRS
  2 ID-NUMBER
  2 DN-REMARKS (3)
*
1 p_GPRS0CNT
   2 p_Name       (A)    DYNAMIC
   2 p_DOB_N      (N8)
   2 p_DOB        (A10)
   2 p_DOD_N      (N8)
   2 p_DOD        (A10)
   2 p_SEX        (A1)
   2 p_SSN        (N9)
*
1 p_PhoneN1M (10)
  2 Phone          (A36)   INIT ALL <' '>
  2 Phone-Type     (A16)   INIT ALL <' '>
  2 Phone-Type-CD  (A1)    INIT ALL <' '>
  2 Phone-Pref     (A1)    INIT ALL <' '>

1 CN(N6)        (EM=ZZZZZZ)
1 f_DIR           (A)       DYNAMIC  INIT <'/usr/SAG/AAFMAA/batch/workfiles/WORK'>
1 f_Name          (A)       DYNAMIC
1 f_ABS_Name      (A80)
1 f_FTP_KSH       (A79)  INIT <"/usr/SAG/AAFMAA/batch/workfiles/PROD/PGM/ftpSAS">
1 f_FTP_DIR_Dev        (A)    DYNAMIC INIT <"/ftp/TEST">                     /*  --db
1 f_FTP_DIR_Prod       (A)    DYNAMIC INIT <"/ftp/DQ_Worksheet">
1 f_FTP_DIR            (A)    DYNAMIC
*
1 #i  (N3)
1 #j  (N3)
1 #k  (N3)
1 #p  (N2)
1 #pp (N2)
1 v_Line  (A73)
1 p_mail          (A70)
1 v_PN            (I1)     INIT  <1>
1 v_RC            (N3)
1 v_shell         (A) DYNAMIC
*
1 v_N8           (N8)
1  REDEFINE  v_N8
  2 v_YYYY       (A4)
  2 v_MM         (A2)
  2 v_DD         (A2)
1 v_A10          (A10)
1 v_A50          (A50)
1 v_A1           (A1)
*
END-DEFINE

* PRINT NOTITLE ///
*         10x  '--- New DQ ---' 3x  'Ver 3.3'  ///
*         10x  'Mod:' p_SFX                    ///
*         10x 'Press Enter to continue' (I)
IF F-IS-DEV(<>)
  f_FTP_DIR := f_FTP_DIR_Dev
ELSE
   f_FTP_DIR := f_FTP_DIR_Prod
END-IF

CN := p_SCR-ID
FIND (1) TRM-V WITH CLERK-ID = p_CL-ID END-FIND
IF p_SFX = 'ALL'
 COMPRESS  'DQ_ALL_' CN '_' *DATV '.rtf' INTO f_Name LEAVE NO SPACE
ELSE
  COMPRESS  'DQ_' CN '_' *DATV '.rtf' INTO f_Name LEAVE NO SPACE
END-IF
COMPRESS  f_DIR '/' f_Name INTO f_ABS_Name LEAVE NO SPACE
  v_RC := PRT_FN_PUT(<v_PN, f_ABS_Name>)
  IF v_RC <> 0
  PRINT *PROGRAM *LINE 'Error: Cannot assign printer. Please contact developers'
  END-IF
  FORMAT (1) LS = 121 PS = 250
  FORMAT (0) LS = 121

FIND (1) ST-V WITH ID-NUMBER = CN
  IF NO RECORD FOUND
    WRITE (1) "No Status Record Found"
    ESCAPE ROUTINE
  END-NOREC
  #PARM-ISN       := *ISN
END-FIND
FIND (1) CNT-V WITH ID-NUMBER = CN
  IF NO RECORD FOUND
    WRITE (1) "No Contacts Record Found"
    ESCAPE ROUTINE
  END-NOREC
END-FIND
*
PERFORM DO-TITLE
*
PERFORM DO-DIV
*
PERFORM DO-FUNERAL
*
PERFORM DO-WIDOW
*
PERFORM DO-Notify
*
PERFORM DO-BENE-DESIGNATION
*
IF p_SFX = 'ALL'
  PERFORM DO-BENE-BY-POLICY
*
  PERFORM DO-FAMILY
END-IF
/*                Process output                                           */
CLOSE PRINTER (1)
*
 PERFORM DO-FTP
*
 PERFORM DO-EMAIL
* ------------------------------------------------------------------------------------
DEFINE DO-TITLE
p_Name :=  EDIT_NAME_FMLS(<CNT-V.FULL-NAME>)
IF p_SFX = 'ALL'
  PRINT (1) NOTITLE 3x  "AAFMAA DEATH CLAIM WORKSHEET" 2x *DAT4U  2x *TIME (AL=8) 2x 'V.3.3' *PROGRAM /
            3x  'COMPREHENSIVE' 21x 'Requestor:' TRM-V.COMMENTS               /
            36x  'Email    :' TRM-V.EMAIL          /
  ELSE
  PRINT (1) NOTITLE 3x  "AAFMAA DEATH CLAIM WORKSHEET" 2x *DAT4U  2x *TIME (AL=8) 2x 'V.3.2' *PROGRAM /
            36x  'Requestor:' TRM-V.COMMENTS               /
            36x  'Email    :' TRM-V.EMAIL          /
END-IF

  WRITE (1) '-----------------------------------------------      Member Information'
  WRITE (1) 5x 'Member Name         :' p_Name (AL=70)
  WRITE (1) 5x 'CN                  :' CN
  WRITE (1) 5x 'SSN                 :' CNT-V.SSN (EM=999-99-9999)
  v_N8 := CNT-V.DATE-OF-BIRTH PERFORM EDIT-DATE
  WRITE (1) 5x 'Date of birth       :' v_A10
END-SUBROUTINE
* ------------------------------------------------------------------------------------
DEFINE SUBROUTINE DO-DIV

  WRITE (1) "-----------------------------------------------      Death Information"
  v_N8 := CNT-V.DATE-OF-DEATH PERFORM EDIT-DATE
  WRITE (1) 5x 'Date of Death       :'  v_A10
    v_N8 := CNT-V.DATE-OF-DEATH-STATUS-DATE PERFORM EDIT-DATE
  WRITE (1) 5x  'Date of Death Entry :' v_A10
  WRITE (1) 5x  'Date of Death Status:' FUNCTION-CODE-1-DESC (<'029', DATE-OF-DEATH-STATUS-CODE>) (AL=50)
  DECIDE ON FIRST VALUE OF DEATH-DOCUMENT-VALIDATION-CODE
    VALUE 'DD1300'  v_A50 :=  'DD1300'
    VALUE 'DC'      v_A50 :=  'Death Certificate'
    VALUE 'FH'      v_A50 :=  'Funeral Home'
    VALUE 'N'       v_A50 :=  'No Information'
    VALUE 'Obit'    v_A50 :=  'Obituary'
    VALUE 'DS2060'  v_A50 :=  'Report Of Death of an American Citizen Abroad'
  NONE v_A50 := ' '
  END-DECIDE
  WRITE (1) 5x 'Death Document Validation     :'  v_A50
  WRITE (1) 5x 'Death Certificate   :' FUNCTION-CODE-1-DESC (<'033', DEATH-CERT-CODE>) (AL=50)
  WRITE (1) 5x 'Place of Death      :'  PLACE-OF-DEATH /
            5x 'Cause of Death      :'  CAUSE-OF-DEATH
  WRITE (1) 5x 'Homicide/Suicide/Accident Ind :' FUNCTION-CODE-1-DESC (<'035', HOMICIDE-SUICIDE-ACCIDENT-IND>) (AL=50)


    v_A1 := DEATH-SERVICE-CON
    PRINT (1) 5x          'Service connected   :' FUNCTION-CODE-1-DESC (<'030', v_A1>)
    PRINT (1) 5x          'Burial location     :' FUNCTION-CODE-1-DESC (<'037', BURIAL-LOC>)
  WRITE (1) 5x  'Burial info         :'  BURIAL-INFO
  FIND FIR-V WITH FIR-V.ID-NUMBER = ST-V.ID-NUMBER
       IF DN-REMARKS (1) <> ' '
           WRITE (1) '-------  Remarks  -------'
           FOR #i = 1 TO 3
            IF DN-REMARKS (#i) <> ' '
               PRINT (1)  DN-REMARKS (#i) (AL=72)
            END-IF
           END-FOR
       END-IF

  END-FIND

END-SUBROUTINE
* ------------------------------------------------------------------------------------
DEFINE DO-FUNERAL

  RESET p_PhoneN1M(*) CNTW-V RESET p_Name
*  PRINT *PROGRAM *LINE ST-V.ID-NUMBER MEMBER-CONTACT-ID                 /*  --DB
  FIND CR-V WITH CONTACT-1-ID = ST-V.MEMBER-CONTACT-ID
            WHERE ROLE-2-CD = 'W'
*     PRINT *PROGRAM *LINE CONTACT-1-ID ROLE-1-CD  CONTACT-2-ID ROLE-2-CD   /*  --DB
     CALLNAT 'PHONEN1M' CONTACT-2-ID p_PhoneN1M(*) v_Rc
     FIND CNTW-V WITH CNTW-V.CONTACT-ID = CONTACT-2-ID END-FIND
  END-FIND
  p_Name :=  EDIT_NAME_FMLS(<CNTW-V.FULL-NAME>)

  WRITE (1) '-----------------------------------------------      Funeral Information'
  WRITE (1) 5x 'Funeral Home Name   :' FIRM-ORGANIZATION-NAME
  WRITE (1) 5x 'Contact             :' p_Name (AL=70)
  COMPRESS Phone-Type (1) Phone (1) INTO v_A50
  WRITE (1) 5x 'Phone               :' v_A50

END-SUBROUTINE
DEFINE DO-Notify
    WRITE (1) /  '-----------------------------------------------      Notification'
  RESET CNTW-V
  FIND (1) CNTW-V WITH CONTACT-ID = DEATH-NOTIFIED-BY-CONTACT-ID
      IF NO RECORD FOUND
           WRITE (1)
             5x 'Date Notified       :'  /
             5x 'Notified by         :'  /
             5x 'Relationship        :'  /
             5x 'Phone               :'

           ESCAPE BOTTOM
       END-NOREC
       V_A10 := ' '
       v_N8 := DATE-DEATH-NOTIFY  PERFORM EDIT-DATE
       WRITE (1)
             5x 'Date Notified       :'  v_A10              /
             5x 'Notified by         :'  CNTW-V.FIRST-NAME
        RESET CR-V
        FIND (1) CR-V WITH CONTACT-1-ID = ST-V.MEMBER-CONTACT-ID AND CONTACT-2-ID = DEATH-NOTIFIED-BY-CONTACT-ID END-FIND
            DECIDE ON FIRST VALUE ROLE-2-CD
              VALUE 'S'  WRITE (1) 5x   'Relationship        : Spouse '
              VALUE 'K'  WRITE (1) 5x   'Relationship        : Child  '
              VALUE 'O'  WRITE (1) 5x   'Relationship        : CAO    '
              NONE       WRITE (1) 5x   'Relationship        : Other  '
            END-DECIDE
       RESET p_PhoneN1M(*)
       CALLNAT 'PHONEN1M' DEATH-NOTIFIED-BY-CONTACT-ID p_PhoneN1M(*) v_Rc
       WRITE (1)
             5x 'Notifier Phone      :'           Phone (1)
  END-FIND
END-SUBROUTINE
* ------------------------------------------------------------------------------------
DEFINE DO-WIDOW
  WRITE (1) "-----------------------------------------------      Spouse Information"
  p_Name := '!  N'                 /* bz-Name
  CALLNAT 'GPRS0CNT' SPOUSE-CONTACT-ID p_GPRS0CNT
  WRITE (1) 5x  'Spouse Name         :' p_Name (AL=70)

  PRINT  (1) 5x  'Status              :' FUNCTION-CODE-1-DESC (<'032', STATUS-CODE-SP>)
  WRITE (1) 5x  'SSN                 :' p_SSN (EM=999-99-9999)
  WRITE (1) 5x  'Date of birth       :' p_DOB
  WRITE (1) 5x  'Date of death       :' p_DOD
  v_N8 := ST-V.DATE-OF-MARRIAGE  PERFORM EDIT-DATE
  WRITE (1) 5x  'Date of marriage    :' v_A10
  RESET p_PhoneN1M(*)
  CALLNAT 'PHONEN1M' SPOUSE-CONTACT-ID p_PhoneN1M(*) v_Rc
  FOR #i = 1 TO 10
     IF Phone(#i) <> ' '
        COMPRESS
        'Phone               :' Phone-Type (#i) Phone (#i) INTO v_Line
        WRITE (1) 5x    v_Line
     END-IF
  END-FOR
  p_mail := ' '
  CALLNAT 'EMAILN01' SPOUSE-CONTACT-ID p_mail
        COMPRESS
        'Preferred E-Mail    :' p_mail INTO v_Line
  WRITE (1) 5x  v_Line
#ADD-CONTACT-ID := SPOUSE-CONTACT-ID
CALLNAT 'ADDN0001'   #PDA-ADDRESS
IF #ADD-POOL-ID <> 0
  FIND AR-V WITH AR-V.ADDRESS-POOL-ID = #ADD-POOL-ID END-FIND

    COMPRESS '('  FUNCTION-CODE-1-DESC (<'002', ADDR-LOCATION>) ')' INTO v_A50 LEAVING NO SPACE

    DECIDE ON FIRST VALUE #ADD-VALID-IND
       VALUE 'F'  COMPRESS v_A50 '  (Failed CASS) ' INTO v_A50
       VALUE 'Y'  COMPRESS v_A50 '  (CASS) '        INTO v_A50
       VALUE 'N'  COMPRESS v_A50 '  (No CASS) '     INTO v_A50
    NONE IGNORE
    END-DECIDE
  WRITE (1) 5x  'Primary Address'  v_A50  /
        10x #ADD-LINE-1 /
        10x #ADD-LINE-2 /
        10x #ADD-LINE-3
  WRITE (1) / 5x 'Advance Payment Authorized (Y/N)  _____'  //
              5x 'Advance Payment Requested (Y/N)   _____'
END-IF
END-SUBROUTINE
* ---------------------------------------------------------------------------------
DEFINE DO-BENE-DESIGNATION
 #j := 0
 FIND CR-V WITH CONTACT-1-ID = ST-V.MEMBER-CONTACT-ID
    v_CI := CONTACT-2-ID
     CALLNAT 'GPRS00BD' p_GPRS00BD
     #p := 0
     EXAMINE v_BD_CN_A(*) FOR ID-NUMBER_A GIVING INDEX #i
     IF #i > 0
        #j := #j + 1
        NEWPAGE (1)
        WRITE (1) "--------------------------------      Beneficiary designation  Page" #j /
        FOR #i = 1 TO 100
          IF v_BD_CN(#i) = ST-V.ID-NUMBER
            FOR #k = 1 TO 7
              IF V_POL (#i,#k) <> ' '
              #p := #p + 1
                 IF  #p = 1
                   WRITE (1) 5x 'Policies:' #p (EM=(Z9')') V_TYPE (#i) V_POL (#i,#k)
                 ELSE
                   WRITE (1) 15x            #p (EM=(Z9')') V_TYPE (#i) V_POL (#i,#k)
                 END-IF
              END-IF
            END-FOR
        END-IF
     END-FOR
       FIND CNTW-V WITH CNTW-V.CONTACT-ID = CONTACT-2-ID END-FIND
       p_Name := '!'
       CALLNAT 'GPRS0CNT' CONTACT-2-ID p_GPRS0CNT
*       PRINT FUNCTION-CODE-1-DESC (<'041', ROLE-2-CD>)
       PRINT (1) / 5x '--' FUNCTION-CODE-1-DESC (<'041', ROLE-2-CD>) '--'
       WRITE (1)   5x  'Name                :' p_Name (AL=70)
       IF FIRM-ORGANIZATION-NAME <> ' '
         WRITE (1) 5x 'Organization         :' FIRM-ORGANIZATION-NAME
       END-IF
       WRITE (1) 5x  'SSN                 :' p_SSN (EM=999-99-9999)
       WRITE (1) 5x  'Date of birth       :' p_DOB
       WRITE (1) 5x  'Date of death       :' p_DOD
       FOR #i = 1 TO 3
       IF CNTW-V.CONTACT-REMARKS(#i) <> ' '
           PRINT (1) 5x CNTW-V.CONTACT-REMARKS(#i)
       END-IF
       END-FOR
       RESET p_PhoneN1M(*)
       CALLNAT 'PHONEN1M' CONTACT-2-ID p_PhoneN1M(*) v_Rc
       FOR #i = 1 TO 10
          IF Phone(#i) <> ' '
            AND ( Phone-Type-CD (#i) = 'H' OR = 'B' OR = 'C' )
             COMPRESS  'Phone               :' Phone-Type (#i) Phone (#i) INTO v_Line
             WRITE (1) 5x    v_Line
          END-IF
       END-FOR
      RESET p_mail
      CALLNAT 'EMAILN01' CONTACT-2-ID p_mail
        COMPRESS       'Preferred E-Mail    :' p_mail INTO v_Line
      WRITE (1) 5x  v_Line
*
     RESET #PDA-ADDRESS
     #ADD-CONTACT-ID := CONTACT-2-ID
     CALLNAT 'ADDN0001'   #PDA-ADDRESS
  IF #ADD-POOL-ID <> 0
    FIND AR-V WITH AR-V.ADDRESS-POOL-ID = #ADD-POOL-ID END-FIND
    COMPRESS '('  FUNCTION-CODE-1-DESC (<'002', ADDR-LOCATION>) ')' INTO v_A50 LEAVING NO SPACE
    DECIDE ON FIRST VALUE #ADD-VALID-IND
       VALUE 'F'  COMPRESS v_A50 '  (Failed CASS) ' INTO v_A50
       VALUE 'Y'  COMPRESS v_A50 '  (CASS) '        INTO v_A50
       VALUE 'N'  COMPRESS v_A50 '  (No CASS) '     INTO v_A50
    NONE IGNORE
    END-DECIDE
    WRITE (1)      5x  'Primary Address' '  ' v_A50
    IF #ADD-LINE-1 <> ' ' WRITE (1)     10x #ADD-LINE-1     END-IF
    IF #ADD-LINE-2 <> ' ' WRITE (1)     10x #ADD-LINE-2     END-IF
    IF #ADD-LINE-3 <> ' ' WRITE (1)     10x #ADD-LINE-3     END-IF
  END-IF
    SKIP (1) 1
    PERFORM DO-FOOTER
  END-IF
 END-FIND

END-SUBROUTINE
* -----------------------------------------------------------------------------------
DEFINE DO-BENE-BY-POLICY
IF C*ACTIVE-SEGMENTS = 0 ESCAPE ROUTINE END-IF
NEWPAGE (1)
WRITE (1) /  "-------------------------      Beneficiary designation  by policies" /
 FOR #j = 1 TO C*ACTIVE-SEGMENTS
   #PARM-ID-NUMBER := ST-V.ID-NUMBER
   #SEQ-NBR        := #j
   #BEN-COMPLETED  := FALSE
   RESET POLICY-INFORMATION
   CALLNAT 'NPPN0006' POLICY-INFORMATION p_Bene
   FOR #i = 1 TO C@BENEFICIARY-LINE
     WRITE (1) BENEFICIARY-LINE(#i)
   END-FOR
 END-FOR
END-SUBROUTINE
* -----------------------------------------------------------------------------------
DEFINE DO-FAMILY
NEWPAGE (1)
WRITE (1) "-----------------------------------------------      Family Information"
 CALLNAT 'G0000SPI' CN v_RC 1X 'X'
END-SUBROUTINE
* -----------------------------------------------------------------------------------
DEFINE DO-FOOTER

WRITE (1) /  'Date Claim Forms Mailed:            _____________'  /
WRITE (1) /  'Date Claim Forms Received:          _____________'  /
WRITE (1) /  'Death Documentation Received:       _____________'  /
WRITE (1) /  'Date ID Verification Received:      _____________'  /
WRITE (1) /  'Date Patriot Act Check:_________   Negative/Positive_____ User:_______' /
WRITE (1) /  'Date Payment Made:     _________   Payment Amount  $__________' /
WRITE (1) /  'Settlement Option Selected (1-4):_ Payment Method Selected:___________'

END-SUBROUTINE

DEFINE SUBROUTINE EDIT-DATE
v_A10 := ' '
IF v_N8 <> 0
  COMPRESS v_MM v_DD v_YYYY TO v_A10 WITH  '/'
END-IF
END-SUBROUTINE
* -----------------------------------------------------------------------------------
DEFINE SUBROUTINE DO-FTP
COMPRESS f_FTP_KSH " " f_ABS_Name " " f_Name " " f_FTP_DIR INTO v_shell
call 'shcmd' v_shell
v_RC := RET('shcmd')
IF v_RC <> 0
   WRITE " Warning: FTP Error. Automated process is not available"
   ESCAPE ROUTINE
END-IF
END-SUBROUTINE
* --------------------------------------------------------------------------------------
DEFINE DO-EMAIL
p_To :=  "bzaslavskiy@aafmaa.com"
IF TRM-V.EMAIL <> " " p_To := TRM-V.EMAIL END-IF
COMPRESS "'" "DEATH_DATA_WORK_SHEET2_for_" CN "'"INTO p_Subj
p_MSG(1) := " To access report click link below"
COMPRESS "\\192.168.50.71" f_FTP_DIR "\" f_Name INTO  p_MSG(3) LEAVING NO SPACE
CALLNAT 'GPRS0EML' p_EMAIL
IF p_RC <> 0 THEN WRITE  "Execution error"
                  IF p_RC = 101  WRITE  "Error: Address 'To' is blank" END-IF
END-IF
END-SUBROUTINE

END
