* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCNCOP1'
*
* DESCRIPTION
*   XML Parser implementationfor file:
*   null
*   using PARSE XML statement and datastructure 'AUCACOX1'
*
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
LOCAL USING AUCACOX1
LOCAL USING PARSER-X
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
*
LOCAL
1 #LEN              (I4)
1 #PARSE-ERROR      (I4) CONST <-7>
1 MEMBER VIEW OF A-STATUS
  2 MEMBER-CONTACT-ID
*
END-DEFINE
*
RESET Contact
ASSIGN #LEN := *LENGTH (#XML_INPUT)
IF #LEN <= 0
  Contact.ErrorCode := #PARSE-ERROR
  Contact.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNCOS1' #XML_OUTPUT Contact
  ESCAPE ROUTINE
END-IF
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
Contact.ErrorCode := #PARSE-ERROR
Contact.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNCOS1' #XML_OUTPUT Contact
END-SUBROUTINE
DEFINE SUBROUTINE CALLBACK
/*                ========
IF XML_PARSER_CONTENT_IS_EMPTY THEN
  IGNORE
ELSE
  #XML_VALUE := *TRIM (#XML_VALUE)
  MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
  PERFORM PARSE-DOCUMENT
END-IF
END-SUBROUTINE
*
IF ContactID <= 0 AND CN > 0
  FIND (1) MEMBER WITH ID-NUMBER = CN
    ContactID := MEMBER-CONTACT-ID
  END-FIND
END-IF
CALLNAT 'AUCNCOG1' ContactID #XML_OUTPUT            /* Contact Get
* ------------------------------------------------- CALL THE PARSER
* PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE #XML_VALUE
*
DEFINE PARSE-DOCUMENT
/*     ==============*
DECIDE ON FIRST #XML_PATH
  VALUE 'Contact//'
    IGNORE
  VALUE 'Contact'
    RESET INITIAL Contact
  VALUE 'Contact/ActionType//'
    IGNORE
  VALUE 'Contact/ActionType'
    IGNORE
  VALUE 'Contact/ActionType/$'
    Contact.ActionType := VAL(#XML_VALUE)
  VALUE 'Contact/ErrorCode//'
    IGNORE
  VALUE 'Contact/ErrorCode'
    IGNORE
  VALUE 'Contact/ErrorCode/$'
    Contact.ErrorCode := VAL(#XML_VALUE)
  VALUE 'Contact/ErrorDescription//'
    IGNORE
  VALUE 'Contact/ErrorDescription'
    IGNORE
  VALUE 'Contact/ErrorDescription/$'
    Contact.ErrorDescription := #XML_VALUE
  VALUE 'Contact/ContactID//'
    IGNORE
  VALUE 'Contact/ContactID'
    IGNORE
  VALUE 'Contact/ContactID/$'
    Contact.ContactID := VAL(#XML_VALUE)
  VALUE 'Contact/CN//'
    IGNORE
  VALUE 'Contact/CN'
    IGNORE
  VALUE 'Contact/CN/$'
    Contact.CN := VAL(#XML_VALUE)
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END
