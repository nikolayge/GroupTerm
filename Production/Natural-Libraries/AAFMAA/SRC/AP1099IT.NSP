* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: AP1099IT produces A 1099 Rpt for 1099-int types (a/d/i/e)
*   AND THE 1099-INT FORMS
*
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE      TAG     REASON                                      *
*                                                                      *
* PAM    01132005  PM1     Added minimum amount for print.             *
*                                                                      *
* PAM    01142005  PM2     Removed year from INT form - not needed for *
*                          2004.                                       *
* PAM    01242005  PM3     Annuitants (Type D or N) should always print*
*                          regardless of taxable amount.               *
*                          2004.                                       *
* PAM    12232005  PM4     Added new minimum Type A amount of $600.    *
* PAM    01262006  PM5     Remove Insured from INT forms.              *
* PAM    12192006  PM6     Added 2nd name line and member num to form  *
* PAM    01242007  PM7     Added new minimum Type D amount of $600.    *
* bz   06/09/2013  Rebranding (Search for AAFMAA)                      *
* JNT  09/04/2013  JT1     Address normalization                       *
* bz-Name-C 07/07/2017     Fine Names. Keep all capital                                    *
************************************************************************
*
DEFINE DATA
LOCAL USING ADDA0001                           /* JT1
LOCAL
* 1 CAL-YEAR  (N4) INIT <2007>                                    /* PM2
1 CAL-YEAR  (N4)                                                  /* PM2
*
1 INT-1099-V VIEW OF A-INT-1099
 2 SSN            (N9)                         /* JT1
 2 REDEFINE SSN 
  3 SSN-A    (A9)
 2 SSN-TAX-ID-IND     (A1)
 2 CONTACT-ID         (N8)                     /* JT1
*  2 ADDR-1    (A25)                           /* JT1 start
*  2 ADDR-1-A  (A25)
*  2 ADDR-2    (A25)
*  2 REDEFINE ADDR-2
*   3 A2   (A1/1:25)
*  2 ZIP-CODE   (N9)
*  2 REDEFINE ZIP-CODE
*   3 ZIP-1    (N5)
*   3 ZIP-2    (N4)                            /* JT1 end
 2 AMOUNT    (P9.2)
 2 GROSS-AMT   (P9.2)
 2 RELATED-ID-NUMBER    (N6)
* 2 NAME         (A25)                         /* JT1 
 2 NAME-2       (A25)                                             /* PM6
 2 INSURED      (A25)
 2 INT-TYPE     (A1)
*
1 #HOLD-ADDR-2 (A25)
1 #PREM-PAID  (P9.2)
1 #ZIP      (N9)
1 REDEFINE #ZIP
  2 #ZIP-1    (N5)
  2 #ZIP-2    (A4)
1 REDEFINE #ZIP
  2 #ZIP-A   (A9)
1 #NUM-PAYEES    (N6)
1 #IN    (I2)
1 #STATE   (A2)
1 REDEFINE #STATE
  2 #ST1    (A1)
  2 #ST2    (A1)
1 #TYPE-RPT  (A7) INIT<'1099R'>
*
1 #1099-INT   (3)
 2 #F-ID      (A11)
 2 #F-GROSS   (A13)
 2 #F-NAME    (A30)
 2 #F-NAME-2  (A30)                                               /* PM6
 2 #F-INSURED (A30)
 2 #F-ADDR1   (A40)
 2 #F-ADDR1-A (A40)
 2 #F-ADDR2   (A40)
 2 #F-MEM-NUM (A6)                                                /* PM6
*
1 #H-ZIP    (A10)
1 #HOLD-ID  (A11)
1 #LAST        (A30)
1 #FIRST       (A30)
1 #SUFFIX      (A30)
1 #EXTRA       (A30)
1 #HOLD-INTER  (A30)
1 #DEL         (A1)  INIT <','>
1 #TOT-AMOUNT  (N9.2)
1 #TOT-GROSS   (N9.2)
1 #TOT-PREM    (N9.2)
1 #I1          (I2)
1 #INT-X       (I2)
1 #MIN-AMT     (P3) INIT <10>                                     /* PM1
1 #MIN-AMT-A   (P3) INIT <600>                                    /* PM4
*
1 #NAME        (A25)                                              /* JT1
1 #ADD-LINE1   (A40)                                              /* JT1
1 #ADD-LINE2   (A40)                                              /* JT1
1 #ADD-LINE3   (A40)                                              /* JT1   
1 #LETTER            (A7) CONST <'!LETTER'>                        /* JT1 /* bz-Name-C
1 Letter             (A) DYNAMIC                                  /* JT1
*
END-DEFINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
** LIMIT 15
FORMAT(1) PS=62
          LS=133
WRITE (1) TITLE LEFT  5T 'AP1099IT'
                     27T 'AAFMAA'
              / 40T'2007 IRS REPORT TYPE -' 64T #TYPE-RPT /
             / 4T 'SSN' 21T 'NAME' 50T 'ADDRESS' 76T 'GROSS'
              92T 'TAX' 108T 'PREM' 120T 'ID' 125T 'TP' /
MOVE '999-99-9999' TO #F-ID (*)
MOVE '99,999,999.99' TO #F-GROSS (*)
MOVE 'XXXX1099INTXXXXX' TO #F-NAME  (*)
MOVE 'XXXXXXXXXXXXXXXX' TO #F-NAME-2(*)                           /* PM6
MOVE 'XXXXXXXXXXXXXXXX' TO #F-ADDR1 (*)
MOVE 'XXXXXXXXXXXXXXXX' TO #F-ADDR2 (*)
MOVE '999999' TO #F-MEM-NUM (*)                                   /* PM6
NEWPAGE (3)
WRITE (3) NOTITLE USING FORM 'AF1099IT'
*
MOVE '1099INT' TO #TYPE-RPT
READ INT-1099-V IN LOGICAL BY YEAR-INT-TYPE-KEY STARTING FROM '2007A'
  IF INT-TYPE NE 'A'
    ESCAPE BOTTOM
  END-IF
*
  IF AMOUNT < #MIN-AMT-A                                          /* PM4
    ESCAPE TOP                                                    /* PM1
  END-IF                                                          /* PM1
*
  PERFORM SETUP-ADDRESS
*
  COMPUTE #TOT-PREM = #TOT-PREM + AMOUNT
*  WRITE (1) 2T #HOLD-ID                  15T NAME 42T ADDR-1     /* JT1
  WRITE (1) 2T #HOLD-ID                  15T #NAME 42T #ADD-LINE1  /* JT1  
          86T AMOUNT(EM=ZZZ,ZZZ,ZZ9.99)
          118T RELATED-ID-NUMBER (EM=999999)  INT-TYPE /
*          15T NAME-2  42T ADDR-1-A /                              /* PM6    /* JT1
          15T NAME-2  42T #ADD-LINE2 /                            /* PM6    /* JT1    
          15T INSURED 42T #ADD-LINE3 / 42T #STATE 48T #ZIP            /* PM6    /* JT1
*
  MOVE EDITED AMOUNT (EM=ZZ,ZZZ,ZZ9.99) TO #F-GROSS (#INT-X)
*
  PERFORM PRINT-1099-INT
END-READ
*
WRITE (1) 30T 'NUMBER OF PAYEES -' 50T #NUM-PAYEES ' type = A'
WRITE (1) 30T 'TOTAL EARNINGS   -' 50T #TOT-PREM
*
RESET #NUM-PAYEES #TOT-PREM
NEWPAGE (1)
*
READ INT-1099-V IN LOGICAL BY YEAR-INT-TYPE-KEY STARTING FROM '2007D'
  IF INT-TYPE NE 'D'
    ESCAPE BOTTOM
  END-IF
*
  IF AMOUNT < #MIN-AMT-A                                          /* PM7
    ESCAPE TOP                                                    /* PM7
  END-IF                                                          /* PM7
*
* IF AMOUNT NE 0                                                  /* PM3
*   ESCAPE TOP                                                    /* PM3
* END-IF                                                          /* PM3
*
  PERFORM SETUP-ADDRESS
*
  COMPUTE #TOT-PREM = #TOT-PREM + AMOUNT
*  WRITE (1) 2T #HOLD-ID                  15T NAME 42T ADDR-1     /* JT1
  WRITE (1) 2T #HOLD-ID                   15T #NAME 42T #ADD-LINE1 /* JT1
          86T AMOUNT(EM=ZZZ,ZZZ,ZZ9.99)
          118T RELATED-ID-NUMBER (EM=999999)  INT-TYPE /
          15T NAME-2  42T #ADD-LINE2 /                             /* JT1
*          15T NAME-2  42T ADDR-1-A /                              /* PM6
           15T INSURED 42T #ADD-LINE3 / 42T #STATE 48T #ZIP        /* PM6  /* JT1
*
  MOVE EDITED AMOUNT (EM=ZZ,ZZZ,ZZ9.99) TO #F-GROSS (#INT-X)
  PERFORM PRINT-1099-INT
END-READ
*
WRITE (1) 30T 'NUMBER OF PAYEES -' 50T #NUM-PAYEES ' type = D'
WRITE (1) 30T 'TOTAL EARNINGS   -' 50T #TOT-PREM
*
RESET #NUM-PAYEES #TOT-PREM
NEWPAGE (1)
*
READ INT-1099-V IN LOGICAL BY YEAR-INT-TYPE-KEY STARTING FROM '2007I'
  IF INT-TYPE NE 'I'
    ESCAPE BOTTOM
  END-IF
*
  IF AMOUNT < #MIN-AMT                                            /* PM1
    ESCAPE TOP                                                    /* PM1
  END-IF                                                          /* PM1
*
  PERFORM SETUP-ADDRESS
*
  COMPUTE #TOT-PREM = #TOT-PREM + AMOUNT
  WRITE (1) 2T #HOLD-ID                  15T #NAME 42T #ADD-LINE1  /* JT1
          86T AMOUNT(EM=ZZZ,ZZZ,ZZ9.99)
          118T RELATED-ID-NUMBER (EM=999999)  INT-TYPE /
          15T NAME-2  42T #ADD-LINE2 /                              /* PM6     /* JT1
          15T INSURED 42T #ADD-LINE3 / 42T #STATE 48T #ZIP            /* PM6   /* JT1
*
  MOVE EDITED AMOUNT (EM=ZZ,ZZZ,ZZ9.99) TO #F-GROSS (#INT-X)
  PERFORM PRINT-1099-INT
END-READ
*
WRITE (1) 30T 'NUMBER OF PAYEES -' 50T #NUM-PAYEES ' type = I'
WRITE (1) 30T 'TOTAL EARNINGS   -' 50T #TOT-PREM
RESET #NUM-PAYEES #TOT-PREM
NEWPAGE (1)
*
READ INT-1099-V IN LOGICAL BY YEAR-INT-TYPE-KEY STARTING FROM '2007E'
 IF INT-TYPE NE 'E'
   ESCAPE BOTTOM
 END-IF
*
  IF AMOUNT < #MIN-AMT                                            /* PM1
    ESCAPE TOP                                                    /* PM1
  END-IF                                                          /* PM1
*
 MOVE #ADD-LINE3 TO #HOLD-ADDR-2                                  /* JT1
 FOR #I1 1 TO 2
  IF (#I1 = 2) AND (GROSS-AMT = 0)
    ESCAPE BOTTOM
  END-IF
*
  MOVE #HOLD-ADDR-2 TO #ADD-LINE3                                  /* JT1
  PERFORM SETUP-ADDRESS
*
  IF #I1 = 2
    MOVE EDITED GROSS-AMT (EM=ZZ,ZZZ,ZZ9.99) TO #F-GROSS (#INT-X)
    COMPUTE #TOT-PREM = #TOT-PREM + GROSS-AMT
    WRITE (1) 2T #HOLD-ID                  15T #NAME 42T #ADD-LINE1 /* JT1
            86T GROSS-AMT (EM=ZZZ,ZZZ,ZZ9.99)
            118T RELATED-ID-NUMBER (EM=999999)  INT-TYPE /
            15T NAME-2  42T #ADD-LINE2 /                            /* PM6    /* JT1
            15T INSURED 42T #ADD-LINE3 / 42T #STATE 48T #ZIP          /* PM6  /* JT1
  ELSE
    MOVE EDITED AMOUNT (EM=ZZ,ZZZ,ZZ9.99) TO #F-GROSS (#INT-X)
    COMPUTE #TOT-PREM = #TOT-PREM + AMOUNT
    WRITE (1) 2T #HOLD-ID                  15T #NAME 42T #ADD-LINE1        /* JT1
            86T AMOUNT (EM=ZZZ,ZZZ,ZZ9.99)
            118T RELATED-ID-NUMBER (EM=999999)  INT-TYPE /
            15T NAME-2  42T #ADD-LINE2 /                           /* PM6  /* JT1
            15T INSURED 42T #ADD-LINE3 / 42T #STATE 48T #ZIP       /* PM6  /* JT1
  END-IF
*
  PERFORM PRINT-1099-INT
 END-FOR
END-READ
*
WRITE (1) 30T 'NUMBER OF PAYEES -' 50T #NUM-PAYEES ' type = E'
WRITE (1) 30T 'TOTAL EARNINGS   -' 50T #TOT-PREM
*
IF #INT-X NE 0
  MOVE 3 TO #INT-X   /* ADDED 4/7/2000 TO GET LAST SHEET
  PERFORM PRINT-1099-INT
END-IF
RESET #NUM-PAYEES
*
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE SETUP-ADDRESS
* * * * * * * * * * * * * * * * * * *
*
ADD 1 TO #INT-X
ADD 1 TO #NUM-PAYEES
*
RESET #PDA-ADDRESS                                               /* JT1 start
  MOVE 'P' TO #ADD-TYPE                                         
  #ADD-CONTACT-ID := INT-1099-V.CONTACT-ID                       
  CALLNAT 'ADDN0001' #PDA-ADDRESS
  Letter := #LETTER
  CALLNAT 'GPRS0CNT' #ADD-CONTACT-ID Letter
  #NAME := Letter                                                /* JT1 end
*
 MOVE #ADD-LINE-1 TO #ADD-LINE1                                  /* JT1
 MOVE #ADD-LINE-2 TO #ADD-LINE2                                  /* JT1
 MOVE #ADD-LINE-3 TO #ADD-LINE3                                  /* JT1  
 MOVE #ADD-STATE TO #STATE                                       /* JT1
*  
* MOVE '  ' TO #STATE                                            /* JT1
*
* FOR #IN 25 TO 1 STEP -1                                        /* JT1 start
*   IF A2(#IN) > ' '
*     MOVE A2(#IN) TO #ST2
*     IF #IN GE 2
*       MOVE A2(#IN - 1) TO #ST1
*       MOVE ' ' TO A2(#IN - 1)
*     END-IF
*     MOVE '  ' TO A2(#IN)
*     ESCAPE BOTTOM
*   END-IF
* END-FOR                                                        /* JT1 end
*
* IF ZIP-2 = 0                                                   /* JT1 start
*   MOVE ZIP-1 TO #ZIP-1
*   MOVE '    ' TO #ZIP-2
*   MOVE #ZIP-A TO #H-ZIP
* ELSE
*   MOVE ZIP-CODE TO #ZIP
*   MOVE EDITED ZIP-CODE (EM=99999-9999) TO #H-ZIP
* END-IF
*
MOVE EDITED #ADD-ZIP-CODE (EM=99999-9999) TO #H-ZIP               /* JT1 end
*
IF SSN-TAX-ID-IND = 'T'
  MOVE EDITED SSN (EM=99-9999999) TO #HOLD-ID                     /* JT1 start
ELSE
  MOVE EDITED SSN (EM=999-99-9999) TO #HOLD-ID
*   MOVE EDITED ID-NUMBER (EM=99-9999999) TO #HOLD-ID
* ELSE
*   MOVE EDITED ID-NUMBER (EM=999-99-9999) TO #HOLD-ID            /* JT1 end
END-IF
*
MOVE #NAME    TO #F-NAME (#INT-X)                               /* JT1 
* MOVE NAME   TO #F-NAME   (#INT-X)                               /* JT1
MOVE NAME-2 TO #F-NAME-2 (#INT-X)                                 /* PM6
*
* IF (INSURED NE ' ') AND (ADDR-1-A NE ' ')                       /* JT1
IF (INSURED NE ' ') AND (#ADD-LINE2 NE ' ')                      /* JT1
  WRITE (1) '*******' #HOLD-ID ' has both insured & addr-1a'
  WRITE (2) '*******' #HOLD-ID ' has both insured & addr-1a'
END-IF
*
RESET #F-ADDR1 (#INT-X) #F-ADDR1-A (#INT-X) #F-ADDR2 (#INT-X)
IF #ADD-LINE-3 NE ' '                                                   /* JT1 start
  COMPRESS #ADD-LINE3 #STATE #H-ZIP INTO #F-ADDR2 (#INT-X)
  MOVE #ADD-LINE2 TO #F-ADDR1-A (#INT-X)
  MOVE #ADD-LINE1   TO #F-ADDR1 (#INT-X)
ELSE
  IF #ADD-LINE2 NE ' '
    COMPRESS #ADD-LINE2 #STATE #H-ZIP INTO #F-ADDR2 (#INT-X)
    MOVE #ADD-LINE1 TO #F-ADDR1 (#INT-X)
 ELSE
    COMPRESS #ADD-LINE1 #STATE #H-ZIP INTO #F-ADDR2 (#INT-X)
  END-IF
END-IF
*
* IF ADDR-2 NE ' '
*   COMPRESS ADDR-2 #STATE #H-ZIP INTO #F-ADDR2 (#INT-X)
*   MOVE ADDR-1-A TO #F-ADDR1-A (#INT-X)
*   MOVE ADDR-1   TO #F-ADDR1 (#INT-X)
* ELSE
*   IF ADDR-1-A NE ' '
*     COMPRESS ADDR-1-A #STATE #H-ZIP INTO #F-ADDR2 (#INT-X)
*     MOVE ADDR-1 TO #F-ADDR1 (#INT-X)
*  ELSE
*     COMPRESS ADDR-1 #STATE #H-ZIP INTO #F-ADDR2 (#INT-X)
*   END-IF
* END-IF                                                          /* JT1 end
*
MOVE INSURED TO #F-INSURED (#INT-X) /* 1995 1099 int form has no room
*                          /* for both insured & extra address
* IF INSURED NE ' '                                               /* PM5
*   IF #F-ADDR1 (#INT-X) = ' '                                    /* PM5
*     MOVE INSURED TO #F-ADDR1 (#INT-X)                           /* PM5
*   ELSE                                                          /* PM5
*     IF #F-ADDR1-A (#INT-X) = ' '                                /* PM5
*       MOVE #F-ADDR1 (#INT-X) TO #F-ADDR1-A (#INT-X)             /* PM5
*       MOVE INSURED TO #F-ADDR1 (#INT-X)                         /* PM5
*     END-IF                                                      /* PM5
*   END-IF                                                        /* PM5
* END-IF                                                          /* PM5
*
IF SSN-TAX-ID-IND = 'T'
  MOVE EDITED SSN (EM=99-9999999) TO #F-ID (#INT-X)               /* JT1 start
ELSE
  MOVE EDITED SSN (EM=999-99-9999) TO #F-ID (#INT-X)
*   MOVE EDITED ID-NUMBER (EM=99-9999999) TO #F-ID (#INT-X)
* ELSE
*   MOVE EDITED ID-NUMBER (EM=999-99-9999) TO #F-ID (#INT-X)      /* JT1 end
END-IF
*
IF RELATED-ID-NUMBER NE 0                                         /* PM6
  MOVE EDITED RELATED-ID-NUMBER (EM=999999) TO #F-MEM-NUM (#INT-X)/* PM6
END-IF                                                            /* PM6
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE PRINT-1099-INT
* * * * * * * * * * * * * * *
*
IF #INT-X GE 3
  NEWPAGE(3)
  WRITE(3) NOTITLE USING FORM 'AF1099IT'
  RESET #INT-X
   #F-ID      (*)
   #F-GROSS   (*)
   #F-NAME    (*)
   #F-NAME-2  (*)                                                 /* PM6
   #F-INSURED (*)
   #F-ADDR1   (*)
   #F-ADDR1-A (*)
   #F-ADDR2   (*)
   #F-MEM-NUM (*)                                                 /* PM6
END-IF
*
END-SUBROUTINE
*
END
