* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
************************************************************************
*                       MODIFICATION LOG                               *
* This runs before ATHPIALA to mark CN that has to issue the loan      *
*                                                               *
*                                                                      *
* USER     DATE        TAG     REASON                                  *
* vxt  08/31/2017      none    Initial creation                        *
* vxt  11/02/2017      vt1     Fixes for production issue              *
* vxt  01/04/2018      vt2     /Ticket 7012/                           *
************************************************************************
*
DEFINE DATA LOCAL
*********
* VIEWS *
*********
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 ssn
  2 alot-amt
  2 name
  2 POLICY-ID        (9)
  2 X-LOAN-INFO      (1:9) /*PE
    3 X-LOAN-AMOUNT  (P5.2)
    3 X-LOAN-DATE    (N8.0)
    3 x-alt-lp-ind   (A1)
    3 x-alt-lp-date  (n8)
    3 mode           (a1)
  2 intro-flag
  2 linked-cn        (30)
  2 redefine linked-cn
    3 linked-cn-a      (a6/30)
*
1 lk-v view of a-status
  2 ID-NUMBER
  2 alot-amt
*
1 NT-V VIEW OF A-NOTES
  2 C*NOTE-TABLE
  2 NOTE-TEXT    (500)
  2 REDEFINE NOTE-TEXT
    3 NOTE-TEXT-OCC  (500)
      4 NOTE-TEXT-60           (A60)
      4 REDEFINE NOTE-TEXT-60
        5 NOTE-TEXT-FILL1        (A14)
        5 NOTE-TEXT-ALOT-PAYS-CN (A6)
        5 NOTE-TEXT-FILL2        (A40)
      4 REDEFINE NOTE-TEXT-60
        5 NOTE-TEXT-FILL3           (A17)
        5 NOTE-TEXT-ALOT-PAID-BY-CN (A6)
        5 NOTE-TEXT-FILL4           (A37)
*
******************
* WORK VARIABLES *
******************
*
1 STARTS-STOPS-REC  (A80)   /* output file
1 REDEFINE STARTS-STOPS-REC
  2 AS-CN           (N6)
  2 AS-SERVICE      (A1)   /* A or F
  2 AS-SSN          (A9)
  2 AS-TYPE         (A1)   /* 1 = stop / 2 = start
  2 AS-REAS-CODE    (A2)
  2 AS-STATUS       (A1)   /* A or R
  2 AS-BLANKET-CODE (A3)
  2 AS-EFF-DATE     (A4)   /* YYMM
  2 AS-TERM-DATE    (A4)   /* YYMM
  2 AS-AMOUNT       (P9.2) /* takes 6 bytes
  2 AS-NAME         (A20)
  2 AS-FILL-1       (A14)
*
1 #I                 (I4)
1 #i1                (i4)
1 #i2                (i4)
1 #cnt               (p7)
1 #cnt1              (p7)
1 #TAB               (A1) CONSTANT  <H'09'>
1 #DATN              (N8)
1 #beg-of-month      (n8)
1 redefine #beg-of-month
  2 #beg-of-month-yyyy (n4)
  2 #beg-of-month-mm   (n2)
  2 #beg-of-month-dd   (n2)
1 #end-OF-MONTH    (N8)
1 redefine #end-of-month
  2 #end-of-month-yyyy (n4)
  2 #end-of-month-mm   (n2)
  2 #end-of-month-dd   (n2)
1 REDEFINE #end-OF-MONTH
  2 #end-of-month-YYYYMMDD    (A8)
1 #out-file          (a23)
1 #jcl-parm          (a10)
1 redefine #jcl-parm
  2 #jcl-parm-mm     (a2)
  2 #fil1            (a1)
  2 #jcl-parm-dd     (a2)
  2 #fil2            (a1)
  2 #jcl-parm-yyyy   (a4)
*
1 #exist             (l)
1 #found-nt          (l)
1 #ssn-a             (a9)
1 #total-amt         (p9.2)
END-DEFINE
*
* DEFINE WORK FILE 1 '/usr/SAG/AAFMAA/batch/workfiles/ATHLB/PARMRUND.TXT'                      TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 2 '/usr/SAG/AAFMAA/batch/workfiles/PERMDA/ATH/AAFMSTSP.TXT'                  TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 3 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/Current_Month_Loans_new1.TXT'  TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 4 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/AAFMSTSP.SORTED.TXT'           TYPE 'ASCII-COMPRESSED'
*
read work file 2 STARTS-STOPS-REC                                                        /* vt1 11/02/2017 \/
end-all
sort by AS-SSN using    AS-CN  AS-SERVICE AS-TYPE AS-REAS-CODE AS-STATUS
    AS-BLANKET-CODE AS-EFF-DATE AS-TERM-DATE AS-AMOUNT AS-NAME AS-FILL-1
  write work file 4 STARTS-STOPS-REC
end-sort
close work file 2
close work file 4                                                                       /* vt1 11/02/2017 /\
*
read work file 1 #jcl-parm
  compress #jcl-parm-yyyy #jcl-parm-mm #jcl-parm-dd into #end-of-month-YYYYMMDD leaving no
end-work
*
#beg-of-month:= #end-of-month
compute #beg-of-month-mm = #end-of-month-mm - 1
if #beg-of-month-mm = 0
  move 12 to #beg-of-month-mm
  #beg-of-month-YYYY := #end-of-month-yyyy - 1
end-if
*
#DATN := *DATN
*   #datn := 20171031                               /* vt1 for testing!!!!!!!!!
write  '=' #beg-of-month   '=' #end-of-month
*
read multi-fetch of 20 st-v logical by SSN starting from 000000001                                         /* vt1 11/02/2017
*
*     if id-number = 195059 or = 195409 or = 199471 or = 193190                   /* temporary fix
*     escape top
*     end-if                                                                      /* temporary fix
  move edited st-v.ssn(EM=999999999) to #ssn-a
  FOR #I 1 TO 9
    if (x-alt-lp-ind(#i) = 'L'  AND (X-LOAN-AMOUNT(#I) eq 0 )
        and ( alot-amt ne 0)                                                       /* vt2 01/04/2018
        and( x-loan-date(#i) ge #beg-of-month and x-loan-date(#i) lt #end-of-month)
        and ( x-alt-lp-date(#i) ge #beg-of-month and x-alt-lp-date(#I)  lt #end-of-month))
*
      write 'Found requested loan for' '=' st-v.id-number '=' #ssn-a
      reset #exist
      r2.
      read work file 4 starts-stops-rec                                              /* vt1 11/02/2017 was 2
        if #ssn-a = as-ssn
          write 'found on work file' '=' #ssn-a '=' as-ssn
          move TRUE to #exist
          escape bottom (r2.)
        end-if
      end-work
*
      if not #EXIST
        move st-v.alot-amt to #total-amt
*
        perform add-amt-of-linked-cn
*
        write '=' st-v.id-number '=' #total-amt
        add 1 to #cnt
        reset starts-stops-rec
        AS-CN           := st-v.id-number
        AS-SERVICE      := 'A'                         /* A or F
        AS-SSN          := #ssn-a
        AS-TYPE         := 1                           /* 1 = stop / 2 = start
        AS-REAS-CODE    := '##'
        AS-STATUS       := 'A'
        AS-AMOUNT       := #total-amt
        AS-NAME         := st-v.name

        write work file 3 STARTS-STOPS-REC
        add 1 to #cnt1

        reset starts-stops-rec
        AS-CN           := st-v.id-number
        AS-SERVICE      := 'A'                         /* A or F
        AS-SSN          := #ssn-a
        AS-TYPE         := 2                           /* 1 = stop / 2 = start
        AS-REAS-CODE    := '##'
        AS-STATUS       := 'A'
        AS-AMOUNT       := #total-amt
        AS-NAME         := st-v.name

        write work file 3 STARTS-STOPS-REC
        add 1 TO #cnt1
      end-if
    end-if
  end-for
*
  at end of data
    write 'Total number of CNs processed'  #cnt /
      'Total number of new records created' #cnt1
  end-enddata
end-read
*** end-find
*
*****************
define subroutine add-amt-of-linked-cn
*****************
*
IF NOT ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G' OR = 'F'
  FOR #I1 1 TO 30
    IF ST-V.LINKED-CN (#I1) = 0
      ESCAPE BOTTOM
    end-if
*
    RESET #FOUND-NT
    FIND (1) LK-V WITH lk-v.id-number  = ST-V.LINKED-CN(#I1)
      FIND (1) NT-V WITH ID-NUMBER = ST-V.ID-NUMBER
        FOR #I2 1 TO C*NOTE-TABLE
          IF (NOTE-TEXT (#I2) = MASK ('*#ALOT:PAYS'))
              AND (NOTE-TEXT-ALOT-PAYS-CN (#I2)
              = ST-V.LINKED-CN-a(#I1))
            MOVE TRUE to #FOUND-NT
            ESCAPE BOTTOM
          END-IF
        END-FOR
      END-FIND
*
      if #found-nt
        add lk-v.alot-amt to #total-amt
      end-if
    end-find
  end-for
end-if
*
end-subroutine
end


