* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: ATHPFTP2  *** PRODUCES DYNAMIC CNTL CARD FOR FTP PROCESS  ***
*   calcs date based on whether before or after noon
*   used for jobs which run around midnight
*******************************************
*                       MODIFICATION LOG
* USER DATE     TAG  REASON
* DRW  06012005 DW1  Add Date Parm processing (~) to use on FTP Names
*******************************************
DEFINE DATA
LOCAL
*
1 #PARM-DATE   (A10)       /* DW1
1 REDEFINE #PARM-DATE
 2 #PARM-MM    (A2)
 2 #SLASH-1    (A1)
 2 #PARM-DD    (A2)
 2 #SLASH-2    (A1)
 2 #PARM-YYYY  (A4)
*
1 #PARM-MMDDYYYY    (A8)   /* DW1
1 REDEFINE #PARM-MMDDYYYY
 2 #PARM-MMDDYYYY-X   (A1/8)
*
1 #DATE        (N8)
1 REDEFINE #DATE
 2 #DATE-YYYY  (N4)
 2 REDEFINE #DATE-YYYY
  3 #DATE-YYYY-X (N1/4)
 2 #DATE-MMDD  (N4)
 2 REDEFINE #DATE-MMDD
  3 #DATE-MM   (N2)
  3 #DATE-DD   (N2)
 2 REDEFINE #DATE-MMDD
  3 #DATE-MMDD-X (N1/4)
*
1 #TIME        (N7)
1 REDEFINE #TIME
 2 #TIME-A     (A7)
1 REDEFINE #TIME
 2 #TIME-HM (N4)
 2 REDEFINE #TIME-HM
  3 #TIME-HM-X (N1/4)
 2 #TIME-ST      (N3)
*
1 #MONTHS       (A24) INIT <'010203040506070809101112'>
1 REDEFINE #MONTHS
 2 #MONS        (A1/24)
*
1 #WORK-RECORD-1  (A80)
1 REDEFINE #WORK-RECORD-1
 2 #FIRST-3-CHARS  (A3)
 2 #REM-CHARS      (A77)
 2 REDEFINE #REM-CHARS
  3 #SEARCH-REM-CHARS (A1/77)
*
1 #WORK-RECORD-2  (A80)
*
1 #DIVIDEND    (N4.2)
1 REDEFINE #DIVIDEND
 2 #DIVIDEND-4   (N4)
 2 #REM          (N2)
*
1 #I1             (I2)      /* STEPS THRU THE JCL LINE BY LINE
1 #I2             (I2)      /* STEPS THRU THE TIME SUBSTITUTIONS
1 #I3             (I2)      /* STEPS THRU THE MMDD SUBSTITUTIONS
1 #I4             (I2)      /* STEPS THRU THE YYYY ARRAY
1 #I5             (I2)      /* STEPS THRU THE PARM-DATE ARRAY
*
END-DEFINE
*
READ WORK 3 ONCE RECORD #PARM-DATE     /* DW1
COMPRESS #PARM-MM #PARM-DD #PARM-YYYY INTO #PARM-MMDDYYYY LEAVING NO
*
MOVE *DATN TO #DATE
MOVE *TIMN TO #TIME
*
IF #TIME LT 1200000 /* between midnight & noon (Normal daily cycle time)
  SUBTRACT 1 FROM #DATE-DD   /* create yesterdays date
*
  IF #DATE-DD LT 1
    SUBTRACT 1 FROM #DATE-MM
*
    IF #DATE-MM LT 1
      ADD 12 TO #DATE-MM
      SUBTRACT 1 FROM #DATE-YYYY
    END-IF
*     create last day of previous month
    IF #DATE-MM = 2
      COMPUTE #DIVIDEND = #DATE-YYYY / 4  /* leap year test
      IF #REM = 0     /* Leap year
        MOVE 29 TO #DATE-DD
      ELSE            /* not a leap year
        MOVE 28 TO #DATE-DD
      END-IF
*
    ELSE
      IF #DATE-MM = 4 OR = 6 OR = 9 OR = 11
        MOVE 30 TO #DATE-DD
      ELSE           /* all other months
        MOVE 31 TO #DATE-DD
      END-IF
    END-IF
  END-IF
END-IF
*
DISPLAY #DATE #DATE-MM #DATE-DD #DATE-YYYY #TIME-A #PARM-MMDDYYYY
*
READ WORK 1 RECORD #WORK-RECORD-1  /* process daily files
  RESET #I2 #I3 #I4 #I5
*
  IF #FIRST-3-CHARS = 'put' OR = 'PUT'
    FOR #I1 1 TO 72    /* destination location
      IF #SEARCH-REM-CHARS (#I1) = '#'  /* Loads time
        ADD 1 TO #I2
        IF #I2 LE 4
          MOVE #TIME-HM-X (#I2) TO #SEARCH-REM-CHARS (#I1)
        END-IF
      ELSE
        IF #SEARCH-REM-CHARS (#I1) = '&'  /* Loads mmdd
          ADD 1 TO #I3
          IF #I3 LE 4
            MOVE #DATE-MMDD-X (#I3) TO #SEARCH-REM-CHARS (#I1)
          END-IF
        ELSE
          IF #SEARCH-REM-CHARS (#I1) = '%'  /* Loads YYYY
            ADD 1 TO #I4
            IF #I4 LE 4
              MOVE #DATE-YYYY-X (#I4) TO #SEARCH-REM-CHARS (#I1)
            END-IF
          ELSE
            IF #SEARCH-REM-CHARS (#I1) = '~'  /* Loads Parm-date  DW1
              ADD 1 TO #I5
              IF #I5 LE 8
                MOVE #PARM-MMDDYYYY-X   (#I5) TO #SEARCH-REM-CHARS (#I1)
              END-IF
            END-IF
          END-IF
        END-IF
      END-IF
    END-FOR
  END-IF
*
  MOVE #WORK-RECORD-1 TO #WORK-RECORD-2
  WRITE WORK 2 #WORK-RECORD-2
  WRITE #WORK-RECORD-1
   (EM=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX)
END-WORK
*
END
