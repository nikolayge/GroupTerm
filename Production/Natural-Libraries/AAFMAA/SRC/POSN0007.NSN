* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* Determines Member connected to every policy
* Member and Linked member
DEFINE DATA
PARAMETER
1 #ISN     (P8)
1 #MSG     (A) DYNAMIC
LOCAL USING POSALOAD
LOCAL USING POSLROLE
LOCAL
1 #GET            (I4) CONST <0>
1 #ADD            (I4) CONST <1>
1 #UPDATE         (I4) CONST <2>
1 #DELETE         (I4) CONST <3>
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID
  2 DATE-OF-DEATH
  2 LINKED-CN        (30)
  2 INTRO-FLAG
  2 PROCESS-IND
  2 NUMBER-MEMBERSHIPS
  2 MILITARY-SERVICE
  2 C*ACTIVE-SEGMENTS
  2 STATUS     (9)
  2 POLICY-ID  (9)
*
1 CNT-V VIEW OF A-CONTACTS
  2 CONTACT-ID
1 i (i2)
* #POLICY-NUMBER  (A16)
1 #RECORD-COUNT   (I4)
1 #MESSAGE-LOG    (I4) CONST <2>
1 #ERROR-LOG      (I4) CONST <3>
END-DEFINE

GET ST-V #ISN
IF ST-V.DATE-OF-DEATH > 0
  COMPRESS 'Customer is dead. CN' ST-V.ID-NUMBER INTO #MSG
  CALLNAT 'POSLOG' #MESSAGE-LOG #MSG
*  ESCAPE ROUTINE
END-IF
FOR i 1 TO C*ACTIVE-SEGMENTS
*  IF STATUS(i) = 'D'  /* ACTIVE
*  CALLNAT 'GPLNMSXX' #POLICY-NUMBER ST-V.ID-NUMBER i
  RESET #POWN
  #POWN.POLICY-NUMBER := ST-V.POLICY-ID (I)
  #POWN.CONTACT-ID    := ST-V.MEMBER-CONTACT-ID
  /* The following code is used to identify non-members
  IF (PROCESS-IND ='C')
      OR (INTRO-FLAG = 'A' OR = 'S' OR ='K' OR = 'G')
      OR NUMBER-MEMBERSHIPS = 0
      OR MILITARY-SERVICE = 'EMP'
/* This will need modification for paticular situations
    IF ST-V.LINKED-CN(1) > 0
      #POWN.REFERENCE-NUMBER := ST-V.LINKED-CN(1)
      FIND CNT-V WITH ID-NUMBER = #POWN.REFERENCE-NUMBER
        #POWN.CONTACT-ID   := CNT-V.CONTACT-ID
      END-FIND
      #POWN.RELATION     := LinkedMember 
    ELSE
      #POWN.REFERENCE-NUMBER := ST-V.ID-NUMBER
      #POWN.RELATION     := MemberRole
    END-IF
  ELSE
    #POWN.REFERENCE-NUMBER := ST-V.ID-NUMBER
    #POWN.RELATION     := MemberRole
  END-IF
  #POWN.REFERENCE-TYPE := 'M'
/*
  #POWN.ADD-DATE := GET-ISSUE-DATE
    (< #POWN.POLICY-NUMBER, ST-V.ID-NUMBER >)
  MOVE 'LOD' TO #POWN.LAST-UPD-USER #POWN.ADD-USER
  #POWN.LAST-UPD-DATE := #POWN.ADD-DATE
/*
  CALLNAT 'POSN0001' #ADD #MSG #POWN
*  END-IF
END-FOR
*
ON ERROR
  COMPRESS 'ON ERROR. STATUS CN=' ST-V.ID-NUMBER INTO #MSG
  CALLNAT 'POSLOG' #ERROR-LOG #MSG
  ESCAPE ROUTINE
END-ERROR
END
