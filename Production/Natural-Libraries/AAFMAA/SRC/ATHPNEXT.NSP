* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPNEXT - V/A FILE PROCESSING
*
************************************************************************
*     MODIFICATION LOG
* USER DATE       TAG  REASON
* RSE  09/30/2009 RE1  Change 600K logic for Unification
************************************************************************
DEFINE DATA
LOCAL
*
1 VA-V   VIEW OF A-VA-HISTORY
  2 RECORD-KEY              (N15)
  2 REDEFINE RECORD-KEY
   3 ID-NO-A             (A6)
   3 REDEFINE ID-NO-A
    4 ID-NO              (N6)
   3 ISS-DT              (N8)
   3 SPL-IND             (N1)
  2 YEAR-MONTH-M           (13)
  2 DEATH-BENEFIT-M        (13)
*
1 ST-V VIEW OF A-STATUS
 2 ID-NUMBER
 2 INTRO-FLAG
 2 STATUS          (9)
 2 ISSUE-AGE       (9)
 2 REDEFINE ISSUE-AGE
  3 ISSUE-AGE-N  (N2/9)
 2 PLAN            (9)
 2 REDEFINE PLAN
  3 PLAN-OCC      (9)
   4 PLAN-A1   (A1)
   4 PLAN-N2   (N2)
 2 ISSUE-DATE      (9)
 2 SPLIT-IND       (9)
 2 MONTH-ALLOC-AMT (9)
 2 CONV-DURATION   (9)
 2 LAST-DURATION   (9)
*
1 #YYYYMMDD    (N8)
1 REDEFINE #YYYYMMDD
 2 #YYYYMM      (N6)
 2 REDEFINE #YYYYMM
  3 #YYYY    (N4)
  3 #MM      (N2)
 2 #DD       (N2)
*
1 #VA-YYYY-MM   (N7)
1 REDEFINE #VA-YYYY-MM
 2 #VA-FILL  (N1)
 2 #VA-YYYY  (N4)
 2 #VA-MM    (N2)
1 #HOLD-ID-NUMBER (N6)
1 #COUNTERS
  2 #RECS-READ        (P5)
  2 #RECS-SELECTED    (P5)
  2 #CNT              (P5)
  2 #I1               (I2)
  2 #I2               (I2)
  2 #I3               (I2)
*
 1 #VA-END-RECORD-KEY     (N15)
 1 REDEFINE #VA-END-RECORD-KEY
  2 #VA-EN-ID-NUMBER     (N6)
  2 #VA-EN-ISS-DATE      (N8)
  2 #VA-EN-SPLIT-IND     (N1)
*
 1 #VA-START-RECORD-KEY     (N15)
 1 REDEFINE #VA-START-RECORD-KEY
  2 #VA-ST-ID-NUMBER     (N6)
  2 #VA-ST-ISS-DATE      (N8)
  2 #VA-ST-SPLIT-IND     (N1)
*
1 #START-KEY    (N15) INIT <001000000000000>
1 #CNT-2        (N5)
1 #CNT-3        (N5)
*
1 #NXT-BY-PLAN   (P5/4)
1 #NXT-POLS      (P5)
1 #NEW-POLS      (P5)
1 #OLD-POLS      (P5)
1 #NXT-MBRS      (P5)
1 #NXT-MBRS-INS-ONLY  (P5)
1 #NXT-MBRS-W-DUES (P5)
1 #OLD    (L)
1 #NEW    (L)
1 #NXT    (L)
1 #NUM-DB-ALREADY-GROWING   (P5/5)
1 #NUM-DB-NOT-GROWING   (P5/5)
1 #NUM-DB-NOW-GROWING   (P5/5)
*
1 #IYR     (I2)
1 #IAGE    (I2)
1 #MBR-CNTS   (17) /* old/1986/1987/etc
 2 #CNT-BY-AGE  (P5/100) /* using iss-age
*
END-DEFINE
*
FORMAT LS=133 PS=76
WRITE  TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
           'PGM MESSAGES'
                        5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
FORMAT (2) LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
                'OLD with DB growing'
                        5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
* FORMAT (3) LS=133 PS=76
* WRITE  (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
*                         'NXT TERMINATIONS'
*                         5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
READ ST-V BY MEMBER-KEY FROM '001900'
*  IF ST-V.ID-NUMBER GE 600000               RE1
  IF AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)   /* RE1
    ESCAPE TOP
*    ESCAPE BOTTOM
  END-IF
*
* ADD 1 TO #CNT
* IF #CNT GT 100
*   ESCAPE BOTTOM
* END-IF
*
  IF   (NOT ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G')
   AND (NOT ST-V.PLAN (1) = 'SO' OR = 'FSO')
    RESET #IYR
    FOR #I1 9 TO 1 STEP -1
      IF STATUS (#I1) NE 'D'
        ESCAPE TOP
      END-IF
*
      IF ISSUE-DATE (#I1) LT 19860701
        MOVE 1 TO #IYR
      ELSE
        MOVE ISSUE-DATE (#I1) TO #YYYYMMDD
        COMPUTE #IYR = #YYYY - 1985
      END-IF
      ESCAPE BOTTOM
    END-FOR
*
    IF #IYR NE 0
      IF #IYR = 1
        COMPUTE #IAGE = ISSUE-AGE-N (#I1) + LAST-DURATION (#I1)
      ELSE
        IF ISSUE-AGE-N (#I1) = 0
          MOVE 1 TO #IAGE
        ELSE
          MOVE ISSUE-AGE-N (#I1) TO #IAGE
        END-IF
      END-IF
*
      ADD 1 TO #CNT-BY-AGE (#IYR, #IAGE)
    END-IF
  END-IF
*
  RESET #OLD #NEW #NXT
  FOR #I1 1 TO 9
    IF STATUS (#I1) NE 'D'
      ESCAPE TOP
      END-IF
*
    IF ISSUE-DATE (#I1) LT 19860701    /* had been using 19860101
      ADD 1 TO #OLD-POLS
      MOVE TRUE TO #OLD
      PERFORM FIND-VA
    ELSE
      IF  (ISSUE-DATE (#I1) LT 19970101)
       OR (MONTH-ALLOC-AMT (#I1) = 999.99)
        ADD 1 TO #NEW-POLS
        MOVE TRUE TO #NEW
      ELSE
        ADD 1 TO #NXT-POLS
        MOVE TRUE TO #NXT
*
        IF PLAN (#I1) = 'LT'
          ADD 1 TO #NXT-BY-PLAN (1)    /* LT
        ELSE
          IF PLAN (#I1) = 'RT'
            ADD 1 TO #NXT-BY-PLAN (2)   /* RT
          ELSE
            IF (PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z')
              ADD 1 TO #NXT-BY-PLAN (3)   /* LTII
            ELSE
              ADD 1 TO #NXT-BY-PLAN (4)   /* WL
            END-IF
          END-IF
        END-IF
      END-IF
    END-IF
  END-FOR
*
  IF #NXT AND (NOT #NEW) AND (NOT #OLD)
    ADD 1 TO #NXT-MBRS
*
    IF INTRO-FLAG = 'O' OR = 'P' OR = 'Q'
      ADD 1 TO #NXT-MBRS-INS-ONLY
*     WRITE ST-V.ID-NUMBER 'ins-only'
    ELSE
      ADD 1 TO #NXT-MBRS-W-DUES
    END-IF
  END-IF
END-READ
*
WRITE '       plan       LT      RT      LTI    WL'
WRITE 'nxt-by-plan ' #NXT-BY-PLAN (*)
WRITE 'nxt-pols         ' #NXT-POLS
WRITE 'new-pols         ' #NEW-POLS
WRITE 'old-pols         ' #OLD-POLS
WRITE 'nxt-mbrs         ' #NXT-MBRS
WRITE 'nxt-mbrs-ins-only' #NXT-MBRS-INS-ONLY
WRITE 'NXT-MBRS-W-DUES  ' #NXT-MBRS-W-DUES
WRITE 'xxxxxxxxxxxxxxxxxxx  jan      feb     mar     apr     may'
WRITE 'num-already-growing' #NUM-DB-ALREADY-GROWING (*)
WRITE 'num-not-growing    ' #NUM-DB-NOT-GROWING (*)
WRITE 'num-db-growing     ' #NUM-DB-NOW-GROWING (*)
*
WRITE '       OLD  1986  1987  1988  1989  1990  1991  1992  1993'
      '  1994  1995  1996  1997  1998  1999  2000  2001'
FOR #I1 1 TO 100
  DISPLAY #I1 (EM=ZZ9)
  'OLD'  #CNT-BY-AGE (1,  #I1) (EM=Z,ZZ9)
  '1986' #CNT-BY-AGE (2,  #I1) (EM=Z,ZZ9)
  '1987' #CNT-BY-AGE (3,  #I1) (EM=Z,ZZ9)
  '1988' #CNT-BY-AGE (4,  #I1) (EM=Z,ZZ9)
  '1989' #CNT-BY-AGE (5,  #I1) (EM=Z,ZZ9)
  '1990' #CNT-BY-AGE (6,  #I1) (EM=Z,ZZ9)
  '1991' #CNT-BY-AGE (7,  #I1) (EM=Z,ZZ9)
  '1992' #CNT-BY-AGE (8,  #I1) (EM=Z,ZZ9)
  '1993' #CNT-BY-AGE (9,  #I1) (EM=Z,ZZ9)
  '1994' #CNT-BY-AGE (10, #I1) (EM=Z,ZZ9)
  '1995' #CNT-BY-AGE (11, #I1) (EM=Z,ZZ9)
  '1996' #CNT-BY-AGE (12, #I1) (EM=Z,ZZ9)
  '1997' #CNT-BY-AGE (13, #I1) (EM=Z,ZZ9)
  '1998' #CNT-BY-AGE (14, #I1) (EM=Z,ZZ9)
  '1999' #CNT-BY-AGE (15, #I1) (EM=Z,ZZ9)
  '2000' #CNT-BY-AGE (16, #I1) (EM=Z,ZZ9)
  '2001' #CNT-BY-AGE (17, #I1) (EM=Z,ZZ9)
END-FOR
*
* * * * * * * * * * * * *
DEFINE SUBROUTINE FIND-VA
* * * * * * * * * * * * *
*
MOVE ST-V.ID-NUMBER        TO #VA-ST-ID-NUMBER
MOVE ST-V.ISSUE-DATE (#I1) TO #VA-ST-ISS-DATE
MOVE ST-V.SPLIT-IND  (#I1) TO #VA-ST-SPLIT-IND
MOVE #VA-START-RECORD-KEY TO #VA-END-RECORD-KEY
READ VA-V BY RECORD-KEY FROM #VA-START-RECORD-KEY
  IF  (VA-V.ID-NO   NE ST-V.ID-NUMBER)
   OR (VA-V.ISS-DT  NE ST-V.ISSUE-DATE (#I1))
   OR (VA-V.SPL-IND NE ST-V.SPLIT-IND (#I1))
    WRITE 'V/A not found -ST/VA'
       ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1)  ST-V.SPLIT-IND (#I1)
       '---' VA-V.ID-NO VA-V.ISS-DT VA-V.SPL-IND
    ESCAPE ROUTINE
  END-IF
*
* WRITE ST-V.ID-NUMBER
  MOVE 200010 TO #YYYYMM
  FOR #I3 1 TO 5    /* jan thru may
    ADD 1 TO #MM
    IF #MM GT 12
        SUBTRACT 12 FROM #MM
      ADD 1 TO #YYYY
    END-IF
*
    FOR #I2 1 TO 11
      IF YEAR-MONTH-M (#I2) = #YYYYMM  /* 2-MONTHS-AGO
        IF DEATH-BENEFIT-M (#I2) = DEATH-BENEFIT-M (#I2 + 1)
          ADD 1 TO #NUM-DB-NOT-GROWING (#I3)
*
          IF DEATH-BENEFIT-M (#I2 + 2) GT DEATH-BENEFIT-M (#I2)
            ADD 1 TO #NUM-DB-NOW-GROWING (#I3)
*
*           DISPLAY (2) #I3 ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1)
*                     DEATH-BENEFIT-M (#I2) DEATH-BENEFIT-M (#I2 + 2)
          END-IF
        ELSE
          ADD 1 TO #NUM-DB-ALREADY-GROWING (#I3)
        END-IF
        ESCAPE BOTTOM
      END-IF
    END-FOR
  END-FOR
  ESCAPE BOTTOM
END-READ
*
END-SUBROUTINE
*
END
