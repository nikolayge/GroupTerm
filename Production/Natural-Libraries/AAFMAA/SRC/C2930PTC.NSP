* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
************************************************************************
* PROGRAM-ID: C2930PTC
*         TI: TAX BENEFICIARY 1099-R
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* PAM  08302005 PM1  ADJUSTED PROGRAM TO ACCOUNT FOR MAP FREE RULE     *
* PAM  10042005 PM2  Added type 'L' - Loans treated as distributions   *
* PAM  01172006 PM3  Added ability to enter multiple 1099's            *
* PAM  02092006 PM4  Do not allow multiple entiries for same type      *
* NGG  20121002 NG1  CN Expansion Project -                            *
*                    New beneficiary database file to expand Member IDs up to 500000
* NGG  20130829 NG2  Address normalization                             *
* vxt  20140225 vt1  Fix the 3144 error when adding new record.        *
* vxt  20140410 vt2  /Ticket 2655/                                     *
* vxt  20140528 vt3  /Ticket 2758/                                     *
* vxt  20161019 vt4  /Ticket 4335/                                     *
* bz-Name-C 07/07/2017     Fine Names. Keep all capital 
************************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX    /* WORK FIELDS FOR GONERCXX - ERROR ROUTINE
LOCAL USING C2930LTC
LOCAL USING ADDA0001    /* NG2
LOCAL
1 #SCR-MSG         (A60)
1 REDEFINE #SCR-MSG
  2 #SCR-MSG-1     (A35)
  2 #SCR-MSG-2     (A25)
1 #PREM-TITLE      (A10)
1 #PREM-PAID       (N7.2)
1 #SCR-CV          (C)
1 #SCR-DEL-CV      (C)
1 #SCR-R-U-SURE-CV (C)
*
1 #SCR-DEL-MSG      (A29)
1 #SCR-R-U-SURE-MSG (A29)
1 #SCR-DEL-COD      (A1)
1 #SCR-R-U-SURE-COD (A1)
*
1 #SCN-INT-TYPE     (A1)
1 #SCR-ZIP-9             (N9)
1 REDEFINE #SCR-ZIP-9
  2 #SCR-ZIP-1             (N5)
  2 #SCR-ZIP-2             (N4)
*
1 #INT-1099-KEY     (A13)
1 REDEFINE #INT-1099-KEY
  2 #INT-1099-ID-NUMBER   (N9)
  2 #INT-1099-YYYY        (N4)
  2 REDEFINE #INT-1099-YYYY
    3 #INT-1099-CENT        (N2)
    3 #INT-1099-YY          (A2)
*
1 #YEAR-INT-TYPE-ID-KEY   (A14)                                   /* PM3
1 REDEFINE #YEAR-INT-TYPE-ID-KEY                                  /* PM4
  2 #YEAR-INT-YEAR            (N4)                                /* PM4
  2 #YEAR-INT-TYPE            (A1)                                /* PM4
  2 #YEAR-INT-ID-NUMBER       (N9)                                /* PM4
*
1 #year-int-type-pol-num-key  (a21)                     /* vt4 \/
1 redefine #year-int-type-pol-num-key
  2 #year-int-year-tc            (n4)
  2 #year-int-type-tc            (a1)
  2 #year-int-pol-num           (a16)                   /* vt4 /\
*
1 I-V-1099 VIEW OF A-INT-1099                                     /* PM4
  2 YEAR-INT-TYPE-ID-KEY                                          /* PM4
  2 policy-number                                      /* vt4
*
*
1 #TODAY-YYYYMMDD        (N8)
1 REDEFINE #TODAY-YYYYMMDD
  2 #TODAY-YYYY           (N4)
  2 #TODAY-MM             (N2)
  2 #TODAY-DD             (N2)
*
1 #REC-NOT-FOUND          (L)
1 #ID-NOT-FOUND           (L)
1 #EDIT-FLAG              (A1)
1 #ISN                    (P8)
1 #HOLD-INT               (A1)                                    /* PM4
*
1 WIDOW-SSN-KEY     (A10)
1 #RELATED-ID-NUMBER (N6)
1 #NAME              (A25)
1 #ADDR-1            (A25)
1 #ADDR-2            (A25)
1 #ZIP-CODE          (N9)
1 #LETTER            (A7) CONST <'!LETTER'>  /* bz-Name-C
1 Letter             (A) DYNAMIC
1 #owner-cn-a        (a6)             /* vt4
1 redefine #owner-cn-a                /* vt4
  2 #owner-cn          (n6)                     /* vt4 \/

1 stat view of a-status
  2 id-number
  2 member-contact-id
  2 ssn                                         /* vt4 /\
*
1 #DEATH-BENEFIT              (A12)
1 #POLICY-TYPE                (A6)
1 #FACE-AMOUNT                (A10)
1 #CLAIMANT-CI                (N8)
1 #DEAD-INSURED-CN            (N6)
1 #SEGMENT                    (I4)
1 #insured-cn                 (N6)                        /* VT4
1 #INSURED-NAME               (A60)                       /* VT4
1 #OWNER-NAME                 (A60)                       /* VT4
1 #POLICY-NUMBER              (A16)                       /* VT4
1 #TAX-AMOUNT                 (N7.2)                      /* VT4
1 #policy-number-a            (a) dynamic                 /* vt4
1 #insured-cn-a               (a) dynamic                 /* vt4
1 #owner-cn-a-d               (a) dynamic                 /* vt4
1 #owner-ssn                  (a11)                       /* vt4
1 redefine #owner-ssn                                     /* vt4  \/
  2 #owner-ssn-3                (a3)
  2 #fill1                      (a1)
  2 #owner-ssn-2                (a2)
  2 #fill2                      (a1)
  2 #owner-ssn-4                (a4)                      /* vt4  /\
1 #owner-address-line-1       (a75)                       /* vt4
1 #owner-address-line-2       (a75)                       /* vt4
1 #owner-address-line-3       (a75)                       /* vt4
1 #pol-exist                  (l)                         /* vt4
1 #i                          (i2)                        /* vt4
1 #owner-ssn-a   (a9)                                     /* vt4  \/
1 redefine #owner-ssn-a
  2 #owner-ssn-n (n9)
1 #insured-contact-id   (n8)                               /* vt4 /\
END-DEFINE
*
set key on
* * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE TRY-MEMBER
* * * * * * * * * * * * * * * * * * * * * * * *
*
MOVE #CGA-SCR-ID TO #CGA-ID
FIND (1) A-STAT WITH MEMBER-KEY = #CGA-ID-G
  IF NO RECORDS FOUND
    MOVE TRUE TO #ID-NOT-FOUND
    ESCAPE ROUTINE
  END-NOREC
*
  MOVE A-STAT.SSN           TO INT-1099-V.SSN
  ASSIGN #RELATED-ID-NUMBER  = A-STAT.ID-NUMBER
  ASSIGN #NAME               = A-STAT.NAME
END-FIND
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE TRY-MEMBER-by-owner-ssn                                /* vt4 \/
* * * * * * * * * * * * * * * * * * * * * * * *
*
FIND (1) A-STAT WITH ssn = #CGA-SCR-ID

  IF NO RECORDS FOUND
    MOVE TRUE TO #ID-NOT-FOUND
    ESCAPE ROUTINE
  END-NOREC
*
  MOVE A-STAT.SSN           TO INT-1099-V.owner-SSN
*  ASSIGN #RELATED-ID-NUMBER  = A-STAT.ID-NUMBER
*  ASSIGN #NAME               = A-STAT.NAME
END-FIND
*
END-SUBROUTINE
*                                                                         /* vt4 /\

*
* * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE TRY-MEMBER-by-ssn                                       /* vt3 \/
* * * * * * * * * * * * * * * * * * * * * * * *
*
FIND   A-STAT WITH ssn = #CGA-SCR-ID                        /* vt WAS FIND(1)
  IF NO RECORDS FOUND
    MOVE TRUE TO #ID-NOT-FOUND
    ESCAPE ROUTINE
  END-NOREC
*
  MOVE A-STAT.SSN           TO INT-1099-V.SSN
  ASSIGN #RELATED-ID-NUMBER  = A-STAT.ID-NUMBER
  ASSIGN #NAME               = A-STAT.NAME
END-FIND
*
END-SUBROUTINE
*                                                                         /* vt3 /\
* * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE TRY-WIDOW
* * * * * * * * * * * * * * * * * * * * * * * *
*
MOVE EDITED #CGA-SCR-ID(EM=999999999) TO WIDOW-SSN-KEY
FIND (1) A-STAT WITH SSN-KEY-SP = WIDOW-SSN-KEY
  IF NO RECORDS FOUND
    MOVE TRUE TO #ID-NOT-FOUND
    ESCAPE ROUTINE
  END-NOREC
*
  MOVE A-STAT.SSN TO INT-1099-V.SSN
  ASSIGN #RELATED-ID-NUMBER = A-STAT.ID-NUMBER
  ASSIGN #NAME   = A-STAT.NAME
END-FIND
*
END-SUBROUTINE
*
INCLUDE GONERCXX       /* NATURAL ERROR ROUTINE
INCLUDE C1099CXX       /* PM4
*
MOVE *DATN       TO #TODAY-YYYYMMDD
MOVE (AD=P) TO #SCR-CV
MOVE (AD=P) TO #SCR-DEL-CV
MOVE (AD=P) TO #SCR-R-U-SURE-CV
*
IF #CGA-SCR-SUFFIX = 'W'
  PERFORM TRY-WIDOW
END-IF
*
* IF #CGA-SCR-ID < 200000         NG1
IF #CGA-SCR-ID < 500000            /* NG1
    and #cga-scr-id gt 0             /* vt3 11/11/2016
  PERFORM TRY-MEMBER
*  end-if
else                                                /* vt4
*
  if #cga-scr-id = mask(NNNNNNNNN)                  /* vt4 \/
    if ( #cga-scr-command = 'TC' )
      if ( #cga-scr-id eq 0)
        INPUT TEXT 'Invalid search. SSN cannot be 0'
          MARK *#CGA-SCR-ID USING MAP 'C2930MTC'
        FETCH 'G1000PXX'
      else
        perform try-member-by-owner-ssn
      end-if
    else                                             /* vt4 /\
      perform try-member-by-ssn
    end-if
  end-if
end-if                                              /* vt4 /\
*
IF #CGA-SCR-ID NE MASK (NNNNNNNNN) OR #CGA-SCR-ID = 0
  INPUT TEXT 'INVALID RECIPIENT"S ID NUMBER'
    MARK *#CGA-SCR-ID USING MAP 'C2930MTC'
  FETCH 'G1000PXX'
END-IF
*
IF   (#CGA-SCR-SUFFIX NE ' ')
    AND (#CGA-SCR-SUFFIX NE MASK (NN) AND (#CGA-SCR-SUFFIX NE 'W'))
  INPUT TEXT 'INVALID YEAR - MUST BE YY'
    MARK *#CGA-SCR-SUFFIX USING MAP 'C2930MTC'
  FETCH 'G1000PXX'
END-IF
*
if #cga-scr-command= 'TC'                                         /* vt4  \/
    and #cga-scr-id gt 500000                                     /* vt4  was mask(NNNNNNNNN)
  move int-1099-v.owner-ssn to #int-1099-id-number
else                                                              /* vt4  /\
  MOVE INT-1099-V.SSN TO #INT-1099-ID-NUMBER
end-if                                                            /* vt4
*
IF #CGA-SCR-SUFFIX = ' '
  MOVE #TODAY-YYYY TO #INT-1099-YYYY
ELSE
  IF #CGA-SCR-SUFFIX = 'W'
    ASSIGN #INT-1099-YY = '92'
  ELSE
    MOVE #CGA-SCR-SUFFIX TO #INT-1099-YY
  END-IF
  IF #INT-1099-YY GT '50'
    MOVE 19 TO #INT-1099-CENT
  ELSE
    MOVE 20 TO #INT-1099-CENT
  END-IF
END-IF
*
* callnat 'g1099pol' #cga-id #owner-cn                                         /* vt3
* move #owner-cn to #cga-scr-id                                                /* vt3
*
CALLNAT 'C1099SXX'                                                /* PM3
  #CGA-SCR-COMMAND                                                /* PM3
  #CGA-SCR-ID                                                     /* PM3
  #CGA-SCR-SUFFIX                                                 /* PM3
  #INT-1099-KEY                                                   /* PM3
  #YEAR-INT-TYPE-ID-KEY                                           /* PM3
  #ISN
  #FACE-AMOUNT
  #DEATH-BENEFIT
  #POLICY-TYPE
  #CLAIMANT-CI
  #DEAD-INSURED-CN
  #SEGMENT
*
IF #CGA-SCR-COMMAND NE '*'                                        /* PM3
  FETCH 'G1000PXX'                                                /* PM3
END-IF                                                            /* PM3
*
IF #ISN <= 0
*
  if #cga-orig-command = 'TC' and #cga-scr-id gt 500000
    FETCH 'G1000PXX'
  end-if
  INT-1099-V.CONTACT-ID        := A-STAT.MEMBER-CONTACT-ID   /* NG2 Start
  INT-1099-V.RELATED-ID-NUMBER := A-STAT.ID-NUMBER
  INT-1099-V.SSN               := A-STAT.SSN
*                                                     NG2 End
  reset #pol-exist                                              /* vt4
  if #policy-number = ' '                                       /* vt4
    move  'Please enter a policy number'  to #SCR-MSG-1         /* vt4
  end-if                                                        /* vt4
  MOVE 'ENTER INFO FOR NEW 1099 RECORD' TO #SCR-MSG-1
ELSE
  GET INT-1099-V #ISN
  MOVE INT-1099-V.INT-TYPE       TO #HOLD-INT                     /* PM4
  MOVE 'ENTER UPDATED 1099 INFO' TO #SCR-MSG
  IF INT-1099-V.INT-TYPE = 'L'                                    /* PM2
    MOVE 'COST BASIS'            TO #PREM-TITLE                              /* PM2
  ELSE                                                            /* PM2
    MOVE 'PREM PAID.'            TO #PREM-TITLE
  END-IF                                                          /* PM2
  COMPUTE #PREM-PAID = GROSS-AMT - AMOUNT
  IF INT-TYPE = 'C'
    MOVE ' '                    TO #SCN-INT-TYPE
  ELSE
    MOVE INT-TYPE               TO #SCN-INT-TYPE
  END-IF
  MOVE INT-1099-V.AMOUNT        TO #TAX-AMOUNT                                 /* VT4 \/
  MOVE INT-1099-V.POLICY-NUMBER TO #POLICY-NUMBER
  #OWNER-CN                     := F-GET-CN(<INT-1099-V.CLAIMANT-ID>)
  #INSURED-CN                   := F-GET-CN(<INT-1099-V.CONTACT-ID>)
  #OWNER-NAME                   := FUNCTION-POCB(<INT-1099-V.CLAIMANT-ID>)
  #insured-contact-id           := int-1099-v.contact-id
  #INSURED-NAME                 := FUNCTION-POCB(<INT-1099-V.CONTACT-ID>)
  #owner-ssn                    := get-ssn (<INT-1099-V.CLAIMANT-ID>)          /* vt4 /\
  RESET #SCR-DEL-CV
  MOVE 'ENTER (D) TO DELETE RECORD  -' TO #SCR-DEL-MSG
END-IF
*
RESET #SCR-CV
*                                              NG2 Start
RESET #PDA-ADDRESS
**** MOVE CONTACT-ID TO #ADD-CONTACT-ID                                        /* vt4
move claimant-id to #add-contact-id                                            /* vt4
MOVE 'P' TO #ADD-TYPE
CALLNAT 'ADDN0001' #PDA-ADDRESS
#owner-address-line-1 := #pda-address.#add-line-1                              /* vt4
#owner-address-line-2 := #pda-address.#add-line-2                              /* vt4
#owner-address-line-3 := #pda-address.#add-line-3                              /* vt4
Letter := #LETTER
CALLNAT 'GPRS0CNT' #ADD-CONTACT-ID Letter
#NAME := Letter
*                                               NG2 End

MOVE '*' TO #CGA-SCR-COMMAND
INPUT TEXT #SCR-MSG MARK *SSN-TAX-ID-IND  USING MAP 'C2930MTC'
*
IF #CGA-SCR-COMMAND NE '*'
  END TRANSACTION
  FETCH 'G1000PXX'
END-IF
*     NG2
* IF NAME = ' '
*   REINPUT WITH 'PLEASE ENTER A NAME'
*     MARK *NAME
* END-IF
* *
* IF ADDR-1 = ' '
*   REINPUT WITH 'PLEASE ENTER THE ADDRESS'
*     MARK *ADDR-1
* END-IF
* *
* IF ADDR-2 = ' '
*   REINPUT WITH 'PLEASE ENTER THE ADDRESS'
*     MARK *ADDR-2
* END-IF
*
if #cga-scr-id lt 500000
  if #cga-scr-id ne int-1099-v.related-id-number                        /* vt4 \/
    find stat with id-number = int-1099-v.related-id-number

      RESET #PDA-ADDRESS
      move stat.member-contact-id to #add-contact-id
      MOVE 'P' TO #ADD-TYPE
      CALLNAT 'ADDN0001' #PDA-ADDRESS
      Letter := #LETTER
      CALLNAT 'GPRS0CNT' #ADD-CONTACT-ID Letter
      #NAME := Letter
      INT-1099-V.CONTACT-ID := STAT.MEMBER-CONTACT-ID
      int-1099-v.ssn        := stat.ssn
      #int-1099-id-number   := stat.ssn
    end-find
*  write '=' #name '=' #add-line-1
*   input TEXT 'The CN# has been changed and the record will be created for the new CN'
*     mark *int-1099-v.related-id-number
*     USING MAP 'C2930MTC'
    move int-1099-v.related-id-number to #cga-scr-id


  end-if                                                               /* vt4 /\
end-if
*
IF #SCN-INT-TYPE = '2' OR = ' ' OR = 'N' OR = 'P' OR = 'M'
    OR = 'L'                                            /* PM2
  IGNORE
ELSE
  REINPUT USING HELP
    MARK *#SCN-INT-TYPE
END-IF
*
if #policy-number = ' '                                      /* vt4 \/
  reinput with 'Please enter a policy number'
    mark *#policy-number
else
  reset #pol-exist
  if #insured-cn = 0
    find a-stat with id-number = #cga-scr-id
      for #i 1 9
        if a-stat.policy-id(#i) eq #policy-number
          move true to #pol-exist
          escape bottom
        end-if
      end-for
    end-find
  else
    find a-stat with id-number = #insured-cn
      for #i 1 9
        if a-stat.policy-id(#i) eq #policy-number
          move true to #pol-exist
          escape bottom
        end-if
      end-for
    end-find
  end-if
  if not #pol-exist
    reinput 'Invalid Policy number'
      mark *#policy-number
  end-if
end-if                                                        /* vt4 /\
IF GROSS-AMT = 0
  REINPUT WITH 'GROSS AMOUNT MUST BE GREATER THAN 0'
    MARK *GROSS-AMT
END-IF
*
IF GROSS-AMT < AMOUNT
  REINPUT WITH 'GROSS DISTRIBUTION MUST BE GREATER THAN TAX AMOUNT'
    MARK *GROSS-AMT
END-IF
*
if  int-1099-v.ssn ne int-1099-v.owner-ssn                   /* vt4  \/
  move int-1099-v.owner-ssn to int-1099-v.ssn
else                                                         /* vt4  /\
  MOVE #INT-1099-ID-NUMBER TO INT-1099-V.SSN
end-if                                                       /* vt4
MOVE #INT-1099-YYYY      TO INT-1099-V.YEAR
**MOVE #SCR-ZIP-9          TO INT-1099-V.ZIP-CODE
MOVE 'S'                 TO INT-1099-V.SSN-TAX-ID-IND
*
IF #SCN-INT-TYPE = ' '
  MOVE 'C' TO INT-1099-V.INT-TYPE
ELSE
  MOVE #SCN-INT-TYPE TO INT-1099-V.INT-TYPE
END-IF
*
if #policy-number ne ' '                                                        /* vt4 \/
  int-1099-v.DATE-ENTERED      := *datN
  #insured-cn                  := A-STAT.ID-NUMBER
  #insured-contact-id          := A-stat.member-contact-id
  #insured-name                := FUNCTION-POCb(<A-STAT.MEMBER-CONTACT-ID>)
  int-1099-v.insured           := #insured-name
  #policy-number-a             := #policy-number
  #insured-cn-a                := #insured-cn
  #owner-cn-a-d                := f-owner-cn (<#POLICY-NUMBER-a,#insured-cn-a>)
  move right #owner-cn-a-d     to #owner-cn-a
  INT-1099-V.CLAIMANT-ID       := f-get-contact-id(<#owner-cn>)
  int-1099-v.policy-number     := #policy-number
  #owner-name                  := function-pocb(<int-1099-v.claimant-id>)
  #owner-ssn                   := get-ssn(<INT-1099-V.CLAIMANT-ID >)
  move INT-1099-V.CLAIMANT-ID to #add-contact-id
  compress #owner-ssn-3 #owner-ssn-2 #owner-ssn-4 into #owner-ssn-a leaving no
  move right #owner-ssn-a to #owner-ssn-a
  INT-1099-v.owner-ssn         := #owner-ssn-n
  int-1099-v.ssn               := #owner-ssn-n
  MOVE 'P' TO #ADD-TYPE
  CALLNAT 'ADDN0001' #PDA-ADDRESS
  #owner-address-line-1 := #pda-address.#add-line-1
  #owner-address-line-2 := #pda-address.#add-line-2
  #owner-address-line-3 := #pda-address.#add-line-3
end-if                                                                           /* vt4 /\
*
PERFORM CHECK-FOR-DUPLICATE                                       /* PM4  /* vt4
*
* IF #REC-NOT-FOUND                                               /* vt1
IF #ISN = 0    or #rec-not-found                                  /* vt1    /* vt2
  move *datn       to int-1099-v.date-entered                     /* vt4
  move #cga-clerk  to int-1099-v.last-upd-user                    /* vt4
  STORE INT-1099-V
  MOVE 'NEW 1099 RECORD ADDED' TO #SCR-MSG
ELSE
  IF #SCR-DEL-COD = 'D'
    MOVE (AD=P) TO #SCR-CV
    MOVE (AD=P) TO #SCR-DEL-CV
    RESET #SCR-R-U-SURE-CV
    MOVE 'ARE YOU SURE? (Y)ES OR (N)O -' TO #SCR-R-U-SURE-MSG
    INPUT MARK *#SCR-R-U-SURE-COD USING MAP 'C2930MTC'
*
    IF #CGA-SCR-COMMAND NE '*'
      END TRANSACTION
      FETCH 'G1000PXX'
    END-IF
    IF #SCR-R-U-SURE-COD = 'Y'
      MOVE '1099 RECORD DELETED' TO #SCR-MSG
      DELETE (0318)
    ELSE
      MOVE '1099 RECORD NOT DELETED' TO #SCR-MSG
    END-IF
  ELSE
    move #CGA-CLERK                        to INT-1099-V.last-upd-user         /* vt4  \/
    move #insured-contact-id               to INT-1099-v.contact-id
    move *datn                             to INT-1099-V.last-upd-date
    move *timn                             to INT-1099-V.last-upd-time         /* vt4  /\
    UPDATE (0318)
    MOVE '1099 RECORD UPDATED'   TO #SCR-MSG
  END-IF
END-IF
*
END TRANSACTION
*
MOVE (AD=P) TO #SCR-CV
MOVE (AD=P) TO #SCR-DEL-CV
MOVE (AD=P) TO #SCR-R-U-SURE-CV
*
MOVE 'TC' TO #CGA-SCR-COMMAND
*
IF INT-1099-V.INT-TYPE = 'L'                                      /* PM2
  MOVE 'COST BASIS' TO #PREM-TITLE                                /* PM2
ELSE                                                              /* PM2
  MOVE 'PREM PAID.' TO #PREM-TITLE
END-IF                                                            /* PM2
*
* IF INT-TYPE = 'M'   /* removed 11/2000 as per ELB
*   RESET #PREM-PAID
* ELSE
COMPUTE #PREM-PAID = INT-1099-V.GROSS-AMT - INT-1099-V.AMOUNT
* END-IF
*
INPUT TEXT #SCR-MSG USING MAP 'C2930MTC'
*
FETCH 'G1000PXX'
*
*****************
DEFINE SUBROUTINE CHECK-FOR-DUPLICATE                             /* vt4 \/
*****************
*
MOVE #INT-1099-ID-NUMBER TO #YEAR-INT-ID-NUMBER
MOVE #INT-1099-YYYY      TO #YEAR-INT-YEAR
MOVE INT-TYPE            TO #YEAR-INT-TYPE
*
move #int-1099-yyyy      to #year-int-year-tc
move int-type            to #year-int-type-tc
move #Policy-number      To #year-int-pol-num
*
IF #YEAR-INT-TYPE NE #HOLD-INT
  decide on first value of #cga-orig-command
    VALUE 'TC'
      find(1) I-V-1099 with year-int-type-pol-num-key = #year-int-type-pol-num-key
        if no records found
          escape bottom
        end-norec
        reinput with 'INTEREST TYPE ALREADY EXISTS FOR SELECTED YEAR AND POLICY NUMBER'
          mark *#SCN-INT-TYPE
      end-find
    value 'TB'
      FIND (1) I-V-1099 WITH YEAR-INT-TYPE-ID-KEY = #YEAR-INT-TYPE-ID-KEY
        IF NO RECORDS FOUND
          ESCAPE BOTTOM
        END-NOREC
        REINPUT WITH 'INTEREST TYPE ALREADY EXISTS FOR SELECTED YEAR'
          MARK *INT-TYPE
      end-find
    none value
      ignore
  end-decide
end-if
end-subroutine                                                   /* vt4  /\
*
END
