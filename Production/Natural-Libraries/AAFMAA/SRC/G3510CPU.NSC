* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* copycode G3510CPU * used by athppdup/athppaup & g3520pad* *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
**  MODIFICATIONS
** WHO   DATE   TAG      REASON
** SAG 10282005 RH1 AB - Replace CAALL to Cobol with CALLNAT to Natural
**                  this is an unused object and cannot be tested !!
***********************************************************************
DEFINE SUBROUTINE CALL-AOCX2V6A
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
MOVE 604        TO #L-CI-TRAN
MOVE CI-V.SEX   TO #L-604-SEX
*
MOVE #TODAY-YY  TO #XYY
MOVE #TODAY-MM  TO #XMM
MOVE #TODAY-DD  TO #XDD
*
IF #PUSP
  IF #XDD NE 1
    ADD 1 TO #XMM
    IF #XMM GT 12
      MOVE 1 TO #XMM
      ADD 1 TO #XYY
    END-IF
    MOVE 1 TO #XDD
  END-IF
*
  MOVE #WYYMMDD-N TO #L-604-TRN-DATE
  MOVE #WYYMMDD-N TO #L-604-ISS-DATE
  MOVE 'OL'       TO #L-604-FM-TYPE
  MOVE 'SP'       TO #L-604-TO-TYPE
  MOVE 10000      TO #L-604-FAC-AMT
  COMPUTE #L-604-ISS-AGE = (*DATN - CI-V.DATE-OF-BIRTH) / 10000
*
  IF #L-604-SEX = 'F'
    SUBTRACT 3 FROM #L-604-ISS-AGE
  END-IF
*
  RESET           #L-604-MIN-CSV
  RESET           #L-604-DB
  RESET           #L-604-OLD-PRM
ELSE
  MOVE #TODAY-YY  TO #L-604-TRN-YY
  MOVE #TODAY-MM  TO #L-604-TRN-MM
  MOVE #TODAY-DD  TO #L-604-TRN-DD
  MOVE CI-V.ISSUE-DATE-YYMMDD (#IFL) TO #L-604-ISS-DATE
  MOVE CI-V.PLAN              (#IFL) TO #L-604-FM-TYPE
  MOVE 'AP'                          TO #L-604-TO-TYPE
  MOVE CI-V.FACE-AMOUNT       (#IFL) TO #L-604-FAC-AMT
  MOVE CI-V.ISSUE-AGE-N       (#IFL) TO #L-604-ISS-AGE
  MOVE CI-V.MIN-CASH-VALUE    (#IFL) TO #L-604-MIN-CSV
  MOVE CI-V.DEATH-BENEFIT     (#IFL) TO #L-604-DB
  MOVE CI-V.ANNUAL-PREM       (#IFL) TO #L-604-OLD-PRM
END-IF
*
IF (#L-604-MIN-CSV LT 0)
  RESET #L-604-MIN-CSV
END-IF
*
RESET #L-604-NEW-PRM
RESET #L-604-RSV-35-DIFF
      #L-604-RSV-VA-DIFF
      #L-604-NEW-LST-MCV
      #L-604-NEW-NXT-MCV
      #L-604-NEW-CUR-MCV
      #L-604-NEW-NPR
*
IF *DEVICE = 'BATCH'
**CALL 'AOCX2V6B' #L-CI-TRAN     /* SAG 1028205 RH1
  CALLNAT 'AOCX2V6B' #L-PARMS    /* SAG 1028205 RH1
ELSE
**CALL 'AOCX2V6A' #L-CI-TRAN     /* SAG 1028205 RH1
  CALLNAT 'AOCX2V6A' #L-PARMS    /* SAG 1028205 RH1
END-IF
*
IF NOT #PUSP
  IF CI-V.ISSUE-DATE (#IFL) LT 19860701
    COMPUTE #L-604-RSV-35-DIFF =
         #L-604-RSV-35-DIFF - CI-V.CASH-VALUE (#IFL)
  ELSE
    COMPUTE #AMT-TO-CHG-MBR =     /* SO BACK INTO IT
         #L-604-RSV-VA-DIFF - CI-V.CASH-VALUE (#IFL)
    COMPUTE #L-604-RSV-VA-DIFF =
         #L-604-RSV-VA-DIFF - CI-V.ACC-CASH-VALUE (#IFL)
  END-IF
END-IF
*
IF  #L-604-RSV-VA-DIFF GT #L-604-RSV-35-DIFF    /* PICK BEST FOR AAFMAA
  MOVE #L-604-RSV-VA-DIFF TO #AMT-TO-ADD-TO-ACV  /* (HIGHEST AMOUNT)
ELSE
  MOVE #L-604-RSV-35-DIFF TO #AMT-TO-ADD-TO-ACV
END-IF
*
* * * * <<<<< below is temporary
IF  (#CGA-SCR-SUFFIX NE 'OLD')
 AND (NOT #PUSP)
 AND (CI-V.ISSUE-DATE (#IFL) LT 19860701)
  COMPUTE #AMT-TO-ADD-TO-ACV = #L-604-DB - CI-V.ACC-CASH-VALUE (#IFL)
END-IF
* IF CONV TO 20/30 PAY PD-UP NEVER MAKE MBR PAY MORE THAN REMAINING PMTS
*
IF NOT #PUSP
 AND (CI-V.PLAN (#IFL) = '20P' OR = '30P' OR = '7P')
  RESET #PREMS-YET-TO-PAY
*
  MOVE CI-V.LAST-DURATION (#IFL) TO #WORK-LAST-DURATION
  MOVE CI-V.MONTH-IND     (#IFL) TO #NUM-MONTHS
  ADD 1 TO #NUM-MONTHS /* SINCE V/A IS 1 MONTH BEHIND ACTUAL PMT
*
  IF #NUM-MONTHS GE 12
    SUBTRACT 12 FROM #NUM-MONTHS
    ADD 1         TO #WORK-LAST-DURATION
  END-IF
*
  IF   (CI-V.PLAN (#IFL) = '7P')
   AND (#WORK-LAST-DURATION LT 7)
    COMPUTE #PREMS-YET-TO-PAY = (CI-V.ANNUAL-PREM (#IFL) / 12)
      * (((6 - #WORK-LAST-DURATION) * 12) + (12 - #NUM-MONTHS))
  END-IF
*
  IF   (CI-V.PLAN (#IFL) = '20P')
   AND (#WORK-LAST-DURATION LT 20)
    COMPUTE #PREMS-YET-TO-PAY = (CI-V.ANNUAL-PREM (#IFL) / 12)
      * (((19 - #WORK-LAST-DURATION) * 12) + (12 - #NUM-MONTHS))
  END-IF
*
  IF   (CI-V.PLAN (#IFL) = '30P')
   AND (#WORK-LAST-DURATION LT 30)
    COMPUTE #PREMS-YET-TO-PAY = (CI-V.ANNUAL-PREM (#IFL) / 12)
      * (((29 - #WORK-LAST-DURATION) * 12) + (12 - #NUM-MONTHS))
  END-IF
*
  IF #PREMS-YET-TO-PAY LT #AMT-TO-ADD-TO-ACV
    MOVE #PREMS-YET-TO-PAY TO #AMT-TO-ADD-TO-ACV
  END-IF
END-IF
*
END-SUBROUTINE /* (0013)
*
