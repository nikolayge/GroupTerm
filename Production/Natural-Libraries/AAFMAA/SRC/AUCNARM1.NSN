* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
/** New Subprogram AUCNARM1.
/**
/** :author nguentchev
/*
/** Modified by:
/** RSE 06/21/2012 RE1 Write TR for non-CN contacts; add clerk ID
/** YAK 07/02/2012 YK1 Populate RETURNED-MAIL-DATE when RETURNED-MAIL-IND is changed
DEFINE DATA
PARAMETER USING AUCAAR01
PARAMETER
1 #NOLOG   (L) OPTIONAL
**LOCAL USING OBJLADRL
LOCAL USING OBJADBTS
LOCAL USING GOADA001
LOCAL USING GOADA002
LOCAL USING GPRATR00
LOCAL
1 #CN-PARMS
  2 CN                   (N6)
  2 ERR                  (N4)
  2 ERR-DESC             (A78)
  2 MOD                  (A1)
1 #UPDATED         (L)
1 #GET             (I4) CONST <0>
1 #ADD             (I4) CONST <1>
1 #UPDATE          (I4) CONST <2>
1 #DELETE          (I4) CONST <3>
1 #CHECKFORUPDATES (I4) CONST <4>
1 #GETBYTYPE       (I4) CONST <5>
1 #REORDER         (I4) CONST <6>
1 BLANK            (A1) CONST <' '>
*
1 #NOUPDATES   (A) DYNAMIC CONST <'NO UPDATES'>
1 #NOTFOUND    (A) DYNAMIC CONST <'ADDRESS RELATION NOT FOUND'>
1 #UNSUPPORTED (A) DYNAMIC CONST <'UNSUPPORTED REQUEST'>
1 #REQUIRED    (A) DYNAMIC CONST <'ADDRESS POOL ID AND CONTACT ID ARE REQUIRED'>
1 #UPDATECONFLICT (A) DYNAMIC CONST <'UPDATE CONFLICT'>
1 #NOTIMPLEMENTED (A) DYNAMIC CONST <'NOT IMPLEMENTED'>
1 ADDR-REL-V VIEW OF A-ADDRESS-RELATIONSHIP
  2 CONTACT-ID      (N8)
  2 ADDRESS-POOL-ID (N8)
  2 ADDR-TYPE-CD    (A1)
  2 ADDR-LOCATION   (A1)
  2 ATTENTION-LINE  (A50)
  2 RETURNED-MAIL-IND  (A1)
  2 RETURNED-MAIL-DATE (N8)
  2 PREVENT-OVER-IND   (A1)
  2 ADDRESS-SOURCE     (A1)
  2 STATUS      (A1)
  2 STATUS-DATE (N8)
  2 START-DATE  (N8)
  2 END-DATE    (N8)
  2 REMARKS     (A70/1:3) /* MU-FIELD
  2 LAST-DATE-UPD (N8)
  2 LAST-TIME-UPD (N7)
  2 LAST-USER-UPD (A8)
*
END-DEFINE
*
RESET ErrorCode  ErrorDescription
#DB.#FILE-NAME := 'A-ADDRESS-RELATIONSHIP'
*
DECIDE FOR FIRST CONDITION
  WHEN AddressRelation.RelationID NE 0
    GET ADDR-REL-V AddressRelation.RelationID
    IF *ISN (0070) = 0
      ErrorCode := 1
      ErrorDescription := #NOTFOUND
      ESCAPE ROUTINE
    END-IF
    MOVE *ISN (0070) TO #DB.#FILE-REC-ISN
    #DB.#REQUEST   := #GET
    CALLNAT 'OBJNDBTS' #DB
  WHEN AddressRelation.ContactID > 0 AND AddressRelation.AddressPoolID > 0
    FIND ADDR-REL-V WITH CONTACT-ID = AddressRelation.ContactID
        AND ADDRESS-POOL-ID = AddressRelation.AddressPoolID
      IF NO RECORDS FOUND
        IF ActionType NE #ADD
          ErrorCode := 1
          ErrorDescription := #NOTFOUND
          ESCAPE ROUTINE
        ELSE
          ESCAPE BOTTOM
        END-IF
      END-NOREC
      MOVE *ISN TO #DB.#FILE-REC-ISN
      #DB.#FILE-NAME := 'A-ADDRESS-RELATIONSHIP'
      #DB.#REQUEST   := #GET
      CALLNAT 'OBJNDBTS' #DB
    END-FIND
  WHEN NONE
    ErrorCode := 1
    ErrorDescription := #REQUIRED
    ESCAPE ROUTINE
END-DECIDE
*
PERFORM ADD-TR-BEFORE
*
DECIDE ON FIRST VALUE OF ActionType
  VALUE #GET
    PERFORM GET-RECORD
  VALUE #GETBYTYPE    PERFORM GET-BY-TYPE
  VALUE #ADD
    PERFORM ADD-RECORD
  VALUE #CHECKFORUPDATES
    PERFORM CHECK-FOR-UPDATES
  VALUE #UPDATE
    IF   AddressRelation.AddressTypeCode NE ADDR-REL-V.ADDR-TYPE-CD
        OR   AddressRelation.AddressLocationCode NE ADDR-REL-V.ADDR-LOCATION
        OR   AddressRelation.Source              NE ADDR-REL-V.ADDRESS-SOURCE
        OR   AddressRelation.Undeliverable       NE ADDR-REL-V.RETURNED-MAIL-IND
        OR   AddressRelation.Protected           NE ADDR-REL-V.PREVENT-OVER-IND
        OR   AddressRelation.AttentionLine       NE ADDR-REL-V.ATTENTION-LINE
      PERFORM UPDATE-RECORD
    ELSE
      ErrorCode := 81
      ErrorDescription := #NOUPDATES
    END-IF
  VALUE #DELETE
    PERFORM DELETE-RECORD
  VALUE #REORDER
    PERFORM TYPE-SWITCH
  ANY VALUE
    IF ErrorCode = 0
      PERFORM SYNC-AND-LOG
    END-IF
  NONE VALUE
    ErrorCode := 3
    ErrorDescription := #UNSUPPORTED
END-DECIDE
*
DEFINE GET-RECORD
/*     ==========
GET ADDR-REL-V #DB.#FILE-REC-ISN
LastUpdatedDate       := #DB.LAST-DATE-UPD
LastUpdatedTime       := #DB.LAST-TIME-UPD
LastUpdatedUser       := #DB.LUU-NAME
AddressRelation.ContactID           := ADDR-REL-V.CONTACT-ID
AddressRelation.RelationID          := #DB.#FILE-REC-ISN
AddressRelation.AddressTypeCode     := ADDR-REL-V.ADDR-TYPE-CD
AddressRelation.AddressLocationCode := ADDR-REL-V.ADDR-LOCATION
AddressRelation.Source              := ADDR-REL-V.ADDRESS-SOURCE
AddressRelation.Protected           := ADDR-REL-V.PREVENT-OVER-IND
AddressRelation.Undeliverable       := ADDR-REL-V.RETURNED-MAIL-IND
AddressRelation.AttentionLine       := ADDR-REL-V.ATTENTION-LINE
AddressRelation.CN := F-GET-CN (< ADDR-REL-V.CONTACT-ID >)
IF AddressRelation.AddressLocationCode = BLANK
  AddressRelation.AddressLocationCode := 'H'
END-IF
END-SUBROUTINE
*
DEFINE ADD-RECORD
/*     ==========
RESET ADDR-REL-V
PERFORM POPULATE-DB-FIELDS
IF ErrorCode = 0
  STORE-R.
  STORE ADDR-REL-V
  MOVE *ISN (STORE-R.) TO #DB.#FILE-REC-ISN
  #DB.#REQUEST   := #UPDATE
  #DB.LAST-USER-UPD := AddressRelation.User
  CALLNAT 'OBJNDBTS' #DB
  LastUpdatedDate := #DB.LAST-DATE-UPD
  LastUpdatedTime := #DB.LAST-TIME-UPD
  #UPDATED := TRUE
END-IF
END-SUBROUTINE
*
DEFINE UPDATE-RECORD
/*     =============
IF #DB.LAST-DATE-UPD = LastUpdatedDate
    AND #DB.LAST-TIME-UPD = LastUpdatedTime
  UPDATE-R.
  GET ADDR-REL-V #DB.#FILE-REC-ISN
  PERFORM POPULATE-DB-FIELDS
  IF ErrorCode = 0
    UPDATE (UPDATE-R.)
    #DB.#REQUEST   := #UPDATE
    #DB.LAST-USER-UPD := AddressRelation.User
    CALLNAT 'OBJNDBTS' #DB
    LastUpdatedDate := #DB.LAST-DATE-UPD
    LastUpdatedTime := #DB.LAST-TIME-UPD
    #UPDATED := TRUE
  END-IF
ELSE
  ErrorCode := 99
  COMPRESS *PROGRAM #UPDATECONFLICT INTO ErrorDescription
END-IF
END-SUBROUTINE
*
DEFINE TYPE-SWITCH
/*     ===========
IF #DB.LAST-DATE-UPD = LastUpdatedDate
    AND #DB.LAST-TIME-UPD = LastUpdatedTime
  UPDATE-T.
  GET ADDR-REL-V #DB.#FILE-REC-ISN
  ADDR-REL-V.ADDR-TYPE-CD := AddressRelation.AddressTypeCode
  UPDATE (UPDATE-T.)
  #DB.#REQUEST   := #UPDATE
  #DB.LAST-USER-UPD := AddressRelation.User
  CALLNAT 'OBJNDBTS' #DB
  LastUpdatedDate := #DB.LAST-DATE-UPD
  LastUpdatedTime := #DB.LAST-TIME-UPD
  #UPDATED := TRUE
ELSE
  ErrorCode := 99
  COMPRESS *PROGRAM #UPDATECONFLICT INTO ErrorDescription
END-IF
END-SUBROUTINE
*
DEFINE CHECK-FOR-UPDATES
/*     =================
IF   AddressRelation.AddressTypeCode NE ADDR-REL-V.ADDR-TYPE-CD
    AND AddressRelation.AddressLocationCode EQ ADDR-REL-V.ADDR-LOCATION
    AND AddressRelation.Source              EQ ADDR-REL-V.ADDRESS-SOURCE
    AND AddressRelation.Undeliverable       EQ ADDR-REL-V.RETURNED-MAIL-IND
    AND AddressRelation.Protected           EQ ADDR-REL-V.PREVENT-OVER-IND
    AND AddressRelation.AttentionLine       EQ ADDR-REL-V.ATTENTION-LINE
  ErrorCode := #REORDER
  ESCAPE ROUTINE
END-IF
IF   AddressRelation.AddressTypeCode NE ADDR-REL-V.ADDR-TYPE-CD
    OR   AddressRelation.AddressLocationCode NE ADDR-REL-V.ADDR-LOCATION
    OR   AddressRelation.Source              NE ADDR-REL-V.ADDRESS-SOURCE
    OR   AddressRelation.Undeliverable       NE ADDR-REL-V.RETURNED-MAIL-IND
    OR   AddressRelation.Protected           NE ADDR-REL-V.PREVENT-OVER-IND
    OR   AddressRelation.AttentionLine       NE ADDR-REL-V.ATTENTION-LINE
  RESET ErrorCode
ELSE
  ErrorCode := 81
  ErrorDescription := #NOUPDATES
END-IF
END-SUBROUTINE
*
DEFINE POPULATE-DB-FIELDS
/*     ==================
ADDR-REL-V.CONTACT-ID        := AddressRelation.ContactID
ADDR-REL-V.ADDRESS-POOL-ID   := AddressRelation.AddressPoolID
ADDR-REL-V.ADDR-TYPE-CD      := AddressRelation.AddressTypeCode
ADDR-REL-V.ADDR-LOCATION     := AddressRelation.AddressLocationCode
ADDR-REL-V.ATTENTION-LINE    := AddressRelation.AttentionLine
ADDR-REL-V.RETURNED-MAIL-IND := AddressRelation.Undeliverable
IF  AddressRelation.Undeliverable NE BEFORE_IMAGE.RETURNED-MAIL-IND   /* YK1
  ADDR-REL-V.RETURNED-MAIL-DATE := *DATN                              /* YK1
END-IF                                                                /* YK1
ADDR-REL-V.PREVENT-OVER-IND  := AddressRelation.Protected
ADDR-REL-V.ADDRESS-SOURCE    := AddressRelation.Source
MOVE BY NAME ADDR-REL-V TO #ADDR-REL
CALLNAT 'AUCNARV1' #ADDR-REL #ADDRESS-UI ErrorDescription ErrorCode
END-SUBROUTINE
*
DEFINE DELETE-RECORD
/*     =============
IF #DB.LAST-DATE-UPD = LastUpdatedDate
    AND #DB.LAST-TIME-UPD = LastUpdatedTime
  DELETE-R.
  GET ADDR-REL-V #DB.#FILE-REC-ISN
  AddressRelation.AddressTypeCode     := ADDR-REL-V.ADDR-TYPE-CD
  AddressRelation.AttentionLine       := ADDR-REL-V.ATTENTION-LINE
  DELETE
  #UPDATED := TRUE
ELSE
  ErrorCode := 99
  COMPRESS *PROGRAM #UPDATECONFLICT INTO ErrorDescription
END-IF
END-SUBROUTINE
*
DEFINE GET-BY-TYPE
/*     ==========
RESET AddressRelation.AddressPoolID
IF AddressTypeCode = BLANK
  AddressTypeCode := 'P'
END-IF
FIND ADDR-REL-V WITH CONTACT-ID = ContactID
  ACCEPT IF ADDR-REL-V.STATUS NE 'D'
  IF ADDR-REL-V.ADDR-TYPE-CD = AddressTypeCode
    AddressRelation.AddressPoolID := ADDR-REL-V.ADDRESS-POOL-ID
    MOVE *ISN TO #DB.#FILE-REC-ISN
    ESCAPE BOTTOM
  END-IF
END-FIND
IF AddressRelation.AddressPoolID = 0
  ErrorCode := 4
  ErrorDescription := #NOTFOUND
ELSE
  #DB.#FILE-NAME := 'A-ADDRESS-POOL'
  #DB.#REQUEST   := #GET
  CALLNAT 'OBJNDBTS' #DB
  PERFORM GET-RECORD
END-IF
END-SUBROUTINE
*
DEFINE SYNC-AND-LOG
/*     ============
IF #UPDATED
  AddressRelation.CN := F-GET-CN (< ADDR-REL-V.CONTACT-ID >)
  IF AddressRelation.CN NE 0
    #CN-PARMS.CN := AddressRelation.CN
*     CALLNAT 'GOSTAN01'    /* Synch addresses with Status
*       #CN-PARMS
*    PERFORM ADD-TR-AFTER                                     /* RE1
  END-IF
  PERFORM ADD-TR-AFTER                                        /* RE1
END-IF
END-SUBROUTINE
*
DEFINE ADD-TR-BEFORE
/*     =============
IF #NOLOG SPECIFIED
  ESCAPE ROUTINE
END-IF
**IF AddressRelation.CN > 0                                   /* RE1 start
**  TR_ID_NUMBER := AddressRelation.CN
IF AddressRelation.CN NE 0
  TR_ID_NUMBER := AddressRelation.CN
ELSE
  TR_ID_NUMBER     := F-GET-PARENT-CN(<AddressRelation.ContactID>)
  TR_CONTACT_ID    := F-GET-CONTACT-ID(<TR_ID_NUMBER>)
END-IF                                                        /* RE1 end
BEFORE_IMAGE.ADDRESS-POOL-ID := AddressRelation.AddressPoolID
BEFORE_IMAGE.ADDR-TYPE-CD    := AddressRelation.AddressTypeCode
TR_NAME := 'ADDR_BEFORE'
CALLNAT 'AUCNARTR' TRAN_LOG_HEADER
  BEFORE_IMAGE
  AFTER_IMAGE
  AddressRelation.ContactID
**END-IF                                                      /* RE1
END-SUBROUTINE
*
DEFINE ADD-TR-AFTER
/*     ============
IF #NOLOG SPECIFIED
  ESCAPE ROUTINE
END-IF
**IF AddressRelation.CN NE 0                                  /* RE1
TR_NAME := 'ADDR_AFTER'
TR_CLERK := AddressRelation.ClerkId                           /* RE1
CALLNAT 'AUCNARTR' TRAN_LOG_HEADER
  BEFORE_IMAGE
  AFTER_IMAGE
  AddressRelation.ContactID
**END-IF
END-SUBROUTINE
*
END

