* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: ATHPCHE2  *** EXAMINES OUTPUT FROM JES LOG FOR FTP XMIT   ***
* after a get        *** COMPLETION.  SETS RETURN CODE IF XMIT FAILED***
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX
LOCAL
*
1 #INPUT  (A133)
1 REDEFINE #INPUT
 2 #FIRST-BLANK    (A1)
 2 #EZA-CODE       (A8)
 2 REDEFINE #EZA-CODE
  3 #1ST-7-EZA-CD (A3)
  3 #REM-4        (A4)
  3 #LAST-EZA-CD  (A1)
 2 #REMAINING-MSG (A124)
1 REDEFINE #INPUT
 2 #FIRST-100      (A100)
1 REDEFINE #INPUT
 2 #CHARS-X        (A1/133)
*
1 #GOOD-XMIT        (L)
1 #OPEN-DATA-OK     (L)
1 #FILE-XMIT-FAILED (L)
1 #N2   (N2)
*
1 #I1       (I2)
1 #I2       (I2)
1 #NUM    (N11)
1 REDEFINE #NUM
 2 #NUM-X   (A1/11)
1 #TOT-BYTES      (N8)
1 #TOT-BYTES-DISP (A10)
1 #TOT-BYTES-TRANS (A60)
1 #FILES-MSG       (A60)
1 #TO-INIT     (A3)
1 #NOTE-TEXT (A60/5)
*
END-DEFINE
*
INCLUDE GONERCXX
*
FORMAT  LS=133 PS=66
WRITE  TITLE LEFT 'PROGRAM:' *PROGRAM
    8X  'FTP transfer Exceptions'
    5X  'DATE:' *DAT4U 2X 'TIME:' *TIMX
    2X  'PAGE:' *PAGE-NUMBER (0)
*
FORMAT (2)  LS=133 PS=66
WRITE  (2) TITLE LEFT 'PROGRAM:' *PROGRAM
    8X  'FTP records'
    5X  'DATE:' *DAT4U 2X 'TIME:' *TIMX
    2X  'PAGE:' *PAGE-NUMBER (2)
*
READ WORK 1 RECORD #INPUT
* DISPLAY (2) #INPUT (EM=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX)
  IF #INPUT = MASK (' 226 Transfer complete')
    MOVE TRUE TO #GOOD-XMIT
    WRITE (2) #FIRST-100
  END-IF
*
  IF #INPUT = MASK (' 150 Opening data connection')
    MOVE TRUE TO #OPEN-DATA-OK
    WRITE (2) #FIRST-100
  END-IF
*
  IF #INPUT = MASK (' 500 File transfer failed')
    MOVE TRUE TO #FILE-XMIT-FAILED
    WRITE (2) #FIRST-100
  END-IF
*
  IF #INPUT = MASK (' EZA1617I')   /* bytes transfered
    RESET #NUM
    MOVE 12 TO #I2
    FOR #I1 20 TO 10 STEP -1
      IF #CHARS-X (#I1) = MASK (N)
        SUBTRACT 1 FROM #I2
        MOVE #CHARS-X (#I1) TO #NUM-X (#I2)
      END-IF
    END-FOR
*
    ADD #NUM TO #TOT-BYTES
    MOVE TRUE TO #GOOD-XMIT
    WRITE (2) #FIRST-100
  END-IF
*
  IF #INPUT = MASK (' EZA1736I get')    /* put/get line
    MOVE #REMAINING-MSG TO #FILES-MSG
    WRITE (2) #FIRST-100
  END-IF
*
  WRITE #FIRST-100
END-WORK
*
MOVE EDITED #TOT-BYTES (EM=Z,ZZZ,ZZZ) TO #TOT-BYTES-DISP
COMPRESS 'Total bytes transferred:' #TOT-BYTES-DISP
   INTO #TOT-BYTES-TRANS
WRITE (2) #TOT-BYTES-TRANS
*
IF   #OPEN-DATA-OK
 AND #GOOD-XMIT
  WRITE (2) 'Daily Micro-Film file has been received from AAFMAA'
*
  MOVE '*NX' TO #CGA-SCR-SUFFIX
  MOVE 'EDS' TO #CGA-CLERK
  MOVE 'KEC' TO #TO-INIT
  COMPRESS 'Daily MF file received at EDS on' *DATN 'at'*TIMN
             INTO #NOTE-TEXT (1)
  MOVE #FILES-MSG       TO #NOTE-TEXT (2)
  MOVE #TOT-BYTES-TRANS TO #NOTE-TEXT (3)
  FETCH RETURN 'G4090PNX' #CGA-CLERK #TO-INIT #NOTE-TEXT (*)  /* NX
  WRITE (2) #NOTE-TEXT (1:3)
END-IF
*
IF #OPEN-DATA-OK
 AND #FILE-XMIT-FAILED
  WRITE (2) 'No File found @ AAFMAA on' *DATN 'at' *TIMN
*
  MOVE '*NX' TO #CGA-SCR-SUFFIX
  MOVE 'EDS' TO #CGA-CLERK
  MOVE 'KEC' TO #TO-INIT
  COMPRESS 'File "NOT": received at EDS from AAFMAA on' *DATN 'at'*TIMN
             INTO #NOTE-TEXT (1)
  FETCH RETURN 'G4090PNX' #CGA-CLERK #TO-INIT #NOTE-TEXT (*)  /* NX
  WRITE (2) #NOTE-TEXT (1:2)
END-IF
*
IF NOT #GOOD-XMIT
  WRITE (2) 'XMIT ERROR - Will cause Abend'
  ADD 999 TO #N2   /* will force an abend
END-IF
*
END TRANSACTION
*
END
