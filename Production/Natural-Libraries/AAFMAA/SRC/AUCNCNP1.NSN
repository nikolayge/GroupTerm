* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCNCNP1'
*
* DESCRIPTION
*   XML Parser implementationfor file:
*   null
*   using PARSE XML statement and datastructure 'AUCACN01'
*
* TMT 06/04/2015 Policy Ownership project
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
LOCAL USING AUCACN01
LOCAL USING PARSER-X
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
*
1 POS-V VIEW OF A-POLICY-CONTACTS
  2 CONTACT-ID
  2 REFERENCE-NUMBER
LOCAL
1 #NODES (A/10) DYNAMIC
1 #LEN              (I4)
1 #PARSE-ERROR      (I4) CONST <-7>
1 #NATURAL-ERROR    (I4) CONST <-3>
1 #ERROR-LOG        (I4) CONST <3>
1 BLANK             (A1) CONST <' '>
1 #TRUE             (A4) CONST <'TRUE'>
1 #CONTACT-SYNCH    (I4) CONST <2>
1 #STATUS-ISN       (P8) CONST <0>
*
1 MEMBER VIEW OF A-STATUS
  2 ID-NUMBER
END-DEFINE
*
ASSIGN #LEN := *LENGTH (#XML_INPUT)
IF #LEN <= 0
  GenerateCN.ErrorCode := #Parse-error
  GenerateCN.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNCNS1' #XML_OUTPUT GenerateCN
  ESCAPE ROUTINE
END-IF
RESET GenerateCN
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
GenerateCN.ErrorCode := #PARSE-ERROR
GenerateCN.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNCNS1' #XML_OUTPUT GenerateCN
END-SUBROUTINE
*
DEFINE SUBROUTINE CALLBACK
/*                ========
#XML_VALUE := *TRIM (#XML_VALUE)
MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
PERFORM PARSE-DOCUMENT
END-SUBROUTINE
*
FIND MEMBER WITH MEMBER-CONTACT-ID = GenerateCN.ContactId
  IF NO RECORDS FOUND
    CALLNAT 'C2002NNM' GenerateCN.ContactId GenerateCN.CN GenerateCN.ErrorDescription
    FIND POS-V WITH POS-V.CONTACT-ID = GenerateCN.ContactId /* TT1 BEGIN
      IF NO RECORDS FOUND
        ESCAPE BOTTOM
      END-NOREC
      REFERENCE-NUMBER := GenerateCN.CN
      UPDATE
    END-FIND
    ESCAPE BOTTOM                                           /* TT1 END
  END-NOREC
  GenerateCN.CN := MEMBER.ID-NUMBER
END-FIND
IF ErrorDescription NE BLANK
  BACKOUT TRANSACTION
ELSE
  END TRANSACTION
  CALLNAT 'MBRDATA'
    #STATUS-ISN
    #XML_OUTPUT
    #XML_PATH     /* Only output
    #XML_VALUE    /* Queue response
    #CONTACT-SYNCH
    GenerateCN.ContactId
END-IF
CALLNAT 'AUCNCNS1' #XML_OUTPUT GenerateCN
*
* ------------------------------------------------- CALL THE PARSER
DEFINE PARSE-DOCUMENT
/*     ==============
* PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE XML_PARSER_CONTENT
*
DECIDE ON FIRST #XML_PATH
  VALUE 'GenerateCN//'
    IGNORE
  VALUE 'GenerateCN'
    RESET INITIAL GenerateCN
  VALUE 'GenerateCN/ActionType//'
    IGNORE
  VALUE 'GenerateCN/ActionType'
    IGNORE
  VALUE 'GenerateCN/ActionType/$'
    GenerateCN.ActionType := VAL(#XML_VALUE)
  VALUE 'GenerateCN/ErrorCode//'
    IGNORE
  VALUE 'GenerateCN/ErrorCode'
    IGNORE
  VALUE 'GenerateCN/ErrorCode/$'
    GenerateCN.ErrorCode := VAL(#XML_VALUE)
  VALUE 'GenerateCN/ErrorDescription//'
    IGNORE
  VALUE 'GenerateCN/ErrorDescription'
    IGNORE
  VALUE 'GenerateCN/ErrorDescription/$'
    GenerateCN.ErrorDescription := #XML_VALUE
  VALUE 'GenerateCN/ContactID//'
    IGNORE
  VALUE 'GenerateCN/ContactID'
    IGNORE
  VALUE 'GenerateCN/ContactID/$'
    GenerateCN.ContactID := VAL(#XML_VALUE)
  VALUE 'GenerateCN/CN//'
    IGNORE
  VALUE 'GenerateCN/CN'
    IGNORE
  VALUE 'GenerateCN/CN/$'
    GenerateCN.CN := VAL(#XML_VALUE)
  VALUE 'GenerateCN/LastUpdatedDate//'
    IGNORE
  VALUE 'GenerateCN/LastUpdatedDate'
    IGNORE
  VALUE 'GenerateCN/LastUpdatedDate/$'
    GenerateCN.LastUpdatedDate := VAL(#XML_VALUE)
  VALUE 'GenerateCN/LastUpdatedTime//'
    IGNORE
  VALUE 'GenerateCN/LastUpdatedTime'
    IGNORE
  VALUE 'GenerateCN/LastUpdatedTime/$'
    GenerateCN.LastUpdatedTime := VAL(#XML_VALUE)
  VALUE 'GenerateCN/LastUpdatedUser//'
    IGNORE
  VALUE 'GenerateCN/LastUpdatedUser'
    IGNORE
  VALUE 'GenerateCN/LastUpdatedUser/$'
    GenerateCN.LastUpdatedUser := #XML_VALUE
  VALUE 'GenerateCN/SystemSource//'
    IGNORE
  VALUE 'GenerateCN/SystemSource'
    IGNORE
  VALUE 'GenerateCN/SystemSource/$'
    GenerateCN.SystemSource := #XML_VALUE
  VALUE 'GenerateCN/User//'
    IGNORE
  VALUE 'GenerateCN/User'
    IGNORE
  VALUE 'GenerateCN/User/$'
    GenerateCN.User := #XML_VALUE
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END

