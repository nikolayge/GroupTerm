* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*****************************************************************
*                                                               *
* New COPYCODE member: ATHISV6P created by ACCORD on: 05/09/05  *
*                                                               *
*****************************************************************
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* SAG  20060302 RH1  AS - Correction made to converted code.  Logic    *
*                    now matches that of original Cobol module.        *
************************************************************************
*
IF L-CI-TRAN = 602
  PERFORM AAF-30000-CALC-602
ELSE
  IF L-CI-TRAN = 604
    PERFORM AAF-50000-CALC-604
  ELSE
    IF L-CI-TRAN = 606
      PERFORM AAF-70000-CALC-606
    ELSE
      IF L-CI-TRAN = 999
        PERFORM AAF-90000-CALC-999
      END-IF
    END-IF
  END-IF
END-IF
*
ESCAPE MODULE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-30000-CALC-602
*
MOVE L-602-ISS-DT TO W-ISS-DT
*
IF W-ISS-DD > 1
  MOVE 1 TO W-ISS-DD
  ADD 1 TO W-ISS-MM
  IF W-ISS-MM > 12
    MOVE 1 TO W-ISS-MM
    ADD 1 TO W-ISS-YYYY
  END-IF
END-IF
*
SUBTRACT W-ISS-YYYY FROM L-602-TD-YYYY GIVING W-602-LST-DUR
IF L-602-TD-MM < W-ISS-MM
  SUBTRACT 1 FROM W-602-LST-DUR
END-IF
*
RESET W-602-DUR-MON
REPEAT UNTIL W-ISS-MM = L-602-TD-MM
  PERFORM AAF-30100-BUMP-602-DUR-MON
END-REPEAT
*
COMPUTE OLD-UNITS = L-602-OLD-FACE / 5000
COMPUTE NEW-UNITS = L-602-NEW-FACE / 5000
COMPUTE ROUNDED L-602-NEW-ACV = (L-602-OLD-ACV / OLD-UNITS) * NEW-UNITS
*
ADD 1 TO W-602-LST-DUR
MOVE L-602-ISS-AGE TO IS-ISS-AGE
MOVE W-602-LST-DUR TO IS-DURATION
MOVE L-602-TYPE TO IS-TYPE
MOVE 1 TO IS-PROJ-DUR
MOVE W-606-DUR-MON TO IS-MNTH-IND
MOVE L-602-ID-MM TO IS-ISS-MM
MOVE L-602-ID-DD TO IS-ISS-DD
MOVE L-602-ID-YYYY TO IS-ISS-YYYY
PERFORM CALC-RPU-VA-DEATH-BENE
*
IF L-602-ISS-DT < 19860701
  COMPUTE ROUNDED L-602-NEW-DB = (L-602-NEW-ACV - IS-ZSPEXP-CURR) / IS-SNG-PREM
  COMPUTE ROUNDED IS-WORK-B = (9000 * L-602-NEW-FACE) / +5000
  IF IS-WORK-B > L-602-NEW-DB
    MOVE IS-WORK-B TO L-602-NEW-DB
  END-IF
ELSE
  COMPUTE ROUNDED L-602-NEW-DB = L-602-NEW-ACV / IS-SNG-PREM
  IF NOT ( L-602-NEW-DB > L-602-NEW-FACE )
    MOVE L-602-NEW-FACE TO L-602-NEW-DB
  END-IF
END-IF
*
COMPUTE ROUNDED L-602-NEW-LST-MCV = (L-602-OLD-MCV-L / OLD-UNITS) * NEW-UNITS
COMPUTE ROUNDED L-602-NEW-NXT-MCV = (L-602-OLD-MCV-N / OLD-UNITS) * NEW-UNITS
*
IF (L-602-ID-DD = 01) OR (L-602-ID-DD > L-602-TD-DD)
  COMPUTE ROUNDED IS-WORK-C = L-602-NEW-LST-MCV
    + (((L-602-NEW-NXT-MCV - L-602-NEW-LST-MCV) / +12) * (W-602-DUR-MON))
ELSE
  COMPUTE ROUNDED IS-WORK-C = L-602-NEW-LST-MCV
    + (((L-602-NEW-NXT-MCV - L-602-NEW-LST-MCV) / +12) * (W-602-DUR-MON + 1))
  MOVE IS-WORK-C TO L-602-NEW-CUR-MCV
END-IF
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-30100-BUMP-602-DUR-MON
*
ADD 1 TO W-602-DUR-MON
ADD 1 TO W-ISS-MM
*
IF W-ISS-MM > 12
  MOVE 1 TO W-ISS-MM
  ADD 1 TO W-ISS-YYYY
END-IF
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-50100-BUMP-604-DUR-MON
*
*
ADD 1 TO W-604-DUR-MON
ADD 1 TO W-ISS-MM
*
IF W-ISS-MM > 12
  MOVE 1 TO W-ISS-MM
  ADD 1 TO W-ISS-YYYY
END-IF
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-50000-CALC-604
*
SAG6A7.
REPEAT
  SAG6A6.
  REPEAT
*
    MOVE L-604-ISS-DT TO W-ISS-DT
*
    IF W-ISS-DD > 1
      MOVE 1 TO W-ISS-DD
      ADD 1 TO W-ISS-MM
      IF W-ISS-MM > 12
        MOVE 1 TO W-ISS-MM
        ADD 1 TO W-ISS-YYYY
      END-IF
    END-IF
*
    SUBTRACT W-ISS-YYYY FROM L-604-TD-YYYY GIVING W-604-LST-DUR
    IF L-604-TD-MM < W-ISS-MM
      SUBTRACT 1 FROM W-604-LST-DUR
    END-IF
*
    RESET W-604-DUR-MON
    REPEAT UNTIL W-ISS-MM = L-604-TD-MM
      PERFORM AAF-50100-BUMP-604-DUR-MON
    END-REPEAT
    IF L-604-ID-DD > 1 AND L-604-TD-DD > L-604-ID-DD
      ADD 1 TO W-604-DUR-MON
    END-IF
    MOVE L-604-ID-MM TO IS-ISS-MM
    MOVE L-604-ID-DD TO IS-ISS-DD
    MOVE L-604-ID-YYYY TO IS-ISS-YYYY
*
    RESET L-604-RSV-35-DIFF L-604-RSV-VA-DIFF
*
    IF L-604-TO-TYPE = 'SP' OR L-604-TO-TYPE = 'AP'
      MOVE L-604-OLD-PRM TO L-604-NEW-PRM
    ELSE
      IF (L-604-ISS-AGE < 14 OR L-604-ISS-AGE > 65) OR
          (W-604-LST-DUR < 00 OR W-604-LST-DUR > 79) OR
          (L-604-ISS-AGE + W-604-LST-DUR > 96)
        ESCAPE ROUTINE
      END-IF
    END-IF
*
    IF L-604-ISS-DT > 19860630
      ESCAPE BOTTOM (SAG6A7.)
    END-IF
*
    IF L-604-TO-TYPE = 'AP'
      ESCAPE BOTTOM (SAG6A6.)
    END-IF
*
    PERFORM AAF-50400-CALC-OLD-MIN-CASH-VALUE
*
*****************************************************************
* 5 0 0 2 4 - C O M P U T E - 6 0 4 - 3 5 - F R O M - A - O C   *
*****************************************************************
*
    AAF-50024-COMPUTE-604-35-FROM-A-OC.
    REPEAT
*
      MOVE L-604-ISS-AGE TO IS-ISS-AGE
      MOVE W-604-LST-DUR TO IS-DURATION
      MOVE L-604-FM-TYPE TO IS-TYPE
*
      IF (IS-TYPE = '20' AND IS-DURATION > 20) OR
          (IS-TYPE = '30' AND IS-DURATION > 30) OR
          (IS-TYPE = '7P' AND IS-DURATION > 7)
        MOVE 'Y' TO IS-PAID-UP-SW
      ELSE
        MOVE 'N' TO IS-PAID-UP-SW
      END-IF
*
      MOVE L-604-FAC-AMT TO IS-FAC-AMT
      MOVE L-604-OLD-PRM TO IS-ANN-PREM
      MOVE L-604-DB TO IS-WORK-DB
*
      PERFORM CALC-CURR-ACV
      MOVE IS-BEG-ACV TO W-604-RSV-VA-FRM-A
*
*****************************************************************
* 5 0 0 3 2 - C O M P U T E - 6 0 4 - 3 5 - T O - A - O C       *
*****************************************************************
*
      IF L-604-TO-TYPE = 'OL'
        MOVE L-604-ISS-AGE TO RT35-ISS-OL-X
        SUBTRACT 16 FROM RT35-ISS-OL-X
        MOVE W-604-LST-DUR TO RT35-DUR-OL-X
        ADD 1 TO RT35-DUR-OL-X
        MOVE RT35-AMT-OL(RT35-ISS-OL-X,RT35-DUR-OL-X) TO W-604-RSV-35-RATE
      ELSE
        IF L-604-TO-TYPE = '20'
          MOVE L-604-ISS-AGE TO RT35-ISS-20-X
          SUBTRACT 16 FROM RT35-ISS-20-X
          MOVE W-604-LST-DUR TO RT35-DUR-20-X
          ADD 1 TO RT35-DUR-20-X
          MOVE RT35-AMT-20(RT35-ISS-20-X,RT35-DUR-20-X) TO W-604-RSV-35-RATE
        ELSE
          MOVE L-604-ISS-AGE TO RT35-ISS-30-X
          SUBTRACT 16 FROM RT35-ISS-30-X
          MOVE W-604-LST-DUR TO RT35-DUR-30-X
          ADD 1 TO RT35-DUR-30-X
          MOVE RT35-AMT-30(RT35-ISS-30-X,RT35-DUR-30-X) TO W-604-RSV-35-RATE
        END-IF
      END-IF
      COMPUTE ROUNDED W-604-RSV-35-TO-A = (W-604-RSV-35-RATE * (L-604-FAC-AMT / 1000))
*
      SAG6A5.
      REPEAT
*
        MOVE L-604-ISS-AGE TO IS-ISS-AGE
        MOVE W-604-LST-DUR TO IS-DURATION
        MOVE L-604-TO-TYPE TO IS-TYPE
*
        IF (IS-TYPE = '20' AND IS-DURATION > 20) OR
            (IS-TYPE = '30' AND IS-DURATION > 30)
          MOVE 'Y' TO IS-PAID-UP-SW
        ELSE
          MOVE 'N' TO IS-PAID-UP-SW
        END-IF
*
        MOVE L-604-FAC-AMT TO IS-FAC-AMT
        MOVE L-604-NEW-PRM TO IS-ANN-PREM
*
        PERFORM CALC-CURR-ACV
        MOVE IS-BEG-ACV TO W-604-RSV-VA-TO-A
*
        SAG6A4.
        REPEAT
          IF W-604-DUR-MON = 0
            ESCAPE BOTTOM(SAG6A4.)
          END-IF
*
          ADD 1 TO W-604-LST-DUR
          IF W-604-LST-DUR > 79 OR (L-604-ISS-AGE + W-604-LST-DUR > 96)
            ESCAPE ROUTINE
          END-IF
*
          MOVE L-604-ISS-AGE TO IS-ISS-AGE
          MOVE W-604-LST-DUR TO IS-DURATION
          MOVE L-604-FM-TYPE TO IS-TYPE
*
          IF (IS-TYPE = '20' AND IS-DURATION > 20) OR
              (IS-TYPE = '30' AND IS-DURATION > 30)
            MOVE 'Y' TO IS-PAID-UP-SW
          ELSE
            MOVE 'N' TO IS-PAID-UP-SW
          END-IF
*
          MOVE L-604-FAC-AMT TO IS-FAC-AMT
          MOVE L-604-OLD-PRM TO IS-ANN-PREM
*
          PERFORM CALC-CURR-ACV
          MOVE IS-BEG-ACV TO W-604-RSV-VA-FRM-B
*
*****************************************************************
* 5 0 0 5 2 - C O M P U T E - 6 0 4 - 3 5 - T O - B - O C       *
*****************************************************************
*
          IF L-604-TO-TYPE = 'OL'
            ADD 1 TO RT35-DUR-OL-X
            MOVE RT35-AMT-OL(RT35-ISS-OL-X,RT35-DUR-OL-X) TO W-604-RSV-35-RATE
          ELSE
            IF L-604-TO-TYPE = '20'
              ADD 1 TO RT35-DUR-20-X
              IF RT35-DUR-20-X > 21
                ESCAPE ROUTINE
              ELSE
                MOVE RT35-AMT-20(RT35-ISS-20-X,RT35-DUR-20-X) TO W-604-RSV-35-RATE
              END-IF
            ELSE
              ADD 1 TO RT35-DUR-30-X
              IF RT35-DUR-30-X > 31
                ESCAPE ROUTINE
              ELSE
                MOVE RT35-AMT-30(RT35-ISS-30-X,RT35-DUR-30-X) TO W-604-RSV-35-RATE
              END-IF
            END-IF
          END-IF
          COMPUTE ROUNDED W-604-RSV-35-TO-B = (W-604-RSV-35-RATE *
            (L-604-FAC-AMT / 1000))
*
          MOVE L-604-ISS-AGE TO IS-ISS-AGE
          MOVE W-604-LST-DUR TO IS-DURATION
          MOVE L-604-TO-TYPE TO IS-TYPE
*
          IF (IS-TYPE = '20' AND IS-DURATION > 20) OR
              (IS-TYPE = '30' AND IS-DURATION > 30)
            MOVE 'Y' TO IS-PAID-UP-SW
          ELSE
            MOVE 'N' TO IS-PAID-UP-SW
          END-IF
          MOVE L-604-FAC-AMT TO IS-FAC-AMT
          MOVE L-604-NEW-PRM TO IS-ANN-PREM
*
          PERFORM CALC-CURR-ACV
          MOVE IS-BEG-ACV TO W-604-RSV-VA-TO-B
*
          IF W-604-DUR-MON = 12
            MOVE W-604-RSV-35-TO-B TO W-604-RSV-35-TO-A
            MOVE W-604-RSV-VA-FRM-B TO W-604-RSV-VA-FRM-A
            MOVE W-604-RSV-VA-TO-B TO W-604-RSV-VA-TO-A
          ELSE
            COMPUTE ROUNDED W-604-RSV-35-TO-A = W-604-RSV-35-TO-A +
              (W-604-DUR-MON * ((W-604-RSV-35-TO-B - W-604-RSV-35-TO-A) / 12))
            COMPUTE ROUNDED W-604-RSV-VA-FRM-A = W-604-RSV-VA-FRM-A +
              (W-604-DUR-MON * ((W-604-RSV-VA-FRM-B - W-604-RSV-VA-FRM-A) / 12))
            COMPUTE ROUNDED W-604-RSV-VA-TO-A = W-604-RSV-VA-TO-A +
              (W-604-DUR-MON * ((W-604-RSV-VA-TO-B - W-604-RSV-VA-TO-A) / 12))
          END-IF
*
          ESCAPE BOTTOM
        END-REPEAT /* (SAG6A4.)
        AAF-50055-CALC-BEST-FOR-AMAA-OC.
        REPEAT
*
          MOVE W-604-RSV-35-TO-A TO L-604-RSV-35-DIFF
          MOVE W-604-RSV-VA-TO-A TO L-604-DB
          MOVE W-604-RSV-VA-FRM-A TO L-604-MIN-CSV
*
          COMPUTE L-604-RSV-VA-DIFF = W-604-RSV-VA-TO-A - W-604-RSV-VA-FRM-A
          ESCAPE ROUTINE
*
        END-REPEAT /*  (AAF-50055-CALC-BEST-FOR-AMAA-OC)
*
        ESCAPE BOTTOM
      END-REPEAT /*  (SAG6A5.)
*
      ESCAPE BOTTOM
    END-REPEAT  /*  (AAF-50024-COMPUTE-604-35-FROM-A-OC)
*
    ESCAPE BOTTOM
  END-REPEAT /*  (SAG6A6.)
*
*****************************************************************
* 5 0 0 5 6 - P R O C E S S - O L D - I S S U E - A P           *
*****************************************************************
*
  COMPUTE IS-BASIC-DB = 9000 * (L-604-FAC-AMT / 5000)
  PERFORM AAF-50400-CALC-OLD-MIN-CASH-VALUE
*
  MOVE L-604-ISS-AGE TO IS-ISS-AGE
  MOVE W-604-LST-DUR TO IS-DURATION
  MOVE L-604-FM-TYPE TO IS-TYPE
*
  IF (IS-TYPE = '20' AND IS-DURATION > 20) OR (IS-TYPE = '30' AND IS-DURATION > 30)
    MOVE 'Y' TO IS-PAID-UP-SW
  ELSE
    MOVE 'N' TO IS-PAID-UP-SW
  END-IF
*
  MOVE L-604-FAC-AMT TO IS-FAC-AMT
  MOVE L-604-OLD-PRM TO IS-ANN-PREM
  MOVE L-604-DB TO IS-WORK-DB
*
  PERFORM CALC-CURR-ACV
  MOVE IS-BEG-ACV TO W-604-RSV-VA-FRM-A
*
  PERFORM AAF-50300-CALC-SNGL-PREM-35
  MOVE W-604-SNG-PRM-35 TO W-604-RSV-35-TO-A
  MOVE L-604-ISS-AGE TO IS-ISS-AGE
  MOVE W-604-LST-DUR TO IS-DURATION
  MOVE 'Y' TO IS-PAID-UP-SW
  MOVE L-604-DB TO IS-WORK-DB
*
  PERFORM CALC-CURR-ACV
  MOVE IS-BEG-ACV TO W-604-RSV-VA-TO-A
*
  IF W-604-DUR-MON NE 0
    ADD 1 TO W-604-LST-DUR
    IF W-604-LST-DUR > 79 OR (L-604-ISS-AGE + W-604-LST-DUR > 96)
      ESCAPE ROUTINE
    END-IF
    MOVE L-604-ISS-AGE TO IS-ISS-AGE
    MOVE W-604-LST-DUR TO IS-DURATION
    MOVE L-604-FM-TYPE TO IS-TYPE
    IF (IS-TYPE = '20' AND IS-DURATION > 20) OR (IS-TYPE = '30' AND IS-DURATION > 30)
      MOVE 'Y' TO IS-PAID-UP-SW
    ELSE
      MOVE 'N' TO IS-PAID-UP-SW
    END-IF
    MOVE L-604-FAC-AMT TO IS-FAC-AMT
    MOVE L-604-OLD-PRM TO IS-ANN-PREM
    PERFORM CALC-CURR-ACV
    MOVE IS-BEG-ACV TO W-604-RSV-VA-FRM-B
    PERFORM AAF-50300-CALC-SNGL-PREM-35
    MOVE W-604-SNG-PRM-35 TO W-604-RSV-35-TO-B
    MOVE L-604-ISS-AGE TO IS-ISS-AGE
    MOVE W-604-LST-DUR TO IS-DURATION
    MOVE 'Y' TO IS-PAID-UP-SW
    MOVE L-604-DB TO IS-WORK-DB
    PERFORM CALC-CURR-ACV
    MOVE IS-BEG-ACV TO W-604-RSV-VA-TO-B
    IF W-604-DUR-MON = 12
      MOVE W-604-RSV-35-TO-B TO W-604-RSV-35-TO-A
      MOVE W-604-RSV-VA-FRM-B TO W-604-RSV-VA-FRM-A
      MOVE W-604-RSV-VA-TO-B TO W-604-RSV-VA-TO-A
    ELSE
      COMPUTE ROUNDED W-604-RSV-35-TO-A = W-604-RSV-35-TO-A +
        (W-604-DUR-MON * ((W-604-RSV-35-TO-B - W-604-RSV-35-TO-A) / 12))
      COMPUTE ROUNDED W-604-RSV-VA-FRM-A = W-604-RSV-VA-FRM-A +
        (W-604-DUR-MON * ((W-604-RSV-VA-FRM-B - W-604-RSV-VA-FRM-A) / 12))
      COMPUTE ROUNDED W-604-RSV-VA-TO-A = W-604-RSV-VA-TO-A +
        (W-604-DUR-MON * ((W-604-RSV-VA-TO-B - W-604-RSV-VA-TO-A) / 12))
    END-IF
  END-IF
*
  MOVE W-604-RSV-35-TO-A TO L-604-RSV-35-DIFF
*
*     BELOW 2 MOVES IS ONLY FOR DEBUGGING
  MOVE W-604-RSV-VA-TO-A TO L-604-DB
  MOVE W-604-RSV-VA-FRM-A TO L-604-MIN-CSV
*
  COMPUTE L-604-RSV-VA-DIFF = W-604-RSV-VA-TO-A - W-604-RSV-VA-FRM-A
  ESCAPE ROUTINE
*
END-REPEAT /* (SAG6A7.)
*
*****************************************************************
* 5 0 0 6 6 - C H E C K - 6 0 4 - N E W - I S S U E - T Y P E   *
*****************************************************************
*
IF NOT (L-604-TO-TYPE = 'SP' OR = 'AP')
*
  COMPUTE W-604-POL-MONTHS = (W-604-LST-DUR * 12) + W-604-DUR-MON
  IF L-604-NEW-PRM > L-604-OLD-PRM
    COMPUTE ROUNDED IS-WORK-B = ((L-604-NEW-PRM / 12) - (L-604-OLD-PRM / 12)) *
      (((#ONE-DOT-CONST ** W-604-POL-MONTHS) - 1) / (1 - (1 / #ONE-DOT-CONST)))
    COMPUTE ROUNDED W-604-RSV-VA-TO-A = (IS-WORK-B * 1)
    MOVE W-604-RSV-VA-TO-A TO L-604-RSV-VA-DIFF
    PERFORM AAF-50500-CALC-NEW-MIN-CASH-VALUE
    PERFORM AAF-50600-CALC-MIN-CSV-DIFF
    IF IS-WORK-C > W-604-RSV-VA-TO-A
      MOVE IS-WORK-C TO W-604-RSV-VA-TO-A
    END-IF
  ELSE
    COMPUTE W-604-RSV-VA-TO-A = (((L-604-OLD-PRM / 12) -
      (L-604-NEW-PRM / 12)) * W-604-POL-MONTHS) * -1
    MOVE W-604-RSV-VA-TO-A TO L-604-RSV-VA-DIFF
    PERFORM AAF-50500-CALC-NEW-MIN-CASH-VALUE
    PERFORM AAF-50600-CALC-MIN-CSV-DIFF
    IF IS-WORK-C > W-604-RSV-VA-TO-A
      MOVE IS-WORK-C TO W-604-RSV-VA-TO-A
    END-IF
  END-IF
*
  MOVE -99999.99 TO L-604-RSV-35-DIFF
  MOVE W-604-RSV-VA-TO-A TO L-604-RSV-VA-DIFF
  PERFORM AAF-50500-CALC-NEW-MIN-CASH-VALUE
*
  ESCAPE ROUTINE
*
END-IF
*
*****************************************************************
* 5 0 0 6 7 - C H E C K - N E W - I S S U E - S P - A P         *
*****************************************************************
*
IF L-604-TO-TYPE = 'SP'
  COMPUTE IS-BASIC-DB = 9000 * (L-604-FAC-AMT / 5000)
*
  PERFORM AAF-50200-CALC-SNGL-PREM-VA
  MOVE W-604-SNG-PRM-VA TO W-604-RSV-VA-TO-A
  IF W-604-DUR-MON NE 0
    ADD 1 TO W-604-LST-DUR
    IF W-604-LST-DUR > 79 OR (L-604-ISS-AGE + W-604-LST-DUR > 96)
      ESCAPE ROUTINE
    END-IF
    PERFORM AAF-50200-CALC-SNGL-PREM-VA
    MOVE W-604-SNG-PRM-VA TO W-604-RSV-VA-TO-B
    COMPUTE ROUNDED W-604-RSV-VA-TO-A = W-604-RSV-VA-TO-A +
      (W-604-DUR-MON * ((W-604-RSV-VA-TO-B - W-604-RSV-VA-TO-A) / 12))
    SUBTRACT 1 FROM W-604-LST-DUR
  END-IF
*
  MOVE -99999.99 TO L-604-RSV-35-DIFF
  MOVE W-604-RSV-VA-TO-A TO L-604-RSV-VA-DIFF
  PERFORM AAF-50500-CALC-NEW-MIN-CASH-VALUE
*
  ESCAPE ROUTINE
END-IF
*
*****************************************************************
* 5 0 0 7 4 - P R O C E S S - N E W - I S S U E - A P           *
*****************************************************************
*
COMPUTE IS-BASIC-DB = 9000 * (L-604-FAC-AMT / 5000)
*
PERFORM AAF-50200-CALC-SNGL-PREM-VA
MOVE W-604-SNG-PRM-VA TO W-604-RSV-VA-TO-A
*
ADD 1 TO W-604-LST-DUR
IF W-604-LST-DUR > 79 OR (L-604-ISS-AGE + W-604-LST-DUR > 96)
  ESCAPE ROUTINE
END-IF
*
PERFORM AAF-50200-CALC-SNGL-PREM-VA
MOVE W-604-SNG-PRM-VA TO W-604-RSV-VA-TO-B
IF W-604-DUR-MON NE 0
  SUBTRACT 1 FROM W-604-LST-DUR
  COMPUTE ROUNDED W-604-RSV-VA-TO-A = W-604-RSV-VA-TO-A +
    (W-604-DUR-MON * ((W-604-RSV-VA-TO-B - W-604-RSV-VA-TO-A) / 12))
END-IF
*
MOVE -99999.99 TO L-604-RSV-35-DIFF
MOVE W-604-RSV-VA-TO-A TO L-604-RSV-VA-DIFF
PERFORM AAF-50500-CALC-NEW-MIN-CASH-VALUE
*
END-SUBROUTINE
*
*****************************************************************
*          5 0 2 0 0 - C A L C - S N G L - P R E M - V A        *
*****************************************************************
*
DEFINE SUBROUTINE AAF-50200-CALC-SNGL-PREM-VA
*
IF IS-BASIC-DB > L-604-DB
  MOVE IS-BASIC-DB TO L-604-DB
END-IF
*
IF L-604-ISS-DT > 19860630
  MOVE L-604-ISS-AGE TO SNG-PRM-AFT-X
  ADD W-604-LST-DUR TO SNG-PRM-AFT-X
  ADD 1 TO SNG-PRM-AFT-X
  IF SNG-PRM-AFT-X < 1
    MOVE 1 TO SNG-PRM-AFT-X
    COMPUTE ROUNDED W-604-SNG-PRM-VA = (SNG-PRM-AFT(SNG-PRM-AFT-X) * L-604-FAC-AMT)
  ELSE
    COMPUTE ROUNDED W-604-SNG-PRM-VA = (SNG-PRM-AFT(SNG-PRM-AFT-X) * L-604-FAC-AMT)
  END-IF
ELSE
  MOVE L-604-ISS-AGE TO SNG-PRM-BEF-X
  ADD W-604-LST-DUR TO SNG-PRM-BEF-X
  SUBTRACT 14 FROM SNG-PRM-BEF-X
  IF SNG-PRM-BEF-X < 1
    MOVE 1 TO SNG-PRM-BEF-X
    COMPUTE ROUNDED W-604-SNG-PRM-VA = (SNG-PRM-BEF(SNG-PRM-BEF-X) * L-604-DB)
  ELSE
    COMPUTE ROUNDED W-604-SNG-PRM-VA = (SNG-PRM-BEF(SNG-PRM-BEF-X) * L-604-DB)
  END-IF
END-IF
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-50300-CALC-SNGL-PREM-35
*
MOVE L-604-ISS-AGE TO C-V-PD-UP-X
ADD W-604-LST-DUR TO C-V-PD-UP-X
SUBTRACT 14 FROM C-V-PD-UP-X
COMPUTE ROUNDED W-604-SNG-PRM-35 = (CSH-VL-PD-UP(C-V-PD-UP-X) * L-604-FAC-AMT)
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-50400-CALC-OLD-MIN-CASH-VALUE
*
IF L-604-TO-TYPE = 'AP'
  MOVE 'Y' TO IS-PAID-UP-SW
ELSE
  MOVE 'N' TO IS-PAID-UP-SW
END-IF
*
MOVE L-604-FAC-AMT TO IS-FAC-AMT
MOVE W-604-LST-DUR TO IS-DURATION
MOVE L-604-ISS-AGE TO IS-ISS-AGE
IF L-604-TO-TYPE = 'AP'
  MOVE 'OL' TO IS-TYPE
ELSE
  MOVE L-604-TO-TYPE TO IS-TYPE
END-IF
PERFORM CALC-OLD-MIN-CV
*
MOVE IS-MIN-CSV TO L-604-NEW-LST-MCV
MOVE IS-NXT-YR-MIN-CSV TO L-604-NEW-NXT-MCV
COMPUTE ROUNDED IS-WORK-C = IS-MIN-CSV
  + (((IS-NXT-YR-MIN-CSV - IS-MIN-CSV) / +12) * W-604-DUR-MON)
MOVE IS-WORK-C TO L-604-NEW-CUR-MCV
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-50500-CALC-NEW-MIN-CASH-VALUE
*
IF L-604-TO-TYPE = 'AP' OR L-604-TO-TYPE = 'SP'
  MOVE 'Y' TO IS-PAID-UP-SW
ELSE
  MOVE 'N' TO IS-PAID-UP-SW
END-IF
*
MOVE L-604-FAC-AMT TO IS-FAC-AMT
MOVE W-604-LST-DUR TO IS-DURATION
MOVE L-604-ISS-AGE TO IS-ISS-AGE
IF L-604-TO-TYPE = 'SP'
  MOVE 'OL' TO IS-TYPE
ELSE
  IF L-604-TO-TYPE = 'AP'
    MOVE L-604-FM-TYPE TO IS-TYPE
  ELSE
    MOVE L-604-TO-TYPE TO IS-TYPE
  END-IF
END-IF
*
MOVE L-604-RSV-VA-DIFF TO IS-LUMP-PREM
MOVE L-604-NEW-PRM TO IS-ANN-PREM
IF L-604-TO-TYPE = 'SP'
  MOVE 0 TO IS-MIN-CSV
ELSE
  MOVE L-604-MIN-CSV TO IS-MIN-CSV
END-IF
PERFORM CALC-NEW-MIN-CV
*
MOVE IS-MIN-CSV TO L-604-NEW-LST-MCV
MOVE IS-NXT-YR-MIN-CSV TO L-604-NEW-NXT-MCV
COMPUTE ROUNDED IS-WORK-C = IS-MIN-CSV
  + (((IS-NXT-YR-MIN-CSV - IS-MIN-CSV) / +12) * (W-604-DUR-MON + 1))
MOVE IS-WORK-C TO L-604-NEW-CUR-MCV
MOVE IS-NET-PREM-RATIO TO L-604-NEW-NPR
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-50600-CALC-MIN-CSV-DIFF
*
IF L-604-NEW-PRM > L-604-OLD-PRM
  IF L-604-MIN-CSV < 0 OR L-604-NEW-LST-MCV < 0
    RESET IS-WORK-C
  ELSE
    COMPUTE IS-WORK-C = L-604-NEW-LST-MCV - L-604-MIN-CSV
  END-IF
ELSE
  IF L-604-MIN-CSV < 0 OR L-604-NEW-LST-MCV < 0
    MOVE -99999.99 TO IS-WORK-C
  ELSE
    COMPUTE IS-WORK-C = (L-604-MIN-CSV - L-604-NEW-LST-MCV) * -1
  END-IF
END-IF
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-70000-CALC-606
*
MOVE L-606-ISS-DT TO W-ISS-DT
*
IF W-ISS-DD > 1
  MOVE 1 TO W-ISS-DD
  ADD 1 TO W-ISS-MM
  IF W-ISS-MM > 12
    MOVE 1 TO W-ISS-MM
    ADD 1 TO W-ISS-YYYY
  END-IF
END-IF
*
SUBTRACT W-ISS-YYYY FROM L-606-TD-YYYY GIVING W-606-LST-DUR
IF L-606-TD-MM < W-ISS-MM
  SUBTRACT 1 FROM W-606-LST-DUR
END-IF
RESET W-606-DUR-MON
*
REPEAT UNTIL W-ISS-MM = L-606-TD-MM
  PERFORM AAF-70100-BUMP-606-DUR-MON
END-REPEAT
*
MOVE L-606-ID-MM TO IS-ISS-MM
MOVE L-606-ID-DD TO IS-ISS-DD
MOVE L-606-ID-YYYY TO IS-ISS-YYYY
*
MOVE L-606-ISS-AGE TO C-V-PD-UP-X
ADD W-606-LST-DUR TO C-V-PD-UP-X
SUBTRACT 14 FROM C-V-PD-UP-X
MOVE C-V-PD-UP-X TO SNG-PRM-AFT-X
ADD 14 TO SNG-PRM-AFT-X
ADD 1 TO SNG-PRM-AFT-X
*
IF L-606-ISS-DT < 19860701
  MOVE CSH-VL-PD-UP(C-V-PD-UP-X) TO CVPU-A
  ADD 1 TO C-V-PD-UP-X
  MOVE CSH-VL-PD-UP(C-V-PD-UP-X) TO CVPU-B
ELSE
  MOVE SNG-PRM-AFT(SNG-PRM-AFT-X) TO CVPU-A
  ADD 1 TO SNG-PRM-AFT-X
  MOVE SNG-PRM-AFT(SNG-PRM-AFT-X) TO CVPU-B
END-IF
*
IF L-606-ID-DD = 01 OR L-606-ID-DD > L-606-TD-DD
  COMPUTE ROUNDED IS-WORK-B = ((((L-606-NXT-MN-CV - L-606-LST-MN-CV) / 12) *
    W-606-DUR-MON) + L-606-LST-MN-CV - L-606-LN-INT) / CVPU-A
  COMPUTE ROUNDED IS-WORK-C = ((((L-606-NXT-MN-CV - L-606-LST-MN-CV) / 12) *
    W-606-DUR-MON) + L-606-LST-MN-CV - L-606-LN-INT) / CVPU-B
ELSE
  COMPUTE ROUNDED IS-WORK-B = ((((L-606-NXT-MN-CV - L-606-LST-MN-CV) / 12) *
    (W-606-DUR-MON + 1)) + L-606-LST-MN-CV - L-606-LN-INT)  / CVPU-A
  COMPUTE ROUNDED IS-WORK-C = ((((L-606-NXT-MN-CV - L-606-LST-MN-CV) / 12) *
    (W-606-DUR-MON + 1)) + L-606-LST-MN-CV - L-606-LN-INT) / CVPU-B
END-IF
*
IF L-606-ID-DD = 01 OR L-606-ID-DD > L-606-TD-DD
  COMPUTE ROUNDED IS-WORK-B
    = IS-WORK-B - (((IS-WORK-B - IS-WORK-C) / +12) * W-606-DUR-MON)
ELSE
  COMPUTE ROUNDED IS-WORK-B
    = IS-WORK-B - (((IS-WORK-B - IS-WORK-C) / +12) * (W-606-DUR-MON + 1))
END-IF
IF IS-WORK-B < 0
  RESET L-606-NEW-FAC-AMT
ELSE
  COMPUTE ROUNDED L-606-NEW-FAC-AMT = IS-WORK-B * 1
END-IF
*
MOVE 'Y' TO IS-PAID-UP-SW
MOVE L-606-NEW-FAC-AMT TO IS-FAC-AMT
MOVE W-606-LST-DUR TO IS-DURATION
MOVE L-606-ISS-AGE TO IS-ISS-AGE
MOVE L-606-TYPE TO IS-TYPE
IF L-606-ISS-DT > 19860630
  PERFORM CALC-NEW-MIN-CV
ELSE
  PERFORM CALC-OLD-MIN-CV
END-IF
*
MOVE IS-MIN-CSV TO L-606-NEW-LST-MCV
MOVE IS-NXT-YR-MIN-CSV TO L-606-NEW-NXT-MCV
IF L-606-ID-DD = 01 OR L-606-ID-DD > L-606-TD-DD
  COMPUTE ROUNDED IS-WORK-C
    = IS-MIN-CSV + (((IS-NXT-YR-MIN-CSV - IS-MIN-CSV) / 12) * (W-606-DUR-MON))
ELSE
  COMPUTE ROUNDED IS-WORK-C
    = IS-MIN-CSV + (((IS-NXT-YR-MIN-CSV - IS-MIN-CSV) / 12) * (W-606-DUR-MON + 1))
  MOVE IS-WORK-C TO L-606-NEW-CUR-MCV
END-IF
*
ADD 1 TO W-606-LST-DUR
MOVE L-606-ISS-AGE TO IS-ISS-AGE
MOVE W-606-LST-DUR TO IS-DURATION
MOVE L-606-TYPE TO IS-TYPE
MOVE 1 TO IS-PROJ-DUR
MOVE W-606-DUR-MON TO IS-MNTH-IND
*
PERFORM CALC-RPU-VA-DEATH-BENE
IF L-606-ISS-DT < 19860701
  COMPUTE ROUNDED L-606-NEW-DB = (L-606-ACV - IS-ZSPEXP-CURR) / IS-SNG-PREM-CURR
  IF L-606-NEW-DB LE L-606-NEW-FAC-AMT
    MOVE L-606-NEW-FAC-AMT TO L-606-NEW-DB
  END-IF                                                   /*SAG 20060302 RH1 AS
ELSE
  COMPUTE ROUNDED L-606-NEW-DB = L-606-ACV / IS-SNG-PREM-CURR
  IF L-606-NEW-DB LE L-606-NEW-FAC-AMT
    MOVE L-606-NEW-FAC-AMT TO L-606-NEW-DB
  END-IF
**END-IF                                                   /*SAG 20060302 RH1 AS
END-IF
SUBTRACT 1 FROM W-606-LST-DUR
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-70100-BUMP-606-DUR-MON
*
ADD 1 TO W-606-DUR-MON
ADD 1 TO W-ISS-MM
IF W-ISS-MM > 12
  MOVE 1 TO W-ISS-MM
  ADD 1 TO W-ISS-YYYY
END-IF
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-90000-CALC-999
*
IF L-999-SMOK-FLAG = 'S'
  MOVE 2 TO TD-SMOK-X
ELSE
  MOVE 1 TO TD-SMOK-X
END-IF
*
MOVE L-999-ISS-AGE TO TD-ISS-X
ADD 1 TO TD-ISS-X
MOVE L-999-DURATION TO TD-ATT-X
IF TD-ATT-X > 16
  COMPUTE IS-WORK-A = L-999-DURATION - 16
  ADD IS-WORK-A TO TD-ISS-X
  MOVE 16 TO TD-ATT-X
  IF TD-ISS-X > 86
    MOVE 86 TO TD-ISS-X
  END-IF
END-IF
MOVE TD-MORT(TD-SMOK-X,TD-ISS-X,TD-ATT-X) TO L-999-MORT-RATE
*
END-SUBROUTINE
*
********************************************************************************
*
