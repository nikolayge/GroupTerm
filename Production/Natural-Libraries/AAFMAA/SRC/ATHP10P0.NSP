* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
*
******** CONVERTED TO NATURAL BY SOFTWARE AG ON 13/09/05 ********
*
* COMPOPT:RENT,RES,OPT,LIB
* LINKOPT:RENT,AMODE=31,RMODE=ANY
*  PROGRAM-ID. ATHP10P0.
* INSTALLATION.  AMAA
* AUTHOR. PAUL C MCDONALD.
* REMARKS.                                           VERSION 10.8
*                10.3  UP FICHE COUNT FROM 7  TO 21
*                      THIS WILL PUT 20 FICHE PER TAPE
*                10.4  UP FICHE COUNT FORM 21 TO 999
*                      NEW FICHE MACHINE DOES NOT REQUIRE TAPES
*                      TO END ON FICHE OR FRAME
*                10.5  PRINT NOTICES IN 3 GROUPS :
*                  1 SECT=R REMINDER NOTICES (NAME SEQ)
*                  2 SECT=S NO ADDR NOTICES (NAME SEQ)
*                  3 SECT=T PREM DUE/LOAN/PAID-UP NOTICES
*                                    (ZIP/NAME SEQ)   02/06/80 DW
*                10.6 MEMBERSHIP REPORT              06/10/80 EAR
*                10.7 CREATE ACT-REG TAPE SUMMARY    11/29/80 EAR
*                10.8 PUT CN NUMBER IN ACT HIST FICH HEADER
*                                                    01/13/81 DRW
*                10.9 ADD SECT=Q PREMIUM REMINDER NOTICE-NO ADDR
*                                                    0684JK
*                88.10 MAKE FICHE LOOK LIKE REPORT 1088JK
*
*        EACH REPORT IS SORTED IN ORDER ON THE INPUT PRINT TAPE.
*        THIS PROGRAM WILL SELECT ANY OR ALL REPORTS OFF IN A
*        SINGLE RUN. THE CONTROL CARDS MUST BE IN THE SAME SEQ.
*        AS THE PRINT TAPE.
*        ATHP10P0 IS A MAIN PROGRAM WHICH CALLS IN SUBPROGRAMS
*        AS THEY ARE NEEDED.
*        ALL OF THE I/O IS DONE IN THIS MAIN PROGRAM BUT THE
*        REPORTS ARE FORMATTED IN SEPARATE SUB-PROGRAMS.
*        REPORT CODE     REPORT NAME         SUB-PROGRAM NAME
* NOT USED   A        BIRTHDAY CAMPAIGN          ATHP10P8
*            B        ACCT REG ID ORDER          ATHP10P1
* NOT USED   C        ACCT REG ACCT ORDER        ATHP10P1
*            D        ACTION PENDING REG         ATHP10P9
*            F        FILE MAINT REG ID ORDER    ATHP10P2
*            G        DIRECT BILLING REG         ATHP10P6
* NOT USED   H        TERMINATION REG            ATHP10P7
* NOT USED   I        NEW BUSINESS REG           ATHP10P3
* NOT USED   J        LOAN REG NAME ORDER        ATHP10P5
* NOT USED  Q,R-U     NOTICES                    ATHP10P4
* NOT USED      Q       - PREMIUM REMINDER NOTICES NO ADDR
* NOT USED      R WAS K - PREMIUM REMINDER NOTICES (NAME SEQ)
* NOT USED      S WAS   - NO ADDR NOTICES (NO ZIP) (NAME SEQ)
* NOT USED      T WAS L - PREM DUE/LOAN INT/PAID UP
* NOT USED            M/N           NOTICES (ZIP/NAME SEQ)
* NOT USED      U WAS P - NOTICE TOTALS
* NOT USED      V MEMBERSHIP AWARDS
*
* Converted to Natural by SAGUK ( UKCGC ) on 13/09/05                     *
* ---------------------------------------------------                     *
* Notes:                                                                  *
*     TAPE-IN      ASSIGNED TO - WORK FILE 1 - not physically defined yet *
*     CARD-IN      ASSIGNED TO - WORK FILE 2 - not physically defined yet *
*     PRINT-OUT    ASSIGNED TO - WORK FILE 3 - not physically defined yet *
*     CARD-OUT     ASSIGNED TO - WORK FILE 4 - not physically defined yet *
*     FICH-OUT     ASSIGNED TO - WORK FILE 5 - not physically defined yet *
*     FICHTAPE-OUT ASSIGNED TO - WORK FILE 6 - not physically defined yet *
*                                                                         *
******************** MODIFICATIONS ****************************************
*  Tag    Date     Who    Description
*  RH1  12/09/2005 RH1-SS Modified the call to external object ABEND &
*                    replaced with copycode GABNDCX6.
** RHC  02/06/2006 SAG-AB Replaced PDA with GDA and Callnats with Fetches to
**                 programs that were formerly Cobol calls.
***************************************************************************
DEFINE DATA
** RHC  02/06/2006 SAG-AB START incorporated into Global
GLOBAL USING ATHG10P0
**PARAMETER
**01 MICRO-CONTROL
**  02 FILLER-15                      (A2)
**  02 PARM-DATE                      (A10)
**  02 REDEFINE PARM-DATE
**    03 PD-MM                        (N2)
**    03 PD-X1                        (A1)
**    03 PD-DD                        (N2)
**    03 PD-X2                        (A1)
**    03 PD-YYYY                      (N4)
**  02 MICRO-RESP                     (A3)
**  02 REDEFINE MICRO-RESP
**    03 MICRO1-2                     (A2)
**    03 MICRO3                       (A1)
**  02 PARM-PROC                      (A1)
**  02 REDEFINE PARM-PROC
**    03 PROC-ON-OFF                  (N1)
** RHC  02/06/2006 SAG-AB END
LOCAL USING GONERLXX                        /* SAG 12092005 RH1 SS
LOCAL
**                RHC  02/06/2006 SAG-AB START  incorporated into Global
**01 TIN1
**  02 TIN1-SECT                      (A1)
**  02 TIN1-ACCT                      (A3)
**  02 FILLER-1                       (A280)
**01 REDEFINE TIN1
**  02 TIN1/ALPHA                     (A284)
**                RHC  02/06/2006 SAG-AB END
01 TIN2
  02 FILLER-2                       (A6)
  02 TIN2-1HDR                      (A4)
  02 FILLER-3                       (A5)
  02 TIN2-NAME                      (A5)
  02 TIN2-DATE                      (A6)
  02 FILLER-4                       (A258)
01 CDIN1
  02 CDIN1-CODE                     (A1)
  02 CDIN1-DATA                     (A49)
  02 FILLER-5                       (A30)
01 CDOUT1                           (A81)
01 REDEFINE CDOUT1
  02 CDOUT1-CC                      (A1)
  02 CDOUT1-DATA                    (A80)
**               RHC  02/06/2006 SAG-AB START   incorporated into Global
**01 POUT1
**  02 POUT1-CC                       (A1)
**  02 POUT1-DATA
**    03 POUT1-10P1-CN                (A2)
**    03 POUT1-10P1-NUM               (A5)
**    03 FILLER-6                     (A125)
**01 REDEFINE POUT1
**  02 POUT1/ALPHA                    (A132)
**               RHC  02/06/2006 SAG-AB END
01 FOUT1                            (A133)
01 REDEFINE FOUT1
  02 FOUT1-CC                       (A1)
  02 FOUT1-DATA                     (A132)
01 FICH                             (A284)
01 PAN-VALET                        (A24) INIT <'003ATHP10P0  03/28/89'>
01 ABEND-CODE                       (P9)
01 MSG1                             (A1)
01 OPEN-MIC-SW                      (A1) INIT <'0'>
01 HD-ACCT                          (A3)
01 AC1-P0                           (P11)
01 AC3                              (P11)
01 CURRDT                           (P4)
**01 MICRO-RESPONSE                   (A3)    /* RHC  02/06/2006 SAG-AB
01 DATE-CODE                        (A1)
01 DATE1                            (A6)
01 DATE2                            (A8)
**01 GO-CODE                          (P2)    /* RHC  02/06/2006 SAG-AB
**                RHC  02/06/2006 SAG-AB START   incorporated into Global
**01 COMMUN1
**  02 ACT-CODE                       (A1)
**  02 RUN-DATE                       (A8)
**  02 REDEFINE RUN-DATE
**    03 RD-MM                        (N2)
**    03 RD-DD                        (N2)
**    03 RD-YYYY                      (N4)
**    03 REDEFINE RD-YYYY
**      04 RD-CT                      (N2)
**      04 RD-YY                      (N2)
**  02 RUN-ORDER                      (A1)
**                RHC  02/06/2006 SAG-AB END
01 PHASE-NAME
  02 PN1                            (A8)
01 TITLE-LN
  02 FILLER-8                       (A2)
  02 TITLE-COUNT                    (N2)
  02 FILLER-9                       (A3)
  02 TITLE-NAME
    03 TITLE-NM-SHORT               (A13)
    03 TITLE-NM-CN                  (A5)
  02 REDEFINE TITLE-NAME
    03 TITLE-NAME/ALPHA             (A18)
  02 FILLER-10                      (A2)
**02 TITLE-MO                       (N2) (EM=ZZ)                  /* EDS 08/23/2006
  02 TITLE-MO                       (A2)                          /* EDS 08/23/2006
  02 FILLER-11                      (A1) INIT <'-'>
**02 TITLE-YR                       (N2) (EM=ZZ)                  /* EDS 08/23/2006
  02 TITLE-YR                       (A2)                          /* EDS 08/23/2006
01 REDEFINE TITLE-LN
  02 TITLE-LN/ALPHA                 (A32)
01 TOTLN1
  02 FILLER-12                      (A1) INIT <'1'>
  02 FILLER-13                      (A17) INIT <'  PRINT TAPE IN'>
**02 TOTAM2                         (N11) (EM=ZZ,ZZZ,ZZZ,ZZ9)     /* EDS 08/23/2006
  02 TOTAM2                         (A14)                         /* EDS 08/23/2006
  02 FILLER-14                      (A17) INIT <' PRINT TAPE OUT'>
**02 TOTAM3                         (N11) (EM=ZZ,ZZZ,ZZZ,ZZ9)     /* EDS 08/23/2006
  02 TOTAM3                         (A14)                         /* EDS 08/23/2006
01 REDEFINE TOTLN1
  02 TOTLN1/ALPHA                   (A63)
**                 RHC  02/06/2006 SAG-AB START  incorporated into Global
**01 LINK-WORD
**  02 FRAME-COUNT                    (P4) INIT <1>
**  02 FICHE-COUNT                    (P4)
**  02 MAX-FICHE                      (P4) INIT <999>
**  02 MAX-LINES                      (P4) INIT <64>
**  02 LINE-COUNT                     (P4) INIT <1>
**  02 FRAME-KEY                      (A25)
**  02 TITLE-OPTION                   (A1) INIT <'Y'>
**  02 MF-TITLE                       (A32)
**  02 TITLE-UP                       (N1) INIT <2>
**  02 ADVANCE-CODE                   (A2) INIT <'F'>
**  02 PRINT-LINE
**    03 PL-CC                        (A1)
**    03 PL-DATA                      (A132)
**  02 FZ-ACTION-SW                   (N1)
**01 ACTNG-REG                        (A1)
**01 REDEFINE ACTNG-REG
**  02 ACT-SUM-PROC                   (N1)
**                 RHC  02/06/2006 SAG-AB END
01 FIRST-TIME-THRU                  (L)
1 trace-count       (n3)
END-DEFINE
**                 RHC  02/06/2006 SAG-AB START initialize some GDA fields
FRAME-COUNT        := 1
MAX-FICHE          := 999
MAX-LINES          := 64
LINE-COUNT         := 1
TITLE-OPTION       := 'Y'
TITLE-UP           := 2
ADVANCE-CODE       := 'F'
INDEX1             := 1
P10P1.LINE-CT      := 66
P10P1.MAX-LINE     := 54
P10P2.LINE-CT      := 66
P10P2.MAX-LINE     := 57
**                 RHC  02/06/2006 SAG-AB END
IF MICRO1-2 = 'NO'
  RESET MICRO3
END-IF
MOVE MICRO-RESP TO MICRO-RESPONSE
MOVE PARM-PROC TO ACTNG-REG
IF NOT (PARM-PROC = '1' OR = '2')
*   MOVE 1775 TO ABEND-CODE             /* SAG 12092005 RH1 SS - BEGIN
*   PERFORM CALL-ABEND
  RESET #BATCH-LITERAL-1 #BATCH-LITERAL-4
  #BATCH-LITERAL-1 := 'PARM-PROC'
  INCLUDE GABNDCX6
  TERMINATE                             /* SAG 12092005 RH1 SS - END
END-IF
*
**IF PARM-PROC = '1'
**  DEFINE WORK FILE 5 'dummy'          /* check - not required - investigate file
**END-IF
**DEFINE WORK FILE 1 'dummy'            /* check - not required - investigate file
**DEFINE WORK FILE 2 'dummy'            /* check - not required - investigate file
**DEFINE WORK FILE 3 'dummy'            /* check - not required - investigate file
**DEFINE WORK FILE 4 'dummy'            /* check - not required - investigate file
**DEFINE WORK FILE 6 'dummy'            /* check - not required - investigate file
*
** DEFINE WORK FILES ARE SET UP TO ALLOW ONLINE EXECUTION FOR DEBUGGING
**DEFINE WORK FILE 1 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATHJW/SRPTEXTR.TXT'
**DEFINE WORK FILE 2 '/usr/SAG/AAFMAA/batch/workfiles/ATHLB/ATHI022A.TXT'
**DEFINE WORK FILE 3 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATHPD/P10REPT.TXT'
**DEFINE WORK FILE 4 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATHJW/MROLLEX.TXT'
**DEFINE WORK FILE 5 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATHMF/FMDC010A.TXT'
**DEFINE WORK FILE 6 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATHPD/P10ACCTT.TXT'
**
IF NOT (MICRO-RESPONSE = 'YES' OR = 'NO')
  WRITE 'ATHP10P0   PARM NOT YES OR NO'
  MOVE 1776 TO ABEND-CODE
  ESCAPE ROUTINE
END-IF
*
MOVE PD-MM TO RD-MM
MOVE PD-DD TO RD-DD
MOVE PD-YYYY TO RD-YYYY
IF MICRO-RESPONSE = 'YES'
**MOVE RD-MM TO TITLE-MO                    /* EDS 08/23/2006
  MOVE EDITED RD-MM (EM=ZZ) TO TITLE-MO     /* EDS 08/23/2006
**MOVE RD-YY TO TITLE-YR                    /* EDS 08/23/2006
  MOVE EDITED RD-YY (EM=ZZ) TO TITLE-YR     /* EDS 08/23/2006
END-IF
PERFORM READTPA
*
GET-CARDA.
REPEAT
*
  PERFORM READCDA
*
  DECIDE ON FIRST VALUE OF CDIN1-CODE
    VALUE 'A'
      PERFORM BIRTHDAY-CAMPAIGN-REG
    VALUE 'B'
      PERFORM ACCOUNTING-REG-ID-ORDER
    VALUE 'C'
      PERFORM ACCOUNTING-REG-ACCOUNT-ORDER
    VALUE 'D'
      PERFORM ACTION-PENDING-REG
    VALUE 'F'
      PERFORM FILE-MAINTENANCE-REG
    VALUE 'G'
      PERFORM DIRECT-BILLING-REG
    VALUE 'H'
      PERFORM TERMINATION-TRANSFER-REG
    VALUE 'I'
      PERFORM NEW-BUSINESS-REG
    VALUE 'J'
      PERFORM LOAN-REG
    VALUE 'Q','R','S','T','U'
      PERFORM NOTICES
    VALUE 'V'
      PERFORM MEMBERSHIP-AWARDS
    NONE VALUES
*       WRITE 'ATHP10P0   INVALID CONTROL CARD'     /* SAG 12092005 RH1 SS - BEGIN
*       MOVE 20 TO ABEND-CODE
*       PERFORM CALL-ABEND
      RESET #BATCH-LITERAL-1 #BATCH-LITERAL-4
      #BATCH-LITERAL-1 := 'CDIN1-CODE'
      #BATCH-LITERAL-4 := 'ATHP10P0   INVALID CONTROL CARD'
      INCLUDE GABNDCX6
      TERMINATE                                     /* SAG 12092005 RH1 SS - END
  END-DECIDE
*
END-REPEAT
*
***********************************************
*
DEFINE SUBROUTINE BIRTHDAY-CAMPAIGN-REG
*
MOVE 'B' TO ACT-CODE
MOVE TRUE TO FIRST-TIME-THRU
*
REPEAT
*
  IF FIRST-TIME-THRU
    MOVE FALSE TO FIRST-TIME-THRU
  ELSE
    REPEAT
      IF TIN1-SECT-10P0 < 'A'
        PERFORM READTPA
        ESCAPE TOP
      END-IF
      IF TIN1-SECT-10P0 > 'A'
        MOVE 'C' TO ACT-CODE
        ESCAPE BOTTOM
      END-IF
      MOVE 'A' TO ACT-CODE
      ESCAPE BOTTOM
    END-REPEAT
  END-IF
*
  REPEAT
    PERFORM CALLP8 /* check - doesn't do anything !
    IF ACT-CODE = 'M'
      ESCAPE ROUTINE
    END-IF
    IF ACT-CODE = 'K'
      ESCAPE BOTTOM
    END-IF
    IF ACT-CODE NE 'L'
      PERFORM READTPA
      ESCAPE BOTTOM
    END-IF
    PERFORM PRINTA
    MOVE 'D' TO ACT-CODE
  END-REPEAT
  ESCAPE BOTTOM
*
END-REPEAT
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE ACCOUNTING-REG-ID-ORDER
*
ARIA.
REPEAT
*
  REPEAT
    MOVE '2' TO RUN-ORDER
    MOVE 'B' TO ACT-CODE
**  IF MICRO-RESPONSE NE 'NO '  /* SAG-AB 20060810
    IF MICRO-RESPONSE EQ 'NO '  /* SAG-AB 20060810
      ESCAPE BOTTOM (ARIA.)
    END-IF
    IF PARM-PROC = '2'
      ESCAPE BOTTOM            /* GO TO ROLL-PROC.
    END-IF
    IF OPEN-MIC-SW = '1'
      MOVE 3 TO FZ-ACTION-SW
      PERFORM FZONK-RTN
      MOVE 1 TO TITLE-COUNT
      MOVE 'ACCOUNTING-ID--NO-' TO TITLE-NAME/ALPHA
      MOVE TITLE-LN/ALPHA TO MF-TITLE
      ESCAPE BOTTOM (ARIA.)
    ELSE
      MOVE '1' TO OPEN-MIC-SW
      PERFORM INIT-LINK-RTN
      MOVE 1 TO TITLE-COUNT
      MOVE 'ACCOUNTING-ID--NO-' TO TITLE-NAME/ALPHA
      MOVE TITLE-LN/ALPHA TO MF-TITLE
      MOVE 1 TO FZ-ACTION-SW
      PERFORM FZONK-RTN
      ESCAPE BOTTOM (ARIA.)
    END-IF
  END-REPEAT
*
**   ROLL-PROC.
  REPEAT
    IF OPEN-MIC-SW = '1'
      MOVE 3 TO FZ-ACTION-SW
      PERFORM FZONK-RTN
      MOVE 1 TO TITLE-COUNT
      MOVE 'ACCT HIST -CN' TO TITLE-NM-SHORT
      MOVE TITLE-LN/ALPHA TO MF-TITLE
      ESCAPE BOTTOM (ARIA.)
    ELSE
      MOVE '1' TO OPEN-MIC-SW
      PERFORM INIT-LINK-RTN
      MOVE 1 TO TITLE-COUNT
      MOVE 'ACCT HIST -CN' TO TITLE-NM-SHORT
      MOVE TITLE-LN/ALPHA TO MF-TITLE
      MOVE 1 TO FZ-ACTION-SW
      PERFORM FZONK-RTN
      ESCAPE BOTTOM
    END-IF
  END-REPEAT
*
  ESCAPE BOTTOM (ARIA.)
END-REPEAT /* (ARIA.)
*
MOVE TRUE TO FIRST-TIME-THRU
*
** TEST-SECTA.
REPEAT
  IF FIRST-TIME-THRU               /* FROM ARIA-NO-MIC
    MOVE FALSE TO FIRST-TIME-THRU
  ELSE
    IF TIN1-SECT-10P0 < 'B'
      PERFORM READTPA
      ESCAPE TOP
    END-IF
    IF TIN1-SECT-10P0 > 'B'
      MOVE 'E' TO ACT-CODE
    ELSE
      IF PARM-PROC = '1'
        MOVE TIN1/ALPHA TO FICH
        WRITE WORK FILE 5 FICH
      END-IF
      MOVE 'A' TO ACT-CODE
    END-IF
  END-IF
*
** ENTRY-SUBPROG1A.
  REPEAT
    PERFORM CALLP1
**
    IF ACT-CODE = 'L'
      IF FRAME-COUNT = 002 AND LINE-COUNT = 6 AND MICRO-RESPONSE = 'YES' AND PARM-PROC = '2'
        MOVE POUT1-10P1-NUM TO TITLE-NM-CN
        MOVE TITLE-LN/ALPHA TO MF-TITLE
      END-IF
      PERFORM PRINTA
      MOVE 'D' TO ACT-CODE
      ESCAPE TOP           /* GO TO ENTRY-SUB-PROG1A
    END-IF
**
    IF ACT-CODE = 'J'
      PERFORM READTPA
      ESCAPE BOTTOM        /* GO TO TEST-SECTA
    END-IF
**
    IF ACT-CODE = 'K'
      ESCAPE BOTTOM        /* GO TO TEST-SECTA
    END-IF
**
    IF ACT-CODE = 'M'
      ESCAPE ROUTINE       /* GO TO GET-CARDA
    END-IF
**
    IF ACT-CODE = 'N'
      MOVE 'C' TO ACT-CODE
      ESCAPE TOP           /* GO TO ENTRY-SUB-PROG1A
    END-IF
**
    PERFORM READTPA
    ESCAPE BOTTOM          /* GO TO TEST-SECTA
  END-REPEAT
*
**ESCAPE BOTTOM   /* SAG-AB 20060810
END-REPEAT
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE ACCOUNTING-REG-ACCOUNT-ORDER
*
MOVE '1' TO RUN-ORDER
MOVE 'B' TO ACT-CODE
MOVE TRUE TO FIRST-TIME-THRU
*
ARAA.
REPEAT
  IF FIRST-TIME-THRU
    MOVE FALSE TO FIRST-TIME-THRU
  ELSE
    ARA-TEST-SECT.
    REPEAT
      REPEAT
        IF TIN1-SECT-10P0 < 'C'
          PERFORM READTPA
          ESCAPE TOP
        END-IF
        IF TIN1-SECT-10P0 > 'C'
          MOVE 'E' TO ACT-CODE
          ESCAPE BOTTOM (ARA-TEST-SECT.)
        END-IF
        IF TIN1-ACCT-10P0 NE HD-ACCT
          IF HD-ACCT = '   '
            MOVE TIN1-ACCT-10P0 TO HD-ACCT
            ESCAPE BOTTOM
          END-IF
          MOVE 'E' TO ACT-CODE
          ESCAPE BOTTOM (ARA-TEST-SECT.)
        END-IF
        ESCAPE BOTTOM
      END-REPEAT
      MOVE 'A' TO ACT-CODE
      ESCAPE BOTTOM (ARA-TEST-SECT.)
    END-REPEAT /* (ARA-TEST-SECT.)
  END-IF
*
  ARA-ENTRY-SUB-PROG1A.
  REPEAT
    ARAF.
    REPEAT
      REPEAT
        PERFORM CALLP1
        DECIDE ON FIRST VALUE OF ACT-CODE
          VALUE 'L'
            PERFORM PRINTA
            MOVE 'D' TO ACT-CODE
            ESCAPE TOP
          VALUE 'J'
            ESCAPE BOTTOM
          VALUE 'K'
            ESCAPE BOTTOM (ARA-ENTRY-SUB-PROG1A.)
          VALUE 'M'
            ESCAPE ROUTINE
          VALUE 'N'
            IF TIN1-SECT-10P0 > 'C'
              MOVE 'C' TO ACT-CODE
            ELSE
              MOVE TIN1-ACCT-10P0 TO HD-ACCT
              MOVE 'A' TO ACT-CODE
            END-IF
            ESCAPE BOTTOM (ARAF.)
          NONE VALUES
            ESCAPE BOTTOM
        END-DECIDE
      END-REPEAT
*
      PERFORM READTPA
      ESCAPE BOTTOM (ARA-ENTRY-SUB-PROG1A.)
*
    END-REPEAT /* (ARAF.)
  END-REPEAT /* (ARA-ENTRY-SUB-PROG1A.)
  ESCAPE BOTTOM
END-REPEAT /* (ARAA.)
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE ACTION-PENDING-REG
*
MOVE 'B' TO ACT-CODE
MOVE TRUE TO FIRST-TIME-THRU
*
REPEAT
  IF FIRST-TIME-THRU
    MOVE FALSE TO FIRST-TIME-THRU
  ELSE
    REPEAT
      IF TIN1-SECT-10P0 < 'D'
        PERFORM READTPA
        ESCAPE TOP
      END-IF
      IF TIN1-SECT-10P0 > 'D'
        MOVE 'C' TO ACT-CODE
        ESCAPE BOTTOM
      END-IF
      MOVE 'A' TO ACT-CODE
      ESCAPE BOTTOM
    END-REPEAT
  END-IF
*
  REPEAT
    PERFORM CALLP9
    DECIDE ON FIRST VALUE OF ACT-CODE
      VALUE 'L'
        PERFORM PRINTA
        MOVE 'D' TO ACT-CODE
        ESCAPE TOP
      VALUE 'K'
        ESCAPE BOTTOM
      VALUE 'M'
        ESCAPE ROUTINE
      NONE VALUES
        PERFORM READTPA
        ESCAPE BOTTOM
    END-DECIDE
  END-REPEAT
  ESCAPE BOTTOM
*
END-REPEAT
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE MEMBERSHIP-AWARDS
*
MOVE 'B' TO ACT-CODE
MOVE TRUE TO FIRST-TIME-THRU
*
REPEAT
*
  IF FIRST-TIME-THRU
    MOVE FALSE TO FIRST-TIME-THRU
  ELSE
    REPEAT
      IF TIN1-SECT-10P0 < 'V'
        PERFORM READTPA
        ESCAPE TOP
      END-IF
      IF TIN1-SECT-10P0 > 'V'
        MOVE 'C' TO ACT-CODE
        ESCAPE BOTTOM
      END-IF
      MOVE 'A' TO ACT-CODE
      ESCAPE BOTTOM
    END-REPEAT
  END-IF
*
  REPEAT
    PERFORM CALLP10 /* check - doesn't do anything !!
    IF ACT-CODE = 'L'
      PERFORM PRINTA
      MOVE 'D' TO ACT-CODE
      ESCAPE TOP
    END-IF
    IF ACT-CODE = 'K'
      ESCAPE BOTTOM
    END-IF
    IF ACT-CODE = 'M'
      ESCAPE ROUTINE
    END-IF
    PERFORM READTPA
    ESCAPE BOTTOM
  END-REPEAT
  ESCAPE BOTTOM
*
END-REPEAT
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE FILE-MAINTENANCE-REG
*
** FM-INITA.
MOVE 'B' TO ACT-CODE
IF MICRO-RESPONSE NE 'NO '
  IF OPEN-MIC-SW = '1'
    MOVE 3 TO FZ-ACTION-SW
    PERFORM FZONK-RTN
    MOVE 1 TO TITLE-COUNT
    MOVE 'FILE-MAINT-REG' TO TITLE-NAME/ALPHA
    MOVE TITLE-LN/ALPHA TO MF-TITLE
  ELSE
    MOVE '1' TO OPEN-MIC-SW
    PERFORM INIT-LINK-RTN
    MOVE 1 TO TITLE-COUNT
    MOVE 'FILE-MAINT-REG' TO TITLE-NAME/ALPHA
    MOVE TITLE-LN/ALPHA TO MF-TITLE
    MOVE 1 TO FZ-ACTION-SW
    PERFORM FZONK-RTN
  END-IF
END-IF
*
** FM-NO-MIC.
REPEAT
  REPEAT
    PERFORM CALLP2
**
    DECIDE ON FIRST VALUE OF ACT-CODE
      VALUE 'L'
        PERFORM PRINTA
        MOVE 'D' TO ACT-CODE
        ESCAPE TOP
      VALUE 'K'
        ESCAPE BOTTOM
      VALUE 'M'
        ESCAPE ROUTINE
      NONE VALUES             /* INCLUDES 'J'
        PERFORM READTPA
        ESCAPE BOTTOM
    END-DECIDE
  END-REPEAT
  REPEAT
    IF TIN1-SECT-10P0 < 'F'
      PERFORM READTPA
      ESCAPE TOP
    END-IF
    ESCAPE BOTTOM
  END-REPEAT
  IF TIN1-SECT-10P0 > 'F'
    MOVE 'C' TO ACT-CODE
  ELSE
    MOVE 'A' TO ACT-CODE
  END-IF
**ESCAPE BOTTOM              /* SAG-AB 20060810
END-REPEAT
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE DIRECT-BILLING-REG
*
MOVE 'M10A0P6C' TO PN1
MOVE 'B' TO ACT-CODE
IF MICRO-RESPONSE NE 'NO '
  IF OPEN-MIC-SW = '1'
    MOVE 3 TO FZ-ACTION-SW
    PERFORM FZONK-RTN
    MOVE 1 TO TITLE-COUNT
    MOVE 'DIRECT-BILLING-REG' TO TITLE-NAME/ALPHA
    MOVE TITLE-LN/ALPHA TO MF-TITLE
  ELSE
    MOVE '1' TO OPEN-MIC-SW
    PERFORM INIT-LINK-RTN
    MOVE 1 TO TITLE-COUNT
    MOVE 'DIRECT BILLING REG' TO TITLE-NAME/ALPHA
    MOVE TITLE-LN/ALPHA TO MF-TITLE
    MOVE 1 TO FZ-ACTION-SW
    PERFORM FZONK-RTN
  END-IF
END-IF
*
REPEAT
  REPEAT
    PERFORM CALLP6
    IF ACT-CODE = 'L'
      PERFORM PRINTA
      MOVE 'D' TO ACT-CODE
      ESCAPE TOP
    END-IF
    IF ACT-CODE = 'K'
      ESCAPE BOTTOM
    END-IF
    IF ACT-CODE = 'M'
      ESCAPE ROUTINE
    END-IF
    PERFORM READTPA
    ESCAPE BOTTOM
  END-REPEAT
  REPEAT
    IF TIN1-SECT-10P0 < 'G'
      PERFORM READTPA
      ESCAPE TOP
    END-IF
    ESCAPE BOTTOM
  END-REPEAT
  IF TIN1-SECT-10P0 > 'G'
    MOVE 'C' TO ACT-CODE
  ELSE
    MOVE 'A' TO ACT-CODE
  END-IF
  ESCAPE BOTTOM
END-REPEAT
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE TERMINATION-TRANSFER-REG
*
MOVE 'B' TO ACT-CODE
*
REPEAT
*
  REPEAT
    PERFORM CALLP7 /* check - as doesn't do anything !!
    IF ACT-CODE = 'L'
      PERFORM PRINTA
      MOVE 'D' TO ACT-CODE
      ESCAPE TOP
    END-IF
    IF ACT-CODE = 'K'
      ESCAPE BOTTOM
    END-IF
    IF ACT-CODE = 'M'
      ESCAPE ROUTINE
    END-IF
    IF ACT-CODE = 'N'
      PERFORM PUNCHA
      MOVE 'E' TO ACT-CODE
      ESCAPE TOP
    END-IF
    PERFORM READTPA
    ESCAPE BOTTOM
  END-REPEAT
*
  TRNB.
  REPEAT
    IF TIN1-SECT-10P0 < 'H'
      PERFORM READTPA
      ESCAPE TOP
    END-IF
    IF TIN1-SECT-10P0 > 'H'
      MOVE 'C' TO ACT-CODE
      ESCAPE BOTTOM
    END-IF
    MOVE 'A' TO ACT-CODE
    ESCAPE BOTTOM
  END-REPEAT
  ESCAPE BOTTOM
*
END-REPEAT
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE NEW-BUSINESS-REG
*
MOVE 'B' TO ACT-CODE
REPEAT
  REPEAT
    PERFORM CALLP3 /* check - as doesn't do anything !!
    IF ACT-CODE = 'L'
      PERFORM PRINTA
      MOVE 'D' TO ACT-CODE
      ESCAPE TOP
    END-IF
    IF ACT-CODE = 'K'
      ESCAPE BOTTOM
    END-IF
    IF ACT-CODE = 'M'
      ESCAPE ROUTINE
    END-IF
    PERFORM READTPA
    ESCAPE BOTTOM
  END-REPEAT
  REPEAT
    IF TIN1-SECT-10P0 < 'I'
      PERFORM READTPA
      ESCAPE TOP
    END-IF
    IF TIN1-SECT-10P0 > 'I'
      MOVE 'C' TO ACT-CODE
      ESCAPE BOTTOM
    END-IF
    MOVE 'A' TO ACT-CODE
    ESCAPE BOTTOM
  END-REPEAT
  ESCAPE BOTTOM
END-REPEAT
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE LOAN-REG
*
MOVE 'B' TO ACT-CODE
IF MICRO-RESPONSE NE 'NO '
  IF OPEN-MIC-SW = '1'
    MOVE 3 TO FZ-ACTION-SW
    PERFORM FZONK-RTN
    MOVE 1 TO TITLE-COUNT
    MOVE 'LOAN REGISTER' TO TITLE-NAME/ALPHA
    MOVE TITLE-LN/ALPHA TO MF-TITLE
  ELSE
    MOVE '1' TO OPEN-MIC-SW
    PERFORM INIT-LINK-RTN
    MOVE 1 TO TITLE-COUNT
    MOVE 'LOAN REGISTER' TO TITLE-NAME/ALPHA
    MOVE TITLE-LN/ALPHA TO MF-TITLE
    MOVE 1 TO FZ-ACTION-SW
    PERFORM FZONK-RTN
  END-IF
END-IF
*
REPEAT
  REPEAT
    PERFORM CALLP5 /* check - as deoesn't do anything !!
    IF ACT-CODE = 'L'
      PERFORM PRINTA
      MOVE 'D' TO ACT-CODE
      ESCAPE TOP
    END-IF
    IF ACT-CODE = 'K'
      ESCAPE BOTTOM
    END-IF
    IF ACT-CODE = 'M'
      ESCAPE ROUTINE
    END-IF
    PERFORM READTPA
    ESCAPE BOTTOM
  END-REPEAT
  REPEAT
    IF TIN1-SECT-10P0 < 'J'
      PERFORM READTPA
      ESCAPE TOP
    END-IF
    IF TIN1-SECT-10P0 > 'J'
      MOVE 'C' TO ACT-CODE
      ESCAPE BOTTOM
    END-IF
    MOVE 'A' TO ACT-CODE
    ESCAPE BOTTOM
  END-REPEAT
  ESCAPE BOTTOM
END-REPEAT
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE NOTICES
*
REPEAT
  IF PN1 = 'M10A0P4C'
    REPEAT
      IF CDIN1-CODE = 'U'
        MOVE 'C' TO ACT-CODE
        ESCAPE BOTTOM
      END-IF
      IF TIN1-SECT-10P0 < CDIN1-CODE
        PERFORM READTPA
        ESCAPE TOP
      END-IF
      IF TIN1-SECT-10P0 > CDIN1-CODE
        ESCAPE ROUTINE
      END-IF
      MOVE 'A' TO ACT-CODE
      ESCAPE BOTTOM
    END-REPEAT
  ELSE
    MOVE 'M10A0P4C' TO PN1
    MOVE 'B' TO ACT-CODE
  END-IF
*
  REPEAT
    PERFORM CALLP4 /* check - as it doesn't do anything !!
    IF ACT-CODE = 'L'
      PERFORM PRINTA
      MOVE 'D' TO ACT-CODE
      ESCAPE TOP
    END-IF
    IF ACT-CODE = 'K'
      ESCAPE BOTTOM
    END-IF
    IF ACT-CODE = 'M'
      ESCAPE ROUTINE
    END-IF
    IF ACT-CODE = 'N'
      PERFORM PUNCHA
      MOVE 'E' TO ACT-CODE
      ESCAPE TOP
    END-IF
    PERFORM READTPA
    ESCAPE BOTTOM
  END-REPEAT
  ESCAPE BOTTOM
END-REPEAT
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE READCDA
*
READ WORK FILE 2 ONCE CDIN1
AT END OF FILE
  REPEAT
**  IF TIN1-SECT-10P0 = '9'
    IF TIN1-SECT-10P0 = 'Z'
**    MOVE AC1-P0 TO TOTAM2                               /* EDS 08/23/2006
      MOVE EDITED AC1-P0 (EM=ZZ,ZZZ,ZZZ,ZZ9) TO TOTAM2    /* EDS 08/23/2006
**    MOVE AC3 TO TOTAM3                                  /* EDS 08/23/2006
      MOVE EDITED AC3 (EM=ZZ,ZZZ,ZZZ,ZZ9) TO TOTAM3       /* EDS 08/23/2006
      MOVE TOTLN1/ALPHA TO POUT1/ALPHA
      PERFORM PRINTA
      IF OPEN-MIC-SW = '1'
        MOVE 4 TO FZ-ACTION-SW
        PERFORM FZONK-RTN
      END-IF
      IF PARM-PROC = '1'
        CLOSE WORK FILE 5
      END-IF
      CLOSE WORK FILE 1
      CLOSE WORK FILE 2
      CLOSE WORK FILE 3
      CLOSE WORK FILE 4
      CLOSE WORK FILE 6
      ESCAPE MODULE
    END-IF
    PERFORM READTPA
  END-REPEAT
  ESCAPE BOTTOM
END-ENDFILE
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE READTPA
*
READ WORK FILE 1 ONCE TIN1-10P0
AT END OF FILE
  MOVE 'Y' TO MSG1
  IF MSG1 = 'Y'
**  MOVE '9' TO TIN1-SECT-10P0    /* SAG-AB 20060822
    MOVE 'Z' TO TIN1-SECT-10P0    /* SAG-AB 20060822
  END-IF
  ESCAPE ROUTINE
END-ENDFILE
ADD 1 TO AC1-P0
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE PRINTA
**                                         SAG-AB 20061010 START
IF MICRO-RESPONSE EQ 'YES'
  IF CDIN1-CODE EQ 'B' OR EQ 'F' OR EQ 'G' OR EQ 'J'
    PERFORM WRT-MIC-RTN
    IF CDIN1-CODE EQ 'J'
      WRITE WORK FILE 3 POUT1
    END-IF
    RESET POUT1
    ESCAPE ROUTINE
  END-IF
ELSE
  WRITE WORK FILE 3 POUT1
  RESET POUT1
  ESCAPE ROUTINE
END-IF
*
**REPEAT
**  IF MICRO-RESPONSE = 'YES'
**    REPEAT
**      IF NOT (CDIN1-CODE = 'B' OR = 'F' OR = 'G' OR = 'J')
**        ESCAPE BOTTOM
**      ELSE
**        PERFORM WRT-MIC-RTN
**        IF CDIN1-CODE = 'J'
**          ESCAPE BOTTOM
**        ELSE
**          RESET POUT1
**          ESCAPE ROUTINE
**        END-IF
**      END-IF
**    END-REPEAT
**  END-IF
**  WRITE WORK FILE 3 POUT1
**  RESET POUT1
**  ESCAPE ROUTINE
**END-REPEAT
**                                         SAG-AB 20061010 END
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE PUNCHA
*
WRITE WORK FILE 4 CDOUT1
MOVE 'V' TO CDOUT1
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE CALLP1
**         RHC  02/06/2006 SAG-AB START  incorporated into Global
FETCH RETURN 'ATHP10P1'
**CALLNAT 'ATHP10P1' TIN1 POUT1 COMMUN1 LINK-WORD
**  MICRO-RESPONSE ACTNG-REG GO-CODE
**         RHC  02/06/2006 SAG-AB END
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE CALLP2
**         RHC  02/06/2006 SAG-AB START  incorporated into Global
FETCH RETURN 'ATHP10P2'
**CALLNAT 'ATHP10P2' TIN1 POUT1 COMMUN1 LINK-WORD
**  MICRO-RESPONSE GO-CODE
**         RHC  02/06/2006 SAG-AB END
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE CALLP3
*
IGNORE /* temp - charlie
*    CALL 'ATHE10P3' USING TIN1 POUT1 COMMUN1.
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE CALLP4
*
IGNORE /* temp - charlie
*    CALL 'ATHE10P4' USING TIN1 POUT1 COMMUN1 CDOUT1.
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE CALLP5
*
IGNORE /* temp - charlie
*    CALL 'ATHE10P5' USING TIN1 POUT1 COMMUN1 LINK-WORD MICRO-RESPONSE.
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE CALLP6
*
IGNORE /* temp - charlie
**CALL 'ATHE10P6' TIN1 POUT1 COMMUN1 LINK-WORD MICRO-RESPONSE
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE CALLP7
*
IGNORE /* temp - charlie
*    CALL 'ATHE10P7' USING TIN1 POUT1 COMMUN1 CDOUT1.
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE CALLP8
*
IGNORE /* temp - charlie
*    CALL 'ATHE10P8' USING TIN1 POUT1 COMMUN1.
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE CALLP9
*
IGNORE /* temp - charlie
**CALL 'ATHE10P9' TIN1 POUT1 COMMUN1
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE CALLP10
*
IGNORE /* temp - charlie
*    CALL 'ATHE10PM' USING TIN1 POUT1 COMMUN1.
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE FZONK-RTN
*
IGNORE /* temp - charlie
*    CALL 'ATHE10PA' USING LINK-WORD.
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE INIT-LINK-RTN
*
MOVE 1 TO FRAME-COUNT LINE-COUNT
RESET FICHE-COUNT
MOVE 999 TO MAX-FICHE
MOVE 64 TO MAX-LINES
RESET FRAME-KEY
*
END-SUBROUTINE
*
***********************************************
*
DEFINE SUBROUTINE WRT-MIC-RTN
*
MOVE POUT1/ALPHA TO FOUT1
WRITE WORK FILE 6 FOUT1
RESET FOUT1
*
END-SUBROUTINE
*
***********************************************
*
* DEFINE SUBROUTINE CALL-ABEND           /* SAG 12092005 RH1 SS
* *
* CALL 'ABEND' USING ABEND-CODE
* ESCAPE MODULE
* *
* END-SUBROUTINE                         /* SAG 12092005 RH1 SS
*
END
