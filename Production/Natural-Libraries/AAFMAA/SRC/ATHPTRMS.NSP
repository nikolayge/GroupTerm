* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPTRMS -create termination download file for AFSC
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* PAM  03112005 PM1  Reset display fields for GRANKSXX
* DRW  04192007 DW2  Make file TAB delimited
* DRW  06012007 DW3 Make file 1 record per line
* DRW 08/03/2009 DW4 Chg Exclusions for Bill Saunders
* RSE  09302009 RE1  Change PROCESS-IND logic for Unification
* JNT  09232013 JT1  Address normalization
************************************************************************
*
DEFINE DATA
LOCAL USING ADDA0001                                      /* JT1
LOCAL
1 #TAB       (A1) INIT <H'09'>    /* DW2
*
1 #JCL-PARM       (A10)
1 REDEFINE #JCL-PARM
 2 #JCL-MM           (N2)
 2 #JCL-FILL-1       (A1)
 2 #JCL-DD           (N2)
 2 #JCL-FILL-2       (A1)
 2 #JCL-YYYY         (N4)
*
1 MD-V VIEW OF A-MBRSHIP-MTD-DETAIL
 2 ID-NUMBER
 2 REDEFINE ID-NUMBER
  3 ID-NUMBER-A     (A6)
 2 ENTRY-DATE
 2 REDEFINE ENTRY-DATE
  3 ENTRY-DATE-YYYYMM (N6)
  3 ENTRY-DATE-DD     (N2)
 2 CODE
 2 USER
 2 REC-ISN
*
1 ST-V VIEW OF A-STATUS
 2 ID-NUMBER
 2 PROCESS-IND
 2 INTRO-FLAG
 2 WIDOW-FLAG
 2 NAME
 2 SSN
*  2 ADDRESS-CHG-CODE                             /* JT1 
 2 CHIEF-OF-STAFF-IND
 2 RANK
 2 MILITARY-SERVICE
 2 MILITARY-STATUS
*  2 ADDRESS-1                                    /* JT1 start
*  2 ADDRESS-2
*  2 ADDRESS-3
*  2 ZIP-CODE
 2 MEMBER-CONTACT-ID                              /* JT1 end
 2 NUMBER-MEMBERSHIPS
*
1 AFSC-V VIEW OF A-STATUS
 2 SSN
 2 INTRO-FLAG
*
1 #ADDRESS-1   (A25)
1 #ADDRESS-2   (A25)
1 #ADDRESS-3   (A25)
1 #ZIP-CODE    (N9)
1 REDEFINE #ZIP-CODE
 2 #ZIP-CODE-5-A  (A5)
 2 #ZIP-CODE-4-A  (A4)
1 REDEFINE #ZIP-CODE
 2 #ZIP-CODE-5    (N5)
 2 #ZIP-CODE-4    (N4)
1 #FIRST-ADDRESS  (A25)
1 #SECOND-ADDRESS (A40)
1 #THIRD-ADDRESS  (A40)
1 #FORMATED-NAME (A45)
1 #DEAR-NAME     (A28)
1 #LAST-NAME    (A25)
1 #FIRST/MID    (A25)
1 #FIRST-NAME   (A25)
1 #MIDDLE-INIT  (A25)
1 #SUFFIX       (A25)
1 #EXTRA1      (A25)
1 #EXTRA2      (A25)
1 #EXTRA3      (A25)
1 #EXTRA4      (A25)
*
1 #HOLD-LAST-NAME        (A25)
1 REDEFINE #HOLD-LAST-NAME
 2 #HOLD-LAST-NAME-A     (A1/25)
*
1 #FULL-RANK       (A23)
1 #XXX            (A3) INIT <'XXX'>
1 #EDIT-INVALID (L)
1 #RANK-LITERAL (A23)
1 #HOLD-RANK-5  (A5)
1 #DISPL        (P2)
1 #PASS-COMMAND (A2)   INIT <'AD'>
*
1 #ERROR-MESSAGE  (A25)
1 #EXTRACTS       (P6)
*
1 #NUM-RECS          (P6)
1 #EXTRACT    (A125)
*
1 #CITY                 (A22)
1 #STATE                (A2)
1 #CITY-STATE            (A25)
1 #STATE-FULL            (A25)
1 REDEFINE #STATE-FULL
 2 #STATE-XX             (A2)
 2 #STATE-REMAINING      (A23)
1 #CITY-1                (A25)
1 #CITY-2                (A25)
1 #CITY-3                (A25)
1 #CITY-4                (A25)
1 #CITY-5                (A25)
1 #CITY-6                (A25)
1 #CITY-7                (A25)
1 #CITY-8                (A25)
1 #CITY-9                (A25)
*
1 #DISP-10         (A90)
1 #DISP-11         (A11)
1 #LAST-CN     (N6)
*
1 #MONTHS (A36) INIT <'JanFebMarAprMayJunJulAugSepOctNovDec'>
1 REDEFINE #MONTHS
 2 #MON  (A3/12)
*
1 #COUNTERS
 2 #RECS-READ        (P5)
 2 #RECS-WRITTEN     (P5)
 2 #LAPC-CNT         (P5)
 2 #CNT              (P5)
 2 #CNT-2            (P5)
 2 #CNT-3            (P5)
 2 #CNT-4            (P5)
 2 #CNT-5            (P5)
 2 #CNT-6            (P5)
 2 #I1               (I2)
 2 #I2               (I2)
 2 #I3               (I2)
 2 #I5               (I2)
*
1 #INVERSE-ENTRY-DATE  (N8)
1 REDEFINE #INVERSE-ENTRY-DATE
 2 #INVERSE-ENTRY-DATE-YYYYMM    (N6)
 2 #INVERSE-ENTRY-DATE-DD        (N2)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #CENT-A        (A2)
  2 #YY-A          (A2)
  2 #MM-A          (A2)
  2 #DD-A          (A2)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM        (N6)
  2 REDEFINE #YYYYMM
   3 #YYYY         (N4)
   3 #MM           (N2)
  2 #DD            (N2)
*
1 #LETTER-TABLE
  2 #1T (A26) INIT <'AaBbCcDdEeFfGgHhIiJjKkLlMm'>
  2 #2T (A26) INIT <'NnOoPpQqRrSsTtUuVvWwXxYyZz'>
1 REDEFINE #LETTER-TABLE
  2 #LETTER-OCC  (26)
    3 #UPPER     (A1)
    3 #LOWER     (A1)
*
1 #FOUND-AFSC   (L)
1 #NOT-FND      (L)
*
END-DEFINE
* * * * * * * REPORT HEADER * * * * * *
DEFINE WORK FILE 2 TYPE 'ASCII-COMPRESSED'  /* DW4
*
FORMAT  LS=133 PS=76
WRITE  TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
              'Exceptions'
               5X 'DATE: '*DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (2) LS=133 PS=76
WRITE (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
        'G/F Terminations this month'
               5X 'DATE: '*DAT4U 5X 'TIME: ' *TIMX
*
COMPRESS 'CN'     /* DW3
  #TAB  'DEAR-NAME'                             /* 2    /* DW2
   #TAB 'FORMATED-NAME'                         /* 3
   #TAB 'ADDRESS-1'                             /* 4
   #TAB 'SECOND-ADDRESS'                        /* 5
   #TAB 'CITY'                                  /* 6
   #TAB 'STATE'                                 /* 7
   #TAB 'ZIP-CODE'                              /* 8
   #TAB 'NUM-mbrships'                          /* 9
                             INTO #EXTRACT LEAVING NO
WRITE WORK FILE 2 #EXTRACT    /* DW3
*
READ WORK 1 ONCE RECORD #JCL-PARM
WRITE 'jcl-parm = ' #JCL-PARM
*
MOVE #JCL-MM TO #MM
MOVE #JCL-DD TO #DD
MOVE #JCL-YYYY TO #YYYY
SUBTRACT 1 FROM #MM
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
*
READ MD-V BY ENTRY-DATE FROM 5000000
  COMPUTE #INVERSE-ENTRY-DATE = 99999999 - ENTRY-DATE
*  DISPLAY #INVERSE-ENTRY-DATE CODE REC-ISN
  IF  (#INVERSE-ENTRY-DATE-YYYYMM = #YYYYMM)
    AND (CODE = 'C' OR = 'X'     /* csv
           OR = 'L' OR = 'S' OR = 'T' OR = 'U' OR = 'V') /* lap/rsgn
*   WRITE 'get using ISN =' REC-ISN
*
*   IF REC-ISN = 88127 OR = 88130
*     WRITE 'bypassing' REC-ISN
*     ESCAPE TOP
*   END-IF
*
*   GET ST-V REC-ISN
*   WRITE 'FOUND' ST-V.ID-NUMBER 'CODE =' CODE
*
    RESET #NOT-FND
    FIND ST-V WITH MEMBER-KEY = MD-V.ID-NUMBER-A
      IF NO RECORDS FOUND
        FIND ST-V WITH WIDOW-KEY = MD-V.ID-NUMBER-A
          IF NO RECORDS FOUND
            MOVE TRUE TO #NOT-FND
            WRITE 'ST NOT FOUND USING MD ID-NUMBER'  MD-V.ID-NUMBER
            WRITE   'MD CODE=' MD-V.CODE
            WRITE   'MD USER=' MD-V.USER
            WRITE   'MD ENTRY DATE=' MD-V.ENTRY-DATE
            WRITE   'MD REC-ISN=' MD-V.REC-ISN
          END-NOREC
        END-FIND
      END-NOREC
    END-FIND
*
    IF #NOT-FND
      ESCAPE TOP
    END-IF
*
    RESET #FOUND-AFSC
    FIND AFSC-V WITH SSN = ST-V.SSN
      IF AFSC-V.INTRO-FLAG = 'V'
        MOVE TRUE TO #FOUND-AFSC
        WRITE 'found AFSC rec for' ST-V.ID-NUMBER ST-V.SSN
      END-IF
    END-FIND
*
    IF  (NUMBER-MEMBERSHIPS = 0)  /* inactive members
*       OR (ST-V.INTRO-FLAG = 'O' OR = 'P' OR = 'Q')    /* DW4
*            AND (ST-V.ID-NUMBER LT 106030))
*     AND (WIDOW-FLAG = ' ')    /* alive
     AND (NOT ST-V.INTRO-FLAG = 'O' OR = 'P' OR = 'Q')    /* DW4
     AND (ST-V.INTRO-FLAG NE 'F')                    /* fso member
     AND (NOT ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G')
     AND (NOT #FOUND-AFSC)
*     AND (NOT PROCESS-IND = 'S' OR = 'C')           RE1
     AND (NOT PROCESS-IND = 'C')                  /* RE1
     AND NOT AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)   /* RE1 
*    AND (NOT ST-V.ADDRESS-CHG-CODE = 'U' OR = 'V')     /* DW4
*    AND (ST-V.ADDRESS-1 NE ' ')                        /* DW4
     AND (ST-V.ID-NUMBER NE #LAST-CN)  /* only 1 per member
      ADD 1 TO #CNT-2
      DISPLAY (2) #CNT-2 ST-V.ID-NUMBER CODE ST-V.INTRO-FLAG PROCESS-IND
      MOVE ST-V.ID-NUMBER TO #LAST-CN
      PERFORM BUILD-FILE
    END-IF
  END-IF
END-READ
*
WRITE (2) 'NUMBER MEMBERS  = ' #EXTRACTS
WRITE (2) 'NUMBER RECORDS  = ' #NUM-RECS
WRITE (2) 'Num LAPC"s      = ' #LAPC-CNT
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-FILE
* * * * * * * * * * * * * * * *
*
RESET #DISPL #RANK-LITERAL #HOLD-RANK-5                           /* PM1
CALLNAT 'GRANKSXX' #PASS-COMMAND ST-V.RANK ST-V.MILITARY-SERVICE
      #EDIT-INVALID #DISPL #RANK-LITERAL #HOLD-RANK-5
MOVE #RANK-LITERAL TO #FULL-RANK
*
IF #HOLD-RANK-5 = ' '
  MOVE ST-V.RANK TO #HOLD-RANK-5
END-IF
*
SEPARATE ST-V.NAME LEFT INTO #LAST-NAME #FIRST/MID
    #SUFFIX #EXTRA1 #EXTRA2 WITH DELIMITER ','
SEPARATE #FIRST/MID INTO #FIRST-NAME #MIDDLE-INIT
                         #EXTRA1 #EXTRA2 #EXTRA3 #EXTRA4
                                                WITH DELIMITER ' '
*
IF ST-V.CHIEF-OF-STAFF-IND = 'R' OR = 'Q' /* INDS RANK SECURITY
  RESET #HOLD-RANK-5
END-IF
*
COMPRESS #HOLD-RANK-5 #FIRST/MID #LAST-NAME INTO #FORMATED-NAME
*
IF #SUFFIX NE ' '
  COMPRESS #FORMATED-NAME ',' INTO #FORMATED-NAME LEAVING NO
  COMPRESS #FORMATED-NAME #SUFFIX INTO #FORMATED-NAME
END-IF
*
IF  (ST-V.MILITARY-STATUS = 'R')
 AND (ST-V.CHIEF-OF-STAFF-IND NE 'X')  /* recalled to act duty
 AND (NOT ST-V.RANK = 'MR' OR = 'MS' OR = 'MRS' OR = 'MIS'
                   OR = 'REV' OR = 'DR' OR = ' ')
  COMPRESS #FORMATED-NAME ', RET' INTO #FORMATED-NAME LEAVING NO
END-IF
*
MOVE #LAST-NAME TO #HOLD-LAST-NAME
PERFORM UPPER-LOWER
*
IF #FULL-RANK = ' '
  COMPRESS #FORMATED-NAME TO #DEAR-NAME
ELSE
  COMPRESS #FULL-RANK #HOLD-LAST-NAME INTO #DEAR-NAME
END-IF
*
* MOVE ST-V.ADDRESS-1 TO #ADDRESS-1                          /* JT1 start
* MOVE ST-V.ADDRESS-2 TO #ADDRESS-2
* MOVE ST-V.ADDRESS-3 TO #ADDRESS-3
* MOVE ST-V.ZIP-CODE  TO #ZIP-CODE
*
  RESET #PDA-ADDRESS
  MOVE 'P' TO #ADD-TYPE                                   
  #ADD-CONTACT-ID := ST-V.MEMBER-CONTACT-ID
  CALLNAT 'ADDN0001' #PDA-ADDRESS                            
  MOVE #ADD-LINE-1   TO #ADDRESS-1
  MOVE #ADD-LINE-2   TO #ADDRESS-2 #SECOND-ADDRESS
  MOVE #ADD-LINE-3   TO #ADDRESS-3 
  MOVE #ADD-ZIP-CODE TO #ZIP-CODE   
  MOVE #ADD-CITY     TO #CITY
  MOVE #ADD-STATE    TO #STATE
*
* IF #ADDRESS-3 = ' '
*   RESET  #SECOND-ADDRESS
*   MOVE #ADDRESS-2   TO #CITY-STATE
* ELSE
*   MOVE #ADDRESS-2   TO #SECOND-ADDRESS
*   MOVE #ADDRESS-3   TO #CITY-STATE
* END-IF
* *
* RESET #CITY-1 #CITY-2 #CITY-3 #CITY-4 #CITY-5
*       #CITY-6 #CITY-7 #CITY-8 #CITY-9
* SEPARATE #CITY-STATE INTO #CITY-1 #CITY-2 #CITY-3 #CITY-4 #CITY-5
*                           #CITY-6 #CITY-7 #CITY-8 #CITY-9
*                                         WITH DELIMITER ' '
* RESET #STATE-FULL #STATE #CITY
* *
* IF #CITY-9 NE ' '
*   MOVE #CITY-9 TO #STATE-FULL
*   MOVE #CITY-9 TO #STATE
*   RESET #CITY-9
* ELSE
*   IF #CITY-8 NE ' '
*     MOVE #CITY-8 TO #STATE-FULL
*     MOVE #CITY-8 TO #STATE
*     RESET #CITY-8
*   ELSE
*     IF #CITY-7 NE ' '
*       MOVE #CITY-7 TO #STATE-FULL
*       MOVE #CITY-7 TO #STATE
*       RESET #CITY-7
*     ELSE
*       IF #CITY-6 NE ' '
*         MOVE #CITY-6 TO #STATE-FULL
*         MOVE #CITY-6 TO #STATE
*         RESET #CITY-6
*       ELSE
*         IF #CITY-5 NE ' '
*           MOVE #CITY-5 TO #STATE-FULL
*           MOVE #CITY-5 TO #STATE
*           RESET #CITY-5
*         ELSE
*           IF #CITY-4 NE ' '
*             MOVE #CITY-4 TO #STATE-FULL
*             MOVE #CITY-4 TO #STATE
*             RESET #CITY-4
*           ELSE
*             IF #CITY-3 NE ' '
*               MOVE #CITY-3 TO #STATE-FULL
*               MOVE #CITY-3 TO #STATE
*               RESET #CITY-3
*             ELSE
*               IF #CITY-2 NE ' '
*                 MOVE #CITY-2 TO #STATE-FULL
*                 MOVE #CITY-2 TO #STATE
*                 RESET #CITY-2
*               ELSE
*                 MOVE #CITY-1 TO #CITY
*               END-IF
*             END-IF
*           END-IF
*         END-IF
*       END-IF
*     END-IF
*   END-IF
* END-IF
* *
* COMPRESS #CITY-1 #CITY-2 #CITY-3 #CITY-4 #CITY-5 #CITY-6 #CITY-7
*          #CITY-8 #CITY-9                  INTO #CITY
* *
* IF #STATE-REMAINING NE ' '
*   WRITE ST-V.ID-NUMBER 'TRUNCATED STATE' #CITY-STATE
*   MOVE #CITY-STATE TO #CITY
*   RESET #STATE
* END-IF                                                               /* JT1 end
*
COMPRESS   ST-V.ID-NUMBER                         /* 1
   #TAB #DEAR-NAME                             /* 2    /* DW2
   #TAB #FORMATED-NAME                         /* 3
   #TAB #ADDRESS-1                             /* 4
   #TAB #SECOND-ADDRESS                        /* 5
   #TAB #CITY                                  /* 6
   #TAB #STATE                                 /* 7
   #TAB #ZIP-CODE-5-A                          /* 8
                             INTO #EXTRACT LEAVING NO
IF #ZIP-CODE-4 NE 0
  COMPRESS #EXTRACT '-' #ZIP-CODE-4-A
                             INTO #EXTRACT LEAVING NO
END-IF
*
COMPRESS #EXTRACT
   #TAB ST-V.NUMBER-MEMBERSHIPS                /* 9
                             INTO #EXTRACT LEAVING NO
*
WRITE WORK FILE 2 #EXTRACT    /* DW3

ADD 1 TO #NUM-RECS
*
END-SUBROUTINE
*
* * * * * * * * * * *
DEFINE UPPER-LOWER
* * * * * * * * *
*
FOR #I1 2 TO 25
  FOR #I2 1 TO 26
    IF #HOLD-LAST-NAME-A (#I1) = #UPPER (#I2)
      MOVE #LOWER (#I2) TO #HOLD-LAST-NAME-A (#I1)
    END-IF
  END-FOR
END-FOR
*
END-SUBROUTINE
*
END
