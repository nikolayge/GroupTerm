* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
**************************************************************************
* PROGRAM-ID: NCOAEXTR                                                   *
*  clone of ATHPADME   ** DOWNLOAD all mbrs getting mail month           *
*           based on criteria - month end, year end, undeliverable       *
*           >>>>>>>>>>>> check name format at end                        *
**************************************************************************
*                       MODIFICATION LOG                                 *
* USER   DATE      TAG  REASON                                           *
* NGG  11/19/2010       Initial creation - revised version of ATHPADME   *
* TMT  10/07/2013  TT1  Address Normalization                            *
* TMT  06/12/2014  TT2  Contact Normalization -  Dob and Sex             *
* vxt  02/01/2017  vt1  /Ticket HD-3010/Add owners to the extracted list *
**************************************************************************
*
DEFINE DATA
**** LOCAL USING A-IFAFFL   /* PDA used with FUNCTION F-if-AFFL    /* vt1
LOCAL USING ADDA0001   /* Address parameter area ADDN0001
LOCAL USING CONTPDA1   /* TT2
LOCAL
*   THESE NUMBERS ARE BASED ON THE MONTH THAT WE ARE PROCESSING MONTHEND
*   #4-mon below was changed from #6-mon on 2/6/2003 as per KEC
*   TONI ------ call me before you run this
1 #NXT-MON        (N2) INIT <11> /* NEXT MONTH (ANN-FIRS & M-E NOTICES)
1 #4-MON          (N2) INIT <02> /* 4-MON FROM ME(B-DAY APPS)(ME + 4MONS)
1 #NXT-MON-PLUS-1 (N2) INIT <12> /* NXT-NXT MON(INT NOTICES)(#NXT-MON+1)
*
1 BLANK      (A1) CONST <' '>
1 YES        (A1) CONST <'Y'>
1 #TAB       (A1) INIT <H'09'>
1 #SKIP                 (L)
1 #GETTING-LOAN-BILL    (L)
1 #NO-PRIMARY-ADDRESS   (L)
1 #FOREIGN              (L)
1 #UNDELIVERABLE        (L)
1 #INACTIVE             (L)
1 #NO-POLICY            (L)
1 #APLICANT             (L)
1 #GETTING-PREMIUM-BILL (L)
1 #GETTING-FIR          (L)
1 #ADDR-PROTECT         (L)
1 #ALL-ACTIVE           (L)
1 #REASON               (A) DYNAMIC
1 #CONTACT-ID           (N8)
1  ST-V VIEW OF A-STATUS
  2 MEMBER-CONTACT-ID
  2 SPOUSE-CONTACT-ID
  2 ID-NUMBER
  2 WIDOW-FLAG
  2 PROCESS-IND
  2 INTRO-FLAG
  2 X-LOAN-AMOUNT   (9)
  2 X-LOAN-AMOUNT-2 (9)
  2 X-LOAN-DATE     (9)
  2 REDEFINE X-LOAN-DATE
    3 X-LOAN-DATE-OCC   (9)
      4 X-LOAN-DATE-YYYY  (N4)
      4 X-LOAN-DATE-MM    (N2)
      4 X-LOAN-DATE-DD    (N2)
  2 X-LOAN-DATE-2     (9)
  2 REDEFINE X-LOAN-DATE-2
    3 X-LOAN-DATE-OCC-2   (9)
      4 X-LOAN-DATE-YYYY-2  (N4)
      4 X-LOAN-DATE-MM-2    (N2)
      4 X-LOAN-DATE-DD-2    (N2)
  2 NUMBER-MEMBERSHIPS
  2 STATUS             (9)
  2 ISSUE-DATE         (9)
  2 PAID-TO-DATE       (9)
  2 REDEFINE PAID-TO-DATE
    3 PD-TO-OCC         (9)
      4 PD-TO-YYYY  (N4)
      4 PD-TO-MM    (N2)
      4 PD-TO-DD    (N2)
  2 MODE               (9)
  2 PLAN               (9)
  2 SMOKER-FLAG        (9)
  2 FACE-AMOUNT        (9)
  2 CONV-DURATION      (9)
  2 OWNERSHIP-FLAG     (9)
  2 policy-id          (9)              /* vt1
*
1 #J              (I2)
1 #i             (i2)                   /* vt1
1 #ZIP-CODE       (N9)
1 REDEFINE #ZIP-CODE
  2 ZIP-CODE-5    (N5)
  2 ZIP-CODE-4    (N4)
1 REDEFINE #ZIP-CODE
  2 ZIP-CODE-5-A  (A5)
  2 ZIP-CODE-4-A  (A4)
1 #EXTRACT-125    (A125)
1 #FIRST-ADDRESS  (A75)
1 #SECOND-ADDRESS (A75)
1 #REC-OVERFLOW   (A) DYNAMIC
1 #ID-NUMBER      (A10)
1 #owner-cn       (n6)                  /* vt1
*
1 CONT   VIEW OF A-CONTACTS             /* vt1 \/
  2 contact-id
  2 FIRST-NAME
  2 MIDDLE-NAME
  2 LAST-NAME                           /* vt1 /\
*
1 CONTACT  VIEW OF A-CONTACTS
  2 FIRST-NAME
  2 MIDDLE-NAME
  2 LAST-NAME
1 A-ADD-REL VIEW OF A-ADDRESS-RELATIONSHIP
  2 PREVENT-OVER-IND       (A1)
  2 RETURNED-MAIL-IND      (A1)
*
1 #FIRST-MID      (A25)
1 #NUM-RECS       (I4)
1 #OVFL           (A1)
1 #PARM-RECORD    (A40)  1 REDEFINE #PARM-RECORD
  2 #PARM-DATE      (N8) 2 redefine #PARM-DATE    /* EXTRACT DATE
    3 #YYYY         (N4)
    3 #MM           (N2)
    3 #DD           (N2)
  2 #PARM-FILL-1    (A1)
  2 #PARM-ADDR-CODE (A1)   /* ADDRESS CHANGE CODE 'P' OR = 'G' OR = 'E'
  2 #PARM-FILL-2    (A1)
  2 #PARM-PROC-TYPE (A3)   /* TYPE OF RUN (AUT=AUDIT TRAIL)
*                          /*             (NAT=NOT AUDIT TRAIL)
  2 #PARM-FILL-3    (A1)
  2 #PARM-UNDL-FIX  (A10)  /* (UNDLIV-FIX  OR NORMAL-FIX)
  2 #PARM-FILL-4    (A1)
  2 #TRACE          (A1)
  2 #PARM-FILL-5    (A1)
  2 #RUN-TYPE       (A1)    /* A = ALL ACTIVE M = MONTHLY H = HARRIS UNDELIVERABLE
*
1 DATE-OF-BIRTH              (N8.0)        /* TT2 BEGIN
1 REDEFINE DATE-OF-BIRTH
  2 DOB-YYYY  (N4)
  2 DOB-MM    (N2)
  2 DOB-DD    (N2)
1 DATE-OF-BIRTH-SP            (N8.0)
1 REDEFINE DATE-OF-BIRTH-SP
  2 DOB-YYYY-SP  (N4)
  2 DOB-MM-SP    (N2)
  2 DOB-DD-SP    (N2)             /* TT2 END
1 SPOUSE-SEX             (A1)              /* TT1
1 #cnt-owners         (n7)           /* vt1
LOCAL USING GONERLXX
*
END-DEFINE
*
DEFINE WORK FILE 1 TYPE 'ASCII-COMPRESSED'
DEFINE WORK FILE 2 TYPE 'ASCII-COMPRESSED'

/*  ======
* DEFINE WORK FILE 1 '/usr/SAG/tmp/NCOAextract.TXT'
*   TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 2 '/usr/SAG/tmp/NCOAreject.TXT'
*   TYPE 'ASCII-COMPRESSED'
* DEFINE WORK FILE 3 '/usr/SAG/tmp/NCOAowners.TXT'
*   TYPE 'ASCII-COMPRESSED'
* *
PERFORM GET-PARMS
*    Only for trace of specific record (ID NUMBER)
*             =====
IF *USER = 'guentch' or= 'nguentch'
    AND #TRACE = YES
  INPUT ST-V.ID-NUMBER
  ST-V.ID-NUMBER := 12359
  IF ST-V.ID-NUMBER > 0
    FIND ST-V WITH ID-NUMBER = ST-V.ID-NUMBER
      #ID-NUMBER := ST-V.ID-NUMBER
      PERFORM FILTER
      PERFORM COLLECT-DATA
      PERFORM COLLECT-DATA-S
      PERFORM TRACE-DATA
      PRINT
        / '#ADD-TYPE' #ADD-TYPE
        / '#ADD-FORMAT-TYPE-CD' #ADD-FORMAT-TYPE-CD
        / '#ADD-VALID-IND' #ADD-VALID-IND
        / '#ADD-RETURNED-MAIL' #ADD-RETURNED-MAIL
    END-FIND
    ESCAPE ROUTINE
  END-IF
END-IF
*
READ ST-V BY ID-NUMBER FROM 001900
*
  for #i 1 9                                                  /* vt1 \/
    #owner-cn := get-policy-owner(<st-v.policy-id(#i)>)
    if #run-type = 'A'                                         
      if #owner-cn ne 0 and #owner-cn ne st-v.id-number
        write work 3 #owner-cn
        add 1 to #cnt-owners
      end-if
    else                                                       
      if (mode(#i) = 'A' or = 'S' or = 'Q' or = 'M') and       
          ( status(#i) = 'D') and
          ( #owner-cn ne 0 ) and
          (#owner-cn ne st-v.id-number)
        write work 3 #owner-cn
        add 1 to #cnt-owners
      end-if
    end-if                                                      
  end-for                                                    /* vt1 /\
  #ID-NUMBER := ST-V.ID-NUMBER
  PERFORM FILTER
  IF #SKIP
    PERFORM COLLECT-DATA
    WRITE WORK FILE 2 #EXTRACT-125
    RESET #REASON
    ESCAPE TOP
  END-IF
*
  PERFORM COLLECT-DATA  /* Primary Address
  WRITE WORK FILE 1 #EXTRACT-125
  ADD 1 TO #NUM-RECS

*
  IF #TRACE = YES
    PERFORM TRACE-DATA
  END-IF
*
  at end of data                                            /* vt1 \/
    write 'total owners extracted ' #cnt-owners /
      'regular CN extarcted'   #num-recs
  end-enddata                                               /* vt1 /\
*
END-READ
*
DEFINE FILTER
/*     ======
RESET
  #ALL-ACTIVE
  #INACTIVE
  #NO-POLICY
  #APLICANT
  #GETTING-LOAN-BILL
  #NO-PRIMARY-ADDRESS
  #FOREIGN
  #UNDELIVERABLE
  #GETTING-PREMIUM-BILL
  #GETTING-FIR
  #ADDR-PROTECT
  #PDA-ADDRESS
*
#SKIP := TRUE
********* CALLNAT 'PLAN-AFA' ST-V.ID-NUMBER F-IF-AFFL-DATA      /* vt1
*
IF WIDOW-FLAG NE 'Y'
  #ADD-CONTACT-ID := ST-V.MEMBER-CONTACT-ID
ELSE
  #ADD-CONTACT-ID := ST-V.SPOUSE-CONTACT-ID
END-IF
#ADD-TYPE       := 'P'  /* Primary
CALLNAT 'ADDN0001' #PDA-ADDRESS
*
FIND (1) A-ADD-REL WITH CONTACT-ID = #ADD-CONTACT-ID
    AND ADDRESS-POOL-ID = #ADD-POOL-ID
END-FIND
*
DECIDE FOR FIRST CONDITION
/* Coditions to exclude record from extract
  WHEN  NUMBER-MEMBERSHIPS = 0     /* No active policies
    #NO-POLICY := TRUE
  WHEN INTRO-FLAG = 'A'            /* APPLICANT
      AND PROCESS-IND NE 'C'
    #APLICANT := TRUE
  WHEN #ADD-LINE-1 = BLANK                       /* NO ADDRESS
    #NO-PRIMARY-ADDRESS := TRUE
  WHEN NOT #ADD-COUNTRY-CODE = 'US' OR= 'PR'     /* FOREIGN
    #FOREIGN := TRUE
  WHEN PREVENT-OVER-IND = 'S' OR= 'Y'
    #ADDR-PROTECT := TRUE                        /* ADDR IS PROTECTED
  WHEN ANY
    DECIDE FOR FIRST CONDITION
      WHEN #NO-POLICY
        #REASON := 'No policy'
      WHEN #NO-PRIMARY-ADDRESS
        #REASON := 'No Primary Address'
      WHEN #FOREIGN
        #REASON := 'Foreign'
      WHEN #ADDR-PROTECT
        #REASON := 'ADDR Protected'
      WHEN #APLICANT
        #REASON := 'Aplicant'
      WHEN NONE
        #REASON := 'Unexpected'
    END-DECIDE
    ESCAPE ROUTINE  /* THE RECORD IS SKIPPED
  WHEN NONE IGNORE
END-DECIDE
*
RESET PDA-CONTACT                                       /* TT2
P-CONTACT-ID := ST-V.MEMBER-CONTACT-ID                  /* TT2
CALLNAT 'CONTS001' PDA-CONTACT DATE-OF-BIRTH-SP SPOUSE-SEX  /* TT2
DATE-OF-BIRTH := P-DATE-OF-BIRTH                        /* TT2

DECIDE FOR FIRST CONDITION
  WHEN #RUN-TYPE = 'A'
    #ALL-ACTIVE := TRUE
    RESET #SKIP                                   /* ALL ACTIVE
  WHEN #ADD-RETURNED-MAIL = 'Y'                   /* UNDELIVERABLE
    #UNDELIVERABLE := TRUE
    RESET #SKIP
  WHEN MODE (1) = 'A' OR = 'S' OR = 'Q' OR = 'M'  /* PREM NOTICE
      AND PD-TO-MM (1) = #NXT-MON                 /* NEXT MONTH
    #GETTING-PREMIUM-BILL := TRUE
    RESET #SKIP
  WHEN DOB-MM = #NXT-MON                     /* NXT MON ANN-FIR           /* TT1
      OR (DOB-MM = #4-MON                    /* NXT-MON BDAY-APPS         /* TT1
      AND DATE-OF-BIRTH GE (*DATN - 800000))      /* AGE 80
      OR ( DOB-MM-SP = #4-MON                /* NXT MONTH SPS B-DAY       /* TT1
      AND DATE-OF-BIRTH-SP GE (*DATN - 800000))   /* AGE 80
    #GETTING-FIR := TRUE
    RESET #SKIP
  WHEN NONE
    FOR #J  1 TO 9                                /* LOAN BILL
      IF(X-LOAN-AMOUNT ( #J ) NE 0
          AND X-LOAN-DATE-MM ( #J )= #NXT-MON-PLUS-1
          AND CONV-DURATION ( #J ) NE 999 )
          OR (X-LOAN-AMOUNT-2 ( #J ) NE 0
          AND X-LOAN-DATE-MM-2 ( #J ) = #NXT-MON-PLUS-1 )
        #GETTING-LOAN-BILL := TRUE
        RESET #SKIP
        ESCAPE BOTTOM
      END-IF
    END-FOR
END-DECIDE
*
IF #UNDELIVERABLE AND #RUN-TYPE = 'H'
  #REASON := 'Harris'
ELSE
  DECIDE FOR FIRST CONDITION
    WHEN #ALL-ACTIVE
      #REASON := 'Active'
    WHEN #GETTING-LOAN-BILL
      #REASON := 'Loan Bill'
    WHEN #UNDELIVERABLE
      #REASON := 'Undeliverable'
    WHEN #GETTING-PREMIUM-BILL
      #REASON := 'Premium Bill'
    WHEN #GETTING-FIR
      #REASON := 'Getting FIR'
    WHEN NONE
      #REASON := 'Not selected'
  END-DECIDE
END-IF
*
END-SUBROUTINE
*
DEFINE COLLECT-DATA-S
/*     ==============
#CONTACT-ID := #ADD-CONTACT-ID
RESET #PDA-ADDRESS
#ADD-CONTACT-ID := #CONTACT-ID
#ADD-TYPE    := 'S'  /* Secondary
CALLNAT 'ADDN0001' #PDA-ADDRESS
IF #ADD-POOL-ID > 0
  FIND (1) A-ADD-REL WITH CONTACT-ID = #ADD-CONTACT-ID
      AND ADDRESS-POOL-ID = #ADD-POOL-ID
  END-FIND
/* Conditions to exclude record from extract
  IF #ADD-LINE-1 = BLANK                       /* NO ADDRESS
      OR NOT #ADD-COUNTRY-CODE = 'US' OR= 'PR' /* FOREIGN
      OR PREVENT-OVER-IND = 'S' OR= 'Y'        /* ADDR IS PROTECTED
    IGNORE
  ELSE
    COMPRESS #ID-NUMBER '-S' INTO #ID-NUMBER LEAVING NO
    PERFORM COLLECT-DATA
    WRITE WORK FILE 1 #EXTRACT-125
    ADD 1 TO #NUM-RECS
  END-IF
END-IF
END-SUBROUTINE
*
DEFINE COLLECT-DATA
/*     ============
#ZIP-CODE := #ADD-ZIP-CODE
FIND (1) CONTACT WITH CONTACT-ID = #ADD-CONTACT-ID
  COMPRESS FIRST-NAME MIDDLE-NAME INTO #FIRST-MID
END-FIND
IF #ADD-LINE-3 = BLANK
  #FIRST-ADDRESS := #ADD-LINE-1
ELSE
  #FIRST-ADDRESS := #ADD-LINE-2
END-IF
COMPRESS
  #ID-NUMBER
  #TAB CONTACT.LAST-NAME
  #TAB #FIRST-MID
  #TAB #FIRST-ADDRESS
  #TAB BLANK
  #TAB #ADD-CITY
  #TAB #ADD-STATE
  #TAB ZIP-CODE-5-A
  INTO #REC-OVERFLOW LEAVING NO
IF ZIP-CODE-4 NE 0
  COMPRESS #REC-OVERFLOW '-' ZIP-CODE-4-A
    INTO #REC-OVERFLOW LEAVING NO
END-IF
COMPRESS #REC-OVERFLOW
  #TAB #REASON
  INTO #REC-OVERFLOW LEAVING NO
*
MOVE #REC-OVERFLOW TO #EXTRACT-125
*
END-SUBROUTINE
/*
DEFINE TRACE-DATA
/*     ==========
IF *LENGTH (#REC-OVERFLOW) > 125
  #OVFL := '*'
ELSE
  RESET #OVFL
END-IF
COMPRESS
  #ID-NUMBER
  #REASON
  CONTACT.LAST-NAME
  #FIRST-MID
  #FIRST-ADDRESS
  #ADD-CITY
  #ADD-STATE
  ZIP-CODE-5-A
  INTO #ADD-LINE-3 with delimiters
PRINT #OVFL #ADD-LINE-3
  / 'WIDOW-FLAG=' WIDOW-FLAG 'NUMBER-MEMBERSHIPS=' NUMBER-MEMBERSHIPS
  'PROCESS-IND=' PROCESS-IND 'INTRO-FLAG=' INTRO-FLAG
END-SUBROUTINE
*
DEFINE GET-PARMS
/*     =========
INPUT #PARM-RECORD
*
IF #PARM-DATE NE MASK(YYYYMMDD)
  #BATCH-LITERAL-1 := '#PARM-DATE'
  #BATCH-LITERAL-4 := 'PARM DATE NOT VALID FORMAT (YYYYMMDD)'
  WRITE
    // ' ERROR DATE AND TIME' *TIMX (EM=MM/DD/YYYY' at 'HH:II:SS)
    /  '   EXECUTING PROGRAM' *PROGRAM
    /  '         ERROR FIELD' #BATCH-LITERAL-1 /* ASSIGN VALUES OF THE CURRENT RECORD TO
    /  '       ERROR MESSAGE' #BATCH-LITERAL-4 /* THESE VARIABLES TO WRITE AS PART OF ERROR MESSAGE.
  NEWPAGE
  WRITE ' '           /* TO INSURE ABOVE GETS PRINTED
  TERMINATE
ELSE
  MOVE #MM TO #NXT-MON
  #4-MON := #NXT-MON + 3
  #NXT-MON-PLUS-1 := #NXT-MON + 1
  WRITE 'PARM DATE = ' #PARM-DATE #NXT-MON #4-MON #NXT-MON-PLUS-1
END-IF
IF NOT #RUN-TYPE = 'A' OR= 'M' OR= 'H'
  #BATCH-LITERAL-1 := '#RUN-TYPE'
  #BATCH-LITERAL-4 := '#RUN-TYPE NOT VALID IT CAN BE ONLY A,M OR H'
  WRITE
    // ' ERROR DATE AND TIME' *TIMX (EM=MM/DD/YYYY' at 'HH:II:SS)
    /  '   EXECUTING PROGRAM' *PROGRAM
    /  '         ERROR FIELD' #BATCH-LITERAL-1 /* ASSIGN VALUES OF THE CURRENT RECORD TO
    /  '       ERROR MESSAGE' #BATCH-LITERAL-4 /* THESE VARIABLES TO WRITE AS PART OF ERROR MESSAGE.
  NEWPAGE
  WRITE ' '           /* TO INSURE ABOVE GETS PRINTED
  TERMINATE
END-IF
END-SUBROUTINE
*
END
