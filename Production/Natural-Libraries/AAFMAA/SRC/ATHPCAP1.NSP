* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPCAP1 - sort POTENTIAL CAP STARTS
*
*
DEFINE DATA
LOCAL
*
1 ST-V VIEW OF A-STATUS
 2 ID-NUMBER
 2 PROCESS-IND
*
1 AT-V VIEW OF A-APPL-TRACKING
 2 SSN
 2 INTRO-FLAG
*
1 #LAST-SSN  (N9)
1 #LAST-AMT  (P8.2)
1 #LAST-START-STOP (A1)
1 #DUP-SSN   (N9)
*
1 #STAT-FND            (L)
1 #AT-FND              (L)
1 #LAST-REC            (A100)
1 #ALOT-STARTS         (A100)  /* ENTERED IN CMWFW02
1 REDEFINE #ALOT-STARTS
 2 #EXTR-ID-NUMBER     (A06)
 2 #EXTR-SERV          (A01)
 2 #EXTR-SSN           (N09)
 2 REDEFINE #EXTR-SSN
  3 #EXTR-SSN-A        (A09)
 2 #EXTR-START-STOP    (A01)
 2 #EXTR-REASON        (A02)
 2 #EXTR-ACTIVE-RET    (A01)
 2 #EXTR-BLANKET-CODE  (A03)
 2 #EXTR-EFF-DT        (A04)
 2 #EXTR-STOP-DT       (A04)
 2 #EXTR-ALOT-AMT      (P8.2)
 2 #EXTR-NAME          (A25)
 2 #EXTR-RP-DESCRIPTION (A35)
 2 #EXTR-RP-CODE       (A01)
 2 #EXTR-RP-DATE-DIFF  (A01)
 2 #EXTR-FILL          (A01)
*
1 #CAP-NOT-FND (P5)
*
END-DEFINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
FORMAT     LS=133 PS=66
WRITE  TITLE LEFT 'PROGRAM:' *PROGRAM
           8X 'Pgm Messages & CAP starts'
          5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX 5X 'PAGE:' *PAGE-NUMBER (1)
*
FORMAT (2) LS=133 PS=66
WRITE  (2) TITLE LEFT 'PROGRAM:' *PROGRAM
    8X 'Duplicate allotment records'
          5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX 5X 'PAGE:' *PAGE-NUMBER (2)
*
FORMAT (3) LS=133 PS=66
WRITE  (3) TITLE LEFT 'PROGRAM:' *PROGRAM
           8X 'Duplicate allot starts over $150'
          5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX 5X 'PAGE:' *PAGE-NUMBER (3)
*
REPEAT
  READ WORK 2 ONCE RECORD #ALOT-STARTS   /* READ ALLOTMENT starts/stops
    AT END OF FILE
      ESCAPE BOTTOM
    END-ENDFILE
*
END-ALL
*
SORT BY #EXTR-SSN
  USING #EXTR-ID-NUMBER
        #EXTR-SERV
        #EXTR-ALOT-AMT
        #EXTR-NAME
        #ALOT-STARTS
*
  IF #EXTR-SSN = #DUP-SSN
    RESET #AT-FND
    FIND AT-V WITH SSN = #EXTR-SSN
      IF AT-V.INTRO-FLAG = 'V'
        ESCAPE TOP
      END-IF
*
      MOVE TRUE TO #AT-FND
      ESCAPE BOTTOM
    END-FIND
*
    IF NOT #AT-FND
      RESET AT-V
    END-IF
*
    IF   ((#EXTR-ALOT-AMT GT 150) AND (#EXTR-START-STOP = '2'))
     OR  ((#LAST-AMT GT 150)      AND (#LAST-START-STOP = '2'))
      ADD 1 TO #CAP-NOT-FND
      WRITE (3) 'AT FOUND -' #AT-FND #EXTR-SSN #EXTR-ALOT-AMT
         #EXTR-START-STOP
         'LAST-AMT' #LAST-AMT  'LAST-START-STOP' #LAST-START-STOP
    ELSE
      WRITE (2) #EXTR-SSN #EXTR-ALOT-AMT #EXTR-START-STOP
         'Last-amt' #LAST-AMT  'Last-start-stop' #LAST-START-STOP
    END-IF
*
    ESCAPE TOP
  END-IF
*
  IF   (#EXTR-SSN NE #LAST-SSN)
   AND (#EXTR-SSN NE #DUP-SSN)
   AND (#LAST-REC NE ' ')
    WRITE WORK 3 #LAST-REC
  END-IF
*
  IF #EXTR-SSN = #LAST-SSN
    RESET #AT-FND
    FIND AT-V WITH SSN = #EXTR-SSN
      IF AT-V.INTRO-FLAG = 'V'
        ESCAPE TOP
      END-IF
*
      MOVE TRUE TO #AT-FND
      ESCAPE BOTTOM
    END-FIND
*
    IF NOT #AT-FND
      RESET AT-V
    END-IF
*
    IF   ((#EXTR-ALOT-AMT GT 150) AND (#EXTR-START-STOP = '2'))
     OR  ((#LAST-AMT GT 150)      AND (#LAST-START-STOP = '2'))
      ADD 1 TO #CAP-NOT-FND
      WRITE (3) 'AT FOUND -' #AT-FND #EXTR-SSN #EXTR-ALOT-AMT
         #EXTR-START-STOP
         'LAST-AMT' #LAST-AMT  'LAST-START-STOP' #LAST-START-STOP
    ELSE
      WRITE (2) #EXTR-SSN #EXTR-ALOT-AMT #EXTR-START-STOP
         'Last-amt' #LAST-AMT  'Last-start-stop' #LAST-START-STOP
    END-IF
*
    MOVE #EXTR-SSN TO #DUP-SSN
    RESET #LAST-SSN #LAST-REC
    ESCAPE TOP
  END-IF
*
  MOVE #EXTR-SSN TO #DUP-SSN
  MOVE #EXTR-SSN TO #LAST-SSN
  MOVE #EXTR-ALOT-AMT TO #LAST-AMT
  MOVE #EXTR-START-STOP TO #LAST-START-STOP
  MOVE #ALOT-STARTS TO #LAST-REC
END-SORT
*
IF #LAST-REC NE ' '
  WRITE WORK 3 #LAST-REC
END-IF
WRITE (3) #CAP-NOT-FND 'Dupl CAPs not members'
*
END
