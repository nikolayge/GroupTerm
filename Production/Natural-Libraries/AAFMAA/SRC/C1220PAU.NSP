* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: C1220PAU
* THIS PROGRAM WILL ALLOW AAFMAA TO ADD NEW SOURCE CODES OR UPDATE
* THE INFORMATION ON EXISTING CODES
*
*
* MODIFICATIONS:
*   0989 ALLOW MILLIE MITCHELL CAPABILITY TO CHANGE SUMMARY NUMBERS
*   1089 CHANGE TO MONTHLY BUCKET PROCESSING           JAK
*   1189 REVERSE ORDER OF TRIP NUMBER IN SOURCE-CODE   DRW
*   0600 CHANGED TO SPLIT INTO AAFMAA AND AFSC         PAM
*   08172005 PAM  PM1  ADJUSTED SECURITY PROCESS
*   02152006 PAM  PM2  Added header to field name to signify view
*   01222008 PAM  PM3  Added qualifier to source code identifier
*
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX        /* WORK FIELDS FOR GONERCXX - ERROR ROUTINE
LOCAL USING CSRCGLXX        /* WORK FIELDS FOR GROUP CODES
LOCAL USING C1220LAU        /* WORK FIELDS FOR THIS PROGRAM
LOCAL
1 #SCN-ACTION-1    (A1)
1 #SCN-ACTION-2    (A1)
1 #SCN-ACTION-3    (A1)
1 #SCN-ACT-2-CODE  (A6)
1 #SCN-ACT-3-CODE  (A1)
1 #SCN-DATE        (A6)
1 REDEFINE #SCN-DATE
  2 #SD-YYYY    (N4)
  2 #SD-MM      (N2)
*
1 #TEXT   (A76)
1 #I1     (I2)
1 #HAS-COUNTS (L)
1 #CUR-YEAR   (L)
1 #UPDATE-RECORDS-FOUND (L)
1 #START-CODE      (A1)
1 #SCN-DEL-FLAG1   (A1)
1 #SCN-DEL-MSSG    (A30)
1 #SCN-DEL-FLAG2   (A1)
1 #SCN-SOURCE-CODE  (A6/1:20)
1 #SCN-GROUP-CODE   (A1/1:20)
1 #SCN-TYPE-NEW     (A1/1:20)
1 #SCN-TYPE-ADDL    (A1/1:20)
1 #SCN-TYPE-INQUIRY  (A1/1:20)
1 #SCN-CODE-DESC     (A40/1:20)
1 #SCN-NEW-ACCUM   (N5)
1 #SCN-ADDL-ACCUM  (N5)
1 #SCN-INQUIRIES-ACCUM  (N5)
*
1 #INIT-DESCRIPTION-G
 2 #FIRST-34  (A34) INIT <'..................................'>
 2 #LAST-6    (A6)
1 REDEFINE #INIT-DESCRIPTION-G
 2 #INIT-DESCRIPTION  (A40)
*
1 #MONTH-LITERAL  (A36) INIT<'JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'>
1 REDEFINE #MONTH-LITERAL
 2 #MONTH-ENTRY  (A3/1:12)
*
1 #TODAY-YYYYMMDD  (N8)
1 REDEFINE #TODAY-YYYYMMDD
 2 #TODAY-CENT      (N2)
 2 #TODAY-YY        (N2)
 2 #TODAY-MM        (N2)
 2 #TODAY-DD        (N2)
*
1 #YY-DISPLAY-TEXT  (A2)   /* PM ADDED 03/2000 INTITIALIZE TEXT MSG
1 #REAL-TRIP-NUM   (N3)
1 #REAL-TRIP-YY    (N2)
*
1 #HOLD-SOURCE-CODE  (A6)
1 REDEFINE #HOLD-SOURCE-CODE     /* FOR TRIP KEY
 2 #HSC-T    (A1)
 2 #HSC-999  (N3)
 2 #HSC-YY   (A2)
 2 REDEFINE #HSC-YY
  3 #HSC-YY-N  (N2)
1 REDEFINE #HOLD-SOURCE-CODE    /* FOR INTRODUCTORY MBR CODE
 2 #HSC-IM-YY     (A2)
 2 REDEFINE #HSC-IM-YY
  3 #HSC-IM-YY-N  (N2)
 2 #HSC-IM-99     (N2)
 2 #HSC-IM-TYPE   (A2)
*
1 #N-TITLE-M    (A11) INIT <'NEW MEMBERS'>
1 #A-TITLE-M    (A18) INIT <'ADDITIONAL MEMBERS'>
1 #I-TITLE-M    (A9)  INIT<'INQUIRIES'>
1 #CV-NTM   (C)
1 #CV-SNM   (C)
1 #CV-ATM    (C)
1 #CV-SAM    (C)
1 #CV-ITM    (C)
1 #CV-SIM    (C)
1 #INDEX    (I2)
1 #G-INDEX  (I2)
1 #READ-CODE  (L)
1 #UPDATE-SUMM  (L)
*
1 #SUM-CODE    (A6)
1 REDEFINE #SUM-CODE
 2 #SUM-CODE1   (A3)
 2 #SUM-CODE2   (A1)
1 #TXT-MSSG   (A35)
*
1 #HOLD-TODAY-DATE   (N8)
1 REDEFINE #HOLD-TODAY-DATE
 2 #HTD-YYYYMM   (A6)
1 REDEFINE #HOLD-TODAY-DATE
 2 #HTD-YYYY     (N4)
*
1 #HO-NEW    (P5)
1 #HO-ADDL   (P5)
1 #HO-INQUIRIES   (P5)
END-DEFINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
INCLUDE GONERCXX             /* NATURAL ERROR ROUTINE
*
IF #CGA-USER-COMPANY = 'S'  /* PAM
  FETCH 'S1220PAU'
END-IF
*
IF NOT #CGA-CLERK = 'TDM'                       /* vt 06/19/2013 removed DWR and PAM
     OR = 'LGM' OR = 'TJH' OR = 'EL'
     or = 'VXT' or = 'PNP'                       /* vt1 04/05/2011 
  INPUT TEXT 'Access to "AU" screen is available to Sales Mgmt Only'
        USING MAP 'G1000MXX'
  FETCH 'G1000PXX'
END-IF
*
RESET #CGA-SCR-SUFFIX
RESET #CGA-SCR-ID
MOVE '*' TO #CGA-SCR-COMMAND
MOVE *DATN TO #HOLD-TODAY-DATE
MOVE *DATN TO #TODAY-YYYYMMDD
MOVE #HTD-YYYYMM TO #SCN-DATE
INPUT MARK *#SCN-ACTION-1 USING MAP 'C1220MAU'
IF #CGA-SCR-COMMAND = '*'
   IGNORE
 ELSE
   FETCH 'G1000PXX'
END-IF
IF #SCN-ACTION-1 = 'X'
    PERFORM ADD-CODE-SECTION
  ELSE
    IF #SCN-ACTION-2 = 'X'
        IF #SCN-ACT-2-CODE = ' '
           REINPUT WITH 'MUST ENTER SOURCE CODE YOU WISH TO CORRECT'
           MARK *#SCN-ACT-2-CODE
        ELSE
           IF (#SD-YYYY = #HTD-YYYY) OR (#SD-YYYY = #HTD-YYYY - 1)
             IGNORE
           ELSE
             REINPUT 'CURRENT AND PRIOR YEAR ONLY IS AVAILABLE'
             MARK *#SCN-DATE
           END-IF
*
           IF #SD-MM < 1 OR #SD-MM > 12
             REINPUT WITH 'MUST ENTER VALID MONTH'
             MARK *#SCN-DATE
           END-IF
           MOVE #SD-MM TO #INDEX
           IF #SD-YYYY = #HTD-YYYY
              MOVE TRUE TO #CUR-YEAR
           ELSE
              MOVE FALSE TO #CUR-YEAR
           END-IF
           PERFORM UPDATE-CODE
        END-IF
     ELSE
      IF #SCN-ACTION-3 = 'X'
        IF #SCN-ACT-3-CODE = 'T'
          PERFORM LIST-TRIP-CODES
        ELSE
          IF #SCN-ACT-3-CODE NE ' '
*           IF #SCN-ACT-3-CODE NE MASK (A) /* PAM                 /* PM1
            IF #SCN-ACT-3-CODE = MASK (N)                         /* PM1
              REINPUT USING HELP
              MARK *#SCN-ACT-3-CODE
            END-IF
          END-IF
          PERFORM LIST-CODES
        END-IF
      ELSE
        REINPUT WITH 'PLACE AN X IN FRONT OF DESIRED ACTION'
      END-IF
     END-IF
END-IF
MOVE 'AU' TO #CGA-SCR-COMMAND
INPUT USING MAP 'C1220MAU'
FETCH 'G1000PXX'
*
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ADD-CODE-SECTION
* * * * * * * * * * * * * * * * * * *
*
MOVE EDITED #TODAY-YY (EM=99) TO #YY-DISPLAY-TEXT
                                   /* ADDED 03/2000 INTITIALIZE TEXT MSG
COMPRESS #MONTH-ENTRY (#TODAY-MM) #YY-DISPLAY-TEXT INTO #LAST-6
MOVE #INIT-DESCRIPTION TO #SCN-CODE-DESC (1:3)
*
INPUT MARK *#SCN-SOURCE-CODE(1) USING MAP 'C1221MAU'
*
IF #CGA-SCR-COMMAND = '*' OR = ' '
  IGNORE
ELSE
  FETCH 'G1000PXX'
END-IF
*
FOR #INDEX 1 TO 3
 IF  ((#SCN-SOURCE-CODE (#INDEX) = ' ')
             AND (#SCN-GROUP-CODE  (#INDEX) NE ' '))
  OR ((#SCN-SOURCE-CODE (#INDEX) NE ' ')
             AND (#SCN-GROUP-CODE  (#INDEX) = ' '))
   REINPUT 'BOTH SOURCE CODE AND GROUP MUST BE ENTERED'
   MARK *#SCN-SOURCE-CODE(#INDEX)
 END-IF
*
  IF #SCN-SOURCE-CODE (#INDEX) = ' '
    ESCAPE TOP
  END-IF
*
  ASSIGN #GOOD-GROUP = FALSE
  FOR #G-INDEX 1 TO #NUM-G-ENTRIES
    IF #SCN-GROUP-CODE(#INDEX) = #GROUP-CODE(#G-INDEX)
      ASSIGN #GOOD-GROUP = TRUE
      MOVE #GROUP-NEW (#G-INDEX) TO #SCN-TYPE-NEW(#INDEX)
      MOVE #GROUP-ADDL (#G-INDEX) TO #SCN-TYPE-ADDL(#INDEX)
      MOVE #GROUP-INQ (#G-INDEX) TO #SCN-TYPE-INQUIRY(#INDEX)
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
 IF #SCN-GROUP-CODE(#INDEX) = 'E'
   IF #CGA-CLERK = 'JAK' OR = 'DRW' OR = 'EAC' OR = 'HLM' OR = 'LCM'
     IGNORE
   ELSE
     REINPUT USING HELP
     MARK *#SCN-GROUP-CODE(#INDEX)
   END-IF
 END-IF
*
 IF #GOOD-GROUP
   IGNORE
 ELSE
   REINPUT USING HELP
   MARK *#SCN-GROUP-CODE(#INDEX)
 END-IF
*
 IF #SCN-CODE-DESC(#INDEX) = ' '
   REINPUT WITH 'MUST ENTER DESCRIPTION'
   MARK *#SCN-CODE-DESC(#INDEX)
 END-IF
*
 IF #SCN-GROUP-CODE(#INDEX) = 'T'
   MOVE #SCN-SOURCE-CODE (#INDEX) TO #HOLD-SOURCE-CODE
   IF   (#HSC-YY  = MASK (NN))
    AND (#HSC-999 = MASK (NNN))
    AND ((#HSC-T = MASK ('T')) OR (#HSC-T = MASK (N)))
    AND ((#HSC-YY GT '87') OR (#HSC-YY LT '50'))
      IGNORE
    ELSE
      REINPUT WITH 'TRIP FORMAT IS T999YY OR 1999YY'
      MARK *#SCN-SOURCE-CODE(#INDEX)
    END-IF
 END-IF
*
 MOVE #SCN-SOURCE-CODE (#INDEX) TO #HOLD-SOURCE-CODE
*
 IF #SCN-GROUP-CODE (#INDEX) = 'T'
   COMPUTE #REAL-TRIP-NUM = 999 - #HSC-999
   MOVE #REAL-TRIP-NUM TO #HSC-999
   IF #HSC-YY-N GE 50
      COMPUTE #REAL-TRIP-YY = 149 - #HSC-YY-N
   ELSE
      COMPUTE #REAL-TRIP-YY = 49 - #HSC-YY-N
   END-IF
   MOVE #REAL-TRIP-YY TO #HSC-YY-N
 END-IF
*
 ASSIGN #READ-CODE = FALSE
 FIND EDIT-SOURCE-VIEW WITH EDIT-SOURCE-VIEW.SOURCE-CODE = #HOLD-SOURCE-CODE
*
   IF NOT EDIT-SOURCE-VIEW.SOURCE-CODE-GROUP = MASK (N)   /* PM1 PM3
     ASSIGN #READ-CODE = TRUE
   END-IF
*
   IF #READ-CODE
     REINPUT WITH 'SOURCE CODE ALREADY ON FILE'
     MARK *#SCN-SOURCE-CODE(#INDEX)
   END-IF
 END-FIND
END-FOR
*
FOR #INDEX 1 TO 3
 IF #SCN-SOURCE-CODE(#INDEX) = ' '
   ESCAPE TOP
 END-IF
*
 MOVE #SCN-SOURCE-CODE (#INDEX) TO #HOLD-SOURCE-CODE
 IF #SCN-GROUP-CODE (#INDEX) = 'T'
   COMPUTE #REAL-TRIP-NUM = 999 - #HSC-999
   MOVE #REAL-TRIP-NUM TO #HSC-999
   IF #HSC-YY-N GE 50
      COMPUTE #REAL-TRIP-YY = 149 - #HSC-YY-N
   ELSE
      COMPUTE #REAL-TRIP-YY = 49 - #HSC-YY-N
   END-IF
 MOVE #REAL-TRIP-YY TO #HSC-YY-N
 END-IF
*
 MOVE #HOLD-SOURCE-CODE       TO SOURCE-APPL-V.SOURCE-CODE
 MOVE #SCN-GROUP-CODE(#INDEX) TO SOURCE-APPL-V.SOURCE-CODE-GROUP
 MOVE #SCN-CODE-DESC(#INDEX) TO SOURCE-APPL-V.SOURCE-DESCRIPTION
 MOVE 0 TO SOURCE-APPL-V.SOURCE-NEW-MBR-FLAG
 MOVE 0 TO SOURCE-APPL-V.SOURCE-ADDL-MBR-FLAG
 MOVE 0 TO SOURCE-APPL-V.SOURCE-INQUIRIES-FLAG
 IF #SCN-TYPE-NEW(#INDEX) = 'N'
   MOVE 9 TO SOURCE-APPL-V.SOURCE-NEW-MBR-FLAG
 END-IF
*
 IF #SCN-TYPE-ADDL(#INDEX) = 'N'
   MOVE 9 TO SOURCE-APPL-V.SOURCE-ADDL-MBR-FLAG
 END-IF
*
 IF #SCN-TYPE-INQUIRY(#INDEX) = 'N'
   MOVE 9 TO SOURCE-APPL-V.SOURCE-INQUIRIES-FLAG
 END-IF
*
 STORE SOURCE-APPL-V
 END TRANSACTION
END-FOR
*
MOVE 'AU' TO #CGA-SCR-COMMAND
*
INPUT WITH TEXT 'TRANSACTION COMPLETED' USING MAP 'C1221MAU'
*
FETCH 'G1000PXX'
*
END-SUBROUTINE
* * * * *  * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LIST-CODES
*
MOVE 1 TO #INDEX
IF #SCN-ACT-3-CODE = ' '
   MOVE ' ' TO #START-CODE
ELSE
   MOVE #SCN-ACT-3-CODE TO #START-CODE
END-IF
*
READ SOURCE-APPL-V LOGICAL BY SOURCE-CODE-GROUP FROM #START-CODE
*
* IF SOURCE-CODE-GROUP NE MASK (A)  /* PAM                        /* PM1
IF SOURCE-APPL-V.SOURCE-CODE-GROUP = MASK (N)                     /* PM1
  ESCAPE TOP
END-IF
*
IF SOURCE-APPL-V.SOURCE-CODE-GROUP = #START-CODE
  IGNORE
ELSE
  IF #SCN-ACT-3-CODE = ' '
     IF SOURCE-APPL-V.SOURCE-CODE-GROUP = 'E'
       ESCAPE TOP
     ELSE
       IGNORE
     END-IF
  ELSE
*   ESCAPE BOTTOM                                                 /* PM1
    ESCAPE TOP                                                    /* PM1
  END-IF
END-IF
*
IF SOURCE-APPL-V.SOURCE-CODE-GROUP = 'T'
  MOVE SOURCE-APPL-V.SOURCE-CODE TO #HOLD-SOURCE-CODE
  COMPUTE #REAL-TRIP-NUM = 999 - #HSC-999
  MOVE #REAL-TRIP-NUM TO #HSC-999
  IF #HSC-YY-N GE 50
     COMPUTE #REAL-TRIP-YY = 149 - #HSC-YY-N
  ELSE
     COMPUTE #REAL-TRIP-YY = 49 - #HSC-YY-N
  END-IF
  MOVE #REAL-TRIP-YY TO #HSC-YY-N
  MOVE #HOLD-SOURCE-CODE TO #SCN-SOURCE-CODE (#INDEX)
ELSE
  MOVE SOURCE-APPL-V.SOURCE-CODE TO #SCN-SOURCE-CODE (#INDEX)
END-IF
*
MOVE SOURCE-APPL-V.SOURCE-CODE-GROUP TO #SCN-GROUP-CODE(#INDEX)
MOVE SOURCE-APPL-V.SOURCE-DESCRIPTION TO #SCN-CODE-DESC(#INDEX)
IF SOURCE-APPL-V.SOURCE-NEW-MBR-FLAG NE 9
   MOVE 'Y' TO #SCN-TYPE-NEW(#INDEX)
END-IF
IF SOURCE-APPL-V.SOURCE-ADDL-MBR-FLAG NE 9
   MOVE 'Y' TO #SCN-TYPE-ADDL(#INDEX)
END-IF
IF SOURCE-APPL-V.SOURCE-INQUIRIES-FLAG NE 9
   MOVE 'Y' TO #SCN-TYPE-INQUIRY(#INDEX)
END-IF
*
ADD 1 TO #INDEX
IF #INDEX > 20
   INPUT USING MAP 'C1223MAU'
   IF #CGA-SCR-COMMAND NE '*'
     FETCH 'G1000PXX'
   END-IF
   RESET #SCN-SOURCE-CODE(1:20)
         #SCN-GROUP-CODE(1:20)
         #SCN-TYPE-ADDL(1:20)
         #SCN-TYPE-NEW (1:20)
         #SCN-TYPE-INQUIRY(1:20)
         #SCN-CODE-DESC(1:20)
   MOVE 1 TO #INDEX
END-IF
END-READ
MOVE 'AU' TO #CGA-SCR-COMMAND
INPUT WITH TEXT 'LIST COMPLETED' USING MAP 'C1223MAU'
FETCH 'G1000PXX'
END-SUBROUTINE
* * * * *  * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LIST-TRIP-CODES
*
MOVE 1 TO #INDEX
*
READ SOURCE-APPL-V BY TRIP-KEY FROM '000000'
*
  IF SOURCE-APPL-V.SOURCE-CODE-GROUP NE 'T'
    ESCAPE TOP
  END-IF
*
  MOVE SOURCE-APPL-V.SOURCE-CODE TO #HOLD-SOURCE-CODE
  COMPUTE #REAL-TRIP-NUM = 999 - #HSC-999
  MOVE #REAL-TRIP-NUM TO #HSC-999
  IF #HSC-YY-N GE 50
     COMPUTE #REAL-TRIP-YY = 149 - #HSC-YY-N
  ELSE
     COMPUTE #REAL-TRIP-YY = 49 - #HSC-YY-N
  END-IF
  MOVE #REAL-TRIP-YY TO #HSC-YY-N
  MOVE #HOLD-SOURCE-CODE TO #SCN-SOURCE-CODE (#INDEX)
*
  MOVE SOURCE-APPL-V.SOURCE-CODE-GROUP TO #SCN-GROUP-CODE(#INDEX)
  MOVE SOURCE-APPL-V.SOURCE-DESCRIPTION TO #SCN-CODE-DESC(#INDEX)
*
  IF SOURCE-APPL-V.SOURCE-NEW-MBR-FLAG NE 9
     MOVE 'Y' TO #SCN-TYPE-NEW(#INDEX)
  END-IF
*
  IF SOURCE-APPL-V.SOURCE-ADDL-MBR-FLAG NE 9
     MOVE 'Y' TO #SCN-TYPE-ADDL(#INDEX)
  END-IF
*
  IF SOURCE-APPL-V.SOURCE-INQUIRIES-FLAG NE 9
     MOVE 'Y' TO #SCN-TYPE-INQUIRY(#INDEX)
  END-IF
*
  ADD 1 TO #INDEX
  IF #INDEX > 20
     INPUT USING MAP 'C1223MAU'
     IF #CGA-SCR-COMMAND NE '*'
       FETCH 'G1000PXX'
     END-IF
     RESET #SCN-SOURCE-CODE(1:20)
           #SCN-GROUP-CODE(1:20)
           #SCN-TYPE-ADDL(1:20)
           #SCN-TYPE-NEW (1:20)
           #SCN-TYPE-INQUIRY(1:20)
           #SCN-CODE-DESC(1:20)
     MOVE 1 TO #INDEX
  END-IF
END-READ
*
MOVE 'AU' TO #CGA-SCR-COMMAND
INPUT WITH TEXT 'LIST COMPLETED' USING MAP 'C1223MAU'
FETCH 'G1000PXX'
*
END-SUBROUTINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE UPDATE-CODE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
MOVE #SCN-ACT-2-CODE TO #HOLD-SOURCE-CODE
FIND APPL-SOURCE-UPDATE WITH SOURCE-CODE = #SCN-ACT-2-CODE
  IF APPL-SOURCE-UPDATE.SOURCE-CODE-GROUP NE MASK (N)             /* PM1
    MOVE TRUE TO #UPDATE-RECORDS-FOUND
  ELSE
    ESCAPE TOP
  END-IF
END-FIND
*
IF NOT #UPDATE-RECORDS-FOUND
  IF #HSC-999 = MASK (NNN)
    COMPUTE #REAL-TRIP-NUM = 999 - #HSC-999
    MOVE #REAL-TRIP-NUM TO #HSC-999
   IF #HSC-YY-N GE 50
      COMPUTE #REAL-TRIP-YY = 149 - #HSC-YY-N
   ELSE
      COMPUTE #REAL-TRIP-YY = 49 - #HSC-YY-N
   END-IF
   MOVE #REAL-TRIP-YY TO #HSC-YY-N
  END-IF
END-IF
*
FIND APPL-SOURCE-UPDATE WITH SOURCE-CODE = #HOLD-SOURCE-CODE
*
  IF NO RECORDS FOUND
    REINPUT WITH TEXT 'SOURCE CODE NOT ON FILE'
    MARK *#SCN-ACT-2-CODE
  END-NOREC
*
  IF APPL-SOURCE-UPDATE.SOURCE-CODE-GROUP NE MASK (N)             /* PM1
    IGNORE
  ELSE
    ESCAPE TOP
  END-IF
*
  IF APPL-SOURCE-UPDATE.SOURCE-NEW-MBR-FLAG = 9
    MOVE ' ' TO #N-TITLE-M
    MOVE (AD=P) TO #CV-NTM
    MOVE (AD=NP) TO #CV-SNM
  END-IF
  IF APPL-SOURCE-UPDATE.SOURCE-ADDL-MBR-FLAG = 9
    MOVE ' ' TO #A-TITLE-M
    MOVE (AD=P) TO #CV-ATM
    MOVE (AD=NP) TO #CV-SAM
  END-IF
  IF APPL-SOURCE-UPDATE.SOURCE-INQUIRIES-FLAG = 9
    MOVE ' ' TO #I-TITLE-M
    MOVE (AD=P) TO #CV-ITM
    MOVE (AD=NP) TO #CV-SIM
  END-IF
*
IF #CUR-YEAR
   MOVE SOURCE-CUR-NEW-MBR(#INDEX) TO #SCN-NEW-ACCUM #HO-NEW
   MOVE SOURCE-CUR-ADDL-MBR(#INDEX) TO #SCN-ADDL-ACCUM #HO-ADDL
   MOVE SOURCE-CUR-INQUIRIES(#INDEX) TO #SCN-INQUIRIES-ACCUM
                                        #HO-INQUIRIES
ELSE
   MOVE SOURCE-LST-NEW-MBR(#INDEX) TO #SCN-NEW-ACCUM #HO-NEW
   MOVE SOURCE-LST-ADDL-MBR(#INDEX) TO #SCN-ADDL-ACCUM #HO-ADDL
   MOVE SOURCE-LST-INQUIRIES(#INDEX) TO #SCN-INQUIRIES-ACCUM
                                        #HO-INQUIRIES
END-IF
*
INPUT MARK *SOURCE-CODE-GROUP USING MAP 'C1222MAU'
IF #CGA-SCR-COMMAND NE '*'
   END TRANSACTION
   FETCH 'G1000PXX'
END-IF
*
ASSIGN #GOOD-GROUP = FALSE
FOR #G-INDEX 1 TO #NUM-G-ENTRIES
  IF APPL-SOURCE-UPDATE.SOURCE-CODE-GROUP = #GROUP-CODE(#G-INDEX) /* PM2
     ASSIGN #GOOD-GROUP = TRUE
     ESCAPE BOTTOM
  END-IF
END-FOR
IF APPL-SOURCE-UPDATE.SOURCE-CODE-GROUP = 'E'
   IF #CGA-CLERK = 'JAK' OR = 'DRW'
     IGNORE
   ELSE
    IF #CGA-CLERK = 'EAC' OR = 'HLM' OR = 'LCM'
     IF APPL-SOURCE-UPDATE.SOURCE-CODE = MASK ('EDS')
        IGNORE
     ELSE
       REINPUT WITH 'CANNOT CHANGE THIS SUMMARY RECORD/CALL EDS'
       MARK *SOURCE-CODE-GROUP
     END-IF
   ELSE
     REINPUT USING HELP
     MARK *SOURCE-CODE-GROUP
   END-IF
  END-IF
END-IF
IF #GOOD-GROUP
  IGNORE
ELSE
  REINPUT USING HELP
  MARK *SOURCE-CODE-GROUP
END-IF
*
IF APPL-SOURCE-UPDATE.SOURCE-DESCRIPTION = ' '
  REINPUT WITH 'MUST ENTER DESCRIPTION'
  MARK *SOURCE-DESCRIPTION
END-IF
*
IF #SCN-DEL-FLAG1 = 'Y' OR = 'N' OR = ' '
   IGNORE
ELSE
   REINPUT WITH 'INVALID DELETE FLAG, MUST BE Y OR N OR BLANK'
   MARK *#SCN-DEL-FLAG1
END-IF
*
IF (#SCN-DEL-FLAG1 = 'Y') AND (SOURCE-CODE-GROUP = 'E')
  REINPUT WITH 'CANNOT DELETE GROUP E/CALL EDS'
  MARK *#SCN-DEL-FLAG1
END-IF
*
IF #SCN-DEL-FLAG1 = 'Y'
  RESET #HAS-COUNTS
  FOR #I1 1 TO 12
    IF   (APPL-SOURCE-UPDATE.SOURCE-CUR-NEW-MBR (#I1) NE 0)
     OR  (APPL-SOURCE-UPDATE.SOURCE-LST-NEW-MBR (#I1) NE 0)
     OR  (APPL-SOURCE-UPDATE.SOURCE-CUR-ADDL-MBR (#I1) NE 0)
     OR  (APPL-SOURCE-UPDATE.SOURCE-LST-ADDL-MBR (#I1) NE 0)
     OR  (APPL-SOURCE-UPDATE.SOURCE-CUR-INQUIRIES (#I1) NE 0)
     OR  (APPL-SOURCE-UPDATE.SOURCE-LST-INQUIRIES (#I1) NE 0)
      MOVE TRUE TO #HAS-COUNTS
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF #HAS-COUNTS
     MOVE 'This Record has existing counts' TO #TEXT
  END-IF
*
   MOVE 'ARE YOU SURE (Y)ES OR (N)O?' TO #SCN-DEL-MSSG
   INPUT TEXT #TEXT MARK *#SCN-DEL-FLAG2 USING MAP 'C1222MAU'
*
   IF #SCN-DEL-FLAG2 = 'Y' OR = 'N'
     IGNORE
   ELSE
     REINPUT WITH 'INVALID DELETE FLAG, MUST BE Y OR N'
     MARK *#SCN-DEL-FLAG2
   END-IF
*
   IF #SCN-DEL-FLAG2 = 'Y'
     PERFORM CORRECT-SUMMARY-TEST-DELETE
     IF #READ-CODE
       MOVE 'SOURCE CODE RECD DELETED' TO #TXT-MSSG
       DELETE (0508)
     ELSE
       MOVE 'NO SUMMARY RECD FOUND, CALL EDS' TO #TXT-MSSG
     END-IF
   ELSE
      MOVE 'SOURCE CODE NOT DELETED' TO #TXT-MSSG
   END-IF
ELSE
   IF APPL-SOURCE-UPDATE.SOURCE-CODE-GROUP = 'E'
     MOVE TRUE TO #READ-CODE
     IF #CUR-YEAR
       MOVE #SCN-NEW-ACCUM TO SOURCE-CUR-NEW-MBR(#INDEX)
       MOVE #SCN-ADDL-ACCUM TO SOURCE-CUR-ADDL-MBR(#INDEX)
       MOVE #SCN-INQUIRIES-ACCUM TO SOURCE-CUR-INQUIRIES(#INDEX)
     ELSE
       MOVE #SCN-NEW-ACCUM TO SOURCE-LST-NEW-MBR(#INDEX)
       MOVE #SCN-ADDL-ACCUM TO SOURCE-LST-ADDL-MBR(#INDEX)
       MOVE #SCN-INQUIRIES-ACCUM TO SOURCE-LST-INQUIRIES(#INDEX)
     END-IF
   ELSE
     PERFORM CORRECT-SUMMARY-TEST
   END-IF
   IF #READ-CODE
     MOVE 'SOURCE CODE RECD UPDATED' TO #TXT-MSSG
     UPDATE (0508)
   ELSE
     MOVE 'NO SUMMARY RECD FOUND, CALL EDS' TO #TXT-MSSG
   END-IF
END-IF
END TRANSACTION
ESCAPE BOTTOM
END-FIND
*
IF NOT #UPDATE-RECORDS-FOUND
  REINPUT WITH TEXT 'SOURCE CODE NOT ON FILE'
  MARK *#SCN-ACT-2-CODE
END-IF
*
MOVE 'AU' TO #CGA-SCR-COMMAND
INPUT WITH TEXT #TXT-MSSG USING MAP 'C1222MAU'
FETCH 'G1000PXX'
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CORRECT-SUMMARY-TEST-DELETE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
MOVE FALSE TO #UPDATE-SUMM
MOVE FALSE TO #READ-CODE
MOVE 'EDS' TO #SUM-CODE1
IF APPL-SOURCE-UPDATE.SOURCE-CODE-GROUP = 'N' OR = 'Y' OR = 'A'
   MOVE 'P' TO #SUM-CODE2
ELSE
   MOVE APPL-SOURCE-UPDATE.SOURCE-CODE-GROUP TO #SUM-CODE2
END-IF
*
FIND (1) SUM-VIEW WITH SOURCE-CODE = #SUM-CODE
IF NO RECORDS FOUND
   ESCAPE ROUTINE
END-NOREC
*
MOVE TRUE TO #READ-CODE
*
FOR #INDEX 1 TO 12
   COMPUTE SUM-VIEW.SOURCE-CUR-NEW-MBR(#INDEX)
        = SUM-VIEW.SOURCE-CUR-NEW-MBR (#INDEX)
        - APPL-SOURCE-UPDATE.SOURCE-CUR-NEW-MBR(#INDEX)
   COMPUTE SUM-VIEW.SOURCE-LST-NEW-MBR(#INDEX)
        = SUM-VIEW.SOURCE-LST-NEW-MBR (#INDEX)
        - APPL-SOURCE-UPDATE.SOURCE-LST-NEW-MBR(#INDEX)
   COMPUTE SUM-VIEW.SOURCE-CUR-ADDL-MBR(#INDEX)
        = SUM-VIEW.SOURCE-CUR-ADDL-MBR (#INDEX)
        - APPL-SOURCE-UPDATE.SOURCE-CUR-ADDL-MBR(#INDEX)
   COMPUTE SUM-VIEW.SOURCE-LST-ADDL-MBR(#INDEX)
        = SUM-VIEW.SOURCE-LST-ADDL-MBR (#INDEX)
        - APPL-SOURCE-UPDATE.SOURCE-LST-ADDL-MBR(#INDEX)
   COMPUTE SUM-VIEW.SOURCE-CUR-INQUIRIES(#INDEX)
        = SUM-VIEW.SOURCE-CUR-INQUIRIES (#INDEX)
        - APPL-SOURCE-UPDATE.SOURCE-CUR-INQUIRIES(#INDEX)
   COMPUTE SUM-VIEW.SOURCE-LST-INQUIRIES(#INDEX)
        = SUM-VIEW.SOURCE-LST-INQUIRIES (#INDEX)
        - APPL-SOURCE-UPDATE.SOURCE-LST-INQUIRIES(#INDEX)
   END-FOR
UPDATE (0692)
*
END-FIND
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CORRECT-SUMMARY-TEST
* * * * * * * * * * * * * * * * * * * * * * * *
MOVE FALSE TO #UPDATE-SUMM
MOVE FALSE TO #READ-CODE
MOVE 'EDS' TO #SUM-CODE1
IF APPL-SOURCE-UPDATE.SOURCE-CODE-GROUP = 'N' OR = 'Y' OR = 'A'
   MOVE 'P' TO #SUM-CODE2
ELSE
   MOVE APPL-SOURCE-UPDATE.SOURCE-CODE-GROUP TO #SUM-CODE2
END-IF
*
FIND (1) SUM-VIEW WITH SOURCE-CODE = #SUM-CODE
IF NO RECORDS FOUND
   ESCAPE ROUTINE
END-NOREC
*
MOVE TRUE TO #READ-CODE
*
IF #HO-NEW = #SCN-NEW-ACCUM
  IGNORE
ELSE
  MOVE TRUE TO #UPDATE-SUMM
  IF #CUR-YEAR
    COMPUTE SOURCE-CUR-NEW-MBR(#INDEX) = (SOURCE-CUR-NEW-MBR (#INDEX)
          - #HO-NEW) + #SCN-NEW-ACCUM
    MOVE #SCN-NEW-ACCUM TO
        APPL-SOURCE-UPDATE.SOURCE-CUR-NEW-MBR(#INDEX)
  ELSE
    COMPUTE SOURCE-LST-NEW-MBR(#INDEX) = (SOURCE-LST-NEW-MBR (#INDEX)
          - #HO-NEW) + #SCN-NEW-ACCUM
    MOVE #SCN-NEW-ACCUM TO
        APPL-SOURCE-UPDATE.SOURCE-LST-NEW-MBR(#INDEX)
  END-IF
END-IF
*
IF #HO-ADDL = #SCN-ADDL-ACCUM
  IGNORE
ELSE
  MOVE TRUE TO #UPDATE-SUMM
  IF #CUR-YEAR
    COMPUTE SOURCE-CUR-ADDL-MBR(#INDEX) = (SOURCE-CUR-ADDL-MBR (#INDEX)
          - #HO-ADDL) + #SCN-ADDL-ACCUM
    MOVE #SCN-ADDL-ACCUM TO
        APPL-SOURCE-UPDATE.SOURCE-CUR-ADDL-MBR(#INDEX)
  ELSE
    COMPUTE SOURCE-LST-ADDL-MBR(#INDEX) = (SOURCE-LST-ADDL-MBR (#INDEX)
          - #HO-ADDL) + #SCN-ADDL-ACCUM
    MOVE #SCN-ADDL-ACCUM TO
        APPL-SOURCE-UPDATE.SOURCE-LST-ADDL-MBR(#INDEX)
  END-IF
END-IF
IF #HO-INQUIRIES = #SCN-INQUIRIES-ACCUM
  IGNORE
ELSE
  MOVE TRUE TO #UPDATE-SUMM
  IF #CUR-YEAR
  COMPUTE SOURCE-CUR-INQUIRIES(#INDEX) = (SOURCE-CUR-INQUIRIES(#INDEX)
          - #HO-INQUIRIES) + #SCN-INQUIRIES-ACCUM
  MOVE #SCN-INQUIRIES-ACCUM TO
        APPL-SOURCE-UPDATE.SOURCE-CUR-INQUIRIES(#INDEX)
  ELSE
  COMPUTE SOURCE-LST-INQUIRIES(#INDEX) = (SOURCE-LST-INQUIRIES(#INDEX)
          - #HO-INQUIRIES) + #SCN-INQUIRIES-ACCUM
    MOVE #SCN-INQUIRIES-ACCUM TO
        APPL-SOURCE-UPDATE.SOURCE-LST-INQUIRIES(#INDEX)
  END-IF
END-IF
IF #UPDATE-SUMM
  UPDATE (0737)
END-IF
END-FIND
END-SUBROUTINE
END
