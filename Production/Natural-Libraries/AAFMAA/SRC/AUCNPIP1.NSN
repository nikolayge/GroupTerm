* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCNPIP1'
*
* DESCRIPTION
*   XML Parser implementationfor file:
*   null
*   using PARSE XML statement and datastructure 'AUCAPI01'
*
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
LOCAL USING AUCAPI01
LOCAL USING AUCAER01
LOCAL USING PARSER-X
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
*
LOCAL
1 #LEN              (I4)
1 #PARSE-ERROR      (I4) CONST <-7>
1 #TRUE             (A4) CONST <'TRUE'>
1 #FALSE            (A5) CONST <'FALSE'>
1 #CONTACT-SYNCH    (I4) CONST <2>
1 #STATUS-ISN       (P8) CONST <0>
*
END-DEFINE
* ----------------------------------------------------------------
#AUCerror.ErrorTag := 'PersonalInfo'
RESET PersonalInfo
ASSIGN #LEN := *LENGTH (#XML_INPUT)
IF #LEN <= 0
  PersonalInfo.ErrorCode := #PARSE-ERROR
  PersonalInfo.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNPIS1' #XML_OUTPUT PersonalInfo
  ESCAPE ROUTINE
END-IF
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
PersonalInfo.ErrorCode := #PARSE-ERROR
PersonalInfo.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNPIS1' #XML_OUTPUT PersonalInfo
END-SUBROUTINE
*
DEFINE SUBROUTINE CALLBACK
/*                ========
IF XML_PARSER_CONTENT_IS_EMPTY THEN
  IGNORE
ELSE
  #XML_VALUE := *TRIM (#XML_VALUE)
  MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
  PERFORM PARSE-DOCUMENT
END-IF
END-SUBROUTINE
*
CALLNAT 'AUCNPIM1' PersonalInfo               /* Manage PersonalInfo
IF PersonalInfo.ErrorCode = 0
  END TRANSACTION
  CALLNAT 'MBRDATA'
    #STATUS-ISN
    #XML_OUTPUT
    #XML_PATH     /* Only output
    #XML_VALUE    /* Queue response
    #CONTACT-SYNCH
    PersonalInfo.ContactID
  CALLNAT 'AUCNPIS1' #XML_OUTPUT PersonalInfo   /* Send back manage PersonalInfo result
ELSE
  BACKOUT TRANSACTION
  #AUCerror.ErrorCode := PersonalInfo.ErrorCode
  #AUCerror.ErrorDescription := PersonalInfo.ErrorDescription
  CALLNAT 'AUCNERS1' #XML_OUTPUT #AUCerror
END-IF
* ------------------------------------------------- CALL THE PARSER
* PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE #XML_VALUE
*
DEFINE PARSE-DOCUMENT
/*     ==============
DECIDE ON FIRST #XML_PATH
  VALUE 'PersonalInfo//'
    IGNORE
  VALUE 'PersonalInfo'
    RESET INITIAL PersonalInfo
  VALUE 'PersonalInfo/ActionType//'
    IGNORE
  VALUE 'PersonalInfo/ActionType'
    IGNORE
  VALUE 'PersonalInfo/ActionType/$'
    PersonalInfo.ActionType := VAL(#XML_VALUE)
  VALUE 'PersonalInfo/ErrorCode//'
    IGNORE
  VALUE 'PersonalInfo/ErrorCode'
    IGNORE
  VALUE 'PersonalInfo/ErrorCode/$'
    PersonalInfo.ErrorCode := VAL(#XML_VALUE)
  VALUE 'PersonalInfo/ErrorDescription//'
    IGNORE
  VALUE 'PersonalInfo/ErrorDescription'
    IGNORE
  VALUE 'PersonalInfo/ErrorDescription/$'
    PersonalInfo.ErrorDescription := #XML_VALUE
  VALUE 'PersonalInfo/ContactID//'
    IGNORE
  VALUE 'PersonalInfo/ContactID'
    IGNORE
  VALUE 'PersonalInfo/ContactID/$'
    PersonalInfo.ContactID := VAL(#XML_VALUE)
  VALUE 'PersonalInfo/CN//'
    IGNORE
  VALUE 'PersonalInfo/CN'
    IGNORE
  VALUE 'PersonalInfo/CN/$'
    PersonalInfo.CN := VAL(#XML_VALUE)
  VALUE 'PersonalInfo/LastUpdatedDate//'
    IGNORE
  VALUE 'PersonalInfo/LastUpdatedDate'
    IGNORE
  VALUE 'PersonalInfo/LastUpdatedDate/$'
    PersonalInfo.LastUpdatedDate := VAL(#XML_VALUE)
  VALUE 'PersonalInfo/LastUpdatedTime//'
    IGNORE
  VALUE 'PersonalInfo/LastUpdatedTime'
    IGNORE
  VALUE 'PersonalInfo/LastUpdatedTime/$'
    PersonalInfo.LastUpdatedTime := VAL(#XML_VALUE)
  VALUE 'PersonalInfo/SystemSource//'
    IGNORE
  VALUE 'PersonalInfo/SystemSource'
    IGNORE
  VALUE 'PersonalInfo/SystemSource/$'
    PersonalInfo.SystemSource := #XML_VALUE
  VALUE 'PersonalInfo/User//'
    IGNORE
  VALUE 'PersonalInfo/User'
    IGNORE
  VALUE 'PersonalInfo/User/$'
    PersonalInfo.User := FUNCTION-WEB-USER(<#XML_VALUE>)(2)
  VALUE 'PersonalInfo/ContactType//'
    IGNORE
  VALUE 'PersonalInfo/ContactType'
    IGNORE
  VALUE 'PersonalInfo/ContactType/$'
    PersonalInfo.ContactType := #XML_VALUE
  VALUE 'PersonalInfo/SSN//'
    IGNORE
  VALUE 'PersonalInfo/SSN'
    IGNORE
  VALUE 'PersonalInfo/SSN/$'
    PersonalInfo.SSN := VAL(#XML_VALUE)
  VALUE 'PersonalInfo/SSNProtectedDate//'
    IGNORE
  VALUE 'PersonalInfo/SSNProtectedDate'
    IGNORE
  VALUE 'PersonalInfo/SSNProtectedDate/$'
    PersonalInfo.SSNProtectedDate := VAL(#XML_VALUE)
  VALUE 'PersonalInfo/SSNProtected//'
    IGNORE
  VALUE 'PersonalInfo/SSNProtected'
    IGNORE
  VALUE 'PersonalInfo/SSNProtected/$'
    IF #XML_VALUE = #TRUE
      PersonalInfo.SSNProtected := 'Y'
    END-IF
    IF #XML_VALUE = #FALSE
      PersonalInfo.SSNProtected := 'N'
    END-IF
  VALUE 'PersonalInfo/Prefix//'
    IGNORE
  VALUE 'PersonalInfo/Prefix'
    IGNORE
  VALUE 'PersonalInfo/Prefix/$'
    PersonalInfo.Prefix := #XML_VALUE
  VALUE 'PersonalInfo/Gender//'
    IGNORE
  VALUE 'PersonalInfo/Gender'
    IGNORE
  VALUE 'PersonalInfo/Gender/$'
    PersonalInfo.Gender := #XML_VALUE
  VALUE 'PersonalInfo/DateOfBirth//'
    IGNORE
  VALUE 'PersonalInfo/DateOfBirth'
    IGNORE
  VALUE 'PersonalInfo/DateOfBirth/$'
    PersonalInfo.DateOfBirth := VAL(#XML_VALUE)
  VALUE 'PersonalInfo/BirthCode//'
    IGNORE
  VALUE 'PersonalInfo/BirthCode'
    IGNORE
  VALUE 'PersonalInfo/BirthCode/$'
    PersonalInfo.BirthCode := #XML_VALUE
  VALUE 'PersonalInfo/DateOfDeath//'
    IGNORE
  VALUE 'PersonalInfo/DateOfDeath'
    IGNORE
  VALUE 'PersonalInfo/DateOfDeath/$'
    PersonalInfo.DateOfDeath := VAL(#XML_VALUE)
  VALUE 'PersonalInfo/DeathCode//'
    IGNORE
  VALUE 'PersonalInfo/DeathCode'
    IGNORE
  VALUE 'PersonalInfo/DeathCode/$'
    PersonalInfo.DeathCode := #XML_VALUE
  VALUE 'PersonalInfo/FirstName//'
    IGNORE
  VALUE 'PersonalInfo/FirstName'
    IGNORE
  VALUE 'PersonalInfo/FirstName/$'
    PersonalInfo.FirstName := #XML_VALUE
  VALUE 'PersonalInfo/LastName//'
    IGNORE
  VALUE 'PersonalInfo/LastName'
    IGNORE
  VALUE 'PersonalInfo/LastName/$'
    PersonalInfo.LastName := #XML_VALUE
  VALUE 'PersonalInfo/MiddleName//'
    IGNORE
  VALUE 'PersonalInfo/MiddleName'
    IGNORE
  VALUE 'PersonalInfo/MiddleName/$'
    PersonalInfo.MiddleName := #XML_VALUE
  VALUE 'PersonalInfo/Suffix//'
    IGNORE
  VALUE 'PersonalInfo/Suffix'
    IGNORE
  VALUE 'PersonalInfo/Suffix/$'
    PersonalInfo.Suffix := #XML_VALUE
  VALUE 'PersonalInfo/Remarks//'
    IGNORE
  VALUE 'PersonalInfo/Remarks'
    IGNORE
  VALUE 'PersonalInfo/Remarks/$'
    PersonalInfo.Remarks := #XML_VALUE
  VALUE 'PersonalInfo/OrganizationName//'
    IGNORE
  VALUE 'PersonalInfo/OrganizationName'
    IGNORE
  VALUE 'PersonalInfo/OrganizationName/$'
    PersonalInfo.OrganizationName := #XML_VALUE
  VALUE 'PersonalInfo/WebsiteURL//'
    IGNORE
  VALUE 'PersonalInfo/WebsiteURL'
    IGNORE
  VALUE 'PersonalInfo/WebsiteURL/$'
    PersonalInfo.WebsiteURL := #XML_VALUE
  VALUE 'PersonalInfo/OrganizationEstablishedDate//'
    IGNORE
  VALUE 'PersonalInfo/OrganizationEstablishedDate'
    IGNORE
  VALUE 'PersonalInfo/OrganizationEstablishedDate/$'
    PersonalInfo.OrganizationEstablishedDate := VAL(#XML_VALUE)
  VALUE 'PersonalInfo/OrganizationCertificateCode//'
    IGNORE
  VALUE 'PersonalInfo/OrganizationCertificateCode'
    IGNORE
  VALUE 'PersonalInfo/OrganizationCertificateCode/$'
    PersonalInfo.OrganizationCertificateCode := #XML_VALUE
  VALUE 'PersonalInfo/IntroFlag//'
    IGNORE
  VALUE 'PersonalInfo/IntroFlag'
    IGNORE
  VALUE 'PersonalInfo/IntroFlag/$'
    PersonalInfo.IntroFlag := #XML_VALUE
  VALUE 'PersonalInfo/NameChangeCode//'
    IGNORE
  VALUE 'PersonalInfo/NameChangeCode'
    IGNORE
  VALUE 'PersonalInfo/NameChangeCode/$'
    PersonalInfo.NameChangeCode := #XML_VALUE
  VALUE 'PersonalInfo/Insured//'
    IGNORE
  VALUE 'PersonalInfo/Insured'
    IGNORE
  VALUE 'PersonalInfo/Insured/$'
    IF #XML_VALUE = #TRUE
      PersonalInfo.Insured := 1
    END-IF
    IF #XML_VALUE = #FALSE
      PersonalInfo.Insured := 0
    END-IF
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END
