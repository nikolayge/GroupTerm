* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* SUBPROGRAM-ID: PMBN0001 - Subprogram to populate
* parameter data area for the PORTAMEDIC REQUEST
********************************************************
*        MODIFICATION LOG
********************************************************
* USER   DATE      TAG  REASON
* YAK    06232008       Initial Creation
* YAK    11152011  YK1  Get name/phone/email/address from
*                       the new structure
* YAK    04062012  YK2  Add cell phone
* bz  06/09/2013  Rebranding (Search for AAFMAA)
********************************************************
DEFINE DATA
PARAMETER
1 #APPLICATION-NUMBER (A) DYNAMIC
1 #ORDER-LIST (A) DYNAMIC
1 #ERROR      (A1)
PARAMETER USING PMDA0001      /* Portamedic Request Structure
LOCAL USING OBJLAPTR          /* Application Tracking file fields
LOCAL USING PMDL0001          /* Portamedic Property File
LOCAL USING GPRA0003          /* Error Log file
LOCAL USING ADDA0001          /* Address subroutine              YK1
LOCAL USING OBJLCONT          /* Contact data                    YK1
LOCAL USING OBJLCOPH          /* Phone data                      YK1
LOCAL
1 #ID-NUMBER  (N6)
1 #SMOKER-FLAG (A1)
1 #BIRTH-DATE  (N8)
1 REDEFINE #BIRTH-DATE
  2 #B-YYYY  (A4)
  2 #B-MM    (A2)
  2 #B-DD    (A2)
1 #ZIP-CODE  (N9)
1 REDEFINE #ZIP-CODE
  2 #ZIP-5   (A5)
1 #I          (I2)
1 #N          (N2)
1 #NN         (N2)
1 #WORK-FIELD (A) DYNAMIC
1 #PRIMARY    (A1) CONST <'P'>
1 #CONTACT-ID (N8)
*
1 #PM-ACORD-DESCRIPTION      (A) DYNAMIC
1 #PM-REQUEST                (A78)
1 REDEFINE #PM-REQUEST
  2 #PM-REQUEST-CODE         (A4)
  2 #SPACE                   (A1)
  2 #PM-REQUEST-DESCRIPTION  (A73)
1 #SET-PREF (L)                       /* YK2
*
END-DEFINE
*
PERFORM ASSIGN-COMMON-FIELDS
PERFORM GET-APPLICATION-DATA
IF #ERROR = 'Y'
  ERROR-PROGRAM := *PROGRAM
  CALLNAT 'GPRN0003' ERROR-LOG
  ESCAPE ROUTINE IMMEDIATE
END-IF
PERFORM FORMAT-COMMON-INFO
*
**************************************
DEFINE SUBROUTINE ASSIGN-COMMON-FIELDS
**************************************
*
* BO$TXLIFE /*SEQ
*   2 ATTRIBUTES_OF_BO$TXLIFE
XMLNS$BO           := '"http://ACORD.org/Standards/Life/2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://ACORD.org/Standards/Life/2 TXLife2.10.00.XSD"'
* xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://ACORD.org/Standards/Life/2 TXLife2.10.00.XSD"
BO$USERLOGINNAME   := 'AAFMAA'
BO$CRYPTPSWD       := 'NONE'
* BO$USERDATE
* BO$USERTIME
BO$VENDORNAME       := 'Hooper Holmes, Inc.'
BO$VENDORCODE       := 84
BO$APPNAME          := 'XMLProc'
BO$APPVER           := '1.0'
* BO$TRANSREFGUID
BO$TRANSTYPE        := 'General Requirement Order Request'
BO$TC_0             := 121
* BO$TRANSEXEDATE
* BO$TRANSEXETIME
BO$TRANSMODE        := 'Original'
BO$TC_1             := 2
* BO$TESTINDICATOR    := 'YES'
* BO$TC_2             := 1
BO$CREATIONDATE    := *DAT4I
BO$CREATIONTIME    := *TIME
BO$SOURCEINFONAME  := 'Portamedic'
BO$ID_3            := 'Hold2'
BO$HOLDINGTYPECODE := 'Policy'
BO$TC_3            := 2
BO$ID_2            := 'Policy1_2'
BO$CARRIERPARTYID  := 'Party6_2'
* BO$POLNUMBER       :=
BO$QUALPLANTYPE    := 'Other'
BO$TC_4            := 2147483647
* BO$FACEAMT         :=
BO$ID_0            := 'Coverage1_2'
BO$DEATHBENEFITOPTTYPE := 'Other'
BO$TC_5            := 2147483647
* BO$CURRENTAMT      :=
BO$PARTYID         := 'Party1_2'
BO$LIFEPARTICIPANTROLECODE := 'Primary Insured'
BO$TC_6            := 1
* BO$SMOKERSTAT      := 'Never used tobacco in any form.'
* BO$TC_7            := 1
BO$UNDERWRITINGCLASS := 'Preferred Risk'
BO$TC_8            := 2
*
* array of party
C@BO$PARTY             := 3
EXPAND ARRAY BO$PARTY TO (*:C@BO$PARTY)
C@BO$PHONE(*)          := 3                           /* YK2
FOR #I = 1 TO C@BO$PARTY
  EXPAND ARRAY BO$PHONE TO (*:*,*:3)                  /* YK2
END-FOR
BO$ID_4(1)                := 'Party1_2'
BO$PARTYTYPECODE(1)       := 'Person'
BO$TC_12(1)               := 1
BO$GOVTIDTC(1)            := 'Social Security Number US'
BO$TC_13(1)               := 1             /* ATTRIBUTES_OF_BO$GOVTIDTC
* end of party 1_2
BO$ID_4(2)                := 'Party6_2'
BO$PARTYTYPECODE(2)       := 'Organization'
BO$TC_12(2)               := 2
BO$FULLNAME(2)            := 'AAFMAA'
BO$ABBRNAME(2)            := 'AAFMAA'
BO$ADDRESSTYPECODE(2)     := 'Business'
BO$TC_15(2)               := 2           /* 2 - Business
BO$LINE1(2)               := '102 Sheridan Avenue'
BO$CITY(2)                := 'Ft. Myer'
BO$ADDRESSSTATETC(2)      := 'VA'
BO$TC_16(2)               := 55          /* 26 - MA  55 - VA
BO$ZIP(2)                 := '94104'
BO$TC_17(2)               := 1           /* ATTRIBUTES_OF_BO$PREFADDR
BO$PHONETYPECODE(2,1)     := 'Business Fax'
BO$TC_18(2,1)             := 4
BO$AREACODE(2,1)          := '703'
BO$DIALNUMBER(2,1)        := '5221336'
BO$TC_19(2,1)             := 1             /* ATTRIBUTES_OF_BO$PREFPHONE
BO$CARRIERCODE(2)         := 'AAFMAA'
BO$NAICCODE(2)            := '19191'
BO$EMAILTYPE(2)           := 'Business'    /* 1 - Business
BO$TC_20(2)               := 1
BO$ADDRLINE(2)            := 'leticia.comsti@aafmaa.com'
BO$TC_21(2)               := 1             /* ATTRIBUTES_OF_BO$PREFEMAILADDR
* end of party 6_2
*
BO$ID_4(3)                := 'Party7_2'
BO$PARTYTYPECODE(3)       := 'Organization'
BO$TC_12(3)               := 2
BO$FULLNAME(3)            := 'Portamedic - Ordering'
BO$ADDRESSTYPECODE(2)     := 'Business'
BO$TC_15(2)               := 2           /* 2 - Business
BO$LINE1(2)               := '170 Mt. Airy Road'
BO$CITY(2)                := 'Basking Ridge'
BO$ADDRESSSTATETC(2)      := 'NJ'
BO$TC_16(2)               := 35          /* 26 - MA  55 - VA
BO$ZIP(2)                 := '99999'
BO$TC_17(2)               := 1           /* ATTRIBUTES_OF_BO$PREFADDR
BO$PHONETYPECODE(2,1)     := 'Business'
BO$TC_18(2,1)             := 2
BO$AREACODE(2,1)          := '908'
BO$DIALNUMBER(2,1)        := '7665000'
BO$TC_19(1,1)             := 1             /* ATTRIBUTES_OF_BO$PREFPHONE
BO$PHONETYPECODE(2,2)     := 'Business Fax'
BO$TC_18(2,2)             := 4
BO$AREACODE(2,2)          := '908'
BO$DIALNUMBER(2,2)        := '9536304'
BO$TC_19(2,2)             := 1             /* ATTRIBUTES_OF_BO$PREFPHONE
* end of party 7_2
*
C@BO$RELATION               := 3
EXPAND ARRAY BO$RELATION TO (* : C@BO$RELATION)
BO$RELATEDOBJECTID(1)       := 'Party1_2'
BO$RELATEDOBJECTID(2)       := 'Party6_2'
BO$RELATEDOBJECTID(3)       := 'Party7_2'
BO$ORIGINATINGOBJECTID(*)   := 'Hold2'
BO$ID_5(1)                  := 'Relation1_2'
BO$ID_5(2)                  := 'Relation6_2'
BO$ID_5(3)                  := 'Relation7_2'
BO$ORIGINATINGOBJECTTYPE(*) := 'Holding'
BO$TC_22(*)                 := 4
BO$RELATEDOBJECTTYPE(*)     := 'Party'
BO$TC_23(*)                 := 6
BO$RELATIONROLECODE(1)      := 'Insured'
BO$TC_24(1)                 := 32
BO$RELATIONROLECODE(2)      := 'Carrier'
BO$TC_24(2)                 := 87
BO$RELATIONROLECODE(3)      := 'Paramed Company'
BO$TC_24(3)                 := 90
END-SUBROUTINE
**************************************
DEFINE SUBROUTINE GET-APPLICATION-DATA
**************************************
*
#ID-NUMBER := VAL(#APPLICATION-NUMBER)
Compress 'AT' #APPLICATION-NUMBER into BO$POLNUMBER leaving no
FIND(1) AT-V WITH ID-NUMBER = #ID-NUMBER
  IF NO RECORDS FOUND
     COMPRESS 'No records found for AT ' #ID-NUMBER INTO ERROR-MESSAGE
     #ERROR := 'Y'
     ESCAPE ROUTINE IMMEDIATE
  END-NOREC
  IF C*PORTAMEDIC-REQUEST = 0
     COMPRESS 'No Services Codes requested for AT ' #ID-NUMBER INTO ERROR-MESSAGE
     #ERROR := 'Y'
     ESCAPE ROUTINE IMMEDIATE
  END-IF
  #CONTACT-ID := AT-V.CONTACT-ID
*
  BO$FACEAMT             := FACE-AMT-UNITS * 1000 + FACE-AMT-DOLS
  BO$CURRENTAMT          := BO$FACEAMT
***  #NAME                     := NAME
  #SMOKER-FLAG           := SMOKER-FLAG
  PERFORM FORMAT-CODE-REMARKS
END-FIND
END-SUBROUTINE
*
************************************
DEFINE SUBROUTINE FORMAT-COMMON-INFO
************************************
*
*  BO$FIRSTNAME(1)
*  BO$MIDDLENAME(1)
*  BO$LASTNAME(1)
*
* YK1 Start
FIND(1) CT-V WITH CONTACT-ID = #CONTACT-ID
  BO$FIRSTNAME(1) := CT-V.FIRST-NAME
  BO$MIDDLENAME(1):= CT-V.MIDDLE-NAME
  BO$LASTNAME(1)  := CT-V.LAST-NAME
  BO$GENDER(1)    := CT-V.GENDER-CD
  #BIRTH-DATE     := CT-V.DATE-OF-BIRTH
  BO$GOVTID(1)    := SSN
END-FIND
* YK1 End
  DECIDE ON FIRST VALUE OF #SMOKER-FLAG
    VALUE 'Y'                         /* 1 - 'Never used tobacco in any form.'
       BO$SMOKERSTAT  := 'Using tobacco'
       BO$TC_7        := 2
    VALUE 'N'
       BO$SMOKERSTAT  := 'Never used tobacco in any form.'
       BO$TC_7        := 1
    VALUE ' '
       BO$SMOKERSTAT  := 'Unknown'
       BO$TC_7        := 0
    NONE
     IGNORE
  END-DECIDE
* BO$BIRTHDATE(1)              /* Format as *DAT4I
  COMPRESS #B-YYYY #B-MM #B-DD TO BO$BIRTHDATE(1) WITH DELIMITER '-'
* BO$TC_14(1)               :=          /* 1 - 'M'; 2 - 'F'
  IF BO$GENDER(1) = 'M'
    BO$TC_14(1)       := 1        /* 1 - 'M'; 2 - 'F'
  ELSE
    BO$TC_14(1)       := 2
  END-IF
* YK1 Start
#ADD-CONTACT-ID := #CONTACT-ID
#ADD-TYPE       := #PRIMARY
CALLNAT 'ADDN0001' #PDA-ADDRESS
COMPRESS #ADD-STREET #ADD-UNIT INTO BO$LINE1(1)
* BO$PREFADDR
BO$TC_17(1)               := 1       /* ATTRIBUTES_OF_BO$PREFADDR
BO$ADDRESSTYPECODE(1)     := 'Residence'
BO$TC_15(1)               := 1         /* 1 - Residence
BO$CITY(1)           := #ADD-CITY
BO$ADDRESSSTATETC(1) := #WORK-FIELD := #ADD-STATE
BO$ZIP(1)            := #ADD-ZIP-CODE
***  BO$CITY(1)                := #CITY
***  BO$ADDRESSSTATETC(1)      := #WORK-FIELD := #STATE
  #WORK-FIELD               := FUNCTION-STATE-CODE(<#WORK-FIELD,'N'>) /* 26 - MA
  IF #WORK-FIELD NE ' '
     #WORK-FIELD            := *TRIM(#WORK-FIELD)
     BO$TC_16(1)            := VAL(#WORK-FIELD)
  END-IF
  BO$EMAILTYPE(1)           := 'Personal'    /* 1 - Business   2 - Personal?
  BO$TC_20(1)               := 2
  BO$ADDRLINE(1)            := F-PREF-EMAIL(<#CONTACT-ID>)
  BO$TC_21(1)               := 1             /* Preferred e-mail
* array of phones
  FIND CNT-PHONE-V WITH CONTACT-ID = #CONTACT-ID
    DECIDE FOR EVERY CONDITION
      WHEN PHONE-TYPE-CODE = 'C'                   /* YK2 Start
        BO$PHONETYPECODE(1,1)  := 'Mobile'        /* 12 - Mobile
        BO$TC_18(1,1)          := 12
        BO$AREACODE(1,1)       := CNT-PHONE-V.AREA-CODE
        BO$DIALNUMBER(1,1)     := CNT-PHONE-V.DIAL-NUMBER
* BO$PREFPHONE Default Cell to prefered
        BO$TC_19(1,1)          := 1             /* ATTRIBUTES_OF_BO$PREFPHONE   YK2 End
      WHEN PHONE-TYPE-CODE = 'B'
        BO$PHONETYPECODE(1,2)  := 'Business'    /* 2 - Business
        BO$TC_18(1,2)          := 2
        BO$AREACODE(1,2)       := CNT-PHONE-V.AREA-CODE
        BO$DIALNUMBER(1,2)     := CNT-PHONE-V.DIAL-NUMBER
* BO$PREFPHONE
        BO$TC_19(1,2)          := 0             /* ATTRIBUTES_OF_BO$PREFPHONE
      WHEN PHONE-TYPE-CODE = 'H'
* BO$PREFPHONE
        BO$PHONETYPECODE(1,3)  := 'Residential' /* 1 - Residential
        BO$TC_18(1,3)          := 1
        BO$AREACODE(1,3)       := CNT-PHONE-V.AREA-CODE
        BO$DIALNUMBER(1,3)     := CNT-PHONE-V.DIAL-NUMBER
        BO$TC_19(1,3)          := 0             /* ATTRIBUTES_OF_BO$PREFPHONE
      WHEN NONE
        IGNORE
    END-DECIDE
  END-FIND
* Set preferred correctly  YK2
* Cell = Preferred
* Work = Secondary
* Home = Third
  DECIDE FOR FIRST CONDITION
    WHEN BO$AREACODE(1,1) = ' ' AND BO$AREACODE(1,2) <> ' '
     BO$TC_19(1,1) := 0
     BO$TC_19(1,2) := 1
    WHEN BO$AREACODE(1,1) = ' ' AND BO$AREACODE(1,2) = ' ' AND BO$AREACODE(1,3) <> ' '
     BO$TC_19(1,1) := 0
     BO$TC_19(1,3) := 1
    WHEN NONE
      IGNORE
  END-DECIDE
* YK1 End  YK2 End
END-SUBROUTINE
*
*************************************
DEFINE SUBROUTINE FORMAT-CODE-REMARKS
*************************************
*
RESET #N
C@BO$REQUIREMENTINFO := C*PORTAMEDIC-REQUEST * 4
EXPAND ARRAY BO$REQUIREMENTINFO TO (*:C@BO$REQUIREMENTINFO)
FOR #NN = 1 TO C*PORTAMEDIC-REQUEST
  #PM-ACORD-DESCRIPTION := FUNCTION-PM-ACORD(<PM-CODE(#NN)>)
  IF #PM-ACORD-DESCRIPTION = ' '
     COMPRESS 'Invalid Service Code' PM-CODE(#NN) 'requested for AT' #ID-NUMBER
        INTO ERROR-MESSAGE
     ERROR-PROGRAM := *PROGRAM
     CALLNAT 'GPRN0003' ERROR-LOG
     ESCAPE TOP
  END-IF
  REPEAT
     EXAMINE #PM-ACORD-DESCRIPTION FOR ';' POSITION #I
     IF #I = 0
       ESCAPE BOTTOM
     END-IF
     #N := #N + 1
     #PM-REQUEST := SUBSTR(#PM-ACORD-DESCRIPTION,1,#I)
     EXAMINE #PM-REQUEST FOR ';' REPLACE ' '
*    WRITE #PM-REQUEST-CODE
     BO$TC_9(#N)                := VAL(#PM-REQUEST-CODE)
     BO$REQCODE(#N)             := *TRIM(#PM-REQUEST-DESCRIPTION)
     BO$REQUIREMENTACCTNUM(#N)  := '59979'                 /* '91919'
     COMPRESS BO$REQUIREMENTACCTNUM(1) '-' *DATN '-' BO$POLNUMBER '-' #NN '-' #N
        INTO BO$REQUIREMENTINFOUNIQUEID(#N) LEAVING NO
     COMPRESS 'Req' #NN '_' #N INTO BO$ID_1(#N) LEAVING NO
     BO$REQSTATUS(#N)           := 'Outstanding'
     BO$TC_10(#N)               := 4
     BO$REQUESTEDDATE(#N)       := *DAT4I
     BO$RELEASEPARTYORGCODE(#N) := 'AAFM'
     IF #I = *LENGTH(#PM-ACORD-DESCRIPTION)
        ESCAPE BOTTOM
     ELSE
        #I := #I + 1
        #PM-ACORD-DESCRIPTION   := SUBSTR(#PM-ACORD-DESCRIPTION,#I)
        #PM-ACORD-DESCRIPTION   := *TRIM(#PM-ACORD-DESCRIPTION)
     END-IF
*
  END-REPEAT
     COMPRESS BO$DESCRIPTION #NN PM-REMARK(#NN) INTO BO$DESCRIPTION
END-FOR
IF #N NE 0
  C@BO$REQUIREMENTINFO := #N
  RESIZE ARRAY BO$REQUIREMENTINFO TO (*:C@BO$REQUIREMENTINFO)
  BO$APPLIESTOPARTICIPANTID(*) := 'Party1_2'
  BO$APPLIESTOPARTYID(*) := 'Party1_2'
  BO$FULFILLERPARTYID(*) := 'Party7_2'
  BO$ATTACHMENTTYPE      := 'Comment'
  BO$TC_11               := 2
ELSE
  COMPRESS 'No valid Service Codes requested for AT' #ID-NUMBER
        INTO ERROR-MESSAGE
  #ERROR := 'Y'
  ESCAPE ROUTINE IMMEDIATE
END-IF
END-SUBROUTINE
END
