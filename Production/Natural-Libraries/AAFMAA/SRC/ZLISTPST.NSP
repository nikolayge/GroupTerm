* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* PROGRAM-ID: ZLISTPST - MISC LISTING WITH SORT
************************************************************************
*                   MODIFICATION HISTORY
* TAG      DATE          REASON
* SAG-AB 20061022        Changed EBCDIC Hex '05' value to ASCII Hex '09'
************************************************************************
DEFINE DATA
LOCAL
*
1 #AMT-11     (A11)
1 #55-OF-RET-PAY      (P5.2)
1 #1992-NO-RET-PAY    (P5)
1 #1999-NO-RET-PAY    (P5)
1 #1992-PARTIAL     (A1)
1 #1999-PARTIAL     (A1)
1 #1992-PARTIAL-NUM (P5)
1 #1999-PARTIAL-NUM (P5)
1 #EXTRACT    (A70)
1 #FACE-X     (A9)
1 #NUM-MBRS    (N5)
1 #iss-dt  (n8)
1 #has-q    (l)
* * * *   S T A T U S   F I L E   * * * * * * * * * * * * * * *
1 lk-v view of a-status
 2 id-number
 2 status    (9)
 2 issue-date (9)
 2 plan      ( 9)
 2 paid-up-date (9)
 2 paid-to-date (9)
*  
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER      (N6)
  2 REDEFINE ID-NUMBER
    3 ID-NBR       (A6)
* 2 TRAD-UP-SENT-DT (N8)
  2 MEMBER-FLAG         (A1)
  2 WIDOW-FLAG          (A1)
  2 ALOT-CHG-AUTH
  2 LINKED-CN           (N6/10)
  2 redefine linked-cn
   3 linked-cn-a  (a6/10)
 2 PROCESS-IND         (A1)
* 2 X-BILL-ADJUST       (P5.2/9)
  2 INTRO-FLAG          (A1)
* 2 PAD-ACCT-NUM        (A17)
* 2 PAD-ABA-NBR         (A9)
* 2 RANK                (A3)
  2 NAME                (A25)
* 2 NAME-SP             (A25)
* 2 APPL-SOURCE         (A7)
  2 SSN                 (P9)
* 2 ANNUAL-RPT-FLAG
* 2 SEX                 (A1)
* 2 DATE-LAST-ADDR-UPDT (N8)
* 2 ADDRESS-CHG-CODE    (A1)
* 2 ADDRESS-1           (A25)
* 2 ADDRESS-2           (A25)
* 2 ADDRESS-3           (A25)
* 2 ZIP-CODE            (N9)
* 2 REDEFINE ZIP-CODE
*  3 ZIP-CODE-5         (N5)
*  3 ZIP-CODE-4         (N4)
* 2 SSN-SP              (P9)
* 2 VSI-END-DT
* 2 SOC-SEC-ST-DATE
* 2 SPS-SS-ST-DATE
* 2 DATE-OF-RANK
* 2 BASE-PAY-EF-DATE    (N8)
* 2 ACTIVE-DUTY-BASE-DATE (N8)
* 2 SERVICE-DATE-1405     (N8)
* 2 MILITARY-SERVICE    (A3)
  2 MILITARY-STATUS     (A1)
* 2 INTERNET-ADDR
* 2 DATE-RETIRED        (N8)
* 2 NAME                (A25)
* 2 NAME-SP             (A25)
* 2 LOAN-AMOUNT-2       (P5.2)
* 2 x-BILL-DOLLAR   (9)
* 2 APL-CNT
  2 DEBIT-CREDIT-AMT
* 2 DUES-TOT-PAID
* 2 DUES-BALANCE
* 2 DUES-FPF
* 2 STATUS-CODE-SP       (A1)
* 2 SPS-CSRS-IND
* 2 DEATH-SERVICE-CON
* 2 FORMER-SPOUSE-STATUS (A1)
* 2 DATE-OF-DIVORCE      (N8)
* 2 MIL-SBP-OPT         (A1)
* 2 O-E-DATE
* 2 O-E-SBP-OPT         (A1)
* 2 O-E-SBP-AMT         (P5)
* 2 O-E-TYPE-ANN        (A1)
* 2 O-E-99-DATE
* 2 O-E-99-SBP-OPT      (A1)
* 2 O-E-99-SBP-AMT      (P5)
* 2 O-E-99-TYPE-ANN        (A1)
* 2 O-E-99-SSBP-PCT
* 2 MIL-SBP-AMT         (P5)
* 2 VA-DIC-AMT
* 2 RETIRED-PAY-AMT     (P5)
* 2 DEATH-SERVICE-CON
* 2 VA-DISABILITY-PCT    (P1.2)
* 2 DISABILITY-PCT       (P1.2)
* 2 VA-DISABILITY-PCT
* 2 VA-DISABLE-DATE
* 2 VA-CLAIM-NUMBER
  2 DATE-OF-DEATH
* 2 DATE-OF-BIRTH-SP    (N8)
* 2 DATE-OF-BIRTH       (N8)
* 2 REDEFINE DATE-OF-BIRTH
*  3 DOB-YYYY          (N4)
*  3 DOB-MM            (N2)
*  3 DOB-DD            (N2)
* 2 LAST-SEG-USED
  2 NUMBER-MEMBERSHIPS
* 2 NUM-MBRSHIPS        (9)
* 2 SPLIT-IND           (N1/9)
  2 ISSUE-DATE          (N8/9)
* 2 REDEFINE ISSUE-DATE
*  3 ISS-DT-OCC (9)
*   4 ISS-DT-YYYY    (N4)
*   4 ISS-DT-MM      (N2)
*   4 ISS-DT-DD      (N2)
* 2 ISSUE-AGE           (A2/9)
  2 PLAN                (A3/9)
  2 status              (9)
* 2 REDEFINE PLAN
*  3  PLAN-OCC        (9)
*   4 PLAN-A1    (A1)
*   4 PLAN-A2    (A2)
* 2 FACE-AMOUNT         (9)
* 2 DEATH-BENEFIT       (9)
  2 PAY-STATUS          (A2/9)
  2 MODE                (A1/9)
  2 PAID-TO-DATE      (9)
* 2 REDEFINE PAID-TO-DATE
*  3  PAID-TO-DATE-OCC  (9)
*   4 PT-YYYYMM     (N6)
*   4 PT-DD         (N2)
* 2 BILL-TO-DATE      (9)
* 2 SMOKER-FLAG      (9)
* 2 MONTH-ALLOC-AMT   (9)
* 2 ANNUAL-PREM         (9)
* 2 CASH-VALUE          (9)
  2 PAID-up-DATE        (N8/9)
* 2 CONV-DURATION       (N3/9)
* 2 OWNERSHIP-FLAG      (A1/9)
* 2 WHT-YEAR            (N4/2)
* 2 MTD-ACV-PREM-ADJ    (9)
* 2 PREM-RATING         (9)
* 2 PAD-CODE            (A1)
* 2 X-ALT-LP-AMT        (P5.2/9)
* 2 X-ALT-LP-AMT-2      (P5.2/9)
* 2 X-ALT-LP-IND        (A1/9)
* 2 X-ALT-LP-IND-2      (A1/9)
  2 X-BILL-ADJUST       (9)
* 2 ALOT-AMT            (P5.2)
* * * *   A P P L I C A T I O N   T R A C K I N G   * * * * * *
* 1 AT-V VIEW OF A-APPL-TRACKING
*  2 ACTION-FLAG    (A1)
*  2 SSN            (N9)
*  2 ID-NUMBER      (N6)
*  2 REDEFINE ID-NUMBER
*    3 ID-NBR       (A6)
*  2 RANK                (A3)
*  2 SEX                 (A1)
*  2 DATE-RECEIVED
*  2 ADDRESS-1           (A25)
*  2 ADDRESS-2           (A25)
*  2 ZIP-CODE            (P9)
*  2 MIL-STATUS          (A1)
*  2 NAME                (A25)
*  2 MIL-SERVICE         (A3)
*  2 DATE-OF-BIRTH       (N8)
*  2 REDEFINE DATE-OF-BIRTH
*   3 DOB-YYYY          (N4)
*   3 DOB-MM            (N2)
*   3 DOB-DD            (N2)
*
* * * *   F I R S       F I L E   * * * * * * * * * * * * * * *
* 1 FR-V VIEW OF A-FIRS
*  2 ID-NUMBER      (N6)
*  2 REDEFINE ID-NUMBER
*    3 ID-NBR       (A6)
* 2 MEMBER-FLAG    (A1)
* 2 WIDOW-FLAG     (A1)
* 2 CAUSE-OF-DEATH
* 2 PLACE-OF-BIRTH
* 2 PLACE-OF-DEATH
* 2 DEPN-BIRTH-CD (A1/14)
* 2 DEPN-STATUS-CD (A1/14)
* 2 DEPN-DATE-OF-BIRTH (N8/14)
*  2 POL-NAME           (A19/45)
*
* 1 #BD-ID    (N6)
*
* 1 BD-V VIEW OF A-NOTES
*  2 ID-NUMBER          (N6)
* 2 REDEFINE ID-NUMBER
*  3 ID-NUMBER-1ST    (N1)
*  3 ID-NUMBER-LAST-5 (N5)
* 2 NOTE-DATE          (N8/60) /* LET P/A = PRIMARY/ALTERNATE DESING
* 2 REDEFINE NOTE-DATE         /* let L = linked policies
*  3 BENE-DATES-6-POLS (6)
*   4 BENE-ISS-DT        (N6/7)   /* (D, L)
*   4 BENE-SPLIT-IND     (N1/7)   /* (D, L)
*   4 BENE-LST-UPD       (N8)     /* (D)
*   4 BENE-STRT-PEND     (N8)     /* (D)
*   4 BENE-FOL-UP-IND    (N1)     /* (D)
*   4 BENE-OWN-TRNSF-DT  (N8)     /* (D)
*   4 BENE-SUC-OWN       (N1)     /* (D)
*   4 BENE-new-layout    (N1)     /* (D)
*   4 BENE-FIL1          (A4)
* 2 NOTE-CLERK-ID      (A3/60)
* 2 REDEFINE NOTE-CLERK-ID
*  3 BENE-MISC-6-POLS  (6)
*   4 BENE-STATUS      (A1)     /* (D)
*   4 BENE-RESTRICT    (A1)     /* (D)
*   4 BENE-MISC-PRIM-SEC (2)
*    5 BENE-TYPE        (A1)    /* (D, P/A)
*    5 BENE-SHARE-TYP   (A1)
*    5 BENE-MISC-FIL-2  (A12)
* 2 NOTE-TEXT          (A60/60)
* 2 REDEFINE NOTE-TEXT
*  3 BENE-TEXTS-6-POLS (6)
*   4 BENE-TEXT-PRIM-SEC (2)
*    5 BENE-TEXT-OCC    (5)    /* (D, P/A, TEXT-LINE)
*     6 BENE-TEXT        (A60)
*     6 REDEFINE BENE-TEXT
*      7 BENE-TEXT-1ST-25 (A25)
*      7 BENE-TEXT-LST-35 (A35)
*
1 #COUNTERS
  2 #RECS-READ        (P5)
  2 #RECS-ARMY-ACT    (P5/5)
  2 #RECS-AIRF-ACT    (P5/5)
  2 #RECS-ARMY-RET    (P5/5)
  2 #RECS-AIRF-RET    (P5/5)
  2 #RECS-ARMY-CIV    (P5/5)
  2 #RECS-AIRF-CIV    (P5/5)
  2 #RECS-GEN-ACCESS  (P5)
  2 #RECS-SPS-ACCESS  (P5)
  2 #RECS-SELECTED    (P5)
  2 #CNT              (P5)
  2 #CNT-2            (P5)
  2 #CNT-3            (P5)
  2 #CNT-4            (P5)
  2 #CNT-5            (P5)
  2 #E-CNT            (P5)
  2 #P-CNT            (P5)
  2 #T-CNT            (P5)
  2 #M-CNT            (P5)
  2 #CNT-INTERNET-ADDR (P5)
  2 #AREA-CNT         (P5)
  2 #I1               (I2)
  2 #I2               (I2)
  2 #I3               (I2)
  2 #I4               (I2)
  2 #FOUND-IT         (L)
  2 #LAST-RANK        (A3)
  2 #LAST-ACCT        (A17)
  2 #LAST-ZIP-KEY     (N1)
  2 #LAST-APPL-SOURCE (A7)
  2 #TOT-FACE         (P13.2)
  2 #TOT-DB           (P13.2)
  2 #TOT-POLS         (P5)
  2 #TOT-MBRS         (P5)
  2 #AVG-FACE         (P6.2)
  2 #AVG-DB           (P6.2)
*
1 #CD     (A1/50)
1 #CD-NUM (N6/50)
1 #CD-CUR-CHG (N6/50)
*
**1 #TAB    (A1) INIT <H'05'> /* SAG-AB 20061022
1 #TAB    (A1) INIT <H'09'>   /* SAG-AB 20061022
1 #CURR-AGE (N4)
1 #TOT-BLANK  (N5)
1 #TOT-1      (N5)
1 #TOT-2      (N5)
1 #TOT-X      (N5)
1 #BASD              (A8)
1 #PEBD              (A8)
1 #D-1405            (A8)
1 #ZIP-KEY           (N1)
1 #ZIP-CODE          (N9)
1 REDEFINE #ZIP-CODE
 2 #ZIP-XXXXX        (N5)
 2 #ZIP-XXXX         (N4)
*
1 #DATE              (N8)
* 1 #SSN               (N9)
* 1 REDEFINE #SSN
*  2 #SSN-1ST-3        (N3)
*  2 #SSN-MID-2        (N2)
*  2 #SSN-QTD          (N4)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
 2  #DD-FIL   (N2)
 2  #YYMMDD (N6)
 2  REDEFINE #YYMMDD
  3 #YYMMDD-A  (A6)
1 REDEFINE #YYYYMMDD
 2 #YYYYMM        (N6)
 2 REDEFINE #YYYYMM
  3 #YYYY          (N4)
  3 #MM            (N2)
 2 REDEFINE #YYYYMM
  3 #CENT-6        (N2)
  3 #YY-6          (N2)
  3 #MM-6          (N2)
 2 #DD            (N2)
1 #ELIG-DP   (L)
1 #1962-CNT  (P5)
1 #1961-CNT  (P5)
1 #1960-CNT  (P5)
1 #1959-CNT  (P5)
1 #HAS-VGLI  (L)
1 #HAS-NO-BENES  (P5)
1 #CAP-ISS-DT  (N8)
1 #MON-PREM    (N7.2)
1 #TOT-AGE     (P11)
1 #AVG-AGE     (P3)
1 #AGE         (P3)
1 #MOD-PMT     (N5.2)
1 #MOD-DUES    (N3.2)
1 #DUES        (N3.2)
1 #NEW-BILL-DOLLAR (N5.2)
1 #UPDATE   (L)
1 #PREM           (P5.2)
1 #TOT-MBR-PREM   (P5.2)
1 #TOT-MBR-DUES   (P5.2)
1 #TOT-PREM   (P7.2)
1 #MODE-PRM   (P7.2)
1 #TOT-MODE-PRM   (P7.2)
1 #COMMAND        (A2)
1 #INVALID    (L)
1 #RANK-DISPL (P2)
1 #RANK-LIT   (A23)
1 #RANK-DISPLAY (A5)
1 #SBP-OPT      (A1)
1 #INS-ONLY     (P5)
1 #CAP-NXT-WL-WITH-LOAN (P5)
1 #LT-NS      (N5)
1 #RT-NS      (N5)
1 #G-F        (N5)
1 #LTS        (N5)
1 #WIDS       (N5)
1 #DUES-PAYING (L)
1 #EXTRACT-RECORD1 (N9)
1 #EXTRACT-RECORD2 (A125)
1 #DEATH-BENEFIT (A10)
1 #FACE-AMOUNT (A10)
1 #CASH-VALUE (A10)
1 #SPLIT      (A1)
1 #STREET   (A25)
1 #STREET-2 (A25)
1 #CITY     (A22)
1 #STATE    (A2)
1 #ERR-MSG      (A60)
1 #NAME      (A25)
1 #LAST      (A25)
1 #FIRST-20  (A20)
1 #MI        (A1)
1 #HOLD-NAME      (A25)
1 #MEMBER  (A1)
1 #SSN (A9)
1 #ZIP (A9)
1 #NOT-FOUND (L)
1 #LOAN-AMT  (P5.2)
1 #LOAN-AMT-DISP  (A10)
1 #ALOT-AMT       (A10)
1 #last-ssn     (n9)
1 #last-cn      (n6)
1 #last-process-ind (a1)
1 #last-intro-flag   (a1)
*
END-DEFINE
*
FORMAT (2) LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
          'RT mbrs with sps/gen who have RT'
                      5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
FORMAT (3) LS=133 PS=76
WRITE  (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
          'INACTIVE POLICIES WITH BADJ'
                      5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
FORMAT (4) LS=133 PS=76
WRITE  (4) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
          'other members where there is dues balance'
                      5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
FORMAT (5) LS=133 PS=76
WRITE  (5) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
          'Ins-Only with FPF Balance'
                      5X 'DATE: ' *DATN 5X 'TIME: ' *TIMX
*
* COMPRESS 'IDNum' #TAB 'Gender' #TAB 'MilStat' #TAB 'MilServ' #TAB
*          'Rank' #TAB 'Zip' #TAB 'IssDate' #TAB 'IssAge' #TAB
*          'Plan' #TAB 'Smoker' #TAB 'PremRating' #TAB
*          'FaceAmt' #TAB 'CashVal' #TAB 'DeathBen'
*      INTO #EXTRACT-RECORD LEAVING NO
* COMPRESS 'IDnum' #TAB 'Name' #TAB 'CurrAlotAmt'
*           #TAB 'LoanAlotAmt' #TAB 'PadCode'
*      INTO #EXTRACT-RECORD2 LEAVING NO
*
*  COMPRESS 'SSN'
   compress      'CN'
            #TAB 'Iss-dt'
            #tab 'Renew-dt'
            #tab 'Paid-to-date'
            #tab 'SPS-GEN-CN'
            #tab 'Iss-dt'
            #tab 'Renew-dt'
            #tab 'Paid-to-date'
*           #TAB 'Name'
       INTO #EXTRACT LEAVING NO
   WRITE WORK 1 #EXTRACT
* RESET #EXTRACT-RECORD2
*
READ ST-V BY MEMBER-KEY FROM '001900'
* READ ST-V BY ZIP-CODE-KEY
* READ ST-V BY NAME-KEY
* READ ST-V BY WIDOW-KEY
* READ ST-V BY ssn
* READ ST-V PHYSICAL
* READ FR-V PHYSICAL
* READ FR-V BY WIDOW-KEY
* READ WORK 1 #EXTRACT-RECORD1
  for #i1 1 to 9
    if   (status (#i1) = 'D')
     and (plan (#i1) = 'RT')
      for #i3 1 to 10
        if st-v.linked-cn (#i3) = 0
          escape bottom
        end-if
*          
        find lk-v with member-key = st-v.linked-cn-a (#i3)
          for #i2 1 to 9
            if   (status (#i2) = 'D')
             and (plan (#i2) = 'RT')
              compress  st-v.id-number
                 #tab st-v.issue-date   (#i1)
                 #tab st-v.paid-up-date (#i1)
                 #tab st-v.paid-to-date (#i1) 
                 #tab lk-v.id-number
                 #tab lk-v.issue-date   (#i2)
                 #tab lk-v.paid-up-date (#i2)
                 #tab lk-v.paid-to-date (#i2) 
                  into #extract leaving no
              write work 1 #extract
            end-if
          end-for
        end-find
      end-for  
    end-if
  end-for
*
  escape top
*
      if st-v.ssn = #last-ssn
    COMPRESS st-v.ssn
            #TAB st-v.id-number
            #tab #last-cn
            #tab st-v.process-ind
            #tab #last-process-ind
            #tab st-v.intro-flag
            #tab #last-intro-flag
*           #TAB st-v.name
                   INTO #EXTRACT LEAVING NO
   WRITE WORK 1 #EXTRACT
  end-if
*
  move st-v.ssn         to #last-ssn
  move st-v.id-number   to #last-cn
  move st-v.process-ind to #last-process-ind
  move st-v.intro-flag  to #last-intro-flag
  escape top
*
  reset #iss-dt #has-q
  FOR #I1 1 TO 9
    if status (#i1) = 'D'
      if  (plan (#i1) = mask (N'PF'))
       and (process-ind = 'G')
       and (pay-status (#i1) lt '40')
        add 1 to #cnt-2
        display (2) #cnt-2 st-v.id-number plan (#i1) process-ind mode (#i1)
      end-if
*
      escape bottom  /* Only 1st active policy
    end-if

  end-for
*
  FOR #I1 1 TO 9
      if status (#i1) = 'D'
      move issue-date (#i1) to #iss-dt  /* Latest #iss-dt
      if   (mode (#i1) = 'Q')
       and (pay-status (#i1) lt '40')
        move true to #has-q
      end-if
    end-if
  end-for
*
  if   (#iss-dt ge 20060101)
   and (#has-q)
   and (ALOT-CHG-AUTH = 'Y')
   and (military-status = 'R')
    COMPRESS st-v.id-number
            #TAB st-v.ssn
            #TAB st-v.name
            #tab #iss-dt
       INTO #EXTRACT LEAVING NO
   WRITE WORK 1 #EXTRACT
  end-if
*
  escape top
*
  ESCAPE TOP
* IF PROCESS-IND = 'C'
*  ESCAPE TOP
* END-IF
*  IF ST-V.ID-NUMBER GE 013000
* IF ST-V.ID-NUMBER GE 600000
*    ESCAPE BOTTOM
*  END-IF
*
* COMPUTE #55-OF-RET-PAY = RETIRED-PAY-AMT * .52
* RESET #1992-PARTIAL #1999-PARTIAL
* IF (O-E-DATE NE 0) OR (O-E-99-DATE NE 0)
*   IF (O-E-99-DATE NE 0)
*     IF RETIRED-PAY-AMT = 0
*       ADD 1 TO #1999-NO-RET-PAY
*     ELSE
*       IF   (O-E-99-SBP-AMT NE 0)
*        AND (O-E-99-SBP-AMT LT #55-OF-RET-PAY)
*         MOVE 'X' TO #1999-PARTIAL
*         ADD 1 TO #1999-PARTIAL-NUM
*       END-IF
*     END-IF
*
*     ADD 1 TO #CNT-3
*     DISPLAY (3) #CNT-3
*      'CN'              ST-V.ID-NUMBER
*      'MIL-STA'         MILITARY-STATUS
*      'MIL-ID'          MILITARY-SERVICE
*      '99-O-E/DATE'     O-E-99-DATE
*      '99/SBP/OPT'      O-E-99-SBP-OPT
*      '99/TYP/ANN'      O-E-99-TYPE-ANN
*      '99-O-E/SBP-AMT'  O-E-99-SBP-AMT
*      'SSBP/PCT'        O-E-99-SSBP-PCT
*      'RET/PAY/AMT'     RETIRED-PAY-AMT
*      'Partial'         #1999-PARTIAL
*      '55% of/RET PAY'   #55-OF-RET-PAY
*     IF O-E-DATE NE 0
*       WRITE '   ***** Also has 1992 O-E info' O-E-DATE O-E-SBP-AMT
*     END-IF
*   ELSE
*     IF RETIRED-PAY-AMT = 0
*       ADD 1 TO #1992-NO-RET-PAY
*     ELSE
*       IF   (O-E-SBP-AMT NE 0)
*        AND (O-E-SBP-AMT LT #55-OF-RET-PAY)
*         MOVE 'X' TO #1992-PARTIAL
*         ADD 1 TO #1992-PARTIAL-NUM
*       END-IF
*     END-IF
*
*     ADD 1 TO #CNT-2
*     DISPLAY (2) #CNT-2
*      'CN'              ST-V.ID-NUMBER
*      'MIL-STA'         MILITARY-STATUS
*      'MIL-ID'          MILITARY-SERVICE
*      '92-O-E/DATE'     O-E-DATE
*      '92/SBP/OPT'      O-E-SBP-OPT
*      '92-O-E/SBP-AMT'  O-E-SBP-AMT
*      '99/SSBP/PCT'     O-E-99-SSBP-PCT
*      'RET/PAY/AMT'     RETIRED-PAY-AMT
*      '92/TYP/ANN'      O-E-TYPE-ANN
*      '99-O-E/DATE'     O-E-99-DATE
*      '99/SBP/OPT'      O-E-99-SBP-OPT
*      '99-O-E/SBP-AMT'  O-E-99-SBP-AMT
*      '99-TYP-ANN'      O-E-99-TYPE-ANN
*      'Partial'         #1992-PARTIAL
*      '55% of/RET PAY'  #55-OF-RET-PAY
*     END-IF
*   END-IF
* ESCAPE TOP
*
* IF (APPL-SOURCE =  'AER' OR = 'NMCRS' OR = 'CGMA'
*              OR = 'AFAS' OR = 'UWSF')
*  AND (DEATH-SERVICE-CON = ' ')
*   MOVE 'Y' TO DEATH-SERVICE-CON
*   MOVE TRUE TO #UPDATE
*   ADD 1 TO #CNT-2
*   DISPLAY (2) #CNT-2 'CN' ST-V.ID-NUMBER
*           APPL-SOURCE NAME
* END-IF
*
* IF #UPDATE
*   UPDATE (0431)
* END-IF
*
* END TRANSACTION
* ESCAPE TOP
*
*  MOVE 'S' TO #SPLIT
*  RESET #STREET #STREET-2 #CITY #STATE
*  CALLNAT 'GCTSTSXX'  /* SPLIT CITY/STATE
*    #SPLIT
*    ST-V.ADDRESS-1
*    ST-V.ADDRESS-2
*    ST-V.ADDRESS-3
*    #STREET
*    #STREET-2
*    #CITY
*    #STATE
*    #ERR-MSG
*
* IF #STATE = 'NC'
*   ADD 1 TO #NUM-MBRS
*   FOR #I1 1 TO  9
*     IF   (STATUS (#I1) = 'D')
*      AND (NOT PLAN (#I1) = 'SO' OR = 'FSO')
*       ADD 1 TO #CNT-2
*       DISPLAY (2) #CNT-2 'CN' ST-V.ID-NUMBER
*           NAME RANK
*        PLAN (#I1)
*        'FACE' FACE-AMOUNT (#I1)  (EM=ZZZ,ZZZ.99)
*        ADDRESS-1 ADDRESS-2 ZIP-CODE
*        IF ADDRESS-3 NE ' '
*          WRITE (2) '      ' ADDRESS-3
*        END-IF
*
*       MOVE EDITED FACE-AMOUNT (#I1) (EM=ZZZZZZ.99) TO #FACE-X
*       MOVE LEFT #FACE-X TO #FACE-X
*       COMPRESS ST-V.ID-NUMBER
*        #TAB   RANK
*        #TAB   NAME
*        #TAB   PLAN (#I1)
*        #TAB   #FACE-X
*        #TAB   ADDRESS-1
*        #TAB   ADDRESS-2
*        #TAB   ADDRESS-3
*        #TAB   ZIP-CODE
*         INTO #EXTRACT LEAVING NO
*       WRITE WORK 1 #EXTRACT
*     END-IF
*   END-FOR
* END-IF
*
* ESCAPE TOP
*
*  FOR #I1 1 TO 50
*    IF (ADDRESS-CHG-CODE = #CD (#I1)) OR (#CD (#I1) = ' ')
*      MOVE ADDRESS-CHG-CODE TO #CD (#I1)
*      ADD 1 TO #CD-NUM (#I1)
*
*      IF   (DATE-LAST-ADDR-UPDT GE 20050301)
*       AND (DATE-LAST-ADDR-UPDT LE 20050331)
*        ADD 1 TO #CD-CUR-CHG (#I1)
*      END-IF
*      ESCAPE BOTTOM
*    END-IF
*  END-FOR
*
  ESCAPE TOP
*
*  IF PLAN (1) = 'SO' OR = 'FSO'
*    DISPLAY ST-V.ID-NUMBER PLAN (1) LAST-SEG-USED NUM-MBRSHIPS (1)
*  END-IF
*  ESCAPE TOP
*
* COMPUTE #CURR-AGE = (TRAD-UP-SENT-DT - ST-V.DATE-OF-BIRTH) / 10000
* IF #CURR-AGE EQ 80
*   IGNORE
* ELSE
*   ESCAPE TOP
* END-IF
*
* ADD +1 TO #CNT
*
  RESET #EXTRACT-RECORD2 #HOLD-NAME
*
* MOVE TRUE TO #NOT-FOUND
*
* MOVE EDITED #EXTRACT-RECORD1 (EM=999999999) TO #SSN
*   FIND ST-V WITH SSN = #EXTRACT-RECORD1
*     IF NO RECORDS FOUND
*       ESCAPE BOTTOM
*     END-NOREC
*
*   IF (PROCESS-IND = 'S' OR = 'C')
*    OR (ST-V.ID-NUMBER GE 600000)
*    OR (ST-V.NUMBER-MEMBERSHIPS EQ 0)
*    OR (ST-V.WIDOW-FLAG = 'Y')
*    OR NOT (ST-V.PAD-CODE = 'P' OR = 'V' OR = 'N' OR = 'D' OR = 'W'
*                               OR = ' X')
*    OR (ST-V.ALOT-AMT = 0)
*     ESCAPE TOP
*   END-IF
*
*     MOVE FALSE TO #NOT-FOUND
*
*     MOVE 'S' TO #SPLIT
*     RESET #STREET #STREET-2 #CITY #STATE
*     CALLNAT 'GCTSTSXX'  /* split city/state
*      #SPLIT
*      ST-V.ADDRESS-1
*      ST-V.ADDRESS-2
*      ST-V.ADDRESS-3
*      #STREET
*      #STREET-2
*      #CITY
*      #STATE
*      #ERR-MSG
*
*   RESET #NAME
*   MOVE ST-V.NAME TO #NAME
*   RESET #LAST #MI #FIRST-20
*   CALLNAT 'GFMLNSXX' /* split name
*    #NAME
*    #FIRST-20
*    #MI
*    #LAST
*    #ERR-MSG
*   COMPRESS #LAST ',' INTO #HOLD-NAME LEAVING NO   /* to remove "."
*   COMPRESS #HOLD-NAME #FIRST-20 #MI INTO #HOLD-NAME  /* after MI
* END-FIND
* DISPLAY 'Cnt' #CNT 'ID Number' ID-NUMBER 'Name' #HOLD-NAME
*         'Dob' DATE-OF-BIRTH 'Trade up sent' TRAD-UP-SENT-DT
*
* COMPRESS ID-NUMBER #TAB #HOLD-NAME #TAB DATE-OF-BIRTH #TAB
*          TRAD-UP-SENT-DT
*    INTO #EXTRACT-RECORD2 LEAVING NO
  WRITE WORK 2 #EXTRACT-RECORD2
  RESET #EXTRACT-RECORD2
* RESET #LOAN-AMT #LOAN-AMT-DISP #ALOT-AMT
* FOR #I1 1 TO 9
*   IF ISSUE-DATE (#I1) EQ 0
*     ESCAPE BOTTOM
*   END-IF
*
*   IF X-ALT-LP-IND (#I1) =  '1' OR = '2'
*     ADD X-ALT-LP-AMT (#I1) TO #LOAN-AMT
*   END-IF
*
*   IF X-ALT-LP-IND-2 (#I1) = '1' OR = '2'
*     ADD X-ALT-LP-AMT-2 (#I1) TO #LOAN-AMT
*   END-IF
* END-FOR
*
* IF #LOAN-AMT = 0
*   ESCAPE TOP
* END-IF
*
* ADD +1 TO #CNT
*
* MOVE EDITED #LOAN-AMT (EM=ZZ,ZZ9.99) TO #LOAN-AMT-DISP
* MOVE EDITED ST-V.ALOT-AMT (EM=ZZ,ZZ9.99) TO #ALOT-AMT
*
* COMPRESS ST-V.ID-NUMBER #TAB #HOLD-NAME #TAB #ALOT-AMT #TAB
*          #LOAN-AMT-DISP #TAB ST-V.PAD-CODE
*    INTO #EXTRACT-RECORD2
* WRITE WORK 2 #EXTRACT-RECORD2
* RESET #EXTRACT-RECORD2
* DISPLAY 'CNT' #CNT 'Id Number' ST-V.ID-NUMBER
* 'Name' #HOLD-NAME
* 'Curr Alot' ST-V.ALOT-AMT
* 'Curr Loan Alot' #LOAN-AMT
* 'Pad Code' PAD-CODE
END-READ
*
WRITE (2) 'tot 1992 with no ret-pay' #1992-NO-RET-PAY
WRITE (2) 'tot 1992 partials       ' #1992-PARTIAL-NUM
WRITE (3) 'tot 1999 with no ret-pay' #1999-NO-RET-PAY
WRITE (3) 'tot 1999 partials       ' #1999-PARTIAL-NUM
*
* WRITE (2) 'numbers members in NC=' #NUM-MBRS
*
* foR #I1 1 TO 50
*   DISPLAY #I1 #CD (#I1) #CD-NUM (#I1) #CD-CUR-CHG (#I1)
* END-FOR
*
* FOR #I1 1 TO 9
*   IF ISSUE-DATE(#I1) = 0
*     WRITE 'Escaping policies' STATUS (#I1) ISSUE-DATE (#I1) #I1
*     ESCAPE BOTTOM
*   ELSE
*     IF STATUS(#I1) NE 'D'
*       IGNORE
*     ELSE
*       MOVE TRUE TO #ACTIVE
*       ESCAPE BOTTOM
*       MOVE EDITED FACE-AMOUNT(#I1)(EM=ZZZZZZZ.99) TO #FACE-AMOUNT
*       MOVE EDITED DEATH-BENEFIT(#I1)(EM=ZZZZZZZ.99) TO #DEATH-BENEFIT
*       MOVE EDITED CASH-VALUE(#I1)(EM=ZZZZZZZ.99) TO #CASH-VALUE
*       COMPRESS ID-NUMBER #TAB SEX #TAB MILITARY-STATUS #TAB
*                MILITARY-SERVICE #TAB RANK #TAB ZIP-CODE #TAB
*                ISSUE-DATE(#I1) #TAB ISSUE-AGE(#I1) #TAB PLAN (#I1)
*                #TAB SMOKER-FLAG(#I1) #TAB PREM-RATING(#I1) #TAB
*                #FACE-AMOUNT #TAB #CASH-VALUE #TAB #DEATH-BENEFIT
*           INTO #EXTRACT-RECORD LEAVING NO
*       WRITE WORK FILE 1 #EXTRACT-RECORD
*       RESET #EXTRACT-RECORD
*             #FACE-AMOUNT
*             #CASH-VALUE
*             #DEATH-BENEFIT
*     END-IF
*   END-IF
* END-FOR
* ESCAPE TOP
*   IF (PLAN (#I1) = MASK (N'PF'))
*    AND (PLAN (#I1) NE '7PF')
*     ADD 1 TO #CNT-3
*     DISPLAY (3) #CNT-3 ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1) PLAN (#I1)
*         PAY-STATUS (#I1)
*   END-IF
* END-FOR
*
* ESCAPE TOP
* IF ANNUAL-RPT-FLAG = '0' OR = ' ' ADD 1 TO #TOT-BLANK ELSE
* IF ANNUAL-RPT-FLAG = '1'          ADD 1 TO #TOT-1     ELSE
* IF ANNUAL-RPT-FLAG = '2'          ADD 1 TO #TOT-2     ELSE
*                                   ADD 1 TO #TOT-X END-IF END-IF END-IF
*
* IF ANNUAL-RPT-FLAG = '0' OR = ' ' MOVE 'N' TO ANNUAL-RPT-FLAG END-IF
* IF ANNUAL-RPT-FLAG = '1' MOVE 'F' TO ANNUAL-RPT-FLAG END-IF
* IF ANNUAL-RPT-FLAG = '2' MOVE 'F' TO ANNUAL-RPT-FLAG END-IF
* IF NOT ANNUAL-RPT-FLAG = 'F' OR = 'N'
*   ADD 1 TO #CNT-2
*   DISPLAY (2) #CNT-2 ST-V.ID-NUMBER ANNUAL-RPT-FLAG
* END-IF
*
* UPDATE (0429)
* END TRANSACTION
*
* ESCAPE TOP
*
*
*  IF #UPDATE
*    UPDATE (0429)
*  END-IF
*  END TRANSACTION
* ESCAPE TOP
*
* IF ST-V.WIDOW-FLAG = 'Y'
*   ADD 1 TO #WIDS
*   ESCAPE TOP
* END-IF
*
* IF  (ST-V.NUMBER-MEMBERSHIPS = 0)
*  OR (ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
*                   OR = 'O' OR = 'P' OR = 'Q')
*   ESCAPE TOP
* END-IF
*
* RESET #RANK-DISPL #RANK-LIT #RANK-DISPLAY
* CALLNAT 'GRANKSXX' #COMMAND ST-V.RANK ST-V.MILITARY-SERVICE
*       #INVALID #RANK-DISPL #RANK-LIT #RANK-DISPLAY
*
* IF #INVALID OR (#RANK-DISPL = 99)
*   RESET #RANK-DISPL
* END-IF
*
* ADD 1 TO #G-F
* IF #RANK-DISPL = 11 OR = 10 OR = 19
*   WRITE (2) ID-NUMBER 'lts' RANK #RANK-DISPL
*   ADD 1 TO #LTS
* END-IF
* ESCAPE TOP
*
* IF INTRO-FLAG = 'O'
*   ADD 1 TO #INS-ONLY
* END-IF
*
*
*
*  END TRANSACTION
*
* ESCAPE TOP
*
*    IF   (STATUS (#I1) = 'D')
*     AND (SMOKER-FLAG (#I1) = 'N')
*     AND (ISSUE-DATE (#I1) LT 20010101)
*      IF PLAN (#I1) = 'LT'
*        ADD 1 TO #LT-NS
*      END-IF
*      IF PLAN (#I1) = 'RT'
*        ADD 1 TO #RT-NS
*      END-IF
*    END-IF
*
*   IF INTRO-FLAG = 'O'
*     IF   (ISSUE-DATE (#I1) GE 20000701)
*      AND (STATUS (#I1) = 'D')
*       ADD 1 TO #CNT-2
*       DISPLAY (2) #CNT-2 ID-NUMBER PLAN (#I1) ISSUE-DATE (#I1)
*     END-IF
*   END-IF
* END-FOR
*
* IF #UPDATE
*   UPDATE (0429)
* END-IF
*
* END TRANSACTION
*
* ESCAPE TOP
*
* FOR #I1 1 TO 9
*   IF   (ISSUE-DATE (#I1) GE 19950401)
*    AND (ISSUE-DATE (#I1) LE 19950801)
*    AND (PAY-STATUS (#I1) = '47')
*    AND (ISSUE-AGE  (#I1) GT '60')
*     DISPLAY (2) ID-NUMBER ISSUE-DATE (#I1) FACE-AMOUNT (#I1)
*        ISSUE-AGE (#I1)
*   END-IF
*
*   IF   (ISSUE-DATE (#I1) GE 19910901)
*    AND (ISSUE-DATE (#I1) LE 19920601)
*    AND (PAY-STATUS (#I1) = '47')
*    AND (ISSUE-AGE  (#I1) GT '58')
*     DISPLAY (3) ID-NUMBER ISSUE-DATE (#I1) FACE-AMOUNT (#I1)
*        ISSUE-AGE (#I1)
*   END-IF
* END-FOR
* ESCAPE TOP
*
*
* IF WIDOW-FLAG = 'Y'
*      ESCAPE TOP
*   ELSE
*      IF MILITARY-STATUS = 'R' OR = 'C'
*           ESCAPE TOP
*      ELSE
*         IF DATE-RETIRED = 0
*            ESCAPE TOP
*         ELSE
*           ADD 1 TO #CNT-2
*           WRITE(2) ID-NUMBER MILITARY-STATUS MILITARY-SERVICE
*                    DATE-RETIRED
*         END-IF
*      END-IF
* END-IF
**     IF  DISABILITY-PCT > 1.0
*         IGNORE
*      ELSE IF (DISABILITY-PCT = .70 OR DISABILITY-PCT > .70)
*         WRITE (2) ID-NUMBER  DISABILITY-PCT
*         ADD 1 TO #RECS-SELECTED
*         END-IF
*      END-IF
* END-IF
*
* IF MILITARY-SERVICE = MASK ('F')
*  AND (WIDOW-FLAG NE 'Y')
*  AND (((ZIP-CODE GE 360920000) AND (ZIP-CODE LE 361259999))
*   OR  ((ZIP-CODE GE 360640000) AND (ZIP-CODE LE 360679999))
*   OR  ((ZIP-CODE GE 360430000) AND (ZIP-CODE LE 360439999)))
*   IGNORE
* ELSE
*   ESCAPE TOP
* END-IF
*
* IF MILITARY-STATUS = 'A'
*   DISPLAY (2) ID-NUMBER RANK #RANK-DISPL 'DOR' DATE-OF-RANK
*        'STAT' MILITARY-STATUS
*        'SERV' MILITARY-SERVICE
* ELSE
*   DISPLAY (3) ID-NUMBER RANK #RANK-DISPL 'DOR' DATE-OF-RANK
*        'STAT' MILITARY-STATUS
*        'SERV' MILITARY-SERVICE
* END-IF
* ESCAPE TOP
*
* IF  (ZIP-CODE GE 301080000) AND (ZIP-CODE LE 302639999)
* IF   (MILITARY-STATUS = 'R' OR = 'C')
* IF ID-NUMBER > 98823
*   ESCAPE BOTTOM
* END-IF
* IF WIDOW-FLAG = 'Y'
*    DISPLAY ID-NUMBER
*    ESCAPE TOP
*  ELSE
*   IF INTRO-FLAG = 'S' OR ='K' OR = 'G'
*    ESCAPE TOP
*   END-IF
* END-IF
* ADD 1 TO #CNT-2
* IF NUMBER-MEMBERSHIPS = 0
*   ESCAPE TOP
* END-IF
* ADD 1 TO #CNT
* IF INTERNET-ADDR = ' '
*  IGNORE
* ELSE
*  ADD 1 TO #CNT-INTERNET-ADDR
* END-IF
*   INTRO-FLAG = 'S' OR = 'K' OR = 'G'
*   ADD 1 TO #CNT-2
*   DISPLAY (2) #CNT-2 RANK NAME ZIP-CODE
*   WRITE (2) ' '
* END-IF
*
* ESCAPE TOP
*
* RESET #UPDATE
* RESET #TOT-MBR-PREM
* RESET #TOT-MBR-DUES
*
*
* IF #UPDATE
*   MOVE #NEW-BILL-DOLLAR TO x-BILL-DOLLAR (#i1)
*   UPDATE (0429)     /* <<<<<<<<<<<<<<<<<<<<<<<<<<<<<
* END-IF
* END TRANSACTION
*
*
* IF   (MIL-SBP-OPT = 'N')
*  AND (MIL-SBP-AMT = 0)
*  AND (O-E-SBP-OPT = ' ' OR = 'N')
*  AND (O-E-SBP-AMT = 0)
*  AND (VA-DIC-AMT = 0)
*  AND (DEATH-SERVICE-CON = 'N')
*   ADD 1 TO #HAS-NO-BENES
*   IGNORE
* ELSE
*   ESCAPE TOP
* END-IF
*
* ESCAPE TOP    /* to bypass sort
* END-ALL
* if   (DATE-OF-DEATH LT 19720920)
*   ADD 1 TO #CNT-4
*   WRITE   (4) ' '
*   DISPLAY (4) NOTITLE GIVE SYSTEM FUNCTIONS
*           #CNT-4
*           'ID/NUMBER'      ST-V.ID-NUMBER
*           'WIDOW-NAME'     ST-V.NAME-SP
*           'DATE-OF/DEATH'  ST-V.DATE-OF-DEATH
*           'SBP/OPT'        MIL-SBP-OPT
*           'SBP/AMT'        MIL-SBP-AMT
*           'O-E/SBP/OPT'    O-E-SBP-OPT
*           'O-E/SBP/AMT'    O-E-SBP-AMT
*           'VA/DIC/AMT'     VA-DIC-AMT
*           'SERV/CON'       DEATH-SERVICE-CON
* ELSE
*   ADD 1 TO #CNT-3
*   WRITE   (3) ' '
*   DISPLAY (3) NOTITLE GIVE SYSTEM FUNCTIONS
*           #CNT-3
*           'ID/NUMBER'      ST-V.ID-NUMBER
*           'WIDOW-NAME'     ST-V.NAME-SP
*           'DATE-OF/DEATH'  ST-V.DATE-OF-DEATH
*           'SBP/OPT'        MIL-SBP-OPT
*           'SBP/AMT'        MIL-SBP-AMT
*           'O-E/SBP/OPT'    O-E-SBP-OPT
*           'O-E/SBP/AMT'    O-E-SBP-AMT
*           'VA/DIC/AMT'     VA-DIC-AMT
*           'SERV/CON'       DEATH-SERVICE-CON
* END-IF
*  END-READ
* END-ALL
*
* * * * * * SORT INPUT RECORDS * * * * * *
*
* SORT BY ST-V.ID-NUMBER
*   USING ST-V.ID-NUMBER
*          ST-V.SSN
*   USING  ST-V.MILITARY-STATUS
*
* IF  ST-V.PAD-ACCT-NUM = #LAST-ACCT
*     ADD 1 TO #CNT-2
*       DISPLAY (2) #CNT-2 RANK NAME ST-V.ID-NUMBER
*                   MILITARY-SERVICE
*              DATE-RETIRED
* END-IF
*
* MOVE ST-V.PAD-ACCT-NUM TO #LAST-ACCT
* MOVE ST-V.ID-NUMBER    TO #LAST-CN
* AT BREAK ST-V.RANK
*   ADD 1 TO #CNT-4
*   DISPLAY (4) #CNT-4 ST-V.ID-NUMBER NAME 'STATUS' MILITARY-STATUS
*                      ST-V.RANK
*                      'MIL-ID' ST-V.MILITARY-SERVICE
*   RESET #CNT-2
*   NEWPAGE (2)
* END-BREAK
*
*
* END-SORT
*
* WRITE (2) #LAST-APPL-SOURCE #LAST-RANK #CNT
* WRITE (2) 'TOT-RECORDS    = ' #CNT-2
* DISPLAY    #CNT #CNT-INTERNET-ADDR
* DISPLAY   #E-CNT #P-CNT #T-CNT #M-CNT
*
* COMPUTE ROUNDED #AVG-FACE = #TOT-FACE / #TOT-POLS
* COMPUTE ROUNDED #AVG-DB   = #TOT-DB   / #TOT-POLS
*
* WRITE (2) #TOT-DB    '#tot-db'
* WRITE (2) #TOT-FACE  '#tot-face'
* WRITE (2) #TOT-POLS  '#tot-pols'
* WRITE (2) #TOT-MBRS  '#tot-mbrs'
* WRITE (2) #AVG-FACE  '#avg-face'
* WRITE (2) #AVG-DB    '#avg-db'
* WRITE (2) 'ins-only mbrs        = ' #INS-ONLY
* WRITE (2) 'nxt cap w wl & loan =' #CAP-NXT-WL-WITH-LOAN
* WRITE (2) 'non-smoker LT  =' #LT-NS
* WRITE (2) 'non-smoker RT  =' #RT-NS
* WRITE (2) 'TOT-PREMS            = ' #TOT-PREM
* WRITE (2) 'TOT-1959 count       = ' #1959-CNT
* WRITE (2) 'TOT-1960 count       = ' #1960-CNT
* WRITE (2) 'TOT-1961 count       = ' #1961-CNT
* WRITE (2) 'TOT-1962 count       = ' #1962-CNT
* WRITE (2) 'TOT-ACT-ARMY ' #RECS-ARMY-ACT (*)
* WRITE (2) 'TOT-ACT-AIRF ' #RECS-AIRF-ACT (*)
* WRITE (2) 'TOT-RET-ARMY ' #RECS-ARMY-RET (*)
* WRITE (2) 'TOT-RET-AIRF ' #RECS-AIRF-RET (*)
* WRITE (2) 'TOT-CIV-ARMY ' #RECS-ARMY-CIV (*)
* wRITE (2) 'TOT-CIV-AIRF ' #RECS-AIRF-CIV (*)
* WRITE (2) 'has no benes '  #HAS-NO-BENES
*
* COMPUTE ROUNDED #AVG-AGE = #TOT-AGE / #TOT-MBRS
* WRITE (2) 'avg-age   =' #AVG-AGE
* WRITE (2) 'tot-age   =' #TOT-AGE
* WRITE (2) 'tot-mbrs  =' #TOT-MBRS
* WRITE 'Undeliverable G-F' #G-F
* WRITE 'LT"S             ' #LTS
* WRITE 'WIDOWS           ' #WIDS
* WRITE 'tot-blank=' #TOT-BLANK
* WRITE 'tot-1    =' #CNT
* WRITE 'tot-2    =' #TOT-2
* WRITE 'tot-?    =' #TOT-X
*
END
