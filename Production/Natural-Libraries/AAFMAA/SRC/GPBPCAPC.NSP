* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
********************************************************************
* NAME         : GPBPCAPC                                          *
* AUTHOR       : Rolly Estabillo                                   *
* DESCRIPTION  : CAP COLLECTION DEFAULT PROCESSING                 *
********************************************************************
*                       MODIFICATION LOG                           *
* USER   DATE      TAG   REASON                                    *
* RSE   01232012   None  Program Written                           *
********************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING OBJAGENT
LOCAL USING OBJAUSER
LOCAL USING GPBACAPD
LOCAL USING GONERLXX        /* WORK FIELDS FOR 'GONERCXX'
*
LOCAL
*
1 PR-V VIEW OF A-PROCESS-REQUEST
  2 LAST-UPD-USER (A8)
  2 LAST-UPD-DATE (N8)
  2 LAST-UPD-TIME (N7)
  2 PROCESSES(9) 
    3 PROCESS-DESCRIPTION (A250)
    3 PROCESS-STATUS (A1)
    3 PROCESS-STATUS-DATE (N8)
    3 PROCESS-MESSAGE (A250)
  2 C*PROCESSES
  2 REQUEST-STATUS (A1/9)
  2 REQUEST-STATUS-DATE (N8/9)
  2 REQUEST-DATA        (A250)
  2 REQUEST-FINAL-STATUS (A1)
  2 REQUEST-FS-DATE (N8)
  2 REQUEST-TYPE (A16)
  2 REQUEST-KEY  (A32)
  2 ID-NUMBER (N8)
*
1 PR2-V VIEW OF A-PROCESS-REQUEST
  2 ID-NUMBER (N8)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID
  2 CAP-BILL-DATE
  2 REDEFINE CAP-BILL-DATE
    3 #CBD-YY (A4)
    3 #CBD-MM (A2)
    3 #CBD-DD (A2)
  2 PAID-TO-DATE(9)
  2 ISSUE-DATE(9)
  2 REDEFINE ISSUE-DATE /* BEGIN REDEFINE: ISSUE-DATE
    3 ISS-DT-RED-2 (1:9)
      4 ISS-DT-YYYY (N4.0)
      4 ISS-DT-MM (N2.0)
      4 ISS-DT-DD-2 (N2.0)
  2 REDEFINE ISSUE-DATE /* REDEF. BEGIN : ISSUE-DATE
    3 ISS-DT-RED (1:9)
      4 ISS-DT-YYYYMM (N6.0)
      4 ISS-DT-DD (N2.0)
  2 MONTH-ALLOC-AMT(9)
  2 FACE-AMOUNT(9)
  2 X-LOAN-AMOUNT(9)
  2 STATUS(9)
  2 CONV-DURATION(9)
*
1 CNT-V VIEW OF A-CONTACTS
  2 FIRST-NAME
  2 MIDDLE-NAME
  2 LAST-NAME
  2 SUFFIX
*
1 NT-V VIEW OF A-NOTES
  2 NOTE-TEXT   (60)
*
1 #CONTACT-ID           (N8)
1 #N                    (N2)
1 #POS                  (I4)
1 #FULL-ACCESS          (L)
1 #ADMIN-ACCESS         (L)
1 #MESSAGE              (A60)
1 #COUNT                (N4)
1 #LAST-RUN-DATE        (N8)
1 #RUN-DATE             (N8)
1 REDEFINE #RUN-DATE
  2 #RUN-DATE-A         (A8)
1 #RUN-MONTH-CV         (C)
1 #RUN-MONTH            (A10)
1 #TEXT                 (A72)
1 #FUNCTION-ATTRIBUTES  (A68)
1 REDEFINE #FUNCTION-ATTRIBUTES
  2 #PROGRAM            (A8)
  2 #SEPARATOR          (A1)
  2 #FUNCTION-PARM      (A7)
  2 #HEADER-1           (A50)
  2 #SECURITY-CODE      (N2)
1 #SEL                  (A1/15)
1 #CAP-BILLDATE         (A10)
1 #CN                   (N6/15)
1 #CN2                  (N6/99)
1 #BILL-DATE            (A10/15)
1 #PD-THRU              (A10/15)
1 #LOAN-AMT             (N4.2/15)
1 #ACC-INT              (N2.2/15)
1 #NAME                 (A29/15)
1 #POLICY-NUMBER        (A16/15)
1 #ERROR-FLD            (A1/15)
1 #USER                 (A8)
1 #ERROR-MESSAGE        (A48)
1 #X-COUNT              (N2)
1 #H1                   (A78)
1 #H2                   (A78)
1 #CAP-LINE             (A70/18)
1 #CAP-HEADER           (A77)
1 #1-MON-AGO            (N8)
1 #CAP-X                (I2)
1 #CAP-AUTO-PAY         (L)
1 #NO-CAP-LOAN          (L)
1 #WYYYYMMDD
  2 #WYYYY  (N4)
  2 #WMM    (N2)
  2 #WDD    (N2)
1 REDEFINE #WYYYYMMDD
  2 #WYYYY-AA(A4)
  2 #WMM-AA  (A2)
  2 #WDD-AA  (A2)
1 REDEFINE #WYYYYMMDD
  2 #WYYYYMMDD-N  (N8.0)
1 #WMMDDYYYY
  2 #WMM   (N2)
  2 #WDD   (N2)
  2 #WYYYY (N4)
1 REDEFINE #WMMDDYYYY
  2 #WMMDDYYYY-N (N8)
1 REDEFINE #WMMDDYYYY
  2 #WMM-A   (A2)
  2 #WDD-A   (A2)
  2 #WYYYY-A (A4)
1 #SUFFIX     (A3)
1 REDEFINE #SUFFIX
  2 #SUFFIX-2   (A2)
  2 #SUFFIX-X   (N1)
1 #AS-OF-DT   (N8)
1 #LOAN-BAL   (N7.2/9)
1 #LOAN-BAL-2 (N7.2/9)
1 #ACCUM-INT  (N7.2/9)
1 #ACCUM-INT-2(N7.2/9)
1 #CSV        (N7.2/9)
1 #CVALUE     (N7.2/9)
1 #LVALUE     (N7.2/9)
1 #MCSV       (N7.2/9)
1 #DB         (N7.2/9)
1 #ANN-PREMIUM (N7.2/9)
1 #FACE-AMT    (N7.2/9)
1 #TPP         (N7.2/9)
1 #SEL-CV            (C/15)
1 #CAP-HEADER-CV     (C)
1 BLANK        (A1) CONST <' '>
1 #REC-COUNT   (N4)
1 #REC-TO-BE-PROCESSED(N4)
1 #PAGE              (N3)
1 #I                 (I4)
1 #I1                (I2)
1 #I2                (I2)
1 #J                 (I4)
1 #K                 (I4) 
1 #L                 (I4)
1 #M                 (I4)
1 #ISN               (P8/9999)
1 #MAX-CODES         (N4)
1 #ET-CTR            (I2)
1 #EXCLUDED          (N4)
1 #TO-BE-PROCESSED   (N4)
1 #COMMAND           (A50) INIT <'/usr/SAG/cronus/.scripts/COLLECT.bsh >/dev/null'>
END-DEFINE
*
INCLUDE GONERCXX            /* NATURAL ERROR ROUTINE
*
DEFINE WINDOW CONFIRMATION-BOX
   SIZE 20*60
   BASE 5/7
*
IF *DATA NE 0
  INPUT #FUNCTION-ATTRIBUTES
END-IF
*
RESET #ADMIN-ACCESS #FULL-ACCESS
IF FUNCTION-ACCESS(<*USER,#SECURITY-CODE>) = 'A'
  #ADMIN-ACCESS := #FULL-ACCESS := TRUE
ELSE
  IF FUNCTION-ACCESS(<*USER,#SECURITY-CODE>) = 'U'
    #FULL-ACCESS := TRUE
  END-IF
END-IF
*
IF NOT #FULL-ACCESS
  #TEXT := 'User not authorized to perform this function. Browse access only'
END-IF
*
MOVE *INIT-USER TO #USER
SET KEY PF12 NAMED 'Quit'
*
CALLNAT 'GPBSCAPC'
PERFORM POPULATE-RECORDS-ARRAY
MOVE #MAX-CODES TO #REC-COUNT
MOVE 'Sel Member  Bill-DT   Paid-Thru  Loan-Amt Acc-Int            Name' TO #CAP-HEADER
MOVE (AD=IU) TO #CAP-HEADER-CV
#RUN-MONTH-CV := (AD=P)
#PAGE := 1
#K := 1
PERFORM POPULATE-SCREEN-ARRAYS
REPEAT
  IF #MAX-CODES = 0
    BACKOUT TRANSACTION
  END-IF
  SET KEY ENTR NAMED ' '
  SET KEY PF2  NAMED 'Submt'
  SET KEY PF3  NAMED 'Retrn'
  SET KEY PF7  NAMED 'Down'
  SET KEY PF8  NAMED 'Up'
*  RESET #SEL-CV(*)
*
  INPUT WITH TEXT #TEXT USING MAP 'GPBMCAP1'
  RESET #TEXT
*
  DECIDE ON FIRST VALUE *PF-KEY
    VALUE 'PF2'
      IF NOT #FULL-ACCESS
        ESCAPE TOP
      END-IF
      IF #MAX-CODES = 0
        REINPUT 'No records submitted'
          MARK 1
      END-IF
      PERFORM VALIDATE-SELECTION
      FOR #I 1 15
        PERFORM UPDATE-RECORD
      END-FOR
      PERFORM CHECK-IF-HELD
      PERFORM ADD-TO-BATCH-PROCESS
      PERFORM CONFIRM-SUBMIT
      PERFORM SUBMIT-JOB
      #FUNCTION-PARM := 'PROC '
      #PROGRAM := 'G1000PUI'
      STACK TOP DATA #FUNCTION-ATTRIBUTES
      FETCH #PROGRAM
    VALUE 'PF3'
      END TRANSACTION
      #FUNCTION-PARM := 'PROC '
      #PROGRAM := 'G1000PUI'
      STACK TOP DATA #FUNCTION-ATTRIBUTES
      FETCH #PROGRAM
    VALUE 'PF7'
      PERFORM VALIDATE-SELECTION
      FOR #I 1 15
        PERFORM UPDATE-RECORD
      END-FOR
      IF #PAGE > 1
        SUBTRACT 1 FROM #PAGE
        SUBTRACT 15 FROM #K
        PERFORM POPULATE-SCREEN-ARRAYS
      END-IF
    VALUE 'PF8'
      PERFORM VALIDATE-SELECTION
      FOR #I 1 15
        PERFORM UPDATE-RECORD
      END-FOR
      IF #MAX-CODES >= #K + 15
        ADD 1 TO #PAGE
        ADD 15 TO #K
        PERFORM POPULATE-SCREEN-ARRAYS
      END-IF
    VALUE 'PF12'
      SET KEY OFF
      FETCH 'G1000PXX'
    VALUE 'ENTR'
      IF NOT #FULL-ACCESS
        ESCAPE TOP
      END-IF
      PERFORM VALIDATE-SELECTION
      EXAMINE #SEL(*) FOR 'X' GIVING #X-COUNT
      IF #X-COUNT > 1
        FOR #I 1 15
          IF #SEL(#I) = 'X'
            REINPUT 'Please select only one to display details.'
              MARK *#SEL(#I)
          END-IF
        END-FOR
      END-IF
      FOR #I 1 15
        IF #SEL-CV(#I) MODIFIED
          IF #SEL(#I) = 'X'
            PERFORM DISPLAY-DETAILS
            PERFORM POPULATE-SCREEN-ARRAYS
            ESCAPE BOTTOM
          ELSE
            PERFORM UPDATE-RECORD
          END-IF
        END-IF
      END-FOR
    NONE
      IGNORE
  END-DECIDE
*
END-REPEAT
****************************************
DEFINE SUBROUTINE POPULATE-RECORDS-ARRAY
****************************************
RESET #ISN(*) #MAX-CODES
READ PR-V BY ID-NUMBER 
  ACCEPT IF REQUEST-TYPE = 'DELINQUENT CAP' 
  IF REQUEST-FINAL-STATUS = 'C' OR = 'P'   /* temp
    ESCAPE TOP
  END-IF
  ADD 1 TO #MAX-CODES
  #ISN(#MAX-CODES) := *ISN
END-READ
*
END-SUBROUTINE
*****************************
DEFINE POPULATE-SCREEN-ARRAYS
*****************************
MOVE (AD=P) TO #SEL-CV(*)
IF #MAX-CODES = 0  /* NO DELINQUENT RECORDS
  ESCAPE ROUTINE
END-IF
*
RESET
  #SEL        (*)
  #CN         (*)
  #BILL-DATE  (*)
  #PD-THRU    (*)
  #LOAN-AMT   (*)
  #ACC-INT    (*)
  #NAME       (*)
MOVE (AD=P) TO #SEL-CV(*)
*
ASSIGN #J = #K
FOR #I 1 TO 15
  GET PR-V #ISN ( #J )
  #CN(#I) := PR-V.ID-NUMBER
  #SEL (#I) := REQUEST-FINAL-STATUS
  FOR #L 1 9
    IF PROCESS-MESSAGE(#L) NE ' ' AND PROCESS-MESSAGE(#L) = SCAN('ERROR')
      MOVE '*' TO #ERROR-FLD(#I)
      ESCAPE BOTTOM
    END-IF
  END-FOR
  FIND ST-V WITH ID-NUMBER = PR-V.ID-NUMBER
    COMPRESS #CBD-MM '/' #CBD-DD '/' #CBD-YY INTO #BILL-DATE(#I) LEAVING NO
    FOR #I1 1 TO 9
      IF   (STATUS (#I1) = 'D')    /* Does any seg have a CAP loan?
          AND (CONV-DURATION (#I1) = 999)
          AND (X-LOAN-AMOUNT (#I1) NE 0)
        PERFORM GET-PAID-THRU
        MOVE X-LOAN-AMOUNT(#I1) TO #LOAN-AMT(#I)
        PERFORM GET-ACC-INT
      END-IF
    END-FOR
    FIND CNT-V WITH ID-NUMBER = PR-V.ID-NUMBER
      #NAME(#I) := EDIT_NAME_FMLS(<FIRST-NAME,MIDDLE-NAME,LAST-NAME,SUFFIX>)
    END-FIND
  END-FIND
  MOVE (AD=DU) TO #SEL-CV(#I)
  ADD 1 TO #J
  IF #J > #MAX-CODES
    ESCAPE BOTTOM
  END-IF
END-FOR
*
END-SUBROUTINE
************************************
DEFINE SUBROUTINE VALIDATE-SELECTION
************************************
IF #SEL-CV(*) MODIFIED
  FOR #I 1 15
    IF (*PF-KEY = 'ENTR' AND NOT (#SEL(#I) = ' ' OR = 'Y' OR = 'X')) OR
       (NOT (#SEL(#I) = ' ' OR = 'Y' OR = 'X'))
      REINPUT 'Invalid selection'
        MARK *#SEL(#I)
    END-IF
  END-FOR
END-IF
*
END-SUBROUTINE
********************************
DEFINE SUBROUTINE CONFIRM-SUBMIT
********************************
SET WINDOW 'CONFIRMATION-BOX'
SET KEY PF7=OFF
SET KEY PF8=OFF
SET KEY PF3=OFF
SET KEY PF2 NAMED 'Conf'
SET KEY ENTR NAMED 'Canc'
*
FIND NUMBER PR-V WITH REQUEST-FINAL-STATUS = 'P'
MOVE *NUMBER(0401) TO #TO-BE-PROCESSED
*
#EXCLUDED := #REC-COUNT - #TO-BE-PROCESSED 
*
INPUT USING MAP 'GPBMCAP3'
*
DECIDE ON FIRST VALUE *PF-KEY
  VALUE 'PF2'
    END TRANSACTION
  VALUE  'ENTR'
    BACKOUT TRANSACTION
    SET WINDOW OFF
*    #FUNCTION-PARM := 'PROC '
*    #PROGRAM := 'G1000PUI'
*    STACK TOP DATA #FUNCTION-ATTRIBUTES
*    FETCH #PROGRAM
     FETCH 'GPBPCAPC'
*    ESCAPE TOP
  NONE
    REINPUT 'Please press PF2 to CONFIRM or Enter to CANCEL'
END-DECIDE
SET WINDOW OFF
*
END-SUBROUTINE
*******************************
DEFINE SUBROUTINE UPDATE-RECORD
*******************************
FIND PR-V WITH ID-NUMBER = #CN(#I) 
  MOVE #SEL(#I) TO REQUEST-FINAL-STATUS
  MOVE *DATN TO REQUEST-FS-DATE LAST-UPD-DATE
  MOVE *TIMN TO LAST-UPD-TIME
  MOVE #USER TO LAST-UPD-USER
  PERFORM PR-STATUS-UPDATE
  UPDATE
  END TRANSACTION
END-FIND
*
END-SUBROUTINE
**************************************
DEFINE SUBROUTINE ADD-TO-BATCH-PROCESS
**************************************
RESET #ET-CTR
READ PR-V BY ID-NUMBER 
  REJECT IF REQUEST-FINAL-STATUS NE 'Y'
  MOVE 'P' TO PR-V.REQUEST-FINAL-STATUS
  MOVE *DATN TO REQUEST-FS-DATE
  PERFORM PR-STATUS-UPDATE
  UPDATE (0444)
*  ADD 1 TO #ET-CTR
*  IF #ET-CTR = 50
*    RESET #ET-CTR
*    END TRANSACTION
*  END-IF
END-READ
**END TRANSACTION
*
END-SUBROUTINE
*******************************
DEFINE SUBROUTINE CHECK-IF-HELD
*******************************
READ PR-V BY ID-NUMBER 
  REJECT IF REQUEST-FINAL-STATUS NE 'Y'
  FIND ST-V WITH ID-NUMBER = PR-V.ID-NUMBER
    UPDATE (0464)
  END-FIND
END-READ
*
**ON ERROR
*  IF *ERROR-NR = 3145
*    BACKOUT TRANSACTION
*    IF #MAX-CODES = 0
*      MOVE (AD=P) TO #SEL-CV(*)
*      INPUT TEXT 'A record is currently in use. Please try again later.' USING MAP 'GPBMCAP1'
*      #FUNCTION-PARM := 'PROC '
*      #PROGRAM := 'G1000PUI'
*      STACK TOP DATA #FUNCTION-ATTRIBUTES
*      FETCH #PROGRAM
*    ELSE
*      REINPUT 'A record is currently in use. Please try again later.'
*    END-IF
*  END-IF
**END-ERROR
*
END-SUBROUTINE
****************************
DEFINE SUBROUTINE SUBMIT-JOB
****************************
CALL 'SHCMD' #COMMAND
*
END-SUBROUTINE
*****************************
DEFINE SUBROUTINE GET-ACC-INT
*****************************
MOVE ST-V.FACE-AMOUNT (*) TO #FACE-AMT (*)
MOVE *DATN TO #AS-OF-DT
MOVE 'NTP' TO #SUFFIX
CALLNAT 'CVALUSXX'
  ST-V.ID-NUMBER
  #SUFFIX
  #AS-OF-DT
  #LOAN-BAL   (1:9)
  #LOAN-BAL-2 (1:9)
  #ACCUM-INT  (1:9)
  #ACCUM-INT-2(1:9)
  #CSV        (1:9)
  #CVALUE     (1:9)
  #LVALUE     (1:9)
  #MCSV       (1:9)
  #DB         (1:9)
  #ANN-PREMIUM  (1:9)
  #FACE-AMT   (1:9)
  #TPP        (1:9)
MOVE #ACCUM-INT(#I1) TO #ACC-INT(#I)
*
END-SUBROUTINE
*******************************
DEFINE SUBROUTINE GET-PAID-THRU
*******************************
MOVE PAID-TO-DATE(#I1) TO #WYYYYMMDD-N
IF  (ISSUE-DATE (#I1) LT 19970101)    /* old or new
    OR (MONTH-ALLOC-AMT (#I1) = 999.99)  /*   processing
    OR (ISS-DT-DD (#I1) = 1)    /* NXT PROCESSING WITH ISS DAY = 1
  IF #WYYYYMMDD.#WMM = 02
    MOVE 28 TO #WYYYYMMDD.#WDD
  ELSE
    IF #WYYYYMMDD.#WMM = 4 OR = 6 OR = 9 OR = 11
      MOVE 30 TO #WYYYYMMDD.#WDD
    ELSE
      MOVE 31 TO #WYYYYMMDD.#WDD
    END-IF
  END-IF
ELSE
  IF ((ISS-DT-MM (#I1) = 2)
      AND (ISS-DT-DD (#I1) = 28 OR = 29))  /* LAST DAY OF MONTH
      OR ((ISS-DT-MM (#I1) = 4 OR = 6 OR = 9 OR = 11)
      AND (ISS-DT-DD (#I1) = 30))
      OR ((ISS-DT-MM (#I1) = 1 OR = 3 OR = 5 OR = 7 OR = 8 OR = 10
      OR = 12) AND (ISS-DT-DD (#I1) = 31))
    IF #WYYYYMMDD.#WMM = 02
      MOVE 27 TO #WYYYYMMDD.#WDD /* nxt to last day of month
    ELSE
      IF #WYYYYMMDD.#WMM = 4 OR = 6 OR = 9 OR = 11
        MOVE 29 TO #WYYYYMMDD.#WDD
      ELSE
        MOVE 30 TO #WYYYYMMDD.#WDD
      END-IF
    END-IF
  ELSE
    COMPUTE #WYYYYMMDD.#WDD = ISS-DT-DD (#I1) - 1
*
    IF (#WYYYYMMDD.#WMM = 2) AND (#WYYYYMMDD.#WDD GE 27)
      MOVE 26 TO #WYYYYMMDD.#WDD /* nxt to nxt to last day of month
    END-IF
  END-IF
END-IF
*
MOVE BY NAME #WYYYYMMDD TO #WMMDDYYYY
COMPRESS #WMM-A '/' #WDD-A '/' #WYYYY-A INTO #PD-THRU (#I) LEAVING NO
*
END-SUBROUTINE
*********************************
DEFINE SUBROUTINE DISPLAY-DETAILS
*********************************
MOVE #CN(#I) TO #ID-NUMBER
*
FIND PR-V WITH ID-NUMBER = #CN(#I)
  IF REQUEST-FINAL-STATUS NE 'C'
    MOVE REQUEST-DATA TO #POL-NUM
    ESCAPE BOTTOM
  END-IF
END-FIND
*
RESET #CAP-INFO(*) #CAP-LINE(*)
CALLNAT 'GPBSCAPD' #POLICY-CAP-FIELDS
FOR #L 1 17
  MOVE #CAP-INFO(#L) TO #CAP-LINE(#L)
END-FOR
*
SET KEY PF2=OFF PF7=OFF PF8=OFF
FIND ST-V WITH ID-NUMBER = #ID-NUMBER
  MOVE MEMBER-CONTACT-ID TO #CONTACT-ID
  CALLNAT 'ADRN0004' MEMBER-CONTACT-ID #H1 #H2
END-FIND
*
INPUT USING MAP 'GPBMCAP2'
*
END-SUBROUTINE
*
DEFINE PR-STATUS-UPDATE
/*     ================
FOR #J 1 TO 9
  IF REQUEST-STATUS ( #J ) = BLANK
    ESCAPE BOTTOM
  END-IF
  IF REQUEST-STATUS ( #J ) = PR-V.REQUEST-FINAL-STATUS
    REQUEST-STATUS-DATE ( #J ) := *DATN
    ESCAPE BOTTOM
  END-IF
END-FOR
IF REQUEST-STATUS ( #J ) = BLANK
  REQUEST-STATUS  ( #J ) := PR-V.REQUEST-FINAL-STATUS
  REQUEST-STATUS-DATE ( #J ) := *DATN
END-IF
END-SUBROUTINE
END
