* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*
******** CONVERTED TO NATURAL BY SOFTWARE AG ON 07/09/05 ********
*
* COMPOPT:RENT,RES,OPT,LIB
* LINKOPT:RENT,AMODE=31,RMODE=ANY
*  PROGRAM-ID.    ATHP05P7.
* AUTHOR.        EJS  03/76.
*    INSTALLATION.  AMAA.
*    DATE-COMPILED.  TODAY.
* REMARKS.
* ****************************************************************
*                                                               *
*          W O R K I N G - S T O R A G E   S E C T I O N        *
*                                                               *
*****************************************************************
*    MODIFICATION LOG     ***************************************
* USER DATE      TAG     DESC
* DRW 06/12/2005 DW1  ADD ONLINE-ACTION CSV OF 'T' (NEW POL & CSV)
* SAG-AB 02/22/2006 Truncation was occurring, calculation limited to when
*      TOT-UNITS was less than 99, otherwise set to 99 (per Don W)
* SAG-AB 20060301 Y2K PROBLEM ?
* SAG-AB 20060314 split test into 2 parts so index exceeded tests first
* SAG-AB 20061024 Problem with age at death overflowing N2 field - truncated as in Cobol
* PAM    20070831 PM2 Added AGE truncation to rest of age calculations
* vxt    20101104 vt1 Replace the name and rank from status file with the name and rank from the new files
* NGG    20140623 NG1 Contact normalization 
*****************************************************************
*
* Converted to Natural by SAGUK ( UKALI ) on 07/09/05            *
* ---------------------------------------------------            *
* Notes:                                                         *
*                                                                *
*                                                                *
******************************************************************
*
** SAG 02072006 DRC BEGIN
DEFINE DATA
GLOBAL USING ATHG05P0
**PARAMETER USING ATHY05P0
** SAG 02072006 DRC END
*
LOCAL
1 OBSOLETE-STATUS-FIELDS                         /* NG1
  2 DATE-OF-BIRTH     (N8)
  2 REDEFINE DATE-OF-BIRTH
    3 DOB-YYYY (N4.0)
    3 REDEFINE DOB-YYYY
      4 DOB-CENT (N2.0)
      4 DOB-YY (N2.0)
    3 DOB-MMDD (N4.0)
    3 REDEFINE DOB-MMDD
      4 DOB-MM (N2.0)
      4 DOB-DD (N2.0)
*
01 DATE-WORK-AREA
  02 W-DATE-2-MMDDYY
    03 WD2-MM                       (N2)
    03 WD2-DD                       (N2)
    03 WD2-YY                       (N2)
  02 HOLD-DATE
    03 HOLD-CENT                    (N2)
    03 HOLD-YY                      (N2)
    03 HOLD-MM                      (N2)
    03 HOLD-DD                      (N2)
  02 REDEFINE HOLD-DATE
    03 HOLD-DATE/ALPHA              (A8)
*
  02 SWITCH-ISSUE                   (A6)
  02 REDEFINE SWITCH-ISSUE
    03 SI-YY                        (N2)
    03 SI-MM                        (N2)
    03 SI-DD                        (N2)
*
  02 SWITCH-DEATH                   (A6)
  02 REDEFINE SWITCH-DEATH
    03 SD-YY                        (N2)
    03 SD-MM                        (N2)
    03 SD-DD                        (N2)
*
**01 SF-X                           (N2) /* max occs 9  /* moved to global
**01 TIN1-X                         (N2) /* max occs 9  /* moved to global
**01 TIN2-X                         (N2) /* max occs 9  /* moved to global
*
01 #SUB                             (P5)
01 DO-INIT                          (L)
01 #TRUNC-AGE                       (N4)
*
1 #contact-id                       (n8)                     /* vt1 \/
1 #name-f                           (a70)
1 #first-name                       (a25)
1 #middle-name                      (a25)
1 #last-name                        (a25)
1 #name                             (a70)
1 #suffix                           (a10)
*
 1 #pda-rank
2 #PASS-COMMAND       (A2)
2 #RANK-PASS          (A3)
2 #MIL-ID-PASS        (A3)
2 #INVALID            (L)
2 #RANK-PAY-TBL-DISPL (P2)
2 #RANK-LITERAL-PASS  (A23)
2 #RANK-DISPLAY       (A5)
*
2 #CONTACT-ID-r       (N8)
2 #RANK-ABBR          (A) DYNAMIC
2 #LETTER-ENV         (A) DYNAMIC
2 #SALUTATION         (A) DYNAMIC
2 #SALUTATION-WITH-NAME (A) DYNAMIC
*
1 #rank-w             (a25)                                   /* vt1 /\
END-DEFINE
*
DATE-OF-BIRTH := GET-DATE-OF-BIRTH (< STATUS-VIEW.MEMBER-CONTACT-ID >)  /* NG1
DECIDE FOR FIRST CONDITION
  WHEN MORE-6 NE ' '
    PERFORM FORM-CONVERSION
    PERFORM FORM-PAID-UP
    PERFORM FORM-RPU-ETI
  WHEN MORE-7 NE ' '
    PERFORM FORM-PAID-UP
    PERFORM FORM-RPU-ETI
  WHEN MORE-8 NE ' '
    PERFORM FORM-RPU-ETI
  WHEN NONE IGNORE
END-DECIDE
*
RESET TIN1 TIN2
*
DECIDE FOR EVERY CONDITION
  WHEN RETURN-SW-P7 = 1           PERFORM SETUP-ACTIVE-SEGS
  WHEN RETURN-SW-P7 = 1 THRU 2    PERFORM FORM-CASH-SURRENDER
  WHEN RETURN-SW-P7 = 1 THRU 3    PERFORM FORM-LAPSE
  WHEN RETURN-SW-P7 = 1 THRU 4    PERFORM FORM-MATURITY
  WHEN RETURN-SW-P7 = 1 THRU 5    PERFORM FORM-EXPIRATION
  WHEN RETURN-SW-P7 = 1 THRU 6    PERFORM FORM-CONVERSION
  WHEN RETURN-SW-P7 = 1 THRU 7    PERFORM FORM-PAID-UP
  WHEN RETURN-SW-P7 = 1 THRU 8    PERFORM FORM-RPU-ETI
  WHEN NONE                       PERFORM END-WITH-NO-WRITE
END-DECIDE
*
*****************************************************************
*
DEFINE SUBROUTINE SETUP-ACTIVE-SEGS
*
RESET NAS-X P05P7.I-NEW-ACTIVE-SEG TOT-UNITS
REPEAT
  ADD 1 TO NAS-X
  IF NAS-X GT 9            /* SAG-AB 20060314 split test in 2 parts
    ESCAPE BOTTOM
  END-IF
  IF STATUS(NAS-X) = ' '
    ESCAPE BOTTOM
  END-IF
  IF FACE-AMOUNT (NAS-X) LT 495000                 /* SAG-AB 20060222
    COMPUTE TOT-UNITS = FACE-AMOUNT(NAS-X) / 5000  /* SAG-AB 20060222
  ELSE                                             /* SAG-AB 20060222
    MOVE 99 TO TOT-UNITS                           /* SAG-AB 20060222
  END-IF                                           /* SAG-AB 20060222
  ADD 1 TO P05P7.I-NEW-ACTIVE-SEG
END-REPEAT
*
IF ONLINE-ACTION-GN = '1' OR = '2' OR = '3' OR = '4'
  IGNORE
ELSE
  PERFORM END-WITH-NO-WRITE
END-IF
MOVE '1' TO TIN1-GROUP
RESET DEATH-SW NAS-X
MOVE 1 TO TIN1-X
SUBTRACT 1 FROM TIN1-X
IF ONLINE-ACTION-GN = '1'
  RESET NUMBER-MEMBERSHIPS
  MOVE FALSE TO DO-INIT
  FOR #SUB = 1 TO P05P7.I-NEW-ACTIVE-SEG
    PERFORM FORM-DEATH-LINE
  END-FOR
  PERFORM FORM-BASE
  MOVE 2 TO RETURN-SW-P7
  PERFORM END-WITH-MORE-WRITE
END-IF
MOVE TRUE TO DO-INIT
FOR #SUB = 1 TO P05P7.I-NEW-ACTIVE-SEG
  PERFORM FORM-DEATH-LINE
END-FOR
IF DEATH-SW = 0
  ESCAPE ROUTINE
END-IF
PERFORM FORM-BASE
MOVE 2 TO RETURN-SW-P7
PERFORM END-WITH-MORE-WRITE
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE FORM-DEATH-LINE
*
IF DO-INIT
  ADD 1 TO NAS-X
  IF ONLINE-ACTION(NAS-X) = 'E' OR = 'G' OR = 'H'
    SUBTRACT 1 FROM NAS-X
  ELSE
    ESCAPE ROUTINE
  END-IF
END-IF
*
ADD 1 TO NAS-X
IF STATUS(NAS-X) = 'E'
  IF NOT (ONLINE-ACTION(NAS-X) = 'E' OR = 'G' OR = 'H' )
    ESCAPE ROUTINE
  END-IF
END-IF
*
MOVE 1 TO DEATH-SW
ADD 1 TO TIN1-X
MOVE 'E' TO STATUS(NAS-X) ONLINE-ACTION(NAS-X)
MOVE DOD-YY TO TIN1-TDT-YY(TIN1-X)SD-YY
MOVE DOD-MM TO TIN1-TDT-MM(TIN1-X)SD-MM
MOVE DOD-DD TO TIN1-TDT-DD(TIN1-X)SD-DD
**********                                       SAG-AB 20061024 START
COMPUTE #TRUNC-AGE = DOD-YYYY - DOB-YYYY
IF #TRUNC-AGE GT 99 OR #TRUNC-AGE LT -99
  WRITE *PROGRAM *LINE '=' TIN1-CN-NUMBER '=' DOD-YYYY '=' DOB-YYYY 'OVERFLOW COMPUTING AGE AT DEATH'
  DIVIDE 100 INTO #TRUNC-AGE GIVING #TRUNC-AGE REMAINDER TIN1-TAGE(TIN1-X)
ELSE
  COMPUTE TIN1-TAGE(TIN1-X) = DOD-YYYY - DOB-YYYY
END-IF
**********                                       SAG-AB 20061024 END
IF DOB-MMDD > DOD-MMDD
  SUBTRACT 1 FROM TIN1-TAGE(TIN1-X)
END-IF
MOVE ISSUE-DATE(NAS-X) TO HOLD-DATE/ALPHA
PERFORM BUILD-TIN1-COMMON
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE FORM-BASE
*
MOVE 'H' TO TIN1-SECT
reset #name-f #name                                                            /* vt1 \/
move status-view.member-contact-id to #contact-id  #contact-id-r
#name-f := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME,#MIDDLE-NAME,#LAST-NAME,#SUFFIX>)
compress #first-name #middle-name #last-name into #name 
move #name to TIN1-NAME
* MOVE NAME TO TIN1-NAME                                                        /* vt1 /\
*
MOVE ID-NUMBER TO TIN1-ID
MOVE MILITARY-STATUS TO TIN1-RET
*
reset #rank-w                                                /* vt1 \/
callnat 'rankn001' #pda-rank
move #rank-w to TIN1-RANK
* MOVE RANK TO TIN1-RANK                                     /* vt1 /\
*
MOVE DAU-MM TO TIN1-ACTGMO
MOVE DAU-YY TO TIN1-ACTGYR
MOVE TOT-UNITS TO TIN1-PNOMEM
MOVE INTRO-FLAG TO TIN1-INTRO-FLAG
IF ID-NUMBER NE HOLD-CN
  MOVE '1' TO TIN1-FST-SW
  MOVE ID-NUMBER TO HOLD-CN
ELSE
  RESET TIN1-FST-SW
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE FORM-CONVERSION
*
REPEAT
  IF MORE-6 NE ' '
    RESET MORE-6
    COMPUTE TIN2-PNOMEM = TIN2-PNOMEM - TIN2-NOMEM(TIN2-X)
    MOVE '2' TO TIN2-SUBGP
    RESET TIN2-FST-SW
    MOVE TIN2/ALPHA TO TIN1/ALPHA
    PERFORM END-WITH-MORE-WRITE
  END-IF
  RESET CONVERSION-SW
  MOVE 1 TO TIN1-X
  SUBTRACT 1 FROM TIN1-X
  MOVE '6' TO TIN1-GROUP
  FOR NAS-X = 1 TO P05P7.I-NEW-ACTIVE-SEG
    PERFORM FORM-CONVERSION-LINE
  END-FOR
  IF CONVERSION-SW = 0
    ESCAPE BOTTOM
  ELSE
    MOVE 7 TO RETURN-SW-P7
    PERFORM END-WITH-MORE-WRITE
  END-IF
END-REPEAT
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE FORM-CONVERSION-LINE
*
IF NOT (ONLINE-ACTION(NAS-X) = '2' OR = '3' OR = '4' OR = 'I' OR = 'N' OR = 'O' OR = 'P' OR = 'R')
  ESCAPE ROUTINE
END-IF
MOVE 1 TO CONVERSION-SW
ADD 1 TO TIN1-X
MOVE TIN1-X TO TIN2-X
PERFORM FORM-BASE
MOVE #C-RUN-DT-MM TO SD-MM
MOVE #C-RUN-DT-DD TO SD-DD
MOVE #C-RUN-DT-YY TO SD-YY
MOVE ISSUE-DATE(NAS-X) TO HOLD-DATE/ALPHA
PERFORM BUILD-TIN1-COMMON
MOVE '1' TO TIN1-SUBGP
RESET TIN1-DAY
MOVE '1' TO MORE-6
IF TIN1-X > 1
  MOVE TIN1-MEMBRSHP(TIN1-X) TO TIN2-MEMBRSHP(TIN2-X)
ELSE
  MOVE TIN1/ALPHA TO TIN2/ALPHA
END-IF
IF ONLINE-ACTION(NAS-X) = '2'
  MOVE 'OL ' TO TIN1-PLAN(TIN1-X)
ELSE
  IF ONLINE-ACTION(NAS-X) = '3'
    MOVE '20P' TO TIN1-PLAN(TIN1-X)
  ELSE
    IF ONLINE-ACTION(NAS-X) = '4'
      MOVE '30P' TO TIN1-PLAN(TIN1-X)
    ELSE
      IF ONLINE-ACTION(NAS-X) = 'N'
        MOVE '7P' TO TIN1-PLAN(TIN1-X)
      ELSE
        IF ONLINE-ACTION(NAS-X) = 'O'
          MOVE 'RT' TO TIN1-PLAN(TIN1-X)
        ELSE
          IF ONLINE-ACTION(NAS-X) = 'P'
            MOVE 'LT' TO TIN1-PLAN(TIN1-X)
          ELSE
            IF ONLINE-ACTION(NAS-X) = 'R'
              MOVE 'FSO' TO TIN1-PLAN(TIN1-X)
            END-IF
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
END-IF
IF ONLINE-ACTION(NAS-X) = 'I'
  MOVE '44' TO TIN1-STATUS(TIN1-X)
  MOVE PLAN(NAS-X) TO TIN1-PLAN(TIN1-X)
ELSE
  MOVE PRIOR-STATUS(NAS-X) TO TIN1-STATUS(TIN1-X)
END-IF
MOVE PLAN(NAS-X) TO TIN2-PLAN(TIN2-X)
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE FORM-PAID-UP
*
IF MORE-7 NE ' '
  RESET MORE-7
  COMPUTE TIN2-PNOMEM = TIN2-PNOMEM - TIN2-NOMEM(TIN2-X)
  MOVE '2' TO TIN2-SUBGP
  RESET TIN2-FST-SW
  MOVE TIN2/ALPHA TO TIN1/ALPHA
  PERFORM END-WITH-MORE-WRITE
END-IF
RESET PAID-UP-SW
MOVE 1 TO TIN1-X
SUBTRACT 1 FROM TIN1-X
MOVE '7' TO TIN1-GROUP
FOR NAS-X = 1 TO P05P7.I-NEW-ACTIVE-SEG
  PERFORM FORM-PAID-UP-LINE
END-FOR
IF PAID-UP-SW = 0
  ESCAPE ROUTINE
ELSE
  MOVE 8 TO RETURN-SW-P7
  PERFORM END-WITH-MORE-WRITE
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE FORM-PAID-UP-LINE
*
IF ONLINE-ACTION(NAS-X) NE '7'
  ESCAPE ROUTINE
END-IF
MOVE 1 TO PAID-UP-SW
ADD 1 TO TIN1-X
MOVE TIN1-X TO TIN2-X
PERFORM FORM-BASE
MOVE #C-RUN-DT-MM TO SD-MM
MOVE #C-RUN-DT-DD TO SD-DD
MOVE #C-RUN-DT-YY TO SD-YY
MOVE ISSUE-DATE(NAS-X) TO HOLD-DATE/ALPHA
PERFORM BUILD-TIN1-COMMON
IF PAY-STATUS(NAS-X) = '47' OR = '48'
  MOVE PAY-STATUS(NAS-X) TO TIN1-STATUS(TIN1-X)
ELSE
  MOVE '42' TO PAY-STATUS(NAS-X)
END-IF
MOVE '1' TO TIN1-SUBGP
RESET TIN1-DAY
MOVE '1' TO MORE-7
IF TIN1-X > 1
  MOVE TIN1-MEMBRSHP(TIN1-X) TO TIN2-MEMBRSHP(TIN2-X)
  IF PAY-STATUS(NAS-X) = '47' OR = '48'
    MOVE PAY-STATUS(NAS-X) TO TIN2-STATUS(TIN2-X)
  ELSE
    MOVE '42' TO TIN2-STATUS(TIN2-X)
  END-IF
ELSE
  MOVE TIN1/ALPHA TO TIN2/ALPHA
  IF PAY-STATUS(NAS-X) = '47' OR = '48'
    MOVE PAY-STATUS(NAS-X) TO TIN2-STATUS(TIN2-X)
  ELSE
    MOVE '42' TO TIN2-STATUS(TIN2-X)
  END-IF
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE FORM-RPU-ETI
*
REPEAT
  IF MORE-8 = ' '
    ESCAPE BOTTOM
  END-IF
  RESET MORE-8
  COMPUTE TIN2-PNOMEM = TIN2-PNOMEM - TIN2-NOMEM(TIN2-X)
  IF SAVE-FACE(1) NE 0
    MOVE SAVE-FACE(1) TO TIN2-FACE(1)
    MOVE SAVE-DB(1) TO TIN2-DB(1)
  END-IF
  IF SAVE-FACE(2) NE 0
    MOVE SAVE-FACE(2) TO TIN2-FACE(2)
    MOVE SAVE-DB(2) TO TIN2-DB(2)
  END-IF
  IF SAVE-FACE(3) NE 0
    MOVE SAVE-FACE(3) TO TIN2-FACE(3)
    MOVE SAVE-DB(3) TO TIN2-DB(3)
  END-IF
  IF SAVE-FACE(4) NE 0
    MOVE SAVE-FACE(4) TO TIN2-FACE(4)
    MOVE SAVE-DB(4) TO TIN2-DB(4)
  END-IF
  IF SAVE-FACE(5) NE 0
    MOVE SAVE-FACE(5) TO TIN2-FACE(5)
    MOVE SAVE-DB(5) TO TIN2-DB(5)
  END-IF
  IF SAVE-FACE(6) NE 0
    MOVE SAVE-FACE(6) TO TIN2-FACE(6)
    MOVE SAVE-DB(6) TO TIN2-DB(6)
  END-IF
  MOVE '2' TO TIN2-SUBGP
  RESET TIN2-FST-SW
  MOVE TIN2/ALPHA TO TIN1/ALPHA
  PERFORM END-WITH-MORE-WRITE
END-REPEAT
*
RESET RPU-ETI-SW FST-ETI-INS-SW
MOVE 1 TO TIN1-X
SUBTRACT 1 FROM TIN1-X
MOVE '8' TO TIN1-GROUP
RESET SAVE-FACE(1:6)
FOR NAS-X = 1 TO P05P7.I-NEW-ACTIVE-SEG
  PERFORM RPU-ETI-LINE
END-FOR
IF RPU-ETI-SW = 0
  PERFORM END-WITH-NO-WRITE
ELSE
  MOVE 9 TO RETURN-SW-P7
  PERFORM END-WITH-MORE-WRITE
END-IF
*
END-SUBROUTINE
*
***************************************************************
*
DEFINE SUBROUTINE RPU-ETI-LINE
*
IF NOT (ONLINE-ACTION(NAS-X) = '9' OR = 'A' OR = 'F')
  ESCAPE ROUTINE
END-IF
MOVE 1 TO RPU-ETI-SW
ADD 1 TO TIN1-X
MOVE TIN1-X TO SF-X TIN2-X
PERFORM FORM-BASE
MOVE #C-RUN-DT-MM TO SD-MM
MOVE #C-RUN-DT-DD TO SD-DD
MOVE #C-RUN-DT-YY TO SD-YY
MOVE ISSUE-DATE(NAS-X) TO HOLD-DATE/ALPHA
PERFORM BUILD-TIN1-COMMON
MOVE FACE-AMOUNT(NAS-X) TO SAVE-FACE(SF-X)
COMPUTE TIN1-FACE(TIN1-X) = NUM-MBRSHIPS(NAS-X) * +5000
*
MOVE PRIOR-STATUS(NAS-X) TO TIN1-STATUS(TIN1-X)
MOVE TIN1-DB(TIN1-X) TO SAVE-DB(SF-X)
COMPUTE ROUNDED TIN1-DB(TIN1-X) = SAVE-DB(SF-X) + (TIN1-FACE(TIN1-X) - SAVE-FACE(SF-X))
MOVE '1' TO TIN1-SUBGP
RESET TIN1-DAY
MOVE '1' TO MORE-8
IF FST-ETI-INS-SW = 0
  MOVE 1 TO FST-ETI-INS-SW
  MOVE TIN1/ALPHA TO TIN2/ALPHA
ELSE
  MOVE TIN1-MEMBRSHP(TIN1-X) TO TIN2-MEMBRSHP(TIN2-X)
END-IF
MOVE PAY-STATUS(NAS-X) TO TIN2-STATUS(TIN2-X)
*
**PERFORM END-WITH-MORE-WRITE /* removed SAG-AB 20060315
*
END-SUBROUTINE
*
***************************************************************
*
DEFINE SUBROUTINE FORM-CASH-SURRENDER
*
RESET CASH-SURRENDER-SW
MOVE 1 TO TIN1-X
SUBTRACT 1 FROM TIN1-X
FOR NAS-X = 1 TO P05P7.I-NEW-ACTIVE-SEG
  PERFORM FORM-CASH-SURRENDER-LINE
END-FOR
IF CASH-SURRENDER-SW = 0
  ESCAPE ROUTINE
END-IF
PERFORM FORM-BASE
  move #rank-w to TIN1-RANK                        /* vt1
* MOVE RANK TO TIN1-RANK                           /* vt1
RESET TIN1-LOAN-IND TIN1-MAX-LOAN-IND
IF GENERAL-ACTION = '1'
  MOVE 'L' TO TIN1-LOAN-IND
  RESET GENERAL-ACTION
ELSE
  IF GENERAL-ACTION = '2'
    MOVE 'M' TO TIN1-MAX-LOAN-IND
    MOVE 'L' TO TIN1-LOAN-IND
    RESET GENERAL-ACTION
  END-IF
END-IF
MOVE 3 TO RETURN-SW-P7
PERFORM END-WITH-MORE-WRITE
*
END-SUBROUTINE
*
***************************************************************
*
DEFINE SUBROUTINE FORM-CASH-SURRENDER-LINE
*
IF NOT (ONLINE-ACTION(NAS-X) = '5' OR = 'J' OR = 'T')
  ESCAPE ROUTINE
END-IF
ADD 1 TO TIN1-X
MOVE 1 TO CASH-SURRENDER-SW
MOVE '2' TO TIN1-GROUP
MOVE ONLINE-DATE-YY(NAS-X) TO TIN1-TDT-YY(TIN1-X)
MOVE ONLINE-DATE-MM(NAS-X) TO TIN1-TDT-MM(TIN1-X)
MOVE ONLINE-DATE-DD(NAS-X) TO TIN1-TDT-DD(TIN1-X)
*
COMPUTE #TRUNC-AGE = ONLINE-DATE-YYYY (NAS-X) - DOB-YYYY
IF #TRUNC-AGE GT 99 OR #TRUNC-AGE LT -99                                  /* PM2
  WRITE *PROGRAM *LINE '=' TIN1-CN-NUMBER '=' DOD-YYYY '=' DOB-YYYY 'OVERFLOW COMPUTING AGE AT DEATH'
  DIVIDE 100 INTO #TRUNC-AGE GIVING #TRUNC-AGE REMAINDER TIN1-TAGE(TIN1-X)
ELSE                                                                      /* PM2
  COMPUTE TIN1-TAGE(TIN1-X) = ONLINE-DATE-YYYY(NAS-X) - DOB-YYYY
END-IF                                                                    /* PM2
IF DOD-DD > ONLINE-DATE-DD(NAS-X)
  SUBTRACT 1 FROM TIN1-TAGE(TIN1-X)
END-IF
MOVE #C-RUN-DT-MM TO SD-MM
MOVE #C-RUN-DT-DD TO SD-DD
MOVE #C-RUN-DT-YY TO SD-YY
MOVE ISSUE-DATE(NAS-X) TO HOLD-DATE/ALPHA
PERFORM BUILD-TIN1-COMMON
*
END-SUBROUTINE
*
****************************************************************
*
DEFINE SUBROUTINE FORM-LAPSE
*
MOVE '3' TO TIN1-GROUP
RESET LAPSE-SW
MOVE 1 TO TIN1-X
SUBTRACT 1 FROM TIN1-X
FOR NAS-X = 1 TO P05P7.I-NEW-ACTIVE-SEG
  PERFORM FORM-LAPSE-LINE
END-FOR
IF LAPSE-SW = 0
  ESCAPE ROUTINE
END-IF
PERFORM FORM-BASE
MOVE 4 TO RETURN-SW-P7
PERFORM END-WITH-MORE-WRITE
*
END-SUBROUTINE
*
****************************************************************
*
DEFINE SUBROUTINE FORM-LAPSE-LINE
*
IF ONLINE-ACTION(NAS-X) = '6' OR = 'K' OR = 'Q' OR = 'L' OR = 'M' OR = 'S'
  ADD 1 TO TIN1-X
  MOVE 1 TO LAPSE-SW
  MOVE ONLINE-DATE-YY(NAS-X) TO TIN1-TDT-YY(TIN1-X)
  MOVE ONLINE-DATE-MM(NAS-X) TO TIN1-TDT-MM(TIN1-X)
  MOVE ONLINE-DATE-DD(NAS-X) TO TIN1-TDT-DD(TIN1-X)
*
  COMPUTE #TRUNC-AGE = (ONLINE-DATE-YYYY(NAS-X) - DOB-YYYY)  /* PM2
  IF #TRUNC-AGE GT 99 OR #TRUNC-AGE LT -99                   /* PM2
    WRITE *PROGRAM *LINE '=' TIN1-CN-NUMBER '=' DOD-YYYY '=' DOB-YYYY 'OVERFLOW COMPUTING AGE AT DEATH'
    DIVIDE 100 INTO #TRUNC-AGE GIVING #TRUNC-AGE REMAINDER TIN1-TAGE(TIN1-X)
  ELSE                                                       /* PM2
    COMPUTE TIN1-TAGE(TIN1-X) = (ONLINE-DATE-YYYY(NAS-X) - DOB-YYYY)
  END-IF                                                     /* PM2
  IF DOD-DD > ONLINE-DATE-DD(NAS-X)
    SUBTRACT 1 FROM TIN1-TAGE(TIN1-X)
  END-IF
*
  MOVE #C-RUN-DT-MM TO SD-MM
  MOVE #C-RUN-DT-DD TO SD-DD
  MOVE #C-RUN-DT-YY TO SD-YY
  MOVE ONLINE-DATE(NAS-X) TO HOLD-DATE/ALPHA
  PERFORM BUILD-TIN1-COMMON
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE FORM-MATURITY
*
IF ONLINE-ACTION-GN = '3'
  MOVE '4' TO TIN1-GROUP
  RESET NUMBER-MEMBERSHIPS
  FOR NAS-X = 1 TO P05P7.I-NEW-ACTIVE-SEG
    PERFORM FORM-MATURITY-LINE
  END-FOR
  PERFORM FORM-BASE
  MOVE 5 TO RETURN-SW-P7
  PERFORM END-WITH-MORE-WRITE
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE FORM-MATURITY-LINE
*
MOVE NAS-X TO TIN1-X
MOVE 'E' TO STATUS(NAS-X) ONLINE-ACTION(NAS-X)
MOVE ONLINE-DATE-YY(NAS-X) TO TIN1-TDT-YY(TIN1-X)
MOVE ONLINE-DATE-MM(NAS-X) TO TIN1-TDT-MM(TIN1-X)
MOVE ONLINE-DATE-DD(NAS-X) TO TIN1-TDT-DD(TIN1-X)
*
COMPUTE #TRUNC-AGE = (ONLINE-DATE-YYYY(NAS-X) - DOB-YYYY)  /* PM2
IF #TRUNC-AGE GT 99 OR #TRUNC-AGE LT -99                   /* PM2
  WRITE *PROGRAM *LINE '=' TIN1-CN-NUMBER '=' DOD-YYYY '=' DOB-YYYY 'OVERFLOW COMPUTING AGE AT DEATH'
  DIVIDE 100 INTO #TRUNC-AGE GIVING #TRUNC-AGE REMAINDER TIN1-TAGE(TIN1-X)
ELSE                                                       /* PM2
  COMPUTE TIN1-TAGE(TIN1-X) = (ONLINE-DATE-YYYY(NAS-X) - DOB-YYYY)
END-IF                                                     /* PM2
IF DOD-DD > ONLINE-DATE-DD(NAS-X)
  SUBTRACT 1 FROM TIN1-TAGE(TIN1-X)
END-IF
*
MOVE #C-RUN-DT-MM TO SD-MM
MOVE #C-RUN-DT-DD TO SD-DD
MOVE #C-RUN-DT-YY TO SD-YY
MOVE ONLINE-DATE(NAS-X) TO HOLD-DATE/ALPHA
PERFORM BUILD-TIN1-COMMON
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE FORM-EXPIRATION
*
MOVE '5' TO TIN1-GROUP
RESET EXPIRATION-SW
MOVE 1 TO TIN1-X
SUBTRACT 1 FROM TIN1-X
FOR NAS-X = 1 TO P05P7.I-NEW-ACTIVE-SEG
  PERFORM FORM-EXPIRATION-LINE
END-FOR
IF EXPIRATION-SW NE 0
  PERFORM FORM-BASE
  MOVE 6 TO RETURN-SW-P7
  PERFORM END-WITH-MORE-WRITE
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE FORM-EXPIRATION-LINE
*
IF NOT (ONLINE-ACTION(NAS-X) = '8' OR = 'F')
  ESCAPE ROUTINE
END-IF
ADD 1 TO TIN1-X
MOVE 1 TO EXPIRATION-SW
MOVE 'E' TO STATUS(NAS-X)
MOVE PAID-UP-YY(NAS-X) TO TIN1-TDT-YY(TIN1-X)
MOVE PAID-UP-MM(NAS-X) TO TIN1-TDT-MM(TIN1-X)
MOVE PAID-UP-DD(NAS-X) TO TIN1-TDT-DD(TIN1-X)
*
COMPUTE #TRUNC-AGE = (PAID-UP-YYYY(NAS-X) - DOB-YYYY)  /* PM2
IF #TRUNC-AGE GT 99 OR #TRUNC-AGE LT -99               /* PM2
  WRITE *PROGRAM *LINE '=' TIN1-CN-NUMBER '=' DOD-YYYY '=' DOB-YYYY 'OVERFLOW COMPUTING AGE AT DEATH'
  DIVIDE 100 INTO #TRUNC-AGE GIVING #TRUNC-AGE REMAINDER TIN1-TAGE(TIN1-X)
ELSE                                                   /* PM2
  COMPUTE TIN1-TAGE(TIN1-X) = (PAID-UP-YYYY(NAS-X) - DOB-YYYY)
END-IF                                                 /* PM2
IF DOD-DD > PAID-UP-DD(NAS-X)
  SUBTRACT 1 FROM TIN1-TAGE(TIN1-X)
END-IF
*
MOVE #C-RUN-DT-MM TO SD-MM
MOVE #C-RUN-DT-DD TO SD-DD
MOVE #C-RUN-DT-YY TO SD-YY
MOVE PAID-UP-DATE(NAS-X) TO HOLD-DATE/ALPHA
PERFORM BUILD-TIN1-COMMON
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE BUILD-TIN1-COMMON
*
MOVE ONLINE-ACTION(NAS-X) TO TIN1-ONLINE-ACTION
COMPUTE TIN1-EDT(TIN1-X) =
  (ISSUE-DATE-YY(NAS-X) * 12) + ISSUE-DATE-MM(NAS-X)
MOVE ISSUE-DATE-DD(NAS-X) TO TIN1-EDAY(TIN1-X)
MOVE PAID-TO-YY(NAS-X) TO WD2-YY
MOVE PAID-TO-MM(NAS-X) TO WD2-MM
COMPUTE TIN1-PDTO(TIN1-X) = (WD2-YY * 12) + WD2-MM
MOVE PLAN(NAS-X) TO TIN1-PLAN(TIN1-X)
MOVE ISSUE-AGE(NAS-X) TO TIN1-EAGE(TIN1-X)
MOVE FACE-AMOUNT(NAS-X) TO TIN1-FACE(TIN1-X)
MOVE PAY-STATUS(NAS-X) TO TIN1-STATUS(TIN1-X)
MOVE LAST-DURATION(NAS-X) TO TIN1-DUR(TIN1-X)
IF FACE-AMOUNT (NAS-X) LT 495000                         /* SAG-AB 20060222
  COMPUTE TIN1-NOMEM(TIN1-X) = FACE-AMOUNT(NAS-X) / 5000 /* SAG-AB 20060222
ELSE                                                     /* SAG-AB 20060222
  MOVE 99 TO TIN1-NOMEM(TIN1-X)                          /* SAG-AB 20060222
END-IF                                                   /* SAG-AB 20060222
MOVE HOLD-MM TO SI-MM
MOVE HOLD-DD TO SI-DD
IF HOLD-YY LE 96               /* SAG-AB 20060301 Y2K PROBLEM ?
  ADD 3 TO HOLD-YY             /* SAG-AB 20060301
ELSE                           /* SAG-AB 20060301
  MOVE 20 TO HOLD-CENT         /* SAG-AB 20060301
  HOLD-YY := HOLD-YY - 100 + 3 /* SAG-AB 20060301
END-IF                         /* SAG-AB 20060301
MOVE HOLD-YY TO SI-YY
RESET TIN1-DB(TIN1-X)
IF CONVERSION-FLAG(NAS-X) = 'C' OR = 'N'
  MOVE DEATH-BENEFIT(NAS-X) TO TIN1-DB(TIN1-X)
ELSE
  MOVE TIN1-FACE(TIN1-X) TO TIN1-DB(TIN1-X)
  IF SWITCH-ISSUE LE SWITCH-DEATH
    COMPUTE ROUNDED TIN1-DB(TIN1-X) = TIN1-DB(TIN1-X) + (TIN1-DB(TIN1-X) * TDB-PCT)
  END-IF
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE END-WITH-NO-WRITE
*
MOVE 1 TO RETURN-SW-P7
MOVE 2 TO #C-OUTGOING-FLAG
ESCAPE MODULE
*
END-SUBROUTINE
*
*****************************************************************
*
DEFINE SUBROUTINE END-WITH-MORE-WRITE
*
MOVE 1 TO #C-OUTGOING-FLAG
MOVE TIN1/ALPHA TO #C-REPORT-RECORD
ESCAPE MODULE
*
END-SUBROUTINE
*
END
