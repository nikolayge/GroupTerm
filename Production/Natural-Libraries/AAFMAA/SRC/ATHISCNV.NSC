* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*****************************************************************
*                                                               *
* New COPYCODE member: ATHISCNV created by ACCORD on: 02/09/05  *
*                                                               *
*****************************************************************
*
*********************************************************
*       IF THIS ROUTINE IS CHANGED RHEN PROBABLY ATHISACV
*       SHOULD ALSO BE CHANGED
**********************************************************
*
DEFINE SUBROUTINE CALC-CONV-VALUES
*
MOVE IS-ISS-AGE TO TA-ISS-X
SUBTRACT 14 FROM TA-ISS-X
MOVE TA-ISS-X TO TA-ATT-X
ADD IS-DURATION TO TA-ATT-X
*
IF TA-ATT-X > 86
  MOVE 86 TO TA-ATT-X
END-IF
*
IF IS-TYPE = 'OL'
  MOVE 82 TO TA-PUP-X
ELSE
  MOVE TA-ISS-X TO TA-PUP-X
  IF IS-TYPE = '30'
    ADD 30 TO TA-PUP-X
  ELSE
    IF IS-TYPE = '20'
      ADD 20 TO TA-PUP-X
    ELSE
      ADD 7 TO TA-PUP-X
    END-IF
  END-IF
END-IF
*
MOVE TA-ISS-X TO TB-ISS-X
MOVE TA-ATT-X TO TB-ATT-X
MOVE TA-PUP-X TO TB-PUP-X
MOVE TA-ISS-X TO TC-ISS-X
MOVE TA-ATT-X TO TC-ATT-X
MOVE TA-PUP-X TO TC-PUP-X
*
IF IS-PAID-UP-SW = 'Y'
  RESET IS-PREM-DEFIC
ELSE
*
  COMPUTE ROUNDED IS-NR-AX = (TA-MX(TA-ISS-X) * IS-CALC-1) /
    (TA-NX(TA-ISS-X) - TA-NX(TA-PUP-X) -
    (IS-CALC-2 * (TA-DX(TA-ISS-X) - TA-DX(TA-PUP-X))))
  COMPUTE ROUNDED IS-NR-BX = TA-NX(TA-ATT-X) - TA-NX(TA-PUP-X) -
    (IS-CALC-2 * (TA-DX(TA-ATT-X) - TA-DX(TA-PUP-X)))
  COMPUTE ROUNDED IS-NR-A = (9000 * ((TA-MX(TA-ATT-X) * IS-CALC-1) -
    (IS-NR-AX * IS-NR-BX))) * (IS-FAC-AMT / 5000) / TA-DX(TA-ATT-X)
  COMPUTE ROUNDED IS-NR-B = (IS-CALC-9-EXP-FACT * (TB-NX(TB-ATT-X) -
    (0.6 * TB-NX(TB-PUP-X)) -
    (IS-CALC-2 * (TB-DX(TB-ATT-X) - (0.6 * TB-DX (TB-PUP-X)))))) / TB-DX(TB-ATT-X)
  COMPUTE ROUNDED IS-NR-EX = (TA-NX(TA-ISS-X) - TA-NX(TA-PUP-X) -
    (IS-CALC-2 * (TA-DX(TA-ISS-X) - TA-DX(TA-PUP-X)))) / TA-DX(TA-ISS-X)
  COMPUTE ROUNDED IS-NR-FX = (IS-CALC-9-EXP-FACT * (IS-CALC-5 ** IS-DURATION)
     * IS-NR-BX) / TA-DX(TA-ATT-X)
  COMPUTE ROUNDED IS-NR-C = ((10 * (TB-NX(TB-ISS-X) - (0.6 * TB-NX(TB-PUP-X)) -
    (IS-CALC-2 * (TB-DX(TB-ISS-X) - (0.6 * TB-DX(TB-PUP-X)))))
     * IS-NR-FX) / TB-DX(TB-ISS-X)) / IS-NR-EX
  COMPUTE ROUNDED IS-NET-RESV = IS-NR-A + IS-NR-B - IS-NR-C
  COMPUTE ROUNDED IS-GR-GX = IS-ANN-PREM /(9000 * (IS-FAC-AMT / 5000))
  COMPUTE ROUNDED IS-GR-A = ((9000 * ((TA-MX(TA-ATT-X) * IS-CALC-1) -
    (IS-GR-GX * IS-NR-BX))) * (IS-FAC-AMT / 5000)) / TA-DX(TA-ATT-X)
  COMPUTE ROUNDED IS-GROS-RESV = IS-GR-A + IS-NR-B
*
  MOVE TA-ATT-X TO TA-ATT-10-X
  ADD 10 TO TA-ATT-10-X
  IF TA-ATT-10-X > 86
    MOVE 86 TO TA-ATT-10-X
  END-IF
*
  COMPUTE ROUNDED IS-PREM-DEFIC = (IS-GROS-RESV - IS-NET-RESV) /
    (((TA-NX(TA-ATT-X) - TA-NX(TA-ATT-10-X)) * 12) / (TA-DX(TA-ATT-X) -
    TA-DX(TA-ATT-10-X)))
  IF IS-PREM-DEFIC < 0
    RESET IS-PREM-DEFIC
  END-IF
  MOVE IS-PREM-DEFIC TO IS-ORIG-PREM-DEFIC
*
END-IF
*
IF IS-PAID-UP-SW = 'Y'
  COMPUTE ROUNDED IS-BACV-A = (9000 * TA-MX(TA-ATT-X) * IS-CALC-1
     * (IS-FAC-AMT / 5000)) / TA-DX(TA-ATT-X)
  COMPUTE ROUNDED IS-BACV-B = (IS-CALC-9-EXP-FACT * 0.4 * (TB-NX(TB-ATT-X)
    - IS-CALC-2 * TB-DX(TB-ATT-X))) / TB-DX(TB-ATT-X)
  COMPUTE ROUNDED IS-BEG-ACV = IS-BACV-A + IS-BACV-B
ELSE
  IF (IS-GROS-RESV < IS-NET-RESV)
    MOVE IS-NET-RESV TO IS-BEG-ACV
  ELSE
    MOVE IS-GROS-RESV TO IS-BEG-ACV
  END-IF
END-IF
*
IF IS-PAID-UP-SW = 'Y'
  RESET IS-NET-PREM
ELSE
  COMPUTE ROUNDED IS-NET-PREM = (1000 * TC-MX(TC-ISS-X)) /(TC-NX(TC-ISS-X)
    - TC-NX(TC-PUP-X))
END-IF
COMPUTE ROUNDED IS-WORK-C = ((((1000 * TC-MX(TC-ATT-X)) - (IS-NET-PREM *
  (TC-NX(TC-ATT-X) - TC-NX(TC-PUP-X))))
   * (5 * (IS-FAC-AMT / 5000)))) / TC-DX(TC-ATT-X)
IF (IS-WORK-C > IS-FAC-AMT) OR ((IS-ISS-AGE + IS-DURATION) > 95)
  COMPUTE ROUNDED IS-BEG-MIN-CSV = (IS-FAC-AMT * 1)
ELSE
  COMPUTE ROUNDED IS-BEG-MIN-CSV = (IS-WORK-C * 1)
END-IF
*
IF ((IS-TYPE = '20') AND ((IS-DURATION + 1) > 20))
  OR ((IS-TYPE = '30') AND ((IS-DURATION + 1) > 30))
  OR ((IS-TYPE = '7')  AND ((IS-DURATION + 1) > 7))
  OR ((IS-TYPE = 'OL') AND ((IS-ISS-AGE + IS-DURATION + 1) > 96))
  RESET IS-NET-PREM
END-IF
ADD 1 TO TC-ATT-X
IF TC-ATT-X > 86
  MOVE 86 TO TC-ATT-X
END-IF
*
COMPUTE ROUNDED IS-WORK-C = ((((1000 * TC-MX(TC-ATT-X)) -
  (IS-NET-PREM * (TC-NX(TC-ATT-X) - TC-NX(TC-PUP-X)))) *
  (5 * (IS-FAC-AMT / 5000)))) / TC-DX(TC-ATT-X)
IF (IS-WORK-C > IS-FAC-AMT) OR ((IS-ISS-AGE + IS-DURATION + 1) > 95)
  COMPUTE ROUNDED IS-NXT-YR-MIN-CSV = (IS-FAC-AMT * 1)
ELSE
  COMPUTE ROUNDED IS-NXT-YR-MIN-CSV = (IS-WORK-C * 1)
END-IF
MOVE IS-NXT-YR-MIN-CSV TO IS-ORIG-NXT-MIN-CV
*
IF IS-BEG-MIN-CSV > IS-BEG-ACV
  RESET IS-ALLOC-CRED
ELSE
  COMPUTE ROUNDED IS-ALLOC-CRED = (IS-BEG-ACV - IS-BEG-MIN-CSV) / 120
END-IF
*
MOVE IS-BEG-MIN-CSV TO IS-BEG-CSV
MOVE IS-FAC-AMT TO IS-BEG-MIN-DB
*
IF IS-DURATION > 2
  COMPUTE ROUNDED IS-BEG-DB = (9000 * IS-FAC-AMT) / 5000
ELSE
  MOVE IS-FAC-AMT TO IS-BEG-DB
END-IF
*
END-SUBROUTINE
*
*********************************************************************************
*
