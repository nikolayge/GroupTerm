* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: UIXXP001 - Browse pattern ONE
************************************************************************
*                       MODIFICATION LOG                               *
* USER     DATE      TAG     REASON                                    *
*                                                                      *
* NGG    11/28/2010  None    Program written                           *
************************************************************************
DEFINE DATA
PARAMETER
1 #CONTACT-ID        (N8.0)
1 #SVC-ID-NUMBER     (N6)
1 #HEADER1           (A43)
1 #HEADER2           (A78)
LOCAL USING SVCA0003
* 1 PARM-SVC
*   2 ACTION (A) DYNAMIC
*   2 USER   (A) DYNAMIC
*   2 SVC-MEMBER-ID (N6)
*   2 SVC-PLAN      (A3)
*   2 CASH-MODE (A1)
*   2 SVC-TRAN-TYPE (A6)
*   2 SVC-PAY-AMOUNT (N7.2)
*   2 TRANSACTION-DATN (N8)
*   2 REDEFINE TRANSACTION-DATN /* BEGIN REDEFINE: TRANSACTION-D
*     3 TRAN-MONTH (N6)
*     3 TRAN-DAY (N2)
*   2 TRANSACTION-TIMN (N7)
*   2 SVC-MODE (A1)
*   2 SVC-PAY-UP (A1)
*   2 SVC-ISSUE-DATE (N8)
*   2 SVC-PAID-TO-DATE (N8)
*   2 SVC-TERMINATION-DATE (N8)
*   2 SVC-MONTHLY-RATE (N7.2)
*   2 SVC-ONE-TIME-FEE (N7.2)
*   2 SVC-REACTIVATION-FEE (N7.2)
*   2 SVC-ARREARS-FEE (N7.2)
*   2 SVC-AMOUNT-DUE (N7.2)
*   2 SVC-TOTAL-DUE (N7.2)
LOCAL
1 #MAP-FIELDS
  2 #ACTION                    (A10)
  2 #USER                      (A8)
  2 #CASH-MODE                 (A1)
  2 #SVC-TRAN-TYPE             (A6)
  2 #SVC-PAY-AMOUNT            (N7.2)
  2 #TRANSACTION-DATN          (N8)
  2 #TRANSACTION-TIMN          (N8)
  2 #SVC-MODE                  (A1)
  2 #SVC-PAY-UP                (A1)
  2 #SVC-ISSUE-DATE            (N8)
  2 #SVC-PAID-TO-DATE          (N8)
  2 #SVC-TERMINATION-DATE      (N8)
  2 #SVC-MONTHLY-RATE          (N7.2)
  2 #SVC-ONE-TIME-FEE          (N7.2)
  2 #SVC-REACTIVATION-FEE      (N7.2)
  2 #SVC-ARREARS-FEE           (N7.2)
  2 #SVC-AMOUNT-DUE            (N7.2)
  2 #SVC-TOTAL-DUE             (N7.2)
1 #MSG                       (A)  DYNAMIC
1 #SELECT                    (I2)
1 #ISN                       (P10)
1 #TRANSACTION-DATE-INPUT    (N8)
1 #AMOUNT-DUE-INPUT          (N7.2)
1 #CASH-CODE-INPUT           (A1)
1 #HAS-GOT-INFO              (L) INIT <FALSE>
1 #CHECK-COMPLETE            (L) INIT <FALSE>
1 #TOTAL-DUE                 (N7.2) INIT <0>
*
1 #SVC-CV                    (C) INIT <(AD=P)>
1 #SVC-INPUT-CV              (C) 1 REDEFINE #SVC-INPUT-CV
  2 #CV-HEX                    (B2)
*
1 #ERR-N                       (A3)
1 BLANK                        (A1) CONST <' '>
LOCAL USING ERROR_L
END-DEFINE
*
SET KEY PF3  NAMED 'Exit'
*
* PERFORM INIT-STEPS
*
MOVE (AD=U) TO #SVC-INPUT-CV
**PRINT #CV-HEX (EM=HH)
REPEAT
  INPUT WITH TEXT #MSG USING MAP 'UIXXM001'
  DECIDE ON FIRST VALUE OF *PF-KEY
    VALUE 'ENTR'
      PERFORM CHECK-INPUT
      IF #CHECK-COMPLETE THEN
        PERFORM DECIDE-ACTION
      END-IF
*     VALUE 'PF7'
*       #MSG := 'Perform Page up'
*     VALUE 'PF8'
*       #MSG := 'Perform Page down'
    NONE VALUE
      #MSG := 'Press F3 to exit'
  END-DECIDE
  IF *LENGTH(#MSG) GE 3
    #ERR-N := SUBSTR(#MSG,1,3)
    IF #ERR-N IS (N3)
      #MSG := F-ERROR-DESCRIPTION (< #ERR-N >)
    END-IF
  END-IF
  UNTIL *PF-KEY = 'PF3'
END-REPEAT
*
*******************************
DEFINE SUBROUTINE DECIDE-ACTION
*******************************
DECIDE ON FIRST VALUE OF *TRIM(#ACTION)
  VALUE 'GET'
    PERFORM GET-SVC-DATA
    PERFORM POPULATE-MAP
  VALUE 'APPLY'
    IF #HAS-GOT-INFO THEN
      PERFORM APPLY-SVC-PAYMENT
      PERFORM POPULATE-MAP
      IF #MSG EQ BLANK
        END TRANSACTION
        #MSG := 'Apply payment is done'
      END-IF
    ELSE
      #MSG := 'You MUST perform action ''GET'' before you can apply'
    END-IF
  VALUE 'RESET'
    RESET #MAP-FIELDS PARM-SVC
    RESET INITIAL #SVC-CV #SVC-INPUT-CV #HAS-GOT-INFO #CHECK-COMPLETE
  NONE VALUE
    #MSG := 'You can only GET or APPLY currently'
END-DECIDE
*
END-SUBROUTINE
**************
*
********************************
DEFINE SUBROUTINE CHECK-INPUT
********************************
#CHECK-COMPLETE := TRUE
IF  #ACTION = BLANK
    OR #SVC-ID-NUMBER = 0
    OR SVC-PLAN = BLANK
  #MSG :=  'You must enter a value for CN,Action and Service plan TO Continue'
  RESET #CHECK-COMPLETE
END-IF
IF #ACTION = 'GET'
  IF #SVC-PAY-AMOUNT > 0
    #MSG :=  'Pay Amount is only for APPLY'
  END-IF
*  RESET PARM-SVC
END-IF
IF #ACTION = 'APPLY'
  IF #TRANSACTION-DATN <= 0
    #MSG :=  'You must enter a Transaction Date TO Continue'
    RESET #CHECK-COMPLETE
  END-IF
  IF #TRANSACTION-DATN <= SVC-PAID-TO-DATE
    #MSG :=  'Transaction Date has to be greather than Bill To Date'
    RESET #CHECK-COMPLETE
  END-IF
END-IF
END-SUBROUTINE
***************
*
**********************************
DEFINE SUBROUTINE GET-SVC-DATA
**********************
PARM-SVC.ACTION           := *TRIM(#ACTION)
PARM-SVC.SVC-MEMBER-ID    := #SVC-ID-NUMBER
PARM-SVC.TRANSACTION-DATN := #TRANSACTION-DATN
RESET #MSG
CALLNAT 'SVCN0003' PARM-SVC #MSG
IF #MSG = #NOT-EXIST
  RESET #MSG
  PARM-SVC.SVC-STATUS := 'P'
  CALLNAT 'SVCN0003' PARM-SVC #MSG
END-IF
#HAS-GOT-INFO := TRUE
END-SUBROUTINE
**************
*
***********************************
DEFINE SUBROUTINE APPLY-SVC-PAYMENT
***********************************
PARM-SVC.TRANSACTION-TIMN   :=    *TIMN
PARM-SVC.TRANSACTION-DATN   :=    #TRANSACTION-DATN
PARM-SVC.CASH-MODE          :=    #CASH-MODE
IF #SVC-PAY-AMOUNT > 0
  PARM-SVC.SVC-PAY-AMOUNT := #SVC-PAY-AMOUNT
ELSE
  PARM-SVC.SVC-PAY-AMOUNT := #SVC-TOTAL-DUE
END-IF
PARM-SVC.ACTION             :=    *TRIM(#ACTION)
PARM-SVC.SVC-MEMBER-ID      :=    #SVC-ID-NUMBER
PARM-SVC.USER               :=    *INIT-USER
CALLNAT 'SVCN0003' PARM-SVC #MSG
#ACTION := 'GET'
PERFORM GET-SVC-DATA
END-SUBROUTINE
**************
*
*******************************
DEFINE SUBROUTINE POPULATE-MAP
*******************************
#USER                      := PARM-SVC.USER
#SVC-MODE                  := PARM-SVC.SVC-MODE
#SVC-PAY-UP                := PARM-SVC.SVC-PAY-UP
#SVC-ISSUE-DATE            := PARM-SVC.SVC-ISSUE-DATE
#SVC-PAID-TO-DATE          := PARM-SVC.SVC-PAID-TO-DATE
#SVC-TERMINATION-DATE      := PARM-SVC.SVC-TERMINATION-DATE
#SVC-MONTHLY-RATE          := PARM-SVC.SVC-MONTHLY-RATE
#SVC-ONE-TIME-FEE          := PARM-SVC.SVC-ONE-TIME-FEE
#SVC-REACTIVATION-FEE      := PARM-SVC.SVC-REACTIVATION-FEE
#SVC-ARREARS-FEE           := PARM-SVC.SVC-ARREARS-FEE
#SVC-AMOUNT-DUE            := PARM-SVC.SVC-AMOUNT-DUE
#SVC-TOTAL-DUE             := PARM-SVC.SVC-TOTAL-DUE
IF #ACTION = 'APPLY'
  #CASH-MODE                 := PARM-SVC.CASH-MODE
  #SVC-TRAN-TYPE             := PARM-SVC.SVC-TRAN-TYPE
  #SVC-PAY-AMOUNT            := PARM-SVC.SVC-PAY-AMOUNT
  #TRANSACTION-DATN          := PARM-SVC.TRANSACTION-DATN
  #TRANSACTION-TIMN          := PARM-SVC.TRANSACTION-TIMN
END-IF
END-SUBROUTINE
**************
END
