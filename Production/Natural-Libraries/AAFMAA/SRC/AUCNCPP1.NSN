* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCNCPP1'
*
* DESCRIPTION
*   XML Parser implementationfor file:
*   C:\Users\nguentchev\workspace96\PolicyOwnership\Natural-Libraries\AUCPO\ContactPoliciesOverview.xsd
*   using PARSE XML statement and datastructure 'AUCACR01'
*
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
LOCAL USING AUCACP01
LOCAL USING PARSER-X
LOCAL USING AUCAHI01
*
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
*
LOCAL
1 #CX                          (I4)
1 #CY                          (I4)
1 #CZ                          (I4)
1 #XML_PREFIX                  (A/1:1) DYNAMIC INIT <
  'i:' >
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
1 #LEN              (I4)
1 #PARSE-ERROR      (I4) CONST <-7>
1 get_policies_roles (I4) CONST <0>
END-DEFINE
*
RESET PolicyContactRoles
ASSIGN #LEN := *LENGTH (#XML_INPUT)
IF #LEN <= 0
  PolicyContactRoles.ErrorCode := #PARSE-ERROR
  PolicyContactRoles.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNCPS1' #XML_OUTPUT PolicyContactRoles HeaderInfo
  ESCAPE ROUTINE
END-IF
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
/*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
PolicyContactRoles.ErrorCode := #PARSE-ERROR
PolicyContactRoles.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNCPS1' #XML_OUTPUT PolicyContactRoles HeaderInfo
END-SUBROUTINE
*
DEFINE SUBROUTINE CALLBACK
/*                ========
* IF XML_PARSER_CONTENT_IS_EMPTY THEN
*   IGNORE
* ELSE
#XML_VALUE := *TRIM (#XML_VALUE)
MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
PERFORM PARSE-DOCUMENT
* END-IF
END-SUBROUTINE
*  Put the code to do the "real" work
IF PolicyContactRoles.ActionType = get_policies_roles
  CALLNAT 'AUCNCPG1' PolicyContactRoles
  IF PolicyContactRoles.ContactID > 0
    HeaderInfo.ContactID := PolicyContactRoles.ContactID
    CALLNAT 'AUCNHIM1' HeaderInfo      /* Manage HeaderInfo
  END-IF
  CALLNAT 'AUCNCPS1' #XML_OUTPUT PolicyContactRoles HeaderInfo
END-IF
*
* ------------------------------------------------- CALL THE PARSER
* PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE #XML_VALUE
DEFINE PARSE-DOCUMENT
*
DECIDE ON FIRST #XML_PATH
  VALUE 'ContactPoliciesOverview//'
    IGNORE
  VALUE 'ContactPoliciesOverview'
    RESET INITIAL PolicyContactRoles
  VALUE 'ContactPoliciesOverview/ActionType//'
    IGNORE
  VALUE 'ContactPoliciesOverview/ActionType'
    IGNORE
  VALUE 'ContactPoliciesOverview/ActionType/$'
    PolicyContactRoles.ActionType := VAL(#XML_VALUE)
  VALUE 'ContactPoliciesOverview/ErrorCode//'
    IGNORE
  VALUE 'ContactPoliciesOverview/ErrorCode'
    IGNORE
  VALUE 'ContactPoliciesOverview/ErrorCode/$'
    PolicyContactRoles.ErrorCode := VAL(#XML_VALUE)
  VALUE 'ContactPoliciesOverview/ErrorDescription//'
    IGNORE
  VALUE 'ContactPoliciesOverview/ErrorDescription'
    IGNORE
  VALUE 'ContactPoliciesOverview/ErrorDescription/$'
    PolicyContactRoles.ErrorDescription := #XML_VALUE
  VALUE 'ContactPoliciesOverview/ContactID//'
    IGNORE
  VALUE 'ContactPoliciesOverview/ContactID'
    IGNORE
  VALUE 'ContactPoliciesOverview/ContactID/$'
    PolicyContactRoles.ContactID := VAL(#XML_VALUE)
  VALUE 'ContactPoliciesOverview/CN//'
    IGNORE
  VALUE 'ContactPoliciesOverview/CN'
    IGNORE
  VALUE 'ContactPoliciesOverview/CN/$'
    PolicyContactRoles.CN := VAL(#XML_VALUE)
  VALUE 'ContactPoliciesOverview/SystemSource//'
    IGNORE
  VALUE 'ContactPoliciesOverview/SystemSource'
    IGNORE
  VALUE 'ContactPoliciesOverview/SystemSource/$'
    PolicyContactRoles.SystemSource := #XML_VALUE
  VALUE 'ContactPoliciesOverview/User//'
    IGNORE
  VALUE 'ContactPoliciesOverview/User'
    IGNORE
  VALUE 'ContactPoliciesOverview/User/$'
    PolicyContactRoles.User := #XML_VALUE
  VALUE 'ContactPoliciesOverview/Policies//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy'
    ADD 1 TO PolicyContactRoles.C@ContactPolicy
    #CX := PolicyContactRoles.C@ContactPolicy
    EXPAND ARRAY PolicyContactRoles.ContactPolicy TO (1:#CX)
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/ErrorCode//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/ErrorCode'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/ErrorCode/$'
    PolicyContactRoles.ErrorCode_001(#CX) := VAL(#XML_VALUE)
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/ErrorDescription//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/ErrorDescription'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/ErrorDescription/$'
    PolicyContactRoles.ErrorDescription_001(#CX) := #XML_VALUE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/LastUpdatedDate//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/LastUpdatedDate'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/LastUpdatedDate/$'
    PolicyContactRoles.LastUpdatedDate(#CX) := VAL(#XML_VALUE)
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/LastUpdatedTime//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/LastUpdatedTime'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/LastUpdatedTime/$'
    PolicyContactRoles.LastUpdatedTime(#CX) := VAL(#XML_VALUE)
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/LastUpdatedUser//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/LastUpdatedUser'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/LastUpdatedUser/$'
    PolicyContactRoles.LastUpdatedUser(#CX) := #XML_VALUE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/SystemSource//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/SystemSource'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/SystemSource/$'
    PolicyContactRoles.SystemSource_001(#CX) := #XML_VALUE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/User//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/User'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/User/$'
    PolicyContactRoles.User_001(#CX) := #XML_VALUE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyID//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyID'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyID/$'
    PolicyContactRoles.PolicyID(#CX) := #XML_VALUE

  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyIssueDate//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyIssueDate'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/$'
    PolicyContactRoles.PolicyIssueDate(#CX) := VAL(#XML_VALUE)



  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyDescription//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyDescription'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyDescription/$'
    PolicyContactRoles.PolicyDescription(#CX) := #XML_VALUE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/LinkedLoan//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/LinkedLoan'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/LinkedLoan/$'
    PolicyContactRoles.LinkedLoan(#CX) := #XML_VALUE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyOwnerName//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyOwnerName'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyOwnerName/$'
    PolicyContactRoles.PolicyOwnerName(#CX) := #XML_VALUE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyOwnerCN//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyOwnerCN'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyOwnerCN/$'
    PolicyContactRoles.PolicyOwnerCN(#CX) := VAL(#XML_VALUE)
    
   VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyInsuredName//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyInsuredName'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyInsuredName/$'
    PolicyContactRoles.PolicyInsuredName(#CX) := #XML_VALUE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyInsuredCN//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyInsuredCN'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyInsuredCN/$'
    PolicyContactRoles.PolicyInsuredCN(#CX) := VAL(#XML_VALUE)   

  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyInsuredCI//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyInsuredCI'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/PolicyInsuredCI/$'
    PolicyContactRoles.PolicyInsuredCI(#CX) := VAL(#XML_VALUE)
        
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/ContactRoles//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/ContactRoles'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/ContactRoles/Role//'
    IGNORE
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/ContactRoles/Role'
    ADD 1 TO PolicyContactRoles.C@Role(#CX)
    #CY := PolicyContactRoles.C@Role(#CX)
    EXPAND ARRAY PolicyContactRoles.Role TO (*,1:#CY)
  VALUE 'ContactPoliciesOverview/Policies/ContactPolicy/ContactRoles/Role/$'
    PolicyContactRoles.Role(#CX,#CY) := #XML_VALUE
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END
