* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* PGM-ID: C2530PAM - Accounting Maintenance for Lock Box (Deposits)
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE      TAG     REASON                                      *
* PAM    04112005  None    Program Written                             *
* PAM    08192005  PM1     Removed SSN check for '001' for temp SSN's  *
* PAM    09292005  PM2     Added stop control for rebuild              *
* PAM    02072006  PM3     Added batch saved confirmation message      *
* PAM    11132007  PM4     Added credit card deposit processing        *
* PAM    12272007  PM5     Fix Rebuild process to handle multiple users*
* DRW  03/27/2008  DW6     Send Pay Type to TR file creation           *
* PAM  11/03/2008  PM7     Allow 'X' or ENTER key                      *
* bz1  20/05/2013  Add function to delete records with SSN <= 11
* vxt  01/20/2015  vt1     /ticket 3288- remove the window call/       *
************************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX
*
LOCAL
1 AD-V VIEW OF A-DEPOSITS
  2 SSN                  (P9)
  2 DEPOSIT-OCC          (99)
    3 AMOUNT              (P7.2)
    3 DATE                (N8)
    3 SENT-BY             (A1)
    3 TYPE                (A1)
    3 CHECK-NUM           (A6)
    3 SPLIT               (A1)
    3 NAME                (A25)
    3 ADDR-1              (A25)
    3 ADDR-2              (A25)
    3 CITY                (A22)
    3 STATE               (A2)
    3 ZIP-CODE            (N9)
    3 CC-NUM              (A16)                                    /* PM4
    3 CC-EXP-DT           (N6)                                     /* PM4
    3 APPLIED-DATE        (N8)
    3 APPLIED-CN          (N6)
    3 REBUILD-SSN         (N9)
    3 REBUILD-CLERK       (A3)
    3 REBUILD-TRAN        (A4)
    3 EXTRA-A             (A1)
    3 APFR-NUM            (N2)
*
1 DP-V VIEW OF A-DEPOSITS
  2 SSN                  (P9)
  2 DEPOSIT-OCC          (99)
    3 AMOUNT              (P7.2)
    3 DATE                (N8)
    3 SENT-BY             (A1)
    3 TYPE                (A1)
    3 CHECK-NUM           (A6)
    3 SPLIT               (A1)
    3 NAME                (A25)
    3 ADDR-1              (A25)
    3 ADDR-2              (A25)
    3 CITY                (A22)
    3 STATE               (A2)
    3 ZIP-CODE            (N9)
    3 CC-NUM              (A16)                                    /* PM4
    3 CC-EXP-DT           (N6)                                     /* PM4
    3 APPLIED-DATE        (N8)
    3 APPLIED-CN          (N6)
    3 REBUILD-SSN         (N9)
    3 REBUILD-CLERK       (A3)
    3 REBUILD-TRAN        (A4)
    3 EXTRA-A             (A1)
    3 APFR-NUM            (N2)
*
1 CK-V VIEW OF A-DEPOSITS
  2 SSN                  (P9)
  2 DEPOSIT-OCC          (99)
    3 REBUILD-SSN         (N9)
    3 REBUILD-TRAN        (A4)
    3 APFR-NUM            (N2)
*
1 #SCR-DATE-DISP        (A10)
1 #SCR-TIME             (A8)
1 #SCR-TERM-ID          (A3)
1 #SCR-TOTAL-SIGN       (A1)
1 #SCR-TOTAL            (N9.2)
1 #SCR-PAGE-NUM         (N2)
1 #SCR-CV               (C/15)
1 #SCR-TOTAL-CV         (C)
*
1 #SCR-TABLE            (15)
  2 #SCR-TRAN            (A4)
  2 #SCR-SSN             (N9)
  2 REDEFINE #SCR-SSN
    3 #SCR-SSN-1-3        (N3)
    3 #SCR-SSN-REST       (N6)
  2 #SCR-AMOUNT          (N6.2)
  2 #SCR-DATE            (N8)
  2 #SCR-SENT-BY         (A1)
  2 #SCR-TYPE            (A1)
  2 #SCR-CHECK-NUM       (A6)
  2 #SCR-SPLIT           (A1)
  2 #SCR-NAME            (A25)
  2 #SCR-ADDR-1          (A25)
  2 #SCR-ADDR-2          (A25)
  2 #SCR-CITY            (A22)
  2 #SCR-STATE           (A2)
  2 #SCR-ZIP-CODE        (N9)
  2 #SCR-ADDL-INFO       (A1)
  2 #SCR-MORE            (A3)
  2 #SCR-APFR-NUM        (N2)
  2 #SCR-CC-NUM          (A16)                                    /* PM4
  2 #SCR-CC-EXP-DT       (N6)                                     /* PM4
  2 REDEFINE #SCR-CC-EXP-DT
    3 #SCR-CC-EXP-DT-MM   (N2)                                     /* PM4
    3 #SCR-CC-EXP-DT-YYYY (N4)                                     /* PM4

*
1 #HLD-TOTAL            (N9.2)
1 #HOLD-FIELDS          (15)
  2 #HLD-TRAN            (A4)
  2 #HLD-SSN             (N9)
  2 #HLD-AMOUNT          (N6.2)
  2 #HLD-DATE            (N8)
  2 #HLD-SENT-BY         (A1)
  2 #HLD-TYPE            (A1)
  2 #HLD-CHECK-NUM       (A6)
  2 #HLD-SPLIT           (A1)
  2 #HLD-NAME            (A25)
  2 #HLD-ADDR-1          (A25)
  2 #HLD-ADDR-2          (A25)
  2 #HLD-CITY            (A22)
  2 #HLD-STATE           (A2)
  2 #HLD-ZIP-CODE        (N9)
  2 #HLD-ADDL-INFO       (A1)
  2 #HLD-APFR-NUM        (N2)
  2 #HLD-CC-NUM          (A16)                                    /* PM4
  2 #HLD-CC-EXP-DT       (N6)                                     /* PM4
*
1 #APFR-SELECT          (N2)
1 #APFR-COMMAND         (A2)
*
1 #APFR-TABLE           (10)
  2 #APFR-DEPOSIT        (N3)
  2 #APFR-AMOUNT         (N6.2)
  2 #APFR-DATE           (N8)
  2 #APFR-SENT-BY        (A1)
  2 #APFR-TYPE           (A1)
  2 #APFR-CHECK-NUM      (A6)
*
1 #DATE-OF-UPDATE       (N8)
1 REDEFINE #DATE-OF-UPDATE                                        /* PM4
  2 #DATE-YYYY           (N4)                                      /* PM4
  2 #DATE-MM             (N2)                                      /* PM4
  2 #DATE-DD             (N2)                                      /* PM4
1 #TIME-OF-UPDATE       (N7)
1 #INIT-ID              (A8)
1 #EXP-CHECK-DATE       (N6)                                      /* PM4
1 REDEFINE #EXP-CHECK-DATE                                        /* PM4
  2 #EXP-CHECK-MM        (N2)                                      /* PM4
  2 #EXP-CHECK-YYYY      (N4)                                      /* PM4
*
1 #REBUILD-DONE         (L)                                       /* PM2
1 #REBUILD-FOUND        (L)
1 #REBUILD-BATCH        (L)
1 #DELETE-BATCH         (L)
1 #LINE-ENTERED         (L)
1 #NO-CHANGES           (L)
1 #SELECTED             (L)
1 #CASH                 (L)                                       /* PM4
1 #CREDIT               (L)                                       /* PM4
1 #I1                   (I2)
1 #I2                   (I2)
1 #I3                   (I2)
1 #I4                   (I2)
1 #I5                   (I2)
1 #I6                   (I2)                                      /* PM4
1 #NUM-O                (I2)
1 #APFR-INDEX           (I2)
1 #CNT                  (P5)
1 #CNT-OUT-DEPOSITS     (P5)
1 #ISN                  (P8)
1 #REBUILD-SSN          (P9)
1 #REBUILD-TO-USE       (P9)
1 #BATCH-TOTAL          (N9.2)
1 #REBUILD-BATCH-YD     (A1)
1 #CHECK-TRANSACTION    (A4)
1 #CC-20                (A20)                                     /* PM4
1 #CREDIT-CASH          (A12)                                     /* PM4
1 #TEXT                 (A60)
1 #TOTAL-TEXT-1         (A15)
1 #TOTAL-TEXT-2         (A15)
*
1 #FROM-DATE            (N8)
1 #TODAY                (N8)
1 #DATE-CHECK           (N8)
1 #ACTION-CODE-C        (A1)   INIT <'C'>
1 #ACTION-CODE-D        (A1)   INIT <'D'>
*
1 #SINGLE-NAME          (A25)
1 #SINGLE-ADDR-1        (A25)
1 #SINGLE-ADDR-2        (A25)
1 #SINGLE-CITY          (A22)
1 #SINGLE-STATE         (A2)
1 #SINGLE-ZIP-CODE      (N9)
1 REDEFINE #SINGLE-ZIP-CODE
  2 #SINGLE-ZIP-CODE-5   (N5)
  2 #SINGLE-ZIP-CODE-4   (N4)
1 #TRAN                 (A4)
1 #SSN                  (N9)
1 #CHECK-AMOUNT         (N6.2)
1 #DATE                 (N8)
1 #SENT-BY              (A1)
1 #CHECK-TYPE           (A1)
1 #CHECK-NUM            (A6)
1 #CHECK-SPLIT          (A1)
1 #CMBX                 (A4)
1 #CASH-CODE            (A1)                                      /* DW6
1 #DEPOSIT-IND          (A1/2)                                    /* PM7
1 #DEPOSIT-I            (I2)                                      /* PM7
1 l_Clear               (L)
*
END-DEFINE
***********************************************************************
INCLUDE GONERCXX
*
DEFINE WINDOW POP-UP-BOX
  SIZE QUARTER
  BASE TOP LEFT
  FRAMED ON POSITION SYMBOL AUTO
*
DEFINE WINDOW BATCH-TOTALS-BOX
  SIZE 23 * 50
  BASE TOP LEFT
  FRAMED ON POSITION SYMBOL AUTO
*
DEFINE WINDOW APFR-SELECT
  SIZE 23 * 65
  BASE TOP LEFT
  FRAMED ON POSITION SYMBOL AUTO
*
DEFINE WINDOW SAVE-CONFIRMATION                                   /* PM3
  SIZE 10 * 55                                                    /* PM3
  BASE CURSOR                                                     /* PM3
  FRAMED ON POSITION SYMBOL AUTO                                  /* PM3
*
DEFINE WINDOW CREDIT-CARD-OR-CASH                                 /* PM4
  SIZE 10*36                                                     /* PM4
  BASE 4/13                                                      /* PM4
*
DEFINE WINDOW BATCH-CHECK                                         /* PM4
  SIZE 13*36                                                     /* PM4
  BASE 4/13                                                      /* PM4
*
PERFORM CHECK-CREDIT-CASH                                         /* PM4
*
MOVE (AD=U)     TO #SCR-CV (*) #SCR-TOTAL-CV
*
MOVE *DAT4U     TO #SCR-DATE-DISP
MOVE *TIME      TO #SCR-TIME
MOVE #CGA-CLERK TO #SCR-TERM-ID
*
MOVE *DATN      TO #DATE-OF-UPDATE
MOVE *TIMN      TO #TIME-OF-UPDATE
MOVE *INIT-ID   TO #INIT-ID
*
#EXP-CHECK-YYYY := #DATE-YYYY                                     /* PM4
#EXP-CHECK-MM   := #DATE-MM                                       /* PM4
*
CALLNAT 'GDATESXX'
  #DATE-OF-UPDATE
  #FROM-DATE
  #TODAY
  #ACTION-CODE-C
*
PERFORM CHECK-FOR-EXISTING-BATCHES
*
IF #REBUILD-TO-USE = 0
  SET WINDOW 'POP-UP-BOX'
  WRITE 'All Rebuild Areas are full'
  WRITE 'Please contact an EDS representative'
  SET WINDOW OFF

  INPUT 'Clear rebuilt area?' l_Clear (AD=MU EM=N/Y)  /* bz1 Start
  IF l_Clear
    FD.
    FIND DP-V WITH DP-V.SSN <= 11
      DELETE(FD.)
      END TRANSACTION
    END-FIND
    #CGA-SCR-COMMAND := 'AM'
    #CGA-SCR-SUFFIX  := 'FPF'
    FETCH 'G1000PXX'
  END-IF                                             /* bz1  Ends
  ESCAPE ROUTINE
END-IF
*
REPEAT
  RESET #SCR-TOTAL #HLD-TOTAL #SCR-TABLE (*) #HOLD-FIELDS (*)
    #SCR-TOTAL-SIGN #TEXT
  ADD +1 TO #SCR-PAGE-NUM
  IF #REBUILD-BATCH
      AND NOT #REBUILD-DONE                                          /* PM2
    PERFORM LOAD-SCREEN
  END-IF
*
  REPEAT
    PERFORM CHECK-FOR-ADDL-INFORMATION
    IF #CASH                                                      /* PM4
      INPUT TEXT #TEXT MARK *#SCR-SSN (1) USING MAP 'C2530MAM'
    ELSE                                                          /* PM4
      INPUT TEXT #TEXT MARK *#SCR-SSN (1) USING MAP 'C2529MAM'    /* PM4
    END-IF                                                        /* PM4
    PERFORM CHECK-COMMAND
    PERFORM SCREEN-EDITS
    PERFORM CHECK-FOR-SCREEN-CHANGES
    IF #NO-CHANGES
      ESCAPE BOTTOM
    ELSE
      MOVE 'PRINT SCREEN OR MAKE CHANGES AND PRESS ENTER TO CONTINUE'
        TO #TEXT
    END-IF
  END-REPEAT
*
  PERFORM MOVE-SCREEN-TO-REBUILD-FILE
  IF #SCR-TOTAL NE 0
    PERFORM CHECK-TOTAL
    ESCAPE BOTTOM
  END-IF
END-REPEAT
*
PERFORM APPLY-DEPOSITS
PERFORM MASK-CREDIT-CARD-NUMBERS                                  /* PM4
MOVE (AD=P) TO #SCR-CV (*)
MOVE (AD=P) TO #SCR-TOTAL-CV
MOVE 'Transaction Complete' TO #TEXT
IF #CASH                                                          /* PM4
  INPUT TEXT #TEXT MARK *#CGA-SCR-COMMAND USING MAP 'C2530MAM'
ELSE                                                              /* PM4
  INPUT TEXT #TEXT MARK *#CGA-SCR-COMMAND USING MAP 'C2529MAM'    /* PM4
END-IF                                                            /* PM4
*
FETCH 'G1000PXX'
*
************************************************************************
DEFINE SUBROUTINE CHECK-FOR-EXISTING-BATCHES
************************************************************************
*
MOVE 1 TO #REBUILD-SSN

RESET #REBUILD-FOUND #REBUILD-TO-USE #REBUILD-BATCH #DELETE-BATCH
FOR #I1 1 TO 10
  FIND (1) AD-V WITH AD-V.SSN = #REBUILD-SSN
    IF NO RECORDS FOUND
*      PRINT 'no rec'  '=' #rebuild-to-use
      IF #REBUILD-TO-USE = 0
        MOVE #REBUILD-SSN TO #REBUILD-TO-USE
        AD-V.SSN := #REBUILD-TO-USE                                  /* PM5
*        write 'will store info for ' '=' ad-v.ssn
        STORE AD-V                                                   /* PM5
      END-IF
      ESCAPE BOTTOM
    END-NOREC
*
    IF AD-V.AMOUNT (1) GT 0 AND AD-V.REBUILD-CLERK (1) = #CGA-CLERK
        AND ((AD-V.TYPE (1) = 'K' AND #CREDIT)                          /* PM4
        OR (AD-V.TYPE (1) NE 'K' AND #CASH))                         /* PM4
      MOVE TRUE TO #REBUILD-FOUND
*
      IF #CREDIT                                                     /* PM4
        #CREDIT-CASH := 'CREDIT CARD'                                /* PM4
      ELSE                                                           /* PM4
        #CREDIT-CASH := 'CASH TYPE'                                  /* PM4
      END-IF                                                         /* PM4
*
      SET WINDOW 'BATCH-CHECK'
      INPUT WITH TEXT #TEXT MARK *#REBUILD-BATCH-YD
        USING MAP 'C2532MAM'
      IF NOT #REBUILD-BATCH-YD = 'Y' OR = 'D'
        REINPUT WITH TEXT #TEXT MARK *#REBUILD-BATCH-YD
      END-IF
      SET WINDOW OFF
*

      MOVE #REBUILD-SSN TO #REBUILD-TO-USE
      IF #REBUILD-BATCH-YD = 'D'
        MOVE TRUE TO #DELETE-BATCH
        DELETE (0355)
      ELSE
        MOVE TRUE TO #REBUILD-BATCH
      END-IF
      ESCAPE BOTTOM
    END-IF
  END-FIND
*
  END TRANSACTION
*
  IF #REBUILD-FOUND
    ESCAPE BOTTOM
  ELSE
    ADD +1 TO #REBUILD-SSN
  END-IF
END-FOR
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE LOAD-SCREEN
************************************************************************
*
FOR #I1 1 TO 15
  IF #I2 = 99
    MOVE 'Accounting Rebuild Complete' TO #TEXT
    MOVE TRUE TO #REBUILD-DONE                                    /* PM2
    ESCAPE BOTTOM
  END-IF
*
  ADD +1 TO #I2
  IF AD-V.AMOUNT (#I2) = 0
    MOVE 'Accounting Rebuild Complete' TO #TEXT
    MOVE TRUE TO #REBUILD-DONE                                    /* PM2
    ESCAPE BOTTOM
  ELSE
    MOVE AD-V.REBUILD-SSN (#I2)  TO #SCR-SSN (#I1)
    MOVE AD-V.REBUILD-TRAN (#I2) TO #SCR-TRAN (#I1)
    MOVE AD-V.AMOUNT (#I2)       TO #SCR-AMOUNT (#I1)
    MOVE AD-V.SENT-BY (#I2)      TO #SCR-SENT-BY (#I1)
    MOVE AD-V.TYPE (#I2)         TO #SCR-TYPE (#I1)
    MOVE AD-V.CHECK-NUM (#I2)    TO #SCR-CHECK-NUM (#I1)
    MOVE AD-V.SPLIT (#I2)        TO #SCR-SPLIT (#I1)
    MOVE AD-V.NAME (#I2)         TO #SCR-NAME (#I1)
    MOVE AD-V.ADDR-1 (#I2)       TO #SCR-ADDR-1 (#I1)
    MOVE AD-V.ADDR-2 (#I2)       TO #SCR-ADDR-1 (#I1)
    MOVE AD-V.CITY (#I2)         TO #SCR-CITY (#I1)
    MOVE AD-V.STATE (#I2)        TO #SCR-STATE (#I1)
    MOVE AD-V.ZIP-CODE (#I2)     TO #SCR-ZIP-CODE (#I1)
    MOVE AD-V.APFR-NUM (#I2)     TO #SCR-APFR-NUM (#I1)
    MOVE AD-V.CC-NUM (#I2)       TO #SCR-CC-NUM (#I1)            /* PM4
    MOVE AD-V.CC-EXP-DT (#I2)    TO #SCR-CC-EXP-DT (#I1)         /* PM4
    CALLNAT 'GDATESXX'
      AD-V.DATE (#I2)
      #FROM-DATE
      #DATE-CHECK
      #ACTION-CODE-C
    MOVE #DATE-CHECK             TO #SCR-DATE (#I1)
  END-IF
END-FOR
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CHECK-COMMAND
************************************************************************
*
IF #CGA-SCR-COMMAND = '##' OR = '..' OR =  '&&'
  IF #CGA-SCR-COMMAND = '&&'
*   PERFORM MOVE-SCREEN-TO-REBUILD-FILE                           /* PM5
    SET WINDOW 'SAVE-CONFIRMATION'                                /* PM3
    INPUT USING MAP 'C2536MAM'                                  /* PM3
    SET WINDOW OFF                                                /* PM3
*
    MOVE 'GM' TO #CGA-SCR-COMMAND                                 /* PM3
    RESET #CGA-SCR-SUFFIX                                         /* PM3
    IGNORE
  ELSE
    FIND (1) AD-V WITH AD-V.SSN = #REBUILD-TO-USE
      IF NO RECORDS FOUND
        ESCAPE BOTTOM
      END-NOREC
*
      DELETE (0468)
    END-FIND
*
    END TRANSACTION
  END-IF
*
  SET WINDOW OFF
  FETCH 'G1000PXX'
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE SCREEN-EDITS
************************************************************************
*
FOR #I1 1 TO 15
  RESET #LINE-ENTERED
  IF  #SCR-SSN (#I1)       NE 0
      OR #SCR-DATE (#I1)      NE 0
      OR #SCR-TRAN (#I1)      NE ' '
      OR #SCR-AMOUNT (#I1)    NE 0
      OR #SCR-SENT-BY (#I1)   NE ' '
      OR #SCR-TYPE (#I1)      NE ' '
      OR #SCR-CHECK-NUM (#I1) NE ' '
      OR #SCR-SPLIT (#I1)     NE ' '
      OR #SCR-ADDL-INFO (#I1) NE ' '
      OR #SCR-NAME (#I1)      NE ' '
      OR #SCR-CITY (#I1)      NE ' '
      OR #SCR-ADDR-1 (#I1)    NE ' '
      OR #SCR-ADDR-2 (#I1)    NE ' '
      OR #SCR-STATE (#I1)     NE ' '
      OR #SCR-ZIP-CODE (#I1)  NE 0
      OR #SCR-CC-NUM (#I1)    NE ' '                                 /* PM4
      OR #SCR-CC-EXP-DT (#I1) NE 0                                   /* PM4
    MOVE TRUE TO #LINE-ENTERED
  END-IF
*
  IF #LINE-ENTERED
*   IF #SCR-SSN-1-3 (#I1) LT 001                                  /* PM1
    IF #SCR-SSN (#I1) LT 1900                                     /* PM1
      MOVE #SCR-SSN (#I1) TO #SSN
      REINPUT USING HELP MARK *#SCR-SSN (#I1)
    END-IF
*
    IF #SCR-DATE (#I1) NE 0
      CALLNAT 'GDATESXX'
        #SCR-DATE (#I1)
        #FROM-DATE
        #DATE-CHECK
        #ACTION-CODE-D
*
      IF  #SCR-DATE (#I1) NE MASK (MMDDYYYY)
          OR #DATE-CHECK GT #DATE-OF-UPDATE
          OR #DATE-CHECK LT 20010101
        MOVE #SCR-DATE (#I1) TO #DATE
        REINPUT USING HELP MARK *#SCR-DATE (#I1)
      END-IF
    ELSE
      MOVE #TODAY TO #SCR-DATE (#I1)
    END-IF
*
    IF #SCR-TRAN (#I1) NE ' '
      IF   #SCR-TRAN (#I1) NE 'APFP'
          AND #SCR-TRAN (#I1) NE 'APFR'
        MOVE #SCR-TRAN (#I1) TO #TRAN
        REINPUT USING HELP MARK *#SCR-TRAN (#I1)
      END-IF
    ELSE
      MOVE 'APFP' TO #SCR-TRAN (#I1)
    END-IF
*
    IF #CHECK-TRANSACTION = ' '
      MOVE #SCR-TRAN (#I1) TO #CHECK-TRANSACTION
    ELSE
      IF #SCR-TRAN (#I1) NE #CHECK-TRANSACTION
        COMPRESS 'This is a' #CHECK-TRANSACTION 'batch. Only 1'
          'tran type allowed per batch.' INTO #TEXT
        REINPUT TEXT #TEXT MARK *#SCR-TRAN (#I1)
      END-IF
    END-IF
*
    IF #SCR-AMOUNT (#I1) EQ 0
      MOVE #SCR-AMOUNT (#I1) TO #CHECK-AMOUNT
      REINPUT USING HELP MARK *#SCR-AMOUNT (#I1)
    END-IF
*
    IF #SCR-SENT-BY (#I1) NE ' '
      IF NOT #SCR-SENT-BY  (#I1) = 'M' OR = 'S' OR = 'T'
          OR = 'I' OR = 'O'
        MOVE #SCR-SENT-BY (#I1) TO #SENT-BY
        REINPUT USING HELP MARK *#SCR-SENT-BY (#I1)
      END-IF
    ELSE
      IF #SCR-TRAN (#I1) = 'APFP'
        MOVE 'M' TO #SCR-SENT-BY (#I1)
      END-IF
    END-IF
*
    IF NOT #SCR-TYPE (#I1) = 'C' OR = 'M' OR = '$' OR = ' '
        AND #CASH                                                 /* PM4
      MOVE #SCR-TYPE (#I1) TO #CHECK-TYPE
      REINPUT USING HELP MARK *#SCR-TYPE (#I1)
    END-IF
*
    IF #SCR-SPLIT (#I1) NE ' '
      IF NOT #SCR-SPLIT (#I1) = 'N' OR = 'Y'
        MOVE #SCR-SPLIT (#I1) TO #CHECK-SPLIT
        REINPUT USING HELP MARK *#SCR-SPLIT (#I1)
      END-IF
    ELSE
      IF #SCR-TRAN (#I1) = 'APFP'
        MOVE 'N' TO #SCR-SPLIT (#I1)
      END-IF
    END-IF
*
    IF  (#SCR-CC-NUM (#I1) NE ' ')                               /* PM4
        OR (#SCR-CC-EXP-DT (#I1) NE 000000)                         /* PM4
      #CC-20 := #SCR-CC-NUM (#I1)                                /* PM4
      CALLNAT 'GCKDGSXX' #CC-20 #TEXT                            /* PM4
*
      IF #TEXT NE ' '                                            /* PM4
        REINPUT #TEXT                                            /* PM4
          MARK *#SCR-CC-NUM (#I1)                                  /* PM4
      END-IF                                                     /* PM4
*
      IF  (#SCR-CC-EXP-DT (#I1) NE MASK(MMYYYY))                 /* PM4
          OR (#SCR-CC-EXP-DT-YYYY (#I1) GT #EXP-CHECK-YYYY + 15)    /* PM4
          OR ((#SCR-CC-EXP-DT-MM (#I1) LT #EXP-CHECK-MM)            /* PM4
          AND (#SCR-CC-EXP-DT-YYYY (#I1) LE #EXP-CHECK-YYYY))       /* PM4
        REINPUT  'Date Format is "MMYYYY"'                       /* PM4
          MARK *#SCR-CC-EXP-DT (#I1)                               /* PM4
      END-IF                                                     /* PM4
    END-IF                                                       /* PM4
*
    IF #CREDIT                                                   /* PM4
      #SCR-TYPE (#I1) := 'K'                                     /* PM4
    END-IF                                                       /* PM4
  END-IF
END-FOR
*
RESET #APFR-COMMAND
FOR #I1 1 TO 15              /* check which deposit to reduce
  IF #SCR-AMOUNT (#I1) NE #HLD-AMOUNT (#I1)
    RESET #SCR-APFR-NUM (#I1)
  END-IF
*
  IF #SCR-TRAN (#I1) = 'APFR'
      AND #SCR-APFR-NUM (#I1) = 0
    FIND (1) DP-V WITH DP-V.SSN = #SCR-SSN (#I1)
      IF NO RECORDS FOUND
        MOVE 'No Deposits Exist for this SSN' TO #TEXT
        REINPUT WITH TEXT #TEXT MARK *#SCR-TRAN (#I1)
      END-NOREC
*
      RESET #SELECTED #TEXT #APFR-INDEX #APFR-TABLE (*)
        #APFR-SELECT #I5 #CNT #CNT-OUT-DEPOSITS
      REPEAT
        ADD +1                      TO #I5
        ADD +1                      TO #CNT
        IF DP-V.AMOUNT (#I5) NE 0
            AND DP-V.APPLIED-DATE (#I5) EQ 0
            AND ((DP-V.TYPE (#I5) NE 'K' AND #CASH)              /* PM4
            OR (DP-V.TYPE (#I5) = 'K' AND #CREDIT))             /* PM4
          ADD +1                    TO #CNT-OUT-DEPOSITS
          ADD +1                    TO #APFR-INDEX
          MOVE #CNT                 TO #APFR-DEPOSIT (#APFR-INDEX)
          MOVE DP-V.AMOUNT (#I5)    TO #APFR-AMOUNT (#APFR-INDEX)
          MOVE DP-V.SENT-BY (#I5)   TO #APFR-SENT-BY (#APFR-INDEX)
          MOVE DP-V.TYPE (#I5)      TO #APFR-TYPE (#APFR-INDEX)
          MOVE DP-V.CHECK-NUM (#I5) TO #APFR-CHECK-NUM (#APFR-INDEX)
          CALLNAT 'GDATESXX'
            DP-V.DATE (#I5)
            #FROM-DATE
            #DATE-CHECK
            #ACTION-CODE-C
          MOVE #DATE-CHECK          TO #APFR-DATE (#APFR-INDEX)
        END-IF
*
        IF DP-V.AMOUNT (#I5) = 0 OR #APFR-INDEX = 10 OR #I5 = 99
          IF #CNT-OUT-DEPOSITS EQ 0       /* 0 outstanding deposits
            MOVE 'No Deposits Exist for this SSN' TO #TEXT
            REINPUT WITH TEXT #TEXT MARK *#SCR-TRAN (#I1)
          END-IF
*
          IF #CNT-OUT-DEPOSITS EQ 1             /* 1 outstanding deposit
            IF #APFR-AMOUNT (#APFR-INDEX) LT #SCR-AMOUNT (#I1)
              COMPRESS 'Transaction amount is greater than deposit'
                'amount.' INTO  #TEXT
              REINPUT WITH TEXT #TEXT MARK *#SCR-AMOUNT (#I1)
            ELSE
              MOVE #APFR-DEPOSIT (#APFR-INDEX) TO #APFR-SELECT
              PERFORM CHECK-FOR-MULTIPLE-APFR-TRANSACTIONS
              ESCAPE BOTTOM
            END-IF
          END-IF
*
          SET WINDOW 'APFR-SELECT'
          MOVE #SCR-SSN (#I1)    TO #SSN
          MOVE #SCR-AMOUNT (#I1) TO #CHECK-AMOUNT
          MOVE #CGA-SCR-COMMAND  TO #APFR-COMMAND
          INPUT TEXT #TEXT MARK *#APFR-SELECT USING MAP 'C2535MAM'
          RESET #TEXT #APFR-INDEX #APFR-TABLE (*)
          IF #APFR-SELECT NE 0
            IF DP-V.AMOUNT (#APFR-SELECT) LT #SCR-AMOUNT (#I1)
              COMPRESS 'Transaction amount is greater than deposit'
                'amount.' INTO  #TEXT
              REINPUT WITH TEXT #TEXT MARK *#APFR-SELECT
            END-IF
*
            PERFORM CHECK-FOR-MULTIPLE-APFR-TRANSACTIONS
          END-IF
          SET WINDOW OFF
*
          IF #APFR-COMMAND = '##'
            RESET #APFR-SELECT
            ESCAPE BOTTOM
          END-IF
        END-IF
*
        IF #APFR-SELECT NE 0
          ESCAPE BOTTOM
        END-IF
*
        IF DP-V.AMOUNT (#I5) = 0 OR #I5 = 99
          MOVE 'No selections made - please try again' TO #TEXT
          RESET #I5 #CNT
        END-IF
      END-REPEAT
*
      MOVE #APFR-SELECT TO #SCR-APFR-NUM (#I1)
      MOVE DP-V.SENT-BY (#APFR-SELECT)   TO #SCR-SENT-BY (#I1)
      MOVE DP-V.TYPE (#APFR-SELECT)      TO #SCR-TYPE (#I1)
      MOVE DP-V.CHECK-NUM (#APFR-SELECT) TO #SCR-CHECK-NUM (#I1)
      MOVE DP-V.SPLIT (#APFR-SELECT)     TO #SCR-SPLIT (#I1)
    END-FIND
  END-IF
END-FOR
*
FOR #I1 1 TO 15              /* done seperately - check for name/addr
  IF #SCR-ADDL-INFO (#I1) NE ' '
    MOVE #SCR-NAME (#I1)     TO #SINGLE-NAME
    MOVE #SCR-ADDR-1 (#I1)   TO #SINGLE-ADDR-1
    MOVE #SCR-ADDR-2 (#I1)   TO #SINGLE-ADDR-2
    MOVE #SCR-CITY (#I1)     TO #SINGLE-CITY
    MOVE #SCR-STATE (#I1)    TO #SINGLE-STATE
    MOVE #SCR-ZIP-CODE (#I1) TO #SINGLE-ZIP-CODE
    SET WINDOW 'POP-UP-BOX'
    RESET #TEXT
    REPEAT
      INPUT TEXT #TEXT MARK *#SINGLE-NAME USING MAP 'C2531MAM'
      IF   #SCR-NAME (#I1)     = #SINGLE-NAME
          AND #SCR-ADDR-1 (#I1)   = #SINGLE-ADDR-1
          AND #SCR-ADDR-2 (#I1)   = #SINGLE-ADDR-2
          AND #SCR-CITY (#I1)     = #SINGLE-CITY
          AND #SCR-STATE (#I1)    = #SINGLE-STATE
          AND #SCR-ZIP-CODE (#I1) = #SINGLE-ZIP-CODE
        ESCAPE BOTTOM
      ELSE
        MOVE 'Review changes and press enter' TO #TEXT
        MOVE #SINGLE-NAME     TO #SCR-NAME (#I1)
        MOVE #SINGLE-ADDR-1   TO #SCR-ADDR-1 (#I1)
        MOVE #SINGLE-ADDR-2   TO #SCR-ADDR-2 (#I1)
        MOVE #SINGLE-CITY     TO #SCR-CITY (#I1)
        MOVE #SINGLE-STATE    TO #SCR-STATE (#I1)
        MOVE #SINGLE-ZIP-CODE TO #SCR-ZIP-CODE (#I1)
      END-IF
    END-REPEAT
    SET WINDOW OFF
  END-IF
END-FOR
*
IF #SCR-TOTAL NE 0
    AND #CHECK-TRANSACTION = 'APFR'
  MOVE '-' TO #SCR-TOTAL-SIGN
ELSE
  RESET #SCR-TOTAL-SIGN
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CHECK-FOR-MULTIPLE-APFR-TRANSACTIONS
************************************************************************
*
FOR #I4 1 TO #I1                                 /* Check Screen First
  IF #I4 = #I1
    ESCAPE BOTTOM
  END-IF
*
  IF   #SCR-SSN (#I4)      = #SCR-SSN (#I1)
      AND #SCR-TRAN (#I4)     = 'APFR'
      AND #SCR-APFR-NUM (#I4) =  #APFR-SELECT
    MOVE 'Deposit already selected for reduction in this batch' TO #TEXT
    REINPUT WITH TEXT #TEXT MARK *#APFR-SELECT
  END-IF
END-FOR
*
FIND (1) CK-V WITH CK-V.SSN = #REBUILD-TO-USE    /* Check rebuild file
  IF NO RECORDS FOUND
    ESCAPE BOTTOM
  END-NOREC
*
  FOR #I4 1 TO #I3
    IF   CK-V.REBUILD-SSN (#I4)  = #SCR-SSN (#I1)
        AND CK-V.REBUILD-TRAN (#I4) = 'APFR'
        AND CK-V.APFR-NUM (#I4)     =  #APFR-SELECT
      MOVE 'Deposit already selected for reduction in this batch'
        TO #TEXT
      REINPUT WITH TEXT #TEXT MARK *#APFR-SELECT
    END-IF
  END-FOR
END-FIND
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CHECK-FOR-SCREEN-CHANGES
************************************************************************
*
MOVE TRUE TO #NO-CHANGES
*
FOR #I1 1 TO 15
  IF  #SCR-SSN (#I1)       NE #HLD-SSN (#I1)
      OR #SCR-DATE (#I1)      NE #HLD-DATE (#I1)
      OR #SCR-TRAN (#I1)      NE #HLD-TRAN (#I1)
      OR #SCR-AMOUNT (#I1)    NE #HLD-AMOUNT (#I1)
      OR #SCR-SENT-BY (#I1)   NE #HLD-SENT-BY (#I1)
      OR #SCR-TYPE (#I1)      NE #HLD-TYPE (#I1)
      OR #SCR-CHECK-NUM (#I1) NE #HLD-CHECK-NUM (#I1)
      OR #SCR-SPLIT (#I1)     NE #HLD-SPLIT (#I1)
      OR #SCR-ADDL-INFO (#I1) NE #HLD-ADDL-INFO (#I1)
      OR #SCR-NAME (#I1)      NE #HLD-NAME (#I1)
      OR #SCR-CITY (#I1)      NE #HLD-CITY (#I1)
      OR #SCR-ADDR-1 (#I1)    NE #HLD-ADDR-1 (#I1)
      OR #SCR-ADDR-2 (#I1)    NE #HLD-ADDR-2 (#I1)
      OR #SCR-STATE (#I1)     NE #HLD-STATE (#I1)
      OR #SCR-ZIP-CODE (#I1)  NE #HLD-ZIP-CODE (#I1)
      OR #SCR-CC-NUM (#I1)    NE #HLD-CC-NUM (#I1)            /* PM4
      OR #SCR-CC-EXP-DT (#I1) NE #HLD-CC-EXP-DT (#I1)         /* PM4
      OR #SCR-TOTAL           NE #HLD-TOTAL
    RESET #NO-CHANGES
    MOVE #SCR-SSN (#I1)       TO #HLD-SSN (#I1)
    MOVE #SCR-DATE (#I1)      TO #HLD-DATE (#I1)
    MOVE #SCR-TRAN (#I1)      TO #HLD-TRAN (#I1)
    MOVE #SCR-AMOUNT (#I1)    TO #HLD-AMOUNT (#I1)
    MOVE #SCR-SENT-BY (#I1)   TO #HLD-SENT-BY (#I1)
    MOVE #SCR-TYPE (#I1)      TO #HLD-TYPE (#I1)
    MOVE #SCR-CHECK-NUM (#I1) TO #HLD-CHECK-NUM (#I1)
    MOVE #SCR-SPLIT (#I1)     TO #HLD-SPLIT (#I1)
    MOVE #SCR-ADDL-INFO (#I1) TO #HLD-ADDL-INFO (#I1)
    MOVE #SCR-NAME (#I1)      TO #HLD-NAME (#I1)
    MOVE #SCR-CITY (#I1)      TO #HLD-CITY (#I1)
    MOVE #SCR-ADDR-1 (#I1)    TO #HLD-ADDR-1 (#I1)
    MOVE #SCR-ADDR-2 (#I1)    TO #HLD-ADDR-2 (#I1)
    MOVE #SCR-STATE (#I1)     TO #HLD-STATE (#I1)
    MOVE #SCR-ZIP-CODE (#I1)  TO #HLD-ZIP-CODE (#I1)
    MOVE #SCR-APFR-NUM (#I1)  TO #HLD-APFR-NUM (#I1)
    MOVE #SCR-CC-NUM (#I1)    TO #HLD-CC-NUM (#I1)         /* PM4
    MOVE #SCR-CC-EXP-DT (#I1) TO #HLD-CC-EXP-DT (#I1)      /* PM4
    MOVE #SCR-TOTAL           TO #HLD-TOTAL
  END-IF
END-FOR
*
IF #APFR-COMMAND = '##'
  RESET #NO-CHANGES
END-IF
*
RESET #SCR-ADDL-INFO (*) #HLD-ADDL-INFO (*)
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE MOVE-SCREEN-TO-REBUILD-FILE
************************************************************************
*
RESET #ISN #REBUILD-FOUND
FIND (1) AD-V WITH AD-V.SSN = #REBUILD-TO-USE
  IF NO RECORDS FOUND
    ESCAPE BOTTOM
  END-NOREC
*
  MOVE *ISN TO #ISN
  MOVE TRUE TO #REBUILD-FOUND
END-FIND
*
IF #REBUILD-FOUND
  GET AD-V #ISN
END-IF
*
IF #REBUILD-BATCH            /* reset old file information
  COMPUTE #I1 = #I3 + 1
  COMPUTE #I5 = #I1 + 14
  IF #I5 GT 99
    MOVE 99 TO #I5
  END-IF
  FOR #I1 #I1 TO #I5
    RESET AD-V.REBUILD-SSN (#I1) AD-V.REBUILD-TRAN (#I1)
      AD-V.AMOUNT (#I1) AD-V.DATE (#I1) AD-V.SENT-BY (#I1)
      AD-V.TYPE (#I1) AD-V.CHECK-NUM (#I1) AD-V.SPLIT (#I1)
      AD-V.NAME (#I1) AD-V.ADDR-1 (#I1) AD-V.ADDR-2 (#I1)
      AD-V.CITY (#I1) AD-V.STATE (#I1) AD-V.ZIP-CODE (#I1)
      AD-V.REBUILD-CLERK (#I1) AD-V.APPLIED-DATE (#I1)
      AD-V.APPLIED-CN (#I1) AD-V.APFR-NUM (#I1)
      AD-V.CC-NUM (#I1) AD-V.CC-EXP-DT (#I1)                 /* PM4
  END-FOR
END-IF
*
FOR #I1 1 TO 15
  IF #SCR-AMOUNT (#I1) = 0
    ESCAPE TOP
  END-IF
*
  ADD +1 TO #I3
*
  MOVE #SCR-SSN (#I1)       TO AD-V.REBUILD-SSN (#I3)
  MOVE #SCR-TRAN (#I1)      TO AD-V.REBUILD-TRAN (#I3)
  MOVE #SCR-AMOUNT (#I1)    TO AD-V.AMOUNT (#I3)
  MOVE #SCR-SENT-BY (#I1)   TO AD-V.SENT-BY (#I3)
  MOVE #SCR-TYPE (#I1)      TO AD-V.TYPE (#I3)
  MOVE #SCR-CHECK-NUM (#I1) TO AD-V.CHECK-NUM (#I3)
  MOVE #SCR-SPLIT (#I1)     TO AD-V.SPLIT (#I3)
  MOVE #SCR-NAME (#I1)      TO AD-V.NAME (#I3)
  MOVE #SCR-ADDR-1 (#I1)    TO AD-V.ADDR-1 (#I3)
  MOVE #SCR-ADDR-2 (#I1)    TO AD-V.ADDR-2 (#I3)
  MOVE #SCR-CITY (#I1)      TO AD-V.CITY (#I3)
  MOVE #SCR-STATE (#I1)     TO AD-V.STATE (#I3)
  MOVE #SCR-ZIP-CODE (#I1)  TO AD-V.ZIP-CODE (#I3)
  MOVE #SCR-CC-NUM (#I1)    TO AD-V.CC-NUM (#I3)                 /* PM4
  MOVE #SCR-CC-EXP-DT (#I1) TO AD-V.CC-EXP-DT (#I3)              /* PM4
  MOVE #SCR-APFR-NUM (#I1)  TO AD-V.APFR-NUM (#I3)
  MOVE #CGA-CLERK           TO AD-V.REBUILD-CLERK (#I3)
  CALLNAT 'GDATESXX'
    #SCR-DATE (#I1)
    #FROM-DATE
    #DATE-CHECK
    #ACTION-CODE-D
  MOVE #DATE-CHECK          TO AD-V.DATE   (#I3)
  RESET AD-V.APPLIED-DATE (#I3) AD-V.APPLIED-CN (#I3)
END-FOR
*
IF #REBUILD-FOUND
  UPDATE (0860)
ELSE
  MOVE #REBUILD-TO-USE TO SSN
  STORE AD-V
END-IF
*
END TRANSACTION
*
MOVE (AD=U) TO #SCR-CV (*)
IF #I3 + 15 GT 99
  COMPUTE #I4 = 99 - #I3 + 1
  FOR #I4 #I4 TO 15
    MOVE (AD=P) TO #SCR-CV (#I4)
  END-FOR
END-IF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CHECK-TOTAL
************************************************************************
*
RESET #BATCH-TOTAL #TEXT
FIND (1) AD-V WITH AD-V.SSN = #REBUILD-TO-USE
  IF NO RECORDS FOUND
    ESCAPE BOTTOM
  END-NOREC
*
  FOR #I1 1 TO 99
    IF AD-V.AMOUNT (#I1) = 0
      ESCAPE TOP
    ELSE
      ADD AD-V.AMOUNT (#I1) TO #BATCH-TOTAL
    END-IF
  END-FOR
END-FIND
*
SET WINDOW 'BATCH-TOTALS-BOX'
IF #BATCH-TOTAL = #SCR-TOTAL
  INPUT TEXT #TEXT MARK *#CGA-SCR-COMMAND USING MAP 'C2533MAM'
  PERFORM CHECK-COMMAND
ELSE
  INPUT TEXT #TEXT MARK *#SCR-TOTAL USING MAP 'C2534MAM'
  PERFORM CHECK-COMMAND
  IF #BATCH-TOTAL NE #SCR-TOTAL
    MOVE 'This batch does not balance. Please try again.' TO #TEXT
    REINPUT WITH TEXT #TEXT MARK *#SCR-TOTAL
  END-IF
  PERFORM CHECK-TOTAL
END-IF
SET WINDOW OFF
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CHECK-FOR-ADDL-INFORMATION
************************************************************************
*
FOR #I1 1 TO 15
  IF #SCR-NAME (#I1)      NE ' '
      OR #SCR-ADDR-1 (#I1)   NE ' '
      OR #SCR-ADDR-2 (#I1)   NE ' '
      OR #SCR-CITY (#I1)     NE ' '
      OR #SCR-STATE (#I1)    NE ' '
      OR #SCR-ZIP-CODE (#I1) NE 0
    MOVE '(M)' TO #SCR-MORE (#I1)
  ELSE
    RESET #SCR-MORE (#I1)
  END-IF
END-FOR
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE APPLY-DEPOSITS
************************************************************************
*
FIND (1) AD-V WITH AD-V.SSN = #REBUILD-TO-USE
  IF NO RECORDS FOUND
    ESCAPE BOTTOM
  END-NOREC
*
  FOR #I1 1 TO 99
    IF AD-V.AMOUNT (#I1) = 0
      ESCAPE BOTTOM
    END-IF
*
    DECIDE FOR FIRST CONDITION
      WHEN AD-V.REBUILD-TRAN (#I1) = 'APFP'
        PERFORM APPLY-APFP
      WHEN AD-V.REBUILD-TRAN (#I1) = 'APFR'
        PERFORM APPLY-APFR
      WHEN NONE
        IGNORE
    END-DECIDE
  END-FOR
END-FIND
*
FIND (1) AD-V WITH AD-V.SSN = #REBUILD-TO-USE   /* compress deposit file
  IF NO RECORDS FOUND
    ESCAPE BOTTOM
  END-NOREC
*
  FOR #I1 1 TO 99
    IF AD-V.AMOUNT (#I1) = 0
      ESCAPE BOTTOM
    END-IF
*
    FIND (1) DP-V WITH DP-V.SSN = AD-V.REBUILD-SSN (#I1)
      IF NO RECORDS FOUND
        ESCAPE BOTTOM
      END-NOREC
*
      RESET #NUM-O
      FOR #I2 1 TO 99
        IF DP-V.AMOUNT (#I2) NE 0
          ADD +1 TO #NUM-O
          IF #I2 NE #NUM-O
            MOVE DP-V.AMOUNT (#I2)        TO DP-V.AMOUNT (#NUM-O)
            MOVE DP-V.DATE   (#I2)        TO DP-V.DATE (#NUM-O)
            MOVE DP-V.SENT-BY (#I2)       TO DP-V.SENT-BY (#NUM-O)
            MOVE DP-V.TYPE (#I2)          TO DP-V.TYPE (#NUM-O)
            MOVE DP-V.CHECK-NUM (#I2)     TO DP-V.CHECK-NUM (#NUM-O)
            MOVE DP-V.SPLIT (#I2)         TO DP-V.SPLIT (#NUM-O)
            MOVE DP-V.NAME (#I2)          TO DP-V.NAME (#NUM-O)
            MOVE DP-V.ADDR-1 (#I2)        TO DP-V.ADDR-1 (#NUM-O)
            MOVE DP-V.ADDR-2 (#I2)        TO DP-V.ADDR-2 (#NUM-O)
            MOVE DP-V.CITY (#I2)          TO DP-V.CITY (#NUM-O)
            MOVE DP-V.STATE (#I2)         TO DP-V.STATE (#NUM-O)
            MOVE DP-V.ZIP-CODE (#I2)      TO DP-V.ZIP-CODE (#NUM-O)
            MOVE DP-V.CC-NUM (#I2)        TO DP-V.CC-NUM (#NUM-O)        /* PM4
            MOVE DP-V.CC-EXP-DT (#I2)     TO DP-V.CC-EXP-DT (#NUM-O)     /* PM4
            MOVE DP-V.APFR-NUM (#I2)      TO DP-V.APFR-NUM (#NUM-O)
            MOVE DP-V.REBUILD-SSN (#I2)   TO DP-V.REBUILD-SSN (#NUM-O)
            MOVE DP-V.REBUILD-CLERK (#I2) TO DP-V.REBUILD-CLERK (#NUM-O)
            MOVE DP-V.REBUILD-TRAN (#I2)  TO DP-V.REBUILD-TRAN (#NUM-O)
            MOVE DP-V.APPLIED-DATE (#I2)  TO DP-V.APPLIED-DATE (#NUM-O)
            MOVE DP-V.APPLIED-CN (#I2)    TO DP-V.APPLIED-CN (#NUM-O)
*
            RESET DP-V.AMOUNT (#I2) DP-V.DATE (#I2) DP-V.SENT-BY (#I2)
              DP-V.TYPE (#I2) DP-V.CHECK-NUM (#I2) DP-V.SPLIT (#I2)
              DP-V.NAME (#I2) DP-V.ADDR-1 (#I2) DP-V.ADDR-2 (#I2)
              DP-V.CITY (#I2) DP-V.STATE (#I2) DP-V.ZIP-CODE (#I2)
              DP-V.APFR-NUM (#I2) DP-V.REBUILD-SSN (#I2)
              DP-V.REBUILD-CLERK (#I2) DP-V.REBUILD-TRAN (#I2)
              DP-V.APPLIED-DATE (#I2) DP-V.APPLIED-CN (#I2)
              DP-V.CC-NUM (#I2) DP-V.CC-EXP-DT (#I2)                /* PM4
          END-IF
        END-IF
      END-FOR
*
      IF #NUM-O = 0
        DELETE (1023)
      ELSE
        UPDATE (1023)
      END-IF
    END-FIND
  END-FOR
*
  DELETE (1013)
END-FIND
*
END TRANSACTION
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE APPLY-APFP
************************************************************************
*
FIND (1) DP-V WITH DP-V.SSN = AD-V.REBUILD-SSN (#I1)
  IF NO RECORDS FOUND
    RESET #ISN
    ESCAPE BOTTOM
  END-NOREC
*
  MOVE *ISN TO #ISN
END-FIND
*
MOVE 1 TO #I2
IF #ISN NE 0
  GET DP-V #ISN
  FOR #I2 #I2 TO 99
    IF DP-V.AMOUNT (#I2) = 0
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-IF
*
MOVE AD-V.REBUILD-SSN (#I1)  TO DP-V.SSN
MOVE AD-V.AMOUNT (#I1)       TO DP-V.AMOUNT (#I2)
MOVE AD-V.DATE   (#I1)       TO DP-V.DATE (#I2)
MOVE AD-V.SENT-BY (#I1)      TO DP-V.SENT-BY (#I2)
MOVE AD-V.TYPE (#I1)         TO DP-V.TYPE (#I2)
MOVE AD-V.CHECK-NUM (#I1)    TO DP-V.CHECK-NUM (#I2)
MOVE AD-V.SPLIT (#I1)        TO DP-V.SPLIT (#I2)
MOVE AD-V.NAME (#I1)         TO DP-V.NAME (#I2)
MOVE AD-V.ADDR-1 (#I1)       TO DP-V.ADDR-1 (#I2)
MOVE AD-V.ADDR-2 (#I1)       TO DP-V.ADDR-2 (#I2)
MOVE AD-V.CITY (#I1)         TO DP-V.CITY (#I2)
MOVE AD-V.STATE (#I1)        TO DP-V.STATE (#I2)
MOVE AD-V.ZIP-CODE (#I1)     TO DP-V.ZIP-CODE (#I2)
MOVE AD-V.CC-NUM (#I1)       TO DP-V.CC-NUM (#I2)              /* PM4
MOVE AD-V.CC-EXP-DT (#I1)    TO DP-V.CC-EXP-DT (#I2)           /* PM4
RESET DP-V.REBUILD-CLERK (#I2) DP-V.REBUILD-TRAN (#I2)
  DP-V.APPLIED-DATE (#I2)  DP-V.APPLIED-CN (#I2) DP-V.APFR-NUM (#I2)
*
IF #ISN = 0
  STORE DP-V
ELSE
  UPDATE (1096)
END-IF
*
PERFORM CREATE-ACCOUNTING-TRANSACTION
*
END TRANSACTION
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE APPLY-APFR
************************************************************************
*
FIND (1) DP-V WITH DP-V.SSN = AD-V.REBUILD-SSN (#I1)
  IF NO RECORDS FOUND
    WRITE 'APFR transaction but no record found'
  END-NOREC
*
  MOVE AD-V.APFR-NUM (#I1) TO #I2
*
  IF AD-V.AMOUNT (#I1) LT DP-V.AMOUNT (#I2)
    SUBTRACT AD-V.AMOUNT (#I1) FROM DP-V.AMOUNT (#I2)
  ELSE
    RESET DP-V.AMOUNT (#I2) DP-V.DATE (#I2) DP-V.SENT-BY (#I2)
      DP-V.TYPE (#I2) DP-V.CHECK-NUM (#I2) DP-V.SPLIT (#I2)
      DP-V.NAME (#I2) DP-V.ADDR-1 (#I2) DP-V.ADDR-2 (#I2)
      DP-V.CITY (#I2) DP-V.STATE (#I2) DP-V.ZIP-CODE (#I2)
      DP-V.REBUILD-CLERK (#I2) DP-V.REBUILD-TRAN (#I2)
      DP-V.APPLIED-DATE (#I2)  DP-V.APPLIED-CN (#I2)
      DP-V.APFR-NUM (#I2)
      DP-V.CC-NUM (#I2) DP-V.CC-EXP-DT (#I2)                  /* PM4
  END-IF
*
  UPDATE (1138)
END-FIND
*
PERFORM CREATE-ACCOUNTING-TRANSACTION
*
END TRANSACTION
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CREATE-ACCOUNTING-TRANSACTION
************************************************************************
*
CALLNAT 'C2521SAM'
  AD-V.REBUILD-SSN (#I1)
  AD-V.REBUILD-TRAN (#I1)
  AD-V.AMOUNT (#I1)
  #CGA-CLERK
  AD-V.SENT-BY (#I1)
  AD-V.TYPE (#I1)
  AD-V.CHECK-NUM (#I1)
  #CMBX
  #DATE-OF-UPDATE
  #TIME-OF-UPDATE
  #CASH-CODE                  /* DW6
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CHECK-CREDIT-CASH                              /* PM4
************************************************************************
*
* SET WINDOW 'CREDIT-CARD-OR-CASH'                                           /* vt1 \/
*   REPEAT
*     INPUT WITH TEXT 'Please select a deposit batch type'
*     MARK *#DEPOSIT-IND (1) USING MAP 'DEPTYPE'                   /* PM7
* *
*     IF *PF-KEY = 'ENTR'
*       FOR #DEPOSIT-I 1 TO 2                                      /* PM7
*         IF #DEPOSIT-IND (#DEPOSIT-I) NE ' '                      /* PM7
*           COMPUTE #I6 = #DEPOSIT-I + 1                           /* PM7
*           ESCAPE BOTTOM                                          /* PM7
*         END-IF                                                   /* PM7
*       END-FOR                                                    /* PM7
* *
*       IF #I6 = 0                                                 /* PM7
*        #I6 := *CURS-LINE
*       END-IF                                                     /* PM7
* *
*       IF NOT #I6 = 2 OR = 3
*         ESCAPE TOP
*       END-IF
*
*      RESET #CASH #CREDIT
*      IF #I6 = 2
reset #cash                                                                  /* vt1 /\
#CASH   := TRUE
MOVE '$' TO #CASH-CODE            /* DW6
*       ELSE                                                                /* vt1 \/
*         #CREDIT := TRUE
*         MOVE 'C' TO #CASH-CODE            /* DW6
*       END-IF
* *
*       ESCAPE BOTTOM
*     END-IF
*   END-REPEAT
* SET WINDOW OFF                                                            /* vt1 /\
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE MASK-CREDIT-CARD-NUMBERS                       /* PM4
************************************************************************
*
FOR #I1 1 TO 15
  IF #SCR-CC-NUM  (#I1) NE ' '
    MOVE EDITED #SCR-CC-NUM (#I1) (EM=************XXXX) TO #SCR-CC-NUM (#I1)
  END-IF
END-FOR
*
END-SUBROUTINE
*
END
