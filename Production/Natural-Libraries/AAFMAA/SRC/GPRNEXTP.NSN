* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
**************************************************************************
* SUBPROGRAM-ID: GPRNEXTP
* DESCRIPTION: Common module to validate fields for adding and updating
*              external policies.
*              Called by Member Center (can be extended to be used by
*              Admin System (UNIX) and CRM.
*              Gen-Table Primary Code: ERRD
*              Gen-Table Secondary Code: 400-499 Edits for External policies
**************************************************************************
*        MODIFICATION LOG
**************************************************************************
* USER   DATE      TAG  REASON
* YAK  07-13-2011       Initial Creation
**************************************************************************
DEFINE DATA
PARAMETER USING GPRAEXTP
PARAMETER 1 #ERROR-CODE(A3/*)
LOCAL
1 #I                  (I2)
1 #AMOUNT             (P8)
1 #DATN               (N8)
1 REDEFINE #DATN
  2 #DATN-YEAR        (N4)
1 #REMAINDER          (P5.2)
1 #POL-DATE           (N8)
1 #POL-AMOUNT         (P7)
1 #POL-NAME           (A19)
1 #ERROR-FLAG         (L)
1 #PARM-COMMAND       (A2)
1 #AGE                (P3)
1 #CADET-FLAG         (A1)
1 #P-DX-PARMS
  2 #PDX-DATE-OF-BIRTH         (N8)
  2 #PDX-DATE-RETIRED          (N8)
  2 #PDX-MILITARY-STATUS       (A1)
  2 #PDX-MILITARY-SERVICE      (A3)
  2 #PDX-MILITARY-RANK         (A3)
  2 #PDX-ACTIVE-DUTY-BASE-DATE (N8)
1 #PDX-DISABILITY-PCT          (P1.2)
END-DEFINE
*
#DATN := *DATN
RESET #I
*
DECIDE FOR EVERY CONDITION
  WHEN POL-NAME = ' ' AND (POL-AMOUNT NE 0 OR POL-TYPE NE ' ')
    #I := #I + 1
    #ERROR-CODE(#I) := '400'
* NO COMPANY NAME, BUT AMOUNT OR TYPE PRESENT
  WHEN POL-NAME > ' ' AND POL-TYPE = ' '
    #I := #I + 1
    #ERROR-CODE(#I) := '401'
* COMPANY NAME PRESENT AND NO TYPE
  WHEN POL-NAME = 'NSLI'
    #I := #I + 1
    #AMOUNT := POL-AMOUNT
    IF   ((POL-TYPE = 'ML65') AND (DATE-OF-BIRTH + 650000) <= #DATN) OR
        ((POL-TYPE = 'ML70') AND (DATE-OF-BIRTH + 700000) <= #DATN)
      #AMOUNT := POL-AMOUNT * 2
    END-IF
    IF POL-TYPE <> 'PUA' AND #AMOUNT > 10000
      #ERROR-CODE(#I) := '402'
* ORIGINAL NSLI AMOUNT CANNOT EXCEED $10,000
    END-IF
  WHEN POL-NAME = 'AFRBA' OR = 'AFRABA' OR = 'AFBA'
     IF NOT (POL-TYPE = 'BASC' OR = 'SUP1' OR = 'SUP2'
      OR = 'SUP3' OR = 'SUP4' OR = 'SUP5' OR = 'OL'
      OR = 'UL' OR = 'TERM' OR = 'GPTM')
    #I := #I + 1
    #ERROR-CODE(#I) := '403'
* INVALID PLAN TYPE
     END-IF
  WHEN POL-NAME = 'SGLI' OR POL-NAME = 'VGLI'
    #AMOUNT := POL-AMOUNT
    DIVIDE 10000 INTO #AMOUNT REMAINDER #REMAINDER
    IF #REMAINDER NE 0
      #I := #I + 1
      #ERROR-CODE(#I) := '404'
* AMOUNT MUST BE A MULTIPLE OF $10,000
    END-IF
  WHEN POL-NAME = 'SGLI' OR POL-NAME = 'VGLI'
    PERFORM VALIDATE-SGLI-VGLI
  WHEN POL-NAME = 'AFBA' AND POL-DATE <> 0 AND
      POL-DATE < 19890601
    #I := #I + 1
    #ERROR-CODE(#I) := '410'
* 'MUST HAVE ISSUE DATE > 06/89 OR USE AFRBA'
  WHEN (POL-NAME = 'AFRBA' OR POL-NAME = 'AFRABA')
      AND (POL-DATE >= 19890601)
    #I := #I + 1
    #ERROR-CODE(#I) := '411'
* 'MUST HAVE ISSUE DATE < 06/89 OR USE AFBA'
*
  WHEN POL-NAME = 'AMAA ' OR = 'AAFMAA'
    #I := #I + 1
    #ERROR-CODE(#I) := '412'
* 'CANNOT ADD AMAA OR AAFMAA POLICIES'
  WHEN POL-NAME = 'AFRBA' OR POL-NAME = 'VGLI' OR POL-NAME = 'SGLI'
      OR = 'AFRABA' OR = 'MBA' OR = 'AFBA'
    PERFORM CALCULATE-POL-DATE
    IF #ERROR-FLAG
* 'INVALID PLAN OR AMOUNT FOR COMPANY NAME'
      #I := #I + 1
      #ERROR-CODE(#I) := '413'
    END-IF
  WHEN POL-NAME = 'OBA' OR POL-NAME = 'USBA' OR POL-NAME = 'AUSA'
      OR POL-NAME = 'AFA'
    PERFORM CALCULATE-POL-AMOUNT
    IF #ERROR-FLAG
      #I := #I + 1
      #ERROR-CODE(#I) := '413'
*  'INVALID PLAN OR AMOUNT FOR COMPANY NAME'
    END-IF
  WHEN NONE
    IGNORE
END-DECIDE
IF #I <> 0
  RESIZE ARRAY #ERROR-CODE TO (*:#I)
END-IF   
*
************************************
DEFINE SUBROUTINE CALCULATE-POL-DATE
************************************
*
#AGE := #DATN-YEAR - DOB-YEAR
#PDX-MILITARY-STATUS := MILITARY-STATUS
#PDX-DATE-OF-BIRTH   := DATE-OF-BIRTH
#PDX-MILITARY-RANK   := RANK
#PDX-DISABILITY-PCT  := DISABILITY-PCT
#ERROR-FLAG          := FALSE
*
IF RANK = 'CDT'
  MOVE 'Y' TO #CADET-FLAG
ELSE
  MOVE 'N' TO #CADET-FLAG
END-IF
*
ASSIGN #PDX-MILITARY-SERVICE := MILITARY-SERVICE
ASSIGN #PDX-DATE-RETIRED     := DATE-RETIRED
*
IF ACTIVE-DUTY-BASE-DATE = 0
  #PDX-ACTIVE-DUTY-BASE-DATE := BASE-PAY-EF-DATE
ELSE
  #PDX-ACTIVE-DUTY-BASE-DATE := ACTIVE-DUTY-BASE-DATE
END-IF
#PDX-MILITARY-SERVICE        := MILITARY-SERVICE
#PDX-DATE-RETIRED            := DATE-RETIRED
*
IF ACTIVE-DUTY-BASE-DATE = 0
  #PDX-ACTIVE-DUTY-BASE-DATE := BASE-PAY-EF-DATE
ELSE
  #PDX-ACTIVE-DUTY-BASE-DATE := ACTIVE-DUTY-BASE-DATE
END-IF
IF (POL-NAME = 'SGLI' OR POL-NAME = 'VGLI')
    AND (CHIEF-OF-STAFF-IND = 'X')        /* RECALLED TO ACT DUTY
  MOVE 'A' TO #PDX-MILITARY-STATUS
END-IF
#POL-AMOUNT := POL-AMOUNT
#POL-NAME   := POL-NAME
#POL-DATE   := POL-DATE
CALLNAT 'E9010SDX' #PARM-COMMAND #AGE #P-DX-PARMS
  #POL-NAME POL-TYPE #POL-AMOUNT #POL-DATE POL-REMARKS
  #ERROR-FLAG #PDX-DISABILITY-PCT DEATH-SERVICE-CON
IF POL-NAME = 'SGLI' OR = 'VGLI'
  POL-DATE := #POL-DATE
END-IF
END-SUBROUTINE
*
**************************************
DEFINE SUBROUTINE CALCULATE-POL-AMOUNT
**************************************
*
#AGE := #DATN-YEAR - DOB-YEAR
#PDX-MILITARY-STATUS  := MILITARY-STATUS
#PDX-DATE-OF-BIRTH    := DATE-OF-BIRTH
#PDX-MILITARY-RANK    := RANK
#PDX-DISABILITY-PCT   := DISABILITY-PCT
#ERROR-FLAG := FALSE
*
IF RANK = 'CDT'
  MOVE 'Y' TO #CADET-FLAG
ELSE
  MOVE 'N' TO #CADET-FLAG
END-IF
*
#PDX-MILITARY-SERVICE := MILITARY-SERVICE
#PDX-DATE-RETIRED     := DATE-RETIRED
*
IF ACTIVE-DUTY-BASE-DATE = 0
  #PDX-ACTIVE-DUTY-BASE-DATE := BASE-PAY-EF-DATE
ELSE
  #PDX-ACTIVE-DUTY-BASE-DATE := ACTIVE-DUTY-BASE-DATE
END-IF
#POL-DATE := POL-DATE
#POL-NAME := POL-NAME
CALLNAT 'E9020SDX' #PARM-COMMAND #AGE #P-DX-PARMS
  #POL-NAME POL-TYPE #POL-AMOUNT #POL-DATE
  POL-REMARKS #ERROR-FLAG #CADET-FLAG
*
POL-AMOUNT := #POL-AMOUNT
*
END-SUBROUTINE
*
************************************
DEFINE SUBROUTINE VALIDATE-SGLI-VGLI
************************************
*
DECIDE FOR FIRST CONDITION
  WHEN (DATE-RETIRED >= 20050901 OR CHIEF-OF-STAFF-IND = 'X')  /* RECALLED TO ACTIVE DUTY
      AND POL-AMOUNT > 400000
    #I := #I + 1
    #ERROR-CODE(#I) := '405'
* 'AMOUNT CANNOT EXCEED $400,000'
  WHEN (DATE-RETIRED >= 20010401 AND DATE-RETIRED < 20050901 OR CHIEF-OF-STAFF-IND = 'X')  /* RECALLED TO ACTIVE DUTY
      AND POL-AMOUNT > 250000
    #I := #I + 1
    #ERROR-CODE(#I) := '406'
* 'AMOUNT CANNOT EXCEED $250,000'
  WHEN DATE-RETIRED >= 19921201 AND DATE-RETIRED < 20010401 AND POL-AMOUNT > 200000
    #I := #I + 1
    #ERROR-CODE(#I) := '407'
* 'AMOUNT CANNOT EXCEED $200,000'
  WHEN DATE-RETIRED >= 19910405 AND DATE-RETIRED < 19921201 AND POL-AMOUNT > 100000
    #I := #I + 1
    #ERROR-CODE(#I) := '408'
* 'AMOUNT CANNOT EXCEED $100,000'
  WHEN DATE-RETIRED <> 0 AND DATE-RETIRED < 19910405 AND POL-AMOUNT > 50000
    #I := #I + 1
    #ERROR-CODE(#I) := '409'
* 'AMOUNT CANNOT EXCEED $50,000'
  WHEN NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END
