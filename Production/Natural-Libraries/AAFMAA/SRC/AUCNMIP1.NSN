* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCNMIP1'
*
* DESCRIPTION
*   XML Parser implementationfor file:
*   null
*   using PARSE XML statement and datastructure 'AUCAMI01'
*
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
LOCAL USING AUCAMI01
LOCAL USING PARSER-X
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
*
LOCAL
1 #LEN              (I4)
1 #PARSE-ERROR      (I4) CONST <-7>
*
END-DEFINE
*
RESET MilitaryInfo
ASSIGN #LEN := *LENGTH (#XML_INPUT)
IF #LEN <= 0
  MilitaryInfo.ErrorCode := #PARSE-ERROR
  MilitaryInfo.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNMIS1' #XML_OUTPUT MilitaryInfo
  ESCAPE ROUTINE
END-IF
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
MilitaryInfo.ErrorCode := #PARSE-ERROR
MilitaryInfo.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNMIS1' #XML_OUTPUT MilitaryInfo
END-SUBROUTINE
*
DEFINE SUBROUTINE CALLBACK
/*                ========
IF XML_PARSER_CONTENT_IS_EMPTY THEN
  IGNORE
ELSE
  #XML_VALUE := *TRIM (#XML_VALUE)
  MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
  PERFORM PARSE-DOCUMENT
END-IF
END-SUBROUTINE
*
CALLNAT 'AUCNMIM1' MilitaryInfo               /* Manage MilitaryInfo
CALLNAT 'AUCNMIS1' #XML_OUTPUT MilitaryInfo   /* Send back manage MilitaryInfo result
* ------------------------------------------------- CALL THE PARSER
* PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE #XML_VALUE
*
DEFINE PARSE-DOCUMENT
/*     ==============
DECIDE ON FIRST #XML_PATH
  VALUE 'MilitaryInfo//'
    IGNORE
  VALUE 'MilitaryInfo'
    RESET INITIAL MilitaryInfo
  VALUE 'MilitaryInfo/ActionType//'
    IGNORE
  VALUE 'MilitaryInfo/ActionType'
    IGNORE
  VALUE 'MilitaryInfo/ActionType/$'
    MilitaryInfo.ActionType := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/ErrorCode//'
    IGNORE
  VALUE 'MilitaryInfo/ErrorCode'
    IGNORE
  VALUE 'MilitaryInfo/ErrorCode/$'
    MilitaryInfo.ErrorCode := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/ErrorDescription//'
    IGNORE
  VALUE 'MilitaryInfo/ErrorDescription'
    IGNORE
  VALUE 'MilitaryInfo/ErrorDescription/$'
    MilitaryInfo.ErrorDescription := #XML_VALUE
  VALUE 'MilitaryInfo/ContactID//'
    IGNORE
  VALUE 'MilitaryInfo/ContactID'
    IGNORE
  VALUE 'MilitaryInfo/ContactID/$'
    MilitaryInfo.ContactID := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/CN//'
    IGNORE
  VALUE 'MilitaryInfo/CN'
    IGNORE
  VALUE 'MilitaryInfo/CN/$'
    MilitaryInfo.CN := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/LastUpdatedDate//'
    IGNORE
  VALUE 'MilitaryInfo/LastUpdatedDate'
    IGNORE
  VALUE 'MilitaryInfo/LastUpdatedDate/$'
    MilitaryInfo.LastUpdatedDate := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/LastUpdatedTime//'
    IGNORE
  VALUE 'MilitaryInfo/LastUpdatedTime'
    IGNORE
  VALUE 'MilitaryInfo/LastUpdatedTime/$'
    MilitaryInfo.LastUpdatedTime := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/SystemSource//'
    IGNORE
  VALUE 'MilitaryInfo/SystemSource'
    IGNORE
  VALUE 'MilitaryInfo/SystemSource/$'
    MilitaryInfo.SystemSource := #XML_VALUE
  VALUE 'MilitaryInfo/User//'
    IGNORE
  VALUE 'MilitaryInfo/User'
    IGNORE
  VALUE 'MilitaryInfo/User/$'
    MilitaryInfo.User := FUNCTION-WEB-USER(<#XML_VALUE>)(2)
  VALUE 'MilitaryInfo/MilitaryRankID//'
    IGNORE
  VALUE 'MilitaryInfo/MilitaryRankID'
    IGNORE
  VALUE 'MilitaryInfo/MilitaryRankID/$'
    MilitaryInfo.MilitaryRankID := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/MilitaryStatus//'
    IGNORE
  VALUE 'MilitaryInfo/MilitaryStatus'
    IGNORE
  VALUE 'MilitaryInfo/MilitaryStatus/$'
    MilitaryInfo.MilitaryStatus := #XML_VALUE
  VALUE 'MilitaryInfo/MilitaryBranch//'
    IGNORE
  VALUE 'MilitaryInfo/MilitaryBranch'
    IGNORE
  VALUE 'MilitaryInfo/MilitaryBranch/$'
    MilitaryInfo.MilitaryBranch := #XML_VALUE
  VALUE 'MilitaryInfo/DateOfRetirement//'
    IGNORE
  VALUE 'MilitaryInfo/DateOfRetirement'
    IGNORE
  VALUE 'MilitaryInfo/DateOfRetirement/$'
    MilitaryInfo.DateOfRetirement := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/CurrentPromotionDate//'
    IGNORE
  VALUE 'MilitaryInfo/CurrentPromotionDate'
    IGNORE
  VALUE 'MilitaryInfo/CurrentPromotionDate/$'
    MilitaryInfo.CurrentPromotionDate := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/PreviousPromotionDate//'
    IGNORE
  VALUE 'MilitaryInfo/PreviousPromotionDate'
    IGNORE
  VALUE 'MilitaryInfo/PreviousPromotionDate/$'
    MilitaryInfo.PreviousPromotionDate := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/PEBDate//'
    IGNORE
  VALUE 'MilitaryInfo/PEBDate'
    IGNORE
  VALUE 'MilitaryInfo/PEBDate/$'
    MilitaryInfo.PEBDate := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/BASDDate//'
    IGNORE
  VALUE 'MilitaryInfo/BASDDate'
    IGNORE
  VALUE 'MilitaryInfo/BASDDate/$'
    MilitaryInfo.BASDDate := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/DateInitEntryMilService//'
    IGNORE
  VALUE 'MilitaryInfo/DateInitEntryMilService'
    IGNORE
  VALUE 'MilitaryInfo/DateInitEntryMilService/$'
    MilitaryInfo.DateInitEntryMilService := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/RNGDate20YearLetter//'
    IGNORE
  VALUE 'MilitaryInfo/RNGDate20YearLetter'
    IGNORE
  VALUE 'MilitaryInfo/RNGDate20YearLetter/$'
    MilitaryInfo.RNGDate20YearLetter := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/RSVRetDate//'
    IGNORE
  VALUE 'MilitaryInfo/RSVRetDate'
    IGNORE
  VALUE 'MilitaryInfo/RSVRetDate/$'
    MilitaryInfo.RSVRetDate := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/RSVRetPoints//'
    IGNORE
  VALUE 'MilitaryInfo/RSVRetPoints'
    IGNORE
  VALUE 'MilitaryInfo/RSVRetPoints/$'
    MilitaryInfo.RSVRetPoints := VAL(#XML_VALUE)
  VALUE 'MilitaryInfo/RecalledToActiveDuty//'
    IGNORE
  VALUE 'MilitaryInfo/RecalledToActiveDuty'
    IGNORE
  VALUE 'MilitaryInfo/RecalledToActiveDuty/$'
    MilitaryInfo.RecalledToActiveDuty := #XML_VALUE
  VALUE 'MilitaryInfo/PayGrade//'
    IGNORE
  VALUE 'MilitaryInfo/PayGrade'
    IGNORE
  VALUE 'MilitaryInfo/PayGrade/$'
    MilitaryInfo.PayGrade := #XML_VALUE
  VALUE 'MilitaryInfo/PreviousPayGrade//'
    IGNORE
  VALUE 'MilitaryInfo/PreviousPayGrade'
    IGNORE
  VALUE 'MilitaryInfo/PreviousPayGrade/$'
    MilitaryInfo.PreviousPayGrade := #XML_VALUE
  VALUE 'MilitaryInfo/PreviousMilitaryRankID//'
    IGNORE
  VALUE 'MilitaryInfo/PreviousMilitaryRankID'
    IGNORE
  VALUE 'MilitaryInfo/PreviousMilitaryRankID/$'
    MilitaryInfo.PreviousMilitaryRankID := #XML_VALUE
  VALUE 'MilitaryInfo/SpecialPay//'
    IGNORE
  VALUE 'MilitaryInfo/SpecialPay'
    IGNORE
  VALUE 'MilitaryInfo/SpecialPay/$'
    MilitaryInfo.SpecialPay := #XML_VALUE
  VALUE 'MilitaryInfo/RankProtection//'
    IGNORE
  VALUE 'MilitaryInfo/RankProtection'
    IGNORE
  VALUE 'MilitaryInfo/RankProtection/$'
    MilitaryInfo.RankProtection := #XML_VALUE
  VALUE 'MilitaryInfo/RankProtectionDate//'
    IGNORE
  VALUE 'MilitaryInfo/RankProtectionDate'
    IGNORE
  VALUE 'MilitaryInfo/RankProtectionDate/$'
    MilitaryInfo.RankProtectionDate := VAL(#XML_VALUE)
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END
