* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 2
* <Natural Source Header
* PROGRAM-ID: ATHPDFAS - CREATE DFAS FILE OF AAFMAA STOPS AND DECREASES
* IN ALLOTMENT PAYMENTS
* This batch job is run about the 10th of each month for Retireds
* and about the 15th of each month for Actives
* for DFAS to get it processed by the end of month
*
* >>>> If This program is run on or after the 28th day of the month C2800PFA
* assumes today is next month and results from C2800PFA will be skewed
*
********************************************************************
*                  MODIFICATION LOG
* USER DATE     TAG  REASON
* DRW  01142005 DW1  Check Prior DFAS transmissions
* PAM  02022005 PM2  For allotment decreases, use current month
*                    instead of next month per KHB. Use previous
*                    month for allotment stops.
* PAM  02022005 PM3  Do not include hyphens (-) in the formatted
*                    name.  DFAS cannot handle them.
* DRW  06162005 DW4  Check for CAP about to pay-off loan and issue decr
* DRW  06162005 DW5  Remove ' ' as well as '-' from name for DFAS
* DRW  07152005 DW6  Remove Check Prior DFAS transmissions process
*   since CAP loan payoff take 2 months to lower alot to final amt
* DRW  07152005 DW7  Allow ' ' again in name (back out DW5)
* DRW  07292005 DW8  Count GAWT's & ALOT Shortages and overages
* DRW  08112005 DW9  Fix Nu ALOT AMT when Cap Ln is about to pay off
*                    and a linked policy exists
* DRW  09142005 DW10 Add active seg count
* DRW  06172006 DW11 Separate print file for final Cap Pmts
* DRW  05172006 DW12 Remove '"' from name for DFAS
* DRW  09142006 DW13 Stop printing selected exceptions
* DRW  10132006 DW14 Stop printing loan exceptions if recent policy
* DRW  02022007 DW15 Add Retired Alot START and STOP Processing
* DRW  02062007 DW16 Increase size of #recs-read
* DRW  03082007 DW17 Check for Soon-to-pay up and adjust Project Date
* DRW  03272007 DW18 Set Curr-Alot if ALOT-CHG-AUTH is 'S' and RETIRED
* DRW  04042007 DW19 Create FA or Addr File for Allot Auth Letters (FILE 7)
* DRW  04052007 DW20 Add File of FA Changes needed (FILE 8)
* DRW  04062007 DW21 Create no DFAS record if auth = S and no current alotment
* DRW  04102007 DW22 Bypass Alot Chg if a new Gawt policy exists
* DRW  04132007 DW23 Use Day 01 for Current year and Month on Ret Dfas file
* DRW  05012007 DW24 For RT Use Note (Incr Prem) to set Alot Incr amt on Renewal
* DRW  05082007 DW25 Calc Paid-Up Date is missing
* DRW  05092007 DW26 Add File of Allotment Exceptions (FILE 9)
* DRW  05092007 DW27 Add Files for tab delimited DFAS files (file 10 & 11))
* DRW  05112007 DW28 Delete "." from all extracts of names
* DRW  05112007 DW29 Bypass Dead Mbrs & put on Exception report
* DRW  05302007 DW30 Make all Act FA chg needed go to FA Chges needed (file 7)
*                    (Later Backed Out)
* DRW  05312007 DW31 Use 'FRM' in #cga-orig-suff to ind to prt FORM in C2800PFA
* DRW  06152007 DW32 Fix CAP Loan Payoff for Mode 'M' Problem
* DRW  08162007 DW33 Add Intro-Flag to display
* DRW  09102007 DW34 Add Parm to indicate Active and Retired Processing
* DRW  10252007 DW35 Include Data Base Acc-int into CAP Int calc
* DRW  11172007 DW36 Consider Retired SPC-CODE X to be Active-Duty for DFAS
* DRW  11172007 DW37 Add DFAS ACTIVE File layouts for Starts and Increases
* DRW  11132007 DW38 Reset New-alot-amt's if a retired stop (not needed)
* PAM  11152007 PM39 Reset START amounts for allotmetn stops
* DRW  11/21/2007 DW40 insure RTI is within 1 year
* DRW  01/03/2008 DW41 Create file of Act Starts & Increases for temporary use
* DRW  01/09/2008 DW42 Convert name to Upper/Lower case add Comp Code
* DRW  01/09/2008 DW43 Add AT File to DFAS processing also AIL processing
* PAM  01/16/2008 PM44 Changed processing for AT premium rating
* DRW  02/26/2008 DW45 Add File creation to indicate final has been done
* DRW  02/26/2008 DW46 Add Active Start Email File
* DRW  03/03/2008 DW47 Add ALOT-CHG-AUTH "D" Checking
* DRW  04/13/2008 DW48 Add FPF * DB/CR to Detail reports
* DRW  05/05/2008 DW49 Add Info to FA DETAIL File
* DRW  05/08/2008 DW50 Stop Actual DFAS recs on File 8 & format like File 10
* DRW  05/07/2008 DW51 Bypass Auth code "B" on NO AUTH File
* DRW  05/20/2008 DW52 Remove DW29 -Allow Dead Members ALOT chg to go to DFAS
* DRW  05/31/2008 DW53 Add ALOT-CHG-AUTH "A" Processing
* DRW  05/31/2008 DW54 Force CAP Loan & Alot chg if Pd Up last Pmt and Change
*                      Auth Code from 'N' to 'A'
* DRW  07/10/2008 DW55 Make Alot-Chg-Auth 'A' if Cap loan Paid off this Month
* DRW  07/15/2008 DW56 STOP Alot if PDUP OLD/NEW and new alot amt < 1.00
* DRW  08/11/2008 DW57 Remove DW22 - Do not bypass GAWT (FA BTR Takes care of it)
* DRW  08/11/2008 DW58 If in Bankruptcy do not bypass for Missing AIP PMT
* DRW  08/15/2008 DW59 Bypass Notes exception display if Active start or Increase
* DRW  08/19/2008 DW60 Stop bypassing AT Pending DFAS Changes
* DRW  08/27/2008 DW61 Gen Plus processing
* DRW  01/15/2009 DW62 Remove ' ' from Last Name for DFAS
* PAM  02/26/2009 PM63 Added CAP-TYPE
* RSE  09/22/2009 RE1  Change 600K logic for Unification
* PAM  03/13/2012 PM64 Added SSN switch logic
* NGG  03/30/2012 NG1  Premier services
* YAK  10/09/2012 YK1  Use function to identify Level Term II plans
* YAK  11/09/2012 YK2  Add No Medical Term plan (EZ)
* JNT  09/17/2013 JT1  Address normalization
* NG   01/14/2014 NG2  GT2 PROJECT
* vxt  04/18/2014 vt1  /ticket 2737/
* TMT  05/13/2014 TT1  CONTAT NORMALIZATION  -  EMAILS, GENDER, AND DOB
* vxt  08/12/2014 vt2  /Ticket 2806 - check for paid to date for retiree/
* TMT  10/16/2014 TT2  ANNUITY LIFE NORMALIZATION
* vxt  04/19/2016 vt3  /Ticket 4431-exclude navy and marines from Air force file/
* vxt  05/16/2016 vt4  /Ticket 4512- add term refund and outstanding loan amt to the file 10/
* vxt  06/12/2016 vt4i /Ticket 4554 - fix the issues with term refund column and cap loan columns/
* vxt  06/08/2016 vt5  /Ticket 4526 - bypass extraction when the allotm auth = 'B'/
************************************************************************
*
* OUTPUT WORK FILES
* 1  Empty
* 2  DFASARMD.TXT        - DFAS ACTIVE ARMY Decreases sent
* 3  DFASARMS.TXT        - DFAS ACTIVE ARMY Stops sent
* 4  DFASAIRD.TXT        - DFAS ACTIVE AIR FORCE Decreases sent
* 5  DFASAIRS.TXT        - DFAS ACTIVE AIR FORCE Stops sent
* 6  DFAS_RETIRED.TXT    - DFAS All RETIRED chgs sent
* 7  DFAS_AUTH_LTRS.TXT  - ACT or RET addresses of Non Authorized Chg needed
* 8  DFAS_FA_DETAIL.TXT  - ACT or RET any FA Chges needed (Auth and NON Auth)
* 9  DFAS_EXCEPTIONS.TXT - ACT or RET Exceptions
* 10 DFAS_ACT_DETAIL.TXT - ACTIVE Detail List of all Act DFAS Changes Sent
* 11 DFAS_RET_DETAIL.TXT - Retired Detail List of all Ret DFAS Changes Sent
* 12 DFASARMI.TXT        - DFAS ACTIVE ARMY Increases
* 13 DFASARMT.TXT        - DFAS ACTIVE ARMY Starts
* 14 DFASAIRI.TXT        - DFAS ACTIVE AIR FORCE Increases
* 15 DFASAIRT.TXT        - DFAS ACTIVE AIR FORCE STARTS
* 16 DFAS_ACT_STARTS_INCR.TXT - List of Active Starts and Increases
* 17 Empty
* 18 DFAS_ACT_LAST_RUN.TXT   - Contains date of teh last final DFAS ACT Run
* 19 DFAS_RET_LAST_RUN.TXT   - Contains date of teh last final DFAS RET Run
* 20 DFAS_CAP_STARTS_TXT     - List of Active CAP Starts
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING ADDA0001                                                    /* JT1
LOCAL USING G3500AAD
LOCAL USING OBJLCONT                                                    /* PM64
LOCAL USING CLASSLAI                                                    /* PM44
LOCAL USING SVCA0003                                                    /* NG1 Start
LOCAL
1 #SVC-PAID-TO-DATE   (N8) 1 REDEFINE #SVC-PAID-TO-DATE
  2 #SVC-PTD-YYYYMM   (N6)
1 #MSG                (A) DYNAMIC
*                                                                       /* NG1 End
1 #JCL-PARM-7     (A7)
1 REDEFINE #JCL-PARM-7
  2 #JCL-PARM       (A1)     /* 'A' or 'R' to Indicate Active or Retired    DW34
  2 #JCL-PARM-F1    (A1)
  2 #JCL-FINAL      (A5)    /* 'FINAL' indicates Final is being done    DW45
*
1 #ASSUMED-MIL-STAT  (A1)                                               /* DW37
*
1 #LAST-DATE-UPDATE        (N8)
1 #FORCE-A                 (L)
1 #CAP-X         (I2)
1 #BANKR         (L)                   /* DW58
1 #SSN-D                   (N9)                                         /* PM64
*
1 #SWITCH-TABLE                                                         /* PM64
  2 #SSN-1                  (N9) INIT <420805066>                        /* PM64
  2 #SSN-1-DFAS             (N9) INIT <509784352>                        /* PM64
  2 #SSN-2                  (N9) INIT <524087921>                        /* PM64
  2 #SSN-2-DFAS             (N9) INIT <029421701>                        /* PM64
  2 #SSN-3                  (N9) INIT <131646363>                        /* PM64
  2 #SSN-3-DFAS             (N9) INIT <548814036>                        /* PM64
  2 #SSN-4                  (N9) INIT <235238770>                        /* PM64
  2 #SSN-4-DFAS             (N9) INIT <217233643>                        /* PM64
  2 #SSN-5                  (N9) INIT <428419124>                        /* PM64
  2 #SSN-5-DFAS             (N9) INIT <550611124>                        /* PM64
1 REDEFINE #SWITCH-TABLE                                                /* PM64
  2 #SWITCH-TABLE-OCC       (5)                                          /* PM64
    3 #S-SSN                 (N9)                                         /* PM64
    3 #S-SSN-DFAS            (N9)                                         /* PM64
1 #SSN-I                   (I2)                                         /* PM64
*
1 ST-V VIEW OF A-STATUS
  2 MEMBER-CONTACT-ID                                                    /* PM64
  2 ID-NUMBER
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A   (A6)
  2 WIDOW-FLAG     (A1)
  2 LINKED-CN      (40)
  2 REDEFINE LINKED-CN
    3 LINKED-CN-A   (A6/40)
  2 SSN
  2 RANK
  2 PROCESS-IND
  2 CHIEF-OF-STAFF-IND      /* DW36
  2 ALOT-CHG-AUTH
  2 ALOT-CHG-DATE
  2 DATE-ACCT-UPDATE
*  2 DATE-OF-BIRTH                                         /* TT1 BEGIN
*  2 REDEFINE DATE-OF-BIRTH                    /* VT1 \/
*    3 DATE-OF-BIRTH-YYYYMM        (N6)
*    3 DATE-OF-BIRTH-DD            (N2)        /* VT1 /\   /* TT1 END
  2 ONLINE-ACTION-GN
  2 INTRO-FLAG
*  2 INTERNET-ADDR          /* TT1
  2 MILITARY-STATUS
  2 MILITARY-SERVICE
  2 REDEFINE MILITARY-SERVICE
    3 MIL-SERV-A1  (A1)
  2 NAME
  2 REDEFINE NAME
    3 #NM        (A1/25)
  2 ALOT-AMT
  2 STOP-DATE                                   /* VT1
  2 X-FIRST-PLACE-FEE  (9)    /* DW48
  2 X-LOAN-AMOUNT    (9)
  2 X-LOAN-DATE     (9)
  2 X-ALT-LP-IND     (9)
  2 X-ALT-LP-AMT     (9)
  2 X-ALT-LP-IND-2   (9)
  2 X-ALT-LP-AMT-2   (9)
  2 X-ACCUM-INTEREST (9)    /* DW35
  2 X-NXT-YR-ACCUM-INT (9)  /* DW35
  2 DEBIT-CREDIT-AMT
  2 GENERAL-ACTION
  2 NUMBER-MEMBERSHIPS
  2 FACE-AMOUNT         (9)
  2 STATUS              (9)
  2 PAY-STATUS          (9)
  2 NUM-MBRSHIPS        (9)
  2 ONLINE-ACTION       (9)
  2 ONLINE-DATE         (9)
  2 PLAN                (9)
  2 REDEFINE PLAN
    3 PLAN-OCC   (9)
      4 PLAN-A1    (A1)
      4 PLAN-A2    (N2)
  2 PREM-RATING         (9)
  2 MODE                (9)
  2 SMOKER-FLAG         (9)
  2 DEATH-BENEFIT       (9)
  2 NXT-MON-DEATH-BENEFIT (9)
  2 ANNUAL-PREM         (N5.2/9)
  2 PAID-UP-DATE        (9)
  2 REDEFINE PAID-UP-DATE
    3 PAID-UP-DATE-OCC   (9)
      4 PAID-UP-DATE-YYYYMM  (N6)
      4 REDEFINE PAID-UP-DATE-YYYYMM
        5 PAID-UP-DATE-YYYY    (N4)
        5 PAID-UP-DATE-MM      (N2)
      4 PAID-UP-DATE-DD      (N2)
  2 BILL-TO-DATE        (9)
  2 PAID-TO-DATE        (9)
  2 REDEFINE PAID-TO-DATE
    3 PAID-TO-DATE-OCC   (9)
      4 PAID-TO-DATE-YYYYMM   (N6)
      4 REDEFINE PAID-TO-DATE-YYYYMM
        5 PAID-TO-DATE-YYYY    (N4)
        5 PAID-TO-DATE-MM      (N2)
      4 PAID-TO-DATE-DD      (N2)
  2 ISSUE-AGE         (9)
  2 REDEFINE ISSUE-AGE
    3 ISS-AGE-OCC    (9)
      4 ISSUE-AGE-N2 (N2)
  2 SPLIT-IND         (9)
  2 CONV-DURATION     (9)
  2 MONTH-ALLOC-AMT   (9)
  2 ISSUE-DATE        (9)
  2 REDEFINE ISSUE-DATE
    3 ISS-DT-OCC   (9)
      4 ISS-DT-YYYYMMDD (N8)
      4 REDEFINE ISS-DT-YYYYMMDD
        5 ISS-DT-YYYYMM   (N6)
        5 REDEFINE ISS-DT-YYYYMM
          6 ISS-DT-YYYY   (N4)
          6 ISS-DT-MM     (N2)
        5 ISS-DT-DD      (N2)

  2 OUT-TERM-REF-AMOUNT (N7.2/99)                      /* vt4 \/
  2 OUT-TERM-REF-YEAR (N4/99)
  2 NEW-POL-ISS-DATE (N8/99)
  2 OUT-TERM-REF-ENTRY-DATE (N8/99)
  2 NEW-TERM-POL-NBR (A16/99)                          /* vt4 /\
   

*
1 AT-V VIEW OF A-APPL-TRACKING        /* DW43
  2 ID-NUMBER
  2 SSN
  2 SEX
  2 RANK
  2 NAME
  2 MEMBER-CN
  2 MIL-SERVICE
  2 DATE-OF-BIRTH
  2 AT-STATUS
  2 USER-SOURCE
  2 INTERNET-ADDR
  2 ALLOT-STRT-AMT
  2 ALOT-CHG-AUTH
  2 SMOKER-FLAG
  2 FACE-AMT-UNITS
  2 FACE-AMT-DOLS
  2 EXCH-1035
  2 LUMP-SUM
  2 CAP-IND
  2 CAP-TYPE                           /* PM63
  2 CAP-LOAN-AMT
  2 CAP-TERM
  2 RATING-CODE                        /* PM44
  2 PLAN
  2 REDEFINE PLAN
    3 PLAN-A1    (A1)
    3 PLAN-A2    (N2)
*
1 NT-V VIEW OF A-NOTES
  2 NOTE-TEXT    (A60/60)
  2 NOTE-DATE    (N8/60)
*
1 #COUNTERS
  2 #RECS-READ        (P7)  /* DW16
  2 #CNT              (P5)
  2 #CNT-2            (P5)
  2 #CNT-3            (P5)
  2 #CNT-4            (P5)
  2 #CNT-5            (P5)
  2 #CNT-6            (P5)
  2 #CNT-9            (P5)
  2 #CNT-10           (P5)
  2 #I1               (I2)
  2 #I2               (I2)
  2 #I3               (I2)
  2 #CHAR-1           (I2)                                         /* PM3
  2 #CHAR-2           (I2)                                         /* PM3
  2 #ITR1             (I2)
  2 #ARMY-DECR-CNT    (P4)
  2 #ARMY-STOP-CNT    (P4)
  2 #AIRF-DECR-CNT    (P4)
  2 #AIRF-STOP-CNT    (P4)
*
  2 #ARMY-INCR-CNT    (P4)              /* DW37
  2 #ARMY-START-CNT    (P4)
  2 #AIRF-INCR-CNT    (P4)
  2 #AIRF-START-CNT    (P4)
*
  2 #RET-ALOT-TRAN-CNT    (P4)                          /* DW15
  2 #RET-ARMY-DECR-CNT    (P4)
  2 #RET-ARMY-STOP-CNT    (P4)
  2 #RET-AIRF-DECR-CNT    (P4)
  2 #RET-AIRF-STOP-CNT    (P4)
  2 #RET-ARMY-INCR-CNT    (P4)
  2 #RET-ARMY-START-CNT   (P4)
  2 #RET-AIRF-INCR-CNT    (P4)
  2 #RET-AIRF-START-CNT   (P4)
*
  2 #NUM-ACT          (P3)   /* DW10
*
1 #TAB       (A1) INIT <H'09'>
1 #EXTRACT-ADDR     (A125)
1 #EXTRACT-FA     (A120)    /* DW19
1 #EXTRACT-EXCP   (A100)   /* DW26
1 #ALOT-EXCP      (A90)
1 #EXTRACT-RET-DETAIL    (A120)  /* DW27
1 #EXTRACT-ACT-DETAIL    (A120)
1 #EXTRACT-ACT-STRT-STOP (A150)  /* DW41
1 #START                 (A1)    /* DW41
1 #INCREASE              (A1)
1 #ALOT-START-EXTR       (A250)  /* DW48
*
1 #SPLIT    (A1)
1 #ERR-MSG  (A60)
1 #STREET   (A25)
1 #STREET-2 (A25)
1 #CITY     (A22)
1 #STATE    (A2)
1 #EDIT-INVALID (L)
1 #RANK-LITERAL (A23)
1 #HOLD-RANK-5  (A5)
1 #DISPL        (P2)
1 #PASS-COMMAND (A2)   INIT <'AD'>
1 #SUFFIX      (A25)
1 #EXTRA1      (A25)
1 #EXTRA2      (A25)
1 #EXTRA3      (A25)
1 #EXTRA4      (A25)
1 #FIRST/MID    (A25)
*
1 #STORE-NOTES (A60/20)
1 #LAST-CAP-AMT-NEEDED   (P5.2)   /* DW4
1 #CAP-INT               (P5.7)
1 #LOAN-DAYS             (N2)
1 #ALOT-DECR             (N5.2)   /* DW4
1 #TOT-G                 (N5.2)   /*  DW8
1 #DUES                  (N3.2)
1 #DIFF                  (N5.2)
1 #HAS-GAWT              (L)
*
1 #SOON-TO-PAY-UP        (L)    /* DW17
1 #SOON-PLAN             (A3)
1 #SOON-PD-UP-DT         (N8)
1 #SOON-ISS-DT           (N8)
* 1 #NEW-GAWT-POLICY       (L)    /* DW22 DW57
1 #INCREASE-PREM         (L)    /* DW24
*
1 #PLAN         (A3)
1 REDEFINE #PLAN
  2 #PLAN-A1   (A1)
  2 #PLAN-N2   (N2)
1 REDEFINE #PLAN
  2 #PLAN-FLEX-N2  (N2)
  2 REDEFINE #PLAN-FLEX-N2
    3 #PLAN-FLEX-N1 (N1)
    3 #PLAN-FLEX-P  (A1)
  2 #PLAN-FLEX-F   (A1)
1 #ISS-DT       (N8)    /* DW25
1 #MON-ALLOC-AMT (N3.2)
1 #PD-UP-DT      (N8)
1 #DOB           (N8)
1 #SMOKER-FLAG    (A1)
*
1 #DFAS-TYPE             (A7)  /* DW27
1 #2-MONS-IN-FUTURE  (N8)
1 #1-MON-IN-FUTURE   (N8)
1 REDEFINE #1-MON-IN-FUTURE
  2 #1-MON-IN-FUTURE-YYYYMM  (N6)
*
1 #ACT-RET               (2)
  2 #TOT-GAWT         (P5)
  2 #TOT-UND-ALOT-AMT (P7.2/2)     /* 1=less than $1.00  2=more than $.99
  2 #TOT-UND-ALOT     (P7/2)
  2 #TOT-OVE-ALOT-AMT (P7.2/2)
  2 #TOT-OVE-ALOT     (P7/2)
*
1 #CAP-WITH-LOAN-BUT-NO-ALP  (L)
1 #BYPASS-PAID-BY  (L)
1 #CHG-AMT    (P5.2)
*
1 #AUTO-AUTH-BY-MONTH (P5/12)
*
1 #LAST-MONTH   (N8)   /* DW14
1 #BEG-OF-CUR-MONTH  (N8)  /* DW23
1 #TODAY-YYYYMMDD  (N8)
1 REDEFINE #TODAY-YYYYMMDD
  2 #TODAY-YYYYMM   (N6)
  2 #TODAY-DD       (N2)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM        (N6)
  2 REDEFINE #YYYYMM
    3 #CC          (N2)
    3 #YYMM        (N4)
    3 REDEFINE #YYMM
      4 #YY         (N2)
      4 #MM         (N2)
  2 REDEFINE #YYYYMM
    3 #YYYY        (N4)
    3 #DD-X        (N2)
  2 #DD            (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A   (A4)
  2 #MM-A     (A2)
  2 #DD-A     (A2)
1 REDEFINE #YYYYMMDD
  2 #YYYYMMDD-A (A8)
*
1 #CURR-ALOT-A    (A7)
1 REDEFINE #CURR-ALOT-A
  2 #CURR-ALOT     (N5.2)
*
1 #CURR-ALOT-DISP   (A8)   /* DW20
1 #NEW-ALOT-DISP    (A8)
1 #FA-FORMS-SENT    (N5)
1 #AUTH-LTRS-SENT   (N5)
1 #FA-DTLS          (N5)
*
1 #DECREASE-ALOT (L)
1 #STOP-ALOT     (L)
1 #FORCED-STOP-ALOT (L)
1 #INCREASE-ALOT   (L)    /* DW15
1 #START-ALOT      (L)    /* DW15
1 #NEW-ALOT      (N5.2)
1 #FMT-NAME      (A5)
1 REDEFINE #FMT-NAME
  2 #FMT-NM       (A1/5)
*
1 #FMT-LAST-NAME     (A15)    /* DW15
1 REDEFINE #FMT-LAST-NAME
  2 #FMT-LM       (A1/15)
*
1 #FMT-FIRST-MID     (A7)    /* DW15
1 REDEFINE #FMT-FIRST-MID
  2 #FMT-FM       (A1/7)
*
1 #EXTRACT-80    (A80)
*
1 #HOLD-NAME     (A25)                                            /* PM3
1 REDEFINE #HOLD-NAME                                             /* PM3
  2 #HOLD-NAME-CHAR-OCC (25)                                       /* PM3
    3 #HOLD-NAME-CHAR (A1)                                          /* PM3
*
1 #BYPASS-DUE-TO-PRIOR-MATCH (L)   /* DW1
1 #PRIOR-DFAS   (500)    /* DW1    NO LONGER USED    /* DW6
  2 #PR-DFAS-SSN  (N9)
  2 #PR-DFAS-DT   (A6)
  2 #PR-DFAS-ST-SP (A1)
  2 #PR-DFAS-AMT  (N5.2)
*
1 #DECREASE-ALOT-REC       (A80) /* ACTIVE DUTY Decrease(Also used 4 Increase) DW37
1 REDEFINE #DECREASE-ALOT-REC
  2 #DECR-TRL-REC-IND       (N1)
  2 #DECR-FORMAT-ID         (A2)
  2 #DECR-ACTN-IND          (N2)
  2 #DECR-SSN               (N9)
  2 #DECR-NAME              (A5)
  2 #DECR-YR-MO-ALOT-EFF-DT (N4)
  2 REDEFINE #DECR-YR-MO-ALOT-EFF-DT
    3 #DECR-YR-MO-ALOT-EFF-DT-A (A4)
  2 #DECR-ALOTMT-AMT-PAY    (N4.2)
  2 #DECR-ALOT-NAME-ID      (N1)
  2 #DECR-FILL-1            (A2)
  2 #DECR-ALOT-RCPNT-TYPE   (A1)
  2 #DECR-FILL-2            (A24)
  2 #DECR-CO-CODE           (A7)
  2 #DECR-FILL-3            (A3)
  2 #DECR-COMMON-DATA       (A7)
  2 #DECR-COMMON-DATA-ID    (A1)
  2 #DECR-COMMON-DATA-AT    (A1)
  2 #DECR-COMMON-DATA-SEQ   (N4)
*
1 #STOP-ALOT-REC           (A80)  /* ACTIVE-DUTY STOP (Also Used for Starts) DW37
1 REDEFINE #STOP-ALOT-REC
  2 #STOP-TRL-REC-IND       (N1)
  2 #STOP-FORMAT-ID         (A2)
  2 #STOP-ACTN-IND          (N2)
  2 #STOP-SSN               (N9)
  2 #STOP-NAME              (A5)
  2 #STOP-YR-MO-ALOT-EFF-DT (N4)
  2 REDEFINE #STOP-YR-MO-ALOT-EFF-DT
    3 #STOP-YR-MO-ALOT-EFF-DT-A (A4)
  2 #START-AMT-A            (A6)        /* PM39
  2 REDEFINE #START-AMT-A               /* PM39
    3 #START-AMT             (N4.2)      /* DW37
  2 #START-NAME-ID          (A1)        /* DW37
  2 #STOP-FILL-1            (A2)        /* DW37
  2 #STOP-ALOT-RCPNT-TYPE   (A1)
  2 #STOP-FILL-2            (A24)
  2 #STOP-CO-CODE           (A7)
  2 #STOP-FILL-3            (A3)
  2 #STOP-COMMON-DATA       (A7)
  2 #STOP-COMMON-DATA-ID    (A1)
  2 #STOP-COMMON-DATA-AT    (A1)
  2 #STOP-COMMON-DATA-SEQ   (N4)
*
1 #RETIRED-ALOT-REC       (A100)    /* DW15
1 REDEFINE #RETIRED-ALOT-REC   /* Header Rec
  2 #RET-HEADER-REC-ID     (A1)
  2 #RET-HEADER-DATE       (N8)
  2 #RET-HEADER-FILL-1     (A91)
1 REDEFINE #RETIRED-ALOT-REC      /* Detail Rec
  2 #RET-FILL-1            (A2)
  2 #RET-SSN               (N9)
  2 #RET-FILL-2            (A1)
  2 #RET-STATUS            (A1)
  2 #RET-BRANCH-SERV       (A1)
  2 #RET-SHORT-NAME        (A5)
  2 #RET-FILL-3            (A1)
  2 #RET-LAST-NAME         (A15)
  2 #RET-FIRST-NAME-MI     (A7)
  2 #RET-TRAN-CD           (A1)
  2 #RET-FILL-4            (A6)
  2 #RET-EFF-DT            (A8)
  2 #RET-DISCONTINUE-DT    (A8)
  2 #RET-AMOUNT            (N4.2)
  2 #RET-ORIG-AMT          (N4.2)
  2 #RET-FILL-5            (A5)
  2 #RET-PURPOSE-CODE      (A1)
  2 #RET-ACCT-NUM          (A17)
1 REDEFINE #RETIRED-ALOT-REC   /* Trailer Rec
  2 #RET-TRAILER-REC-ID    (A1)
  2 #RET-TOT-RECS          (N7)
  2 #RET-TRAILER-FILL-1    (A92)
*
1 #SORT-REC-TYPE    (A2)    /* 1/2/3/4 STOPS/STARTS/Decreases/Increases
1 #SORT-SSN         (N9)
1 #WRITE-RETIRED    (L)
*
1 #FOUND-COMMA               (L)                   /* DW42
1 #CAP-1RST-LETTER-OF-SUFFIX(L)
*
1 #LETTER-TABLE
  2 #1T                      (A26) INIT <'AaBbCcDdEeFfGgHhIiJjKkLlMm'>
  2 #2T                      (A26) INIT <'NnOoPpQqRrSsTtUuVvWwXxYyZz'>
1 REDEFINE #LETTER-TABLE
  2 #LETTER-OCC              (26)
    3 #UPPER                 (A1)
    3 #LOWER                 (A1)
*
1 #BLANK-ALOT    (A3)                                /* DW42
1 #COMP-CODE     (A7)
1 #FOUND-ST      (L)    /* DW43
1 #FACE-AMT    (N6.2)
1 #FACE-9    (N7.2)
1 #FLEX-POLICY    (L)
1 #DIVIDEND   (N5.4)
1 REDEFINE #DIVIDEND
  2 #DIV-5    (N5)
  2 #REM      (N4)
1 #APREM     (N6.2)
1 #MON-PREM  (N6.2)
1 #ISS-AGE     (N2)
1 REDEFINE #ISS-AGE
  2 #ISS-AGE-A2 (A2)
1 #LOAN-PMT   (N5.2)
1 #LOAN-PMT-DISP          (A10)
1 #MON-PREM-DISP          (A10)
1 #CALC-TOT-ALOT-AMT-DISP (A10)
1 #CALC-TOT-ALOT-AMT   (N6.2)
1 #CAP-STARTS    (N5)
1 #DOING-ATS    (L)
1 #FINAL-FILE   (A8)          /* DW45
*
1 #DOING-ST      (L)             /* DW46
1 #AIL-X         (I2)
1 #AT-ID-NUMBER  (N6)
1 #AT-ALOT-AMT   (N6.2)
1 #ALOT-CHG-AUTH (A1)
1 #LAST      (A25)
1 #FIRST-20  (A20)
1 #MI        (A1)
1 #DFAS-ACT-WIRE-MONTH   (A9)
1 #SUFFIX-3       (A3)
*
1 #MONTH-LITERALS (A108) INIT<'January  February March    April    May      June     '
  -'July     August   SeptemberOctober  November December '>
1 REDEFINE #MONTH-LITERALS   2 #MON-LIT (A9/12)
*
1 #CLERK-ABB-NAME-PASS (A20)             /* DW13
1 #INVALID             (L)
1 #TOT-FPF             (N7.2)            /* DW48
1 #TOT-FPF-DISP        (A11)
1 #DB-CR-DISP          (A11)
1 #cap-loan-amt        (n7.2)            /* vt4
1 #cap-loan-amt-a      (a11)             /* vt4
1 #term-ref-amt        (n7.2)            /* vt4
1 #term-ref-amt-a      (a11)             /* vt4
1 #EZ-TERM             (A3) CONST <'EZ'>  /* YK2
1 EMAIL-ADDRESS       (A60)              /* TT1
*
1 #AGE-96        (N8)                     /* VT1 \/
1 REDEFINE #AGE-96
  2 #AGE-96-YYYYMM   (N6)
  2 #AGE-96-DD       (N2)
1 REDEFINE #AGE-96
  2 #AGE-96-YYYY     (N4)
  2 #AGE-96-MM       (N2)
  2 #AGE-96-DDD      (N2)
1 #C-RUN-DT             (N8.0)
1 REDEFINE #C-RUN-DT
  2 #C-RUN-DT-YYYYMM (N6.0)
  2 #C-RUN-DT-FILL   (N2.0)
1 REDEFINE #C-RUN-DT
  2 #C-RUN-DT-YYYY    (N4)
  2 #C-RUN-DT-MM      (N2)
  2 #C-RUN-DT-DD      (N2)
1 #K         (I2)
1 #ABOVE96   (L)                           /* VT1 /\
*
1 #DATE-OF-BIRTH                 (N8.0)    /* TT1 BEGIN
1 REDEFINE #DATE-OF-BIRTH
  2 #DATE-OF-BIRTH-YYYYMM        (N6)
  2 #DATE-OF-BIRTH-DD            (N2)      /* TT1 END
*
1 #j                             (i4)     /* vt4
*
END-DEFINE
*
INPUT #JCL-PARM-7             /* Active or Retired    DW34
WRITE 'JCL-PARM =' #JCL-PARM
*
MOVE *DATN TO #TODAY-YYYYMMDD
*
MOVE *DATN TO #YYYYMMDD
MOVE 1 TO #DD
MOVE #YYYYMMDD TO #BEG-OF-CUR-MONTH
*
MOVE *DATN TO #YYYYMMDD   /* DW14
SUBTRACT 1 FROM #MM
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
MOVE 1 TO #DD
MOVE #YYYYMMDD TO #LAST-MONTH /* DW14
*
MOVE *DATN TO #YYYYMMDD             /* DW17
ADD 2 TO #MM
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
MOVE #YYYYMMDD TO #2-MONS-IN-FUTURE   /* DW17
*
MOVE *DATN TO #YYYYMMDD             /* DW17
ADD 1 TO #MM
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
MOVE #YYYYMMDD TO #1-MON-IN-FUTURE   /* DW24
WRITE 'RT Renewal paid-up date=' #1-MON-IN-FUTURE
*
FORMAT  LS=133 PS=76
WRITE   TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'Exceptions'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (2) LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'ACTIVE DECREASE TRANSACTIONS FOR DFAS AS OF' #TODAY-YYYYMMDD
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (3) LS=133 PS=76
WRITE  (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'ACTIVE STOP TRANSACTIONS FOR DFAS AS OF' #TODAY-YYYYMMDD
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (4) LS=133 PS=76
WRITE  (4) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'ACTIVE DFAS changes bypassed due to non authorization'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (5) LS=133 PS=76                        /* DW15
WRITE  (5) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'RETIRED DFAS Allotment Transactions'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (6) LS=133 PS=76
WRITE  (6) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'DFAS amt lowers to pay the final CAP Payment'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (7) LS=133 PS=76
WRITE  (7) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'DFAS Record bypassed due to this reason'
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
* (8) Used for FA Forms  (Calls C2800PFA with orig-suffix FRM)
*
*
FORMAT (9) LS=133 PS=76
WRITE  (9) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'ACTIVE INCREASE TRANSACTIONS FOR DFAS AS OF' #TODAY-YYYYMMDD
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (10) LS=133 PS=76
WRITE  (10) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'ACTIVE START TRANSACTIONS FOR DFAS AS OF' #TODAY-YYYYMMDD
  5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX

************************************************************
IF #JCL-PARM = 'R' OR = ' ' /* Only Process Retired Members or ALL   DW34
  RESET #RETIRED-ALOT-REC     /* DW15
  MOVE 'H'   TO #RET-HEADER-REC-ID
  MOVE *DATN TO #RET-HEADER-DATE
  WRITE WORK FILE 6 #RETIRED-ALOT-REC
END-IF
*
IF #JCL-FINAL = 'FINAL'                         /* DW45
  MOVE *DATN TO #FINAL-FILE
  IF #JCL-PARM = 'A'
    WRITE WORK FILE 18 #FINAL-FILE
  ELSE
    IF #JCL-PARM = 'R'
      WRITE WORK FILE 19 #FINAL-FILE
    ELSE
      WRITE WORK FILE 18 #FINAL-FILE
      WRITE WORK FILE 19 #FINAL-FILE
    END-IF
  END-IF
END-IF                                         /* END DW45
*
COMPRESS  'CN'             /* DW19
  #TAB 'FORMATED-NAME'
  #TAB 'STREET' #TAB 'STREET-2'
  #TAB 'CITY' #TAB 'STATE' #TAB 'ZIP'
  INTO #EXTRACT-ADDR LEAVING NO
WRITE WORK FILE 7 #EXTRACT-ADDR
*
COMPRESS  'CN'      /* DW20 DW50
  #TAB 'SSN'
  #TAB 'Type'
  #TAB 'Old-Amt'
  #TAB 'New-Amt'
  #TAB 'Name'
  #TAB 'Stat'
  #TAB 'Serv'
  #TAB 'FPF'
  #TAB 'DB-CR'
  INTO #EXTRACT-FA LEAVING NO
WRITE WORK FILE 8 #EXTRACT-FA
*
COMPRESS  'CN'      /* DW26
  #TAB 'Exception Description'
  INTO #EXTRACT-EXCP LEAVING NO
WRITE WORK FILE 9 #EXTRACT-EXCP
*
IF (#JCL-PARM = 'A' OR = ' ') /* Only Process Active Duty Members or ALL   DW34
  COMPRESS  'CN'      /* DW27
    #TAB 'SSN'
    #TAB 'Type'
    #TAB 'Old-Amt'
    #TAB 'New-Amt'
    #TAB 'Name'
    #TAB 'Stat'
    #TAB 'Serv'
    #TAB 'FPF'      /* DW48
    #TAB 'DB-CR'    /* DW48
    #tab 'CAP-Loan-Balance'    /* vt4
    #tab 'Term-Refund'         /* vt4
    INTO #EXTRACT-ACT-DETAIL LEAVING NO
  WRITE WORK FILE 10 #EXTRACT-ACT-DETAIL
*
  COMPRESS  'CN'      /* DW41
    #TAB 'SSN'
    #TAB 'Type'
    #TAB 'Start'
    #TAB 'Increase'
    #TAB 'Blanket-Alot'
    #TAB 'Comp-Code'
    #TAB 'Stop$'   /* Old-Amt
    #TAB 'Start$'  /* New-Amt
    #TAB 'Stat'
    #TAB 'Serv'
    #TAB 'Rank'
    #TAB 'FName'
    #TAB 'LName'
    #TAB 'STREET' #TAB 'STREET-2'
    #TAB 'CITY' #TAB 'STATE' #TAB 'ZIP'
    #TAB 'E-Mail'
    INTO #EXTRACT-ACT-STRT-STOP LEAVING NO
  WRITE WORK FILE 16 #EXTRACT-ACT-STRT-STOP
END-IF
*
IF (#JCL-PARM = 'R' OR = ' ') /* Only Process Retired Members or ALL   DW34
  COMPRESS  'CN'      /* DW27
    #TAB 'SSN'
    #TAB 'Type'
    #TAB 'Old-Amt'
    #TAB 'New-Amt'
    #TAB 'Name'
    #TAB 'Stat'
    #TAB 'Serv'
    #TAB 'FPF'      /* DW48
    #TAB 'DB-CR'    /* DW48
    INTO #EXTRACT-RET-DETAIL LEAVING NO
  WRITE WORK FILE 11 #EXTRACT-RET-DETAIL
END-IF
*
COMPRESS 'Application Number'         /* DW46
  #TAB 'CN'
  #TAB 'EMail Address'
  #TAB 'Rank'
  #TAB 'Last Name'
  #TAB 'First Name'
  #TAB 'MI'
  #TAB 'Premium'
  #TAB 'Loan Payment'
  #TAB 'Total Payment'
  #TAB 'MREP'
  #TAB 'Wire-Month'
  INTO #ALOT-START-EXTR LEAVING NO
WRITE WORK FILE 20 #ALOT-START-EXTR
*
IF #JCL-PARM = 'A' OR = ' '        /* Check AT File if doing Active   DW43
  PERFORM CHECK-AT-DFAS-CHANGES
END-IF
*
WRITE 'Number of AT CAP starts =' #CAP-STARTS
*
* stop
MOVE TRUE TO #DOING-ST                                           /* DW43
READ ST-V BY MEMBER-KEY STARTING FROM '001900'   /* 001900
*  IF ID-NUMBER GE 600000    /* Was 600000    RE1
  IF AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)   /* RE1
*   or (#recs-read gt 8000)
*  or (st-v.id-number gt 13107)
*    ESCAPE BOTTOM                         /* RE1
    ESCAPE TOP                            /* RE1
  END-IF
*
  IF   (PROCESS-IND = 'C')
*  AND (INTRO-FLAG NE 'A') /* I think we should not to do these - removed 8/19/2008
      AND (INTRO-FLAG NE 'A') /* Put back in 8/19/2008 Process AT pendings  DW60
    ESCAPE TOP
  END-IF
*
  RESET #ASSUMED-MIL-STAT                            /* DW36
  IF   (MILITARY-STATUS = 'A')
      OR ((MILITARY-STATUS = 'R') AND (CHIEF-OF-STAFF-IND = 'X')) /*Recaled to Act-Duty
    MOVE 'A' TO #ASSUMED-MIL-STAT
  ELSE
    IF MILITARY-STATUS = 'R'
      MOVE 'R' TO #ASSUMED-MIL-STAT
    END-IF
  END-IF                                             /* End DW36
*
  IF NOT #ASSUMED-MIL-STAT = 'A' OR = 'R'                 /* DW34/DW36
    ESCAPE TOP
  END-IF
*
  IF   (#JCL-PARM = 'A' OR = 'R')    /* Only Process Active or Retired  DW34
    IF   (#JCL-PARM = 'A')       /* Only Process Active Duty Members   DW34
        AND (#ASSUMED-MIL-STAT = 'A')                                /* DW36
      IGNORE
    ELSE
      IF   (#JCL-PARM = 'R')       /* Only Process Retired Members     DW34
          AND (#ASSUMED-MIL-STAT = 'R')                                    /* DW36
        IGNORE
      ELSE
        ESCAPE TOP
      END-IF
    END-IF
  END-IF
*
  ADD 1 TO #RECS-READ
*
  RESET #DATE-OF-BIRTH               /* TT1
  #DATE-OF-BIRTH := GET-DATE-OF-BIRTH(<ST-V.MEMBER-CONTACT-ID>)          /* TT1
*
  FOR #I1 1 TO 9     /* calc PD-UP DATE if ZERO /* DW25
    IF   (ST-V.STATUS (#I1)= 'D')
        AND (ST-V.PAID-UP-DATE (#I1) = 0)
      MOVE ST-V.PLAN (#I1)        TO #PLAN
      MOVE ST-V.ISSUE-DATE (#I1)  TO #ISS-DT
      MOVE ST-V.MONTH-ALLOC-AMT (#I1) TO #MON-ALLOC-AMT
      MOVE ST-V.PAID-UP-DATE(#I1) TO #PD-UP-DT
      MOVE #DATE-OF-BIRTH         TO #DOB                              /* TT1
      MOVE ST-V.SMOKER-FLAG (#I1) TO #SMOKER-FLAG
      PERFORM CALC-PD-UP-DT                             /* DW25
      MOVE #PD-UP-DT TO ST-V.PAID-UP-DATE (#I1)
    END-IF
  END-FOR
*
  RESET #TOT-G #HAS-GAWT #NUM-ACT      /* DW8
  RESET #SOON-TO-PAY-UP #SOON-PLAN #SOON-PD-UP-DT #SOON-ISS-DT   /* DW17
*  RESET #NEW-GAWT-POLICY               /* DW22 DW57
  RESET #TOT-FPF                       /* DW48
  reset #cap-loan-amt-a                                                                             /* vt4i
  RESET #ABOVE96                                  /* VT1
  FOR #I1 1 TO 9
    IF STATUS (#I1) NE 'D'
      ESCAPE TOP
    END-IF
*
    ADD 1 TO #NUM-ACT     /* DW10
*
    if st-v.x-loan-amount(#i1) gt 0  and  st-v.conv-duration(#i1) = 999                          /* vt4i  \/
      move edited st-v.x-loan-amount(#i1)(em=zzz,zz9.99)  to #cap-loan-amt-a
    else
      reset #cap-loan-amt-a
    end-if                                                                                       /* vt4i /\
*
    ADD X-FIRST-PLACE-FEE (#I1) TO #TOT-FPF       /* DW48
*    IF  (PAID-TO-DATE-YYYYMM (#I1) GT #TODAY-YYYYMM)   /* DW22  DW57
*     AND (PAY-STATUS (#I1) = '21' OR = '12')    /* GAWT/UNPD
*      MOVE TRUE TO #NEW-GAWT-POLICY
*    END-IF
*
    IF   (MODE (#I1) = 'G')
        AND (PAY-STATUS (#I1) LT '40')
      ADD (ANNUAL-PREM (#I1) / 12) TO #TOT-G
* For EZ Term policy deduct $1 from premium (allotment and EZ pay)   /* YK2
      IF PLAN(#I1) = #EZ-TERM                                        /* YK2
        #TOT-G := #TOT-G - 1                                         /* YK2
      END-IF                                                         /* YK2
*
      IF PAID-UP-DATE (#I1) LE #2-MONS-IN-FUTURE      /* DW17
        MOVE TRUE TO #SOON-TO-PAY-UP
        MOVE ST-V.PLAN (#I1) TO #SOON-PLAN
        MOVE PAID-UP-DATE (#I1) TO #SOON-PD-UP-DT
        MOVE ISSUE-DATE (#I1) TO #SOON-ISS-DT
      END-IF
    END-IF
*                                                             /* VT 1 \/
    #C-RUN-DT := *DATN
    COMPUTE #AGE-96-YYYY = #C-RUN-DT-YYYY - 96
    #AGE-96-MM := #C-RUN-DT-MM
    FOR.  FOR #K 1 9
      IF ST-V.PLAN(#K) = 'OL'
          AND ST-V.STATUS(#K) = 'D'
          AND (#DATE-OF-BIRTH-YYYYMM = #AGE-96-YYYYMM)        /* TT1
        MOVE TRUE TO #ABOVE96
        ESCAPE BOTTOM (FOR.)
      END-IF
    END-FOR                                                   /* VT1 /\
*
    IF X-ALT-LP-IND  (#I1) = '1' OR = '2'
      ADD X-ALT-LP-AMT  (#I1) TO #TOT-G
    END-IF
*
    IF X-ALT-LP-IND-2  (#I1) = '1' OR = '2'
      ADD X-ALT-LP-AMT-2  (#I1) TO #TOT-G
    END-IF
*
    IF PAY-STATUS (#I1) = '21'
      MOVE TRUE TO #HAS-GAWT
    END-IF
  END-FOR
*
  MOVE EDITED #TOT-FPF         (EM=-ZZZ,ZZZ.99) TO #TOT-FPF-DISP  /* DW48
  MOVE EDITED DEBIT-CREDIT-AMT (EM=-ZZZ,ZZZ.99) TO #DB-CR-DISP
  MOVE LEFT #TOT-FPF-DISP TO #TOT-FPF-DISP
  MOVE LEFT #DB-CR-DISP   TO #DB-CR-DISP                          /* DW48
*
  FOR #I1 1 TO 9       /* find first active pol
    IF  ST-V.STATUS (#I1) = 'D'
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF #I1 GT 9
    MOVE 1 TO #I1
  END-IF
*
  CALLNAT 'GDUESSXX' ST-V.ID-NUMBER #I1 #DUES
  IF MODE (#I1) = 'G'
    ADD #DUES TO #TOT-G
  END-IF
*
*** We do not need to apply any money here. We simply are looking  ****
*** to include a 1 month rate in this work field. The total of the ****
*** work field is being checked against the current alltoment amt  ****
*** to display some overages/underages. Its display only           ****
  PARM-SVC.SVC-MEMBER-ID :=  ST-V.ID-NUMBER                          /* NG1  Start
  PARM-SVC.SVC-PLAN      := 'PSM'
  PARM-SVC.ACTION        := 'GET'
  PARM-SVC.TRANSACTION-TIMN := *TIMN
  CALLNAT 'SVCN0003' PARM-SVC #MSG
  IF PARM-SVC.SVC-MODE = 'G'
      AND PARM-SVC.SVC-PAY-UP NE 'Y'
    ADD PARM-SVC.SVC-MONTHLY-RATE TO #TOT-G
  END-IF
*                                                                    /* NG1   End
  IF #HAS-GAWT
*   WRITE ST-V.ID-NUMBER 'has GAWT' #assumed-mil-stat
*   WRITE (2) st-v.ID-NUMBER 'has GAWT' #assumed-mil-stat
    IF #ASSUMED-MIL-STAT = 'A'                                  /* DW36
      ADD 1 TO #TOT-GAWT (1)
    ELSE
      ADD 1 TO #TOT-GAWT (2)
    END-IF
  END-IF
*
  IF #ASSUMED-MIL-STAT = 'A'                                  /* DW36
    MOVE 1 TO #I2
  ELSE
    MOVE 2 TO #I2
  END-IF
*
  IF ALOT-AMT LT #TOT-G
    COMPUTE #DIFF = #TOT-G - ALOT-AMT
*   WRITE ST-V.ID-NUMBER 'ALOT Underage' #assumed-mil-stat
*         #DIFF (EM=ZZ,ZZZ.99)
    IF #DIFF GE 1.00
      ADD 1 TO #TOT-UND-ALOT (#I2, 1)
      ADD #DIFF TO #TOT-UND-ALOT-AMT (#I2, 1)
    ELSE
      ADD 1 TO #TOT-UND-ALOT (#I2, 2)
      ADD #DIFF TO #TOT-UND-ALOT-AMT (#I2, 2)
    END-IF
  END-IF
*
  IF ALOT-AMT GT #TOT-G
    COMPUTE #DIFF = ALOT-AMT - #TOT-G
*   WRITE ST-V.ID-NUMBER 'ALOT Overage' #assumed-mil-stat
*         #DIFF (EM=ZZ,ZZZ.99)
    IF #DIFF GE 1.00
      ADD 1 TO #TOT-OVE-ALOT (#I2, 1)
      ADD #DIFF TO #TOT-OVE-ALOT-AMT (#I2, 1)
    ELSE
      ADD 1 TO #TOT-OVE-ALOT (#I2, 2)
      ADD #DIFF TO #TOT-OVE-ALOT-AMT (#I2, 2)
    END-IF
  END-IF
*
  MOVE *ISN TO #CGA-ISN
*
  RESET #LAST-CAP-AMT-NEEDED #ALOT-DECR  #AIL-X   /* DW4
  RESET #CAP-X                   /* DW55
  FOR #I1 1 TO 9
    IF STATUS (#I1) NE 'D'
      ESCAPE TOP
    END-IF
*
    IF   ((ST-V.ISSUE-DATE (#I1) LT 19970101) /* OLD/NEW      /* DW54
        OR (ST-V.MONTH-ALLOC-AMT (#I1) = 999.99))
        AND (ST-V.PAID-UP-DATE-YYYYMM (#I1) = #1-MON-IN-FUTURE-YYYYMM) /* nxt Mon
        AND (ST-V.PAY-STATUS(#I1) LE '40')
        AND (ST-V.MODE (#I1) = 'G')
        AND (ST-V.MILITARY-STATUS = 'R') /* This is needed here
        AND (ST-V.ALOT-CHG-AUTH = 'N' OR = ' ')
      WRITE ST-V.ID-NUMBER 'Forced Alot Chg with Code "A" for PD UP'
        'Iss-dt=' ST-V.ISSUE-DATE (#I1)
      MOVE 'EDS' TO #CGA-CLERK
      if ST-V.ALOT-CHG-AUTH eq 'B'           /* vt5
        compress ST-V.ID-NUMBER #tab 'DFAS Record bypassed due to Auth Flag B on CA screen' into #extract-excp leaving no
        write work 9 #EXTRACT-EXCP
      else
        MOVE TRUE TO #FORCE-A
      end-if                                 /* vt5
      CALLNAT 'GAUTHSXX' ST-V.ID-NUMBER      /*Set ALOT-CHG-AUTH to A
        #CGA-CLERK #FORCE-A
      if ST-V.ALOT-CHG-AUTH ne 'B'           /* vt5
        MOVE 'A' TO ST-V.ALOT-CHG-AUTH /* To force a DFAS chg on this run
      end-if                                 /* vt5
    END-IF                                                    /* End DW54
*
    IF X-ALT-LP-IND (#I1) = 'L'           /* DW43
      MOVE #I1 TO #AIL-X
    END-IF
*
*   IF   (ST-V.ALOT-CHG-AUTH = 'S' OR = 'Y' or = 'D'   /* DW47    DW54
*                  or = 'A')                     /* DW53
*   AND (CONV-DURATION (#I1) = 999)
    IF  (CONV-DURATION (#I1) = 999)
        AND (MODE (#I1) = 'G')                          /* DW32
*
*      move edited x-loan-amount(#i1)(em=zzz,zz9.99)  to #cap-loan-amt-a                 /* vt4i
*
      MOVE #I1 TO #CAP-X                   /* DW55
      IF (X-LOAN-AMOUNT (#I1) GT 0)     /* DW4
          AND (X-LOAN-AMOUNT (#I1) LT (X-ALT-LP-AMT (#I1) * 2)) /* Must be 2 mons
        MOVE *DATN TO #YYYYMMDD
        IF #MM = 2
          MOVE 28 TO #LOAN-DAYS
        ELSE
          IF #MM = 4 OR = 6 OR = 9 OR = 11
            MOVE 30 TO #LOAN-DAYS
          ELSE
            MOVE 31 TO #LOAN-DAYS
          END-IF
        END-IF
*
        COMPUTE ROUNDED #CAP-INT = (X-LOAN-AMOUNT (#I1) * .015) / 365
        COMPUTE ROUNDED #CAP-INT = (#CAP-INT * #LOAN-DAYS)
          + X-ACCUM-INTEREST (#I1) + X-NXT-YR-ACCUM-INT (#I1)    /* DW35
        COMPUTE ROUNDED #LAST-CAP-AMT-NEEDED =
          X-LOAN-AMOUNT (#I1) + #CAP-INT
        COMPUTE #ALOT-DECR = X-ALT-LP-AMT (#I1) - #LAST-CAP-AMT-NEEDED
        IF #ALOT-DECR GT 0
          ADD 1 TO #CNT-6
          DISPLAY (6) #CNT-6 'CN' ST-V.ID-NUMBER    /* DW11
            'decr'         #ALOT-DECR (EM=ZZZ.99)
            'alot/amt'     ALOT-AMT
            'last-cap/P&I' #LAST-CAP-AMT-NEEDED
*
          WRITE ST-V.ID-NUMBER 'last CAP loan Pmt-Alot needs deceased' /* DW54
            'by' #ALOT-DECR 'Auth=' ST-V.ALOT-CHG-AUTH
          MOVE 'EDS' TO #CGA-CLERK
          if ST-V.ALOT-CHG-AUTH eq 'B'           /* vt5
            compress  ST-V.ID-NUMBER #tab 'DFAS Record bypassed due to Auth Flag B on CA screen' into #extract-excp leaving no
            write work 9 #EXTRACT-EXCP
          else
            MOVE TRUE TO #FORCE-A
          end-if                                 /* vt5
          CALLNAT 'GAUTHSXX' ST-V.ID-NUMBER      /*Set ALOT-CHG-AUTH to A
            #CGA-CLERK #FORCE-A
          if ST-V.ALOT-CHG-AUTH ne 'B'           /* vt5
            MOVE 'A' TO ST-V.ALOT-CHG-AUTH /* To force a chg on this run
          end-if                                 /* vt5
        END-IF
      END-IF
*
      IF   (X-LOAN-AMOUNT (#I1) = 0)
          AND (ISSUE-DATE (#I1) LT #LAST-MONTH)   /* DW14
        MOVE X-LOAN-DATE (#I1) TO #YYYYMMDD
        IF #MM = 0
          WRITE ST-V.ID-NUMBER ISSUE-DATE (#I1) 'Missing Loan Date'
            'loan-date=' X-LOAN-DATE (#I1)
        ELSE
          ADD 1 TO #AUTO-AUTH-BY-MONTH (#MM)
        END-IF
      END-IF
    END-IF
  END-FOR
*
  reset #term-ref-amt #term-ref-amt-a                                /* vt4i
  for #j 1 99                                                        /* vt4 \/
    if OUT-TERM-REF-AMOUNT(#j) ne 0
      add OUT-TERM-REF-AMOUNT(#j) to #term-ref-amt
    end-if
  end-for
  move edited #term-ref-amt (em=zzz,zz9.99) to #term-ref-amt-a       /* vt4 /\
*
  RESET #DECREASE-ALOT #STOP-ALOT #FORCED-STOP-ALOT
  RESET #INCREASE-ALOT #START-ALOT                             /* DW15
*  Below is Auto Allotment Stop Processing
*
  MOVE ST-V.ALOT-CHG-DATE TO #YYYYMMDD
  IF ((ST-V.ALOT-CHG-AUTH = 'S')  /* STOP alot ASAP
      AND (ST-V.ALOT-CHG-DATE = 0))
      OR ((ST-V.ALOT-CHG-AUTH = 'S')  /* STOP alot on an entered date
      AND (ST-V.ALOT-CHG-DATE NE 0)
      AND (#YYYYMM LE #TODAY-YYYYMM))
    MOVE TRUE TO #FORCED-STOP-ALOT #STOP-ALOT
*
    MOVE 'FA' TO #CGA-SCR-COMMAND      #CGA-ORIG-COMMAND  /* DW18
    MOVE ST-V.ID-NUMBER TO #CGA-SCR-ID #CGA-ORIG-ID
    MOVE 'BTR' TO #CGA-SCR-SUFFIX      #CGA-ORIG-SUFFIX /* retn amt from FA
    RESET #CGA-MF-SCR-PARM-1-N
    FETCH RETURN 'C2800PFA'           /* GET Current ALOT Amt
    MOVE #CGA-MF-ORIG-PARM-1 TO #CURR-ALOT-A
*
    IF #CURR-ALOT = 0     /* No Alotment to STOP    /* DW21
      MOVE 'Auth = "S" but no Allot to Stop- DFAS Rec Bypassed'     /* DW26
        TO #ALOT-EXCP /* DW26
      COMPRESS ST-V.ID-NUMBER
        #TAB #ALOT-EXCP
        INTO #EXTRACT-EXCP LEAVING NO
      WRITE WORK FILE 9 #EXTRACT-EXCP
*
      ESCAPE TOP
    END-IF
  ELSE
*  Below is Check if Allotment needs changed <<<<<<<<<<<<<<<<<<<<<<<<<<<<<
*
    PERFORM CHK-STOPS-AND-DECRS-AND-STARTS-AND-INCRS   /* DW15
  END-IF
*
  MOVE EDITED #CURR-ALOT (EM=ZZZZZ.99) TO #CURR-ALOT-DISP  /* DW20
  MOVE EDITED #NEW-ALOT  (EM=ZZZZZ.99) TO #NEW-ALOT-DISP
  MOVE LEFT #CURR-ALOT-DISP TO #CURR-ALOT-DISP
  MOVE LEFT #NEW-ALOT-DISP  TO #NEW-ALOT-DISP

*
  RESET #WRITE-RETIRED
  IF #STOP-ALOT OR #DECREASE-ALOT OR #START-ALOT OR #INCREASE-ALOT
    IGNORE   /* Do Something
  ELSE
    ESCAPE TOP    /* No Allotment Changes are needed
  END-IF
*
  IF   (ST-V.ALOT-CHG-AUTH = 'N' OR = ' ')                /* DW55
      AND (#CAP-X NE 0)
      AND (ST-V.X-LOAN-DATE (#CAP-X) GE #BEG-OF-CUR-MONTH)
      AND (X-LOAN-AMOUNT (#CAP-X) = 0)
    WRITE ST-V.ID-NUMBER 'CAP loan Paid off this month from Loan Write Off'
      ST-V.ISSUE-DATE (#CAP-X)
    MOVE 'EDS' TO #CGA-CLERK
    if ST-V.ALOT-CHG-AUTH eq 'B'           /* vt5
      compress  ST-V.ID-NUMBER #tab 'DFAS Record bypassed due to Auth Flag B on CA screen' into #extract-excp leaving no
      write work 9 #EXTRACT-EXCP
    else
      MOVE TRUE TO #FORCE-A
    end-if                                 /* vt5
    CALLNAT 'GAUTHSXX' ST-V.ID-NUMBER      /*Set ALOT-CHG-AUTH to A
      #CGA-CLERK #FORCE-A
    if ST-V.ALOT-CHG-AUTH ne 'B'           /* vt5
      MOVE 'A' TO ST-V.ALOT-CHG-AUTH /* To force a chg on this run
    end-if                                 /* vt5
  END-IF                                                 /* END DW55
*
*  IF ST-V.WIDOW-FLAG = 'Y'   /* Removed 5/20/2008             /* DW29
*    COMPRESS 'Alot Stop bypassed since Mbr is dead - Alot Auth='
*                    ST-V.ALOT-CHG-AUTH INTO #ALOT-EXCP
*    COMPRESS ST-V.ID-NUMBER
*      #TAB #ALOT-EXCP
*      INTO #EXTRACT-EXCP LEAVING NO
*    WRITE WORK FILE 9 #EXTRACT-EXCP
*
*    ESCAPE TOP
*  END-IF

*    AN Allotment Change is indicated     DW57
*  IF #NEW-GAWT-POLICY      /* DW22  DW57
*    COMPRESS 'New Gawt pol-Alot Chg bypassed'                /* DW26
*        'Cur alot =' #CURR-ALOT 'New alot=' #NEW-ALOT
*       INTO #ALOT-EXCP
*    COMPRESS ST-V.ID-NUMBER
*        #TAB #ALOT-EXCP
*        INTO #EXTRACT-EXCP LEAVING NO
*    WRITE WORK FILE 9 #EXTRACT-EXCP
*
*    ESCAPE TOP
*  END-IF
*
  RESET #I2 #STORE-NOTES (*) #BYPASS-PAID-BY #BANKR                /* DW58
  FIND NT-V WITH ID-NUMBER = ST-V.ID-NUMBER
    FOR #I1 1 TO 60
      IF NOTE-TEXT (#I1) = MASK ('*Mbr in bnkrptcy')             /* DW58
        MOVE TRUE TO #BANKR
      END-IF
*
      IF NOTE-TEXT (#I1) = MASK ('*#ALOT:PAYS')
        ADD 1 TO #I2
        MOVE NOTE-TEXT (#I1) TO #STORE-NOTES (#I2)
      END-IF
*
      IF NOTE-TEXT (#I1) = MASK ('*#ALOT:PAID BY')
        MOVE TRUE TO #BYPASS-PAID-BY
*         ESCAPE BOTTOM
      END-IF
    END-FOR
  END-FIND
*
  IF #BYPASS-PAID-BY
      AND (ST-V.ALOT-CHG-AUTH = 'S' OR = 'Y' OR = 'D'         /* DW47
      OR = 'A')                      /* DW53
    MOVE 'Bypassed due to having a "paid by" note' TO #ALOT-EXCP   /* DW26
    COMPRESS ST-V.ID-NUMBER
      #TAB #ALOT-EXCP
      INTO #EXTRACT-EXCP LEAVING NO
    WRITE WORK FILE 9 #EXTRACT-EXCP
*
    ESCAPE TOP
  END-IF
*
  IF   (#ASSUMED-MIL-STAT = 'A')  /* Bypass Exception id Act start or incr /* DW59
      AND (#INCREASE-ALOT OR #START-ALOT)  /* We can't do these yet
    IGNORE
  ELSE
    FOR #I1 1 TO 20
      IF #STORE-NOTES (#I1) NE ' '
        COMPRESS 'DFAS Transaction' #STORE-NOTES (#I1) INTO #ALOT-EXCP /* DW26
        COMPRESS ST-V.ID-NUMBER
          #TAB #ALOT-EXCP
          INTO #EXTRACT-EXCP LEAVING NO
        WRITE WORK FILE 9 #EXTRACT-EXCP
      END-IF
    END-FOR
  END-IF
*
  RESET #CAP-WITH-LOAN-BUT-NO-ALP
  IF INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q'
    FOR #I1 1 TO 9
      IF   (CONV-DURATION (#I1) = 999)
          AND (X-LOAN-AMOUNT (#I1) NE 0)
          AND (X-ALT-LP-IND  (#I1) = '0' OR = ' ')
        MOVE TRUE TO #CAP-WITH-LOAN-BUT-NO-ALP
        ESCAPE BOTTOM
      END-IF
    END-FOR
  END-IF
*
  IF #CAP-WITH-LOAN-BUT-NO-ALP
      AND NOT #BANKR                              /* DW58
    MOVE  'DFAS Record bypassed due to missing ALP'               /* DW26
      TO #ALOT-EXCP
    COMPRESS ST-V.ID-NUMBER
      #TAB #ALOT-EXCP
      INTO #EXTRACT-EXCP LEAVING NO
    WRITE WORK FILE 9 #EXTRACT-EXCP
*
    ESCAPE TOP
  END-IF
*
  IF #SOON-TO-PAY-UP     /* DW17
    COMPRESS 'Soon to be Paid-up'    /* DW26
      'Iss-Dt' #SOON-ISS-DT
      'Pln' #SOON-PLAN
      'Stat=' #ASSUMED-MIL-STAT 'Auth-cd=' ST-V.ALOT-CHG-AUTH
      ' PD-UP-DT=' #SOON-PD-UP-DT
      INTO #ALOT-EXCP
    COMPRESS ST-V.ID-NUMBER
      #TAB #ALOT-EXCP
      INTO #EXTRACT-EXCP LEAVING NO
    WRITE WORK FILE 9 #EXTRACT-EXCP
  END-IF
*
  IF #ABOVE96                                                /* VT1 \/
    MOVE 'ALLOTMENT CHANGE DUE TO ATTAINED AGE'
      TO #ALOT-EXCP
    COMPRESS ST-V.ID-NUMBER
      #TAB #ALOT-EXCP
      INTO #EXTRACT-EXCP LEAVING NO
    WRITE  WORK FILE 9 #EXTRACT-EXCP
  END-IF                                                    /* VT1 /\
*
  IF #ASSUMED-MIL-STAT = 'A'                      /* DW36
    PERFORM FORMAT-DFAS-EXTRACT-ACTIVE
  END-IF
*
  IF #ASSUMED-MIL-STAT = 'R'                      /* DW36
    PERFORM FORMAT-DFAS-EXTRACT-RETIRED    /* DW15
  END-IF
*
  IF NOT #WRITE-RETIRED
    ESCAPE TOP
  END-IF
END-ALL
*
SORT BY #SORT-REC-TYPE #SORT-SSN  /* Only Retired Members are sorted
    USING #RETIRED-ALOT-REC
*
  WRITE WORK FILE 6 #RETIRED-ALOT-REC
*
END-SORT
*
IF #JCL-PARM = 'R' OR = ' ' /* Only Process Retired Members or ALL   DW34
  RESET #RETIRED-ALOT-REC                          /* DW15
  MOVE 'S'                TO #RET-TRAILER-REC-ID
  MOVE #RET-ALOT-TRAN-CNT TO #RET-TOT-RECS
  WRITE WORK FILE 6 #RETIRED-ALOT-REC
END-IF
*                                                   /* DW8 below
WRITE #ARMY-DECR-CNT 'Active ARMY Decrease Count'
WRITE #ARMY-STOP-CNT 'Active ARMY Stop Count'
WRITE #AIRF-DECR-CNT 'Active AIR-Force Decrease Count'
WRITE #AIRF-STOP-CNT 'Active AIR-Force Stop Count'
*
WRITE #ARMY-INCR-CNT  'Active ARMY Increase Count'
WRITE #ARMY-START-CNT 'Active ARMY Start Count'
WRITE #AIRF-INCR-CNT  'Active AIR-Force Increase Count'
WRITE #AIRF-START-CNT 'Active AIR-Force Start Count'
*
WRITE #RET-ARMY-DECR-CNT  'Retired ARMY Decrease Count'
WRITE #RET-ARMY-STOP-CNT  'Retired ARMY STOP Count'
WRITE #RET-ARMY-INCR-CNT  'Retired ARMY Increase Count'
WRITE #RET-ARMY-START-CNT 'Retired ARMY START Count'
WRITE #RET-AIRF-DECR-CNT  'Retired AIR-Force Decrease Count'
WRITE #RET-AIRF-STOP-CNT  'Retired AIR-Force STOP Count'
WRITE #RET-AIRF-INCR-CNT  'Retired AIR-Force Increase Count'
WRITE #RET-AIRF-START-CNT 'Retired AIR-Force START Count'
*
WRITE #RET-ALOT-TRAN-CNT   'Total Retired ALOT Transactions'
*
WRITE #FA-FORMS-SENT  'FA Forms to Send'
WRITE #AUTH-LTRS-SENT 'Auth Letters To Sent (Auth Code is "N")'
WRITE #FA-DTLS        'Total FA Detail entries'
*
WRITE //'tot has gawt       (a/r-c)=' #TOT-GAWT     (*) (EM=ZZ,ZZ9)
FOR #I2 1 TO 2
  IF #I2 = 1
    WRITE '       ****** ACTIVE Stats below'
  ELSE
    WRITE '       ****** RETIRED Stats below'
  END-IF
*
  WRITE '    Over $99 difference'
  WRITE 'Num alots overages =' #TOT-OVE-ALOT    (#I2, 1) (EM=ZZ,ZZ9)
  WRITE 'Alot over amount   =' #TOT-OVE-ALOT-AMT(#I2, 1) (EM=ZZ,ZZ9.99)
  WRITE 'Num alots underages=' #TOT-UND-ALOT    (#I2, 1) (EM=ZZ,ZZ9)
  WRITE 'Alot under amount  =' #TOT-UND-ALOT-AMT(#I2, 1) (EM=ZZ,ZZ9.99)
  WRITE '    Under $ 1.00 difference'
  WRITE 'Num alots underages=' #TOT-OVE-ALOT    (#I2, 2) (EM=ZZ,ZZ9)
  WRITE 'Alot under amount  =' #TOT-OVE-ALOT-AMT(#I2, 2) (EM=ZZ,ZZ9.99)
  WRITE 'Num alots underages=' #TOT-UND-ALOT    (#I2, 2) (EM=ZZ,ZZ9)
  WRITE 'Alot under amount  =' #TOT-UND-ALOT-AMT(#I2, 2) (EM=ZZ,ZZ9.99)
END-FOR
*
FOR #I1 1 TO 12
  WRITE 'loan payoffs with auto auth chg for' #I1
    #AUTO-AUTH-BY-MONTH (#I1)
END-FOR
*
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHK-STOPS-AND-DECRS-AND-STARTS-AND-INCRS   /* DW15
*
RESET #INCREASE-PREM                        /* DW24
FOR #I1 1 TO 9
  IF   (STATUS (#I1) = 'D')
      AND (ST-V.PLAN (#I1) = 'RT')
      AND (MODE (#I1) = 'G')
      AND (PAID-UP-DATE-YYYYMM (#I1) = #1-MON-IN-FUTURE-YYYYMM)
    FIND NT-V WITH ID-NUMBER = ST-V.ID-NUMBER
      FOR #I2 1 TO 60
        IF   (NOTE-TEXT (#I2) = MASK ('* MEMBER ELECTS TO INCREASE'))
            AND (NOTE-DATE (#I2) GT (*DATN - 10000))   /* Within the last year DW40
*         COMPRESS 'Found-RT Increase note' NOTE-TEXT (#I2)       /* DW26
          COMPRESS 'Found-' ST-V.PLAN (#I1) 'Increase note' NOTE-TEXT (#I2)
            TO #ALOT-EXCP
          COMPRESS ST-V.ID-NUMBER
            #TAB #ALOT-EXCP
            INTO #EXTRACT-EXCP LEAVING NO
          WRITE WORK FILE 9 #EXTRACT-EXCP
*
          MOVE TRUE TO #INCREASE-PREM
          ESCAPE BOTTOM
        END-IF
      END-FOR
    END-FIND
  END-IF
END-FOR
*
if st-v.military-status = 'R'   /* vt2   \/
  move 'BTR' to  #CGA-SCR-SUFFIX
  move 'RTR' to  #CGA-ORIG-SUFFIX
else                            /* vt2   /\
  MOVE 'BTR' TO #CGA-SCR-SUFFIX #CGA-ORIG-SUFFIX /* BTR returns amt from FA
end-if                          /* vt2
*                   and gets 'Current" (not 2 months from now) alot amt needed
*
MOVE 'FA' TO #CGA-SCR-COMMAND      #CGA-ORIG-COMMAND
MOVE ST-V.ID-NUMBER TO #CGA-SCR-ID #CGA-ORIG-ID
RESET #CGA-MF-SCR-PARM-1-N
FETCH RETURN 'C2800PFA'           /* GET NEW ALOT W DIFFERENT PREMS
*
COMPUTE #NEW-ALOT = #CGA-MF-SCR-PARM-1-N / 100
MOVE #CGA-MF-ORIG-PARM-1 TO #CURR-ALOT-A
*
write ' after c2800pfa' '=' st-v.id-number / '=' #new-alot '=' #curr-alot-a st-v.id-number
IF #NEW-ALOT LT 0
  WRITE ST-V.ID-NUMBER 'New allot should be less than zero'
    #NEW-ALOT '-  Curr alot =' ALOT-AMT
  ESCAPE TOP
END-IF
*
* WRITE ST-V.ID-NUMBER 'FA BTR NEW ALOT AMT =' #NEW-ALOT
*                     'CURR DFAS ALOT AMT  =' ALOT-AMT
*
* Below checks if a CAP just paid of his loan but needs a 1-month adjustment
* Below removed 6/11/2008 since the calc is done in C2800PFA now
*
* IF  (#CURR-ALOT = #NEW-ALOT)    /* DW4
*  AND (#ALOT-DECR GT 0)
*  AND (#LAST-CAP-AMT-NEEDED NE 0)
*   COMPUTE #NEW-ALOT = #NEW-ALOT - #ALOT-DECR  /* DW9
*
*   ADD 1 TO #CNT-6
*   DISPLAY (6) #CNT-6 'CN' ST-V.ID-NUMBER    /* DW11
*     'cur/alot' #CURR-ALOT (EM=ZZZZ.99)
*     'decr'    #ALOT-DECR (EM=ZZ.99)
*     'nu-alot=' #NEW-ALOT  (EM=ZZZ.99)
*     'alot/amt'   ALOT-AMT
*     'last-cap/P&I' #LAST-CAP-AMT-NEEDED
*
*   if   (ST-V.ALOT-CHG-AUTH = 'N' or = ' ')                  /* DW54
*    and (st-v.military-status = 'R')
*    write st-v.id-number 'Forced Chg with Code "A"'
*     move 'EDS' to #cga-clerk
*     move true to #force-a
*     callnat 'GAUTHSXX' st-v.id-number      /*Set ALOT-CHG-AUTH to A
*            #cga-clerk #force-a
*     move 'A' to ST-V.ALOT-CHG-AUTH /* To force a chg on this run
*   end-if                                                      /* END DW54
* END-IF
*
COMPUTE #CHG-AMT = #CURR-ALOT - #NEW-ALOT
IF (#NEW-ALOT = 0) AND (#CURR-ALOT GT 0)
  MOVE TRUE TO #STOP-ALOT
ELSE
  IF #NEW-ALOT < #CURR-ALOT
    IF #NEW-ALOT LT 1.00  /* Stop alot if decrease to less than 1.00  DW56
      MOVE TRUE TO #STOP-ALOT  /* Since DFAS will not process less than 1.00
*              this must be a final payment on a PD UP OLD/NEW policy
      WRITE ST-V.ID-NUMBER 'DFAS Decr Amt <$1.00 turned to STOP' #NEW-ALOT
    ELSE
      MOVE TRUE TO #DECREASE-ALOT
    END-IF
  END-IF
END-IF
*
* IF #assumed-mil-stat = 'R'                      /* DW15   DW19
IF (#NEW-ALOT > 0) AND (#CURR-ALOT = 0)
  MOVE TRUE TO #START-ALOT
ELSE
  IF #NEW-ALOT > #CURR-ALOT
    MOVE TRUE TO #INCREASE-ALOT
  END-IF
END-IF
* end-if
*
* if #stop-alot or #decrease-alot or #start-alot or #increase-alot
*   display st-v.id-number #stop-alot #decrease-alot #start-alot #increase-alot
* end-if
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FORMAT-DFAS-EXTRACT-ACTIVE
* * * * * * * * * * * * * * * * * * *
*
RESET #FMT-NAME
PERFORM FORMAT-NAME-FLD
PERFORM CHECK-SSN                                    /* PM64
*
IF #DECREASE-ALOT                                    /* DECREASE ALLOTMENT
    AND (ST-V.ALOT-CHG-AUTH = 'Y' OR = 'S' OR = 'D'     /* Only Auth Mbrs /*DW19/DW47
    OR = 'A')                                  /* DW53
  MOVE '3-DECR' TO #DFAS-TYPE
  MOVE 0                    TO #DECR-TRL-REC-IND
  MOVE 'AI'                 TO #DECR-FORMAT-ID
  MOVE 08                   TO #DECR-ACTN-IND
* MOVE ST-V.SSN             TO #DECR-SSN             /* PM64
  MOVE #SSN-D               TO #DECR-SSN             /* PM64
  MOVE #NEW-ALOT            TO #DECR-ALOTMT-AMT-PAY
  MOVE 0                    TO #DECR-ALOT-NAME-ID
  MOVE '6'                  TO #DECR-ALOT-RCPNT-TYPE
  MOVE '3220AAF'            TO #DECR-COMMON-DATA
  MOVE '@'                  TO #DECR-COMMON-DATA-AT
*
  MOVE #TODAY-YYYYMMDD TO #YYYYMMDD
* ADD 01 TO #MM                                     /* PM2
* IF #MM > 12                                       /* PM2
*   SUBTRACT 12 FROM #MM                            /* PM2
*   ADD 01 TO #YYYY                                 /* PM2
* END-IF                                            /* PM2
  MOVE #YYMM TO #DECR-YR-MO-ALOT-EFF-DT
*
  MOVE #FMT-NAME            TO #DECR-NAME
*
  IF ST-V.MILITARY-SERVICE = MASK('A')
    MOVE 'K000966' TO #DECR-CO-CODE
    MOVE '1'       TO #DECR-COMMON-DATA-ID
    ADD 1 TO #ARMY-DECR-CNT
    MOVE #ARMY-DECR-CNT TO #DECR-COMMON-DATA-SEQ
    WRITE WORK FILE 2 #DECREASE-ALOT-REC
  ELSE
    if st-v.military-service = mask('F')                /* vt3
      MOVE 'N060041' TO #DECR-CO-CODE
      MOVE '2'       TO #DECR-COMMON-DATA-ID
      ADD 1 TO #AIRF-DECR-CNT
      MOVE #AIRF-DECR-CNT TO #DECR-COMMON-DATA-SEQ
      WRITE WORK FILE 4 #DECREASE-ALOT-REC
    else
      MOVE 'Navy/Marine Change Allotment required'      /* vt3 \/
        TO #ALOT-EXCP
      COMPRESS ST-V.ID-NUMBER
        #TAB #ALOT-EXCP
        INTO #EXTRACT-EXCP LEAVING NO
      WRITE WORK FILE 9 #EXTRACT-EXCP
      escape routine
    end-if                                              /* vt3 /\
  END-IF
*
  COMPRESS  ST-V.ID-NUMBER      /* DW20  DW50
*    #TAB ST-V.SSN                                  /* PM64
    #TAB #SSN-D                                    /* PM64
    #TAB 'DFAS ACT DECR'
    #TAB #CURR-ALOT-DISP
    #TAB #NEW-ALOT-DISP
    #TAB ST-V.NAME
    #TAB #ASSUMED-MIL-STAT
    #TAB ST-V.MILITARY-SERVICE
    #TAB #TOT-FPF-DISP
    #TAB #DB-CR-DISP
    INTO #EXTRACT-FA LEAVING NO
*  WRITE WORK FILE 8 #EXTRACT-FA    /* DW50
*  ADD 1 TO #FA-DTLS
*
  ADD 1 TO #CNT-2
  DISPLAY (2) #CNT-2 (EM=ZZZ9)
    'ID/NUMBER'    ST-V.ID-NUMBER
    'Num/Segs'     #NUM-ACT      /* DW10
    'I/FLG'        ST-V.INTRO-FLAG    /* DW33
    'MIL/SRV'      ST-V.MILITARY-SERVICE
    'MIL/STAT'     #ASSUMED-MIL-STAT                 /* DW15 DW36
    'Old/Alot'     ALOT-AMT   (EM=ZZZZ.99)
    'Old/Combined/Alot' #CURR-ALOT   (EM=ZZZZ.99)
    'New/Alot'     #NEW-ALOT  (EM=ZZZZ.99)
    'Diff'         #CHG-AMT   (EM=ZZZZ.99)
    'TRL/REC/ID'   #DECR-TRL-REC-IND
    'FRMT/ID'      #DECR-FORMAT-ID
    'ACT/IND'      #DECR-ACTN-IND
    'SSN'          #DECR-SSN
    'NAME'         #DECR-NAME    (EM=XXXXXXXXXXX)
    'ALT/EFF/DT'   #DECR-YR-MO-ALOT-EFF-DT-A
    'ALT/NAME/ID ' #DECR-ALOT-NAME-ID
    'ALT/RCP/TP'   #DECR-ALOT-RCPNT-TYPE
    'CO/CODE'      #DECR-CO-CODE
    'COMMON/DATA'  #DECR-COMMON-DATA
    'COMM/DTA/SEQ' #DECR-COMMON-DATA-SEQ
*
  FOR #I1 1 TO 20
    IF #STORE-NOTES (#I1) NE ' '
      WRITE (2) '    ' #STORE-NOTES (#I1)
    END-IF
  END-FOR
*
  COMPRESS  ST-V.ID-NUMBER   /* Decrease  /* DW27
*    #TAB ST-V.SSN                                /* PM64
    #TAB #SSN-D                                  /* PM64
    #TAB #DFAS-TYPE
    #TAB #CURR-ALOT-DISP
    #TAB #NEW-ALOT-DISP
    #TAB ST-V.NAME
    #TAB #ASSUMED-MIL-STAT                /* DW36
    #TAB ST-V.MILITARY-SERVICE
    #TAB #TOT-FPF-DISP                       /* DW48
    #TAB #DB-CR-DISP                         /* DW48
    #tab #cap-loan-amt-a                       /* vt4
    #tab #term-ref-amt-a                       /* vt4
    INTO #EXTRACT-ACT-DETAIL LEAVING NO
  WRITE WORK FILE 10 #EXTRACT-ACT-DETAIL
*
  ESCAPE ROUTINE
END-IF
*
IF #STOP-ALOT                       /* STOP  ALLOTMENT
    AND (ST-V.ALOT-CHG-AUTH = 'Y' OR = 'S' OR = 'D' /*Only Auth Mbrs  DW19/DW47
    OR = 'A')                         /* DW53
  MOVE '1-STOP' TO #DFAS-TYPE
  MOVE 0           TO #STOP-TRL-REC-IND
  MOVE 'AI'        TO #STOP-FORMAT-ID
  MOVE 02          TO #STOP-ACTN-IND
* MOVE ST-V.SSN    TO #STOP-SSN                   /* PM64
  MOVE #SSN-D      TO #STOP-SSN                   /* PM64
  MOVE '6'         TO #STOP-ALOT-RCPNT-TYPE
  MOVE '3220AAF'   TO #STOP-COMMON-DATA
  MOVE '@'         TO #STOP-COMMON-DATA-AT
  RESET #START-AMT-A #START-NAME-ID                                    /* PM39
*
  MOVE #TODAY-YYYYMMDD TO #YYYYMMDD
  SUBTRACT 01 FROM #MM
  IF #MM < 1
    ADD 12 TO #MM
    SUBTRACT 1 FROM #YYYY
  END-IF
  MOVE #YYMM TO #STOP-YR-MO-ALOT-EFF-DT
*
  MOVE #FMT-NAME TO #STOP-NAME
*
  IF ST-V.MILITARY-SERVICE = MASK('A')
    MOVE 'K000966' TO #STOP-CO-CODE
    MOVE '3'       TO #STOP-COMMON-DATA-ID
    ADD 1 TO #ARMY-STOP-CNT
    MOVE #ARMY-STOP-CNT TO #STOP-COMMON-DATA-SEQ
    WRITE WORK FILE 3 #STOP-ALOT-REC
  ELSE
    if st-v.military-service = mask ('F')               /* vt3
      MOVE 'N060041' TO #STOP-CO-CODE
      MOVE '4'       TO #STOP-COMMON-DATA-ID
      ADD 1 TO #AIRF-STOP-CNT
      MOVE #AIRF-STOP-CNT TO #STOP-COMMON-DATA-SEQ
      WRITE WORK FILE 5 #STOP-ALOT-REC
    else
      MOVE 'Navy/Marine Change Allotment required'     /* vt3 \/
        TO #ALOT-EXCP
      COMPRESS ST-V.ID-NUMBER
        #TAB #ALOT-EXCP
        INTO #EXTRACT-EXCP LEAVING NO
      WRITE WORK FILE 9 #EXTRACT-EXCP
      escape routine
    end-if                                            /* vt3 /\
  END-IF
*
  COMPRESS  ST-V.ID-NUMBER      /* DW20 DW50
*    #TAB ST-V.SSN              /* PM64
    #TAB #SSN-D                /* PM64
    #TAB 'DFAS ACT STOP'
    #TAB #CURR-ALOT-DISP
    #TAB #NEW-ALOT-DISP
    #TAB ST-V.NAME
    #TAB #ASSUMED-MIL-STAT
    #TAB ST-V.MILITARY-SERVICE
    #TAB #TOT-FPF-DISP
    #TAB #DB-CR-DISP
    INTO #EXTRACT-FA LEAVING NO
*  WRITE WORK FILE 8 #EXTRACT-FA                /* DW50
*  ADD 1 TO #FA-DTLS
*
  ADD 1 TO #CNT-3
  DISPLAY (3) #CNT-3 (EM=ZZZ9)
    'ID/NUMBER'    ST-V.ID-NUMBER
    'Num/Segs'     #NUM-ACT    /* DW10
    'MIL/SRV'      ST-V.MILITARY-SERVICE
    'MIL/STAT'     #ASSUMED-MIL-STAT                 /* DW15 DW36
    'Old/Alot'     ALOT-AMT   (EM=ZZZZ.99)
    'Old/Combined/Alot' #CURR-ALOT   (EM=ZZZZ.99)
    'TRL/REC/ID'   #STOP-TRL-REC-IND
    'FRMT/ID'      #STOP-FORMAT-ID
    'ACT/IND'      #STOP-ACTN-IND
    'SSN'          #STOP-SSN
    'NAME'         #STOP-NAME
    'ALOT/EFF/DT'  #STOP-YR-MO-ALOT-EFF-DT-A
    'ALOT/RCPNT'   #STOP-ALOT-RCPNT-TYPE
    'CO/CODE'      #STOP-CO-CODE
    'COMMON/DATA'  #STOP-COMMON-DATA
    'COMM/DTA/SEQ' #STOP-COMMON-DATA-SEQ
*
  FOR #I1 1 TO 20
    IF #STORE-NOTES (#I1) NE ' '
      WRITE (3) '    ' #STORE-NOTES (#I1)
    END-IF
  END-FOR
*
  COMPRESS  ST-V.ID-NUMBER   /* Stop  /* DW27
*    #TAB ST-V.SSN                             /* PM64
    #TAB #SSN-D                               /* PM64
    #TAB #DFAS-TYPE
    #TAB #CURR-ALOT-DISP
    #TAB #NEW-ALOT-DISP
    #TAB ST-V.NAME
    #TAB #ASSUMED-MIL-STAT                    /* DW36
    #TAB ST-V.MILITARY-SERVICE
    #TAB #TOT-FPF-DISP                        /* DW48
    #TAB #DB-CR-DISP                          /* DW48
    #tab #cap-loan-amt-a                        /* vt4
    #tab #term-ref-amt-a                        /* vt4
    INTO #EXTRACT-ACT-DETAIL LEAVING NO
  WRITE WORK FILE 10 #EXTRACT-ACT-DETAIL
*
  ESCAPE ROUTINE
END-IF
*
IF #INCREASE-ALOT                                              /* DW37
    AND (ST-V.ALOT-CHG-AUTH = 'Y' OR = 'S'  /* Only Auth Mbrs - Not "D"   DW47
    OR = 'A')                          /* DW53
  PERFORM ACT-ALOT-INCREASE
  ESCAPE ROUTINE
END-IF
*
IF #START-ALOT                                                 /* DW37
    AND (ST-V.ALOT-CHG-AUTH = 'Y' OR = 'S'  /* Only Auth Mbrs  Not "D" DW19/DW47
    OR = 'A')                       /* DW53
  PERFORM ACT-ALOT-START
  ESCAPE ROUTINE
END-IF
*
IF  ((#STOP-ALOT OR #DECREASE-ALOT)     /* DW19  DW30-below was commented out
    OR  (#START-ALOT OR #INCREASE-ALOT))                  /* DW37
    AND (NOT ST-V.ALOT-CHG-AUTH = 'Y' OR = 'S'  /* NOT "D"     /* DW47
    OR = 'A')               /* DW53
  IF ST-V.ALOT-CHG-AUTH = 'B'     /* Bypass from this file    /* DW51
    WRITE ST-V.ID-NUMBER 'Auth Code = "B" -Bypassed from DFAS processing'
      'till' ST-V.ALOT-CHG-DATE
    ESCAPE TOP
  END-IF
*
  PERFORM WRITE-ALOT-AUTH-ADDR-FILE
*
  IF #START-ALOT    MOVE 'Start'    TO #DFAS-TYPE END-IF    /* DW49
  IF #INCREASE-ALOT MOVE 'Increase' TO #DFAS-TYPE END-IF
  IF #STOP-ALOT     MOVE 'Stop'     TO #DFAS-TYPE END-IF
  IF #DECREASE-ALOT MOVE 'Decrease' TO #DFAS-TYPE END-IF
*
  COMPRESS  ST-V.ID-NUMBER      /* DW20  DW50
*    #TAB ST-V.SSN                          /* PM64
    #TAB #SSN-D                            /* PM64
    #TAB #DFAS-TYPE                        /* DW49
    #TAB #CURR-ALOT-DISP
    #TAB #NEW-ALOT-DISP
    #TAB ST-V.NAME
    #TAB #ASSUMED-MIL-STAT
    #TAB ST-V.MILITARY-SERVICE
    #TAB #TOT-FPF-DISP
    #TAB #DB-CR-DISP
    INTO #EXTRACT-FA LEAVING NO
  WRITE WORK FILE 8 #EXTRACT-FA
  ADD 1 TO #FA-DTLS
*
  ESCAPE TOP
ELSE
  WRITE ST-V.ID-NUMBER 'fetch to FA to get FA Form'
  MOVE 'FA' TO #CGA-SCR-COMMAND      #CGA-ORIG-COMMAND  /* DW19
  MOVE ST-V.ID-NUMBER TO #CGA-SCR-ID #CGA-ORIG-ID
  MOVE 'BTR' TO #CGA-SCR-SUFFIX
  MOVE 'FRM' TO #CGA-ORIG-SUFFIX       /* To Print an FA form in PRT8
  RESET #CGA-MF-SCR-PARM-1-N
  FETCH RETURN 'C2800PFA'           /* Print an FA
  ADD 1 TO #FA-FORMS-SENT
*
  COMPRESS  ST-V.ID-NUMBER      /* DW20 DW50
    #TAB #SSN-D                /* PM64
*    #TAB ST-V.SSN              /* PM64
    #TAB 'ACT FA Sent'
    #TAB #CURR-ALOT-DISP
    #TAB #NEW-ALOT-DISP
    #TAB ST-V.NAME
    #TAB #ASSUMED-MIL-STAT
    #TAB ST-V.MILITARY-SERVICE
    #TAB #TOT-FPF-DISP
    #TAB #DB-CR-DISP
    INTO #EXTRACT-FA LEAVING NO
*  WRITE WORK FILE 8 #EXTRACT-FA      /* DW50
*  ADD 1 TO #FA-DTLS
  ESCAPE TOP
END-IF    /* DW30
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ACT-ALOT-INCREASE                                  /* DW37
* * * * * * * * * * * * * * * * * *
MOVE '4-INCR' TO #DFAS-TYPE
MOVE 0                    TO #DECR-TRL-REC-IND
MOVE 'AI'                 TO #DECR-FORMAT-ID
MOVE 07                   TO #DECR-ACTN-IND
* MOVE ST-V.SSN           TO #DECR-SSN                               /* PM64
MOVE #SSN-D               TO #DECR-SSN                               /* PM64
MOVE #NEW-ALOT            TO #DECR-ALOTMT-AMT-PAY
MOVE 0                    TO #DECR-ALOT-NAME-ID
MOVE '6'                  TO #DECR-ALOT-RCPNT-TYPE
MOVE '3220AAF'            TO #DECR-COMMON-DATA
MOVE '@'                  TO #DECR-COMMON-DATA-AT
*
MOVE #TODAY-YYYYMMDD TO #YYYYMMDD
MOVE #YYMM TO #DECR-YR-MO-ALOT-EFF-DT
*
MOVE #FMT-NAME            TO #DECR-NAME
*
IF ST-V.MILITARY-SERVICE = MASK('A')
  MOVE 'K000966' TO #DECR-CO-CODE
  MOVE '1'       TO #DECR-COMMON-DATA-ID
  ADD 1 TO #ARMY-INCR-CNT
  MOVE #ARMY-INCR-CNT TO #DECR-COMMON-DATA-SEQ
  WRITE WORK FILE 12 #DECREASE-ALOT-REC
ELSE
  if st-v.military-service = mask('F')               /* vt3
    MOVE 'N060041' TO #DECR-CO-CODE
    MOVE '2'       TO #DECR-COMMON-DATA-ID
    ADD 1 TO #AIRF-INCR-CNT
    MOVE #AIRF-INCR-CNT TO #DECR-COMMON-DATA-SEQ
    WRITE WORK FILE 14 #DECREASE-ALOT-REC
  else
    MOVE 'Navy/Marine Change Allotment required'     /* vt3 \/
      TO #ALOT-EXCP
    COMPRESS ST-V.ID-NUMBER
      #TAB #ALOT-EXCP
      INTO #EXTRACT-EXCP LEAVING NO
    WRITE WORK FILE 9 #EXTRACT-EXCP
  end-if                                             /* vt3 /\
END-IF
*
COMPRESS  ST-V.ID-NUMBER      /* DW20 DW50
*    #TAB ST-V.SSN                   /* PM64
  #TAB #SSN-D                     /* PM64
  #TAB 'DFAS ACT INCR'
  #TAB #CURR-ALOT-DISP
  #TAB #NEW-ALOT-DISP
  #TAB ST-V.NAME
  #TAB #ASSUMED-MIL-STAT
  #TAB ST-V.MILITARY-SERVICE
  #TAB #TOT-FPF-DISP
  #TAB #DB-CR-DISP
  INTO #EXTRACT-FA LEAVING NO
* WRITE WORK FILE 8 #EXTRACT-FA     /* DW50
* ADD 1 TO #FA-DTLS
*
ADD 1 TO #CNT-9
DISPLAY (9) #CNT-9 (EM=ZZZ9)
  'ID/NUMBER'    ST-V.ID-NUMBER
  'Num/Segs'     #NUM-ACT      /* DW10
  'I/FLG'        ST-V.INTRO-FLAG    /* DW33
  'MIL/SRV'      ST-V.MILITARY-SERVICE
  'MIL/STAT'     #ASSUMED-MIL-STAT                 /* DW15 DW36
  'Old/Alot'     ALOT-AMT   (EM=ZZZZ.99)
  'Old/Combined/Alot' #CURR-ALOT   (EM=ZZZZ.99)
  'New/Alot'     #NEW-ALOT  (EM=ZZZZ.99)
  'Diff'         #CHG-AMT   (EM=ZZZZ.99)
  'TRL/REC/ID'   #DECR-TRL-REC-IND
  'FRMT/ID'      #DECR-FORMAT-ID
  'ACT/IND'      #DECR-ACTN-IND
  'SSN'          #DECR-SSN
  'NAME'         #DECR-NAME    (EM=XXXXXXXXXXX)
  'ALT/EFF/DT'   #DECR-YR-MO-ALOT-EFF-DT-A
  'ALT/NAME/ID ' #DECR-ALOT-NAME-ID
  'ALT/RCP/TP'   #DECR-ALOT-RCPNT-TYPE
  'CO/CODE'      #DECR-CO-CODE
  'COMMON/DATA'  #DECR-COMMON-DATA
  'COMM/DTA/SEQ' #DECR-COMMON-DATA-SEQ
*
FOR #I1 1 TO 20
  IF #STORE-NOTES (#I1) NE ' '
    WRITE (9) '    ' #STORE-NOTES (#I1)
  END-IF
END-FOR
*
COMPRESS  ST-V.ID-NUMBER   /* Decrease  /* DW27
*  #TAB ST-V.SSN                        /* PM64
  #TAB #SSN-D                          /* PM64
  #TAB #DFAS-TYPE
  #TAB #CURR-ALOT-DISP
  #TAB #NEW-ALOT-DISP
  #TAB ST-V.NAME
  #TAB #ASSUMED-MIL-STAT                /* DW36
  #TAB ST-V.MILITARY-SERVICE
  #TAB #TOT-FPF-DISP                       /* DW48
  #TAB #DB-CR-DISP                         /* DW48
  #tab #cap-loan-amt-a                       /* vt4
  #tab #term-ref-amt-a                       /* vt4
  INTO #EXTRACT-ACT-DETAIL LEAVING NO
WRITE WORK FILE 10 #EXTRACT-ACT-DETAIL
*
PERFORM ACT-START-INCR                    /* DW41
PERFORM ACT-START-EMAIL-FILE              /* DW46
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ACT-ALOT-START              /* DW37
* * * * * * * * * * * * * * * * *
*
MOVE '2-START' TO #DFAS-TYPE
MOVE 0           TO #STOP-TRL-REC-IND
MOVE 'AI'        TO #STOP-FORMAT-ID
MOVE 01          TO #STOP-ACTN-IND
* MOVE ST-V.SSN  TO #STOP-SSN                     /* PM64
MOVE #SSN-D      TO #STOP-SSN                     /* PM64
MOVE #NEW-ALOT   TO #START-AMT                    /* DW37
MOVE '0'         TO #START-NAME-ID                /* DW37
MOVE '6'         TO #STOP-ALOT-RCPNT-TYPE
MOVE '3220AAF'   TO #STOP-COMMON-DATA
MOVE '@'         TO #STOP-COMMON-DATA-AT
*
MOVE #TODAY-YYYYMMDD TO #YYYYMMDD
MOVE #YYMM TO #STOP-YR-MO-ALOT-EFF-DT
*
MOVE #FMT-NAME TO #STOP-NAME
*
IF ST-V.MILITARY-SERVICE = MASK('A')
  MOVE 'K000966' TO #STOP-CO-CODE
  MOVE '3'       TO #STOP-COMMON-DATA-ID
  ADD 1 TO #ARMY-START-CNT
  MOVE #ARMY-START-CNT TO #STOP-COMMON-DATA-SEQ
  WRITE WORK FILE 13 #STOP-ALOT-REC
ELSE
  if st-v.military-service = mask('F')               /* vt3
    MOVE 'N060041' TO #STOP-CO-CODE
    MOVE '4'       TO #STOP-COMMON-DATA-ID
    ADD 1 TO #AIRF-START-CNT
    MOVE #AIRF-START-CNT TO #STOP-COMMON-DATA-SEQ
    WRITE WORK FILE 15 #STOP-ALOT-REC
  else                                              /* vt3 \/
    MOVE 'Navy/Marine Change Allotment required'
      TO #ALOT-EXCP
    COMPRESS ST-V.ID-NUMBER
      #TAB #ALOT-EXCP
      INTO #EXTRACT-EXCP LEAVING NO
    WRITE WORK FILE 9 #EXTRACT-EXCP
  end-if                                             /* vt3 /\
END-IF
*
COMPRESS  ST-V.ID-NUMBER      /* DW20 DW50
*    #TAB ST-V.SSN            /* PM64
  #TAB #SSN-D              /* PM64
  #TAB 'DFAS ACT START'
  #TAB #CURR-ALOT-DISP
  #TAB #NEW-ALOT-DISP
  #TAB ST-V.NAME
  #TAB #ASSUMED-MIL-STAT
  #TAB ST-V.MILITARY-SERVICE
  #TAB #TOT-FPF-DISP
  #TAB #DB-CR-DISP
  INTO #EXTRACT-FA LEAVING NO
* WRITE WORK FILE 8 #EXTRACT-FA             /* DW50
* ADD 1 TO #FA-DTLS
*
ADD 1 TO #CNT-10
DISPLAY (10) #CNT-10 (EM=ZZZ9)
  'ID/NUMBER'    ST-V.ID-NUMBER
  'Num/Segs'     #NUM-ACT    /* DW10
  'MIL/SRV'      ST-V.MILITARY-SERVICE
  'MIL/STAT'     #ASSUMED-MIL-STAT                 /* DW15 DW36
  'New/Alot'     #START-AMT     (EM=ZZZZ.99)
  'TRL/REC/ID'   #STOP-TRL-REC-IND
  'FRMT/ID'      #STOP-FORMAT-ID
  'ACT/IND'      #STOP-ACTN-IND
  'SSN'          #STOP-SSN
  'NAME'         #STOP-NAME
  'ALOT/EFF/DT'  #STOP-YR-MO-ALOT-EFF-DT-A
  'ALOT/RCPNT'   #STOP-ALOT-RCPNT-TYPE
  'CO/CODE'      #STOP-CO-CODE
  'COMMON/DATA'  #STOP-COMMON-DATA
  'COMM/DTA/SEQ' #STOP-COMMON-DATA-SEQ
*
FOR #I1 1 TO 20
  IF #STORE-NOTES (#I1) NE ' '
    WRITE (10) '    ' #STORE-NOTES (#I1)
  END-IF
END-FOR
*
COMPRESS  ST-V.ID-NUMBER   /* Start  /* DW27
*  #TAB ST-V.SSN                            /* PM64
  #TAB #SSN-D                              /* PM64
  #TAB #DFAS-TYPE
  #TAB #CURR-ALOT-DISP
  #TAB #NEW-ALOT-DISP
  #TAB ST-V.NAME
  #TAB #ASSUMED-MIL-STAT                   /* DW36
  #TAB ST-V.MILITARY-SERVICE
  #TAB #TOT-FPF-DISP                       /* DW48
  #TAB #DB-CR-DISP                         /* DW48
  #tab #cap-loan-amt-a                       /* vt4
  #tab #term-ref-amt-a                       /* vt4
  INTO #EXTRACT-ACT-DETAIL LEAVING NO
WRITE WORK FILE 10 #EXTRACT-ACT-DETAIL
*
PERFORM ACT-START-INCR                    /* DW41
PERFORM ACT-START-EMAIL-FILE              /* DW46
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ACT-START-EMAIL-FILE           /* DW46
* * * * * * * * * * * * * * * * *
*
CALLNAT 'C2810SFA' ST-V.SSN #AT-ID-NUMBER #AT-ALOT-AMT #ALOT-CHG-AUTH
*
IF #AT-ALOT-AMT NE 0  /* THE START/INCREASE includes a new CAP Start
  IF #DOING-ST
      AND (#AIL-X NE 0)
      AND (ST-V.X-ALT-LP-IND (#AIL-X) = 'L')
    WRITE ST-V.ID-NUMBER 'AIL with a new CAP start - Something is wrong'
  END-IF
*
*  write st-v.ssn 'Addl Alot amt =' #at-alot-amt 'alot-auth=' #alot-chg-auth
*    'AT#=' #at-id-number
*
  MOVE #1-MON-IN-FUTURE TO #YYYYMMDD
  MOVE #MON-LIT (#MM) TO #DFAS-ACT-WIRE-MONTH
  FIND (1) AT-V WITH ID-NUMBER = #AT-ID-NUMBER
    MOVE AT-V.NAME TO #NAME
    RESET #LAST #MI #FIRST-20
    CALLNAT 'GFMLNSXX' /* split name
      #NAME
      #FIRST-20
      #MI
      #LAST
      #ERR-MSG
*
    PERFORM COMPUTE-ALLOT-AMT
    MOVE EDITED #LOAN-PMT (EM=Z,ZZZ.99) TO #LOAN-PMT-DISP
    MOVE LEFT #LOAN-PMT-DISP TO #LOAN-PMT-DISP
    MOVE EDITED #MON-PREM (EM=Z,ZZZ.99) TO #MON-PREM-DISP
    MOVE LEFT #MON-PREM-DISP TO #MON-PREM-DISP
    MOVE EDITED #CALC-TOT-ALOT-AMT (EM=Z,ZZZ.99) TO #CALC-TOT-ALOT-AMT-DISP
    MOVE #CALC-TOT-ALOT-AMT-DISP TO #CALC-TOT-ALOT-AMT-DISP
*
    RESET #DISPL #RANK-LITERAL #HOLD-RANK-5
    CALLNAT 'GRANKSXX' #PASS-COMMAND AT-V.RANK AT-V.MIL-SERVICE
      #INVALID #DISPL #RANK-LITERAL #HOLD-RANK-5
*
    RESET #CLERK-ABB-NAME-PASS
    CALLNAT 'GCKNMSXX' AT-V.USER-SOURCE
      #INVALID
      #CLERK-ABB-NAME-PASS
    IF #INVALID
      MOVE AT-V.USER-SOURCE TO #CLERK-ABB-NAME-PASS
    END-IF
*
    COMPRESS AT-V.ID-NUMBER
      #TAB AT-V.MEMBER-CN
      #TAB AT-V.INTERNET-ADDR
      #TAB #RANK-LITERAL
      #TAB #LAST
      #TAB #FIRST-20
      #TAB #MI
      #TAB #MON-PREM-DISP
      #TAB #LOAN-PMT-DISP
      #TAB #CALC-TOT-ALOT-AMT-DISP
      #TAB #CLERK-ABB-NAME-PASS                           /* Mrep
      #TAB #DFAS-ACT-WIRE-MONTH
      INTO #ALOT-START-EXTR LEAVING NO
    WRITE WORK FILE 20 #ALOT-START-EXTR
*
  END-FIND
END-IF
*
IF #DOING-ST
    AND (#AIL-X NE 0)
    AND (ST-V.X-ALT-LP-IND (#AIL-X) = 'L')
  RESET #MON-PREM #MON-PREM-DISP
  IF ST-V.MODE (#AIL-X) = 'G'
    COMPUTE #MON-PREM = ST-V.ANNUAL-PREM (#AIL-X) / 12
    MOVE EDITED #MON-PREM (EM=Z,ZZZ.99) TO #MON-PREM-DISP
    MOVE LEFT #MON-PREM-DISP TO #MON-PREM-DISP
  END-IF
*
  COMPUTE #CALC-TOT-ALOT-AMT = #MON-PREM + ST-V.X-ALT-LP-AMT (#AIL-X)
*
  RESET #DISPL #RANK-LITERAL #HOLD-RANK-5
  CALLNAT 'GRANKSXX' #PASS-COMMAND ST-V.RANK ST-V.MILITARY-SERVICE
    #INVALID #DISPL #RANK-LITERAL #HOLD-RANK-5
*
  RESET #CLERK-ABB-NAME-PASS
  MOVE 'EAC' TO AT-V.USER-SOURCE
  CALLNAT 'GCKNMSXX' AT-V.USER-SOURCE
    #INVALID
    #CLERK-ABB-NAME-PASS
  IF #INVALID
    MOVE AT-V.USER-SOURCE TO #CLERK-ABB-NAME-PASS
  END-IF
*
  MOVE #1-MON-IN-FUTURE TO #YYYYMMDD
  MOVE #MON-LIT (#MM) TO #DFAS-ACT-WIRE-MONTH
  MOVE ST-V.NAME TO #NAME
  RESET #LAST #MI #FIRST-20
  CALLNAT 'GFMLNSXX' /* split name
    #NAME
    #FIRST-20
    #MI
    #LAST
    #ERR-MSG
*
  MOVE EDITED ST-V.X-ALT-LP-AMT (#AIL-X) (EM=Z,ZZZ.99) TO #LOAN-PMT-DISP
  MOVE LEFT #LOAN-PMT-DISP TO #LOAN-PMT-DISP
  MOVE EDITED #CALC-TOT-ALOT-AMT (EM=Z,ZZZ.99) TO #CALC-TOT-ALOT-AMT-DISP
  MOVE #CALC-TOT-ALOT-AMT-DISP TO #CALC-TOT-ALOT-AMT-DISP
*
  RESET EMAIL-ADDRESS                                               /* TT1
  EMAIL-ADDRESS := F-PREF-EMAIL(<ST-V.MEMBER-CONTACT-ID>)           /* TT1
*
  COMPRESS ' '
    #TAB ST-V.ID-NUMBER
    #TAB EMAIL-ADDRESS                                            /* TT1
    #TAB #RANK-LITERAL
    #TAB #LAST
    #TAB #FIRST-20
    #TAB #MI
    #TAB #MON-PREM-DISP
    #TAB #LOAN-PMT-DISP
    #TAB #CALC-TOT-ALOT-AMT-DISP
    #TAB #CLERK-ABB-NAME-PASS                           /* Mrep
    #TAB #DFAS-ACT-WIRE-MONTH
    INTO #ALOT-START-EXTR LEAVING NO
  WRITE WORK FILE 20 #ALOT-START-EXTR
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE COMPUTE-ALLOT-AMT       /* DW46
* * * * * * * * * * * * * * * * * *
*
RESET #LOAN-PMT
IF AT-V.CAP-IND = 'Y' AND (AT-V.CAP-LOAN-AMT NE 0)
    AND AT-V.CAP-TYPE = 'G'                  /* PM63
  DECIDE ON FIRST VALUE AT-V.CAP-LOAN-AMT
    VALUE 5000
      IF CAP-TERM = 48 MOVE 107.25 TO #LOAN-PMT END-IF
      IF CAP-TERM = 36 MOVE 141.94 TO #LOAN-PMT END-IF
    VALUE 4000
      IF CAP-TERM = 48 MOVE  85.80 TO #LOAN-PMT END-IF
      IF CAP-TERM = 36 MOVE 113.55 TO #LOAN-PMT END-IF
    VALUE 3000
      IF CAP-TERM = 48 MOVE 64.35 TO #LOAN-PMT END-IF
      IF CAP-TERM = 36 MOVE 85.16 TO #LOAN-PMT END-IF
    VALUE 2500
      IF CAP-TERM = 48 MOVE 53.62 TO #LOAN-PMT END-IF
      IF CAP-TERM = 36 MOVE 70.97 TO #LOAN-PMT END-IF
    VALUE 2000
      IF CAP-TERM = 48 MOVE 42.90 TO #LOAN-PMT END-IF
      IF CAP-TERM = 36 MOVE 56.77 TO #LOAN-PMT END-IF
    VALUE 1000
      IF CAP-TERM = 48 MOVE 21.45 TO #LOAN-PMT END-IF
      IF CAP-TERM = 36 MOVE 28.38 TO #LOAN-PMT END-IF
    NONE IGNORE
  END-DECIDE
END-IF
*
IF AT-V.SMOKER-FLAG = 'N' OR = ' '
  MOVE 'N' TO #SMOKER-FLAG
ELSE
  MOVE 'S' TO #SMOKER-FLAG
END-IF
*
COMPUTE #FACE-9 = AT-V.FACE-AMT-UNITS * 1000
MOVE *DATN TO #YYYYMMDD
SUBTRACT AT-V.DATE-OF-BIRTH FROM #YYYYMMDD
MOVE #YY TO #ISS-AGE-A2
MOVE *DATN TO #YYYYMMDD /* calc premium based on 1st of next month
ADD 1 TO #MM            /* since CAP eff date will be then
IF #MM GT 12
  SUBTRACT 12 FROM #MM
  ADD 1 TO #YYYY
END-IF
MOVE 1 TO #DD
*
IF AT-V.RATING-CODE = #CLASS-1 MOVE 'SB1' TO #SUFFIX-3 END-IF
IF AT-V.RATING-CODE = #CLASS-2 MOVE 'SB2' TO #SUFFIX-3 END-IF
IF AT-V.RATING-CODE = #CLASS-3 MOVE 'SB3' TO #SUFFIX-3 END-IF
*
CALLNAT 'GPREMSXX' #CGA-SCR-COMMAND #CGA-SCR-ID #SUFFIX-3
  AT-V.PLAN #ISS-AGE #APREM #YYYYMMDD #SMOKER-FLAG #FACE-9 AT-V.SEX /* DW3
*
RESET #MON-PREM
IF AT-V.PLAN NE 'SP'
  COMPUTE #MON-PREM = #APREM / 12
END-IF
*
COMPUTE #CALC-TOT-ALOT-AMT = #LOAN-PMT + #MON-PREM + ALLOT-STRT-AMT
*
END-SUBROUTINE
*
** * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ACT-START-INCR         /* DW41
* * * * * * * * * * * * * * * * * * *
*
PERFORM GET-NAME-ADDRESS
*
RESET #START #INCREASE
IF #START-ALOT
  MOVE 'X' TO #START
ELSE
  IF #INCREASE-ALOT
    MOVE 'X' TO #INCREASE
  END-IF
END-IF
*
MOVE #FIRST-NAME TO #HOLD-NAME   /* DW42
FOR #I2 1 TO 25
  IF #HOLD-NAME-CHAR (#I2) = ' '  /* Clear all but 1st Nmae
    FOR #I3 #I2 TO 25
      RESET #HOLD-NAME-CHAR (#I3)
    END-FOR
*
    ESCAPE BOTTOM
  END-IF
END-FOR
*
PERFORM UPPER-LOWER
MOVE #HOLD-NAME TO #FIRST-NAME
*
MOVE #LAST-NAME TO #HOLD-NAME
PERFORM UPPER-LOWER
MOVE #HOLD-NAME TO #LAST-NAME
*
IF ST-V.MILITARY-SERVICE = MASK ('A')    /* ARMY               /*DW42
  MOVE '064'     TO #BLANK-ALOT
  MOVE 'K000966' TO #COMP-CODE
ELSE                                /* Air Force
  RESET #BLANK-ALOT
  MOVE 'N060041' TO #COMP-CODE
END-IF
*
COMPRESS  ST-V.ID-NUMBER
*  #TAB ST-V.SSN                    /* PM64
  #TAB #SSN-D                      /* PM64
  #TAB #DFAS-TYPE
  #TAB #START
  #TAB #INCREASE
  #TAB #BLANK-ALOT                /* DW42
  #TAB #COMP-CODE
  #TAB #CURR-ALOT-DISP
  #TAB #NEW-ALOT-DISP
  #TAB #ASSUMED-MIL-STAT
  #TAB ST-V.MILITARY-SERVICE
  #TAB #RANK
  #TAB #FIRST-NAME
  #TAB #LAST-NAME
  #TAB #STREET
  #TAB #STREET-2
  #TAB #CITY
  #TAB #STATE
  #TAB #ADD-ZIP-CODE                            /* JT1
*  #TAB ZIP-CODE                                /* JT1
  #TAB EMAIL-ADDRESS                            /* TT1
  INTO #EXTRACT-ACT-STRT-STOP LEAVING NO
WRITE WORK FILE 16 #EXTRACT-ACT-STRT-STOP
*
END-SUBROUTINE
*
** * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FORMAT-DFAS-EXTRACT-RETIRED   /* DW15
* * * * * * * * * * * * * * * * * * *
*
IF NOT ST-V.ALOT-CHG-AUTH = 'Y' OR = 'S' OR = 'D'    /* DW19
    OR = 'A'                /* DW53
  IF ST-V.ALOT-CHG-AUTH = 'B'     /* Bypass from this file    /* DW51
    WRITE ST-V.ID-NUMBER 'Auth Code = "B" -Bypassed from NO AUTH File'
    ESCAPE TOP
  END-IF
* write st-v.id-number 'Retired Change needed but not Authorized'
  PERFORM WRITE-ALOT-AUTH-ADDR-FILE
*
  IF #START-ALOT    MOVE 'Start'    TO #DFAS-TYPE END-IF    /* DW49
  IF #INCREASE-ALOT MOVE 'Increase' TO #DFAS-TYPE END-IF
  IF #STOP-ALOT     MOVE 'Stop'     TO #DFAS-TYPE END-IF
  IF #DECREASE-ALOT MOVE 'Decrease' TO #DFAS-TYPE END-IF
*
  COMPRESS  ST-V.ID-NUMBER      /* DW20 DW50
*    #TAB ST-V.SSN              /* PM64
    #TAB #SSN-D                /* PM64
    #TAB #DFAS-TYPE
    #TAB #CURR-ALOT-DISP
    #TAB #NEW-ALOT-DISP
    #TAB ST-V.NAME
    #TAB #ASSUMED-MIL-STAT
    #TAB ST-V.MILITARY-SERVICE
    #TAB #TOT-FPF-DISP
    #TAB #DB-CR-DISP
    INTO #EXTRACT-FA LEAVING NO
  WRITE WORK FILE 8 #EXTRACT-FA
  ADD 1 TO #FA-DTLS
  ESCAPE TOP
END-IF
*
RESET #FMT-NAME
PERFORM FORMAT-NAME-FLD
PERFORM CHECK-SSN                                    /* PM64
*
RESET #RETIRED-ALOT-REC
* MOVE ST-V.SSN         TO #RET-SSN         /* PM64
MOVE #SSN-D           TO #RET-SSN           /* PM64
MOVE 'R'              TO #RET-STATUS
MOVE ST-V.MIL-SERV-A1 TO #RET-BRANCH-SERV
MOVE #FMT-NAME        TO #RET-SHORT-NAME
MOVE #FMT-LAST-NAME   TO #RET-LAST-NAME
MOVE #FMT-FIRST-MID   TO #RET-FIRST-NAME-MI
MOVE #BEG-OF-CUR-MONTH TO #RET-EFF-DT       /* DW23
MOVE #LAST-MONTH      TO #RET-DISCONTINUE-DT
MOVE #NEW-ALOT        TO #RET-AMOUNT
MOVE #CURR-ALOT       TO #RET-ORIG-AMT
MOVE 'I'              TO #RET-PURPOSE-CODE
* MOVE ST-V.SSN TO #SORT-SSN                /* PM64
MOVE #SSN-D           TO #SORT-SSN          /* PM64
*
MOVE ST-V.ID-NUMBER TO #RET-ACCT-NUM
*
IF #START-ALOT
  MOVE 2 TO #SORT-REC-TYPE
  MOVE 1 TO #RET-TRAN-CD
  MOVE '00000000' TO #RET-DISCONTINUE-DT
  RESET #RET-ORIG-AMT
  MOVE '2-START' TO #DFAS-TYPE
END-IF
*
IF #STOP-ALOT
  MOVE 1 TO #SORT-REC-TYPE
  MOVE 2 TO #RET-TRAN-CD
  MOVE '00000000' TO #RET-EFF-DT
  MOVE #CURR-ALOT TO #RET-AMOUNT     /* STOPS must have amt to stop
  RESET #RET-ORIG-AMT
  RESET #NEW-ALOT #NEW-ALOT-DISP           /* DW38
  MOVE '1-STOP' TO #DFAS-TYPE
END-IF
*
IF #INCREASE-ALOT
  MOVE 4 TO #SORT-REC-TYPE
  MOVE 3 TO #RET-TRAN-CD
  MOVE '4-INCR' TO #DFAS-TYPE
END-IF
*
IF #DECREASE-ALOT
  MOVE 3 TO #SORT-REC-TYPE
  MOVE 4 TO #RET-TRAN-CD
  MOVE '3-DECR' TO #DFAS-TYPE
END-IF
*
ADD 1 TO #RET-ALOT-TRAN-CNT
*
IF ST-V.MILITARY-SERVICE = MASK('A')
  IF #STOP-ALOT
    ADD 1 TO #RET-ARMY-STOP-CNT
  ELSE
    IF #START-ALOT
      ADD 1 TO #RET-ARMY-START-CNT
    ELSE
      IF #INCREASE-ALOT
        ADD 1 TO #RET-ARMY-INCR-CNT
      ELSE
        ADD 1 TO #RET-ARMY-DECR-CNT
      END-IF
    END-IF
  END-IF
ELSE
  IF ST-V.MILITARY-SERVICE = MASK('F')
    IF #STOP-ALOT
      ADD 1 TO #RET-AIRF-STOP-CNT
    ELSE
      IF #START-ALOT
        ADD 1 TO #RET-AIRF-START-CNT
      ELSE
        IF #INCREASE-ALOT
          ADD 1 TO #RET-AIRF-INCR-CNT
        ELSE
          ADD 1 TO #RET-AIRF-DECR-CNT
        END-IF
      END-IF
    END-IF
  ELSE
    WRITE ST-V.ID-NUMBER 'Invalid Ret Mil service' ST-V.MILITARY-SERVICE
  END-IF
END-IF
*
COMPRESS  ST-V.ID-NUMBER      /* DW20 DW50
  #TAB ST-V.SSN
*    #TAB 'DFAS RET'          /* PM64
  #TAB #SSN-D              /* PM64
  #TAB #CURR-ALOT-DISP
  #TAB #NEW-ALOT-DISP
  #TAB ST-V.NAME
  #TAB #ASSUMED-MIL-STAT
  #TAB ST-V.MILITARY-SERVICE
  #TAB #TOT-FPF-DISP
  #TAB #DB-CR-DISP
  INTO #EXTRACT-FA LEAVING NO
* WRITE WORK FILE 8 #EXTRACT-FA             /* DW50
* ADD 1 TO #FA-DTLS
*
COMPRESS  ST-V.ID-NUMBER      /* DW27
*    #TAB ST-V.SSN            /* PM64
  #TAB #SSN-D              /* PM64
  #TAB #DFAS-TYPE
  #TAB #CURR-ALOT-DISP
  #TAB #NEW-ALOT-DISP
  #TAB ST-V.NAME
  #TAB #ASSUMED-MIL-STAT                    /* DW36
  #TAB ST-V.MILITARY-SERVICE
  #TAB #TOT-FPF-DISP                       /* DW48
  #TAB #DB-CR-DISP                         /* DW48
  INTO #EXTRACT-RET-DETAIL LEAVING NO
WRITE WORK FILE 11 #EXTRACT-RET-DETAIL
*
ADD 1 TO #CNT-5
DISPLAY (5) #CNT-5 (EM=ZZZ9)
  'ID/NUMBER'    ST-V.ID-NUMBER
  'Num/Segs'     #NUM-ACT
  'SSN'          #RET-SSN
  'MIL/SRV'      #RET-BRANCH-SERV
  'MIL/STAT'     #RET-STATUS
  'Old/Alot'     ALOT-AMT   (EM=ZZZZ.99)
  'Old/Combined/Alot' #CURR-ALOT   (EM=ZZZZ.99)
  'New/Alot'     #RET-AMOUNT  (EM=ZZZZ.99)
  'Orig/Amount'  #RET-ORIG-AMT (EM=ZZZZ.99)
  'Diff'         #CHG-AMT   (EM=ZZZZ.99)
  'Short/Name'   #RET-SHORT-NAME
  'Last/Name'    #RET-LAST-NAME
  'First/MID/Name' #RET-FIRST-NAME-MI
  'EFF/DT'       #RET-EFF-DT
  'Discontinue/Date' #RET-DISCONTINUE-DT
*
FOR #I1 1 TO 20
  IF #STORE-NOTES (#I1) NE ' '
    WRITE (5) '    ' #STORE-NOTES (#I1)
  END-IF
END-FOR
*
MOVE TRUE TO #WRITE-RETIRED
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FORMAT-NAME-FLD
* * * * * * * * * * * * * * * * *
*
SEPARATE ST-V.NAME LEFT INTO #LAST-NAME #FIRST/MID
  #SUFFIX #EXTRA1 #EXTRA2 WITH DELIMITER ','
*
MOVE #LAST-NAME TO #HOLD-NAME       /* DW15
RESET #CHAR-2 #FMT-LAST-NAME
FOR #CHAR-1 1 TO 25
  IF NOT #HOLD-NAME-CHAR (#CHAR-1) = '-' OR = '"' OR = '.'        /* DW28
      OR = ' '                                      /* DW62
    ADD +1 TO #CHAR-2
    IF #CHAR-2 LE 15
      MOVE #HOLD-NAME-CHAR (#CHAR-1) TO #FMT-LM (#CHAR-2)
    ELSE
      ESCAPE BOTTOM
    END-IF
  END-IF
END-FOR
*
COMPRESS #FMT-LAST-NAME #FIRST/MID INTO #HOLD-NAME      /* PM3     DW62
RESET #CHAR-2 #FMT-NAME                                           /* PM3
FOR #CHAR-1 1 TO 25                                               /* PM3
* IF NOT #HOLD-NAME-CHAR (#CHAR-1) = '-' OR = ' '                 /* DW5
  IF NOT #HOLD-NAME-CHAR (#CHAR-1) = '-' OR = '"' OR = '.'    /* DW7/DW12/DW28
*  Do NOT include ' ' here so last name & 1st name is separated by blank
    ADD +1 TO #CHAR-2                                             /* PM3
    IF #CHAR-2 LE 5                                               /* PM3
      MOVE #HOLD-NAME-CHAR (#CHAR-1) TO #FMT-NM (#CHAR-2)         /* PM3
    ELSE                                                          /* PM3
      ESCAPE BOTTOM                                               /* PM3
    END-IF                                                        /* PM3
  END-IF                                                          /* PM3
END-FOR                                                           /* PM3
*
MOVE #FIRST/MID TO #HOLD-NAME       /* DW15
RESET #CHAR-2 #FMT-FIRST-MID
FOR #CHAR-1 1 TO 25
  IF NOT #HOLD-NAME-CHAR (#CHAR-1) = '-' OR = '"' OR = '.'
*  Do NOT include ' ' here so First name & Mid Init is separated by blank
    ADD +1 TO #CHAR-2
    IF #CHAR-2 LE 7
      MOVE #HOLD-NAME-CHAR (#CHAR-1) TO #FMT-FM (#CHAR-2)
    ELSE
      ESCAPE BOTTOM
    END-IF
  END-IF
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE WRITE-ALOT-AUTH-ADDR-FILE  /* DW20
* * * * * * * * * * * * * * * * * *
*
IF NOT #DOING-ATS
  PERFORM GET-NAME-ADDRESS
END-IF
*
COMPRESS  ST-V.ID-NUMBER
  #TAB #FORMATED-NAME
  #TAB #STREET
  #TAB #STREET-2
  #TAB #CITY
  #TAB #STATE
  #TAB #ADD-ZIP-CODE                                     /* JT1
*  #TAB ZIP-CODE                                         /* JT1
  INTO #EXTRACT-ADDR LEAVING NO
WRITE WORK FILE 7 #EXTRACT-ADDR
ADD 1 TO #AUTH-LTRS-SENT
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE GET-NAME-ADDRESS
* * * * * * * * * * * * * * * * * *
*
MOVE ST-V.ID-NUMBER TO #CGA-SCR-ID
RESET #CONTACT-SEG  /* get insured
CALLNAT 'G3500SAD' #CGA-MASTER #PDA-AREA-G3500AAD /* Get #Formated-name
*
*  below to extract state and city
* MOVE 'S' TO #SPLIT
* RESET #STREET #STREET-2 #CITY #STATE
* * DISPLAY ST-V.ID-NUMBER ST-V.ADDRESS-1 ST-V.ADDRESS-2 ST-V.ADDRESS-3
* * IF NOT ST-V.ID-NUMBER = 590667
* CALLNAT 'GCTSTSXX'  /* SPLIT CITY/STATE / DO NOT REMOVE IN CASE CITY
*   #SPLIT
*   ST-V.ADDRESS-1     /* AND STATE ARE NEEDED FOR EXTRACT FILE
*   ST-V.ADDRESS-2
*   ST-V.ADDRESS-3
*   #STREET
*   #STREET-2
*   #CITY
*   #STATE
*   #ERR-MSG
* *
* IF ST-V.ADDRESS-3 = ' '      /* DW4
*   RESET #SECOND-ADDRESS
* ELSE
*   MOVE ST-V.ADDRESS-2 TO #SECOND-ADDRESS
* END-IF
*
RESET #PDA-ADDRESS                                  /* JT1 start
#ADD-TYPE        := 'S'
#ADD-CONTACT-ID  := ST-V.MEMBER-CONTACT-ID
CALLNAT 'ADDN0001' #PDA-ADDRESS
MOVE #ADD-LINE-1 TO #STREET
MOVE #ADD-LINE-2 TO #STREET-2
MOVE #ADD-CITY   TO #CITY
MOVE #ADD-STATE  TO #STATE                         /* JT1 end
*
END-SUBROUTINE
*
* * * * * * * * * * *
DEFINE SUBROUTINE CALC-PD-UP-DT  /* DW25
* * * * * * * * * * *
*
IF #PLAN = 'OL' OR = 'GPL'                 /* DW61
    OR= 'GP2'                              /* NG2
  IF   (#ISS-DT GE 19970101)
      AND (#MON-ALLOC-AMT NE 999.99)
    COMPUTE #PD-UP-DT = #DOB + 1000000
  ELSE
    COMPUTE #PD-UP-DT = #DOB + 960000
  END-IF
ELSE
  IF #PLAN = '20P'
    COMPUTE #PD-UP-DT = #ISS-DT + 200000
  ELSE
    IF #PLAN = '30P'
      COMPUTE #PD-UP-DT = #ISS-DT + 300000
    ELSE
      IF #PLAN = '7P'
        COMPUTE #PD-UP-DT = #ISS-DT + 70000
      ELSE
        IF   (#PLAN = 'RT')
          IGNORE
        ELSE
          IF #PLAN = 'LT'
            IF #SMOKER-FLAG = 'S'
              COMPUTE #PD-UP-DT = #DOB + 500000
            ELSE
              COMPUTE #PD-UP-DT = #DOB + 600000
            END-IF
          ELSE
*           IF  (#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z') /* LTII /* DW3     /* YK1
            IF F-LT2-TRUE(<#PLAN>)                                         /* YK1
              IF #PLAN = MASK (.NN)
                COMPUTE #PD-UP-DT = #ISS-DT + (#PLAN-N2 * 10000)
              END-IF
            ELSE
              IF #PLAN = 'EZ'                                              /* YK2
                COMPUTE #PD-UP-DT = #DOB + 800000                          /* YK2
              ELSE    /* MUST BE OL FLEX                       /* DW3
                IF #PLAN-FLEX-F = 'F'    /* ??F                /* DW3
                  IF #PLAN-FLEX-P = 'P'  /* 4PF etc            /* DW3
                    COMPUTE #PD-UP-DT = #ISS-DT + (#PLAN-FLEX-N1 * 10000)
                  ELSE                   /* MUST BE 59F ETC
                    COMPUTE #PD-UP-DT = #ISS-DT + (#PLAN-FLEX-N2 * 10000)
                  END-IF
                END-IF
              END-IF
            END-IF
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
END-IF
*
END-SUBROUTINE
*
*****************************
DEFINE SUBROUTINE UPPER-LOWER       /* DW42
*****************************
*
RESET #FOUND-COMMA
FOR #I1 2 TO 25
  IF #HOLD-NAME-CHAR (#I1) = ','
    MOVE TRUE TO #FOUND-COMMA
    MOVE TRUE TO #CAP-1RST-LETTER-OF-SUFFIX
    ESCAPE TOP
  END-IF
*
  IF #CAP-1RST-LETTER-OF-SUFFIX
    RESET #CAP-1RST-LETTER-OF-SUFFIX
    ESCAPE TOP
  END-IF
*
  IF #FOUND-COMMA
      AND #HOLD-NAME-CHAR (#I1) = 'I' OR = 'V' OR = 'X'
      AND #HOLD-NAME-CHAR (#I1 + 1) = 'I' OR = 'V' OR = 'X' OR = ' '
    ESCAPE TOP
  END-IF
*
  FOR #I2 1 TO 26
    IF #HOLD-NAME-CHAR (#I1) = #UPPER (#I2)
      MOVE #LOWER (#I2) TO #HOLD-NAME-CHAR (#I1)
    END-IF
  END-FOR
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-AT-DFAS-CHANGES   /* DW43
* * * * * * * * * * * * * * * * * * * *
*
MOVE TRUE TO #DOING-ATS
*
READ AT-V BY SSN
  write '=' ssn
  RESET #FOUND-ST
  FIND ST-V WITH SSN = AT-V.SSN
    IF ST-V.PROCESS-IND = 'C'   /* Is either a Contact or a Pending AT
      ESCAPE TOP
    END-IF
*
    MOVE TRUE TO #FOUND-ST
  END-FIND
*
  IF #FOUND-ST
      AND (AT-STATUS = 'PI' OR = 'PC')             /* CAP New Member
      AND (ST-V.ALOT-AMT NE 0)                     /* Already has ALOT
    WRITE AT-V.ID-NUMBER ST-V.ID-NUMBER 'AT with ST with existing ALOT- bypassed'
  END-IF
*
  write '=' #found-st '=' at-v.alot-chg-auth '=' at-status
  IF  (NOT AT-STATUS = 'PI' OR = 'PC')               /* CAP New Member
      OR (AT-V.ALOT-CHG-AUTH NE 'Y')    /* AT does not have D or A or B
*   OR (#FOUND-ST AND (ST-V.ALOT-AMT NE 0))          /* Already has ALOT
    ESCAPE TOP
  END-IF
*
  MOVE *DATN TO #YYYYMMDD
  SUBTRACT AT-V.DATE-OF-BIRTH FROM #YYYYMMDD
  MOVE #YYYY TO #ISS-AGE
*
  IF AT-V.SMOKER-FLAG = 'N' OR = ' '
    MOVE 'N' TO #SMOKER-FLAG
  ELSE
    MOVE 'S' TO #SMOKER-FLAG
  END-IF
*
  COMPUTE #FACE-AMT = (FACE-AMT-UNITS * 1000) + FACE-AMT-DOLS
  MOVE #FACE-AMT TO #FACE-9
  RESET #FLEX-POLICY
  COMPUTE #DIVIDEND = #FACE-AMT / 5000
*
  IF (EXCH-1035 NE 0) OR (LUMP-SUM NE 0)
      OR (NOT AT-V.PLAN = ' ' OR = '7P' OR = '20' OR = '30' OR = 'OL' OR = 'SP'
      OR= 'GP2'                               /* NG2
      OR = 'GPL')                             /* DW61
*     OR = 'RT' OR = 'LT')                                      /* YK1
      OR (#REM NE 0)
*   IF (AT-V.PLAN-A1 LT 'U') OR (AT-V.PLAN-A1 GT 'Z')           /* YK1
    IF (NOT FUNCTION-TERM-POLICY(<AT-V.PLAN>))                  /* YK1
      MOVE TRUE TO #FLEX-POLICY
    END-IF
  END-IF
*
  IF #FLEX-POLICY
    WRITE AT-V.ID-NUMBER 'Cannot process Flex-Policies'
  END-IF
*
  MOVE *DATN TO #YYYYMMDD /* calc premium based on 1st of next month
  RESET #DD               /* since CAP eff date will be then
  ADD 1 TO #MM
*
  IF #MM GT 12
    SUBTRACT 12 FROM #MM
    ADD 1 TO #YYYY
  END-IF
*
* IF #FLEX-POLICY
*   MOVE #FLEX-ANN-PREM TO #APREM
* ELSE
  IF AT-V.RATING-CODE = #CLASS-1 MOVE 'SB1' TO #CGA-SCR-SUFFIX END-IF  /* PM44
  IF AT-V.RATING-CODE = #CLASS-2 MOVE 'SB2' TO #CGA-SCR-SUFFIX END-IF  /* PM44
  IF AT-V.RATING-CODE = #CLASS-3 MOVE 'SB3' TO #CGA-SCR-SUFFIX END-IF  /* PM44
  RESET #APREM
  CALLNAT 'GPREMSXX' #CGA-SCR-COMMAND #CGA-SCR-ID #CGA-SCR-SUFFIX
    AT-V.PLAN #ISS-AGE #APREM #YYYYMMDD #SMOKER-FLAG #FACE-9
    AT-V.SEX
* END-IF
*
  RESET #MON-PREM
  IF NOT AT-V.PLAN = 'SP'
      OR (NOT IS-ANNUITY-LIFE(<AT-V.PLAN>))      /* TT2
    COMPUTE #MON-PREM = #APREM / 12
  END-IF
*
  RESET #LOAN-PMT
  IF CAP-IND = 'Y' AND (CAP-LOAN-AMT NE 0)
      AND AT-V.CAP-TYPE = 'G'                                              /* PM63
    DECIDE ON FIRST VALUE CAP-LOAN-AMT
      VALUE 5000
        IF CAP-TERM = 48 MOVE 107.25 TO #LOAN-PMT END-IF
        IF CAP-TERM = 36 MOVE 141.94 TO #LOAN-PMT END-IF
      VALUE 4000
        IF CAP-TERM = 48 MOVE  85.80 TO #LOAN-PMT END-IF
        IF CAP-TERM = 36 MOVE 113.55 TO #LOAN-PMT END-IF
      VALUE 3000
        IF CAP-TERM = 48 MOVE 64.35 TO #LOAN-PMT END-IF
        IF CAP-TERM = 36 MOVE 85.16 TO #LOAN-PMT END-IF
      VALUE 2500
        IF CAP-TERM = 48 MOVE 53.62 TO #LOAN-PMT END-IF
        IF CAP-TERM = 36 MOVE 70.97 TO #LOAN-PMT END-IF
      VALUE 2000
        IF CAP-TERM = 48 MOVE 42.90 TO #LOAN-PMT END-IF
        IF CAP-TERM = 36 MOVE 56.77 TO #LOAN-PMT END-IF
      VALUE 1000
        IF CAP-TERM = 48 MOVE 21.45 TO #LOAN-PMT END-IF
        IF CAP-TERM = 36 MOVE 28.38 TO #LOAN-PMT END-IF
      NONE IGNORE
    END-DECIDE
  END-IF
*
  COMPUTE #CALC-TOT-ALOT-AMT = #LOAN-PMT + #MON-PREM + ALLOT-STRT-AMT
*
  ADD 1 TO #CAP-STARTS
*         setup for Start-file
  write '=' at-v.id-number  #calc-tot-alot-amt
  MOVE TRUE TO #START-ALOT
  MOVE AT-V.ID-NUMBER TO ST-V.ID-NUMBER
  MOVE AT-V.SSN TO ST-V.SSN
  MOVE #CALC-TOT-ALOT-AMT TO #NEW-ALOT
  MOVE '.00' TO #CURR-ALOT-DISP  /* DW20
  MOVE EDITED #CALC-TOT-ALOT-AMT  (EM=ZZZZZ.99) TO #NEW-ALOT-DISP
  MOVE LEFT #NEW-ALOT-DISP  TO #NEW-ALOT-DISP
  MOVE AT-V.MIL-SERVICE TO ST-V.MILITARY-SERVICE
  MOVE AT-V.NAME TO ST-V.NAME
  MOVE 'A' TO #ASSUMED-MIL-STAT
  RESET #NUM-ACT
  RESET #STORE-NOTES (*)
*
  RESET #FMT-NAME
  PERFORM FORMAT-NAME-FLD
*
  PERFORM ACT-ALOT-START
END-READ
*
RESET #DOING-ATS
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-SSN     /* PM64
* * * * * * * * * * * * * * * * * * * *
*
RESET #SSN
FIND (1) CT-V WITH CT-V.CONTACT-ID = ST-V.MEMBER-CONTACT-ID
  #SSN-D := CT-V.SSN
  WRITE (11) 'FOund SSN' 1X CT-V.SSN 1X ST-V.ID-NUMBER
*
  FOR #SSN-I 1 TO 5
    WRITE (11) 'Looking through SSN' 1X #S-SSN (#SSN-I)
    IF #S-SSN (#SSN-I) = #SSN-D
      #SSN-D := #S-SSN-DFAS (#SSN-I)
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-FIND
*
END-SUBROUTINE
*
END
