* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHP09P0    - PRINT PRE-AUTH-DEBIT REPORT
*                         - AND CREATE NOTES FOR ## ERRS AND EXCP
*
*  THIS PROGRAM RUNS IN BATCH MODE ONLY
*******************************************
*                       MODIFICATION LOG
* USER DATE     TAG  REASON
* DRW  05192005 DW1  Put Pol Num on PADSTART Letter
* DRW  02242006 DW2  Use Owner name & address not insured for EZ-PAY
* DRW  03282006 DW3  process dues with EZ-pay start
* DRW  04172006 DW4  Get correct dues and CIP AMT
* SAG-AB 20060828 Removed carriage control not produced in Unix file
* YAK  01262006 YAK  Added NEWPAGE (8) for letters
* DRW  03302007 DW5 Chg Write (4) to (7)
* DRW 01/25/2008 DW6 Add TAB DELIM File for PADFILE Detail
* RSE  09182009 RE1  Change PROCESS-IND/600K logic for Unification
* vxt  11/23/2010 vt1 Change the length of the input field and dear-formated-name fields.
* NGG 02/14/2012 NG1  Premier services
* NGG 20131023   NG2  Address normalization
* vxt 12/30/2013 vt2 add on error processing
*******************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL  USING G3500AAD
LOCAL USING GONERLXX                        /* vt2

LOCAL USING SVCA0003                          /* NG1
LOCAL
1 #MSG                (A) DYNAMIC             /* NG1
*
1 #JCL-PARM         (A32)
1 REDEFINE #JCL-PARM
  2 #PARM-DATE      (N8)
  2 REDEFINE #PARM-DATE
    3 #PARM-MM      (N2)
    3 #PARM-DD      (N2)
    3 #PARM-YYYY    (N4)
  2 REDEFINE #PARM-DATE
    3 #PARM-MM-A    (A2)
    3 #PARM-DD-A    (A2)
    3 #PARM-YYYY-A  (A4)
  2 REDEFINE #PARM-DATE
    3 #PARM-DATE-X  (A8)
*
1 #C-RUN-DT-YYYYMMDD (N8)
1 REDEFINE #C-RUN-DT-YYYYMMDD
  2 #C-RUN-DT-YYYY    (N4)
  2 #C-RUN-DT-MM      (N2)
  2 #C-RUN-DT-DD      (N2)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #CENT           (N2)
  2 #YY             (N2)
  2 REDEFINE #YY
    3 #YY-A          (A2)
  2 #MM             (N2)
  2 REDEFINE #MM
    3 #MM-A          (A2)
  2 #DD             (N2)
  2 REDEFINE #DD
    3 #DD-A          (A2)
1 REDEFINE #YYYYMMDD
  2 #YYYY           (N4)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER             (N6)
  2 NOTE-REC-IND          (A1)
  2 PROCESS-IND
  2 PAD-CODE
  2 MEMBER-CONTACT-ID   /* NG2
*  2 S-ADDRESS-1        /* NG2
  2 X-ALT-LP-AMT    (9)
  2 X-ALT-LP-IND    (9)
  2 X-ALT-LP-AMT-2    (9)
  2 X-ALT-LP-IND-2    (9)
  2 STATUS      (9)
  2 PAY-STATUS  (9)
  2 MODE        (9)
  2 ANNUAL-PREM (9)
  2 OWNERSHIP-FLAG (9)
*
1 #FST-X   (I2)
1 #DUES    (N3.2)
1 #PAD-X     (I2)    /* DW2
1 #DUE-X     (I2)    /* DW4
1 #TOT-MOD-E      (P5.2)
1 #TOT-MOD-E-DISP (A10)
1 #FORMAT-CN            (A7)
* 1 #DEAR-FORMATED-NAME   (A45)                      /* vt1
1 #SCR-ZIP-BAR-CODE     (A14)
1 #EZ-PAD-STRT-NUM      (N5)
1 #FORM-IND             (A3)
1 #MSG-FORM-IND         (A3)
1 #INT      (I2)
1 #NOTE-TEXT (A60/10)
1 #CLERK   (A3) INIT <'EDS'>
1 #COMP-LBL  (A6) INIT <'AAFMAA'>
1 #AAFM-AFSC      (N1)
1 #HOLD-AAFM-AFSC (N1)
*
1 #PADC-EXTRACT               (A94)
1 REDEFINE #PADC-EXTRACT
  2 #PADC-REC-TYPE             (A1)
  2 #PADC-REMAINING            (A93)
  2 REDEFINE #PADC-REMAINING
    3 #PADC-DT-TRAN-CODE        (A2)
    3 #PADC-DT-RCV-DFI-ID       (A9)
    3 #PADC-DT-DFI-ACCT-NUM     (A17)
    3 #PADC-DT-AMT              (N8.2)
    3 #PADC-DT-INDIV-ID         (A15)
    3 #PADC-DT-INDIV-NAME       (A22)
    3 #PADC-DT-DISC-DATA        (A2)
    3 #PADC-DT-ADD-REC-IND      (N1)
    3 #PADC-DT-TRACE-NUMBER-ABA (A8)
    3 #PADC-DT-TRACE-NUMBER     (N7)
  2 REDEFINE #PADC-REMAINING
    3 #PADC-BC-SCV-CL-CODE      (N3)
    3 #PADC-BC-ENTRY-COUNT      (N6)
    3 #PADC-BC-ENTRY-HASH       (N10)
    3 #PADC-BC-DEBIT-TOTAL-AMT  (N10.2)
    3 #PADC-BC-CREDIT-TOTAL-AMT (N10.2)
    3 #PADC-BC-RSV              (A50)
  2 REDEFINE #PADC-REMAINING
    3 #PADC-FC-BATCH-COUNT      (N6)
    3 #PADC-FC-BLOCK-COUNT      (N6)
    3 #PADC-FC-ENTRY-COUNT      (N8)
    3 #PADC-FC-ENTRY-HASH       (N10)
    3 #PADC-FC-DEBIT-TOTAL-AMT  (N10.2)
    3 #PADC-FC-CREDIT-TOTAL-AMT (N10.2)
    3 #PADC-FC-RSV              (A38)
    3 #PADC-FC-LAST-POS         (A1)
*
1 #EEXCP-EXTRACT               (A133)
1 REDEFINE #EEXCP-EXTRACT
**2 #EE-CC                     (A1)    /* SAG-AB 20060828
  2 #EE-CN                     (A6)
  2 REDEFINE #EE-CN
    3 #EE-CN-N                  (N6)
  2 #EE-FILL-1                 (A4)
  2 #EE-NAME                   (A58)                                         /* vt1 was 25
  2 #EE-FILL-2                 (A14)                                         /* vt1 was 13
  2 #EE-MSG                    (A50)
  2 REDEFINE #EE-MSG
    3 #EE-##                    (A2)
    3 #EE-LAST-48               (A48)
    3 REDEFINE #EE-LAST-48
      4 #EE-PAD-START-MSG        (A11)
      4 #EE-FILL-3               (A9)
      4 #EE-PAD-1ST-DEBIT        (A10)
      4 #EE-FILL-4               (A9)
      4 #EE-PAD-REG-DEBIT        (A9)
*
1 #I1             (I2)
1 #I2             (I2)
1 #LST-AST-LINE   (I2)
1 #ERR-MSG        (A50)
1 #POL-NUM        (A16)    /* DW1
1 #TAB       (A1) INIT <H'09'>
1 #EXTRACT       (A100)                /* DW6
1 #AMT-1        (A10)
*
END-DEFINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
ON ERROR                                              /* vt2 \/
  #BATCH-LITERAL-1 := #EE-CN-N
  INCLUDE GABNDCX1                                         
END-ERROR                                             /* vt2 /\ 
*
FORMAT  PS=62 LS=133
WRITE   TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'PRE-AUTHORIZED DEBIT LISTING '
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
FORMAT (3) PS=62 LS=133
WRITE  (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'PAD LISTING '
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
FORMAT (4) PS=62 LS=133
WRITE  (4) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'CRITICAL Errors & Exceptions'
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
FORMAT (5) PS=62 LS=133
WRITE  (5) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'All other Errors & Exceptions'
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
FORMAT (6) PS=62 LS=133
WRITE  (6) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  #COMP-LBL 'Sorted Errors & Exceptions'
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
FORMAT (7) PS=62 LS=133                                         /* DW5
WRITE  (7) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'CRITICAL Errors & Exceptions'
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
COMPRESS 'PROGRAM:  ATHP09P0     PAD LISTING      DATE:' *DATN 'TIME:' *TIMN
  INTO #EXTRACT
WRITE WORK FILE 5 #EXTRACT
*
COMPRESS 'TRAN-CODE'       /* DW6
  #TAB 'ABA-Number'
  #TAB 'Account-Number'
  #TAB 'AMT'
  #TAB 'ID'
  #TAB 'Name'
  #TAB 'Trace-Nbr'
  INTO #EXTRACT LEAVING NO
WRITE WORK FILE 5 #EXTRACT
*
READ WORK 1 ONCE RECORD #JCL-PARM   /* PROGRAM CALL
READ WORK 1 ONCE RECORD #JCL-PARM   /* DATE ETC (110189123456789NAB ETC)
*
MOVE #PARM-MM TO #C-RUN-DT-MM
MOVE #PARM-DD TO #C-RUN-DT-DD
MOVE #PARM-YYYY TO #C-RUN-DT-YYYY
*
FOR #I1 1 TO 2
  REPEAT
    READ WORK 2 ONCE RECORD #PADC-EXTRACT
    AT END
      ESCAPE BOTTOM
    END-ENDFILE
*
    IF  #I1 = 1     /* 1ST PASS - BYPASS PRENOTE BATCH & FILE CONTROL
      IF  ((#PADC-REC-TYPE = '5') AND (#PADC-FC-LAST-POS = '2'))
          OR (#PADC-DT-TRAN-CODE = '28' OR = '38')
          OR ((#PADC-REC-TYPE = '8') AND (#PADC-FC-LAST-POS = '2'))
          OR (#PADC-REC-TYPE = '9')
        ESCAPE TOP
      END-IF
    ELSE             /* 2ND PASS - PROCESS PRENOTE BATCH & FILE CONTROL
      IF  ((#PADC-REC-TYPE = '5') AND (#PADC-FC-LAST-POS = '2'))
          OR (#PADC-DT-TRAN-CODE = '28' OR = '38')
          OR ((#PADC-REC-TYPE = '8') AND (#PADC-FC-LAST-POS = '2'))
          OR (#PADC-REC-TYPE = '9')
        IGNORE
      ELSE
        ESCAPE TOP
      END-IF
    END-IF
*
    IF #PADC-REC-TYPE = '6'
      MOVE EDITED #PADC-DT-AMT (EM=ZZ,ZZZ.99) TO #AMT-1
      MOVE LEFT #AMT-1 TO #AMT-1
      COMPRESS #PADC-DT-TRAN-CODE       /* DW6
        #TAB #PADC-DT-RCV-DFI-ID
        #TAB #PADC-DT-DFI-ACCT-NUM
        #TAB #AMT-1                  /* #PADC-DT-AMT
        #TAB #PADC-DT-INDIV-ID
        #TAB #PADC-DT-INDIV-NAME
        #TAB #PADC-DT-TRACE-NUMBER
        INTO #EXTRACT LEAVING NO
      WRITE WORK FILE 5 #EXTRACT
*
      DISPLAY (3) 'TRAN-CODE'    #PADC-DT-TRAN-CODE
        'ABA NUMBER'   #PADC-DT-RCV-DFI-ID
        'ACCT NUMBER'  #PADC-DT-DFI-ACCT-NUM
        'AMOUNT'       #PADC-DT-AMT
        'ID'           #PADC-DT-INDIV-ID
        'NAME'         #PADC-DT-INDIV-NAME
        'TRACE NBR'    #PADC-DT-TRACE-NUMBER
    END-IF
*
    IF #PADC-REC-TYPE = '8'
      WRITE (3) 'ENTRY-COUNT = '      #PADC-BC-ENTRY-COUNT
      WRITE (3) 'ENTRY-HASH  = '      #PADC-BC-ENTRY-HASH
      WRITE (3) 'DEBIT-AMT   = '      #PADC-BC-DEBIT-TOTAL-AMT
      WRITE (3) 'CREDIT-AMT  = '      #PADC-BC-CREDIT-TOTAL-AMT
    END-IF
*
    IF   (#PADC-REC-TYPE = '9')
        AND (#PADC-DT-TRAN-CODE NE '99')   /* IGNORE 999999999'S RECORDS
      WRITE (3) ' '
      WRITE (3) 'BATCH COUNT = '      #PADC-FC-BATCH-COUNT
      WRITE (3) 'BLOCK COUNT = '      #PADC-FC-BLOCK-COUNT
      WRITE (3) 'ENTRY-COUNT = '      #PADC-FC-ENTRY-COUNT
      WRITE (3) 'ENTRY-HASH  = '      #PADC-FC-ENTRY-HASH
      WRITE (3) 'DEBIT-AMT   = '      #PADC-FC-DEBIT-TOTAL-AMT
      WRITE (3) 'CREDIT-AMT  = '      #PADC-FC-CREDIT-TOTAL-AMT
    END-IF
*
    WRITE WORK 4 #PADC-EXTRACT
  END-REPEAT
END-FOR
*
REPEAT
  READ WORK 3 ONCE RECORD #EEXCP-EXTRACT
  AT END
    ESCAPE BOTTOM
  END-ENDFILE
*
* write '=' #ee-cn '=' #ee-name '=' #ee-last-48   '=' #ee-##     /* vt1
  IF #EE-## = MASK ('~')
    DISPLAY (4) 'CN' #EE-CN-N 'NAME' #EE-NAME 'MSG' #EE-LAST-48
    DISPLAY (7) 'CN' #EE-CN-N 'NAME' #EE-NAME 'MSG' #EE-LAST-48    /* DW5

* ELSE  /* below removed 7/31/2002 as per
*   IF #EE-CN = MASK (..NNNN)
*     DISPLAY (5) 'CN' #EE-CN-N 'NAME' #EE-NAME 'MSG' #EE-MSG
*   END-IF
  END-IF
*
  IF #EE-## NE '##'
    ESCAPE TOP
  END-IF
*
  MOVE #EE-MSG TO #NOTE-TEXT (1)
  MOVE 1 TO #INT
  CALLNAT 'E4205SDM' #EE-CN-N #INT #CLERK #NOTE-TEXT (1:10)
*
  END TRANSACTION
*
  IF   (#EE-PAD-START-MSG = 'EZ-PAY STRT')
      AND NOT AFFL-ONLY-CLIENT(<#EE-CN-N>)        /* RE1      AAFMAA CLIENT
*   AND (#EE-CN-N LT 600000)                    /* RE1
*
    MOVE #EE-CN-N TO #CGA-SCR-ID
    MOVE #EE-CN-N TO #FORMAT-CN
*
    RESET #PAD-X #POL-NUM    /* DW2
    FIND ST-V WITH MEMBER-KEY = #EE-CN    /* DW1
      FOR #I1 1 TO 9
        IF   (STATUS (#I1) = 'D')
            AND (((PAY-STATUS (#I1) LT '40') AND (MODE (#I1) = 'E'))
            OR   ((X-ALT-LP-AMT  (#I1) NE 0) AND (X-ALT-LP-IND(#I1) = '8'))
            OR   ((X-ALT-LP-AMT-2(#I1) NE 0) AND (X-ALT-LP-IND-2(#I1)='8')))
          MOVE #I1 TO #PAD-X                                  /* DW4
          CALLNAT 'GPLNMSXX' #POL-NUM ST-V.ID-NUMBER #I1 /* build POL-#
          ESCAPE BOTTOM
        END-IF
      END-FOR
*
*    Below used to make PAD START letters print when running ATHJME
*     IF PAD-CODE = 'V'   /* Remove prior to M/E
*       MOVE 1 TO #PAD-X
*     END-IF
    END-FIND
*
    IF  (#PAD-X GT 9)  /* Use policy 1 to determine ownership if no padx
        OR (#PAD-X = 0)
      MOVE 1 TO #PAD-X
    END-IF
*
    RESET #USE-SEC-ADDR                      /* DW2
    IF   (OWNERSHIP-FLAG (#PAD-X) = 'N')
*       AND (S-ADDRESS-1 NE ' ')
       AND SECONDARY-ADDR-EXIST (< ST-V.MEMBER-CONTACT-ID >)
      WRITE 'ATHP09P0' ST-V.ID-NUMBER 'Used 2nd ADDR for EZ Pay Ltr'
      MOVE TRUE TO #USE-SEC-ADDR
      RESET #CONTACT-SEG
    ELSE
      MOVE #PAD-X TO #CONTACT-SEG   /* DW2
    END-IF
*
    CALLNAT 'G3500SAD' #CGA-MASTER #PDA-AREA-G3500AAD
*
    IF #NUM-OWNERS NE 0
      WRITE 'ATHP09P0' ST-V.ID-NUMBER 'Used Owner Addr for EZ Pay Ltr'
    END-IF
*
*    IF #FULL-RANK = ' '                                                  /* vt1 \/
*      COMPRESS 'Dear' #FIRST-NAME #LAST-NAME INTO #DEAR-FORMATED-NAME
*    ELSE
*      COMPRESS 'Dear' #FULL-RANK #LAST-NAME INTO #DEAR-FORMATED-NAME
*    END-IF
*
*    COMPRESS #DEAR-FORMATED-NAME ':'
*         INTO #DEAR-FORMATED-NAME LEAVING NO
    compress #ext-dear-formated-name ':'
      into #ext-dear-formated-name leaving no
*                                                                         /* vt1 /\
    MOVE #EDS-ZIP-BAR-CODE TO #SCR-ZIP-BAR-CODE
*
    IF #EE-PAD-REG-DEBIT = '     $.00'
      WRITE ST-V.ID-NUMBER 'Reg PAD amt = 0'
      FIND ST-V WITH MEMBER-KEY = #EE-CN
        RESET #DUE-X                 /* DW4
        FOR #I1 1 TO 9
          IF (STATUS (#I1) = 'D')
              AND (PAY-STATUS (#I1) LT '40')
              AND (MODE (#I1) = 'E')
            COMPUTE #TOT-MOD-E = #TOT-MOD-E = (ANNUAL-PREM (#I1) / 12)
*
            IF #DUE-X NE 0     /* 1st mode E policy
              MOVE #I1 TO #DUE-X
            END-IF
          END-IF
*
          IF (X-ALT-LP-AMT  (#I1) NE 0) AND (X-ALT-LP-IND(#I1) = '8')
            ADD X-ALT-LP-AMT(#I1) TO #TOT-MOD-E     /* DW4
          END-IF
*
          IF (X-ALT-LP-AMT-2 (#I1) NE 0) AND (X-ALT-LP-IND-2(#I1) = '8')
            ADD X-ALT-LP-AMT-2 (#I1) TO #TOT-MOD-E   /* DW4
          END-IF
        END-FOR
*
        IF (#DUE-X GE 1) AND (#DUE-X LE 9) /* Get dues for 1st
          CALLNAT 'GDUESSXX' ST-V.ID-NUMBER #DUE-X #DUES  /* DW4
          ADD #DUES TO #TOT-MOD-E   /* DW3
*
          IF #DUES NE 0
            WRITE ST-V.ID-NUMBER 'EZ-PAY Dues = ' #DUES
          END-IF
        END-IF
*                                     NG1  Start
        RESET PARM-SVC
        PARM-SVC.SVC-PLAN      := 'PSM'
        PARM-SVC.SVC-MEMBER-ID := ST-V.ID-NUMBER
        PARM-SVC.ACTION        := 'GET'
        PARM-SVC.TRANSACTION-TIMN := *TIMN
        PARM-SVC.TRANSACTION-DATN := *DATN
        CALLNAT 'SVCN0003' PARM-SVC #MSG
        IF PARM-SVC.SVC-MODE = 'E'
            AND PARM-SVC.SVC-PAY-UP NE 'Y'
          ADD PARM-SVC.SVC-MONTHLY-RATE TO #TOT-MOD-E
          WRITE ST-V.ID-NUMBER 'EZ-PAY premier Service = ' PARM-SVC.SVC-MONTHLY-RATE
        END-IF
*                                     NG1 End
      END-FIND
*
      MOVE EDITED #TOT-MOD-E (EM=Z,ZZZ.99) TO #TOT-MOD-E-DISP
      COMPRESS '$' #TOT-MOD-E-DISP INTO #TOT-MOD-E-DISP LEAVING NO
      MOVE #TOT-MOD-E-DISP TO #EE-PAD-REG-DEBIT
      WRITE ST-V.ID-NUMBER 'final reg amt =' #TOT-MOD-E
    END-IF
*
    MOVE 'PDS' TO #CGA-SCR-SUFFIX /* To ind EZPAY START for DAL
    ADD 1 TO #EZ-PAD-STRT-NUM
    NEWPAGE (8)                                              /* YAK
    WRITE (8) NOTITLE USING FORM 'ATHFPAD1'
*
  END-IF
END-REPEAT
*
* NEWPAGE (8)
* WRITE (8) /// 'NUM ez-PAY START LETTERS =' #EZ-PAD-STRT-NUM
WRITE  /// 'NUM ez-PAY START LETTERS =' #EZ-PAD-STRT-NUM
*
REPEAT
  READ WORK 3 ONCE RECORD #EEXCP-EXTRACT
  AT END
    ESCAPE BOTTOM
  END-ENDFILE
*
  write '='#ee-cn '=' #ee-name '=' #ee-last-48
*
  IF #EE-## = MASK ('~')
    MOVE #EE-LAST-48 TO #ERR-MSG
  ELSE
    IF #EE-CN = MASK (..NNNN)
      MOVE #EE-MSG TO #ERR-MSG
    ELSE
      ESCAPE TOP
    END-IF
  END-IF
*
*  IF #EE-CN-N LT 600000            /* RE1
  IF AFFL-ONLY-CLIENT(<#EE-CN-N>)     /* RE1
    MOVE 1 TO #AAFM-AFSC
  ELSE
    MOVE 2 TO #AAFM-AFSC
  END-IF
END-ALL
*
SORT BY #AAFM-AFSC #ERR-MSG #EE-NAME
    USING #EE-CN-N
*
  IF #HOLD-AAFM-AFSC NE 0
      AND #AAFM-AFSC NE #HOLD-AAFM-AFSC
*    MOVE 'AFSC' TO #COMP-LBL       /* RE1
    MOVE 'AFFL' TO #COMP-LBL        /* RE1
    NEWPAGE (6)
  END-IF
  MOVE #AAFM-AFSC TO #HOLD-AAFM-AFSC
*
  IF #ERR-MSG = MASK ('##EZ-PAY STRT') /* added 7/31/2002 as per KHB
    IGNORE
  ELSE
* Below is  the Final Sorted Errors amd Exceptions File
    DISPLAY (6) 'CN' #EE-CN-N 'NAME' #EE-NAME 'MSG' #ERR-MSG
  END-IF
*
END-SORT
*
END
