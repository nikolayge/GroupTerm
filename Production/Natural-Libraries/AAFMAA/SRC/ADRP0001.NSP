* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
************************************************************************
* PGM-ID: ADRP0001
* DESCRIPTION: DISPLAY CONTACT INFORMATION (VIEW ONLY)
************************************************************************
* MODIFICATION LOG
*
* USER   DATE       TAG  REASON
* RSE    12/03/2010 RE1  POPULATE CLERK-ID FOR NON-CN CONTACTS
* RSE    12/07/2010 RE2  Display "Missing Rank" when RANK-ID = 0
* RSE    03/15/2011 RE3  Display message for 3SR member
* RSE    03/25/2011 RE4  Add Member ID-NUMBER parameter in call to phone/email
* RSE    06/01/2011 RE5  Pass Spouse/Dependent Contact-ID to GUPCISXX
* NGG    06/18/2011 NG1  Contact type changes
* RSE    06/27/2011 RE6  Make PF4 on Member 'U' mode
************************************************************************
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX
LOCAL
1 #ENT-NAME   (A8/16)
1 #ENT-NBR    (A2/16)
1 #ENT-TEXT   (A67/16)
1 #ID         (N6)
1 #MEMBER-ID-NUMBER (N6)
1 #CONTACT-ID  (N8)
1 #CONTACT-ID-1(N8)             /* RE5
1 #HEADER1            (A78)
1 #HEADER2            (A78)
1 #SELECTION          (A1)
1 #CLERK-ID           (A3)
1 #CGA-SCR-COMMAND-CV (C)
1 #CGA-SCR-ID-CV      (C)
1 #CGA-SCR-SUFFIX-CV  (C)
1 #CN-OR-CI-TEXT      (A2)
1 #CI-TEXT            (A2)
*
1 #RANK-COLLECTION
  2 #NAME     (A8) INIT <'Rank'>
  2 #ENT-SIZE (I4)
  2 #ENT-BRWS (I4)
  2 #Shared   (A1)
  2 #ENT-ISN  (P8/99)
  2 #TEXT     (A67/5)
1 #ADDRESS-COLLECTION
  2 #NAME     (A8) INIT <'Address'>
  2 #ENT-SIZE (I4)
  2 #ENT-BRWS (I4)
  2 #Shared   (A1)
  2 #ENT-ISN  (P8/99)
  2 #TEXT     (A67/5)
1 #PHONE-COLLECTION
  2 #NAME     (A8) INIT <'Phone'>
  2 #ENT-SIZE (I4)
  2 #ENT-BRWS (I4)
  2 #ENT-ISN  (P8/99)
  2 #TEXT     (A67/5)
1 #EMAIL-COLLECTION
  2 #NAME     (A8) INIT <'Email'>
  2 #ENT-SIZE (I4)
  2 #ENT-BRWS (I4)
  2 #ENT-ISN  (P8/99)
  2 #TEXT     (A67/5)
1 #NOTES-COLLECTION
  2 #NAME     (A8) INIT <'Note'>
  2 #ENT-SIZE (I4)
  2 #ENT-BRWS (I4)
  2 #ENT-ISN  (P8/99)
  2 #TEXT     (A67/5)
1 #NN  (N2) 1 REDEFINE #NN
  2 #NN-A (A2)
*
1 #MSG                       (A72)
1 #MODE                      (A1)
1 #PAGE                      (N2)
1 #CV-TAB                    (C/18)
1 #SELECT                    (I4)     /* New = 1, Addr = 2 Phone = 3 Email = 4 Contact = 5 Rank = 7
1 #LNIX                      (N2)
1 #UPDATE                    (L) INIT <TRUE>
1 #SPACE-LINE                (L)
1 #CONTACT-TYPE              (A1)     /* NG1
*
1 CONTACT VIEW OF A-CONTACTS
  2 CONTACT-ID
  2 ID-NUMBER
  2 RANK-ID
  2 CONTACT-TYPE
1 A-ADD-POOL VIEW OF A-ADDRESS-POOL
  2 ADDRESS-POOL-ID (N8) 2 REDEFINE ADDRESS-POOL-ID
    3 ADDRESS-POOL-ID-A (A8)
1 PHONE-V VIEW OF A-CONTACT-PHONE
  2 PHONE-ID (N8) 2 REDEFINE PHONE-ID
    3 PHONE-ID-A (A8)
1 EMAIL-V VIEW OF A-CONTACT-EMAIL
  2 EMAIL-ID (N8) 2 REDEFINE EMAIL-ID
    3 EMAIL-ID-A (A8)
1 STATUS VIEW OF A-STATUS
  2 ID-NUMBER   /* RE
  2 PROCESS-IND
  2 MEMBER-CONTACT-ID
  2 INTRO-FLAG
  2 MILITARY-SERVICE
  2 DATE-OF-DEATH
  2 NUMBER-MEMBERSHIPS
  2 PLAN (1)
1 #TEXT-40                  (A40)
1 REDEFINE #TEXT-40                  /* RE6
  2 FILLER                  (A37)    /* RE6
  2 #TEXT-40-LAST-3         (A3)     /* RE6
1 #XML                      (A) DYNAMIC
1 #LINE-DATA                (A) DYNAMIC
1 #RESPONSE                 (A) DYNAMIC
1 #CRM-REQUEST              (I4)
1 #RESPONSE-DSPL            (A16)
1 #BROWSE
  2 #BROWSE-START   (I4)
  2 #COLLECTION     (I4/9)
  2 #ITEM           (I4/9)
1 #NEWITEM                   (I4) CONST <1>
1 #ADDRESS                   (I4) CONST <2>
1 #PHONE                     (I4) CONST <3>
1 #EMAIL                     (I4) CONST <4>
1 #CONTACT                   (I4) CONST <5>
1 #NOTES                     (I4) CONST <6>
1 #RANK                      (I4) CONST <7>
1 #16                        (N2) CONST <16>
1 BLANK                      (A1) CONST <' '>
1 NEW-ENTITY                 (A3) CONST <'NEW'>
1 #TEST                      (A8) CONST <'CR249'>
1 #K          (I4)
1 #J          (I4)
1 #I          (I4)
*
END-DEFINE
*
INCLUDE GONERCXX
*
DEFINE WINDOW Maintain
  SIZE 15 * 40
  BASE 1/10
  FRAMED ON POSITION SYMBOL AUTO
*
SET KEY PF3  NAMED 'Exit'
SET KEY PF4  NAMED 'Add'
SET KEY PF12 NAMED 'Reln'
*
PERFORM INIT-STEPS
IF #CONTACT-ID = 0
  ESCAPE ROUTINE
END-IF
*
MOVE (AD=P) TO #CV-TAB (*)
#CGA-SCR-COMMAND := '*'
PERFORM ENTITIES-DATA
*
REPEAT
  INPUT WITH TEXT #MSG USING MAP 'ADRME001'
  PERFORM GET-SELECT
  DECIDE ON FIRST VALUE OF *PF-KEY
    VALUE 'PF4'
      DECIDE ON FIRST VALUE OF #SELECT
        VALUE #NEWITEM
          PERFORM ADD-CONTACT-INFO
        VALUE #CONTACT
*          MOVE 'V' TO #MODE                /* RE6
          MOVE 'U' TO #MODE                 /* RE6
          CALLNAT 'GUPCISXX'
*            #CONTACT-ID                    /* RE5
            #CONTACT-ID-1                   /* RE5
            #CONTACT-ID
            #CGA-ORIG-COMMAND
            #ID
            #CGA-USER-COMPANY
            #CGA-CLERK
            #MODE
            #MSG
          RESET #MSG                        /* RE6
        VALUE #RANK
          IF #CONTACT-TYPE = 'O'                                   /* NG1
*            MOVE 'V' TO #MODE                /* RE6
            MOVE 'U' TO #MODE                 /* RE6
            CALLNAT 'GUPCISXX'
              #CONTACT-ID-1
              #CONTACT-ID
              #CGA-ORIG-COMMAND
              #ID
              #CGA-USER-COMPANY
              #CGA-CLERK
              #MODE
              #MSG
            RESET #MSG                      /* RE6
          ELSE
            GET CONTACT #RANK-COLLECTION.#ENT-ISN ( 1 )       /* RSE only one RANK-ID per member
            IF #CGA-SCR-ID = 0                                /* RE1
              MOVE #CLERK-ID TO #CGA-CLERK                    /* RE1
            END-IF                                            /* RE1
            CALLNAT 'ADRN0008' #CONTACT-ID #MEMBER-ID-NUMBER CONTACT.RANK-ID #CGA-CLERK #MODE #MSG
          END-IF
        VALUE #ADDRESS
          GET A-ADD-POOL #ADDRESS-COLLECTION.#ENT-ISN ( #NN )
          CALLNAT 'ADRN0002' #CONTACT-ID A-ADD-POOL.ADDRESS-POOL-ID
        VALUE #PHONE
          GET PHONE-V #PHONE-COLLECTION.#ENT-ISN ( #NN )
          CALLNAT 'ADRN0011' #CONTACT-ID #MEMBER-ID-NUMBER PHONE-V.PHONE-ID  /* RE4
        VALUE #NOTES
          CALLNAT 'GUPNTSXX' #CONTACT-ID #UPDATE
        VALUE #EMAIL
          GET EMAIL-V #EMAIL-COLLECTION.#ENT-ISN ( #NN )
          #MODE := 'U'
          CALLNAT 'ADRNEM01' #CONTACT-ID #MEMBER-ID-NUMBER EMAIL-V.EMAIL-ID #CGA-CLERK #MODE #MSG  /* RE4
        ANY VALUE
          PERFORM ENTITIES-DATA
        NONE VALUE IGNORE
      END-DECIDE
      ESCAPE TOP
    VALUE 'PF12'
      DECIDE ON FIRST VALUE OF #SELECT
        VALUE #CONTACT
          CALLNAT 'GPF12SXX' #CONTACT-ID
        VALUE #ADDRESS
          GET A-ADD-POOL #ADDRESS-COLLECTION.#ENT-ISN ( #NN )
          CALLNAT 'ADRN0F12' #CONTACT-ID A-ADD-POOL.ADDRESS-POOL-ID 'V'
        NONE VALUE IGNORE
      END-DECIDE
      ESCAPE TOP
    VALUE 'ENTR'
      IF #CGA-SCR-COMMAND NE '*'
        ASSIGN #CRM-REQUEST = 2
        CALLNAT 'MBRDATA'
          #CGA-ISN
          #XML
          #LINE-DATA
          #RESPONSE
          #CRM-REQUEST
        FETCH 'G1000PXX'
      END-IF
      IF #CONTACT-ID NE CONTACT.CONTACT-ID
        RESET #CGA-SCR-ID
        FETCH 'ADRP0001' #CGA-SCR-ID #MEMBER-ID-NUMBER #CONTACT-ID #CLERK-ID  /* RE4
      END-IF
      DECIDE ON FIRST VALUE OF #SELECT
        VALUE #CONTACT
*          MOVE 'V' TO #MODE                /* RE6
          MOVE 'U' TO #MODE                 /* RE6
          CALLNAT 'GUPCISXX'
*            #CONTACT-ID                    /* RE5
            #CONTACT-ID-1                   /* RE5
            #CONTACT-ID
            #CGA-ORIG-COMMAND
            #ID
            #CGA-USER-COMPANY
            #CGA-CLERK
            #MODE
            #MSG
          RESET #MSG                        /* RE6
        VALUE #RANK
          IF #CONTACT-TYPE = 'O'                                   /* NG1
*            MOVE 'V' TO #MODE              /* RE6
            MOVE 'U' TO #MODE               /* RE6
            CALLNAT 'GUPCISXX'
              #CONTACT-ID-1
              #CONTACT-ID
              #CGA-ORIG-COMMAND
              #ID
              #CGA-USER-COMPANY
              #CGA-CLERK
              #MODE
              #MSG
            RESET #MSG                        /* RE6
          ELSE
            GET CONTACT #RANK-COLLECTION.#ENT-ISN ( 1 )       /* RSE only one RANK-ID per member
            IF #CGA-SCR-ID = 0                                /* RE1
              MOVE #CLERK-ID TO #CGA-CLERK                    /* RE1
            END-IF                                            /* RE1
            CALLNAT 'ADRN0008' #CONTACT-ID #MEMBER-ID-NUMBER CONTACT.RANK-ID #CGA-CLERK #MODE #MSG
          END-IF
        VALUE #ADDRESS
          GET A-ADD-POOL #ADDRESS-COLLECTION.#ENT-ISN ( #NN )
          CALLNAT 'ADRN0002' #CONTACT-ID A-ADD-POOL.ADDRESS-POOL-ID
        VALUE #PHONE
          GET PHONE-V #PHONE-COLLECTION.#ENT-ISN ( #NN )
          CALLNAT 'ADRN0011' #CONTACT-ID #MEMBER-ID-NUMBER PHONE-V.PHONE-ID  /* RE4
        VALUE #NOTES
          CALLNAT 'GUPNTSXX' #CONTACT-ID #UPDATE
        VALUE #EMAIL
          GET EMAIL-V #EMAIL-COLLECTION.#ENT-ISN ( #NN )
          #MODE := 'U'
          CALLNAT 'ADRNEM01' #CONTACT-ID #MEMBER-ID-NUMBER EMAIL-V.EMAIL-ID #CGA-CLERK #MODE #MSG  /* RE4
        ANY VALUE
          PERFORM ENTITIES-DATA
        NONE VALUE IGNORE
      END-DECIDE
      ESCAPE TOP
    VALUE 'PF7'
      IF #PAGE > 1
        SUBTRACT 1 FROM #PAGE
        PERFORM SCREEN-DATA
      END-IF
    VALUE 'PF8'
      ADD 1 TO #PAGE
      IF #COLLECTION ( #PAGE ) > 0
        PERFORM SCREEN-DATA
      ELSE
        SUBTRACT 1 FROM #PAGE
      END-IF
    NONE VALUE IGNORE
  END-DECIDE
  UNTIL *PF-KEY = 'PF3'
END-REPEAT
*
DEFINE ENTITIES-DATA
/*     =============
RESET #BROWSE

RESET INITIAL #RANK-COLLECTION                        /* RE1
  #ADDRESS-COLLECTION
  #PHONE-COLLECTION
  #EMAIL-COLLECTION
  #NOTES-COLLECTION
CALLNAT 'ADRN0004' #CONTACT-ID #HEADER1 #HEADER2     /* NG1 refresh
CALLNAT 'ADRNE009'
  #CONTACT-ID
  #RANK-COLLECTION.#ENT-SIZE
  #RANK-COLLECTION.#ENT-ISN (*)
CALLNAT 'ADRNE001'
  #CONTACT-ID
  #ADDRESS-COLLECTION.#ENT-SIZE
  #ADDRESS-COLLECTION.#ENT-ISN (*)
CALLNAT 'ADRNE011'
  #CONTACT-ID
  #PHONE-COLLECTION.#ENT-SIZE
  #PHONE-COLLECTION.#ENT-ISN (*)
CALLNAT 'ADRNE021'
  #CONTACT-ID
  #EMAIL-COLLECTION.#ENT-SIZE
  #EMAIL-COLLECTION.#ENT-ISN (*)
CALLNAT 'ADRNE031'
  #CONTACT-ID
  #NOTES-COLLECTION.#ENT-SIZE
  #NOTES-COLLECTION.#ENT-ISN (*)

/* DISPLAY ORDER
MOVE 1 TO #RANK-COLLECTION.#ENT-BRWS
MOVE 2 TO #ADDRESS-COLLECTION.#ENT-BRWS
MOVE 3 TO #PHONE-COLLECTION.#ENT-BRWS
MOVE 4 TO #EMAIL-COLLECTION.#ENT-BRWS
MOVE 5 TO #NOTES-COLLECTION.#ENT-BRWS

#PAGE := 1 #COLLECTION (1) := 1 #ITEM  (1) := 1
PERFORM SCREEN-DATA

IF #LNIX > #16
  SET KEY PF8  NAMED 'PgDn'
  SET KEY PF7  NAMED 'PgUp'
ELSE
  SET KEY PF7=OFF
  SET KEY PF8=OFF
END-IF

END-SUBROUTINE

DEFINE SCREEN-DATA
/*     ===========
IF #COLLECTION ( #PAGE ) <= 0
  ESCAPE ROUTINE
END-IF
#SPACE-LINE := TRUE

RESET
  #ENT-NAME   (*)
  #ENT-NBR    (*)
  #ENT-TEXT   (*)
  #LNIX
#I := #COLLECTION ( #PAGE )
#BROWSE-START := #ITEM ( #PAGE )

REPEAT UNTIL #I > 5                              /* RE1
    OR #LNIX > #16
*  print #I #BROWSE-START
  DECIDE FOR FIRST CONDITION
    WHEN #RANK-COLLECTION.#ENT-BRWS = #I
      PERFORM RANK-BROWSE
    WHEN #ADDRESS-COLLECTION.#ENT-BRWS = #I
      PERFORM ADDRESS-BROWSE
    WHEN #PHONE-COLLECTION.#ENT-BRWS = #I
      PERFORM PHONE-BROWSE
    WHEN #EMAIL-COLLECTION.#ENT-BRWS = #I
      PERFORM EMAIL-BROWSE
    WHEN #NOTES-COLLECTION.#ENT-BRWS = #I
      PERFORM NOTES-BROWSE
    WHEN ANY
      #BROWSE-START := 1
    WHEN NONE IGNORE
  END-DECIDE
  ADD 1 TO #I
END-REPEAT

END-SUBROUTINE

DEFINE RANK-BROWSE
/*     ==============
IF #LNIX > #16
  ESCAPE ROUTINE
END-IF
*
IF #CONTACT-TYPE = 'O'                                   /* NG1
  #RANK-COLLECTION.#NAME := 'POC'
END-IF
*
IF #RANK-COLLECTION.#ENT-SIZE = 0                            /* RE2 start
  IF CONTACT.ID-NUMBER = 0 AND #CONTACT-TYPE NE 'O'
    ESCAPE ROUTINE
  ELSE
    MOVE 1 TO #RANK-COLLECTION.#ENT-SIZE
  END-IF
END-IF                                                       /* RE2 END
*
IF #SPACE-LINE
  ADD 1 TO #LNIX
  RESET #SPACE-LINE
END-IF
*
IF #LNIX > #16
  #K := #PAGE + 1
  #ITEM ( #K ) := 1
  #COLLECTION ( #K ) := #RANK-COLLECTION.#ENT-BRWS
  ESCAPE ROUTINE
END-IF
*
#SPACE-LINE := TRUE
FOR #J #BROWSE-START TO #RANK-COLLECTION.#ENT-SIZE
  CALLNAT 'ADRNE008' #CONTACT-ID
    #RANK-COLLECTION.#ENT-ISN ( #J )
    #RANK-COLLECTION.#TEXT (*)
  MOVE EDITED #J (EM=Z9) TO #ENT-NBR ( #LNIX)
  RESET #ENT-NBR ( #LNIX)
  MOVE (AD=I) TO #CV-TAB ( #LNIX )
  #ENT-NAME (#LNIX) := #RANK-COLLECTION.#NAME
  #K := 1
  REPEAT
    #ENT-TEXT (#LNIX) := #RANK-COLLECTION.#TEXT (#K)
    ADD 1 TO #LNIX
    ADD 1 TO #K
    UNTIL #LNIX > #16 OR #RANK-COLLECTION.#TEXT (#K) EQ BLANK
  END-REPEAT
  IF #LNIX > #16
    #K := #PAGE + 1
    #ITEM ( #K ) := #J
    #COLLECTION ( #K ) := #RANK-COLLECTION.#ENT-BRWS
    RESET #SPACE-LINE
    ESCAPE BOTTOM
  END-IF
END-FOR
END-SUBROUTINE
*
DEFINE NOTES-BROWSE
/*     ============
IF #LNIX > #16 ESCAPE ROUTINE END-IF

IF #SPACE-LINE
  ADD 1 TO #LNIX
  RESET #SPACE-LINE
END-IF

IF #LNIX > #16
  #K := #PAGE + 1
  #ITEM ( #K ) := 1
  #COLLECTION ( #K ) := #NOTES-COLLECTION.#ENT-BRWS
  ESCAPE ROUTINE
END-IF

#SPACE-LINE := TRUE
FOR #J #BROWSE-START TO #NOTES-COLLECTION.#ENT-SIZE
  CALLNAT 'ADRNE032' #CONTACT-ID
    #NOTES-COLLECTION.#ENT-ISN ( #J )
    #NOTES-COLLECTION.#TEXT (*)

  MOVE EDITED #J (EM=Z9) TO #ENT-NBR ( #LNIX)
  MOVE (AD=I) TO #CV-TAB ( #LNIX )
  #ENT-NAME (#LNIX) := #NOTES-COLLECTION.#NAME
  #K := 1
  REPEAT
    #ENT-TEXT (#LNIX) := #NOTES-COLLECTION.#TEXT (#K)
    ADD 1 TO #LNIX
    ADD 1 TO #K
    UNTIL #LNIX > #16 OR #NOTES-COLLECTION.#TEXT (#K) EQ BLANK
  END-REPEAT
  IF #LNIX > #16
    #K := #PAGE + 1
    #ITEM ( #K ) := #J
    #COLLECTION ( #K ) := #NOTES-COLLECTION.#ENT-BRWS
    RESET #SPACE-LINE
    ESCAPE BOTTOM
  END-IF
END-FOR
END-SUBROUTINE

DEFINE ADDRESS-BROWSE
/*     ==============
IF #LNIX > #16 ESCAPE ROUTINE END-IF

IF #SPACE-LINE
  ADD 1 TO #LNIX
  RESET #SPACE-LINE
END-IF

IF #LNIX > #16
  #K := #PAGE + 1
  #ITEM ( #K ) := 1
  #COLLECTION ( #K ) := #ADDRESS-COLLECTION.#ENT-BRWS
  ESCAPE ROUTINE
END-IF

#SPACE-LINE := TRUE
FOR #J #BROWSE-START TO #ADDRESS-COLLECTION.#ENT-SIZE
  CALLNAT 'ADRNE002' #CONTACT-ID
    #ADDRESS-COLLECTION.#ENT-ISN ( #J )
    #ADDRESS-COLLECTION.#TEXT (*)
    #ADDRESS-COLLECTION.#SHARED

  MOVE EDITED #J (EM=Z9) TO #ENT-NBR ( #LNIX)
  MOVE (AD=I) TO #CV-TAB ( #LNIX )
  COMPRESS
    #ADDRESS-COLLECTION.#NAME
    #ADDRESS-COLLECTION.#SHARED
    INTO #ENT-NAME (#LNIX) LEAVING NO
  #K := 1
  REPEAT
    #ENT-TEXT (#LNIX) := #ADDRESS-COLLECTION.#TEXT (#K)
    ADD 1 TO #LNIX
    ADD 1 TO #K
    UNTIL #LNIX > #16 OR #ADDRESS-COLLECTION.#TEXT (#K) EQ BLANK
  END-REPEAT
  IF #LNIX > #16
    #K := #PAGE + 1
    #ITEM ( #K ) := #J
    #COLLECTION ( #K ) := #ADDRESS-COLLECTION.#ENT-BRWS
    RESET #SPACE-LINE
    ESCAPE BOTTOM
  END-IF
END-FOR
END-SUBROUTINE

DEFINE PHONE-BROWSE
/*     ============
IF #LNIX > #16 ESCAPE ROUTINE END-IF

IF #SPACE-LINE
  ADD 1 TO #LNIX
  RESET #SPACE-LINE
END-IF

IF #LNIX > #16
  #K := #PAGE + 1
  #ITEM ( #K ) := 1
  #COLLECTION ( #K ) := #PHONE-COLLECTION.#ENT-BRWS
  ESCAPE ROUTINE
END-IF

#SPACE-LINE := TRUE
FOR #J #BROWSE-START TO #PHONE-COLLECTION.#ENT-SIZE
  CALLNAT 'ADRNE012' #CONTACT-ID
    #PHONE-COLLECTION.#ENT-ISN ( #J )
    #PHONE-COLLECTION.#TEXT (*)

  MOVE EDITED #J (EM=Z9) TO #ENT-NBR ( #LNIX)
  MOVE (AD=I) TO #CV-TAB ( #LNIX )
  #ENT-NAME (#LNIX) := #PHONE-COLLECTION.#NAME
  #K := 1
  REPEAT
    #ENT-TEXT (#LNIX) := #PHONE-COLLECTION.#TEXT (#K)
    ADD 1 TO #LNIX
    ADD 1 TO #K
    UNTIL #LNIX > #16 OR #PHONE-COLLECTION.#TEXT (#K) EQ BLANK
  END-REPEAT
  IF #LNIX > #16
    #K := #PAGE + 1
    #ITEM ( #K ) := #J
    #COLLECTION ( #K ) := #PHONE-COLLECTION.#ENT-BRWS
    RESET #SPACE-LINE
*    PRINT 'Phone overflow ' #K #COLLECTION ( #K )  #ITEM ( #K )
    RESET #SPACE-LINE
    ESCAPE BOTTOM
  END-IF
END-FOR

END-SUBROUTINE

DEFINE EMAIL-BROWSE
/*     ============
IF #LNIX > #16 ESCAPE ROUTINE END-IF

IF #SPACE-LINE
  ADD 1 TO #LNIX
  RESET #SPACE-LINE
END-IF

IF #LNIX > #16
  #K := #PAGE + 1
  #ITEM ( #K ) := 1
  #COLLECTION ( #K ) := #EMAIL-COLLECTION.#ENT-BRWS
*  PRINT 'Email empty overflow ' #K #COLLECTION ( #K )  #ITEM ( #K )
  ESCAPE ROUTINE
END-IF

#SPACE-LINE := TRUE
FOR #J #BROWSE-START TO #EMAIL-COLLECTION.#ENT-SIZE
  CALLNAT 'ADRNE022' #CONTACT-ID
    #EMAIL-COLLECTION.#ENT-ISN ( #J )
    #EMAIL-COLLECTION.#TEXT (*)

  MOVE EDITED #J (EM=Z9) TO #ENT-NBR ( #LNIX)
  MOVE (AD=I) TO #CV-TAB ( #LNIX )
  #ENT-NAME (#LNIX) := #EMAIL-COLLECTION.#NAME
  #K := 1
  REPEAT
    #ENT-TEXT (#LNIX) := #EMAIL-COLLECTION.#TEXT (#K)
    ADD 1 TO #LNIX
    ADD 1 TO #K
    UNTIL #LNIX > #16 OR #EMAIL-COLLECTION.#TEXT (#K) EQ BLANK
  END-REPEAT
  IF #LNIX > #16
    #K := #PAGE + 1
    #ITEM ( #K ) := #J
    #COLLECTION ( #K ) := #EMAIL-COLLECTION.#ENT-BRWS
    RESET #SPACE-LINE
*    PRINT 'Email overflow ' #K #COLLECTION ( #K )  #ITEM ( #K )
    ESCAPE BOTTOM
  END-IF
END-FOR
END-SUBROUTINE
*
DEFINE INIT-STEPS
/*     ==========
*
INPUT #CGA-SCR-ID #MEMBER-ID-NUMBER #CONTACT-ID #CLERK-ID   /* RE1
*
IF #CGA-SCR-ID > 0
  FIND CONTACT WITH ID-NUMBER = #CGA-SCR-ID
    IF NO RECORDS FOUND
      RESET #CONTACT-ID
      FIND STATUS WITH ID-NUMBER = #CGA-SCR-ID
        MOVE 'CN' TO #CN-OR-CI-TEXT
        MOVE ID-NUMBER TO #ID
        MOVE 'CI' TO #CI-TEXT
        MOVE MEMBER-CONTACT-ID TO #CONTACT-ID
      END-FIND
      IF #CONTACT-ID = 0
        MOVE (AD=NP) TO #CGA-SCR-COMMAND-CV #CGA-SCR-ID-CV #CGA-SCR-SUFFIX-CV
        ASSIGN #CONTACT-ID = #CGA-SCR-ID
        RESET #CGA-SCR-ID
        FIND CONTACT WITH CONTACT-ID = #CONTACT-ID
          IF ID-NUMBER > 0
            MOVE 'CN' TO #CN-OR-CI-TEXT
            MOVE ID-NUMBER TO #ID
            MOVE 'CI' TO #CI-TEXT
            MOVE CONTACT-ID TO #CONTACT-ID
          ELSE
            MOVE 'CI' TO #CN-OR-CI-TEXT
            MOVE CONTACT-ID TO #CONTACT-ID
          END-IF
        END-FIND
      END-IF
      ESCAPE BOTTOM
    END-NOREC
    MOVE 'CN' TO #CN-OR-CI-TEXT
    MOVE ID-NUMBER TO #ID
    MOVE 'CI' TO #CI-TEXT
    MOVE CONTACT-ID TO #CONTACT-ID
  END-FIND
ELSE
  FIND CONTACT WITH CONTACT-ID = #CONTACT-ID
    IF ID-NUMBER > 0
      MOVE 'CN' TO #CN-OR-CI-TEXT
      MOVE ID-NUMBER TO #ID
      MOVE 'CI' TO #CI-TEXT
      MOVE CONTACT-ID TO #CONTACT-ID
    ELSE
      MOVE 'CI' TO #CN-OR-CI-TEXT
      MOVE CONTACT-ID TO #CONTACT-ID
    END-IF
  END-FIND
END-IF
*
IF #CGA-SCR-ID = #MEMBER-ID-NUMBER                   /* RE5 START
  MOVE #CONTACT-ID TO #CONTACT-ID-1
ELSE
  FIND (1) STATUS WITH ID-NUMBER = #MEMBER-ID-NUMBER
    MOVE MEMBER-CONTACT-ID TO #CONTACT-ID-1
  END-FIND
END-IF                                               /* RE5 END
*
CALLNAT 'ADRN0004' #CONTACT-ID #HEADER1 #HEADER2
FIND (1) CONTACT WITH CONTACT-ID = #CONTACT-ID       /* NG1
  #CONTACT-TYPE := CONTACT.CONTACT-TYPE
END-FIND
*
IF CONTACT.ID-NUMBER > 0
  FIND (1) STATUS WITH ID-NUMBER = CONTACT.ID-NUMBER
    CALLNAT 'GGRANSXX' USING CONTACT.ID-NUMBER
      STATUS.PROCESS-IND
      STATUS.INTRO-FLAG
      STATUS.MILITARY-SERVICE
      STATUS.DATE-OF-DEATH
      STATUS.NUMBER-MEMBERSHIPS
      STATUS.PLAN (1)
      #TEXT-40
    MOVE #TEXT-40 TO #MSG
    IF #TEXT-40-LAST-3 = '(Pe'                                                  /* RE6
      COMPRESS #MSG 'nding Confirmation)' INTO #MSG LEAVING NO  /* RE6
    END-IF                                                                      /* RE6
    IF FUNCTION-SERVICE-PLAN(<STATUS.ID-NUMBER>) = '3SR'             /* RE3
      COMPRESS #MSG ' + Services Member' INTO #MSG LEAVING NO        /* RE3
    END-IF                                                           /* RE3
  END-FIND
END-IF
*
END-SUBROUTINE
*
**********************************
DEFINE SUBROUTINE ADD-CONTACT-INFO
**********************************
RESET #SELECTION
SET WINDOW 'Maintain'

INPUT WINDOW='Maintain' USING MAP 'ADRM0004'
*
IF *PF-KEY = 'ENTR'
*
  IF #SELECTION = ' '
    REINPUT 'Pls. enter selection'
      MARK 1
  END-IF
*
  IF NOT (#SELECTION = '1' OR = '2' OR = '3' OR = '4' OR = '5')
    REINPUT 'Invalid selection'
      MARK 1
  END-IF
*
  IF #SELECTION = '1'
    A-ADD-POOL.ADDRESS-POOL-ID-A := NEW-ENTITY
    CALLNAT 'ADRN0002' #CONTACT-ID A-ADD-POOL.ADDRESS-POOL-ID
  END-IF
*
  IF #SELECTION = '2'
    PHONE-V.PHONE-ID-A := NEW-ENTITY
    CALLNAT 'ADRN0011' #CONTACT-ID #MEMBER-ID-NUMBER PHONE-V.PHONE-ID  /* RE4
  END-IF
*
  IF #SELECTION = '3'
    RESET EMAIL-V.EMAIL-ID
    #MODE := 'U'
    IF #CGA-CLERK = ' '
      MOVE #CLERK-ID TO #CGA-CLERK
    END-IF
    CALLNAT 'ADRNEM01' #CONTACT-ID #MEMBER-ID-NUMBER EMAIL-V.EMAIL-ID #CGA-CLERK #MODE #MSG  /* RE4
  END-IF
*
  IF #SELECTION = '4'
    IF #ID > 0
      REINPUT 'Pls use NS/NU for this Contact.'
        MARK 1
    END-IF
    CALLNAT 'GUPNTSXX' #CONTACT-ID #UPDATE
  END-IF
*
  IF #SELECTION = '5'
    IF #CGA-CLERK = ' '
      MOVE #CLERK-ID TO #CGA-CLERK
    END-IF
    CALLNAT 'ADRN0008' #CONTACT-ID #MEMBER-ID-NUMBER CONTACT.RANK-ID #CGA-CLERK #MODE #MSG
  END-IF
*
END-IF
SET WINDOW OFF

END-SUBROUTINE

DEFINE GET-SELECT
/*     ==========
DECIDE ON FIRST VALUE OF *CURS-LINE
  VALUE 1
    #SELECT := #NEWITEM
  VALUE 3
    #SELECT := #CONTACT
  VALUE 4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22            /* RE1 Add 4
    #J := *CURS-LINE - 3                                              /* RE1 Change 4 to 3
    REPEAT UNTIL #J < 1 OR #ENT-NAME (#J) NE BLANK
      SUBTRACT 1 FROM #J
    END-REPEAT
    IF #J > 0
      #NN-A := #ENT-NBR ( #J )
      EXAMINE #ENT-NAME (#J) FOR #ADDRESS-COLLECTION.#NAME POSITION #I
      IF #I > 0
        #SELECT := #ADDRESS
      END-IF
      IF #ENT-NAME (#J) = #RANK-COLLECTION.#NAME
        #SELECT := #RANK
      END-IF
      IF #ENT-NAME (#J) = #PHONE-COLLECTION.#NAME
        #SELECT := #PHONE
      END-IF
      IF #ENT-NAME (#J) = #EMAIL-COLLECTION.#NAME
        #SELECT := #EMAIL
      END-IF
      IF #ENT-NAME (#J) = #NOTES-COLLECTION.#NAME
        #SELECT := #NOTES
      END-IF
    END-IF
  NONE VALUE
    RESET #SELECT
END-DECIDE
END-SUBROUTINE

END
