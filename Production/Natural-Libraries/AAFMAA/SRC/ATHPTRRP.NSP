* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPTRRP - Transaction Report Processing
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE      TAG  REASON                                         *
* PAM    10062005  None Program Written                                *
*                                                                      *
* PAM    12232005  PM1  Added CLERK column                             *
* SAG  03282006 RH1  AS - Replaced the HEX constant '05' (Tab position)*
*                    EBCDIC to HEX code '09' ASCII                     *
* RSE  10052009 RE1  Change PROCESS-IND logic for Unification
************************************************************************
*
DEFINE DATA
LOCAL
*
1 TR-V VIEW OF A-TRANSACTION-REGISTER
 2 ID-NUMBER                  (N6)
 2 REDEFINE ID-NUMBER
  3 ID-NUMBER-A               (A6)
 2 PROCESS-IND                (A1)
 2 NAME                       (A25)
 2 DATE-LAST-UPDATE           (N8)
 2 TERMINAL-ID                (A8)
 2 CLERK-ID                   (A3)
 2 TRANSACTION-DATN           (P9)
 2 TRANSACTION-TIMN           (P7)
 2 OLD-DATA                   (A125/20)
 2 NEW-DATA                   (A125/20)
 2 USER-COMPANY               (A1)                   /* RE1
*
1 ST-V VIEW OF A-STATUS
 2 ID-NUMBER                  (N6)
 2 NAME                       (A25)
 2 ISSUE-DATE                 (N8/9)
*
1 #DATA-REVIEW-LINE-1         (A125)
1 REDEFINE #DATA-REVIEW-LINE-1
 2 #TR-REG-MODE-LBL-1A        (A3)     /* <'CI-'>
 2 #TR-REG-MODE-LBL-1B        (A4)     /* <'MODE'>
 2 #TR-REG-MODE-LBL-13        (A12)    /* <'-CHG ISS-DT'>
 2 #TR-REG-MODE-ISSUE-DATE    (N08)
 2 #TR-REG-MODE-LBL-2         (A05)    /* <'MOD'>
 2 #TR-REG-MODE-MODE          (A01)
 2 #TR-REG-MODE-LBL-3         (A09)    /* <'MOD-PRM'>
 2 #TR-REG-MODE-MOD-PRM       (A08)
 2 #TR-REG-MODE-LBL-4         (A07)    /* <'PD-TO'>
 2 #TR-REG-MODE-PAID-TO       (N08)
 2 #TR-REG-MODE-LBL-5         (A07)    /* <'DB/CR'>
 2 #TR-REG-MODE-DB-CR-ADJ     (A11)
 2 REDEFINE #TR-REG-MODE-DB-CR-ADJ
  3 #TR-REG-MODE-DB-CR-NEG    (A1)
  3 #TR-REG-MODE-DB-CR-DOLLAR (N7)
  3 #TR-REG-MODE-DB-CR-DEC    (A1)
  3 #TR-REG-MODE-DB-CR-CENTS  (N2)
 2 #TR-REG-MODE-LBL-7         (A06)    /* <'BADJ'>
 2 #TR-REG-MODE-BILL-ADJ      (A09)
 2 REDEFINE #TR-REG-MODE-BILL-ADJ
  3 #TR-REG-MODE-BADJ-NEG     (A1)
  3 #TR-REG-MODE-BADJ-DOLLAR  (N5)
  3 #TR-REG-MODE-BADJ-DEC     (A1)
  3 #TR-REG-MODE-BADJ-CENTS   (N2)
 2 #TR-REG-MODE-LBL-8         (A09)    /* <'ACV-ADJ'>
 2 #TR-REG-MODE-ACV-ADJ       (A09)
 2 #TR-REG-MODE-REMAINING     (A09)
*
1 #DATA-REVIEW-LINE-2         (A125)
1 REDEFINE #DATA-REVIEW-LINE-2
 2 #TR-REG-MODE-LBL-9         (A05)   /* <'FPF'>
 2 #TR-REG-MODE-FPF           (A11)
 2 REDEFINE #TR-REG-MODE-FPF
  3 #TR-REG-MODE-FPF-NEG      (A1)
  3 #TR-REG-MODE-FPF-DOLLAR   (N7)
  3 #TR-REG-MODE-FPF-DEC      (A1)
  3 #TR-REG-MODE-FPF-CENTS    (N2)
 2 #TR-REG-MODE-PRMS-PAID-LBL (A12)   /* <'PREMS PAID'>
 2 #TR-REG-MODE-PRMS-PAID     (A10)
 2 REDEFINE #TR-REG-MODE-PRMS-PAID
  3 #TR-REG-MODE-PRMS-DOLLAR  (N7)
  3 #TR-REG-MODE-PRMS-DEC     (A1)
  3 #TR-REG-MODE-PRMS-CENTS   (N2)
 2 #TR-REG-MODE-REST          (A87)
*
1 #NUM-PEACH                  (P5)
1 #PEACH-CNT                  (P5)
1 #PEACH-CNT-X                (A5)
1 #PEACHTREE                  (A80)
*
1 #COUNTERS
 2 #CNT-1                     (P5)
 2 #I1                        (I2)
 2 #I2                        (I2)
 2 #I3                        (I2)
*
1 #DBCR-OLD                   (N7.2)
1 #DBCR-NEW                   (N7.2)
1 #FPF-OLD                    (N7.2)
1 #FPF-NEW                    (N7.2)
1 #PREMS-PAID-OLD             (N7.2)
1 #PREMS-PAID-NEW             (N7.2)
1 #BADJ-OLD                   (N5.2)
1 #BADJ-NEW                   (N5.2)
1 #AMOUNT                     (N7.2)
1 #TOTAL-DBCR-OLD             (N11.2)
1 #TOTAL-DBCR-NEW             (N11.2)
1 #TOTAL-FPF-OLD              (N11.2)
1 #TOTAL-FPF-NEW              (N11.2)
1 #TOTAL-PREMS-PAID-OLD       (N11.2)
1 #TOTAL-PREMS-PAID-NEW       (N11.2)
1 #TOTAL-BADJ-OLD             (N11.2)
1 #TOTAL-BADJ-NEW             (N11.2)
1 #TOTAL-AMOUNT               (N11.2)
*
1 #FOUND                      (L)
1 #ISN                        (P8)
1 #POL-NUM                    (A16)
1 #DISP-AMOUNT                (A15)
1 #DISP-DBCR-OLD              (A15)
1 #DISP-DBCR-NEW              (A15)
1 #DISP-FPF-OLD               (A15)
1 #DISP-FPF-NEW               (A15)
1 #DISP-BADJ-OLD              (A15)
1 #DISP-BADJ-NEW              (A15)
1 #DISP-PREMS-PAID-OLD        (A15)
1 #DISP-PREMS-PAID-NEW        (A15)
1 #ACCT-NUM                   (A9)
1 #BADJ-ACCT-NUM              (A9)  INIT <'2235 - 00'>
1 #ADCR-ACCT-NUM              (A9)  INIT <'2336 - 00'>
1 #RDCR-ACCT-NUM              (A9)  INIT <'2236 - 00'>
1 #TODAY-PEACH                (A8)
1 #TRANSACTION                (A4)
*
1 #EXTRACT-RECORD             (A150)
* 1 #TAB     (A1) INIT <H'05'>     /* SAG RH1 03282006 AS
1 #TAB       (A1) INIT <H'09'>     /* SAG RH1 03282006 AS
*
1 #NAME                       (A25)
1 #LAST                       (A25)
1 REDEFINE #LAST
 2 #LAST-DISP                 (A15)
 2 #LAST-REST                 (A10)
1 #MI                         (A1)
1 #FIRST-20                   (A20)
1 #EXTRA1                     (A25)
1 #EXTRA2                     (A25)
1 #EXTRA3                     (A25)
1 #ERR-MSG                    (A60)
*
1 #TO-DATE                    (N8)
1 #FROM-DATE                  (N8)  INIT <00000001>
1 #TODAY                      (N8)
1 REDEFINE #TODAY
 2 #TODAY-CC                  (A2)
 2 #TODAY-YY                  (A2)
 2 #TODAY-MM                  (A2)
 2 #TODAY-DD                  (A2)
1 #REQUEST                    (A1)  INIT <'E'>
*
1 #INVALID                    (L)                                 /* PM1
1 #CLERK-ABB-NAME-PASS        (A20)                               /* PM1
*
END-DEFINE
************************************************************************
*
FORMAT (1) LS=133 PS=76
WRITE  (1) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
          'Paid Thru Date Changes Resulting in DBCR/BADJ adjustments'
                      5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
IF *TIMN LT 1200000            /* midnite till 12 noon (normal job time)
  MOVE *DATN TO #TO-DATE
  CALLNAT 'GDATESXX'
    #TO-DATE
    #FROM-DATE
    #TODAY
    #REQUEST
ELSE                          /* noon till midnite (if job is run early)
  MOVE *DATN TO #TODAY
END-IF
*
COMPRESS #TODAY-MM #TODAY-DD #TODAY-YY INTO #TODAY-PEACH WITH '/'
WRITE 'Process date =' #TODAY
*
COMPRESS 'Id Number'         #TAB
         'Last Name'         #TAB
         'Transaction'       #TAB
         'Amount'            #TAB
         'DB/CR Before '     #TAB
         'DB/CR After'       #TAB
         'BADJ Before'       #TAB
         'BADJ After'        #TAB
         'FPF Before'        #TAB
         'FPF After'         #TAB
         'Prems Paid Before' #TAB
         'Prems Paid After'  #TAB
         'Clerk' INTO #EXTRACT-RECORD LEAVING NO                  /* PM1
WRITE WORK 1 #EXTRACT-RECORD
RESET #EXTRACT-RECORD
*
MOVE '1,2,3,4,5,6,7,8' TO #PEACHTREE
WRITE WORK 2 #PEACHTREE
RESET #PEACHTREE
ADD 1 TO #NUM-PEACH
*
READ TR-V BY TRANSACTION-DATN FROM #TODAY THRU #TODAY
*  IF TR-V.PROCESS-IND = 'S'                 RE1
  IF TR-V.USER-COMPANY = 'S'                     /* RE1
    ESCAPE TOP
  END-IF
*
  FOR #I1 1 TO 20
    IF   TR-V.OLD-DATA (#I1) = ' '
     AND TR-V.NEW-DATA (#I1) = ' '
      ESCAPE BOTTOM
    END-IF
*
    COMPUTE #I2 = #I1 + 1
    RESET #DATA-REVIEW-LINE-1 #DATA-REVIEW-LINE-2
    MOVE TR-V.OLD-DATA (#I1) TO #DATA-REVIEW-LINE-1
*
    IF   #TR-REG-MODE-LBL-1A = 'CI-'
     AND #TR-REG-MODE-LBL-1B = 'MODE' OR = 'MACV'
     AND #TR-REG-MODE-LBL-13 = '-CHG ISS-DT'
     AND #TR-REG-MODE-LBL-2  = ' MOD '
     AND #TR-REG-MODE-LBL-3  = ' MOD-PRM '
     AND #TR-REG-MODE-LBL-4  = ' PD-TO '
     AND #TR-REG-MODE-LBL-5  = ' DB/CR '
     AND #TR-REG-MODE-LBL-7  = ' BADJ '
     AND #TR-REG-MODE-LBL-8  = ' ACV-ADJ '
      MOVE TR-V.OLD-DATA (#I2) TO #DATA-REVIEW-LINE-2
      COMPUTE #DBCR-OLD = #TR-REG-MODE-DB-CR-CENTS / 100
      ADD #TR-REG-MODE-DB-CR-DOLLAR TO #DBCR-OLD
      IF #TR-REG-MODE-DB-CR-NEG = '-'
        MULTIPLY #DBCR-OLD BY -1
      END-IF
*
      COMPUTE #FPF-OLD = #TR-REG-MODE-FPF-CENTS / 100
      ADD #TR-REG-MODE-FPF-DOLLAR TO #FPF-OLD
      IF #TR-REG-MODE-FPF-NEG = '-'
        MULTIPLY #FPF-OLD BY -1
      END-IF
*
      COMPUTE #BADJ-OLD = #TR-REG-MODE-BADJ-CENTS / 100
      ADD #TR-REG-MODE-BADJ-DOLLAR TO #BADJ-OLD
      IF #TR-REG-MODE-BADJ-NEG = '-'
        MULTIPLY #BADJ-OLD BY -1
      END-IF
*
      COMPUTE #PREMS-PAID-OLD = #TR-REG-MODE-PRMS-CENTS / 100
      ADD #TR-REG-MODE-PRMS-DOLLAR TO #PREMS-PAID-OLD
*
      RESET #DATA-REVIEW-LINE-1 #DATA-REVIEW-LINE-2
      MOVE TR-V.NEW-DATA (#I1) TO #DATA-REVIEW-LINE-1
      MOVE TR-V.NEW-DATA (#I2) TO #DATA-REVIEW-LINE-2
      COMPUTE #DBCR-NEW = #TR-REG-MODE-DB-CR-CENTS / 100
      ADD #TR-REG-MODE-DB-CR-DOLLAR TO #DBCR-NEW
      IF #TR-REG-MODE-DB-CR-NEG = '-'
        MULTIPLY #DBCR-NEW BY -1
      END-IF
*
      COMPUTE #FPF-NEW = #TR-REG-MODE-FPF-CENTS / 100
      ADD #TR-REG-MODE-FPF-DOLLAR TO #FPF-NEW
      IF #TR-REG-MODE-FPF-NEG = '-'
        MULTIPLY #FPF-NEW BY -1
      END-IF
*
      COMPUTE #BADJ-NEW = #TR-REG-MODE-BADJ-CENTS / 100
      ADD #TR-REG-MODE-BADJ-DOLLAR TO #BADJ-NEW
      IF #TR-REG-MODE-BADJ-NEG = '-'
        MULTIPLY #BADJ-NEW BY -1
      END-IF
*
      COMPUTE #PREMS-PAID-NEW = #TR-REG-MODE-PRMS-CENTS / 100
      ADD #TR-REG-MODE-PRMS-DOLLAR TO #PREMS-PAID-NEW
*
      IF #DBCR-NEW = #DBCR-OLD
       AND #BADJ-NEW = #BADJ-OLD
         ESCAPE TOP
      END-IF
*
      RESET #TRANSACTION #ACCT-NUM
      IF #DBCR-NEW - #DBCR-OLD NE 0
        COMPUTE #AMOUNT = #DBCR-NEW - #DBCR-OLD
        IF #AMOUNT GT 0
          MOVE 'ADCR' TO #TRANSACTION
          MOVE #ADCR-ACCT-NUM TO #ACCT-NUM
        ELSE
          MOVE 'RDCR' TO #TRANSACTION
          MOVE #RDCR-ACCT-NUM TO #ACCT-NUM
        END-IF
      ELSE
        MOVE 'BADJ' TO #TRANSACTION
        MOVE #BADJ-ACCT-NUM TO #ACCT-NUM
        COMPUTE #AMOUNT = #BADJ-NEW - #BADJ-OLD
      END-IF
*
      MOVE EDITED #AMOUNT (EM=-ZZZZZZ.99) TO #DISP-AMOUNT
      MOVE LEFT #DISP-AMOUNT TO #DISP-AMOUNT
*
      RESET #FOUND
      FIND (1) ST-V WITH MEMBER-KEY = TR-V.ID-NUMBER-A
        IF NO RECORDS FOUND
          FIND (1) ST-V WITH WIDOW-KEY = TR-V.ID-NUMBER-A
            IF NO RECORDS FOUND
              ESCAPE BOTTOM
            END-NOREC
*
            MOVE TRUE TO #FOUND
            MOVE *ISN TO #ISN
          END-FIND
        END-NOREC
*
        MOVE TRUE TO #FOUND
        MOVE *ISN TO #ISN
      END-FIND
*
      RESET #NAME #POL-NUM
      IF #FOUND
        GET ST-V #ISN
        MOVE ST-V.NAME TO #NAME
        FOR #I3 1 TO 9
          IF ST-V.ISSUE-DATE (#I3) = #TR-REG-MODE-ISSUE-DATE
            CALLNAT 'GPLNMSXX' #POL-NUM ST-V.ID-NUMBER #I3
            ESCAPE BOTTOM
          END-IF
        END-FOR
      END-IF
*
      RESET #LAST #MI #FIRST-20
      CALLNAT 'GFMLNSXX' /* split name
        #NAME
        #FIRST-20
        #MI
        #LAST
        #ERR-MSG
*
      SEPARATE #LAST INTO #LAST #EXTRA1 #EXTRA2 #EXTRA3
        WITH DELIMITER ','
*
      RESET #CLERK-ABB-NAME-PASS                                  /* PM1
      CALLNAT 'GCKNMSXX' TR-V.CLERK-ID                            /* PM1
                         #INVALID                                 /* PM1
                         #CLERK-ABB-NAME-PASS                     /* PM1
*                                                                 /* PM1
      IF #INVALID                                                 /* PM1
        MOVE TR-V.CLERK-ID TO #CLERK-ABB-NAME-PASS                /* PM1
      END-IF                                                      /* PM1
*
      ADD +1 TO #CNT-1
      MOVE EDITED #CNT-1 (EM=ZZZZ9) TO #PEACH-CNT-X
      MOVE LEFT #PEACH-CNT-X TO #PEACH-CNT-X
*
      PERFORM CREATE-REPORT
      PERFORM CREATE-PEACHTREE-FILE
    END-IF
  END-FOR
END-READ
*
PERFORM CREATE-REPORT-TOTALS
*
************************************************************************
DEFINE SUBROUTINE CREATE-REPORT
************************************************************************
*
ADD #DBCR-OLD       TO #TOTAL-DBCR-OLD
ADD #DBCR-NEW       TO #TOTAL-DBCR-NEW
ADD #FPF-OLD        TO #TOTAL-FPF-OLD
ADD #FPF-NEW        TO #TOTAL-FPF-NEW
ADD #BADJ-OLD       TO #TOTAL-BADJ-OLD
ADD #BADJ-NEW       TO #TOTAL-BADJ-NEW
ADD #PREMS-PAID-OLD TO #TOTAL-PREMS-PAID-OLD
ADD #PREMS-PAID-NEW TO #TOTAL-PREMS-PAID-NEW
ADD #AMOUNT         TO #TOTAL-AMOUNT
*
DISPLAY (1) #CNT-1
            'Id/Number' TR-V.ID-NUMBER
            'Trans' #TRANSACTION
            'Amount' #DISP-AMOUNT
            'DB-CR/Before ' #DBCR-OLD
            'DB-CR/After' #DBCR-NEW
            'FPF/Before'  #FPF-OLD
            'FPF/After'  #FPF-NEW
            'BADJ/Before'  #BADJ-OLD
            'BADJ/After'  #BADJ-NEW
            'Prems Pd/Before' #PREMS-PAID-OLD
            'Prems Pd/After' #PREMS-PAID-NEW
*
RESET #DISP-DBCR-OLD #DISP-DBCR-NEW #DISP-BADJ-OLD #DISP-BADJ-NEW
      #DISP-PREMS-PAID-OLD #DISP-PREMS-PAID-NEW #DISP-FPF-OLD
      #DISP-FPF-NEW
MOVE EDITED #DBCR-OLD (EM=-ZZZZZZ9.99)       TO #DISP-DBCR-OLD
MOVE EDITED #DBCR-NEW (EM=-ZZZZZZ9.99)       TO #DISP-DBCR-NEW
MOVE EDITED #FPF-OLD  (EM=-ZZZZZZ9.99)       TO #DISP-FPF-OLD
MOVE EDITED #FPF-NEW  (EM=-ZZZZZZ9.99)       TO #DISP-FPF-NEW
MOVE EDITED #BADJ-OLD (EM=-ZZZZZZ9.99)       TO #DISP-BADJ-OLD
MOVE EDITED #BADJ-NEW (EM=-ZZZZZZ9.99)       TO #DISP-BADJ-NEW
MOVE EDITED #PREMS-PAID-OLD (EM=-ZZZZZZ9.99) TO #DISP-PREMS-PAID-OLD
MOVE EDITED #PREMS-PAID-NEW (EM=-ZZZZZZ9.99) TO #DISP-PREMS-PAID-NEW
MOVE LEFT #DISP-DBCR-OLD       TO #DISP-DBCR-OLD
MOVE LEFT #DISP-DBCR-NEW       TO #DISP-DBCR-NEW
MOVE LEFT #DISP-FPF-OLD        TO #DISP-FPF-OLD
MOVE LEFT #DISP-FPF-NEW        TO #DISP-FPF-NEW
MOVE LEFT #DISP-BADJ-OLD       TO #DISP-BADJ-OLD
MOVE LEFT #DISP-BADJ-NEW       TO #DISP-BADJ-NEW
MOVE LEFT #DISP-PREMS-PAID-OLD TO #DISP-PREMS-PAID-OLD
MOVE LEFT #DISP-PREMS-PAID-NEW TO #DISP-PREMS-PAID-NEW
MOVE LEFT #CLERK-ABB-NAME-PASS TO #CLERK-ABB-NAME-PASS            /* PM1
*
COMPRESS TR-V.ID-NUMBER-A      #TAB
         #LAST                 #TAB
         #TRANSACTION          #TAB
         #DISP-AMOUNT          #TAB
         #DISP-DBCR-OLD        #TAB
         #DISP-DBCR-NEW        #TAB
         #DISP-BADJ-OLD        #TAB
         #DISP-BADJ-NEW        #TAB
         #DISP-FPF-OLD         #TAB
         #DISP-FPF-NEW         #TAB
         #DISP-PREMS-PAID-OLD  #TAB
         #DISP-PREMS-PAID-NEW  #TAB
         #CLERK-ABB-NAME-PASS INTO #EXTRACT-RECORD LEAVING NO     /* PM1
WRITE WORK 1 #EXTRACT-RECORD
RESET #EXTRACT-RECORD
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CREATE-REPORT-TOTALS
************************************************************************
*
RESET #DISP-DBCR-OLD #DISP-DBCR-NEW #DISP-BADJ-OLD #DISP-BADJ-NEW
      #DISP-PREMS-PAID-OLD #DISP-PREMS-PAID-NEW #DISP-FPF-OLD
      #DISP-FPF-NEW #DISP-AMOUNT
*
MOVE EDITED #TOTAL-AMOUNT (EM=-ZZZZZZZZZZ9.99) TO #DISP-AMOUNT
MOVE EDITED #TOTAL-DBCR-OLD (EM=-ZZZZZZZZZZ9.99) TO #DISP-DBCR-OLD
MOVE EDITED #TOTAL-DBCR-NEW (EM=-ZZZZZZZZZZ9.99) TO #DISP-DBCR-NEW
MOVE EDITED #TOTAL-FPF-OLD  (EM=-ZZZZZZZZZZ9.99) TO #DISP-FPF-OLD
MOVE EDITED #TOTAL-FPF-NEW  (EM=-ZZZZZZZZZZ9.99) TO #DISP-FPF-NEW
MOVE EDITED #TOTAL-BADJ-OLD (EM=-ZZZZZZZZZZ9.99) TO #DISP-BADJ-OLD
MOVE EDITED #TOTAL-BADJ-NEW (EM=-ZZZZZZZZZZ9.99) TO #DISP-BADJ-NEW
MOVE EDITED #TOTAL-PREMS-PAID-OLD (EM=-ZZZZZZZZZZ9.99)
                                                 TO #DISP-PREMS-PAID-OLD
MOVE EDITED #TOTAL-PREMS-PAID-NEW (EM=-ZZZZZZZZZZ9.99)
                                                 TO #DISP-PREMS-PAID-NEW
MOVE LEFT #DISP-AMOUNT         TO #DISP-AMOUNT
MOVE LEFT #DISP-DBCR-OLD       TO #DISP-DBCR-OLD
MOVE LEFT #DISP-DBCR-NEW       TO #DISP-DBCR-NEW
MOVE LEFT #DISP-FPF-OLD        TO #DISP-FPF-OLD
MOVE LEFT #DISP-FPF-NEW        TO #DISP-FPF-NEW
MOVE LEFT #DISP-BADJ-OLD       TO #DISP-BADJ-OLD
MOVE LEFT #DISP-BADJ-NEW       TO #DISP-BADJ-NEW
MOVE LEFT #DISP-PREMS-PAID-OLD TO #DISP-PREMS-PAID-OLD
MOVE LEFT #DISP-PREMS-PAID-NEW TO #DISP-PREMS-PAID-NEW
*
COMPRESS #TAB #TAB #TAB
         #DISP-AMOUNT          #TAB
         #DISP-DBCR-OLD        #TAB
         #DISP-DBCR-NEW        #TAB
         #DISP-BADJ-OLD        #TAB
         #DISP-BADJ-NEW        #TAB
         #DISP-FPF-OLD         #TAB
         #DISP-FPF-NEW         #TAB
         #DISP-PREMS-PAID-OLD  #TAB
         #DISP-PREMS-PAID-NEW INTO #EXTRACT-RECORD LEAVING NO
WRITE WORK 1 #EXTRACT-RECORD
RESET #EXTRACT-RECORD
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE CREATE-PEACHTREE-FILE
************************************************************************
*
COMPRESS #TODAY-PEACH ','
         #TRANSACTION
         #TODAY-MM #TODAY-DD
         'CN' TR-V.ID-NUMBER-A ','
         #PEACH-CNT-X ','
         #ACCT-NUM ','
         #LAST INTO #PEACHTREE LEAVING NO
*
COMPRESS #PEACHTREE #POL-NUM INTO #PEACHTREE
*
COMPRESS #PEACHTREE ','
         #DISP-AMOUNT ',' INTO #PEACHTREE LEAVING NO
*
WRITE WORK 2 #PEACHTREE
RESET #PEACHTREE
ADD 1 TO #NUM-PEACH
*
END-SUBROUTINE
*
END
