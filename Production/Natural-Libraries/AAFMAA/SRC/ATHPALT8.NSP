* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ATHPALT8 -apply afsc stops/starts
************************************************************************
*     MODIFICATION LOG
* USER DATE       TAG  REASON
* RSE  09/18/2009 RE1  Change PROCESS-IND logic
***********************************************************************
DEFINE DATA
LOCAL
1 #HOLD-CUR-ACCT-UPDT (N8)
1 #WORK-FREQ           (P2)
1 #MODAL-PREMIUM       (P5.2)
1 #LAST-MON-YYYYMMDD   (N8)
1 REDEFINE #LAST-MON-YYYYMMDD
 2 #LAST-MON-YYYY       (N4)
 2 #LAST-MON-MM         (N2)
 2 #LAST-MON-DD         (N2)
1 #SSN                  (N9)
1 #AMOUNT               (N4.2)
*
1 #JCL-PARM       (A10)
1 REDEFINE #JCL-PARM
 2 #JCL-MM            (N2)   /* DATE PARM 03/01/1999
 2 #JCL-X1            (A1)
 2 #JCL-DD            (N2)
 2 #JCL-X2            (A1)
 2 #JCL-YYYY          (N4)
*
1 #PARM-YYYYMMDD  (N8)
1 REDEFINE #PARM-YYYYMMDD
 2 #PARM-YYYY      (N4)
 2 #PARM-MM        (N2)
*
1 ST-V VIEW OF A-STATUS
 2 DTS-DATN
 2 DTS-TIMN
 2 ID-NUMBER
 2 LINKED-CN      (40)
 2 REDEFINE LINKED-CN
  3 LINKED-CN-A   (A6/40)
 2 PROCESS-IND
 2 WIDOW-FLAG
 2 INTRO-FLAG
 2 DATE-ACCT-UPDATE
 2 NAME
 2 ALOT-SW
 2 ALOT-AMT
 2 STOP-DATE
 2 ALT-LP-AMT
 2 ALT-LP-AMT-2
 2 DEBIT-CREDIT-AMT
 2 DUES-ALL-PAID-IND
 2 NUMBER-MEMBERSHIPS
 2 ISSUE-DATE          (9)
 2 STATUS              (9)
 2 PAY-STATUS          (9)
 2 PLAN                (9)
 2 MONTH-ALLOC-AMT     (9)
 2 MODE                (9)
 2 ANNUAL-PREM         (9)
 2 PAID-TO-DATE        (9)
*
1 LK-V VIEW OF A-STATUS
 2 ID-NUMBER      (N6)
 2 INTRO-FLAG
 2 WIDOW-FLAG
 2 ALOT-AMT
 2 DEBIT-CREDIT-AMT
 2 NUMBER-MEMBERSHIPS
 2 STATUS              (9)
 2 PAY-STATUS          (9)
 2 PLAN                (9)
 2 MODE                (9)
 2 ANNUAL-PREM         (9)
 2 ISSUE-DATE          (9)
 2 PAID-TO-DATE        (9)
 2 REDEFINE PAID-TO-DATE
  3 PAID-TO-DATE-OCC (9)
   4 PAID-TO-DATE-YYYYMM (N6)
   4 REDEFINE PAID-TO-DATE-YYYYMM
    5 PAID-TO-DATE-YYYY (N4)
    5 PAID-TO-DATE-MM   (N2)
   4 PAID-TO-DATE-DD   (N2)
*
1 AR-V VIEW OF A-ACCOUNTING-REGISTER
 2 ID-NUMBER             (N6)
 2 PROCESS-IND           (A1)
 2 TRANSACTION-DATN      (P9)
 2 TRANSACTION-TIMN      (P7)
 2 TXN-CODE              (A4)
 2 SEQUENCE-NUM          (N1)
 2 NAME                  (A25)
 2 TXN-ACCT-NUMBER       (N3)
 2 ACCT-DATE             (N8)
 2 DATE-LAST-ACCT-UPDATE (N8)
 2 DEBIT-AMOUNT          (P7.2)
 2 CREDIT-AMOUNT         (P7.2)
 2 DESCRIPTION           (A20)
 2 MESSAGE-CODE          (A1)
 2 AALP-FLAG             (A1)
 2 CLERK-ID              (A3)
 2 TERMINAL-ID           (A8)
 2 CASH-CODE             (A1)
*
1 ALOT-FILE-IN    (A80)
1 REDEFINE ALOT-FILE-IN    /* air force active - ongoing credit record
 2 FAC-CODE        (A1)   /* "1" ongoing credit
 2 FAC-SSN         (N9)
 2 FAC-NAME        (A20)
 2 FAC-ACCT-NUM    (A17)
 2 FAC-FILL-1      (A5)
 2 FAC-AMOUNT      (N4.2)
 2 FAC-FILL-2      (A1)
 2 FAC-EFF-DATE    (A4)    /* YYMM
 2 FAC-FILL-3      (A17)
1 REDEFINE ALOT-FILE-IN    /* air force active - stop/start record
 2 FAS-CODE        (A1)   /* "3" start/stop
 2 FAS-FILL-1      (A3)
 2 FAS-EFF-DATE    (A4)   /* YYMM
 2 FAS-NAME        (A20)
 2 FAS-FILL-2      (A1)
 2 FAS-AMOUNT      (N4.2)
 2 FAS-TYPE        (A1)   /* "C" = stop / "D" = start
 2 FAS-FILL-3      (A7)
 2 FAS-SSN         (N9)
 2 FAS-FILL-4      (A10)
 2 FAS-ACCT-NUM    (A17)
 2 FAS-FILL-5      (A1)
*
1 STARTS-STOPS-REC  (A80)
1 REDEFINE STARTS-STOPS-REC
 2 AS-CN           (N6)
 2 AS-SERVICE      (A1)   /* A or F
 2 AS-SSN          (N9)
 2 AS-TYPE         (A1)   /* 1 = stop / 2 = start
 2 AS-REAS-CODE    (A2)
 2 AS-STATUS       (A1)   /* A or R
 2 AS-BLANKET-CODE (A3)
 2 AS-EFF-DATE     (A4)   /* YYMM
 2 AS-TERM-DATE    (A4)   /* YYMM
 2 AS-AMOUNT       (P9.2) /* takes 6 bytes
 2 AS-NAME         (A20)
 2 AS-FILL-1       (A14)
*
1 VOUCHER-REC   (A50)
1 REDEFINE VOUCHER-REC
 2 V-SSN           (N9)
 2 V-NAME          (A20)
 2 V-AMOUNT        (N4.2)
 2 V-EFF-DATE      (A4)    /* yymm
 2 V-TYPE          (A1)
 2 V-STATUS        (A1)   /* A or R
 2 V-SERVICE       (A1)
 2 V-FILL-1        (A8)
*
1 #COUNTERS
 2 #RECS-READ        (P5)
 2 #RECS-SELECTED    (P5)
 2 #CNT              (P5)
 2 #CNT-2            (P5)
 2 #CNT-3            (P5)
 2 #CNT-4            (P5)
 2 #CNT-5            (P5)
 2 #CNT-6            (P5)
 2 #CNT-7            (P5)
 2 #I1               (I2)
 2 #I2               (I2)
 2 #I3               (I2)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY          (N4)
  2 #MM            (N2)
  2 #DD            (N2)
*
1 #TOT-MBR-G        (P5.2)
1 #TOT-LNK-G        (P5.2)
1 #LNK-G            (P5.2)
1 #MONS-DIFF        (P3)
1 #PREM-DIFF        (P5.2)
1 #MONS             (P3)
1 #REMAINDER        (P3.2)
*
1 #TOT-STOPS        (N5)
1 #TOT-STARTS       (N5)
1 #TOT-ST-SP-RECS   (N5)
1 #TOT-ONGO-RECS    (N5)
1 #TOT-VOUCHERS     (N5)
1 #ERROR        (A50)
1 #REJECT       (L)
1 #AMT-6-DISP   (A6)
1 #FOUND-AFSC   (L)
1 #ISN          (P8)
*
END-DEFINE
* * * * * * * * * * * * * * * * *
*
READ WORK 1 ONCE RECORD #JCL-PARM
*
MOVE #JCL-YYYY TO #YYYY
MOVE #JCL-MM   TO #MM
MOVE #JCL-DD   TO #DD
MOVE #YYYYMMDD TO #PARM-YYYYMMDD
*
MOVE #PARM-YYYYMMDD TO #YYYYMMDD
SUBTRACT 1 FROM #MM
IF #MM LT 1
  ADD 12 TO #MM
  SUBTRACT 1 FROM #YYYY
END-IF
*
MOVE #YYYYMMDD TO #LAST-MON-YYYYMMDD
*
FORMAT (2) LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
          'Allotment Ongoing credits'
                      5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (3) LS=133 PS=76
WRITE  (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
          'Allotment Stops and Starts'
                      5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
FORMAT (4) LS=133 PS=76
WRITE  (4) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
          'Allotment Rejects'
                      5X 'DATE: ' *DAT4U 5X 'TIME: ' *TIMX
*
READ WORK 2 RECORD ALOT-FILE-IN
  ADD 1 TO #RECS-READ
*
  IF NOT FAC-CODE = '1' OR = '3'
    ESCAPE TOP
  END-IF
*
  RESET #FOUND-AFSC
  IF FAC-CODE = '1'
    MOVE FAC-SSN    TO #SSN
    MOVE FAC-AMOUNT TO #AMOUNT
    FIND ST-V WITH SSN = FAC-SSN  /* bypass aafmaa recs
*      IF ST-V.PROCESS-IND NE 'S'                    /* RE1
      IF NOT AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)      /* RE1
        ESCAPE TOP
      END-IF
*
      MOVE *ISN TO #ISN
      MOVE TRUE TO #FOUND-AFSC
      ESCAPE BOTTOM
    END-FIND
  ELSE
    MOVE FAS-SSN    TO #SSN
    MOVE FAS-AMOUNT TO #AMOUNT
    FIND ST-V WITH SSN = FAS-SSN  /* bypass aafmaa recs
*      IF ST-V.PROCESS-IND NE 'S'                    /* RE1
      IF NOT AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)      /* RE1
        ESCAPE TOP
      END-IF
*
      MOVE *ISN TO #ISN
      MOVE TRUE TO #FOUND-AFSC
      ESCAPE BOTTOM
    END-FIND
  END-IF
*
  IF NOT #FOUND-AFSC
    MOVE 'AFSC SSN not found' TO #ERROR
    PERFORM PRINT-ERROR
    ESCAPE TOP
  END-IF
*
  IF FAS-CODE = '3'    /* start or stop
    IF FAS-TYPE = 'C'
      PERFORM ALLOTMENT-STOP
      END TRANSACTION
    END-IF
*
    IF #REJECT
      ESCAPE TOP
    END-IF
*
    RESET STARTS-STOPS-REC
    RESET           AS-CN
    MOVE 'A'     TO AS-SERVICE    /* airforce
    MOVE FAS-SSN TO AS-SSN
*
    IF FAS-TYPE = 'C'      /* stop
      ADD 1 TO #TOT-STOPS
      MOVE '1' TO AS-TYPE  /* stop
    ELSE
      ADD 1 TO #TOT-STARTS
      MOVE '2' TO AS-TYPE  /* start
    END-IF
*
    MOVE 'A'          TO AS-STATUS  /* status
    MOVE FAS-EFF-DATE TO AS-EFF-DATE
    RESET                AS-TERM-DATE
    MOVE FAS-AMOUNT   TO AS-AMOUNT
    MOVE FAS-NAME     TO AS-NAME
    ADD 1 TO #TOT-ST-SP-RECS
    WRITE WORK 3 STARTS-STOPS-REC
*
    ADD 1 TO #CNT-3
    DISPLAY (3) #CNT-3
      'SSN'      AS-SSN
      'AMOUNT'   AS-AMOUNT
      'STAT'     AS-STATUS
      'SERV'     AS-SERVICE
      'EFF/DATE' AS-EFF-DATE
      'NAME'     AS-NAME
  END-IF
*
  IF FAS-CODE = '1'    /* ongoing credit
    ADD 1 TO #TOT-ONGO-RECS
    RESET VOUCHER-REC
    MOVE FAC-SSN      TO V-SSN
    MOVE FAC-NAME     TO V-NAME
    MOVE FAC-AMOUNT   TO V-AMOUNT
    MOVE FAC-EFF-DATE TO V-EFF-DATE
    RESET                V-TYPE
    MOVE 'A'          TO V-STATUS
    MOVE 'A'          TO V-SERVICE    /* airforce
    ADD 1 TO #TOT-VOUCHERS
    WRITE WORK 4 VOUCHER-REC
*
    ADD 1 TO #CNT-2
    DISPLAY (2) #CNT-2
       'SSN'      V-SSN
       'AMOUNT'   V-AMOUNT
       'STAT'     V-STATUS
       'SERV'     V-SERVICE
       'EFF/DATE' V-EFF-DATE
       'NAME'     V-NAME
  END-IF
*
END-WORK
*
WRITE 'total stops        =' #TOT-STOPS
WRITE 'total starts       =' #TOT-STARTS
WRITE 'total st/sp recs   =' #TOT-ST-SP-RECS
WRITE 'total ongoing recs =' #TOT-ONGO-RECS
WRITE 'total vouchers     =' #TOT-VOUCHERS
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ALLOTMENT-STOP
* * * * * * * * * * * * * * * * * *
*
RESET #REJECT
GET ST-V #ISN
*
MOVE FAS-SSN    TO #SSN
MOVE FAS-AMOUNT TO #AMOUNT
IF ST-V.ALOT-SW = '2'    /* AWAITING ALOTTMENT START
  MOVE 'STOP rejected - ALOT-SW = "2" (AWAITING ALLOT START)' TO #ERROR
  PERFORM PRINT-ERROR
  ESCAPE ROUTINE
END-IF
*
IF ST-V.MODE (1) NE 'G'
  MOVE 'STOP rejected - Mode must be "G"' TO #ERROR
  PERFORM PRINT-ERROR
  ESCAPE ROUTINE
END-IF
*
IF ST-V.PAY-STATUS (1) NE '22'   /* PREM PAYING
  MOVE 'STOP rejected - pay-status not = "PP"' TO #ERROR
  PERFORM PRINT-ERROR
  ESCAPE ROUTINE
END-IF
*
COMPUTE #MODAL-PREMIUM = ST-V.ANNUAL-PREM (1) / 12
IF FAC-AMOUNT NE #MODAL-PREMIUM
  MOVE EDITED #MODAL-PREMIUM (EM=ZZZ.99) TO #AMT-6-DISP
  COMPRESS 'Stop amt must = current monthly prem of' #AMT-6-DISP
                             INTO #ERROR
  PERFORM PRINT-ERROR
  ESCAPE ROUTINE
END-IF
*
IF ST-V.ALOT-AMT NE FAC-AMOUNT
  MOVE EDITED ST-V.ALOT-AMT (EM=ZZZ.99) TO #AMT-6-DISP
  COMPRESS 'Stop amt must = current ALOT ant of' #AMT-6-DISP
                             INTO #ERROR
  PERFORM PRINT-ERROR
  ESCAPE ROUTINE
END-IF
*
MOVE #PARM-YYYYMMDD  TO ST-V.STOP-DATE
MOVE '3'             TO ST-V.ALOT-SW
RESET                   ST-V.ALOT-AMT
*
COMPUTE #MODAL-PREMIUM = ST-V.ANNUAL-PREM (1) / 12
MOVE '21' TO ST-V.PAY-STATUS (1)
*
MOVE '2' TO ST-V.ALOT-SW
MOVE ST-V.DATE-ACCT-UPDATE TO #HOLD-CUR-ACCT-UPDT
MOVE #PARM-YYYYMMDD        TO ST-V.DATE-ACCT-UPDATE
                              ST-V.DTS-DATN
MOVE *TIMN                 TO ST-V.DTS-TIMN
*
UPDATE (0352)
*
RESET AR-V
MOVE ST-V.ID-NUMBER     TO AR-V.ID-NUMBER
MOVE ST-V.PROCESS-IND   TO AR-V.PROCESS-IND
MOVE #PARM-YYYYMMDD     TO AR-V.TRANSACTION-DATN
MOVE *TIMN              TO AR-V.TRANSACTION-TIMN
MOVE 'EDS'              TO AR-V.CLERK-ID
MOVE ST-V.NAME          TO AR-V.NAME
MOVE #PARM-YYYYMMDD     TO AR-V.ACCT-DATE
MOVE 'STOP'             TO AR-V.TXN-CODE
MOVE FAC-AMOUNT         TO AR-V.DEBIT-AMOUNT
MOVE 440                TO AR-V.TXN-ACCT-NUMBER
*
IF #HOLD-CUR-ACCT-UPDT = 0
  MOVE #PARM-YYYYMMDD      TO AR-V.DATE-LAST-ACCT-UPDATE
ELSE
  MOVE #HOLD-CUR-ACCT-UPDT TO AR-V.DATE-LAST-ACCT-UPDATE
END-IF
*
STORE AR-V
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE PRINT-ERROR
* * * * * * * * * * * * * * * *
*
MOVE TRUE TO #REJECT
ADD 1 TO #CNT-4
DISPLAY (4) #CNT-4
  'SSN'      #SSN
  'Code'     FAC-CODE
  'amount'   #AMOUNT
  'Error'    #ERROR
*
END-SUBROUTINE
*
END
