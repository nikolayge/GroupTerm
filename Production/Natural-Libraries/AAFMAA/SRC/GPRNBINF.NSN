* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
**************************************************************************
* SUBPROGRAM-ID: GPRNRINF
* DESCRIPTION: Common module to validate personal date fields based on certain
*              business rules; called by Admin System (UNIX)
*              The error message codes below are grouped according to category:
*              Gen-Table Primary Key: ERRD
*              Gen-Table Secondary Key: 201-399
*              Please note the following very well before using this module:
*              1. This program can validate all fields at the same time.
*                 If this is the purpose, calling program must populate the
*                 #VALIDATE-FLAG array with "Y".
*              2. This program can validate one field or more at a time. If this
*                 is the purpose, populate with "Y" the occurrence(s) in the
*                 #VALIDATE-FLAG array that correspond(s) to the field in
*                 #MILITARY-INFO.
**************************************************************************
*        MODIFICATION LOG
**************************************************************************
* USER   DATE      TAG  REASON
* RSE  05-14-2012  None Creation
**************************************************************************
DEFINE DATA
PARAMETER USING GPRABINF
LOCAL
1 #I                  (I2)
1 #VALID              (L)
END-DEFINE
*
DECIDE FOR EVERY CONDITION
  WHEN ACCESS-AUTH-CODE <> ' ' AND #VALIDATE-FLAG(1) = 'Y'       /* AAFMAA Access Code
    PERFORM VALIDATE-ACCESS-AUTH-CODE
    IF #SYSTEM = 'UNIX' AND NOT #VALID
      ESCAPE ROUTINE
    END-IF
  WHEN CHIEF-OF-STAFF-IND <> ' ' AND #VALIDATE-FLAG(2) = 'Y'     /* Special Code
    PERFORM VALIDATE-CHIEF-OF-STAFF-IND
    IF #SYSTEM = 'UNIX' AND NOT #VALID
      ESCAPE ROUTINE
    END-IF
  WHEN INS-MAIL-CODE <> ' ' AND #VALIDATE-FLAG(3) = 'Y'          /* Mail Special
    PERFORM VALIDATE-INS-MAIL-CODE
    IF #SYSTEM = 'UNIX' AND NOT #VALID
      ESCAPE ROUTINE
    END-IF
  WHEN DATE-BOOK <> ' ' AND #VALIDATE-FLAG(4) = 'Y'              /* Annual Meeting
    PERFORM VALIDATE-DATE-BOOK
    IF #SYSTEM = 'UNIX' AND NOT #VALID
      ESCAPE ROUTINE
    END-IF
  WHEN ANNUAL-RPT-FLAG <> ' ' AND #VALIDATE-FLAG(5) = 'Y'          /* Annual Report Flag
    PERFORM VALIDATE-ANNUAL-RPT-FLAG
    IF #SYSTEM = 'UNIX' AND NOT #VALID
      ESCAPE ROUTINE
    END-IF
  WHEN BRIDGER-IND <> ' ' AND #VALIDATE-FLAG(6) = 'Y'              /* Bridger Verify Indicator
    PERFORM VALIDATE-BRIDGER-IND
    IF #SYSTEM = 'UNIX' AND NOT #VALID
      ESCAPE ROUTINE
    END-IF
  WHEN NEWSLETTER-CODE <> ' ' AND #VALIDATE-FLAG(7) = 'Y'          /* Newsletter Code
    PERFORM VALIDATE-NEWSLETTER-CODE
    IF #SYSTEM = 'UNIX' AND NOT #VALID
      ESCAPE ROUTINE
    END-IF
  WHEN SUSPEND-CODE <> ' ' AND #VALIDATE-FLAG(8) = 'Y'             /* Underwriting
    PERFORM VALIDATE-SUSPEND-CODE
    IF #SYSTEM = 'UNIX' AND NOT #VALID
      ESCAPE ROUTINE
    END-IF
  WHEN NONE
    IGNORE
END-DECIDE
*
*******************************************
DEFINE SUBROUTINE VALIDATE-ACCESS-AUTH-CODE
*******************************************
IF FUNCTION-CV-CHECK(<'060',ACCESS-AUTH-CODE>) NE ' '  
  ADD 1 TO #I
  #ERROR-CODE (#I) := 254                                        /* AAFMAA Access Code
  ESCAPE ROUTINE
END-IF
*
END-SUBROUTINE
*********************************************
DEFINE SUBROUTINE VALIDATE-CHIEF-OF-STAFF-IND
*********************************************
IF FUNCTION-CV-CHECK(<'063',CHIEF-OF-STAFF-IND>) NE ' '  
  ADD 1 TO #I
  #ERROR-CODE (#I) := 255                                        /* Invalid Special Code.
  ESCAPE ROUTINE
END-IF
*
END-SUBROUTINE
**************************************** 
DEFINE SUBROUTINE VALIDATE-INS-MAIL-CODE
**************************************** 
IF FUNCTION-CV-CHECK(<'042',INS-MAIL-CODE>) NE ' '  
  ADD 1 TO #I
  #ERROR-CODE (#I) := 100                                        /* Invalid code value. Please use lookup.
  ESCAPE ROUTINE
END-IF
*
END-SUBROUTINE
************************************ 
DEFINE SUBROUTINE VALIDATE-DATE-BOOK
************************************ 
IF FUNCTION-CV-CHECK(<'045',DATE-BOOK>) NE ' '  
  ADD 1 TO #I
  #ERROR-CODE (#I) := 100                                        /* Invalid code value. Please use lookup.
  ESCAPE ROUTINE
END-IF
*
END-SUBROUTINE
****************************************** 
DEFINE SUBROUTINE VALIDATE-ANNUAL-RPT-FLAG
******************************************
IF FUNCTION-CV-CHECK(<'046',ANNUAL-RPT-FLAG>) NE ' '  
  ADD 1 TO #I
  #ERROR-CODE (#I) := 100                                        /* Invalid code value. Please use lookup.
  ESCAPE ROUTINE
END-IF
*
END-SUBROUTINE
************************************** 
DEFINE SUBROUTINE VALIDATE-BRIDGER-IND
************************************** 
IF FUNCTION-CV-CHECK(<'048',BRIDGER-IND>) NE ' '  
  ADD 1 TO #I
  #ERROR-CODE (#I) := 100                                        /* Invalid code value. Please use lookup.
  ESCAPE ROUTINE
END-IF
*
END-SUBROUTINE
*******************************3********** 
DEFINE SUBROUTINE VALIDATE-NEWSLETTER-CODE
******************************************
IF FUNCTION-CV-CHECK(<'043',NEWSLETTER-CODE>) NE ' '  
  ADD 1 TO #I
  #ERROR-CODE (#I) := 100                                        /* Invalid code value. Please use lookup.
  ESCAPE ROUTINE
END-IF
*
END-SUBROUTINE
*************************************** 
DEFINE SUBROUTINE VALIDATE-SUSPEND-CODE
***************************************
IF FUNCTION-CV-CHECK(<'044',SUSPEND-CODE>) NE ' '  
  ADD 1 TO #I
  #ERROR-CODE (#I) := 100                                        /* Invalid code value. Please use lookup.
  ESCAPE ROUTINE
END-IF
*
END-SUBROUTINE
**************
END












