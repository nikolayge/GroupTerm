* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* PGM-ID: C2690PST display last annual statement
*****************************************************
*                       MODIFICATION LOG
* USER   DATE  TAG     REASON
* DRW  12042004 DW1  get SVC FEE from file instead of calc
* DRW  01292005 DW2  make screen look like current ann stmt
* DRW  01292005 DW3  remove P-I from AVL-CSV & DB on cap pols
* DRW  01312005 DW4  Force Given P & I to selected Members
* DRW  01312005 DW5  Check for bankruptcy
* DRW  02092005 DW6  show init DB as beginning DB on new pols
* DRW  02242005 DW7  show negative Equity
* DRW  03052005 DW8  Add AL (Annuity Life) PROCESSING
* DRW  10252005 DW9  show ACQ COST as adjustment in COI
* DRW  10262005 DW10 Calc Dues Paid
* DRW  10282005 DW11 Show Negative Equity as a "-"
* DRW  11092005 DW12 CALC Init DB for AL pols using GDROPSTM
* DRW  12262005 DW13 CALC DUES for TERM
* DRW  12282005 DW14 PROCESS LIV-SVC/SAS/OO-CREDIT
* DRW  10312006 DW15 Calc Orig Iss Age for RT Pols after 5-Yr Renewal
* DRW  11302006 DW16 Show LVS/SAS/OO-CRED
* DRW  01112007 DW17 Force 90% of Face Amount INIT DB for all AL pols
* DRW  01122007 DW18 Use gtr of 90% of BEG-DB if doing 2006 stmt
* DRW  09192007 DW19 Reset Invalid Characters for PDF to '*'
* DRW  10012007 DW20 Make Changes for 2007 Statements
* DRW  10102007 DW21 Remove PDF Processing
* DRW 11/21/2007 DW22 Add msg if Issued in current Year
* DRW 11/26/2007 DW23 Stop showing Last years Annual Stmts
* DRW 01/01/2008 DW24 Force bypass of LTC policies
* DRW 08/28/2008 DW25 Gen Plus Processing
* DRW 09/29/2008 DW26 Changes for 2008 Statements
* DRW 09/30/2009 DW27 Changes for 2009 STATEMENTS
* PAM 01/28/2010 PM28 Changes for 2010 Statements
* PAM 02/03/2011 PM29 CHanges for 2011 Statements
* PAM 02/07/2012 PM30 Changes for 2012 Statements
* YAK 09/26/2012 YK1  Use function to identify Level Term II plans
* YAK 11/15/2012 YK2  Add No Medical Term (EZ)
* VXT 12/02/2012 vt1  Changes for 2012 Statements (test run)
* NGG  20130204  NG1  Add Nursing Home Pay Status
* vxt 11/13/2013 vt2  Changes for 2013 Statements
* TMT 06/12/2014 TT1  Contact Normalization - DOB and Sex
* vxt 11/05/2014 vt3  Changes for 2014 Statements
* TMT 11/19/2014 TT2  Annuity Life 2 - New policy
* vxt 12/09/2014 vt4  Change the calculation of issue-age for RT plans
* vxt 11/10/2015 vt5  Changes for 2015 Statements
* vxt 11/01/2016 vt6  Changes for 2016 Statements - Ticket 4606
* vxt 10/23/2017 vt7  Changes for 2017 Statements - 
****************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL  USING GONERLXX /* WORK FIELDS FOR GONERCXX - ERROR ROUTINE
LOCAL  USING G3500AAD
* scan for "CHG" on every month change in NOV & DEC & JAN to display
* correct "to date" on Annual Statements
* if ST STM is used after Dec m/e and before *datn of 1/1/200?
* incorrect #ADMIN/ACQ-COST is calculated
*
LOCAL  /* bump below yyyy when years are shifted in athjanns in Nov/Dec
*                              /* during 2003 #curr-yyyy should be 2002
* check ending stmt dt for curr tr if in testing mode at about line 3510
*
1 #PDF-CHARS-100    (A100)                      /* DW19
*
1 #BEG-DB-AL   (N7.2)    /* DW18
1 #5-YR-RT-DT     (N6)     /* DW15
1 #10-YR-RT-DT    (N6)
1 #RT-NUM-RENEWS  (N3)
*
1 #AMT        (N3.2)
1 #AMT-DISP   (A7)
1 #LVS-DISP   (A7)   /* DW16
1 #SAS-DISP   (A7)
1 #OO-CR-DISP (A7)   /* DW16
1 #HOLD-CN    (N9)
1 #LIV-SVC   (N5.2) /* DW14
1 #SAS       (N5.2)
1 #OO-CREDIT (N5.2)
1 #A9     (A9)
1 REDEFINE #A9
  2 #N7-2  (N7.2)
*
1 #A5     (A5)
1 REDEFINE #A5
  2 #N3-2  (N3.2)
*
1 #PAY-STAT     (A4)      /* DW12
1 #FACE          (P7.2)
1 #DB            (P7.2)
1 #OO-DATE        (A10)
1 #DGF-DATE       (A10)
1 #EQU-SIGN       (A1)    /* DW10
1 #SVC-FEE-SIGN   (A1)    /* DW10
1 #DUES           (N3.2)  /* DW10
1 #DUES-PAID      (N5.2)
1 #DUES-PAID-MSG  (A35)
1 #NEG-EQUITY     (N5.2)  /* DW7
1 #NEG-EQUITY-DISP (A10)
1 #NEG-EQUITY-MSG (A30)
1 #CUR-ACQ-BAL-MSG (A35) /* DW9
1 #BANKRUPCY-MSG  (A35)  /* DW5
1 #USER     (A14)
1 #CURR-YYYY    (N4) INIT <2017> /* Yr of the most cur stmt  CHG DW20/DW26/DW27/PM29/PM30  vt1 was 2011  /* vt2 was 2012 /* vt3 was 2013 /* vt5 was 2014 /* vt6 was 2015 /* vt7 was 2016
1 #PRIOR-YYYY   (N4) INIT <2016> /* Prior Year                /* DW27/PM29/PM30 vt1 was 2010  /* vt2 was 2011 /* vt3 was 2012 /* vt5 was 2013 /* vt6 was 2014 /* vt6 was 2015
1 #1ST-MON-CURR-YEAR (N6)
1 #LST-MON-CURR-YEAR (N6)
1 #STMT-TO-MONTH        (A3)
1 #NUM-MONS-FIRST-HALF  (N2)   /* USED for #dues-paid calc
1 #NUM-MONS-1ST-HALF    (N2)
1 #NUM-MONS-LAST-HALF   (N2)
1 #NUM-MONS-2ND-HALF    (N2)
*
1 #ACQ-PER-POL           (N3.2) INIT <197.65>  /* DW9
1 #ACQ-PER-1K            (N0.2) INIT <.99>
1 #NXT-MON-MAINT-PER-POL (N2.2) INIT <21.60>
1 #NXT-MON-MAINT-PER-1K  (N.2)  INIT <.11>
1 #FILL-BLNKS (A78/24)
* 1 #PDF    (L)                           /* DW21
1 #PDF-POC  (A1)
1 #PDF-RPU  (A1)
1 #WL   (L)
1 #TERM (L)
*
1 NT-V VIEW OF A-NOTES   /* DW5
  2 NOTE-TEXT          (A60/60)
  2 REDEFINE NOTE-TEXT
    3 NOTE-TEXT-60    (60)
      4 NOTE-TEXT-DG-LBL  (A11)
      4 NOTE-TEXT-DG-MM   (A2)
      4 NOTE-TEXT-DG-SL1  (A1)
      4 NOTE-TEXT-DG-DD   (A2)
      4 NOTE-TEXT-DG-SL2  (A1)
      4 NOTE-TEXT-DG-YYYY (A4)
      4 NOTE-TEXT-DG-FILL (A39)
  2 REDEFINE NOTE-TEXT
    3 NOTE-TEXT-60-2  (60)
      4 NOTE-TEXT-OO-LBL  (A34)
      4 NOTE-TEXT-OO-MM   (A2)
      4 NOTE-TEXT-OO-SL1  (A1)
      4 NOTE-TEXT-OO-DD   (A2)
      4 NOTE-TEXT-OO-SL2  (A1)
      4 NOTE-TEXT-OO-YYYY (A4)
      4 NOTE-TEXT-OO-FILL (A16)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER
  2 PROCESS-IND
  2 MEMBER-CONTACT-ID
*   2 DATE-OF-BIRTH             /* TT1
  2 RANK
  2 NAME
  2 X-LOAN-AMOUNT (9)
  2 STATUS        (9)
  2 PAY-STATUS    (9)
  2 PLAN          (9)
  2 REDEFINE PLAN
    3 PLAN-OCC   (9)
      4 PLAN-A1     (A1)
      4 PLAN-N2     (N2)
  2 ISSUE-DATE    (9)
  2 REDEFINE ISSUE-DATE
    3 ISSUE-DATE-OCC (9)
      4 ISSUE-DATE-YYYYMM (N6)
      4 REDEFINE ISSUE-DATE-YYYYMM
        5 ISSUE-DATE-YYYY (N4)
        5 ISSUE-DATE-MM   (N2)
      4 ISSUE-DATE-DD   (N2)
  2 SPLIT-IND     (9)
  2 ISSUE-AGE     (9)
  2 PAID-UP-DATE  (9)
  2 FACE-AMOUNT   (9)
  2 DEATH-BENEFIT  (9)
  2 CONV-DURATION (9)
  2 NUM-MBRSHIPS  (9)
  2 EXPIRY-DAY    (9)
  2 SMOKER-FLAG   (9)
  2 MONTH-ALLOC-AMT  (9)
  2 MEC-IND          (9)
  2 CASH-VALUE       (9)
  2 BEG-CASH-VALUE   (9)
*
  2 STM-P-I     (N6.2/9)
  2 STM-TPP     (N6.2/9)
  2 STM-PREM    (N6.2/9)
  2 STM-COI     (N6.2/9)
  2 STM-EQU     (N6.2/9)
  2 STM-INT     (N6.2/9)
  2 STM-BEG-CV  (N7.2/9)
  2 STM-END-CV  (N7.2/9)
  2 STM-BEG-DB  (N7.2/9)
  2 STM-END-DB  (N7.2/9)
  2 STM-SVC-FEE (N3.2/9)
*
  2 STM-P-I-LAST    (N6.2/9)
  2 STM-TPP-LAST    (N6.2/9)
  2 STM-PREM-LAST   (N6.2/9)
  2 STM-COI-LAST    (N6.2/9)
  2 STM-EQU-LAST    (N6.2/9)
  2 STM-INT-LAST    (N6.2/9)
  2 STM-BEG-CV-LAST (N7.2/9)
  2 STM-END-CV-LAST (N7.2/9)
  2 STM-BEG-DB-LAST (N7.2/9)
  2 STM-END-DB-LAST (N7.2/9)
  2 STM-SVC-FEE-LAST(N3.2/9)
*
1 #CAP-P-I       (A35)   /* DW3
1 #X             (L)     /* DW4
1 #DATA-CN       (N6)    /* DW4
1 #FST-X         (I2)
1 #MONS          (N3)
1 #SVC-FEE       (N3.2)
1 #SVC-FEE-A     (A7)
1 #COI           (N6.2)
1 #COI-A         (A11)
1 #ADMIN         (N6.2)
1 #ADMIN-A       (A11)
1 #BEG-ACQ-COST  (N6.2)           /* DW9
1 #WORK-6-7      (N6.7)
1 #MON-AMORT-ACQ (N3.2)
1 #ACQ-COST      (N6.2)
1 #ACQ-COST-A    (A11)            /* DW9
1 #DIFF          (N5.2)
1 #ADJUST        (N5.2)
1 #SMOKER-LBL    (A10)
1 #FROM-MON      (A3)
1 #TEXT          (A78)
1 #TPP-CSV-MSG   (A16)
1 #NEG-SVC-MSG   (A16)
1 #NUM-STMTS     (P3)
1 #STMT-YYYY     (N4)
1 #POL-TYPE      (A35)
1 #STMT-PER      (A26)
1 #POL-NUM       (A16)
1 #ISS-DTE       (A11)
1 #ISS-AGE       (A2)
1 REDEFINE #ISS-AGE
  2 #ISS-AGE-N  (N2)
*
1 #INIT-DB       (N7.2)
1 #INIT-DB-A     (A13)                            /* vt was a11
1 #DB-GROWTH     (N6.2)
1 #DB-GROWTH-A   (A13)                            /* vt was a11
1 #CURR-DB-GROWTH (N7.2)   /* DW2
1 #CURR-DB-GROWTH-A (A13)  /* DW2                 /* vt was a11
1 #LOAN-A        (A13)                            /* vt was a11
1 #AVL-DB        (N7.2)
1 #AVL-DB-A      (A13)                            /* vt was a11
1 #TPP-A         (A13)                            /* vt was a11
1 #PRM-GRO       (N6.2)
1 #PRM-GRO-A     (A13)                            /* vt was a11
1 #AVL-CSV       (N7.2)
1 #AVL-CSV-A     (A13)                            /* vt was a11
1 #YTD-PRM-A     (A13)                            /* vt was a11
1 #YTD-COI-A     (A13)                            /* vt was a11
1 #YTD-EQU-A     (A13)                            /* vt was a11
1 #YTD-INT-A     (A13)                            /* vt was a11
1 #BEG-CV-A      (A13)                          /* vt was a11
1 #YTD-CV-CHG    (N6.2)   /* not now used
1 #YTD-CV-CHG-A  (A13)    /* not now used         /* vt was a11
1 #END-CV-A      (A13)                            /* vt was a11
1 #BEG-DB-A      (A13)                            /* vt was a11
1 #YTD-DB-CHG    (N7.2)
1 #YTD-DB-CHG-A  (A13)                            /* vt was a11
1 #END-DB-A      (A13)                            /* vt was a11
*
1 #YYYYMMDD   (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMMDD-A (A8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY   (N4)
    3 #MM     (N2)
  2 #DD     (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A (A4)
  2 #MM-A   (A2)
  2 #DD-A   (A2)
*
1 #MONTHS (A36) INIT <'JanFebMarAprMayJunJulAugSepOctNovDec'>
1 REDEFINE #MONTHS
  2 #MON  (A3/12)
*
1 #I1    (I2)
1 #I2    (I2)
1 #I3    (I2)
1 #LST   (L)
*
1 DATE-OF-BIRTH        (N8.0)               /* TT1
*
END-DEFINE
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
INCLUDE GONERCXX       /* NATURAL ERROR ROUTINE
*
MOVE 6 TO #NUM-MONS-FIRST-HALF /* No pols issued in curr year have dues
*                                            CHG
MOVE 6 TO #NUM-MONS-LAST-HALF /*Assumes it is in 1st Part of the yr /* DW20
************************************************************************************** IMPORTANT for pre annual terial runs *************************************************
* MOVE 5 TO #NUM-MONS-LAST-HALF /* Only use if testing (10=3 11=4 12=5) /* DW26  /* vt
*                                                  on  10/1 11/1 12/1
***************************************************************************************************************************************************************************
MOVE #CURR-YYYY TO #YYYY
MOVE 01         TO #MM
MOVE #YYYYMM TO #1ST-MON-CURR-YEAR
MOVE 12 TO #MM
MOVE #YYYYMM TO #LST-MON-CURR-YEAR
*
* IF #CGA-ORIG-SUFFIX = 'PDF'    /* DW21
*   MOVE TRUE TO #PDF
* END-IF
*
MOVE '*' TO #CGA-SCR-COMMAND
*
GET ST-V #CGA-ISN
*
RESET #OO-DATE #DGF-DATE
FIND (1) NT-V WITH ID-NUMBER = ST-V.ID-NUMBER        /* DW5
  FOR #I2 1 TO 60
    IF NOTE-TEXT (#I2) = MASK ('*Mbr in bnkrptcy')   /* DW5
      MOVE 'Member in Bankruptcy' TO #BANKRUPCY-MSG  /* DW5
    END-IF
*
    IF NT-V.NOTE-TEXT (#I2) = MASK ('*#DE-GF ON')
      COMPRESS NOTE-TEXT-DG-YYYY (#I2) NOTE-TEXT-DG-MM (#I2)
        NOTE-TEXT-DG-DD (#I2) INTO #YYYYMMDD-A LEAVING NO
      COMPRESS #MM-A #DD-A #YYYY-A INTO #DGF-DATE WITH '/'
    END-IF
*
    IF NT-V.NOTE-TEXT (#I2) = MASK ('*#OPTED-OUT OF LIVING')
      COMPRESS NOTE-TEXT-OO-YYYY (#I2) NOTE-TEXT-OO-MM (#I2)
        NOTE-TEXT-OO-DD (#I2) INTO #YYYYMMDD-A LEAVING NO
      COMPRESS #MM-A #DD-A #YYYY-A INTO #OO-DATE WITH '/'
    END-IF
  END-FOR
END-FIND
*
REPEAT  /* to get last years statement
*
  IF #LST
    ESCAPE BOTTOM          /* Stop showing last years Ann Stmt   /* DW23
    MOVE STM-P-I-LAST    (*) TO STM-P-I    (*)
    MOVE STM-TPP-LAST    (*) TO STM-TPP    (*)
    MOVE STM-PREM-LAST   (*) TO STM-PREM   (*)
    MOVE STM-COI-LAST    (*) TO STM-COI    (*)
    MOVE STM-EQU-LAST    (*) TO STM-EQU    (*)
    MOVE STM-INT-LAST    (*) TO STM-INT    (*)
    MOVE STM-BEG-CV-LAST (*) TO STM-BEG-CV (*)
    MOVE STM-END-CV-LAST (*) TO STM-END-CV (*)
    MOVE STM-BEG-DB-LAST (*) TO STM-BEG-DB (*)
    MOVE STM-END-DB-LAST (*) TO STM-END-DB (*)
    MOVE STM-SVC-FEE-LAST(*) TO STM-SVC-FEE (*)    /*<<<<<<<<<<<<<<<<<<<
    MOVE #PRIOR-YYYY TO #STMT-YYYY
  ELSE
    MOVE #CURR-YYYY TO #STMT-YYYY
  END-IF
*
  RESET #FST-X
  FOR #I1 1 TO 9
    IF STATUS (#I1) ='D'
      MOVE #I1 TO #FST-X
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  RESET #NUM-STMTS
  FOR #I1 1 TO 9
    IF  (STATUS (#I1) NE 'D')
        OR (PLAN (#I1) = 'SO')
      ESCAPE TOP
    END-IF
*
    RESET #TERM #WL
* IF  (PLAN (#I1) = 'LT' OR = 'RT')                                  /* YK1
*  OR  ((PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z'))  /* LTII  /* YK1
    IF FUNCTION-TERM-POLICY(<PLAN(#I1)>)                             /* YK1
      MOVE TRUE TO #TERM
    ELSE
      MOVE TRUE TO #WL
    END-IF
*
    IF #TERM AND #LST
      ESCAPE BOTTOM
    END-IF
*                                                            NG1 Start
    IF   ((STM-BEG-CV (#I1) = 0) AND (STM-END-CV (#I1) = 0)
        AND  (STM-END-DB (#I1) = 0))
        OR (PAY-STATUS (#I1) = '43' OR= '73')  /* PULT    /* DW24
      IF PAY-STATUS (#I1) = '43'  OR= '73' /* PULT    /* DW24
        COMPRESS ISSUE-DATE (#I1) 'Plan' PLAN (#I1)
          'PULT/NH policies get no ANNUAL STMT' INTO #TEXT
      ELSE
        COMPRESS ISSUE-DATE (#I1) 'Plan' PLAN (#I1)
          'Has no ANNUAL STMT history' INTO #TEXT
      END-IF
      IF ISSUE-DATE-YYYY (#I1) = #CURR-YYYY                               /* DW22
        COMPRESS #TEXT 'Pol is in 1st year' INTO #TEXT
      END-IF
      move 2012 to #stmt-yyyy                                     /* vt temporary fix
      INPUT TEXT #TEXT USING MAP 'C2692MST'  /* New Layout DW9
      IF #CGA-SCR-COMMAND NE '*'
        FETCH 'G1000PXX'
      END-IF
      ESCAPE TOP
    END-IF
*                                                           NG1 End
    RESET #TEXT
    ADD 1 TO #NUM-STMTS
*
    RESET #SVC-FEE #ADMIN #COI #ACQ-COST #CUR-ACQ-BAL-MSG
    RESET #DUES-PAID #DUES-PAID-MSG             /* DW10
*
    IF #WL
      PERFORM COI-SPLIT
    ELSE
      IF #LST                                /* DW13
        MOVE #NUM-MONS-FIRST-HALF TO #NUM-MONS-1ST-HALF  /* Start with 6
        MOVE 6                    TO #NUM-MONS-2ND-HALF  /* Start with 6
      ELSE
        MOVE #NUM-MONS-FIRST-HALF TO #NUM-MONS-1ST-HALF  /* Start with 6
        MOVE #NUM-MONS-LAST-HALF TO #NUM-MONS-2ND-HALF /* depnds on cr mon
      END-IF
*
      PERFORM CALC-DUES                       /* DW13
    END-IF
*
    RESET #CAP-P-I                   /* DW3
    IF CONV-DURATION (#I1) = 999     /* DW3
*   IF #LST     /* Only used in 2004 & 2005 stmts        /* DW4    CHG
*     RESET #X                                  /* DW4
*     MOVE ST-V.ID-NUMBER TO #DATA-CN         /* DW4  (Same as ATHPANNP)
* F #DATA-CN = 105751 MOVE 174.72 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 110624 MOVE 142.97 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 113032 MOVE 164.01 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 109363 MOVE 816.52 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 109072 MOVE 143.79 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 105290 MOVE 259.05 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 106412 MOVE 133.29 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 104758 MOVE 149.04 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 111693 MOVE  24.24 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 107260 MOVE  13.56 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 110816 MOVE 285.70 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 108718 MOVE 118.40 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 105732 MOVE 174.72 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 110866 MOVE 142.97 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 107458 MOVE 173.76 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 110471 MOVE 164.29 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 110918 MOVE 142.98 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 105373 MOVE 190.10 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
* F #DATA-CN = 110096 MOVE 828.51 TO STM-P-I(#I1) MOVE TRUE TO #X END-IF
*     IF #X
*       WRITE 'P & I adjusted as per KHB to' STM-P-I(#I1) /* DW3
*     END-IF
*     MOVE EDITED STM-P-I (#I1) (EM=ZZ,ZZZ.99) TO #CAP-P-I /* DW3
*     COMPRESS 'CAP Loan & Int = $' #CAP-P-I INTO #CAP-P-I LEAVING NO
*     RESET STM-P-I (#I1)            /* DW3
*   ELSE    /* starting for 2005
      MOVE EDITED X-LOAN-AMOUNT(#I1) (EM=ZZ,ZZZ.99) TO #CAP-P-I
      COMPRESS 'Current CAP Loan = $' #CAP-P-I INTO #CAP-P-I LEAVING NO
*   END-IF                                      /* DW4
*
    END-IF                           /* DW3
*
    IF SMOKER-FLAG (#I1) = 'S'
      MOVE 'Smoker' TO #SMOKER-LBL
    ELSE
      IF SMOKER-FLAG (#I1) = 'N'
        MOVE 'Non-Smoker' TO #SMOKER-LBL
      ELSE
        MOVE 'Combined' TO #SMOKER-LBL
      END-IF
    END-IF
*
    CALLNAT 'GPLNMSXX' #POL-NUM ST-V.ID-NUMBER #I1 /* build POL-#
*
    RESET #INIT-DB
    IF  ((ISSUE-DATE (#I1) GE 19870401)
        AND (PAY-STATUS (#I1) NE '45'))
        OR #TERM
      MOVE FACE-AMOUNT (#I1) TO #INIT-DB
    ELSE
      IF PAY-STATUS (#I1) = '45'
        IF  ISSUE-DATE (#I1) LT 19941201
          IF ISSUE-DATE (#I1) GE 19870401
            COMPUTE #INIT-DB = NUM-MBRSHIPS (#I1) * 5000
          ELSE
            COMPUTE #INIT-DB = NUM-MBRSHIPS (#I1) * 3000
          END-IF
        ELSE
          COMPUTE #INIT-DB = EXPIRY-DAY (#I1) * 5000
        END-IF
      ELSE
        COMPUTE #INIT-DB = (FACE-AMOUNT (#I1) / 5000) * 3000
      END-IF
    END-IF
*
    IF IS-ANNUITY-LIFE(<PLAN(#I1)>)   /* TT2
      COMPUTE #INIT-DB = FACE-AMOUNT (#I1)  * .90
    END-IF
*
* MOVE FACE-AMOUNT (#I1) TO #FACE   Removed 1/11/2007 /* DW17
* RESET #DB
* IF PLAN (#I1) = 'AL'   /* DW6
*   CALLNAT 'GDROPSTM' USING
*     PLAN          (#I1)
*     SMOKER-FLAG   (#I1)
*     DATE-OF-BIRTH
*     ISSUE-DATE    (#I1)
*     PAID-UP-DATE  (#I1)
*     ISSUE-DATE (#I1)    /* Calc DB as of issue-date
*     ISSUE-AGE     (#I1)
*     #PAY-STAT
*     #FACE
*     #DB
*     CASH-VALUE (#I1)
*     BEG-CASH-VALUE (#I1)
*
*     MOVE #DB TO #INIT-DB
*
*     IF #LST AND (#PRIOR-YYYY = 2005)   /* DW17
*       COMPUTE #INIT-DB = #FACE * .90
*     END-IF
* END-IF
*
    IF   (IS-ANNUITY-LIFE(<PLAN (#I1)>)) /* ONLY for showing 2006 info /* DW18  /* TT2
        AND (((NOT #LST) AND (*DATN LT 20071001)) /* Assumes shifts on 10/1
        OR   (#LST AND (*DATN LT 20081001)))     /* Assumes shifts on 10/1
        AND (ISSUE-DATE (#I1) LT 20060101)
        AND (STM-BEG-DB (#I1) NE 0)
        AND (FACE-AMOUNT (#I1) * .90) GT STM-BEG-DB (#I1)
      COMPUTE STM-BEG-DB (#I1) = FACE-AMOUNT (#I1) * .90
    END-IF
*
*  below 5 lines only needed during 2003 & 2004 for current st stm
*     and in 2004 for last years screen  (for 7PF's like 104253)
* IF   (#INIT-DB GT STM-END-DB (#I1)) /* needed since in 1/2003 tim
*  AND (PLAN (#I1) = '7PF') /* had us increase 73 7P Policies face-amt
*   MOVE #INIT-DB TO STM-END-DB (#I1)  /* to make them not be MEC
*   MOVE #INIT-DB TO STM-BEG-DB (#I1)  /* to show no growth
* END-IF
*
    RESET #TPP-CSV-MSG #PDF-POC
    IF  (STM-END-CV (#I1) LE STM-TPP (#I1))  /* tpp must exceed csv
        AND #WL
      MOVE 'TPP exceeds CSV' TO #TPP-CSV-MSG
      MOVE 'Y' TO #PDF-POC
    END-IF
*
    RESET #AVL-CSV #DB-GROWTH #YTD-CV-CHG #PRM-GRO #YTD-DB-CHG #AVL-DB
      #CURR-DB-GROWTH
*
    IF #WL
      COMPUTE #AVL-CSV   = STM-END-CV (#I1) - STM-P-I (#I1)
      COMPUTE #DB-GROWTH = STM-END-DB (#I1) - #INIT-DB
*
      IF STM-BEG-DB (#I1) = 0                                /* DW6
        COMPUTE #CURR-DB-GROWTH = STM-END-DB(#I1) - #INIT-DB /* DW6
      ELSE                                                   /* DW6
        COMPUTE #CURR-DB-GROWTH = STM-END-DB(#I1) - STM-BEG-DB(#I1) /* DW2
      END-IF
*
      IF #CURR-DB-GROWTH LT 0    /* DW2
        RESET #CURR-DB-GROWTH
      END-IF
*
      COMPUTE #YTD-CV-CHG = STM-END-CV (#I1) - STM-BEG-CV (#I1)
      COMPUTE #PRM-GRO   = STM-END-CV (#I1) - STM-TPP (#I1)
      COMPUTE #YTD-DB-CHG = STM-END-DB (#I1) - STM-BEG-DB (#I1)
    END-IF
*
    COMPUTE #AVL-DB    = STM-END-DB (#I1) - STM-P-I (#I1)
*
    IF   (PAY-STATUS (#I1) NE '45')
        AND (#DB-GROWTH LT 0)
      RESET #DB-GROWTH
    END-IF
    IF #PRM-GRO   LT 0 RESET #PRM-GRO END-IF
*
    MOVE EDITED #INIT-DB      (EM=-z,ZZZ,ZZ9.99) TO #INIT-DB-A                             /* vt was em=zzz,zz9.99 \/
    MOVE EDITED #DB-GROWTH    (EM=-z,ZZZ,ZZ9.99) TO #DB-GROWTH-A
    MOVE EDITED #CURR-DB-GROWTH (EM=-z,ZZZ,ZZ9.99)                   /* DW2
      TO #CURR-DB-GROWTH-A
    MOVE EDITED STM-P-I (#I1) (EM=-z,ZZZ,ZZ9.99) TO #LOAN-A
    MOVE EDITED #AVL-DB       (EM=-z,ZZZ,ZZ9.99) TO #AVL-DB-A
*
    MOVE EDITED STM-TPP (#I1) (EM=-z,ZZZ,ZZ9.99) TO #TPP-A
    MOVE EDITED #PRM-GRO      (EM=-z,ZZZ,ZZ9.99) TO #PRM-GRO-A
    MOVE EDITED #AVL-CSV      (EM=-z,ZZZ,ZZ9.99) TO #AVL-CSV-A
*
    MOVE EDITED STM-PREM (#I1) (EM=-z,ZZZ,ZZ9.99) TO #YTD-PRM-A
    MOVE EDITED STM-COI  (#I1) (EM=-z,ZZZ,ZZ9.99) TO #YTD-COI-A
*
    RESET #NEG-SVC-MSG   /* DW11
    MOVE '+' TO #EQU-SIGN    /* DW11
    IF STM-EQU (#I1) LT 0
      MOVE '-' TO #EQU-SIGN
      MOVE 'Negative SVC FEE' TO #NEG-SVC-MSG
    END-IF
    MOVE EDITED STM-EQU  (#I1) (EM=z,ZZZ,ZZ9.99) TO #YTD-EQU-A /* no -
*
    MOVE EDITED STM-INT  (#I1) (EM=-z,ZZZ,ZZ9.99) TO #YTD-INT-A
    MOVE EDITED STM-BEG-CV (#I1) (EM=-z,ZZZ,ZZ9.99) TO #BEG-CV-A
*
    IF STM-BEG-DB (#I1) = 0                                /* DW6
      MOVE EDITED #INIT-DB (EM=-z,ZZZ,ZZ9.99) TO #BEG-DB-A   /* DW6
    ELSE                                                   /* DW6
      MOVE EDITED STM-BEG-DB (#I1) (EM=-z,ZZZ,ZZ9.99) TO #BEG-DB-A
*
    END-IF
    MOVE EDITED #YTD-CV-CHG      (EM=-z,ZZZ,ZZ9.99) TO #YTD-CV-CHG-A
    MOVE EDITED #YTD-DB-CHG      (EM=-z,ZZZ,ZZ9.99) TO #YTD-DB-CHG-A
    MOVE EDITED STM-END-CV (#I1) (EM=-z,ZZZ,ZZ9.99) TO #END-CV-A
    MOVE EDITED STM-END-DB (#I1) (EM=-z,ZZZ,ZZ9.99) TO #END-DB-A                               /* vt was em=zzz,zz9.99 /\
    RESET #NEG-SVC-MSG
    MOVE '-' TO #SVC-FEE-SIGN    /* DW11
    IF #SVC-FEE LT 0
      MOVE '+' TO #SVC-FEE-SIGN
      MOVE 'Negative SVC FEE' TO #NEG-SVC-MSG
    END-IF
*
    RESET #NEG-EQUITY-MSG     /* DW7
    IF #WL AND (NOT #LST)     /* DW7
*   COMPUTE #NEG-EQUITY = STM-BEG-CV (#I1)   /* DW11
*     + STM-PREM (#I1)
*     - #ADMIN
*     - #ACQ-COST    /* DW9
*     - #SVC-FEE
*     - #COI
*     + STM-EQU (#I1)
*     + STM-INT (#I1)
*     - STM-P-I (#I1)
*     - STM-P-I (#I1)
*     - #AVL-CSV
*     MOVE EDITED #NEG-EQUITY (EM=ZZ,ZZZ.99) TO #NEG-EQUITY-DISP
      IF STM-EQU (#I1) LT 0                 /* DW11
        MOVE EDITED STM-EQU (#I1) (EM=ZZ,ZZZ.99) TO #NEG-EQUITY-DISP
        MOVE LEFT #NEG-EQUITY-DISP TO #NEG-EQUITY-DISP
        COMPRESS 'Equity is negative -' #NEG-EQUITY-DISP
          INTO #NEG-EQUITY-MSG
      END-IF
    END-IF
*
    MOVE ISSUE-DATE (#I1) TO #YYYYMMDD
    COMPRESS #DD-A #MON (#MM) #YYYY-A INTO #ISS-DTE WITH '-'
*
    MOVE ISSUE-AGE (#I1) TO #ISS-AGE
*
    IF PLAN (#I1) = 'RT'    /* DW15
*   BELOW LOGIC IS ALSO IN ATHPANNS   /* DW15
*       MOVE *DATN TO #YYYYMMDD                                         /* vt4 \/
*       ADD 1 TO #MM
*       IF #MM GT 12
*         SUBTRACT 12 FROM #MM
*         ADD 1 TO #YYYY
*       END-IF
*       SUBTRACT 5 FROM #YYYY
*       MOVE #YYYYMM TO #5-YR-RT-DT
*       SUBTRACT 5 FROM #YYYY
*       MOVE #YYYYMM TO #10-YR-RT-DT  /* This will work till 1/1/2012   /* vt4 /\
* *
      MOVE ISSUE-DATE (#I1) TO #YYYYMMDD
*
      RESET DATE-OF-BIRTH                                                 /* TT1
      DATE-OF-BIRTH    := GET-DATE-OF-BIRTH(<MEMBER-CONTACT-ID>)          /* TT1
*
      SUBTRACT DATE-OF-BIRTH FROM #YYYYMMDD
      move #yyyy to #iss-age                                              /* vt4 \/
*
*       IF #YYYY GE 70
*         RESET #RT-NUM-RENEWS
*       ELSE
*         IF #YYYY GE 65
*           MOVE 1 TO #RT-NUM-RENEWS
*         ELSE
*           IF #YYYY GE 60
*             MOVE 2 TO #RT-NUM-RENEWS
*           ELSE
*             MOVE 99 TO #RT-NUM-RENEWS
*           END-IF
*         END-IF
*       END-IF
* *
*       IF ISSUE-DATE-YYYYMM (#I1) LE #10-YR-RT-DT
*         IF #RT-NUM-RENEWS GE 1
*           SUBTRACT 5 FROM #ISS-AGE-N
*         ELSE
*           IF #RT-NUM-RENEWS GE 2
*             SUBTRACT 10 FROM #ISS-AGE-N
*           END-IF
*         END-IF
*         WRITE 'RT Orig Iss-age Calculated - Iss Age=' ISSUE-AGE (#I1)
*           'Orig =' #ISS-AGE
*       ELSE
*         IF ISSUE-DATE-YYYYMM (#I1) LE #5-YR-RT-DT
*           IF #RT-NUM-RENEWS GE 1
*             SUBTRACT 5 FROM #ISS-AGE-N
*           END-IF
*         END-IF
* *
*         WRITE 'RT Orig Iss-age Calculated - Iss Age=' ISSUE-AGE (#I1)
*           'Orig =' #ISS-AGE
*       END-IF                                                              /* vt4 /\
    END-IF
* *   ABOVE LOGIC IS ALSO IN ATHPANNS   /* DW15
* *
*
    MOVE ISSUE-DATE (#I1) TO #YYYYMMDD
    MOVE 'Jan' TO #FROM-MON
*
    IF   (NOT #LST)   /* must be a partial years stmt
        AND (ISSUE-DATE-YYYY (#I1) GE #CURR-YYYY)
      MOVE ISSUE-DATE (#I1) TO #YYYYMMDD
      MOVE #MON (#MM) TO #FROM-MON
    END-IF
*
      move 2017 to #stmt-yyyy                                /* vt1 temporary fix  /* vt2/vt3   /* vt5 /* vt6 /* vt7
    COMPRESS #DD #FROM-MON #STMT-YYYY INTO #STMT-PER WITH '-'
    COMPRESS #STMT-PER 'to' #DD INTO #STMT-PER
    MOVE 'Jan' TO #STMT-TO-MONTH
*********************************************************************************  IMPORTANT cHANGEs for trial annual statement run ********************************
*  CHG or remove below on Month change
**       IF NOT #LST /* use these 6 lins if testing in OCT-DEC * also see below <                                 /* vt1 vt2/vt3  /* vt5 /* vt6 /* vt7
**    MOVE 'Oct' TO #STMT-TO-MONTH                         /*DW20/DW26/DW27/PM28
**          MOVE 'Nov' TO #STMT-TO-MONTH                                                                          /* vt1 vt2/vt3  /* vt5 /* vt6 /* vt7
**     MOVE 'Dec' TO #STMT-TO-MONTH                                                                           /* vt1 /* VT5 /* vt7
**          SUBTRACT 1 FROM #STMT-YYYY                                                                              /* vt1  vt2/vt3 /* vt5 /* vt6
**       END-IF                                                                                                    /* vt1 vt2/vt3  /* vt5 /* vt6
*  CHG or remove above on Month change
********************************************************************************************************************************************************************
*
    COMPRESS #STMT-PER #STMT-TO-MONTH INTO #STMT-PER WITH '-'
*
    MOVE #STMT-YYYY TO #YYYY
    ADD 1 TO #YYYY
    COMPRESS #STMT-PER #YYYY-A INTO #STMT-PER WITH '-'
*
*         CHG or remove below on Month change
    IF NOT #LST   /* use these lines if testing in OCT-DEC <<<<<<< DW20/DW26/DW27/PM28   VT2
      ADD 1 TO #STMT-YYYY
    END-IF
*
    DECIDE ON FIRST VALUE PLAN (#I1)
      VALUE 'AL'  MOVE 'Annuity Life'         TO #POL-TYPE   /* DW8
      VALUE 'AL2' MOVE 'Annuity Life 2'       TO #POL-TYPE   /* TT2
      VALUE 'OL'  MOVE 'Whole Life Insurance' TO #POL-TYPE
      VALUE '20P' MOVE '20 Pay Insurance'     TO #POL-TYPE
      VALUE '30P' MOVE '30 Pay Insurance'     TO #POL-TYPE
      VALUE '7P'  MOVE '7 Pay Insurance'      TO #POL-TYPE
      VALUE 'LT'  MOVE 'Level Term I'         TO #POL-TYPE
      VALUE 'RT'  MOVE '5-YR Renewable Term'  TO #POL-TYPE
      VALUE 'EZ'  MOVE 'EZ Term'              TO #POL-TYPE          /* YK2
      VALUE 'GPL' MOVE 'Generations Plus'     TO #POL-TYPE          /* DW25
      NONE        MOVE 'Flex'                 TO #POL-TYPE
    END-DECIDE
*
* IF (PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z')                    /* YK1
    IF F-LT2-TRUE(<PLAN(#I1)>)                                            /* YK1
      IF F-LT2PLUS-TRUE(<PLAN(#I1)>)                                      /* YK1
        COMPRESS 'Level Term II+' PLAN-N2 (#I1) 'Years' INTO #POL-TYPE    /* YK1
      ELSE                                                                /* YK1
        COMPRESS 'Level Term II' PLAN-N2 (#I1) 'Years' INTO #POL-TYPE
      END-IF                                                              /* YK1
    END-IF
*
    RESET #PDF-RPU
    DECIDE ON FIRST VALUE PAY-STATUS (#I1)
      VALUE '45' COMPRESS #POL-TYPE '/RPU' INTO #POL-TYPE
        MOVE 'Y' TO #PDF-RPU
      VALUE '47' COMPRESS #POL-TYPE '/PUSP' INTO #POL-TYPE
      VALUE '48' COMPRESS #POL-TYPE '/PUAP' INTO #POL-TYPE
      VALUE '42' COMPRESS #POL-TYPE '/PDUP' INTO #POL-TYPE
      NONE  IGNORE
    END-DECIDE
*
    IF CONV-DURATION (#I1) = 999
      COMPRESS #POL-TYPE '/CAP' INTO #POL-TYPE
    END-IF
*
    IF MEC-IND (#I1) = 'Y'
      COMPRESS #POL-TYPE '/MEC' INTO #POL-TYPE
    END-IF
*
    IF PROCESS-IND = 'O'
      COMPRESS #POL-TYPE '-OPTED-OUT' INTO #POL-TYPE
    ELSE
      IF PROCESS-IND = 'D'
        COMPRESS #POL-TYPE '-DE/GF' INTO #POL-TYPE
      END-IF
    END-IF
*
    IF #LST
      MOVE 'Last Years Statement' TO #TEXT
    ELSE
*    IF #PDF                                              /* DW21
*      MOVE 'Press ENTER to do PDF layout' TO #TEXT
*    ELSE
      MOVE 'Press ENTER to see more policies or last years statement'
        TO #TEXT
*    END-IF
    END-IF
*
    MOVE '*' TO #CGA-SCR-COMMAND
*
* IF NOT #LST AND NOT #PDF                  /* DW21
    IF NOT #LST
      IF (PROCESS-IND = 'O') AND (#OO-DATE NE ' ')
        COMPRESS 'Opted Out on' #OO-DATE INTO #TEXT
      END-IF
*
      IF (PROCESS-IND = 'D') AND (#DGF-DATE NE ' ')
        COMPRESS 'DE-Grandfathered on' #DGF-DATE INTO #TEXT
      END-IF
    END-IF
*
*  IF #PDF                            /* DW21
*    PERFORM PDF-LAYOUT
*  ELSE
*   IF #LST                                /* DW2
*     INPUT TEXT #TEXT USING MAP 'C2690MST'  /* Old layout DW2
*   ELSE
*    IF #LST                                /* DW2
*      INPUT TEXT #TEXT USING MAP 'C2691MST'  /* Old layout DW2/DW20
*    ELSE
    move 2017 to #stmt-yyyy                                                   /* vt temporary fix  vt2 /vt3 /* vt5 /* vt6 /* vt7 was 2016
    INPUT TEXT #TEXT USING MAP 'C2692MST'  /* New Layout DW9
*    END-IF
*  END-IF
*
    IF #CGA-SCR-COMMAND NE '*'
      FETCH 'G1000PXX'
    END-IF
  END-FOR
*
  IF #NUM-STMTS = 0
    INPUT TEXT 'No Annual Statements to display' USING MAP 'G1000MXX'
*
    IF #CGA-SCR-COMMAND NE '*'
      FETCH 'G1000PXX'
    END-IF
  END-IF
*
* IF #PDF                                       /* DW21
*   ESCAPE BOTTOM  /* do not do last years
* END-IF
*
  IF NOT #LST
    MOVE TRUE TO #LST  /* show last years statement
  ELSE
    ESCAPE BOTTOM
  END-IF
*
END-REPEAT
*
MOVE 'ST' TO #CGA-SCR-COMMAND
RESET #CGA-SCR-SUFFIX
*
FETCH 'G1000PXX'
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE PDF-LAYOUT    /* Will never be called as of 10/2007   DW21
* * * * * * * * * * * * * *
*
MOVE *DATN TO #YYYYMMDD
COMPRESS #MM-A #DD-A #YYYY-A INTO #USER WITH '/'
COMPRESS #CGA-CLERK #USER INTO #USER
*
MOVE #I1 TO #CONTACT-SEG /* get owner
CALLNAT 'G3500SAD' #CGA-MASTER #PDA-AREA-G3500AAD
*
MOVE '%FDF-1.2' TO #FILL-BLNKS (1)
MOVE '1 0 obj << /FDF << /Fields [' TO #FILL-BLNKS (2)
COMPRESS #FILL-BLNKS (2) ' <</T(ID)/V(' #USER ')>>'
  INTO #FILL-BLNKS (2) LEAVING NO
COMPRESS '<</T(POL)/V(' #POL-NUM ')>>' INTO #FILL-BLNKS (3) LEAVING NO
COMPRESS '<</T(OWNER)/V(' #FORMATED-NAME ')>>'
  INTO #FILL-BLNKS (4) LEAVING NO
MOVE #FIRST-ADDRESS TO #PDF-CHARS-100                             /* DW19
CALLNAT 'GPDFRSXX' #PDF-CHARS-100
COMPRESS '<</T(STR)/V(' #PDF-CHARS-100 ')>>'
  INTO #FILL-BLNKS (5) LEAVING NO
COMPRESS #FILL-BLNKS (5) '   <</T(ISSDATE)/V(' #ISS-DTE ')>>'
  INTO #FILL-BLNKS (5) LEAVING NO
MOVE #SECOND-ADDRESS TO #PDF-CHARS-100                             /* DW19
CALLNAT 'GPDFRSXX' #PDF-CHARS-100
COMPRESS '<</T(STR2)/V(' #PDF-CHARS-100 ')>>'
  INTO #FILL-BLNKS (6) LEAVING NO
COMPRESS #FILL-BLNKS (6) '   <</T(ISSAGE)/V(' #ISS-AGE ')>>'
  INTO #FILL-BLNKS (6) LEAVING NO
MOVE #THIRD-ADDRESS TO #PDF-CHARS-100                             /* DW19
CALLNAT 'GPDFRSXX' #PDF-CHARS-100
COMPRESS '<</T(STR3)/V(' #PDF-CHARS-100 ')>>'
  INTO #FILL-BLNKS (7) LEAVING NO
*
RESET #CONTACT-SEG /* get insured
CALLNAT 'G3500SAD' #CGA-MASTER #PDA-AREA-G3500AAD
COMPRESS '<</T(INSURED)/V(' #FORMATED-NAME ')>>'
  INTO #FILL-BLNKS (8) LEAVING NO
COMPRESS #FILL-BLNKS (8) '   <</T(RPU)/V(' #PDF-RPU ')>>'
  INTO #FILL-BLNKS (8) LEAVING NO
COMPRESS '<</T(PERIOD)/V(' #STMT-PER ')>>'
  INTO #FILL-BLNKS (9) LEAVING NO
COMPRESS #FILL-BLNKS (9) '   <</T(POC)/V(' #PDF-POC ')>>'
  INTO #FILL-BLNKS (9) LEAVING NO
MOVE LEFT #LOAN-A TO #LOAN-A
COMPRESS '<</T(DATE)/V(' *DAT4U ')>>'
  INTO #FILL-BLNKS (10) LEAVING NO
COMPRESS #FILL-BLNKS (10) '   <</T(PRININT)/V($' #LOAN-A ')>>'
  INTO #FILL-BLNKS (10) LEAVING NO
MOVE LEFT #BEG-CV-A  TO #BEG-CV-A
MOVE LEFT #PRM-GRO-A TO #PRM-GRO-A
COMPRESS '<</T(PRIORCV)/V($' #BEG-CV-A ')>>'
  INTO #FILL-BLNKS (11) LEAVING NO
COMPRESS #FILL-BLNKS (11) '   <</T(CVGROWTH)/V($' #PRM-GRO-A ')>>'
  INTO #FILL-BLNKS (11) LEAVING NO
MOVE LEFT #AVL-CSV-A  TO #AVL-CSV-A
MOVE LEFT #END-CV-A TO #END-CV-A
COMPRESS '<</T(AVLCSVPI)/V($' #AVL-CSV-A ')>>'
  INTO #FILL-BLNKS (12) LEAVING NO
COMPRESS #FILL-BLNKS (12) '   <</T(CURRCV)/V($' #END-CV-A ')>>'
  INTO #FILL-BLNKS (12) LEAVING NO
MOVE LEFT #INIT-DB-A  TO #INIT-DB-A
MOVE LEFT #BEG-DB-A TO #BEG-DB-A
COMPRESS '<</T(INITDB)/V($' #INIT-DB-A ')>>'
  INTO #FILL-BLNKS (13) LEAVING NO
COMPRESS #FILL-BLNKS (13) '   <</T(BEGDB)/V($' #BEG-DB-A ')>>'
  INTO #FILL-BLNKS (13) LEAVING NO
MOVE LEFT #DB-GROWTH-A  TO #DB-GROWTH-A
MOVE LEFT #AVL-DB-A TO #AVL-DB-A
COMPRESS '<</T(DBGROWTH)/V($' #DB-GROWTH-A ')>>'
  INTO #FILL-BLNKS (14) LEAVING NO
COMPRESS #FILL-BLNKS (14) '   <</T(AVLDBPI)/V($' #AVL-DB-A ')>>'
  INTO #FILL-BLNKS (14) LEAVING NO
MOVE LEFT #END-DB-A  TO #END-DB-A
MOVE LEFT #YTD-EQU-A TO #YTD-EQU-A
COMPRESS '<</T(CURRDB)/V($' #END-DB-A ')>>'
  INTO #FILL-BLNKS (15) LEAVING NO
COMPRESS #FILL-BLNKS (15) '   <</T(EQUITY)/V($' #YTD-EQU-A ')>>'
  INTO #FILL-BLNKS (15) LEAVING NO
MOVE LEFT #YTD-PRM-A  TO #YTD-PRM-A
MOVE LEFT #YTD-COI-A TO #YTD-COI-A
COMPRESS '<</T(YTDPRMS)/V($' #YTD-PRM-A ')>>'
  INTO #FILL-BLNKS (16) LEAVING NO
COMPRESS #FILL-BLNKS (16) '   <</T(YTDINSCHG)/V($' #YTD-COI-A ')>>'
  INTO #FILL-BLNKS (16) LEAVING NO
MOVE LEFT #YTD-INT-A TO #YTD-INT-A
MOVE LEFT #TPP-A     TO #TPP-A
COMPRESS '<</T(YTDINT)/V($' #YTD-INT-A ')>>'
  INTO #FILL-BLNKS (17) LEAVING NO
COMPRESS #FILL-BLNKS (17) '   <</T(PREMSPD)/V($' #TPP-A ')>>'
  INTO #FILL-BLNKS (17) LEAVING NO
*
MOVE EDITED #COI     (EM=-ZZZ,ZZ9.99) TO #COI-A
MOVE EDITED #ADMIN   (EM=-ZZZ,ZZ9.99) TO #ADMIN-A
MOVE EDITED #ACQ-COST(EM=-ZZZ,ZZ9.99) TO #ACQ-COST-A   /* DW9
MOVE EDITED #SVC-FEE (EM=-ZZ9.99)     TO #SVC-FEE-A
MOVE LEFT #COI-A     TO #COI-A
MOVE LEFT #ADMIN-A   TO #ADMIN-A
MOVE LEFT #SVC-FEE-A TO #SVC-FEE-A
*
COMPRESS '<</T(COI)/V($' #COI-A ')>>' INTO #FILL-BLNKS (18) LEAVING NO
*
IF #SVC-FEE = 0
  COMPRESS '<</T(ADMIN)/V($' #ADMIN-A
    '\), Acq Cost \($' #ACQ-COST-A ')>>'      /* DW9
    INTO #FILL-BLNKS (19) LEAVING NO
ELSE
  COMPRESS '<</T(ADMIN)/V($' #ADMIN-A
    '\), Acq Cost \($' #ACQ-COST-A      /* DW9
    '\), Services Fee \($' #SVC-FEE-A ')>>'
    INTO #FILL-BLNKS (19) LEAVING NO
END-IF
*
MOVE '] /F (F:\ANNSTMT2003.PDF)>> >>'      TO #FILL-BLNKS (20)
MOVE 'endobj'                             TO #FILL-BLNKS (21)
MOVE'trailer <</Root 1 0 R >> %%EOF'     TO #FILL-BLNKS  (22)
COMPRESS 'Press ENTER to Go on to next process' TO #FILL-BLNKS (23)
*
INPUT USING MAP 'GPDFXMXX'
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE COI-SPLIT
* * * * * * * * * * * * * *
*
* Any changes below must also be changed in ATHPANNS
RESET #SVC-FEE
*
IF #LST
  MOVE #NUM-MONS-FIRST-HALF TO #NUM-MONS-1ST-HALF  /* Start with 6
  MOVE 6                    TO #NUM-MONS-2ND-HALF  /* Start with 6
ELSE
  MOVE #NUM-MONS-FIRST-HALF TO #NUM-MONS-1ST-HALF  /* Start with 6
  MOVE #NUM-MONS-LAST-HALF TO #NUM-MONS-2ND-HALF /* depends on cur mon
END-IF
*
MOVE 'VW' TO #CGA-SCR-COMMAND #CGA-ORIG-COMMAND
COMPRESS 'SF' #I1 INTO #CGA-SCR-SUFFIX LEAVING NO
MOVE #CGA-SCR-SUFFIX TO #CGA-ORIG-SUFFIX
RESET #CGA-MF-SCR-PARM-1  #CGA-MF-SCR-PARM-2
RESET #CGA-MF-ORIG-PARM-1 #CGA-MF-ORIG-PARM-2
RESET #SVC-FEE #ACQ-COST #MON-AMORT-ACQ
*
IF NOT #LST
  MOVE #CGA-SCR-ID TO #HOLD-CN    /* DW14
  FETCH RETURN 'C2H30PVW'
*
  MOVE #CGA-MF-SCR-PARM-1 TO #A9
  MOVE #N7-2 TO #ACQ-COST
  MOVE #CGA-MF-SCR-PARM-2 TO #A5
  MOVE #N3-2 TO #SVC-FEE
  MOVE #CGA-MF-ORIG-PARM-1 TO #A9
  MOVE #N7-2 TO #ADMIN
  COMPUTE #LIV-SVC = #CGA-SCR-ID  / 100    /* DW14
  COMPUTE #SAS     = #CGA-ORIG-ID / 100
  MOVE #CGA-MF-ORIG-PARM-2 TO #A5
  MOVE #N3-2 TO #OO-CREDIT                 /* DW14
  MOVE 'ST'  TO #CGA-SCR-COMMAND #CGA-ORIG-COMMAND
  MOVE #HOLD-CN TO #CGA-SCR-ID #CGA-ORIG-ID   /* DW14
  MOVE 'STM' TO #CGA-SCR-SUFFIX  #CGA-ORIG-SUFFIX
*
  MOVE EDITED #LIV-SVC (EM=-ZZZ.99) TO #LVS-DISP /*DW16
  MOVE EDITED #SAS (EM=-ZZZ.99) TO #SAS-DISP     /*DW16
* COMPUTE #AMT = #OO-CREDIT * -1
* MOVE EDITED #AMT (EM=-ZZZ.99) TO #OO-CR-DISP    /*DW16
  MOVE EDITED #OO-CREDIT (EM=-ZZZ.99) TO #OO-CR-DISP    /*DW16
END-IF
*
IF  (ISSUE-DATE (#I1) LT 19970101)
    OR (MONTH-ALLOC-AMT (#I1) = 999.99)
*
  IF #LST
    MOVE STM-SVC-FEE (#I1) TO #SVC-FEE      /* DW1
    COMPUTE ROUNDED #COI   = (STM-COI (#I1) - #SVC-FEE) * .73
    COMPUTE ROUNDED #ADMIN = STM-COI (#I1) - #COI - #SVC-FEE  /*  .27
  ELSE
    COMPUTE ROUNDED #COI   = STM-COI (#I1) - #ADMIN - #SVC-FEE
  END-IF
ELSE
  MOVE EDITED MONTH-ALLOC-AMT (#I1) (EM=ZZZZ.99) TO #CUR-ACQ-BAL-MSG
  COMPRESS 'Current Acquisition Balance=' #CUR-ACQ-BAL-MSG
    INTO #CUR-ACQ-BAL-MSG
*  Below must match Calc in ATHP05PN
  IF #LST
    MOVE STM-SVC-FEE (#I1) TO #SVC-FEE      /* DW1
    COMPUTE ROUNDED #ADMIN = (#NXT-MON-MAINT-PER-POL
      + (#NXT-MON-MAINT-PER-1K * (DEATH-BENEFIT (#I1) / 1000))) / 12
*
    IF NOT IS-ANNUITY-LIFE(<PLAN(#I1)>)                   /* DW9          /* TT2
      COMPUTE ROUNDED #WORK-6-7 = (#ACQ-PER-POL                /* DW9
        + (#ACQ-PER-1K * (FACE-AMOUNT (#I1) / 1000)))
      MOVE ROUNDED #WORK-6-7 TO #BEG-ACQ-COST
*
      COMPUTE ROUNDED #WORK-6-7 = 1 / (1 + .07000)             /* DW9
      COMPUTE ROUNDED #WORK-6-7 = #BEG-ACQ-COST
        / ((1 - (#WORK-6-7 ** 10)) / (1 - (#WORK-6-7 ** .0833333)))
      MOVE ROUNDED #WORK-6-7 TO #MON-AMORT-ACQ
    END-IF
*
    IF ISSUE-DATE-YYYY (#I1) = #CURR-YYYY
      COMPUTE #MONS = 13 - ISSUE-DATE-MM (#I1)
    ELSE
      MOVE 12 TO #MONS
    END-IF
*
    COMPUTE #ADMIN = #ADMIN * #MONS
  END-IF
*
* IF #LST /* IN 2005/2006 for 2004 stmt do not show acq-calc    CHG  DW20
*   COMPUTE #COI = STM-COI (#I1) - #ADMIN - #SVC-FEE
* ELSE    /* starting in 2005 stmt add ACQ-CALC
  PERFORM CALC-DUES                       /* DW13
  COMPUTE #COI = STM-COI (#I1) - #ADMIN - #ACQ-COST - #SVC-FEE /* DW9
* END-IF
END-IF
*
END-SUBROUTINE
*
DEFINE SUBROUTINE CALC-DUES
*
IF   (PROCESS-IND = 'G')  /* Grandfathered
    AND (#I1 = #FST-X)       /* only 1st policy
  CALLNAT 'GDUESSXX' ST-V.ID-NUMBER #I1 #DUES /* Get Actual Dues DW10
  COMPUTE #DUES-PAID =
    (#DUES * #NUM-MONS-1ST-HALF) + (#DUES *#NUM-MONS-2ND-HALF) /*DW10
  MOVE EDITED #DUES-PAID (EM=ZZZZ.99) TO #DUES-PAID-MSG     /* DW10
  COMPRESS 'Dues Paid =' #DUES-PAID-MSG INTO #DUES-PAID-MSG /* DW10
END-IF
*
END-SUBROUTINE
*
END
