* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: ADRN0007
************************************************************************
*                       MODIFICATION LOG                               *
* USER     DATE      TAG     REASON                                    *
*                                                                      *
* NGG    08/17/2010  None    Program written                           *
* TMT    10/08/2013  TT1     ADDRESS NORMALIZATION                     *
************************************************************************
DEFINE DATA
PARAMETER
1 #CONTACT-ID        (N8/1:V)
1 #ADDR-SHARE        (A1/1:V)
1 #LEAD-CONTACT-ID   (N8)
1 #ADDRESS-POOL-ID   (N8)
1 #MSG               (A72)
1 #POS               (I4)
1 #ERRORS            (L)
1 #UPDATED           (L)
LOCAL USING ADDA0001
LOCAL USING GPRA0004                /* Parameters passed to write transaction log
LOCAL
1 #ID-NUMBER         (N6)
* 1 REDEFINE #ID-NUMBER
*  2 #ID-NUMBER-N     (N6)
1 X                   (I4)
1 #STATUS-SYNCH
  2 #ISN              (P8/9)
  2 #UPDATE-REQUEST   (I4/9)
*
1 A-ADD-REL VIEW OF A-ADDRESS-RELATIONSHIP
  2 CONTACT-ID        (N8)
  2 ADDRESS-POOL-ID   (N8)
  2 ATTENTION-LINE    (A50)
  2 ADDR-LOCATION     (A1)
  2 ADDR-TYPE-CD      (A1)
  2 RETURNED-MAIL-IND (A1)
  2 PREVENT-OVER-IND  (A1)
  2 ADDRESS-SOURCE    (A1)
  2 STATUS            (A1)
  2 STATUS-DATE       (N8)
  2 REDEFINE STATUS-DATE
    3 STATUS-DATE-A   (A8)
  2 START-DATE        (N8) 2 REDEFINE START-DATE
    3 START-DATE-A    (A8)
  2 END-DATE          (N8) 2 REDEFINE END-DATE
    3 END-DATE-A      (A8)
  2 LAST-DATE-UPD     (N8) 2 REDEFINE LAST-DATE-UPD
    3 LAST-DATE-UPD-A     (A8)
  2 LAST-TIME-UPD     (N7) 2 REDEFINE LAST-TIME-UPD
    3 LAST-TIME-UPD-A     (A7)
  2 LAST-USER-UPD     (A8)
*
1 DELETE-REL VIEW OF A-ADDRESS-RELATIONSHIP
  2 ADDR-TYPE-CD      (A1)
1 CHECK-REL VIEW OF A-ADDRESS-RELATIONSHIP
  2 ADDR-TYPE-CD      (A1)
  2 ADDRESS-SOURCE    (A1)
  2 STATUS            (A1)
  2 STATUS-DATE       (N8)
  2 CONTACT-ID        (N8)
  2 LAST-DATE-UPD     (N8)
  2 LAST-TIME-UPD     (N7)
  2 LAST-USER-UPD     (A8)
1 #CHANGE-CODE        (A1)
1 J                   (I4)
*
1 ADDR-POOL VIEW OF A-ADDRESS-POOL
  2 ZIP-CODE
1 CONTACT VIEW OF A-CONTACTS
  2 CONTACT-ID
  2 ID-NUMBER (N6)
1 #STATUS-ISN       (P8)
1 STATUS VIEW OF A-STATUS
  2 ID-NUMBER
  2 MEMBER-CONTACT-ID
  2 NAME
*   2 ADDRESS-1       (A25)           /*TT1 COMMENT OUT
*   2 ADDRESS-2       (A25)
*   2 ADDRESS-3       (A25)
*   2 ZIP-CODE        (N9)
*   2 ADDRESS-CHG-CODE (A1)
*   2 S-ADDRESS-1     (A25)
*   2 S-ADDRESS-2     (A25)
*   2 S-ADDRESS-3     (A25)
*   2 S-ZIP-CODE      (N9.0)
*   2 DATE-LAST-ADDR-UPDT   (N8)
1 #MESSAGES   (A/5) DYNAMIC INIT <
  'This Contact already has a primary or secondary address',
  'This Contact already has a secondary address',
  'This Contact already has an other address'
  >
1 BLANK             (A1) CONST <' '>
1 #PRIMARY-DELETE   (I4) CONST <1>
1 #PRIMARY-UPDATE   (I4) CONST <2>
1 #SECONDARY-DELETE (I4) CONST <3>
1 #SECONDARY-UPDATE (I4) CONST <4>
1 YES               (A1) CONST <'Y'>
1 PRIMARY           (A1) CONST <'P'>
1 SECONDARY         (A1) CONST <'S'>
1 OTHER             (A1) CONST <'O'>
*
END-DEFINE
*
FIND CONTACT WITH CONTACT-ID = #LEAD-CONTACT-ID
  #ID-NUMBER := CONTACT.ID-NUMBER
END-FIND

FIND A-ADD-REL WITH CONTACT-ID = CONTACT.CONTACT-ID
    AND ADDRESS-POOL-ID = #ADDRESS-POOL-ID
  IF NO RECORDS FOUND
*    print 'There is no relation:' CONTACT.CONTACT-ID #ADDRESS-POOL-ID
    ESCAPE ROUTINE
  END-NOREC
END-FIND

RESET
  A-ADD-REL.ADDR-LOCATION
  A-ADD-REL.ADDR-TYPE-CD
  A-ADD-REL.RETURNED-MAIL-IND
  A-ADD-REL.PREVENT-OVER-IND
  A-ADD-REL.ADDRESS-SOURCE
  A-ADD-REL.STATUS
  A-ADD-REL.STATUS-DATE
  #UPDATED
  #MSG
  #ERRORS
MOVE *DATN TO A-ADD-REL.LAST-DATE-UPD
MOVE *TIMN TO A-ADD-REL.LAST-TIME-UPD
MOVE *USER TO A-ADD-REL.LAST-USER-UPD
*
* print 'Current relation:' #CONTACT-ID  (*) #ADDRESS-POOL-ID
*
FOR J 1 TO 10
  IF #CONTACT-ID (J) = 0
    ESCAPE BOTTOM
  END-IF
  RESET #STATUS-ISN
  FIND (1) STATUS WITH MEMBER-CONTACT-ID = #CONTACT-ID (J)
    #STATUS-ISN := *ISN (0143)
  END-FIND
  #MSG := FUNCTION-CV-CHECK (<'021',#ADDR-SHARE (J)>)
  IF #MSG NE BLANK
    #ERRORS := TRUE
    #POS := POS ( #ADDR-SHARE (J) )
    ESCAPE ROUTINE
  END-IF
  DECIDE ON FIRST VALUE #ADDR-SHARE (J)
    VALUE 'D'
*      print 'Request Delete' #CONTACT-ID (J) A-ADD-REL.ADDRESS-POOL-ID
      FIND (1) DELETE-REL WITH CONTACT-ID = #CONTACT-ID (J)
          AND ADDRESS-POOL-ID = A-ADD-REL.ADDRESS-POOL-ID
        DELETE
*        PRINT 'Disconnected'
        IF DELETE-REL.ADDR-TYPE-CD = PRIMARY OR= SECONDARY
          PERFORM STATUS-SYNC-DATA
        END-IF
      END-FIND
    VALUE PRIMARY,SECONDARY,OTHER
      FIND CHECK-REL WITH CONTACT-ID = #CONTACT-ID (J)
        IF CHECK-REL.ADDR-TYPE-CD = #ADDR-SHARE (J)
            AND CHECK-REL.STATUS NE 'D'
          #POS := POS ( #ADDR-SHARE (J) )
          IF #ADDR-SHARE (J) = PRIMARY
            #MSG := #MESSAGES (1)
          ELSE
            IF #ADDR-SHARE (J) =  SECONDARY
              #MSG := #MESSAGES (2)
            ELSE
              #MSG := #MESSAGES (3)
            END-IF
          END-IF
          #ERRORS := TRUE
          ESCAPE ROUTINE
        END-IF
      END-FIND
      FIND CHECK-REL WITH CONTACT-ID = #CONTACT-ID (J)
          AND ADDRESS-POOL-ID = #ADDRESS-POOL-ID
        IF NO RECORDS FOUND
          A-ADD-REL.CONTACT-ID   := #CONTACT-ID (J)
          A-ADD-REL.ADDR-TYPE-CD := #ADDR-SHARE (J)
          A-ADD-REL.ADDRESS-SOURCE := 'D'
          STORE A-ADD-REL
          PERFORM STATUS-SYNC-DATA
          ESCAPE BOTTOM
        END-NOREC
        DECIDE ON FIRST VALUE OF CHECK-REL.ADDR-TYPE-CD
          VALUE PRIMARY
            IF #STATUS-ISN > 0
              ADD 1 TO X
              #UPDATE-REQUEST   (X) := #PRIMARY-DELETE
              #ISN (X) := #STATUS-ISN
              PERFORM STATUS-SYNC-DATA
            END-IF
          VALUE SECONDARY
            IF #STATUS-ISN > 0
              ADD 1 TO X
              #UPDATE-REQUEST   (X) := #SECONDARY-DELETE
              #ISN (X) := #STATUS-ISN
              PERFORM STATUS-SYNC-DATA
            END-IF
          ANY VALUE
            RESET CHECK-REL.STATUS CHECK-REL.STATUS-DATE
            CHECK-REL.ADDR-TYPE-CD := #ADDR-SHARE (J)
            CHECK-REL.ADDRESS-SOURCE := 'D'
            MOVE *DATN TO CHECK-REL.LAST-DATE-UPD
            MOVE *TIMN TO CHECK-REL.LAST-TIME-UPD
            MOVE *USER TO CHECK-REL.LAST-USER-UPD
            UPDATE
          NONE VALUE IGNORE
        END-DECIDE
      END-FIND
    ANY VALUE
      #UPDATED := TRUE
    NONE VALUE IGNORE
  END-DECIDE
END-FOR

IF #UPDATED
  FIND (1) ADDR-POOL WITH ADDRESS-POOL-ID = #ADDRESS-POOL-ID
    #ADD-OLD-FORMAT := YES
    #ADD-POOL-ID    := #ADDRESS-POOL-ID
    CALLNAT 'ADDN0001' #PDA-ADDRESS
  END-FIND
  FOR J 1 TO X
    CALLNAT 'ADRNTRUP'   /* Transaction Log Update
      #STATUS-SYNCH.#ISN ( J )
      #STATUS-SYNCH.#UPDATE-REQUEST (J)
      #ADDRESS-POOL-ID
*     CALLNAT 'ADRNSTUP'   /* Status Record Update         /*TT1 BEGIN
*       #STATUS-SYNCH.#ISN ( J )
*       #STATUS-SYNCH.#UPDATE-REQUEST (J)
*       #ADDRESS-POOL-ID                                   /*TT1 END
  END-FOR
  END TRANSACTION
END-IF

DEFINE STATUS-SYNC-DATA
/*     ================
IF #STATUS-ISN > 0
  DECIDE ON FIRST VALUE #ADDR-SHARE (J)
    VALUE 'D'
      IF DELETE-REL.ADDR-TYPE-CD = PRIMARY
        ADD 1 TO X
        #UPDATE-REQUEST   (X) := #PRIMARY-DELETE
      END-IF
      IF DELETE-REL.ADDR-TYPE-CD = SECONDARY
        ADD 1 TO X
        #UPDATE-REQUEST   (X) := #SECONDARY-DELETE
      END-IF
    VALUE PRIMARY
      ADD 1 TO X
      #UPDATE-REQUEST   (X) := #PRIMARY-UPDATE
    VALUE SECONDARY
      ADD 1 TO X
      #UPDATE-REQUEST   (X) := #SECONDARY-UPDATE
    ANY VALUE
      #ISN (X) := #STATUS-ISN
    NONE VALUE IGNORE
  END-DECIDE
END-IF
END-SUBROUTINE

END
