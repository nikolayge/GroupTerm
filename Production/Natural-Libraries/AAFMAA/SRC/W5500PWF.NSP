* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: W5500PWF
*     'DF' COMMAND PROCESSING
*******************************************
*                       MODIFICATION LOG
* USER DATE     TAG  REASON
* DRW  06072005 DW1  Allow "C" in Serv Connected to ind Combat Related
* DRW  06152005 DW2  Allow "D" in Serv Con to ind Comb Rel NON SVC-CONN
*******************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX    /* WORK FIELDS FOR GONERCXX - ERROR ROUTINE
LOCAL USING W5500LWF
LOCAL
1 #FLAGS
  2 #FIELD-CHANGED  (L) INIT <FALSE>
  2 #STATUS-CHANGED (L) INIT <FALSE>
  2 #ERROR-FLAG     (L) INIT <FALSE>
  2 #NO-CLAIMS      (L) INIT <FALSE>
  2 #VALID-CLAIM    (L) INIT <FALSE>
  2 #FIRST-SCREEN   (L) INIT <TRUE>
  2 #AMOUNT-CHANGED (L) INIT <FALSE>
  2 #WAS-SETTLED    (L)
  2 #WAS-UNSETTLED  (L)
  2 #NOW-SETTLED    (L)
  2 #NOW-UNSETTLED  (L)
*
1 #CLM-ISN   (P8)
1 #HOLD-DATN (N8)
1 #HOLD-TIMN (N7)
1 #HLD-CONVERT-DT-FILED  (N8)
1 REDEFINE #HLD-CONVERT-DT-FILED
 2 #HLD-CONVERT-DT-FILED-A  (A8)
1 #HLD-CONVERT-DT-SETTLED  (N8)
1 REDEFINE #HLD-CONVERT-DT-SETTLED
 2 #HLD-CONVERT-DT-SETTLED-A  (A8)
*
1 #HOLD-SCREEN-DATE (A8)
1 REDEFINE #HOLD-SCREEN-DATE
  2 #HSD-MM      (A2)
  2 #HSD-DD      (A2)
  2 #HSD-YYYY    (A4)
*
1 #EDIT-SCREEN-YYYYMMDD (N8)
1 REDEFINE #EDIT-SCREEN-YYYYMMDD
  2 #ES-YYYY    (A4)
  2 #ES-MM      (A2)
  2 #ES-DD      (A2)
*
1 #CLAIM-TABLE
  2 #HOLD-CLM-LETTER  (A20/1:30)
  2 #HOLD-CLM-STATUS  (A1/1:30)
  2 #HOLD-CLM-REMARKS (A25/1:30)
  2 #HOLD-CLM-DT-FILED (N8/1:30)
  2 REDEFINE #HOLD-CLM-DT-FILED
   3 #HOLD-CLM-DT-FILED-A (A8/1:30)
  2 #HOLD-CLM-DT-SETTLED (N8/1:30)
  2 REDEFINE #HOLD-CLM-DT-SETTLED
   3 #HOLD-CLM-DT-SETTLED-A (A8/1:30)
  2 #HOLD-CLM-AMOUNT  (N7/1:30)
*
1 #SUP-MESSAGE (A60)
1 #MAX-SEG (N1)
*
1 #INDEXES
  2 #INDEXT (I2)     /* INDEX FOR TRLOG BUILD
  2 #INDEXC (I2)     /* INDEX FOR CLAIMS RECORD
  2 #INDEXS (I2)     /* INDEX FOR SCREEN
  2 #INDEXH (I2)     /* INDEX FOR TABLE BUILD AREA
  2 #INDEXV (I2)     /* INDEX FOR DEFAULT CLAIMS
  2 #INDEXR (I2)     /* INDEX FOR RECORD CLAIMS
  2 #I2     (I2)
1 #NUM-OF-LINES (N2) INIT<0>
*
1 #WYYYYMMDD
 2 #WYYYY    (N4)
 2 #WMM      (N2)
 2 #WDD      (N2)
1 REDEFINE #WYYYYMMDD
 2 #WYYYYMMDD-N (N8)
*
1 #WYYYYMM
 2 #WYYYY    (N4)
 2 #WMM      (N2)
1 REDEFINE #WYYYYMM
 2 #WYYYYMM-N (N6)
*
1 #WMMDDYYYY
 2 #WMM      (N2)
 2 #WDD      (N2)
 2 #WYYYY    (N4)
1 REDEFINE #WMMDDYYYY
 2 #WMMDDYYYY-A (A8)
*
1 #WMMYYYY
 2 #WMM      (N2)
 2 #WYYYY    (N4)
1 REDEFINE #WMMYYYY
 2 #WMMYYYY-A (A6)
*
1 A-NOTES-VIEW VIEW OF A-NOTES
 2 ID-NUMBER    (N6)
 2 C*NOTE-TABLE
*
1 #NOTES-EXIST         (L)
1 #WRITE-NOTE-RECORD   (L)
1 #NOTE-REC-NOT-FOUND  (L)
1 #NOTE-ISN            (P8)
1 #INVALID             (L)
1 #ERR-MSG             (A60)
*
1 #PD-DT-FILED      (N8/30)
1 #PD-DT-NU-DT-FL   (N8/30)
1 #PD-ADD-DEL-CHG   (A1/30)
1 #PD-X             (I2)
*
END-DEFINE
* - - - - - - - -
INCLUDE GONERCXX
* - - - - - - - -
*
GET STATUS-VIEW #CGA-ISN
*
MOVE TRUE TO #NOTES-EXIST
RESET        #NOTE-REC-NOT-FOUND
*
FIND (1) A-NOTES-VIEW WITH ID-NUMBER = #CGA-ID
  IF NO RECORDS FOUND
    RESET #NOTES-EXIST
    MOVE TRUE TO #NOTE-REC-NOT-FOUND
  END-NOREC
*
  IF #NOTES-EXIST
    MOVE *ISN TO #NOTE-ISN
    IF C*NOTE-TABLE = 0
      RESET #NOTES-EXIST
    END-IF
  END-IF
*
  IF #NOTES-EXIST
     MOVE 'NOTES' TO #SUP-MESSAGE
  END-IF
*
END-FIND
*
IF #NOTE-REC-NOT-FOUND
  MOVE STATUS-VIEW.ID-NUMBER TO A-NOTES-VIEW.ID-NUMBER
ELSE
  GET A-NOTES-VIEW #NOTE-ISN
END-IF
*
MOVE '*' TO #CGA-SCR-COMMAND
* MOVE *DATN TO #W-CURRENT-DATE
MOVE STATUS-VIEW.DTS-DATN TO #HOLD-DATN
MOVE STATUS-VIEW.DTS-TIMN TO #HOLD-TIMN
MOVE DATE-OF-DEATH TO #HOLD-CONVERT-DATE
COMPRESS #HCD-MM '/' #HCD-DD '/' #HCD-YYYY-A INTO #SCN-MEMB-DOD
  LEAVING NO SPACE
MOVE DATE-OF-BIRTH-SP TO #HOLD-CONVERT-DATE
COMPRESS #HCD-MM '/' #HCD-DD '/' #HCD-YYYY-A INTO #SCN-WID-DOB
  LEAVING NO SPACE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FIND (1) CLAIM-VIEW WITH ID-NUMBER = #CGA-ID
  IF NO RECORDS FOUND
    ASSIGN #NO-CLAIMS = TRUE
    MOVE #CGA-ID   TO ID-NUMBER
  END-NOREC
*
  ASSIGN #INDEXH = 1             /* INDEX FOR TABLE RECD BUILD
  ASSIGN #INDEXT = 1             /* INDEX FOR TRLOG RECD BUILD
  ASSIGN #INDEXC = 1             /* INDEX FOR CLAIM RECD
  ASSIGN #INDEXV = 1             /*START OF DEFAULT CLMS
  ASSIGN #INDEXR = 1             /*START OF RECORD CLAIMS FOR TRLOGS
*
  IF #NO-CLAIMS
    PERFORM BUILD-DEFAULT-RECORD
    ASSIGN #INDEXC = 1             /*RESET AFTER DEFAULT BUILD
  ELSE
    MOVE *ISN TO #CLM-ISN
  END-IF
*
  IF #NO-CLAIMS
    IGNORE
  ELSE
    IF C*CLAIM-INFO = 0
      MOVE 'DUMMY' TO CLAIM-VIEW.LETTER(1)  /* THIS WILL ALLOW ONE SCN
    END-IF
  END-IF
*
  IF #HOLD-DATN GT CLAIM-VIEW.DTS-DATN
    MOVE #HOLD-DATN TO #HOLD-CONVERT-DATE
  ELSE
    MOVE CLAIM-VIEW.DTS-DATN TO #HOLD-CONVERT-DATE
  END-IF
*
  COMPRESS #HCD-MM '/' #HCD-DD '/' #HCD-YYYY-A INTO #SCN-FM-DATE
    LEAVING NO SPACE
  REPEAT UNTIL CLAIM-VIEW.LETTER (#INDEXC) = '    '
      AND #SCN-CLM-LETTER(15) = '    '
    IF #INDEXS = 1
      RESET #SCN-CLM-STATUS(1:15)
      RESET #SCN-CLM-REMARKS(1:15)
      RESET #SCN-CLM-LETTER(1:15)
      RESET #SCN-CLM-DT-FILED(1:15)
      RESET #SCN-CLM-DT-SETTLED(1:15)
      RESET #SCN-CLM-AMOUNT(1:15)
    END-IF
    PERFORM FILL-SCREEN
    PERFORM SEND-SCREEN
    ASSIGN #INDEXS = 1
  END-REPEAT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
*
  IF #FIELD-CHANGED OR #AMOUNT-CHANGED
    PERFORM TRLOG-WRITE
    MOVE 'TRANSACTION COMPLETED' TO #SUP-MESSAGE
  ELSE
    MOVE 'DP' TO #CGA-SCR-COMMAND
    FETCH 'G1000PXX'
*   MOVE 'NO UPDATES REQUESTED' TO #SUP-MESSAGE
  END-IF
*
  IF #FIELD-CHANGED
    PERFORM UPDATE-RECORD
    MOVE *DATN TO CLAIM-VIEW.DTS-DATN
    MOVE *TIMN TO CLAIM-VIEW.DTS-TIMN
*
    IF #NO-CLAIMS
      STORE CLAIM-VIEW
      MOVE *ISN (0234) TO #CLM-ISN
    ELSE
      UPDATE (0168)
    END-IF
*
    FOR #PD-X 1 TO 30
      IF #PD-DT-FILED (#PD-X) = 0
        ESCAPE BOTTOM
      END-IF
*
      IF #PD-ADD-DEL-CHG (#PD-X) = 'A'
        RESET MBRSHIP-MTD-DET-V
        MOVE #PD-DT-FILED (#PD-X) TO MBRSHIP-MTD-DET-V.ENTRY-DATE
        MOVE #CLM-ISN             TO MBRSHIP-MTD-DET-V.REC-ISN
        MOVE 'C'                  TO MBRSHIP-MTD-DET-V.CODE
        MOVE #CGA-ISN             TO MBRSHIP-MTD-DET-V.ISSUE-DATE
        MOVE #CGA-ID              TO MBRSHIP-MTD-DET-V.ID-NUMBER
        STORE MBRSHIP-MTD-DET-V
      ELSE
        IF #PD-ADD-DEL-CHG (#PD-X) = 'D'
          READ MBRSHIP-MTD-DET-V BY ENTRY-DATE
                           FROM #PD-DT-FILED (#PD-X)
                           THRU #PD-DT-FILED (#PD-X)
            IF   (REC-ISN = #CLM-ISN)
             AND (CODE = 'C')
              DELETE (0255)
              ESCAPE BOTTOM
            END-IF
          END-READ
        ELSE                                     /* CHANGED DATE
          READ MBRSHIP-MTD-DET-V BY ENTRY-DATE
                           FROM #PD-DT-FILED (#PD-X)
                           THRU #PD-DT-FILED (#PD-X)
            IF   (REC-ISN = #CLM-ISN)
             AND (CODE = 'C')
              MOVE #PD-DT-NU-DT-FL (#PD-X) TO ENTRY-DATE
              UPDATE (0265)
              ESCAPE BOTTOM
            END-IF
          END-READ
        END-IF
      END-IF /* (0245)
    END-FOR /* (0240)
  END-IF /* (0228)
*
END-FIND /* (0168)
*
IF #AMOUNT-CHANGED
  PERFORM AMOUNT-WRITE
*
  IF #WRITE-NOTE-RECORD
    IF #NOTE-REC-NOT-FOUND
      STORE A-NOTES-VIEW
    ELSE
      UPDATE (0154)
    END-IF
  END-IF
END-IF
*
END TRANSACTION
*
MOVE 'DP' TO #CGA-SCR-COMMAND
MOVE (AD=P) TO #SCN-ATTR
MOVE (AD=P) TO #SCN-ATTR-X (*)
INPUT TEXT #SUP-MESSAGE USING MAP 'W5500MWF'
*
FETCH 'G1000PXX'
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
DEFINE SUBROUTINE BUILD-DEFAULT-RECORD
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FOR #INDEXC 1 TO 11
  MOVE #VCT-ENTRY(#INDEXC) TO CLAIM-VIEW.LETTER(#INDEXC)
  MOVE 0                   TO CLAIM-VIEW.DATE-FILED(#INDEXC)
  MOVE 0                   TO CLAIM-VIEW.DATE-SETTLED(#INDEXC)
  MOVE ' '                 TO CLAIM-VIEW.STATUS(#INDEXC)
  MOVE 0                   TO CLAIM-VIEW.AMOUNT(#INDEXC)
  MOVE '     '             TO CLAIM-VIEW.REMARKS(#INDEXC)
END-FOR
*
MOVE 0 TO CLAIM-VIEW.DTS-DATN
END-SUBROUTINE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
DEFINE SUBROUTINE SEND-SCREEN
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
IF #FIRST-SCREEN
  INPUT TEXT #SUP-MESSAGE MARK*#SCN-DIC USING MAP 'W5500MWF'
ELSE
  INPUT TEXT #SUP-MESSAGE MARK*#SCN-CLM-LETTER(1)  USING MAP 'W5500MWF'
END-IF
*
IF #CGA-SCR-COMMAND = '*'
  IGNORE
ELSE
  IF (#CGA-SCR-COMMAND NE #CGA-ORIG-COMMAND)
   OR (#CGA-SCR-ID NE #CGA-ORIG-ID)
    END TRANSACTION
    FETCH 'G1000PXX'
  END-IF
END-IF
*
PERFORM EDIT-SCREEN
*
IF #FIRST-SCREEN
  PERFORM AMOUNT-TRLOG
  ASSIGN #FIRST-SCREEN = FALSE
END-IF
ASSIGN #INDEXV = 1                 /* RESET FOR RECD BUILD
*
FOR #INDEXS 1 TO 15
  PERFORM PROCESS-TRLOG
  IF #SCN-CLM-LETTER (#INDEXS) NE ' '
    PERFORM MOVE-SCREEN
  END-IF
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FILL-SCREEN
* * * * * * * * * * * * * * * *
*
IF #FIRST-SCREEN
  MOVE STATUS-VIEW.WID-REPS-SPS-BEN    TO #SCN-WID-REPS-SPS-BEN
  MOVE STATUS-VIEW.WID-REPS-DEP-BEN    TO #SCN-WID-REPS-DEP-BEN
*
  ASSIGN #SCN-DIC            = VA-DIC-AMT
  ASSIGN #SCN-OFFSET-BEN     = OFFSET-BENEFIT
  ASSIGN #SCN-DEATH-SERVICE-CON  = DEATH-SERVICE-CON
  ASSIGN #SCN-MILITARY-NUMBER    = MILITARY-NUMBER
*
  IF CHIEF-OF-STAFF-IND = 'N'
    MOVE CHIEF-OF-STAFF-IND TO #SCN-LOD
  END-IF
*
* IF #SCN-LOD NE 'N'                                 /* TM1
*   MOVE #SCN-LOD TO #HOLD-SCN-LOD                   /* TM1
*   MOVE ' '      TO #SCN-LOD                        /* TM1
* END-IF                                             /* TM1
*
  IF ACMSS-IND = 'Y'
    MOVE 'Y' TO #SCN-ACMSS-IND
  ELSE
    MOVE 'N' TO #SCN-ACMSS-IND
  END-IF
ELSE
  MOVE (AD=P) TO #SCN-ATTR
END-IF
*
IF CLAIM-VIEW.LETTER(1) = 'DUMMY'
  MOVE '     ' TO CLAIM-VIEW.LETTER(1)
END-IF
*
FOR #INDEXS 1 TO 15
  IF CLAIM-VIEW.LETTER(#INDEXC) NE '   '
    MOVE CLAIM-VIEW.LETTER (#INDEXC) TO #SCN-CLM-LETTER(#INDEXS)
    MOVE CLAIM-VIEW.STATUS(#INDEXC) TO #SCN-CLM-STATUS(#INDEXS)
    MOVE CLAIM-VIEW.REMARKS(#INDEXC) TO #SCN-CLM-REMARKS(#INDEXS)
    MOVE CLAIM-VIEW.AMOUNT(#INDEXC) TO #SCN-CLM-AMOUNT(#INDEXS)
    MOVE CLAIM-VIEW.DATE-FILED(#INDEXC) TO #HOLD-CONVERT-DATE
    COMPRESS #HCD-MM #HCD-DD #HCD-YYYY-A
        INTO #SCN-CLM-DT-FILED(#INDEXS) LEAVING NO SPACE
    MOVE CLAIM-VIEW.DATE-SETTLED(#INDEXC) TO #HOLD-CONVERT-DATE
    COMPRESS #HCD-MM #HCD-DD #HCD-YYYY-A
          INTO #SCN-CLM-DT-SETTLED(#INDEXS) LEAVING NO SPACE
    COMPUTE #INDEXC = #INDEXC + 1
  ELSE
    ESCAPE ROUTINE
  END-IF
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE PROCESS-TRLOG
* * * * * * * * * * * * * * * * *
*
IF #SCN-CLM-LETTER (#INDEXS) = ' '
  MOVE 0 TO #HLD-CONVERT-DT-FILED
  MOVE 0 TO #HLD-CONVERT-DT-SETTLED
  RESET #SCN-CLM-REMARKS(#INDEXS)
  RESET #SCN-CLM-STATUS(#INDEXS)
  RESET #SCN-CLM-AMOUNT(#INDEXS)
  MOVE '      ' TO #SCN-CLM-DT-FILED(#INDEXS)
  MOVE '      ' TO #SCN-CLM-DT-SETTLED(#INDEXS)
ELSE
  MOVE #SCN-CLM-DT-FILED(#INDEXS) TO #HOLD-SCREEN-DATE
  COMPRESS #HSD-YYYY #HSD-MM #HSD-DD
             INTO #HLD-CONVERT-DT-FILED-A LEAVING NO
  MOVE #SCN-CLM-DT-SETTLED(#INDEXS) TO #HOLD-SCREEN-DATE
  COMPRESS #HSD-YYYY #HSD-MM #HSD-DD
             INTO #HLD-CONVERT-DT-SETTLED-A LEAVING NO
END-IF
*
IF #SCN-CLM-DT-FILED (#INDEXS) = '00000000'
  MOVE 0 TO #HLD-CONVERT-DT-FILED
END-IF
*
IF #SCN-CLM-DT-SETTLED (#INDEXS) = '00000000'
  MOVE 0 TO #HLD-CONVERT-DT-SETTLED
END-IF
*
IF #NO-CLAIMS AND #SCN-CLM-LETTER (#INDEXS) = ' '
  IGNORE
ELSE
  IF #NO-CLAIMS OR CLAIM-VIEW.C*CLAIM-INFO = 0
    PERFORM NEW-MOVE
  ELSE
    IF  (#SCN-CLM-LETTER  (#INDEXS) NE CLAIM-VIEW.LETTER      (#INDEXR))
     OR (#HLD-CONVERT-DT-FILED      NE CLAIM-VIEW.DATE-FILED  (#INDEXR))
     OR (#HLD-CONVERT-DT-SETTLED    NE CLAIM-VIEW.DATE-SETTLED(#INDEXR))
     OR (#SCN-CLM-STATUS  (#INDEXS) NE CLAIM-VIEW.STATUS      (#INDEXR))
     OR (#SCN-CLM-REMARKS (#INDEXS) NE CLAIM-VIEW.REMARKS     (#INDEXR))
     OR (#SCN-CLM-AMOUNT  (#INDEXS) NE CLAIM-VIEW.AMOUNT      (#INDEXR))
      PERFORM OLD-MOVE
      PERFORM NEW-MOVE
    END-IF
  END-IF
END-IF
*
ADD 1 TO #INDEXR
END-SUBROUTINE /* (0408)
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE EDIT-SCREEN
* * * * * * * * * * * * * * * *
*
IF NOT #SCN-DEATH-SERVICE-CON = 'Y' OR = 'N' OR = ' ' OR = 'C'  /* DW1
                                             OR = 'D'           /* DW2
  REINPUT USING HELP
  MARK *#SCN-DEATH-SERVICE-CON
END-IF
*
IF NOT #SCN-ACMSS-IND = 'Y' OR = 'N'
  REINPUT 'Must be "Y" or "N"'
  MARK *#SCN-ACMSS-IND
END-IF
*
IF NOT #SCN-LOD = 'Y' OR = 'N' OR = ' '
  REINPUT 'Must be "Y" or "N" or " "'
  MARK *#SCN-LOD
END-IF
*
FOR #INDEXS 1 TO 15
  CALLNAT 'GCLSTSXX' #SCN-CLM-STATUS (#INDEXS) #INVALID #ERR-MSG
  IF #INVALID
    REINPUT USING HELP
    MARK *#SCN-CLM-STATUS (#INDEXS)
  END-IF
*
  IF   (#SCN-CLM-LETTER (#INDEXS) NE ' ')
   AND (#SCN-CLAIM-LETTER-1 (#INDEXS) NE '*')
    RESET #VALID-CLAIM
    FOR #INDEXV 1 TO 17
      IF #SCN-CLM-LETTER (#INDEXS) = #VCT-ENTRY (#INDEXV)
        MOVE TRUE TO #VALID-CLAIM
        ESCAPE BOTTOM
      END-IF
    END-FOR
*
    IF NOT #VALID-CLAIM
      REINPUT WITH 'INVALID CLAIM/LETTER'
        MARK *#SCN-CLM-LETTER(#INDEXS)
    END-IF
  END-IF
*
  IF   (#SCN-CLM-STATUS   (#INDEXS)  NE ' ')
   AND (#SCN-CLM-DT-FILED (#INDEXS) = ' ' OR = '00000000')
    REINPUT WITH 'DATE-FILED MUST BE ENTERED IF CLAIM-STATUS IS ENTERED'
      MARK *#SCN-CLM-DT-FILED (#INDEXS)
  END-IF
*
  IF   (NOT (#SCN-CLM-DT-SETTLED (#INDEXS) = ' ' OR = '00000000'))
   AND (#SCN-CLM-STATUS          (#INDEXS) = ' ')
    REINPUT
        'CLAIM-STATUS MUST BE ENTERED IF DATE-SETTLED IS ENTERED'
      MARK *#SCN-CLM-STATUS (#INDEXS)
  END-IF
*
  IF   (NOT (#SCN-CLM-DT-SETTLED (#INDEXS) = ' ' OR = '00000000'))
   AND (NOT (#SCN-CLM-STATUS (#INDEXS) = 'G' OR = 'D'))
    REINPUT
     'DATE-SETTLED CAN ONLY BE ENTERED IF CLAIM IS GRANTED OR DENIED'
    MARK *#SCN-CLM-DT-SETTLED (#INDEXS)
  END-IF
*
  IF #SCN-CLM-LETTER (#INDEXS) NE ' '
    IF #SCN-CLM-DT-FILED (#INDEXS) = ' '
      MOVE '00000000' TO #SCN-CLM-DT-FILED (#INDEXS)
    END-IF
*
    IF #SCN-CLM-DT-SETTLED (#INDEXS) = ' '
      MOVE '00000000' TO #SCN-CLM-DT-SETTLED (#INDEXS)
    END-IF
  END-IF
*
  IF #SCN-CLM-DT-FILED(#INDEXS) = '00000000' OR = ' '
    IGNORE
  ELSE
    IF #SCN-CLM-DT-FILED (#INDEXS) NE MASK(MMDDYYYY)
      REINPUT 'Date must be "MMDDYYYY"'
        MARK *#SCN-CLM-DT-FILED(#INDEXS)
    ELSE
      MOVE #SCN-CLM-DT-FILED(#INDEXS) TO #HOLD-SCREEN-DATE
      MOVE #HSD-YYYY TO #ES-YYYY
      MOVE #HSD-MM TO #ES-MM
      MOVE #HSD-DD TO #ES-DD
      IF #EDIT-SCREEN-YYYYMMDD > *DATN
        REINPUT 'Date cannot be greater than today'
          MARK *#SCN-CLM-DT-FILED(#INDEXS)
      END-IF
    END-IF
  END-IF
*
  IF #SCN-CLM-DT-SETTLED(#INDEXS) = '00000000' OR = ' '
    IGNORE
  ELSE
    IF #SCN-CLM-DT-SETTLED (#INDEXS) NE MASK(MMDDYYYY)
      REINPUT 'Date must be "MMDDYYYY"'
        MARK *#SCN-CLM-DT-SETTLED(#INDEXS)
    ELSE
      MOVE #SCN-CLM-DT-SETTLED(#INDEXS) TO #HOLD-SCREEN-DATE
      MOVE #HSD-YYYY TO #ES-YYYY
      MOVE #HSD-MM TO #ES-MM
      MOVE #HSD-DD TO #ES-DD
      IF #EDIT-SCREEN-YYYYMMDD > *DATN
        REINPUT 'Date cannot be greater than today'
          MARK *#SCN-CLM-DT-SETTLED(#INDEXS)
      END-IF
    END-IF
  END-IF
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE MOVE-SCREEN
* * * * * * * * * * * * * * * *
IF #INDEXH > 30
  REINPUT WITH 'LIMIT OF 30 CLAIMS'
    MARK *#SCN-CLM-LETTER (1)
END-IF
*
MOVE #SCN-CLM-LETTER(#INDEXS)  TO #HOLD-CLM-LETTER(#INDEXH)
MOVE #SCN-CLM-STATUS(#INDEXS)  TO #HOLD-CLM-STATUS(#INDEXH)
MOVE #SCN-CLM-REMARKS(#INDEXS) TO #HOLD-CLM-REMARKS(#INDEXH)
MOVE #SCN-CLM-AMOUNT(#INDEXS)  TO #HOLD-CLM-AMOUNT(#INDEXH)
*
IF #SCN-CLM-DT-FILED (#INDEXS) = '00000000'
  MOVE 0 TO #HOLD-CLM-DT-FILED (#INDEXH)
ELSE
  MOVE #SCN-CLM-DT-FILED (#INDEXS) TO #HOLD-SCREEN-DATE
  COMPRESS #HSD-YYYY #HSD-MM #HSD-DD
             INTO #HOLD-CLM-DT-FILED-A (#INDEXH) LEAVING NO
END-IF
*
IF #SCN-CLM-DT-SETTLED (#INDEXS) = '000000'
  MOVE 0 TO #HOLD-CLM-DT-SETTLED (#INDEXH)
ELSE
  MOVE #SCN-CLM-DT-SETTLED (#INDEXS) TO #HOLD-SCREEN-DATE
  COMPRESS #HSD-YYYY #HSD-MM #HSD-DD
             INTO #HOLD-CLM-DT-SETTLED-A (#INDEXH) LEAVING NO
END-IF
*
ADD 1 TO #INDEXH
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE TRLOG-WRITE
* * * * * * * * * * * * * * * *
*
MOVE STATUS-VIEW.NAME-SP  TO TRLOG-VIEW.NAME
MOVE CLAIM-VIEW.ID-NUMBER TO TRLOG-VIEW.ID-NUMBER
MOVE CLAIM-VIEW.DTS-DATN  TO TRLOG-VIEW.DATE-LAST-UPDATE
MOVE #CGA-CLERK           TO TRLOG-VIEW.CLERK-ID
MOVE *INIT-ID             TO TRLOG-VIEW.TERMINAL-ID
MOVE *DATN                TO TRLOG-VIEW.TRANSACTION-DATN
MOVE *TIMN                TO TRLOG-VIEW.TRANSACTION-TIMN
MOVE 'DF-'                TO TRLOG-VIEW.NEW-DF (1)
STORE TRLOG-VIEW
*
END-SUBROUTINE /* (0603)
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE UPDATE-RECORD
* * * * * * * * * * * * * * * * *
*
FOR #INDEXH 1 TO 30
  RESET #WAS-UNSETTLED
        #NOW-UNSETTLED
        #WAS-SETTLED
        #NOW-SETTLED
*
  IF   (CLAIM-VIEW.DATE-FILED   (#INDEXH) NE 0)  /* WAS UNSETTLED
   AND (CLAIM-VIEW.DATE-SETTLED (#INDEXH) =  0)
   AND (NOT (CLAIM-VIEW.STATUS  (#INDEXH) = 'G' OR = 'D'))
    MOVE TRUE TO #WAS-UNSETTLED
  ELSE
    MOVE TRUE TO #WAS-SETTLED
  END-IF
*
  IF   (#HOLD-CLM-DT-FILED   (#INDEXH) NE 0)    /* NOW UNSETTLED
   AND (#HOLD-CLM-DT-SETTLED (#INDEXH) =  0)
   AND (NOT #HOLD-CLM-STATUS (#INDEXH) = 'G' OR = 'D')
    MOVE TRUE TO #NOW-UNSETTLED
  ELSE
    MOVE TRUE TO #NOW-SETTLED
  END-IF
*
  IF #WAS-SETTLED AND #NOW-UNSETTLED             /* 1ST TIME UNSETTLED
    ADD 1 TO #PD-X
    MOVE #HOLD-CLM-DT-FILED (#INDEXH) TO #PD-DT-FILED    (#PD-X)
    MOVE 'A'                          TO #PD-ADD-DEL-CHG (#PD-X)
  ELSE
    IF #WAS-UNSETTLED AND #NOW-SETTLED             /* DELETE UNSETTLED
      ADD 1 TO #PD-X
      MOVE CLAIM-VIEW.DATE-FILED (#INDEXH) TO #PD-DT-FILED    (#PD-X)
      MOVE 'D'                             TO #PD-ADD-DEL-CHG (#PD-X)
    ELSE
      IF #WAS-UNSETTLED AND #NOW-UNSETTLED           /* CHG DATE FILED
       AND (#HOLD-CLM-DT-FILED (#INDEXH) NE
                                        CLAIM-VIEW.DATE-FILED (#INDEXH))
        ADD 1 TO #PD-X
        MOVE CLAIM-VIEW.DATE-FILED (#INDEXH) TO #PD-DT-FILED    (#PD-X)
        MOVE #HOLD-CLM-DT-FILED    (#INDEXH) TO #PD-DT-NU-DT-FL (#PD-X)
        MOVE 'C'                             TO #PD-ADD-DEL-CHG (#PD-X)
      END-IF
    END-IF
  END-IF
*
  MOVE #HOLD-CLM-STATUS    (#INDEXH) TO CLAIM-VIEW.STATUS      (#INDEXH)
  MOVE #HOLD-CLM-LETTER    (#INDEXH) TO CLAIM-VIEW.LETTER      (#INDEXH)
  MOVE #HOLD-CLM-AMOUNT    (#INDEXH) TO CLAIM-VIEW.AMOUNT      (#INDEXH)
  MOVE #HOLD-CLM-REMARKS   (#INDEXH) TO CLAIM-VIEW.REMARKS     (#INDEXH)
  MOVE #HOLD-CLM-DT-FILED  (#INDEXH) TO CLAIM-VIEW.DATE-FILED  (#INDEXH)
  MOVE #HOLD-CLM-DT-SETTLED(#INDEXH) TO CLAIM-VIEW.DATE-SETTLED(#INDEXH)
END-FOR
*
END-SUBROUTINE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
DEFINE SUBROUTINE NEW-MOVE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
ASSIGN #FIELD-CHANGED = TRUE
MOVE #SCN-CLM-LETTER    (#INDEXS) TO NEW-LETTER    (#INDEXT)
MOVE #SCN-CLM-AMOUNT    (#INDEXS) TO NEW-AMOUNT    (#INDEXT)
MOVE #SCN-CLM-REMARKS   (#INDEXS) TO NEW-REMARKS   (#INDEXT)
MOVE #SCN-CLM-STATUS    (#INDEXS) TO NEW-STATUS    (#INDEXT)
MOVE #SCN-CLM-DT-FILED  (#INDEXS) TO NEW-DT-FILED  (#INDEXT)
MOVE #SCN-CLM-DT-SETTLED(#INDEXS) TO NEW-DT-SETTLED(#INDEXT)
ADD 1 TO #INDEXT
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE OLD-MOVE
* * * * * * * * * * * * * *
*
MOVE CLAIM-VIEW.DATE-FILED (#INDEXR) TO #HOLD-CONVERT-DATE
COMPRESS #HCD-MM #HCD-DD #HCD-YYYY-A INTO OLD-DT-FILED(#INDEXT)
  LEAVING NO SPACE
MOVE CLAIM-VIEW.DATE-SETTLED (#INDEXR) TO #HOLD-CONVERT-DATE
COMPRESS #HCD-MM #HCD-DD #HCD-YYYY-A INTO OLD-DT-SETTLED(#INDEXT)
  LEAVING NO SPACE
MOVE CLAIM-VIEW.LETTER  (#INDEXR) TO OLD-LETTER  (#INDEXT)
MOVE CLAIM-VIEW.STATUS  (#INDEXR) TO OLD-STATUS  (#INDEXT)
MOVE CLAIM-VIEW.AMOUNT  (#INDEXR) TO OLD-AMOUNT  (#INDEXT)
MOVE CLAIM-VIEW.REMARKS (#INDEXR) TO OLD-REMARKS (#INDEXT)
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE AMOUNT-TRLOG
* * * * * * * * * * * * * * * *
*
IF #SCN-DIC NE VA-DIC-AMT
  MOVE #SCN-DIC   TO NEW-AMOUNT(#INDEXT)
  MOVE VA-DIC-AMT TO OLD-AMOUNT(#INDEXT)
  MOVE 'VA-DIC-AMT NEW' TO NEW-LETTER(#INDEXT)
  MOVE 'VA-DIC-AMT OLD' TO OLD-LETTER(#INDEXT)
  COMPUTE #INDEXT = #INDEXT + 1
  ASSIGN #AMOUNT-CHANGED = TRUE
END-IF
*
IF #SCN-OFFSET-BEN NE OFFSET-BENEFIT
  MOVE #SCN-OFFSET-BEN TO NEW-AMOUNT(#INDEXT)
  MOVE OFFSET-BENEFIT  TO OLD-AMOUNT(#INDEXT)
  MOVE 'OFFSET-BEN NEW' TO NEW-LETTER(#INDEXT)
  MOVE 'OFFSET-BEN OLD' TO OLD-LETTER(#INDEXT)
  COMPUTE #INDEXT = #INDEXT + 1
  ASSIGN #AMOUNT-CHANGED = TRUE
END-IF
*
IF #SCN-WID-REPS-SPS-BEN  NE WID-REPS-SPS-BEN
  MOVE #SCN-WID-REPS-SPS-BEN TO NEW-AMOUNT(#INDEXT)
  MOVE WID-REPS-SPS-BEN      TO OLD-AMOUNT(#INDEXT)
  MOVE 'REPS-SPS-BEN  NEW ' TO NEW-LETTER(#INDEXT)
  MOVE 'REPS-SPS-BEN  OLD ' TO OLD-LETTER(#INDEXT)
  COMPUTE #INDEXT = #INDEXT + 1
  ASSIGN #AMOUNT-CHANGED = TRUE
END-IF
*
IF #SCN-WID-REPS-DEP-BEN  NE WID-REPS-DEP-BEN
  MOVE #SCN-WID-REPS-DEP-BEN TO NEW-AMOUNT(#INDEXT)
  MOVE WID-REPS-DEP-BEN      TO OLD-AMOUNT(#INDEXT)
  MOVE 'REPS-DEP-BEN  NEW ' TO NEW-LETTER(#INDEXT)
  MOVE 'REPS-DEP-BEN  OLD ' TO OLD-LETTER(#INDEXT)
  COMPUTE #INDEXT = #INDEXT + 1
  ASSIGN #AMOUNT-CHANGED = TRUE
END-IF
*
IF #SCN-DEATH-SERVICE-CON  NE DEATH-SERVICE-CON
  MOVE #SCN-DEATH-SERVICE-CON TO NEW-REMARKS(#INDEXT)
  MOVE DEATH-SERVICE-CON       TO OLD-REMARKS(#INDEXT)
  MOVE 'SVC-CONN-IND  NEW ' TO NEW-LETTER(#INDEXT)
  MOVE 'SVC-CONN-IND  OLD ' TO OLD-LETTER(#INDEXT)
  COMPUTE #INDEXT = #INDEXT + 1
  ASSIGN #AMOUNT-CHANGED = TRUE
END-IF
*
IF #SCN-MILITARY-NUMBER  NE MILITARY-NUMBER
  MOVE #SCN-MILITARY-NUMBER    TO NEW-REMARKS(#INDEXT)
  MOVE MILITARY-NUMBER         TO OLD-REMARKS(#INDEXT)
  MOVE 'MIL-SVC-NUM   NEW ' TO NEW-LETTER(#INDEXT)
  MOVE 'MIL-SVC-NUM   OLD ' TO OLD-LETTER(#INDEXT)
  COMPUTE #INDEXT = #INDEXT + 1
  ASSIGN #AMOUNT-CHANGED = TRUE
END-IF
*
IF #SCN-LOD  NE CHIEF-OF-STAFF-IND
  MOVE #SCN-LOD                TO NEW-REMARKS(#INDEXT)
  MOVE CHIEF-OF-STAFF-IND      TO OLD-REMARKS(#INDEXT)
  MOVE 'SPECIAL-CODE  NEW ' TO NEW-LETTER(#INDEXT)
  MOVE 'SPECIAL-CODE  OLD ' TO OLD-LETTER(#INDEXT)
  COMPUTE #INDEXT = #INDEXT + 1
  ASSIGN #AMOUNT-CHANGED = TRUE
END-IF
*
IF   ((#SCN-ACMSS-IND = 'Y') AND (ACMSS-IND NE 'Y'))
 OR  ((#SCN-ACMSS-IND = 'N') AND (ACMSS-IND NE ' '))
  MOVE #SCN-ACMSS-IND          TO NEW-REMARKS(#INDEXT)
  MOVE ACMSS-IND               TO OLD-REMARKS(#INDEXT)
  MOVE 'ACMSS-IND     NEW ' TO NEW-LETTER(#INDEXT)
  MOVE 'ACMSS-IND     OLD ' TO OLD-LETTER(#INDEXT)
  COMPUTE #INDEXT = #INDEXT + 1
  ASSIGN #AMOUNT-CHANGED = TRUE
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE AMOUNT-WRITE
* * * * * * * * * * * * * * * *
*
GET A-STATUS-VIEW #CGA-ISN
IF #HOLD-DATN NE DTS-DATN OR #HOLD-TIMN NE DTS-TIMN
  MOVE 'NO BENEFIT AMOUNTS UPDATED, REDO' TO #SUP-MESSAGE
ELSE
  PERFORM AMOUNT-UPDATE
END-IF
*
MOVE *DATN TO DTS-DATN
MOVE *TIMN TO DTS-TIMN
UPDATE (0788)
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE AMOUNT-UPDATE
* * * * * * * * * * * * * * * * *
*
MOVE #SCN-WID-REPS-SPS-BEN    TO A-STATUS-VIEW.WID-REPS-SPS-BEN
MOVE #SCN-WID-REPS-DEP-BEN    TO A-STATUS-VIEW.WID-REPS-DEP-BEN
MOVE #SCN-DEATH-SERVICE-CON   TO A-STATUS-VIEW.DEATH-SERVICE-CON
MOVE #SCN-MILITARY-NUMBER     TO A-STATUS-VIEW.MILITARY-NUMBER
*
IF #SCN-LOD = 'N'
  IF NOT A-STATUS-VIEW.CHIEF-OF-STAFF-IND = 'C' OR = 'G'   /* KEEP C/G
    MOVE 'N' TO A-STATUS-VIEW.CHIEF-OF-STAFF-IND    /* TM1
  END-IF
ELSE
  IF A-STATUS-VIEW.CHIEF-OF-STAFF-IND = 'N'    /* TM1
    RESET A-STATUS-VIEW.CHIEF-OF-STAFF-IND
  END-IF
END-IF
*
ASSIGN A-STATUS-VIEW.VA-DIC-AMT        = #SCN-DIC
ASSIGN A-STATUS-VIEW.OFFSET-BENEFIT    = #SCN-OFFSET-BEN
*
IF #SCN-ACMSS-IND = 'Y'
  MOVE 'Y' TO A-STATUS-VIEW.ACMSS-IND
ELSE
  RESET A-STATUS-VIEW.ACMSS-IND
END-IF
*
END-SUBROUTINE
*
END
