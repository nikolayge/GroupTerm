* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*************************************************************************
*  PROGRAM  : ATHPCNTB
*
*  DESCRIPTION : Create auto dialer message and send e-mails.
*
**************************************************************************
*        MODIFICATION LOG
**************************************************************************
* USER   DATE      TAG  REASON
* VXT 10/04/2012        Creation
* NGG 05/19/2014   NG1  Clean phone numbers
* bz-Name 07/07/2017     Fine Names
**************************************************************************
DEFINE DATA
LOCAL USING GPBACAPD
LOCAL USING ADDA0001
LOCAL USING GPRA0003                              /* Error log
LOCAL USING GPRA0005                              /* E-mail Information
LOCAL USING GPRL0001                              /* Property file
LOCAL
1 PR-V VIEW OF A-PROCESS-REQUEST
  2 ID-NUMBER
  2 REQUEST-FINAL-STATUS
  2 REQUEST-DATA
*
1 ST-V VIEW OF A-STATUS
  2 id-number
  2 issue-date  (9)
  2 month-alloc-amt  (9)
  2 paid-to-date   (9)
  2 MEMBER-CONTACT-ID
  2 MBR-SINCE
  2 REDEFINE MBR-SINCE
    3 #M-YYYY(A4)
    3 #M-MM  (A2)
  2 ACTIVE-SEGMENTS (9)
    3 STATUS
    3 PAY-STATUS
  2 C*ACTIVE-SEGMENTS
  2 X-LOAN-DATE (9)
  2 REDEFINE X-LOAN-DATE
    3 X-LOAN-DATE-OCC (9)
      4 X-LOAN-DATE-YYYY (N4)
      4 X-LOAN-DATE-MM (N2)
      4 X-LOAN-DATE-DD (N2)
  2 X-ACCUM-INTEREST (9)
  2 X-NXT-YR-ACCUM-INT (9)
  2 X-LOAN-AMOUNT (9)
  2 X-LOAN-AMOUNT-2 (9)
  2 X-INTEREST-RATE (9)
*  2 TELE-NUMBER
*
1 CNT-V VIEW OF A-CONTACTS
  2 CONTACT-ID
  2 FIRST-NAME
  2 MIDDLE-NAME
  2 LAST-NAME
  2 SUFFIX
  2 RANK-ID
  2 SSN
  2 DATE-OF-BIRTH
  2 REDEFINE DATE-OF-BIRTH
    3 #D-YYYY (A4)
    3 #D-MM   (A2)
    3 #D-DD   (A2)
  2 MILITARY-STATUS
*
1 RANK-V VIEW OF A-RANK-REFERENCE
  2 MILITARY-BRANCH
*
1 TERM-V VIEW OF A-TERMINALS
  2 CLERK-ID              (A3)
  2 INIT-USER
  2 COMMENTS
*
1 ADDR-REL-V VIEW OF A-ADDRESS-RELATIONSHIP
  2 ADDRESS-POOL-ID
  2 ADDR-TYPE-CD
*
1 p_GPRS0CNT
  2 p_Name       (A)    DYNAMIC
  2 p_DOB_N      (N8)
  2 p_DOB        (A10)
  2 p_DOD_N      (N8)
  2 p_DOD        (A10)
  2 p_SEX        (A1)
  2 p_SSN        (N9)
*
* 1 p_PhoneN1M (10)
*   2 Phone          (A36)   INIT ALL <' '>
*   2 Phone-Type     (A16)   INIT ALL <' '>
*   2 Phone-Type-CD  (A1)    INIT ALL <' '>
*   2 Phone-Pref     (A1)    INIT ALL <' '>
*
1 #PHONE      (N20) 1 REDEFINE #PHONE   /* NG1
  2 #FIRST-9        (N9)
  2 #TELE-NUMBER    (N11)
1 #PHONE-TYPE       (A1)
1 #INTL             (A1)
*
1 #CN             (A6)
1 redefine #cn
  2 #cn-n           (n6)
1 #M-NAME         (A50)
1 #M-DOB          (A10)
1 #INIT-USER      (A8)
1 #USER           (A40)
1 #I              (I2)
1 #J              (I2)
1 #HOLD-AMOUNT-BAL(P7.2)
1 #HOLD-AMOUNT-INT(P7.2)
1 #HOLD-AMOUNT-TOT(P7.2)
1 #UNPAID-PR-BAL  (A20)
1 #CURR-ACCUM-INT (A20)
1 #TOT-AMOUNT     (A20)
1 #DAILY-INT-RATE (P0.7)
*
1 #WYYYYMMDD
  2 #WYYYY  (N4)
  2 #WMM    (N2)
  2 #WDD    (N2)
1 REDEFINE #WYYYYMMDD
  2 #WYYYY-AA(A4)
  2 #WMM-AA  (A2)
  2 #WDD-AA  (A2)
1 REDEFINE #WYYYYMMDD
  2 #WYYYYMMDD-N  (N8.0)
1 #WMMDDYYYY
  2 #WMM   (N2)
  2 #WDD   (N2)
  2 #WYYYY (N4)
1 REDEFINE #WMMDDYYYY
  2 #WMMDDYYYY-N (N8)
1 REDEFINE #WMMDDYYYY
  2 #WMM-A   (A2)
  2 #WDD-A   (A2)
  2 #WYYYY-A (A4)
*
1 #curr-date           (n8)                                  /* vt1 \/
1 #datn                (n8)
1 redefine #datn
  2 #datn-yyyy         (a4)
  2 #datn-mm           (a2)
  2 #datn-dd           (a2)
1 #process-date        (a10)
1 #TAb                 (a1) init<H'09'>
1 #out-file            (a500)
1 #ACCUM-INT-a         (A14)
1 #LOAN-PRIN-a         (a14)
1 #total-amt-a         (a14)
1 #CLERK-ABB-PASS      (A3)
1 #CLERK-ABB-NAME-PASS (A20)
1 #INVALID-L           (L)
1 #user-name           (a70)
1 #First-address       (a70)
1 #Second-address      (a70)
1 #third-address       (a70)
1 #letter-env          (a) dynamic
1 #contact-id          (n8)
1 #formatted-name      (a70)
1 #mil-status          (a1)
1 #mil-service         (a3)
1 #CNT-EXTRACT         (P7)
1 #cnt-upd             (p7)
1 #isn-proc            (p10)
*
1 #HOME-PHONE        (A11)
1 #AUTO-DIALER-CONST (A8) INIT <'0005.wav'>
1 #PD-TO-DT     (N8)
1 #i1           (i2)
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYYMM    (N6)
  2 REDEFINE #YYYYMM
    3 #YYYY     (N4)
    3 #MM       (N2)
  2 #DD        (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A    (A4)
  2 #MM-A      (A2)
  2 #DD-A      (A2)
*
local
1 #TEMPLATE-type   (A3) INIT <'DEF'>       /* CAP Default e-mail
1 #daily-emailsent-report  (A) DYNAMIC INIT
<'/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/DAILYEMAILSENTREPORT-CAP-DEFAULT.TXT'>

1 #SALUTATION-WITH-NAME             (A) DYNAMIC
1 #insured-name                     (a70)
1 #first-name                       (a25)
1 #middle-name                      (a25)
1 #last-name                        (a25)
1 #suffix                           (a10)
1 #owner-name                       (A)  DYNAMIC
1 #pol-seg                          (i2)
1 #policy-segment                   (a1)
1 #owner-email                      (a60)
1 #cnt-email                        (p9)
1 #issue-date                       (n8)
END-DEFINE
*
DEFINE WORK FILE 1 #EMAIL-DAILY-FILE TYPE 'ASCII-COMPRESSED'
  ATTRIBUTES 'APPEND'
*
DEFINE WORK FILE 2 #daily-emailsent-report  TYPE 'ASCII-COMPRESSED'
DEFINE WORK FILE 4 TYPE 'ASCII-COMPRESSED'
DEFINE WORK FILE 5 TYPE 'ASCII-COMPRESSED'
*
#curr-date := *datn                                          /* vt1 \/
#datn   := *datn
* #datn   := 20120208
compress #datn-mm '/' #datn-dd '/' #datn-yyyy into #process-date leaving no
*
MOVE *INIT-USER TO #INIT-USER
FIND TERM-V WITH TERMINAL-ID = #INIT-USER
  MOVE COMMENTS TO #USER
END-FIND
*
READ PR-V BY ID-NUMBER
  ACCEPT IF REQUEST-FINAL-STATUS = 'I'
  FIND CNT-V WITH ID-NUMBER = PR-V.ID-NUMBER
  END-FIND
  FIND ST-V WITH ID-NUMBER = PR-V.ID-NUMBER
  END-FIND
  FIND RANK-V WITH RANK-ID = CNT-V.RANK-ID
  END-FIND
  perform create-autodiler
  perform create-email
END-READ
*
*********************************
DEFINE SUBROUTINE COMPUTE-AMOUNTS
*********************************
MOVE *DATN TO #WYYYYMMDD-N
FOR #I 1 TO C*ACTIVE-SEGMENTS
  IF  (STATUS (#I) NE 'D')
      OR (PAY-STATUS (#I) = '44')
    ESCAPE TOP
  END-IF
*
  ADD 1 TO #J
  callnat 'gplnmsxx' #pol-num st-v.id-number #I
  move st-v.issue-date(#i) to #issue-date
  IF X-LOAN-AMOUNT (#I) GT 0
    #HOLD-AMOUNT-BAL := X-LOAN-AMOUNT(#I) + X-LOAN-AMOUNT-2(#I)
    MOVE EDITED #HOLD-AMOUNT-BAL (EM=Z,ZZZ,ZZ9.99) TO #UNPAID-PR-BAL
    COMPUTE ROUNDED #DAILY-INT-RATE = ST-V.X-INTEREST-RATE (#I) / 365
*
IF   (X-LOAN-DATE-YYYY (#I) = #WYYYYMMDD.#WYYYY)  /* LOAN TAKEN THIS MON
        AND (X-LOAN-DATE-MM   (#I) = #WYYYYMMDD.#WMM)
      COMPUTE ROUNDED #HOLD-AMOUNT-INT =
        X-ACCUM-INTEREST (#I) + X-NXT-YR-ACCUM-INT (#I)
        + (X-LOAN-AMOUNT (#I) *
     ((#DAILY-INT-RATE * (#WYYYYMMDD.#WDD - X-LOAN-DATE-DD (#I))) /100))
    ELSE
      COMPUTE ROUNDED #HOLD-AMOUNT-INT =
        X-ACCUM-INTEREST (#I) + X-NXT-YR-ACCUM-INT (#I)
        + (X-LOAN-AMOUNT (#I)
        * ((#DAILY-INT-RATE * (#WYYYYMMDD.#WDD - 1)) /100))
    END-IF
*
  END-IF
END-FOR
MOVE EDITED #HOLD-AMOUNT-INT (EM=Z,ZZZ,ZZ9.99) TO #CURR-ACCUM-INT
#HOLD-AMOUNT-TOT := #HOLD-AMOUNT-BAL + #HOLD-AMOUNT-INT
MOVE EDITED #HOLD-AMOUNT-TOT (EM=Z,ZZZ,ZZ9.99) TO #TOT-AMOUNT
*
END-SUBROUTINE
*
***************
define subroutine create-autodiler
***************
*
for #i1 1 9
  RESET #YYYYMMDD
  CALLNAT 'GPDTOSXX'
    ST-V.ISSUE-DATE (#I1)
    ST-V.MONTH-ALLOC-AMT (#I1)
    ST-V.PAID-TO-DATE (#I1)
    #YYYYMMDD
  MOVE #YYYYMMDD TO #PD-TO-DT
end-for
*
#PHONE-TYPE := 'H'         /* NG1 \/\/
CALLNAT 'OBJNPH00'
  #CONTACT-ID
  #PHONE-TYPE
  #PHONE
  #INTL
IF #INTL NE 'Y'
  MOVE EDITED #TELE-NUMBER (EM=Z9999999999) TO #HOME-PHONE
  WRITE WORK FILE 4 VARIABLE #HOME-PHONE ',' #AUTO-DIALER-CONST
*                             NG1 /\/\
ELSE            
  COMPRESS 'Invalid telephone number on file for ' ST-V.ID-NUMBER
    INTO ERROR-MESSAGE
  ERROR-PROGRAM := *PROGRAM
  CALLNAT 'GPRN0003' ERROR-LOG
END-IF
WRITE WORK FILE 5 VARIABLE #HOME-PHONE #TAB ST-V.ID-NUMBER #TAB
*
end-subroutine
*
*****************
define subroutine create-email
*****************
*
reset email-information
#cn := st-v.id-number
move st-v.member-contact-id to #contact-id
*
#SALUTATION-WITH-NAME := 'S1'
CALLNAT 'GPRS0CNT' #CONTACT-ID #SALUTATION-WITH-NAME
* #SALUTATION-WITH-NAME := EDIT_NAME_LOWCASE (< #SALUTATION-WITH-NAME >)  /*  bz-Name
#owner-name := #SALUTATION-WITH-NAME
*
#insured-name := FUNCTION-FRM-NAME(<#CONTACT-ID,#FIRST-NAME,#MIDDLE-NAME,#LAST-NAME,#SUFFIX>)
compress #first-name #last-name into #insured-name
*
perform compute-amounts
*
EMAIL-INFORMATION.TEMPLATE-TYPE   := #TEMPLATE-type
*
#POL-SEG                         := F_POLICY_SEGMENT(<#pol-num,#cn>)
IF #POL-SEG NE 0
  #POLICY-SEGMENT    := #POL-SEG
  #OWNER-EMAIL       := FUNCTION-OWNER-EMAIL(<#cn,#POLICY-SEGMENT>)
END-IF
IF #OWNER-EMAIL = ' '
  #OWNER-EMAIL       := FUNCTION-MEMBER-EMAIL(<#cn>)
END-IF
IF #OWNER-EMAIL = ' '
  #OWNER-EMAIL       := FUNCTION-CN-EMAIL(<#cn>)
END-IF
IF #OWNER-EMAIL = ' '
  #OWNER-EMAIL       := '999'
END-IF

EMAIL-INFORMATION.DAL-CN              := st-v.id-number
EMAIL-INFORMATION.OWNER-EMAIL         := #OWNER-EMAIL
*
reset #pda-address
move st-v.member-contact-id to #add-contact-id
move 'P' to #add-type
callnat 'ADDN0001' #pda-address
EMAIL-INFORMATION.ADDRESS-LINE-1 := #add-line-1
EMAIL-INFORMATION.ADDRESS-LINE-2 := #add-line-2
EMAIL-INFORMATION.ADDRESS-LINE-3 := #add-line-3
*
move edited #hold-amount-tot  (em=zzz,zz9.99)  to email-information.total-amount-due
compress '$' *TRIM(email-information.total-amount-due) into
  email-information.total-amount-due leaving no
*
EMAIL-INFORMATION.POLICY-NUMBER      := #pol-num
EMAil-INFORMAtion.OWNER-NAME         := #owner-name
email-information.insured-name       := #insured-name
add 1 to #cnt-email
*
WRITE  WORK FILE 1 EMAIL-INFORMATION
*
compress st-v.id-number                #TAB
  #insured-name                        #TAB
  #issue-date                          #TAB
  #pol-num                             #TAB
  email-information.total-amount-due   #TAB
  into #out-file leaving no
write work  2 #out-file
end-subroutine
*
END
