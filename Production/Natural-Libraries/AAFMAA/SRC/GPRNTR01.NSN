* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
***************************************************************
* SUBPROGRAM-ID: GPRNTR00 - TRANSACTION LOG GENERIC MODULE
***************************************************************
*        MODIFICATION LOG
***************************************************************
* USER   DATE      TAG  REASON
* YAK    01152011       Initial Creation (for Member Center)
*                       Includes Member Military Benefits
*                                SS benefits & Other Benefits
*                                External Life Ins policies
* YAK    04162012  YK1  Fix Natural error in compress statement
*                       (version related)
* PAM    04/30/2012 PM1 Added transaction log when plan issued
* YAK    08/25/2014 YK2 Add eCheck and Payment Request
* TMT    01/12/2014 TT1 Membership Expansion phase II
* YAK    05/10/2016     Remove unused code
*                       (All payments related transactions log 
*                       moved to the new program GPRNTR06
***************************************************************
*
DEFINE DATA
PARAMETER
1 #FUNCTION         (A) DYNAMIC
PARAMETER USING GPRATR01
LOCAL USING GPRA0004               /* PDA to pass data to TR log subprogram
LOCAL USING GPRL0004
LOCAL
1 #LOG-SS-BENEFITS-TRAN    (A) DYNAMIC CONST <'BenefitsSS'>
1 #LOG-OTHER-BENEFITS-TRAN (A) DYNAMIC CONST <'BenefitsOther'>
1 #LOG-MIL-BENEFITS-TRAN   (A) DYNAMIC CONST <'BenefitsMilitary'>
1 #LOG-VA-BENEFITS-TRAN    (A) DYNAMIC CONST <'BenefitsVA'>
1 #LOG-EXT-POL-TRAN        (A) DYNAMIC CONST <'ExternalLifeInsurance'>
1 #LOG-SERVICE-TRAN        (A) DYNAMIC CONST <'Service'>
1 #LOG-INV-TRAN            (A) DYNAMIC CONST <'FAS'>
1 #DM                      (A) DYNAMIC CONST <'DM-'>
1 #DP                      (A) DYNAMIC CONST <'DP-'>
1 #FM                      (A) DYNAMIC CONST <'FM-'>
1 #CA                      (A) DYNAMIC
1 #LOOK-UP-KEY      (A7)
1 #LOOK-UP-VALUE    (A1)
1 #LOOK-UP-STATUS   (A7) CONST <'CODE061'>
1 #LOOK-UP-REQ-STATUS (A7) CONST <'CODE067'>                                   /* YK2
1 TR_DESCRIPTION    (A) DYNAMIC
1 #WORK             (A) DYNAMIC
1 #SERVICE-NAME     (A) DYNAMIC        /* TT1
1 #SERVICE-A3       (A3)               /* TT1
1 #I  (I2)
1 #II (I2)
1 #DATE     (N8)
1 REDEFINE #DATE
  2 #DATE6 (N6)
1 REDEFINE #DATE           /* PM1
  2 #DATE-YYYY  (A4)        /* PM1
  2 #DATE-MM    (A2)        /* PM1
  2 #DATE-DD    (A2)        /* PM1
1 REDEFINE #DATE           /* PM1
  2 #DATE-A     (A8)        /* PM1
END-DEFINE
*
DECIDE ON FIRST VALUE #FUNCTION
  VALUE #LOG-SS-BENEFITS-TRAN
    TR_DESCRIPTION := #DM
    PERFORM LOG-SS-BENEFITS-TRAN
  VALUE #LOG-OTHER-BENEFITS-TRAN
    TR_DESCRIPTION := #DM
    PERFORM LOG-OTHER-BENEFITS-TRAN
  VALUE #LOG-MIL-BENEFITS-TRAN
    TR_DESCRIPTION := #DM
    PERFORM LOG-MIL-BENEFITS-TRAN
  VALUE #LOG-VA-BENEFITS-TRAN
    TR_DESCRIPTION := #DM
    PERFORM LOG-VA-BENEFITS-TRAN
  VALUE #LOG-EXT-POL-TRAN
    TR_DESCRIPTION := #DP
    PERFORM LOG-EXT-POL-TRAN
  VALUE #LOG-SERVICE-TRAN
    TR_DESCRIPTION := #CA
    PERFORM LOG-SERVICE-TRAN
  VALUE #LOG-INV-TRAN
    TR_DESCRIPTION := #FM
    PERFORM LOG-INV-TRAN
  NONE VALUE
    IGNORE
END-DECIDE
*
PERFORM WRITE-TRAN-LOG
*
********************************
DEFINE SUBROUTINE WRITE-TRAN-LOG
********************************
IF #I NE 0
  #TR-NAME               := TR_NAME
  #TR-ID-NUMBER          := TR_ID_NUMBER
  #LOG-DESCRIPTION       := TR_DESCRIPTION
  #TR-CLERK-ID           := TR_CLERK
  #TR-DATE-LAST-UPDATE   := BEFORE_IMAGE.DATE-LAST-UPDATE
  #NEW-DATA-TAG(1)       := TR_DESCRIPTION
  CALLNAT 'GPRN0004'
    #TR-FIELDS #SYNC-FIELD-TABLE(*)
    #OLD-DATA-TABLE(*) #NEW-DATA-TABLE(*)
END-IF
END-SUBROUTINE
*
**************************************
DEFINE SUBROUTINE LOG-SS-BENEFITS-TRAN
**************************************
*
IF AFTER_IMAGE.MBR-SS <> BEFORE_IMAGE.MBR-SS
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #MBR-SS-AMOUNT
  COMPRESS '$' BEFORE_IMAGE.MBR-SS TO #OLD-DATA(#I) LEAVING NO
  COMPRESS '$' AFTER_IMAGE.MBR-SS  TO #NEW-DATA(#I) LEAVING NO
END-IF
IF AFTER_IMAGE.SS-BENEFIT-AMT <> BEFORE_IMAGE.SS-BENEFIT-AMT
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #SPOUSE-SS-AMOUNT
  COMPRESS '$' BEFORE_IMAGE.SS-BENEFIT-AMT TO #OLD-DATA(#I) LEAVING NO
  COMPRESS '$' AFTER_IMAGE.SS-BENEFIT-AMT  TO #NEW-DATA(#I) LEAVING NO
END-IF
IF AFTER_IMAGE.SOC-SEC-ST-DATE <> BEFORE_IMAGE.SOC-SEC-ST-DATE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #MBR-SS-DATE
  IF BEFORE_IMAGE.SOC-SEC-ST-DATE <> ' '
    #DATE6 := VAL(BEFORE_IMAGE.SOC-SEC-ST-DATE)
    #OLD-DATA(#I) := FUNCTION-CALENDAR(<#DATE,'E'>)
  END-IF
  IF AFTER_IMAGE.SOC-SEC-ST-DATE <> ' '
    #DATE6 := VAL(AFTER_IMAGE.SOC-SEC-ST-DATE)
    #NEW-DATA(#I) := FUNCTION-CALENDAR(<#DATE,'E'>)
  END-IF
END-IF
IF AFTER_IMAGE.SPS-SS-ST-DATE <> BEFORE_IMAGE.SPS-SS-ST-DATE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #SPOUSE-SS-DATE
  IF BEFORE_IMAGE.SPS-SS-ST-DATE <> ' '
    #DATE6 := VAL(BEFORE_IMAGE.SPS-SS-ST-DATE)
    #OLD-DATA(#I) := FUNCTION-CALENDAR(<#DATE,'E'>)
  END-IF
  IF AFTER_IMAGE.SPS-SS-ST-DATE <> ' '
    #DATE6 := VAL(AFTER_IMAGE.SPS-SS-ST-DATE)
    #NEW-DATA(#I) := FUNCTION-CALENDAR(<#DATE,'E'>)
  END-IF
END-IF
END-SUBROUTINE
*
*****************************************
DEFINE SUBROUTINE LOG-OTHER-BENEFITS-TRAN
*****************************************
*
IF AFTER_IMAGE.CIVIL-SVC-PENSION <> BEFORE_IMAGE.CIVIL-SVC-PENSION
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #CIVIL-PENSION
  COMPRESS '$' BEFORE_IMAGE.CIVIL-SVC-PENSION TO #OLD-DATA(#I) LEAVING NO
  COMPRESS '$' AFTER_IMAGE.CIVIL-SVC-PENSION  TO #NEW-DATA(#I) LEAVING NO
END-IF
IF AFTER_IMAGE.CIV-SV-SBP-AMT <> BEFORE_IMAGE.CIV-SV-SBP-AMT
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #SURVIVOR-ANNUITY
  COMPRESS '$' BEFORE_IMAGE.CIV-SV-SBP-AMT TO #OLD-DATA(#I) LEAVING NO
  COMPRESS '$' AFTER_IMAGE.CIV-SV-SBP-AMT  TO #NEW-DATA(#I) LEAVING NO
END-IF
IF AFTER_IMAGE.CIVIL-PENSION <> BEFORE_IMAGE.CIVIL-PENSION
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #PRIVATE-PENSION
  COMPRESS '$' BEFORE_IMAGE.CIVIL-PENSION TO #OLD-DATA(#I) LEAVING NO
  COMPRESS '$' AFTER_IMAGE.CIVIL-PENSION  TO #NEW-DATA(#I) LEAVING NO
END-IF
IF AFTER_IMAGE.CIVIL-ANNUITY <> BEFORE_IMAGE.CIVIL-ANNUITY
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #PRIVATE-PENS-SURV-ANNUITY
  COMPRESS '$' BEFORE_IMAGE.CIVIL-ANNUITY TO #OLD-DATA(#I) LEAVING NO
  COMPRESS '$' AFTER_IMAGE.CIVIL-ANNUITY  TO #NEW-DATA(#I) LEAVING NO
END-IF
IF AFTER_IMAGE.SPS-GOVT-ANNUITY <> BEFORE_IMAGE.SPS-GOVT-ANNUITY
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #SPOUSE-PENSION
  COMPRESS '$' BEFORE_IMAGE.SPS-GOVT-ANNUITY TO #OLD-DATA(#I) LEAVING NO
  COMPRESS '$' AFTER_IMAGE.SPS-GOVT-ANNUITY  TO #NEW-DATA(#I) LEAVING NO
END-IF
IF AFTER_IMAGE.SPS-CSRS-IND <> BEFORE_IMAGE.SPS-CSRS-IND
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #SP-PENSION-TYPE
  #OLD-DATA(#I)          := BEFORE_IMAGE.SPS-CSRS-IND
  #NEW-DATA(#I)          := AFTER_IMAGE.SPS-CSRS-IND
END-IF
END-SUBROUTINE
*
***************************************
DEFINE SUBROUTINE LOG-MIL-BENEFITS-TRAN
***************************************
*
* RETIRED-PAY-AMT (A) DYNAMIC
* MIL-SBP-AMT (A) DYNAMIC
* MIL-SBP-OPT (A) DYNAMIC
* RSV-NG-RETIRE-PTS
*
IF AFTER_IMAGE.RETIRED-PAY-AMT <> BEFORE_IMAGE.RETIRED-PAY-AMT
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #RETIRED-PAY-AMT
  #OLD-DATA(#I)          := BEFORE_IMAGE.RETIRED-PAY-AMT
  #NEW-DATA(#I)          := AFTER_IMAGE.RETIRED-PAY-AMT
END-IF
IF AFTER_IMAGE.MIL-SBP-AMT <> BEFORE_IMAGE.MIL-SBP-AMT
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #MIL-SBP-AMT
  #OLD-DATA(#I)          := BEFORE_IMAGE.MIL-SBP-AMT
  #NEW-DATA(#I)          := AFTER_IMAGE.MIL-SBP-AMT
END-IF
IF AFTER_IMAGE.MIL-SBP-OPT <> BEFORE_IMAGE.MIL-SBP-OPT
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #MIL-SBP-OPT
  #OLD-DATA(#I)          := BEFORE_IMAGE.MIL-SBP-OPT
  #NEW-DATA(#I)          := AFTER_IMAGE.MIL-SBP-OPT
END-IF
IF AFTER_IMAGE.RSV-NG-TYPE-ANNUITY <> BEFORE_IMAGE.RSV-NG-TYPE-ANNUITY
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #RSV-NG-TYPE-ANNUITY
  #OLD-DATA(#I)          := BEFORE_IMAGE.RSV-NG-TYPE-ANNUITY
  #NEW-DATA(#I)          := AFTER_IMAGE.RSV-NG-TYPE-ANNUITY
END-IF
END-SUBROUTINE
*
**************************************
DEFINE SUBROUTINE LOG-VA-BENEFITS-TRAN
**************************************
*
*    2 VA-DISABILITY-PCT (A) DYNAMIC
*    2 VA-DISABLE-DATE (A) DYNAMIC
*    2 VA-CLAIM-NUMBER (A) DYNAMIC
*    2 SMC-CODE (A) DYNAMIC
*
IF AFTER_IMAGE.VA-DISABLE-DATE <> BEFORE_IMAGE.VA-DISABLE-DATE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #VA-DISABLE-DATE
  #OLD-DATA(#I)          := BEFORE_IMAGE.VA-DISABLE-DATE
  #NEW-DATA(#I)          := AFTER_IMAGE.VA-DISABLE-DATE
END-IF
IF AFTER_IMAGE.VA-CLAIM-NUMBER <> BEFORE_IMAGE.VA-CLAIM-NUMBER
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #VA-CLAIM-NUMBER
  #OLD-DATA(#I)          := BEFORE_IMAGE.VA-CLAIM-NUMBER
  #NEW-DATA(#I)          := AFTER_IMAGE.VA-CLAIM-NUMBER
END-IF
IF AFTER_IMAGE.SMC-CODE <> BEFORE_IMAGE.SMC-CODE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #SMC-CODE
  #OLD-DATA(#I)          := BEFORE_IMAGE.SMC-CODE
  #NEW-DATA(#I)          := AFTER_IMAGE.SMC-CODE
END-IF
IF AFTER_IMAGE.VA-DISABILITY-PCT <> BEFORE_IMAGE.VA-DISABILITY-PCT
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #VA-DISABILITY-PCT
  #OLD-DATA(#I)          := BEFORE_IMAGE.VA-DISABILITY-PCT
  #NEW-DATA(#I)          := AFTER_IMAGE.VA-DISABILITY-PCT
END-IF
END-SUBROUTINE
*
**********************************
DEFINE SUBROUTINE LOG-EXT-POL-TRAN
**********************************
*
* POL-INS-CONTACT-ID (A) DYNAMIC
* POL-NAME (A) DYNAMIC
* POL-NUMBER (A) DYNAMIC
* POL-TYPE (A) DYNAMIC
* POL-AMOUNT (A) DYNAMIC
* POL-DATE (A) DYNAMIC
* POL-REMARKS (A) DYNAMIC
*
IF AFTER_IMAGE.POL-INS-CONTACT-ID <> BEFORE_IMAGE.POL-INS-CONTACT-ID OR
    AFTER_IMAGE.POL-NAME <> BEFORE_IMAGE.POL-NAME OR
    AFTER_IMAGE.POL-NUMBER <> BEFORE_IMAGE.POL-NUMBER OR
    AFTER_IMAGE.POL-AMOUNT <> BEFORE_IMAGE.POL-AMOUNT OR
    AFTER_IMAGE.POL-TYPE <> BEFORE_IMAGE.POL-TYPE OR
    AFTER_IMAGE.POL-DATE <> BEFORE_IMAGE.POL-DATE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #EXT-POLICY
  IF BEFORE_IMAGE.POL-NAME <> ' '
    COMPRESS 'Policy' BEFORE_IMAGE.POL-NAME INTO BEFORE_IMAGE.POL-NAME
  END-IF
  IF BEFORE_IMAGE.POL-TYPE <> ' '
    BEFORE_IMAGE.POL-TYPE := F-EXT-POL-TYPE(<BEFORE_IMAGE.POL-TYPE>)
    COMPRESS 'Type' BEFORE_IMAGE.POL-TYPE INTO BEFORE_IMAGE.POL-TYPE
  END-IF
  IF BEFORE_IMAGE.POL-DATE <> ' '
    #DATE := VAL(BEFORE_IMAGE.POL-DATE)
    BEFORE_IMAGE.POL-DATE := FUNCTION-CALENDAR(<#DATE,'D'>)
    COMPRESS 'as of' BEFORE_IMAGE.POL-DATE INTO BEFORE_IMAGE.POL-DATE
  END-IF
  IF BEFORE_IMAGE.POL-NUMBER <> ' '
    COMPRESS '#' BEFORE_IMAGE.POL-NUMBER INTO BEFORE_IMAGE.POL-NUMBER LEAVING NO
  END-IF
  IF BEFORE_IMAGE.POL-AMOUNT <> ' '
    COMPRESS '$' BEFORE_IMAGE.POL-AMOUNT INTO BEFORE_IMAGE.POL-AMOUNT LEAVING NO
    COMPRESS 'with amount' BEFORE_IMAGE.POL-AMOUNT INTO BEFORE_IMAGE.POL-AMOUNT
  END-IF
* IF BEFORE_IMAGE.POL-INS-CONTACT-ID <> ' '
*    COMPRESS 'for Contact-ID' BEFORE_IMAGE.POL-INS-CONTACT-ID INTO BEFORE_IMAGE.POL-INS-CONTACT-ID
* END-IF
  IF BEFORE_IMAGE.POL-REMARKS <> ' '
    COMPRESS 'Remarks: ' BEFORE_IMAGE.POL-REMARKS INTO BEFORE_IMAGE.POL-REMARKS
  END-IF
  COMPRESS BEFORE_IMAGE.POL-NAME BEFORE_IMAGE.POL-TYPE
    BEFORE_IMAGE.POL-NUMBER BEFORE_IMAGE.POL-DATE BEFORE_IMAGE.POL-AMOUNT
    BEFORE_IMAGE.POL-REMARKS INTO #OLD-DATA(#I)
*   BEFORE_IMAGE.POL-INS-CONTACT-ID INTO #OLD-DATA(#I)
  IF AFTER_IMAGE.POL-NAME <> ' '
    COMPRESS 'Policy' AFTER_IMAGE.POL-NAME INTO AFTER_IMAGE.POL-NAME
  END-IF
  IF AFTER_IMAGE.POL-TYPE <> ' '
    AFTER_IMAGE.POL-TYPE := F-EXT-POL-TYPE(<AFTER_IMAGE.POL-TYPE>)
    COMPRESS 'Type' AFTER_IMAGE.POL-TYPE INTO AFTER_IMAGE.POL-TYPE
  END-IF
  IF AFTER_IMAGE.POL-DATE <> ' '
    #DATE := VAL(AFTER_IMAGE.POL-DATE)
    AFTER_IMAGE.POL-DATE := FUNCTION-CALENDAR(<#DATE,'D'>)
    COMPRESS 'as of' AFTER_IMAGE.POL-DATE INTO AFTER_IMAGE.POL-DATE
  END-IF
  IF AFTER_IMAGE.POL-NUMBER <> ' '
    COMPRESS '#' AFTER_IMAGE.POL-NUMBER INTO AFTER_IMAGE.POL-NUMBER LEAVING NO
  END-IF
  IF AFTER_IMAGE.POL-AMOUNT <> ' '
    COMPRESS '$' AFTER_IMAGE.POL-AMOUNT INTO AFTER_IMAGE.POL-AMOUNT LEAVING NO
    COMPRESS 'with amount' AFTER_IMAGE.POL-AMOUNT INTO AFTER_IMAGE.POL-AMOUNT
  END-IF
*   IF AFTER_IMAGE.POL-INS-CONTACT-ID <> ' '
*      COMPRESS 'for Contact-ID' AFTER_IMAGE.POL-INS-CONTACT-ID INTO AFTER_IMAGE.POL-INS-CONTACT-ID
*   END-IF
  IF AFTER_IMAGE.POL-REMARKS <> ' '
    COMPRESS 'Remarks: ' AFTER_IMAGE.POL-REMARKS INTO AFTER_IMAGE.POL-REMARKS
  END-IF
  COMPRESS AFTER_IMAGE.POL-NAME AFTER_IMAGE.POL-TYPE
    AFTER_IMAGE.POL-NUMBER AFTER_IMAGE.POL-DATE AFTER_IMAGE.POL-AMOUNT
*   AFTER_IMAGE.POL-INS-CONTACT-ID INTO #NEW-DATA(#I)
    AFTER_IMAGE.POL-REMARKS INTO #NEW-DATA(#I)
END-IF
END-SUBROUTINE
*
**********************************
DEFINE SUBROUTINE LOG-SERVICE-TRAN
**********************************
*
IF AFTER_IMAGE.SVC-ISSUE-DATE <> BEFORE_IMAGE.SVC-ISSUE-DATE                 /* PM1
  #I := #I + 1                                                               /* PM1
  #FIELD-DESCRIPTION(#I)  := #SERVICE-INFO                                   /* PM1
  IF BEFORE_IMAGE.SVC-ISSUE-DATE = MASK (YYYYMMDD)                           /* PM1
    #DATE-A := BEFORE_IMAGE.SVC-ISSUE-DATE                                   /* PM1
    COMPRESS #DATE-MM #DATE-DD #DATE-YYYY INTO #OLD-DATA(#I) WITH '/'        /* PM1
  END-IF                                                                     /* PM1
  COMPRESS 'SVC-ISSUE-DATE:' #OLD-DATA(#I) INTO #OLD-DATA(#I)                /* PM1
  IF AFTER_IMAGE.SVC-ISSUE-DATE = MASK (YYYYMMDD)                            /* PM1
    #DATE-A := AFTER_IMAGE.SVC-ISSUE-DATE                                    /* PM1
    COMPRESS #DATE-MM #DATE-DD #DATE-YYYY INTO #NEW-DATA(#I) WITH '/'        /* PM1
  END-IF                                                                     /* PM1
  COMPRESS 'SVC-ISSUE-DATE:' #NEW-DATA(#I) INTO #NEW-DATA(#I)                /* PM1
END-IF                                                                       /* PM1
*
IF AFTER_IMAGE.SVC-SERVICE-TYPE <> BEFORE_IMAGE.SVC-SERVICE-TYPE             /* TT1 BEGIN
  #I := #I + 1
  #FIELD-DESCRIPTION(#I)  := #SERVICE-INFO
  IF *LENGTH(BEFORE_IMAGE.SVC-SERVICE-TYPE) >= 3
    #SERVICE-A3 := SUBSTR(BEFORE_IMAGE.SVC-SERVICE-TYPE,1,3)
    #SERVICE-NAME := GET-PLAN-INFO(<#SERVICE-A3>)(1)
  END-IF
  COMPRESS 'SVC-SERVICE-TYPE:' BEFORE_IMAGE.SVC-SERVICE-TYPE #SERVICE-NAME
    INTO #OLD-DATA(#I)
  RESET #SERVICE-A3 #SERVICE-NAME
  IF *LENGTH( AFTER_IMAGE.SVC-SERVICE-TYPE) >= 3
    #SERVICE-A3 := SUBSTR(AFTER_IMAGE.SVC-SERVICE-TYPE,1,3)
    #SERVICE-NAME := GET-PLAN-INFO(<#SERVICE-A3>)(1)
  END-IF
  COMPRESS 'SVC-SERVICE-TYPE:' AFTER_IMAGE.SVC-SERVICE-TYPE #SERVICE-NAME
    INTO #NEW-DATA(#I)
END-IF                                                                       /* TT1 END
*
IF AFTER_IMAGE.SVC-STATUS <> BEFORE_IMAGE.SVC-STATUS
  #I := #I + 1
  #FIELD-DESCRIPTION(#I)  := #SERVICE-INFO
  #LOOK-UP-KEY            := #LOOK-UP-STATUS
  #WORK                   := F-LOOK-UP-TABLE(<#LOOK-UP-KEY,BEFORE_IMAGE.SVC-STATUS>)    /* YK1
  COMPRESS 'SVC-STATUS:' BEFORE_IMAGE.SVC-STATUS #WORK INTO #OLD-DATA(#I)               /* YK1
  #WORK                   := F-LOOK-UP-TABLE(<#LOOK-UP-KEY,AFTER_IMAGE.SVC-STATUS>)     /* YK1
  COMPRESS 'SVC-STATUS:' AFTER_IMAGE.SVC-STATUS #WORK INTO #NEW-DATA(#I)                /* YK1
END-IF
IF AFTER_IMAGE.SVC-MODE <> BEFORE_IMAGE.SVC-MODE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #SERVICE-INFO
  #LOOK-UP-VALUE := BEFORE_IMAGE.SVC-MODE
  #WORK          := FUNCTION-PAYMENT-MODE(<#LOOK-UP-VALUE>)(1)                          /* YK1
  COMPRESS 'SVC-MODE:' BEFORE_IMAGE.SVC-MODE #WORK INTO #OLD-DATA(#I)                   /* YK1
  #LOOK-UP-VALUE := AFTER_IMAGE.SVC-MODE
  #WORK          := FUNCTION-PAYMENT-MODE(<#LOOK-UP-VALUE>)(1)                          /* YK1
  COMPRESS 'SVC-MODE:' AFTER_IMAGE.SVC-MODE #WORK INTO #NEW-DATA(#I)                    /* YK1
* YK1 End
END-IF
IF AFTER_IMAGE.SVC-TERMINATION-DATE <> BEFORE_IMAGE.SVC-TERMINATION-DATE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #SERVICE-INFO
  COMPRESS 'TERMINATION DATE:' BEFORE_IMAGE.SVC-TERMINATION-DATE
    INTO #OLD-DATA(#I)
  COMPRESS 'TERMINATION DATE:' AFTER_IMAGE.SVC-TERMINATION-DATE
    INTO #NEW-DATA(#I)
END-IF
IF AFTER_IMAGE.SVC-REACTIVATION-FEE <> BEFORE_IMAGE.SVC-REACTIVATION-FEE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #SERVICE-INFO
  COMPRESS 'REACTIVATION FEE:' BEFORE_IMAGE.SVC-REACTIVATION-FEE
    INTO #OLD-DATA(#I)
  COMPRESS 'REACTIVATION-FEE:' AFTER_IMAGE.SVC-REACTIVATION-FEE
    INTO #NEW-DATA(#I)
END-IF
IF AFTER_IMAGE.SVC-PAID-TO-DATE <> BEFORE_IMAGE.SVC-PAID-TO-DATE
  #I := #I + 1
  #FIELD-DESCRIPTION(#I) := #SERVICE-INFO
  COMPRESS 'PAID TO DATE    :' BEFORE_IMAGE.SVC-PAID-TO-DATE
    INTO #OLD-DATA(#I)
  COMPRESS 'PAID TO DATE    :' AFTER_IMAGE.SVC-PAID-TO-DATE
    INTO #NEW-DATA(#I)
END-IF
IF AFTER_IMAGE.SVC-ISSUED-BY <> BEFORE_IMAGE.SVC-ISSUED-BY                   /* PM1
  #I := #I + 1                                                               /* PM1
  #FIELD-DESCRIPTION(#I)  := #SERVICE-INFO                                   /* PM1
  COMPRESS 'SVC-CREATED-BY:' BEFORE_IMAGE.SVC-ISSUED-BY INTO #OLD-DATA(#I)   /* PM1
  COMPRESS 'SVC-CREATED-BY:' AFTER_IMAGE.SVC-ISSUED-BY INTO #NEW-DATA(#I)    /* PM1
END-IF                                                                       /* PM1
END-SUBROUTINE
*
******************************
DEFINE SUBROUTINE LOG-INV-TRAN
******************************
*
FOR #II = 1 TO *OCCURRENCE(AFTER_IMAGE.INV-LINE)
  IF AFTER_IMAGE.INV-LINE(#II) <> BEFORE_IMAGE.INV-LINE(#II)
    #I := #I + 1
    #FIELD-DESCRIPTION(#I) := #INV-INFO
    #OLD-DATA(#I)          := BEFORE_IMAGE.INV-LINE(#II)
    #NEW-DATA(#I)          := AFTER_IMAGE.INV-LINE(#II)
  END-IF
  IF #I = 32
    PERFORM WRITE-TRAN-LOG
    RESET #OLD-DATA(*) #NEW-DATA(*) #I
  END-IF
END-FOR
END-SUBROUTINE
*
END
