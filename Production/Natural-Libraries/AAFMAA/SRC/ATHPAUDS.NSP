* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* PROGRAM-ID: ATHPAUDS - THIS PROGRAM READS THE STATUS FILE IN ALPHA
*            ORDER AND SELECTS RECORDS
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* PAM  03292005 PM1  Allow pending CN's for DB/CR processing.          *
* SAG  12012005 RH1  SS - Replaced the HEC constant '05' (Tab position)*
*                    EBCDIC to HEX code '09' ASCII
* DRW  12302005 DW2  Chg Selection criteria Counts                     *
* DRW  12302005 DW3  select Trade-Ups                                  *
* DRW  01122006 DW4  Bypass mbrs less than 'J' in 2006 (Chg each year) *
* DRW  01252006 DW5  Add DOD in prior yr but settled in curr year list *
* PAM  02152006 PM6  Added Bankruptcy Report                           *
* DRW  12262006 DW7  Find 25 highest Whole-life pol & other changes    *
* DRW  12282006 DW8  Add Stuff for Maureen                             *
* DRW 12/21/2007 DW9  2007 Y/E changes                                 *
* DRW 02/08/2008 DW10 Chg #CURR-YYYY to 2008                           *
* DRW 11/24/2008 DW11 Chg Starting letter for Loan Confirmations in    *
*                     2008                                             *
* DRW 11/24/2008 DW12 Make Pd Up Pols This Year a File & add a         *
*                     contestable file                                 *
* DRW 12/26/2008 DW13 Add another file to Y/E Audit Processing/2008    *
*                     sel # chges Chg file 1 & 2 to 9 & 10 for G5000PTR*
*                     which uses 1 &                                   *
* DRW 02/05/2009 DW14 Fix DBNR report to only show dead members        *
* DRW 02/06/2009 DW15 Chg Date Year to 2009                            *
* DRW 03/09/2009 DW16 Increase Notes Occurs from 60 to 500             *
* RSE 09/21/2009 RE1  Change PROCESS-IND logic for Unification         *
* PAM 12/30/2009 PM17 2009 Audit changes                               *
* PAM 07/23/2010 PM18 Increased loan balance fields                    *
* PAM 12/28/2010 PM19 2010 Audit changes                               *
* PAM 02/08/2011 PM20 Add 1035 external exchange confirmation letters  *
* PAM 12/02/2011 PM21 2011 Audit changes                               *
* YAK 10/09/2012 YK1  Use function to identify Level Term II plans     *
* vxM 12/29/2012 vt1  2012 Audit changes                               *
* JNT 09/16/2013 JT1  Address normalization                            *
* vxR 12/05/2013 vt2  2013 Audit changes                               *
* TMT 06/16/2014 TT1  Contact Normalization - DOB and Sex              *
* vxt 11/20/2014 vt3  2014 Audit changes                               *
* vxt 11/27/2015 vt4  2015 Audit changes /Ticket 4043/                 *
* vxt 11/10/2016 vt5  2016 Audit changes /Ticket 1826/                 *
* vxt 10/19/2017 vt6  2017 Audit changes /Ticket 6084/                 *
************************************************************************
*
DEFINE DATA
LOCAL USING ADDA0001                                  /* JT1
LOCAL
*
* * * *   S T A T U S   F I L E   * * * * * * * * * * * * * * *
1 #CURR-YYYY         (N4) INIT <2017>  /* 2006 if 12/31/2006    DW10 DW15 PM19 PM21  /* vt1 was 2011 vt2 was 2012 /* vt3 was 2013 /* vt4 was 2014 /* vt5 was 2015 /* vt6 was 2016
1 REDEFINE #CURR-YYYY
  2 #CURR-YYYY-A     (A4)
1 #LAST-YYYY         (N4)       /* DW5
*                    Below chged yearly              2007 2006 2009
1 #START-LETTER      (A1)   INIT <'P'> /* DW11   WAS   H   E    R A PM21  /* vt2 was 'M' /* vt3 was 'R' /* vt5 was 'A' /* vt6 was 'H'
*
1 #SELECTED-CNS-BY-AUDITORS  /* Also used in G5000PTR   DW13
  2 #CN1   (N6) INIT <105949>  /* Entered in 12/2008
  2 #CN2   (N6) INIT <107281>
  2 #CN3   (N6) INIT <093879>
  2 #CN4   (N6) INIT <154637>
  2 #CN5   (N6) INIT <177587>
  2 #CN6   (N6) INIT <070650>
  2 #CN7   (N6) INIT <177750>
  2 #CN8   (N6) INIT <044017>
  2 #CN9   (N6) INIT <183606>
  2 #CN10  (N6) INIT <059981>
  2 #CN11  (N6) INIT <081855>
  2 #CN12  (N6) INIT <070895>
  2 #CN13  (N6) INIT <047512>
  2 #CN14  (N6) INIT <179281>
  2 #CN15  (N6) INIT <071587>
  2 #CN16  (N6) INIT <179506>
  2 #CN17  (N6) INIT <045333>
  2 #CN18  (N6) INIT <100753>
  2 #CN19  (N6) INIT <183410>
  2 #CN20  (N6) INIT <168075>
  2 #CN21  (N6) INIT <180273>
  2 #CN22  (N6) INIT <089812>
  2 #CN23  (N6) INIT <063572>
  2 #CN24  (N6) INIT <160805>
  2 #CN25  (N6) INIT <033603>
  2 #CN26  (N6) INIT <107441>
  2 #CN27  (N6) INIT <046717>
  2 #CN28  (N6) INIT <178355>
  2 #CN29  (N6) INIT <022055>
  2 #CN30  (N6) INIT <054399>
  2 #CN31  (N6) INIT <159748>
  2 #CN32  (N6) INIT <173738>
  2 #CN33  (N6) INIT <183157>
  2 #CN34  (N6) INIT <072085>
  2 #CN35  (N6) INIT <167296>
  2 #CN36  (N6) INIT <090187>
  2 #CN37  (N6) INIT <049157>
  2 #CN38  (N6) INIT <159700>
  2 #CN39  (N6) INIT <042923>
  2 #CN40  (N6) INIT <183547>
  2 #CN41  (N6) INIT <062492>
  2 #CN42  (N6) INIT <178011>
1 REDEFINE #SELECTED-CNS-BY-AUDITORS
  2 #AUD-CNS           (N6/42)             /* PM17 PM19 PM22
1 #NUM-AUD-CNS (N3) INIT <42>             /* PM17 PM19 PM22
1 #MODAL-PREM      (N7.2)
1 #POL-NUM         (A16)
1 #COST-BASIS      (N7.2)
1 #COST-BASIS-DISP (A12)
1 #CSV-DISP        (A12)
1 #ACV-DISP        (A12)
1 #FACE-DISP       (A12)
1 #DB-DISP         (A12)
1 #MODAL-PREM-DISP (A12)
1 #FIX-LOAN-DISP   (A12)
1 #VAR-LOAN-DISP   (A12)
1 #AS-OF-DT         (N8)
1 #SUFFIX         (A3)
*
1 #LOAN-BAL   (N7.2/9)
1 #LOAN-BAL-2 (N7.2/9)
1 #ACC-INT    (N7.2/9)
1 #ACC-INT-2  (N7.2/9)
1 #CSV        (N7.2/9)
1 #CVALUE     (N7.2/9)
1 #LVALUE     (N7.2/9)
1 #MCSV       (N7.2/9)
1 #DB         (N7.2/9)
1 #ANN-PREMIUM (N7.2/9)
1 #FACE-AMT    (N7.2/9)  /* DW6
1 #TPP         (N7.2/9)  /* DW6
1 #CSV-P      (P7.2/9)
*
1 #NUM-CN-SEL      (N5)
1 #SCR-SUFFIX         (A3)
1 #SCR-ID             (N9)
1 #TRLOG-START-DT     (N8)
1 #TRLOG-END-DT       (N8)
1 #FOUND-AUD-CN      (L)                   /* END DW13
*
1 #HAS-CONTESTABILITY    (L)         /* DW12
1 #NO-LONGER-CONTESTABLE (L)
1 #CONTESTABLE-BUT-NOW-PAID (L)      /* DW12
*
1 #NUM-TERM-NO-LOANS           (N3)   INIT <8>  /* Highest face /* DW9/DW13  /* vt2 was 50 /* vt3 was 20  /* vt4 was /* vt5 was 16
1 #HIGHEST-TERM-NO-LOANS-CN    (N6/8)           /* Must match above DW7      /* vt3 was 50  /* vt4 was 8 /* vt5 was 16
1 #HIGHEST-TERM-NO-LOANS-AMT   (N7.2/8)                                      /* vt2 was n6.2/50 /* vt3 was 20 was n6.2/50 /* vt4 was 8  /* vt5 was 16
1 #FOUND-HIGHEST-TERM-NO-LOANS (L)
*
1 #NUM-WL-NO-LOANS             (N3)   INIT <8>  /* Highest Face      DW13/PM17       /* vt2 was 40 /* vt3 was 20 /* vt4 was 8  /* vt5 was 16
1 #HIGHEST-WL-NO-LOANS-CN      (N6/8)           /* Must match above                  /* vt4 was 8  /* vt5 was 16
1 #HIGHEST-WL-NO-LOANS-AMT     (N7.2/8)                                              /* vt2 was n6.2/40 /* vt3 was 20 was n6.2/20 /* vt4 was 8  /* vt5 was 16
1 #FOUND-HIGHEST-WL-NO-LOANS   (L)
*
1 #NUM-WL-W-LOANS              (N3)   INIT <40>  /* Highest Face  DW7/DW9/DW13/PM17/PM19  /* vt2 was 30 /* vt3 was 10 /* vt4 was 5 /* vt6 was 20
1 #HIGHEST-WL-W-LOANS-CN       (N6/40)           /* Must match above                      /* vt4 was 5  /* vt6 was 20
1 #HIGHEST-WL-W-LOANS-AMT      (N7.2/40)                                                  /* vt2 was n6.2/30 /* vt3 was n6.2/10  /* vt4 was 5 /* vt6 was 20
1 #FOUND-HIGHEST-WL-W-LOANS    (L)

1 #NUM-CAP-LOANS               (N3)   INIT <40>  /* Any Face/loan   DW13/PM17/PM19        /* vt2 was 30 /* vt was 10 /* vt6 was 20
1 #NUM-CAPS                    (N3)
1 #FOUND-ALL-CAPS              (L)
*
1 #NUM-NON-CAP-LOANS           (N3)   INIT <40>  /* Highest Loan  DW7/DW9/DW13/PM17/PM19  /* vt2 was 30 /* vt6 was 20
1 #HIGHEST-NON-CAP-LOANS-CN    (N6/40)           /* Must match above                      /* vt6 was 20    
1 #HIGHEST-NON-CAP-LOANS-AMT   (N7.2/40)                                                  /* vt2 vt3 was n6.2/30  /* vt6 was 20
1 #FOUND-HIGHEST-NON-CAP-LOANS (L)
1 #TOT-LOANS                   (N9.2)                        /* vt3 was n7.2
1 #GOT-A-HIT                   (L)
*
1 #NUM-TRADE-UPS     (N3)   INIT <4>     /* DW9/DW13/PM17                           /* vt2 was 10 /* vt3 was 5
1 #NUM-EXT-1035      (N3)   INIT <4>     /* PM20                                    /* vt2 was 10 /* vt3 was 5
1 #NUM-1035          (P7)                 /* PM20
*
1 #NUM-1        (N5)
1 #NUM-2        (N5)
1 #NUM-3        (N5)
1 #NUM-4        (N5)
1 #NUM-5        (N5)
*
1 #CAP-IND      (A3)
1 #FIX-VAR      (A5)
1 #LOAN-BALANCE (A12)       /* PM18
*
1 #TOT-FACE-2   (N11.2)     /* DW8
1 #TOT-FACE-3   (N11.2)
1 #TOT-FACE-4   (N11.2)
*
1 #CAP               (A3)  /* DW8
1 #TOT-AMT-PAID      (N11.2)
1 #CSVALUE           (N7.2)
1 #TOT-CSV           (N9.2)
1 #POL-USED          (L/9)
1 #TOT-AMT-PAID-X    (N11.2)
1 #CSV-X             (N7.2)
1 #TOT-CSV-X         (N9.2)
1 #POL-USED-X        (L/9)      /* DW5
1 #CURR-END-YEAR    (A8)        /* DW9
1 #BEG-LAST-YEAR     (N8)                                         /* PM6
1 REDEFINE #BEG-LAST-YEAR                                         /* PM6
  2 #BEG-YYYY         (N4)                                         /* PM6
  2 #BEG-MMDD         (N4)                                         /* PM6
1 #END-LAST-YEAR     (N8)                                         /* PM6
1 REDEFINE #END-LAST-YEAR                                         /* PM6
  2 #END-YYYY         (N4)                                         /* PM6
  2 #END-MMDD         (N4)                                         /* PM6
1 #DATE              (A10)                                        /* PM6
*
1 #END-CURR-YEAR     (N8)                                         /* DW9
1 REDEFINE #END-CURR-YEAR
  2 #END-CURR-YYYY     (N4)
  2 #END-CURR-MMDD     (N4)
*
1 NT-V VIEW OF A-NOTES
  2 C*NOTE-TABLE             /* DW16
  2 NOTE-TEXT   (A60/500)    /* DW16
  2 NOTE-DATE   (N8/500)     /* DW16                               /* PM6
  2 REDEFINE NOTE-DATE                                             /* PM6
    3 NOTE-DATE-OCC (500)     /* DW16                               /* PM6
      4 NOTE-DATE-YYYY (A4)                                          /* PM6
      4 NOTE-DATE-MM   (A2)                                          /* PM6
      4 NOTE-DATE-DD   (A2)                                          /* PM6
*
1 FR-V VIEW OF A-FIRS
  2 POL-NAME             (45)
  2 POL-DATE             (45)
  2 POL-TYPE             (45)     /* DW12
  2 POL-AMT-PAID         (45)
  2 POL-DATE-CLM-FILED   (45)
  2 REDEFINE POL-DATE-CLM-FILED
    3 POL-DATE-CLM-FILED-OCC   (45)
      4 POL-DATE-CLM-FILED-YYYY   (N4)
      4 POL-DATE-CLM-FILED-MMDD   (N4)
  2 POL-DATE-CLM-SETTLED (45)
  2 REDEFINE POL-DATE-CLM-SETTLED
    3 POL-DATE-CLM-SETTLED-OCC   (45)
      4 POL-DATE-CLM-SETTLED-YYYY   (N4)
      4 POL-DATE-CLM-SETTLED-MMDD   (N4)
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER             (N6)
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A         (A6)
*   2 DATE-OF-BIRTH                /* TT1
  2 DATE-ACCT-UPDATE
  2 INTRO-FLAG
  2 NAME
  2 redefine name                                 /* vt5  \/
    3 #name-1     (a1)
    3 #fill       (a24)                           /* vt5  /\
  2 DATE-OF-DEATH
  2 REDEFINE DATE-OF-DEATH
    3 DOD-YYYY    (N4)
    3 DOD-MMDD    (N4)
  2 PROCESS-IND
  2 NUMBER-MEMBERSHIPS
  2 DEBIT-CREDIT-AMT
  2 X-LOAN-DATE       (9)
  2 X-LOAN-DATE-2     (9)
  2 X-LOAN-AMOUNT         (9)
  2 X-LOAN-AMOUNT-2       (9)
  2 X-BILL-ADJUST         (9)
  2 X-FIRST-PLACE-FEE     (9)
  2 MEMBER-CONTACT-ID                                         /* JT1
*   2 ADDRESS-CHG-CODE                                        /* JT1
*   2 ADDRESS-1                                               /* JT1
*   2 ZIP-CODE                                                /* JT1
  2 FACE-AMOUNT           (9)
  2 CASH-VALUE            (9)
  2 DEATH-BENEFIT         (9)
  2 CONV-DURATION         (9)
  2 PAID-TO-DATE          (9)
  2 MODE                  (9)
  2 COST-BASIS            (9)
  2 STATUS                (9)
  2 PAY-STATUS            (9)
  2 ANNUAL-PREM           (9)
  2 MONTH-ALLOC-AMT       (9)
  2 TOT-PREMIUMS-PAID     (9)
  2 ACC-CASH-VALUE        (9)
  2 ISSUE-DATE            (9)
  2 PLAN                  (9)
  2 REDEFINE PLAN
    3 PLAN-OCC             (9)
      4 PLAN-A1             (A1)
      4 PLAN-A2             (A2)
* * * *   CN                  F I L E * * * * * * * * * * * * *
1 #OUT-RECD
  2 #OUT-KEY              (A1)    /* DW7
  2 #OUT-ID               (A6)
1 #EXTRACT-RECORD         (A150)
* 1 #TAB     (A1) INIT <H'05'>     /* SAG RH1 12012005 SS
1 #TAB       (A1) INIT <H'09'>     /* SAG RH1 12012005 SS
*
1 #TOT-LOAN               (N7.2)
1 #NUMBER-PICKED          (N3)
1 #NUM-GEN                (N3)
1 #NUM-OVER-400K          (N3)
1 #NUMBER-PICKED-CAP      (N3)
1 #NUM-NON-LOAN-TERM      (N7)
1 #NUM-NON-LOAN-WL        (N7)
1 #NUM-HIGHEST-WL         (N7)
1 #NUM-TU                 (N7)
1 #TU                     (L)
1 #1035                   (L)       /* PM20
1 #I1                     (I2)
1 #I2                     (I2)
1 #I3                     (I2)
1 #I4                     (I2)
1 #CNT-2                  (N5)
1 #CNT-3                  (N5)
1 #CNT-4                  (N5)
1 #CNT-5                  (N5)
1 #CNT-6                  (N5)
1 #CNT-7                  (N5)
1 #CNT-8                  (N5)
1 #POLS                   (P3)
1 #DB-CR-NEG              (A10)
1 #DB-CR-POS              (A10)
1 #DB-CR-POS-TOT          (N9.2)
1 #DB-CR-NEG-TOT          (N9.2)
1 #DISP-TOT-DB-CR-POS     (A15)
1 #DISP-TOT-DB-CR-NEG     (A15)
1 #BADJ-NEG               (A10)
1 #BADJ-POS               (A10)
1 #BADJ-POS-TOT           (N9.2)
1 #BADJ-NEG-TOT           (N9.2)
1 #DISP-TOT-BADJ-POS      (A15)
1 #DISP-TOT-BADJ-NEG      (A15)
*
1 #YYYYMMDD               (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY                  (N4)
  2 #MM                    (N2)
  2 #DD                    (N2)
*
* BELOW for CALC-PREMS-PAID
1 #PP-DATE-OF-BIRTH       (N8)
1 #PP-ANNUAL-PREM         (N5.2)
1 #PP-PAY-STATUS          (A2)
1 #PP-TOT-PREMIUMS-PAID   (N7.2)
1 #PP-PAID-TO-DATE        (N8)
1 #PP-ISSUE-DATE          (N8)
1 #PP-MODE                (A1)
1 #PP-PLAN                (A3)
1 #PP-COST-BASIS          (N7.2)
1 #PP-MONTH-ALLOC-AMT     (N7.2)                   /* vt 02/01/2014
1 #PP-INTRO-FLAG          (A1)
1 #PP-FIRST-PLACE-FEE     (N7.2)
1 #PREMS-PAID             (P7.2)
1 #SUB-PREMS-PAID         (P7.2)
1 #PP-BADJ                (P5.2)
* ABOVE for CALC-PREMS-PAID
*
1 DATE-OF-BIRTH           (N8.0)               /* TT1
END-DEFINE
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
FORMAT   LS=133 PS=66
WRITE    TITLE LEFT 'PROGRAM:' *PROGRAM
  8X 'Loan Audit at year-end'
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
FORMAT (2)   LS=133 PS=66
WRITE  (2)  TITLE LEFT 'PROGRAM:' *PROGRAM
  8X 'New Term Policies this year'
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
FORMAT (3)   LS=133 PS=66
WRITE  (3)  TITLE LEFT 'PROGRAM:' *PROGRAM
  8X 'New Whole-life Policies this year'
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
FORMAT (4)   LS=133 PS=66
WRITE  (4)  TITLE LEFT 'PROGRAM:' *PROGRAM
  8X 'New Paid-up Policies this year'
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
FORMAT (5)   LS=133 PS=66
WRITE  (5)  TITLE LEFT 'PROGRAM:' *PROGRAM
  8X 'Policies with DB/CR'
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
FORMAT (6)   LS=133 PS=66
WRITE  (6)  TITLE LEFT 'PROGRAM:' *PROGRAM
  8X 'Policies with Bill-Adjust'
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
FORMAT (7)   LS=133 PS=66
WRITE  (7)  TITLE LEFT 'PROGRAM:' *PROGRAM
  3X 'Incurred but not reported (IBNR) Deaths in prior years'
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
FORMAT (8)   LS=133 PS=66
WRITE  (8)  TITLE LEFT 'PROGRAM:' *PROGRAM
  3X 'Incurred but not reported (IBNR) Deaths in pr yrs and paid'
  5X 'DATE:' *DAT4U 5X 'TIME:' *TIMX
*
ON ERROR
  write "CN:" ST-V.ID-NUMBER  "Err-ln:" *ERROR-LINE "Err:" *ERROR-NR /
END-ERROR
*
READ ST-V BY NAME-KEY FROM #START-LETTER       /* DW7/DW9
*                Do Find Highest POLICY Logic
  if st-v.id-number = 195765 or = 44017                   /* vt2 \/   vt3 added 44017
    escape top
  end-if                                        /* vt2 /\
*
if st-v.id-number = 42972 or = 34208 or = 42903 or = 44967 or = 56712 or = 73792   /* vt5 \/exclude those CNs as they were reporeted in 2014 and 2015 years
or = 78403 or = 168484 or = 139890 or = 203653
escape top
end-if                                                                             /* vt5 /\
*  
  RESET #POLS
  FOR #I1 1 TO 9
    IF STATUS (#I1) NE 'D'
      ESCAPE TOP
    END-IF
*
    ADD 1 TO #POLS
  END-FOR
*
  RESET #PDA-ADDRESS                                                        /* JT1
  MOVE 'P' TO #ADD-TYPE                                                     /* JT1
  #ADD-CONTACT-ID := ST-V.MEMBER-CONTACT-ID                                 /* JT1
  CALLNAT 'ADDN0001' #PDA-ADDRESS
*  IF  (PROCESS-IND = 'C' OR = 'S')   /* Must be same as below    ******    /* RE1
  IF  (PROCESS-IND = 'C')   /* Must be same as below    ******              /* RE1
      OR AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)                                    /* RE1
      OR (NUMBER-MEMBERSHIPS = 0)
      OR F-UNDEL-ADDRESS (< ST-V.MEMBER-CONTACT-ID >)                          /* JT1
      OR (#ADD-LINE-1 = ' ')                                                   /* JT1
      OR (#ADD-ZIP-CODE = 0)                                                   /* JT1
      OR (INTRO-FLAG = 'S' OR = 'K' OR = 'G')
      OR (#POLS GT 3)
    ESCAPE TOP
  END-IF
*
  RESET #GOT-A-HIT
  FOR #I1 1 TO 9
    IF STATUS (#I1) NE 'D'
      ESCAPE TOP
    END-IF
*
*   IF  ((PLAN (#I1) = 'LT' OR = 'RT')   /* Term Policies no loan   #1      /* YK1
*    OR  ((PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z')))               /* YK1
    IF FUNCTION-TERM-POLICY(<PLAN(#I1)>)                                    /* YK1
        AND (X-LOAN-AMOUNT   (#I1) = 0)
        AND (X-LOAN-AMOUNT-2 (#I1) = 0)
      FOR #I2 1 TO #NUM-TERM-NO-LOANS /* TERM NO LOANS              /* DW9
        IF #HIGHEST-TERM-NO-LOANS-AMT (#I2) = 0
          MOVE ST-V.ID-NUMBER         TO #HIGHEST-TERM-NO-LOANS-CN  (#I2)
          MOVE ST-V.FACE-AMOUNT (#I1) TO #HIGHEST-TERM-NO-LOANS-AMT (#I2)
          MOVE TRUE TO #GOT-A-HIT
          ESCAPE BOTTOM
        END-IF
*
        IF FACE-AMOUNT (#I1) GT #HIGHEST-TERM-NO-LOANS-AMT (#I2)
          COMPUTE #I4 = #I2 +1
          FOR #I3 #NUM-TERM-NO-LOANS TO #I4 STEP -1                  /* DW9
            MOVE #HIGHEST-TERM-NO-LOANS-CN  (#I3 - 1) TO #HIGHEST-TERM-NO-LOANS-CN  (#I3)
            MOVE #HIGHEST-TERM-NO-LOANS-AMT (#I3 - 1) TO #HIGHEST-TERM-NO-LOANS-AMT (#I3)
          END-FOR
*
          MOVE ST-V.ID-NUMBER         TO #HIGHEST-TERM-NO-LOANS-CN  (#I2)
          MOVE ST-V.FACE-AMOUNT (#I1) TO #HIGHEST-TERM-NO-LOANS-AMT (#I2)
          MOVE TRUE TO #GOT-A-HIT
          ESCAPE BOTTOM
        END-IF
      END-FOR
    END-IF
*
    IF #GOT-A-HIT    /* Only 1 confirmation per member
      ESCAPE BOTTOM
    END-IF
*
*   IF  ((PLAN (#I1) = 'LT' OR = 'RT')   /* W/L Policies no loan   #2   /* YK1
*    OR  ((PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z')))           /* YK1
    IF FUNCTION-TERM-POLICY(<PLAN(#I1)>)                                /* YK1
      IGNORE
    ELSE
      IF  (X-LOAN-AMOUNT   (#I1) = 0)
          AND (X-LOAN-AMOUNT-2 (#I1) = 0)
        FOR #I2 1 TO #NUM-WL-NO-LOANS               /* W/L  No LOANS        /* DW9
          IF #HIGHEST-WL-NO-LOANS-AMT (#I2) = 0
            MOVE ST-V.ID-NUMBER         TO #HIGHEST-WL-NO-LOANS-CN  (#I2)
            MOVE ST-V.FACE-AMOUNT (#I1) TO #HIGHEST-WL-NO-LOANS-AMT (#I2)
            MOVE TRUE TO #GOT-A-HIT
            ESCAPE BOTTOM
          END-IF
*
          IF FACE-AMOUNT (#I1) GT #HIGHEST-WL-NO-LOANS-AMT (#I2)
            COMPUTE #I4 = #I2 +1
            FOR #I3 #NUM-WL-NO-LOANS TO #I4 STEP -1                  /* DW9
              MOVE #HIGHEST-WL-NO-LOANS-CN  (#I3 - 1) TO #HIGHEST-WL-NO-LOANS-CN  (#I3)
              MOVE #HIGHEST-WL-NO-LOANS-AMT (#I3 - 1) TO #HIGHEST-WL-NO-LOANS-AMT (#I3)
            END-FOR
*
            MOVE ST-V.ID-NUMBER         TO #HIGHEST-WL-NO-LOANS-CN  (#I2)
            MOVE ST-V.FACE-AMOUNT (#I1) TO #HIGHEST-WL-NO-LOANS-AMT (#I2)
            MOVE TRUE TO #GOT-A-HIT
            ESCAPE BOTTOM
          END-IF
        END-FOR
      END-IF
    END-IF
*
    IF #GOT-A-HIT    /* Only 1 confirmation per member
      ESCAPE BOTTOM
    END-IF
*
*   IF  ((PLAN (#I1) = 'LT' OR = 'RT')   /* W/L Policies with loan   #3   /* YK1
*    OR  ((PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z')))             /* YK1
    IF FUNCTION-TERM-POLICY(<PLAN(#I1)>)                                  /* YK1
      IGNORE
    ELSE                                                                              /* vt2 \/ last request from Merilynn
      IF  (X-LOAN-AMOUNT   (#I1) NE 0)
          OR (X-LOAN-AMOUNT-2 (#I1) NE 0)
        FOR #I2 1 TO #NUM-WL-W-LOANS               /* W/L  No LOANS        /* DW9
          IF #HIGHEST-WL-W-LOANS-AMT (#I2) = 0
            MOVE ST-V.ID-NUMBER         TO #HIGHEST-WL-W-LOANS-CN  (#I2)
            MOVE ST-V.FACE-AMOUNT (#I1) TO #HIGHEST-WL-W-LOANS-AMT (#I2)
            MOVE TRUE TO #GOT-A-HIT
            ESCAPE BOTTOM
          END-IF
*
          IF ST-V.FACE-AMOUNT (#I1) GT #HIGHEST-WL-W-LOANS-AMT (#I2)
            COMPUTE #I4 = #I2 +1
            FOR #I3 #NUM-WL-W-LOANS TO #I4 STEP -1                  /* DW9
              MOVE #HIGHEST-WL-W-LOANS-CN  (#I3 - 1) TO #HIGHEST-WL-W-LOANS-CN  (#I3)
              MOVE #HIGHEST-WL-W-LOANS-AMT (#I3 - 1) TO #HIGHEST-WL-W-LOANS-AMT (#I3)
            END-FOR
*
            MOVE ST-V.ID-NUMBER  TO #HIGHEST-WL-W-LOANS-CN  (#I2)
            MOVE ST-V.FACE-AMOUNT (#I1) TO #HIGHEST-WL-W-LOANS-AMT (#I2)
            MOVE TRUE TO #GOT-A-HIT
            ESCAPE BOTTOM
          END-IF
        END-FOR
      END-IF                                                                           /* vt2 /\
    END-IF
*
    IF #GOT-A-HIT    /* Only 1 confirmation per member
      ESCAPE BOTTOM
    END-IF
*
    IF  (X-LOAN-AMOUNT   (#I1) NE 0)  /* Non-CAP Highest tot loans      #5
        OR (X-LOAN-AMOUNT-2 (#I1) NE 0)
      COMPUTE #TOT-LOANS = X-LOAN-AMOUNT (#I1) = X-LOAN-AMOUNT-2 (#I1)

      FOR #I2 1 TO #NUM-NON-CAP-LOANS               /* Has Variable Loans    /* DW9
        IF #HIGHEST-NON-CAP-LOANS-AMT (#I2) = 0
          MOVE ST-V.ID-NUMBER TO #HIGHEST-NON-CAP-LOANS-CN  (#I2)
          MOVE #TOT-LOANS     TO #HIGHEST-NON-CAP-LOANS-AMT (#I2)
          MOVE TRUE TO #GOT-A-HIT
          ESCAPE BOTTOM
        END-IF
*
        IF #TOT-LOANS GT #HIGHEST-NON-CAP-LOANS-AMT (#I2)
          COMPUTE #I4 = #I2 +1
          FOR #I3 #NUM-NON-CAP-LOANS TO #I4 STEP -1                  /* DW9
            MOVE #HIGHEST-NON-CAP-LOANS-CN  (#I3 - 1) TO #HIGHEST-NON-CAP-LOANS-CN  (#I3)
            MOVE #HIGHEST-NON-CAP-LOANS-AMT (#I3 - 1) TO #HIGHEST-NON-CAP-LOANS-AMT (#I3)
          END-FOR
*
          MOVE ST-V.ID-NUMBER TO #HIGHEST-NON-CAP-LOANS-CN  (#I2)
          MOVE #TOT-LOANS     TO #HIGHEST-NON-CAP-LOANS-AMT (#I2)
          MOVE TRUE TO #GOT-A-HIT
          ESCAPE BOTTOM
        END-IF
      END-FOR
    END-IF
*
    IF #GOT-A-HIT    /* Only 1 confirmation per member
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-READ
*
WRITE 'Term No LOANS Below'
FOR #I1 1 TO #NUM-TERM-NO-LOANS                  /* DW9
  DISPLAY #I1 #HIGHEST-TERM-NO-LOANS-CN (#I1) #HIGHEST-TERM-NO-LOANS-AMT (#I1)
END-FOR
*
WRITE 'W/L No LOANS Below'
FOR #I1 1 TO #NUM-WL-NO-LOANS                  /* DW9
  DISPLAY #I1 #HIGHEST-WL-NO-LOANS-CN  (#I1) #HIGHEST-WL-NO-LOANS-AMT (#I1)
END-FOR
*
WRITE 'W/L With LOANS Below'
FOR #I1 1 TO #NUM-WL-W-LOANS                  /* DW9                            /* vt2 \/ last Merilynn request
  DISPLAY #I1 #HIGHEST-WL-W-LOANS-CN  (#I1) #HIGHEST-WL-W-LOANS-AMT (#I1)
END-FOR                                                                         /* vt2 /\
*
WRITE 'Non Cap LOANS Below'
FOR #I1 1 TO #NUM-NON-CAP-LOANS                  /* DW9
  DISPLAY #I1 #HIGHEST-NON-CAP-LOANS-CN  (#I1) #HIGHEST-NON-CAP-LOANS-AMT (#I1)
END-FOR
*
COMPUTE #LAST-YYYY = #CURR-YYYY - 1                               /* DW5
MOVE #LAST-YYYY TO #BEG-YYYY #END-YYYY                            /* PM6
MOVE 0101       TO #BEG-MMDD                                      /* PM6
MOVE 1231       TO #END-MMDD
*
MOVE #CURR-YYYY TO #END-CURR-YYYY                                 /* DW9
MOVE 1231       TO #END-CURR-MMDD
*
COMPRESS 'Members with Debit-Credit AS OF' #END-CURR-YEAR
  INTO #EXTRACT-RECORD
WRITE WORK 10 #EXTRACT-RECORD  /* was 2           /* DW13
*
COMPRESS 'CN' #TAB
  'Neg DB/CR' #TAB
  'Pos DB/CR' INTO #EXTRACT-RECORD LEAVING NO
WRITE WORK 10 #EXTRACT-RECORD  /* Was 2               /* DW13
*
COMPRESS 'Members with Billing Adjustments As OF' #END-CURR-YEAR
  INTO #EXTRACT-RECORD
WRITE WORK 3 #EXTRACT-RECORD
*
COMPRESS 'CN' #TAB
  'Issue Date' #TAB
  'Neg BADJ' #TAB
  'Pos BADJ' INTO #EXTRACT-RECORD LEAVING NO
WRITE WORK 3 #EXTRACT-RECORD
*
COMPRESS 'BANKRUPTCY REPORT FOR Year' #CURR-YYYY   /* PM6
  INTO #EXTRACT-RECORD
WRITE WORK 4 #EXTRACT-RECORD
*
COMPRESS 'MEMBER NUMBER'   #TAB                                   /* PM6
  'NAME'            #TAB
  'BANKRUPTCY DATE' INTO #EXTRACT-RECORD LEAVING NO
WRITE WORK 4 #EXTRACT-RECORD
*
COMPRESS 'Members with Loans AS OF'  #END-CURR-YEAR                /* DW9
  INTO #EXTRACT-RECORD
WRITE WORK 5 #EXTRACT-RECORD
*
COMPRESS 'CN'
  #TAB 'Name'
  #TAB 'CAP-Indicator'
  #TAB 'Fixed/Variable'
  #TAB 'PRIN BAL'
  INTO #EXTRACT-RECORD LEAVING NO
WRITE WORK 5 #EXTRACT-RECORD
*
COMPRESS 'CN'                       /* DW12
  #TAB 'Iss-Date'
  #TAB 'Plan'
  #TAB 'CAP-Indicator'
  #TAB 'Face Amount'
  #TAB 'Pay-Status'
  INTO #EXTRACT-RECORD LEAVING NO
WRITE WORK 6 #EXTRACT-RECORD
*
COMPRESS 'CN'
  #TAB 'Name'
  #TAB 'Plan'
  #TAB 'Iss Date'
  #TAB 'DOD'
  #TAB 'Settled Date'
  INTO #EXTRACT-RECORD LEAVING NO
WRITE WORK 7 #EXTRACT-RECORD
*
COMPRESS 'CN'                          /* DW13
  #TAB 'Pol-Num'
  #TAB 'Iss-Date'
  #TAB 'Name'
  #TAB 'Plan'
  #TAB 'Face-Amt'
  #TAB 'Cost-Basis'
  #TAB 'ACV'
  #TAB 'CSV'
  #TAB 'DB'
  #TAB 'Modal-Prem'
  #TAB 'Fixed-Loan Date'
  #TAB 'Fixed-Loan Amt'
  #TAB 'Var-Loan Date'
  #TAB 'Var-Loan Amt'
  INTO #EXTRACT-RECORD LEAVING NO
WRITE WORK 8 #EXTRACT-RECORD
*
R1.
READ ST-V LOGICAL WITH NAME-KEY FROM 'P' /* 2002 B 2001 M 2000 H 1999 C     /* vt5 in 2015 was 'A' /* vt6 was 'H'
  if st-v.id-number = 195765               /* vt2 \/
    escape top
  end-if                                  /* vt2
  /* 2003 F 2004 A 2005
* starting 1/2006 we should always start @ "A" to read entire file
* and later bypass all members with names prior to the letter for the yr
* at about line 4490
*
*  IF PROCESS-IND = 'S'    /* OR = 'C'                             /* PM1   RE1
  IF AFFL-ONLY-CLIENT(<ST-V.ID-NUMBER>)        /* RE1
      OR ID-NUMBER LT 001900
*   OR ID-NUMBER GE 600000                      /* RE1
    ESCAPE TOP
  END-IF
*
  PERFORM SELECTED-CNS-BY-AUDITORS-EXTRACT                     /* DW13
*
  IF DATE-OF-DEATH NE 0                           /* DW12
    FIND FR-V WITH WIDOW-KEY = ST-V.ID-NUMBER-A
      FOR #I1 1 TO 9   /* 1st 9 entries of FIRS
        IF  POL-NAME (#I1) = 'AMAA' OR = 'AAFMAA'
          FOR #I2 1 TO 9
            IF   (ST-V.ISSUE-DATE (#I2) = POL-DATE (#I1))
                AND (ST-V.PLAN       (#I2) = POL-TYPE (#I1))
              CALLNAT 'GCONTSXX' ST-V.ID-NUMBER #I1 #HAS-CONTESTABILITY
                #NO-LONGER-CONTESTABLE #CONTESTABLE-BUT-NOW-PAID   /* DW12
*
              IF #NO-LONGER-CONTESTABLE
                WRITE ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I2) 'No longer Contestable'
              END-IF
*
              IF #HAS-CONTESTABILITY OR #CONTESTABLE-BUT-NOW-PAID
                  OR #NO-LONGER-CONTESTABLE
                IF #CONTESTABLE-BUT-NOW-PAID
                  WRITE ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1)
                    'Was Contestable but now paid'
                END-IF
*
                COMPRESS ST-V.ID-NUMBER
                  #TAB ST-V.NAME
                  #TAB ST-V.PLAN       (#I2)
                  #TAB ST-V.ISSUE-DATE (#I2)
                  #TAB ST-V.DATE-OF-DEATH
                  #TAB POL-DATE-CLM-SETTLED (#I1)
                  INTO #EXTRACT-RECORD LEAVING NO
                WRITE WORK 7 #EXTRACT-RECORD
              END-IF
*
              ESCAPE BOTTOM
            END-IF
          END-FOR
        END-IF
      END-FOR
    END-FIND
  END-IF                                              /* END DW12
*
  IF   (DATE-OF-DEATH NE 0)                        /* DW14
      AND (DOD-YYYY LE #LAST-YYYY)          /* DW5
    FIND FR-V WITH WIDOW-KEY = ST-V.ID-NUMBER-A
      FOR #I1 1 TO 45
        IF   (POL-NAME (#I1) = 'AMAA' OR = 'AAFMAA')
            AND (POL-DATE-CLM-FILED-YYYY (#I1) = #CURR-YYYY) /* Filed
          RESET #CSVALUE #POL-USED (*)
          FOR #I2 1 TO 9
            IF   (ST-V.ISSUE-DATE (#I2) = POL-DATE (#I1))
                AND (NOT #POL-USED (#I2))
              MOVE TRUE TO #POL-USED (#I2) /* To handl dupl iss dates
              MOVE CASH-VALUE (#I2) TO #CSVALUE
              ADD  CASH-VALUE (#I2) TO #TOT-CSV
              ESCAPE BOTTOM
            END-IF
          END-FOR
*
          ADD 1 TO #CNT-7
          DISPLAY (7) #CNT-7 'CN' ST-V.ID-NUMBER
            'Iss-Dt'       ISSUE-DATE (#I1)
            'DOD'          DATE-OF-DEATH
            'Date/Filed'   POL-DATE-CLM-FILED   (#I1)
            'Date/Settled' POL-DATE-CLM-SETTLED (#I1)
            'Amt/Paid'     POL-AMT-PAID         (#I1) (EM=ZZZ,ZZZ.99)
            'CSV'          #CSVALUE                   (EM=ZZZ,ZZZ.99)
          ADD POL-AMT-PAID (#I1) TO #TOT-AMT-PAID
*
          IF POL-DATE-CLM-SETTLED-YYYY (#I1) = #CURR-YYYY   /* Paid
            RESET #CSV-X #POL-USED-X (*)
            FOR #I2 1 TO 9
              IF   (ST-V.ISSUE-DATE (#I2) = POL-DATE (#I1))
                  AND (NOT #POL-USED-X (#I2))
                MOVE TRUE TO #POL-USED-X(#I2) /* To handl dupl iss dates
                MOVE CASH-VALUE (#I2) TO #CSV-X
                ADD  CASH-VALUE (#I2) TO #TOT-CSV-X
                ESCAPE BOTTOM
              END-IF
            END-FOR
*
            ADD 1 TO #CNT-8
            DISPLAY (8) #CNT-8 'CN' ST-V.ID-NUMBER
              'Iss-Dt'       ISSUE-DATE (#I1)
              'DOD'          DATE-OF-DEATH
              'Date/Filed'   POL-DATE-CLM-FILED   (#I1)
              'Date/Settled' POL-DATE-CLM-SETTLED (#I1)
              'Amt/Paid'     POL-AMT-PAID         (#I1) (EM=ZZZ,ZZZ.99)
              'CSV'          #CSV-X                     (EM=ZZZ,ZZZ.99)
            ADD POL-AMT-PAID (#I1) TO #TOT-AMT-PAID-X
          END-IF
        END-IF
      END-FOR
    END-FIND
  END-IF
*
  RESET #DB-CR-NEG #DB-CR-POS #TOT-LOAN
  IF   (DEBIT-CREDIT-AMT NE 0)               /* Extract all pols with DB/CR
    IF DEBIT-CREDIT-AMT LT 0
      MOVE EDITED DEBIT-CREDIT-AMT (EM=ZZ,ZZ9.99) TO #DB-CR-NEG
      COMPRESS '-' #DB-CR-NEG INTO #DB-CR-NEG LEAVING NO
      ADD DEBIT-CREDIT-AMT TO #DB-CR-NEG-TOT
    ELSE
      MOVE EDITED DEBIT-CREDIT-AMT (EM=ZZ,ZZ9.99) TO #DB-CR-POS
      ADD DEBIT-CREDIT-AMT TO #DB-CR-POS-TOT
    END-IF
*
    ADD 1 TO #CNT-5
    DISPLAY (5) #CNT-5 ST-V.ID-NUMBER #DB-CR-NEG #DB-CR-POS
*
    COMPRESS ST-V.ID-NUMBER #TAB
      #DB-CR-NEG #TAB
      #DB-CR-POS INTO #EXTRACT-RECORD LEAVING NO
    WRITE WORK 10 #EXTRACT-RECORD     /* was 2           /* DW13
  END-IF
*
  FIND (1) NT-V WITH NT-V.ID-NUMBER = ST-V.ID-NUMBER /* BANKRUPTCY's  /* PM6
    IF NO RECORDS FOUND                                           /* PM6
      ESCAPE BOTTOM                                               /* PM6
    END-NOREC                                                     /* PM6
*
    FOR #I1 1 TO C*NOTE-TABLE       /* DW16                       /* PM6
      IF NT-V.NOTE-TEXT (#I1) = ' '                               /* PM6
        ESCAPE BOTTOM                                             /* PM6
      END-IF                                                      /* PM6
*
      IF   ((NT-V.NOTE-TEXT (#I1) = MASK ('*Mbr in bnk'))         /* PM6
          OR  (NT-V.NOTE-TEXT (#I1) = MASK ('*MBR IN BNK')))         /* PM6
          AND (NT-V.NOTE-DATE-YYYY (#I1) = #CURR-YYYY-A)                 /* DW9
        COMPRESS NT-V.NOTE-DATE-MM (#I1) NT-V.NOTE-DATE-DD (#I1)  /* PM6
          NT-V.NOTE-DATE-YYYY (#I1) INTO #DATE WITH '/'    /* PM6
        COMPRESS ST-V.ID-NUMBER-A #TAB                            /* PM6
          ST-V.NAME        #TAB                            /* PM6
          #DATE INTO #EXTRACT-RECORD LEAVING NO            /* PM6
        WRITE WORK 4 #EXTRACT-RECORD                              /* PM6
        ESCAPE BOTTOM                                             /* PM6
      END-IF                                                      /* PM6
    END-FOR                                                       /* PM6
  END-FIND                                                        /* PM6
*
  IF PROCESS-IND = 'C'                                            /* PM1
    ESCAPE TOP                                                    /* PM1
  END-IF                                                          /* PM1
*
  RESET #POLS
  FOR #I1 1 TO 9
    IF STATUS (#I1) NE 'D'
      ESCAPE TOP
    END-IF
*
    ADD 1 TO #POLS
*
    RESET #CAP            /* DW8
    IF CONV-DURATION (#I1) = 999
      MOVE 'CAP' TO #CAP
    END-IF
*
    ADD X-LOAN-AMOUNT   (#I1) TO #TOT-LOAN
    ADD X-LOAN-AMOUNT-2 (#I1) TO #TOT-LOAN
*
    MOVE ISSUE-DATE (#I1) TO #YYYYMMDD
    IF #YYYY = #CURR-YYYY
      PERFORM CALC-PREMS-PAID-SETUP
*
      IF PAY-STATUS (#I1) GT '40'
        COMPRESS ST-V.ID-NUMBER       /* DW12
          #TAB ST-V.ISSUE-DATE (#I1)
          #TAB ST-V.PLAN       (#I1)
          #TAB #CAP
          #TAB ST-V.FACE-AMOUNT (#I1)
          #TAB ST-V.PAY-STATUS  (#I1)
          INTO #EXTRACT-RECORD LEAVING NO
        WRITE WORK 6 #EXTRACT-RECORD
*
        ADD 1 TO #CNT-4
        DISPLAY (4) #CNT-4 'CN' ST-V.ID-NUMBER
          'ISS DT' ISSUE-DATE (#I1)
          PLAN (#I1) 'MD' MODE (#I1) #PREMS-PAID
          'Cap/Ind'  #CAP
          'Face' FACE-AMOUNT (#I1)
          'Pay/Stat' PAY-STATUS(#I1)
        ADD FACE-AMOUNT (#I1) TO #TOT-FACE-4    /* DW8
      ELSE
*       IF  (PLAN (#I1) = 'LT' OR = 'RT')                         /* YK1
*        OR ((PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z'))   /* YK1
        IF FUNCTION-TERM-POLICY(<PLAN(#I1)>)                      /* YK1
          ADD 1 TO #CNT-2
          DISPLAY (2) #CNT-2 'CN' ST-V.ID-NUMBER
            'ISS DT' ISSUE-DATE (#I1)
            PLAN (#I1) 'MD' MODE (#I1) #PREMS-PAID
            'Cap/Ind'  #CAP
            'Face' FACE-AMOUNT (#I1)
            'Pay/Stat' PAY-STATUS(#I1)
          ADD FACE-AMOUNT (#I1) TO #TOT-FACE-2    /* DW8
        ELSE
          ADD 1 TO #CNT-3
          DISPLAY (3) #CNT-3 'CN' ST-V.ID-NUMBER
            'ISS DT' ISSUE-DATE (#I1)
            PLAN (#I1) 'MD' MODE (#I1) #PREMS-PAID
            'Cap/Ind'  #CAP
            'Face' FACE-AMOUNT (#I1)
            'Pay/Stat' PAY-STATUS(#I1)
          ADD FACE-AMOUNT (#I1) TO #TOT-FACE-3    /* DW8
        END-IF
      END-IF
    END-IF
*
    IF X-BILL-ADJUST (#I1) NE 0    /* Extract any member with Bill Adjustment
      RESET #BADJ-NEG #BADJ-POS
      IF X-BILL-ADJUST (#I1) LT 0
        MOVE EDITED X-BILL-ADJUST (#I1) (EM=ZZ,ZZ9.99) TO #BADJ-NEG
        COMPRESS '-' #BADJ-NEG INTO #BADJ-NEG LEAVING NO
        ADD X-BILL-ADJUST (#I1) TO #BADJ-NEG-TOT
      ELSE
        MOVE EDITED X-BILL-ADJUST (#I1) (EM=ZZ,ZZ9.99) TO #BADJ-POS
        ADD X-BILL-ADJUST (#I1) TO #BADJ-POS-TOT
      END-IF
*
      ADD 1 TO #CNT-6
      DISPLAY (6) #CNT-6 ST-V.ID-NUMBER ST-V.ISSUE-DATE (#I1)
        #BADJ-NEG #BADJ-POS
*
      COMPRESS ST-V.ID-NUMBER #TAB
        ST-V.ISSUE-DATE (#I1) #TAB
        #BADJ-NEG #TAB
        #BADJ-POS INTO #EXTRACT-RECORD LEAVING NO
      WRITE WORK 3 #EXTRACT-RECORD
    END-IF
*
    IF X-LOAN-AMOUNT (#I1) NE 0    /* Extract all member with loans      /* DW9
      RESET #CAP-IND
      IF CONV-DURATION (#I1) = 999
        MOVE 'CAP' TO #CAP-IND
      END-IF
      MOVE 'FIXED' TO #FIX-VAR
      MOVE EDITED X-LOAN-AMOUNT (#I1) (EM=ZZZ,ZZZ.99) TO #LOAN-BALANCE   /* PM18
      COMPRESS ST-V.ID-NUMBER
        #TAB ST-V.NAME
        #TAB #CAP-IND
        #TAB #FIX-VAR
        #TAB #LOAN-BALANCE
        INTO #EXTRACT-RECORD LEAVING NO
      WRITE WORK 5 #EXTRACT-RECORD
    END-IF
*
    IF X-LOAN-AMOUNT-2 (#I1) NE 0               /* DW9
      RESET #CAP-IND
      MOVE 'VAR' TO #FIX-VAR
      MOVE EDITED X-LOAN-AMOUNT-2 (#I1) (EM=ZZZ,ZZZ.99) TO #LOAN-BALANCE  /* PM18
      COMPRESS ST-V.ID-NUMBER
        #TAB ST-V.NAME
        #TAB #CAP-IND
        #TAB #FIX-VAR
        #TAB #LOAN-BALANCE
        INTO #EXTRACT-RECORD LEAVING NO
      WRITE WORK 5 #EXTRACT-RECORD
    END-IF
  END-FOR
*
*  Following is selection Criteria for Policy/LOAN CONFIRMATION Letters
*
  RESET #PDA-ADDRESS                                                        /* JT1
  MOVE 'P' TO #ADD-TYPE                                                     /* JT1
  #ADD-CONTACT-ID := ST-V.MEMBER-CONTACT-ID                                 /* JT1
  CALLNAT 'ADDN0001' #PDA-ADDRESS
*
  IF  (NUMBER-MEMBERSHIPS = 0)
*   OR (ADDRESS-CHG-CODE = 'U' OR = 'V')                                    /* JT1
      OR F-UNDEL-ADDRESS (< ST-V.MEMBER-CONTACT-ID >)                          /* JT1
*   OR (ADDRESS-1 = ' ')                                                    /* JT1
      OR (#ADD-LINE-1 = ' ')                                                   /* JT1
*   OR (ZIP-CODE = 0)                                                       /* JT1
      OR (#ADD-ZIP-CODE = 0)                                                   /* JT1
      OR (INTRO-FLAG = 'S' OR = 'K' OR = 'G')
      OR (#POLS GT 3)
* 2002 B 2001 M 2000 H 1999 C /* 2003 F 2004 A 2005 J 2006 E
*   OR (NAME LT #START-LETTER) /*  /*DW4/DW7/DW9
    ESCAPE TOP
  END-IF
*
  RESET #FOUND-HIGHEST-TERM-NO-LOANS
  FOR #I1 1 TO #NUM-TERM-NO-LOANS
    IF ST-V.ID-NUMBER = #HIGHEST-TERM-NO-LOANS-CN (#I1)
      MOVE TRUE TO #FOUND-HIGHEST-TERM-NO-LOANS
      ADD 1 TO  #NUM-1
      MOVE ID-NUMBER-A TO #OUT-ID
      MOVE 'A' TO #OUT-KEY       /* DW7                       
      WRITE WORK 9 #OUT-RECD   /* WAS work 1       DW13
      WRITE ID-NUMBER 'SEL Highest TERM No Loans' INTRO-FLAG
        #HIGHEST-TERM-NO-LOANS-AMT (#I1) NAME  (EM=XXXXXXXXXX)
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF #FOUND-HIGHEST-TERM-NO-LOANS
    ESCAPE TOP
  END-IF
*
  RESET #FOUND-HIGHEST-WL-NO-LOANS
  FOR #I1 1 TO #NUM-WL-NO-LOANS
    IF ST-V.ID-NUMBER = #HIGHEST-WL-NO-LOANS-CN (#I1)
      MOVE TRUE TO #FOUND-HIGHEST-WL-NO-LOANS
      ADD 1 TO  #NUM-2
      MOVE ID-NUMBER-A TO #OUT-ID
      MOVE 'B' TO #OUT-KEY       /* DW7
      WRITE WORK 9 #OUT-RECD            /* WAS work 1       DW13
      WRITE ID-NUMBER 'SEL Highest W/L No Loans' INTRO-FLAG
        #HIGHEST-WL-NO-LOANS-AMT (#I1) NAME  (EM=XXXXXXXXXX)
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF #FOUND-HIGHEST-WL-NO-LOANS
    ESCAPE TOP
  END-IF
*
  RESET #FOUND-HIGHEST-WL-W-LOANS                                       /* vt2 \/ Merilyn last request
  FOR #I1 1 TO #NUM-WL-W-LOANS
    IF ST-V.ID-NUMBER = #HIGHEST-WL-W-LOANS-CN (#I1)
      MOVE TRUE TO #FOUND-HIGHEST-WL-W-LOANS
      ADD 1 TO  #NUM-3
      MOVE ID-NUMBER-A TO #OUT-ID
      MOVE 'C' TO #OUT-KEY       /* DW7
      WRITE WORK 9 #OUT-RECD      /* WAS work 1       DW13
      WRITE ID-NUMBER 'SEL Highest W/L With Loans' INTRO-FLAG
        #HIGHEST-WL-W-LOANS-AMT (#I1) NAME  (EM=XXXXXXXXXX)
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF #FOUND-HIGHEST-WL-W-LOANS
    ESCAPE TOP
  END-IF                                                               /* vt2 /\
*
  RESET #FOUND-HIGHEST-NON-CAP-LOANS
  FOR #I1 1 TO #NUM-NON-CAP-LOANS
    IF ST-V.ID-NUMBER = #HIGHEST-NON-CAP-LOANS-CN (#I1)
      MOVE TRUE TO #FOUND-HIGHEST-NON-CAP-LOANS
      ADD 1 TO  #NUM-5
      MOVE ID-NUMBER-A TO #OUT-ID
      MOVE 'E' TO #OUT-KEY       /* DW7
      WRITE WORK 9 #OUT-RECD   /* WAS work 1       DW13
      WRITE ID-NUMBER 'SEL Highest NON CAP Loans' INTRO-FLAG
        #HIGHEST-NON-CAP-LOANS-AMT (#I1) NAME  (EM=XXXXXXXXXX)
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF #FOUND-HIGHEST-NON-CAP-LOANS
    ESCAPE TOP
  END-IF
*
  IF   (ST-V.INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q')    /* Cap member
      AND NOT #FOUND-ALL-CAPS
      and st-v.#name-1 = 'P'                                             /* vt5      /* vt6 was 'H'
*    write '=' st-v.id-number '=' name
    FOR #I1 1 TO 9                /* CAP LOANS
      IF   (STATUS (#I1) ='D')
          AND (CONV-DURATION (#I1) = 999)
          AND (X-LOAN-AMOUNT (#I1) NE 0)
        IF #NUM-CAPS LT #NUM-CAP-LOANS              /* DW9
            and st-v.#name-1 = 'P'                                       /* vt5    /* vt6 was 'H'
          ADD 1 TO  #NUM-CAPS
          MOVE ID-NUMBER-A TO #OUT-ID
          MOVE 'D' TO #OUT-KEY       /* DW7
          WRITE WORK 9 #OUT-RECD         /* WAS work 1       DW13
          WRITE ID-NUMBER 'SEL CAP Loans' INTRO-FLAG PLAN (#I1)
            FACE-AMOUNT (#I1) NAME  (EM=XXXXXXXXXX)
          ESCAPE BOTTOM
        ELSE
          MOVE TRUE TO #FOUND-ALL-CAPS
        END-IF
      END-IF
*
      ESCAPE TOP             /* get out - next part is for loan processing
    END-FOR
  END-IF
*
  RESET #TU #1035                              /* DW3 PM20
  FIND NT-V WITH ID-NUMBER = ST-V.ID-NUMBER    /* DW3
    FOR #I1 1 TO C*NOTE-TABLE                               /* DW16
      IF NOTE-TEXT (#I1) = MASK (.....................'IS A TRADE-UP')
          AND (NOTE-DATE-YYYY (#I1) = #CURR-YYYY-A)
        MOVE TRUE TO #TU                       /* DW3
        ESCAPE BOTTOM
      END-IF
*
      IF NOTE-TEXT (#I1) = MASK ('*1035 EXCH')     /* PM20
          AND (NOTE-DATE-YYYY (#I1) = #CURR-YYYY-A)   /* PM20
        MOVE TRUE TO #1035                         /* PM20
      END-IF                                       /* PM20
    END-FOR                                        /* PM20
  END-FIND
*
  IF #TU
      AND (#NUM-TU LT #NUM-TRADE-UPS)            /*  DW2/DW9
    FOR #I1 1 TO 9
      IF STATUS (#I1) = 'D'
        ESCAPE BOTTOM
      END-IF
    END-FOR
*
    IF #I1 GT 9
      MOVE 1 TO #I1
    END-IF
*
    ADD 1 TO  #NUM-TU
    MOVE ID-NUMBER-A TO #OUT-ID
    MOVE 'F' TO #OUT-KEY        /* DW7
    WRITE WORK 9 #OUT-RECD      /* WAS work 1       DW13
    WRITE ID-NUMBER 'SEL Trade-Up' INTRO-FLAG PLAN (#I1)
      FACE-AMOUNT (#I1) NAME  (EM=XXXXXXXXXX)
  ELSE
    IF #1035                                       /* PM20
        AND #NUM-1035 LT #NUM-EXT-1035                /* PM20
      ADD 1 TO  #NUM-1035                          /* PM20
      MOVE ID-NUMBER-A TO #OUT-ID                  /* PM20
      MOVE 'G' TO #OUT-KEY                         /* PM20
      WRITE WORK 9 #OUT-RECD                       /* PM20
    END-IF                                         /* PM20
  END-IF
END-READ
*
WRITE (2) / 'Total Face-Amt=' #TOT-FACE-2 (EM=ZZZ,ZZZ,ZZZ.99)
WRITE (3) / 'Total Face-Amt=' #TOT-FACE-3 (EM=ZZZ,ZZZ,ZZZ.99)
WRITE (4) / 'Total Face-Amt=' #TOT-FACE-4 (EM=ZZZ,ZZZ,ZZZ.99)
WRITE (7) / 'Total Amt paid=' #TOT-AMT-PAID (EM=ZZZZZ,ZZZ,ZZZ.99)
  'Total CSV =' #TOT-CSV (EM=ZZZ,ZZZ,ZZZ.99)
WRITE (8) / 'Total Amt paid=' #TOT-AMT-PAID-X (EM=ZZZZZ,ZZZ,ZZZ.99)
  'Total CSV =' #TOT-CSV-X (EM=ZZZ,ZZZ,ZZZ.99)
*
WRITE 'NUMBER-mbrs-PICKED   ' #NUMBER-PICKED
WRITE 'NUMBER-caps-PICKED   ' #NUMBER-PICKED-CAP
WRITE 'NUMBER Non-Loan Terms' #NUM-1
WRITE 'NUMBER Non-Loan W/L  ' #NUM-2
WRITE 'NUMBER Loan W/L      ' #NUM-3
WRITE 'NUMBER Loans Non-Cap ' #NUM-5
WRITE 'NUMBER CAP w Loans'    #NUM-CAPS
WRITE 'NUMBER Trade-Ups     ' #NUM-TU    /* DW3
*
MOVE EDITED #DB-CR-NEG-TOT (EM=ZZZ,ZZZ,ZZ9.99) TO #DISP-TOT-DB-CR-NEG
COMPRESS '-' #DISP-TOT-DB-CR-NEG INTO #DISP-TOT-DB-CR-NEG LEAVING NO
MOVE EDITED #DB-CR-POS-TOT (EM=ZZZ,ZZZ,ZZ9.99) TO #DISP-TOT-DB-CR-POS
*
MOVE EDITED #BADJ-NEG-TOT (EM=ZZZ,ZZZ,ZZ9.99) TO #DISP-TOT-BADJ-NEG
COMPRESS '-' #DISP-TOT-BADJ-NEG INTO #DISP-TOT-BADJ-NEG LEAVING NO
MOVE EDITED #BADJ-POS-TOT (EM=ZZZ,ZZZ,ZZ9.99) TO #DISP-TOT-BADJ-POS
*
WRITE 'DC BDJ' #DB-CR-NEG-TOT #DB-CR-POS-TOT #BADJ-NEG-TOT #BADJ-POS-TOT
*
WRITE (5)  'Total           '
  #DISP-TOT-DB-CR-NEG #DISP-TOT-DB-CR-POS
COMPRESS 'TOTAL' #TAB #DISP-TOT-DB-CR-NEG #TAB #DISP-TOT-DB-CR-POS
  INTO #EXTRACT-RECORD LEAVING NO
WRITE WORK 10 #EXTRACT-RECORD        /* was 2           /* DW13
*
WRITE (6)  'Total                '
  #DISP-TOT-BADJ-NEG #DISP-TOT-BADJ-POS
COMPRESS 'TOTAL' #TAB #TAB #DISP-TOT-BADJ-NEG #TAB #DISP-TOT-BADJ-POS
  INTO #EXTRACT-RECORD LEAVING NO
WRITE WORK 3 #EXTRACT-RECORD
*
* * * * * * * * * * * * * * *
DEFINE CALC-PREMS-PAID-SETUP
* * * * * * * * * * * * * * *
*
RESET #PREMS-PAID DATE-OF-BIRTH                                        /* TT1
DATE-OF-BIRTH := GET-DATE-OF-BIRTH(<ST-V.MEMBER-CONTACT-ID>)           /* TT1
*
MOVE DATE-OF-BIRTH           TO #PP-DATE-OF-BIRTH
MOVE ANNUAL-PREM (#I1)       TO #PP-ANNUAL-PREM
MOVE PAY-STATUS (#I1)        TO #PP-PAY-STATUS
MOVE TOT-PREMIUMS-PAID (#I1) TO #PP-TOT-PREMIUMS-PAID
MOVE PAID-TO-DATE (#I1)      TO #PP-PAID-TO-DATE
MOVE ISSUE-DATE (#I1)        TO #PP-ISSUE-DATE
MOVE MODE (#I1)              TO #PP-MODE
MOVE PLAN (#I1)              TO #PP-PLAN
MOVE COST-BASIS (#I1)        TO #PP-COST-BASIS
MOVE MONTH-ALLOC-AMT (#I1)   TO #PP-MONTH-ALLOC-AMT
MOVE ST-V.INTRO-FLAG         TO #PP-INTRO-FLAG
MOVE X-FIRST-PLACE-FEE (#I1) TO #PP-FIRST-PLACE-FEE
MOVE X-BILL-ADJUST     (#I1) TO #PP-BADJ
*
CALLNAT 'GPRPDSCO'
  #PP-DATE-OF-BIRTH
  #PP-ANNUAL-PREM
  #PP-PAY-STATUS
  #PP-TOT-PREMIUMS-PAID
  #PP-PAID-TO-DATE
  #PP-ISSUE-DATE
  #PP-MODE
  #PP-PLAN
  #PP-COST-BASIS
  #PP-MONTH-ALLOC-AMT
  #PP-INTRO-FLAG
  #PP-FIRST-PLACE-FEE
  #PREMS-PAID
  #SUB-PREMS-PAID
  #PP-BADJ
*
END-SUBROUTINE
*
* * * * * * * * * * * * * **
DEFINE SUBROUTINE  SELECTED-CNS-BY-AUDITORS-EXTRACT             /* DW13
* * * * * * * * * * * * * **
*
RESET #FOUND-AUD-CN
FOR #I1 1 TO #NUM-AUD-CNS
  IF ST-V.ID-NUMBER = #AUD-CNS (#I1)
    MOVE TRUE TO #FOUND-AUD-CN
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF NOT #FOUND-AUD-CN
  ESCAPE ROUTINE
END-IF
*
MOVE ST-V.FACE-AMOUNT (*) TO #FACE-AMT (*)
MOVE *DATN TO #AS-OF-DT
MOVE 'NTP' TO #SUFFIX /* do not replace w tpp
CALLNAT 'CVALUSXX'
  ST-V.ID-NUMBER
  #SUFFIX
  #AS-OF-DT
  #LOAN-BAL   (1:9)
  #LOAN-BAL-2 (1:9)
  #ACC-INT    (1:9)
  #ACC-INT-2  (1:9)
  #CSV        (1:9)
  #CVALUE     (1:9)
  #LVALUE     (1:9)
  #MCSV       (1:9)
  #DB         (1:9)
  #ANN-PREMIUM  (1:9)
  #FACE-AMT   (1:9)
  #TPP        (1:9)

FOR #I1 1 TO 9
  IF ST-V.STATUS (#I1) = 'D'
    IF COST-BASIS (#I1) = 0
      MOVE #TPP (#I1) TO #COST-BASIS
    ELSE
      COMPUTE #COST-BASIS  = COST-BASIS (#I1)
        + (#TPP (#I1) - TOT-PREMIUMS-PAID (#I1))
    END-IF
*
    CALLNAT 'GPLNMSXX' #POL-NUM ST-V.ID-NUMBER #I1 /* build POL-#
*
    DECIDE ON FIRST VALUE ST-V.MODE (#I1)
      VALUE 'A' COMPUTE #MODAL-PREM = ST-V.ANNUAL-PREM (#I1) / 1
      VALUE '1' COMPUTE #MODAL-PREM = ST-V.ANNUAL-PREM (#I1) / 1
      VALUE 'S' COMPUTE #MODAL-PREM = ST-V.ANNUAL-PREM (#I1) / 2
      VALUE '2' COMPUTE #MODAL-PREM = ST-V.ANNUAL-PREM (#I1) / 2
      VALUE 'Q' COMPUTE #MODAL-PREM = ST-V.ANNUAL-PREM (#I1) / 4
      VALUE '4' COMPUTE #MODAL-PREM = ST-V.ANNUAL-PREM (#I1) / 4
      NONE      COMPUTE #MODAL-PREM = ST-V.ANNUAL-PREM (#I1) / 12
    END-DECIDE
*
    MOVE EDITED #COST-BASIS (EM=ZZZ,ZZZ.99) TO #COST-BASIS-DISP
    MOVE LEFT #COST-BASIS-DISP TO #COST-BASIS-DISP
    MOVE EDITED ST-V.ACC-CASH-VALUE (#I1) (EM=ZZZ,ZZZ.99) TO #ACV-DISP
    MOVE LEFT #ACV-DISP TO #ACV-DISP
    MOVE EDITED #CSV (#I1) (EM=ZZZ,ZZZ.99) TO #CSV-DISP
    MOVE LEFT #CSV-DISP TO #CSV-DISP
    MOVE EDITED #MODAL-PREM (EM=ZZZ,ZZZ.99) TO #MODAL-PREM-DISP
    MOVE LEFT #MODAL-PREM-DISP TO #MODAL-PREM-DISP
    MOVE EDITED ST-V.FACE-AMOUNT (#I1) (EM=ZZZ,ZZZ.99) TO #FACE-DISP
    MOVE LEFT #FACE-DISP TO #FACE-DISP
    MOVE EDITED ST-V.DEATH-BENEFIT (#I1) (EM=Z,ZZZ,ZZZ.99) TO #DB-DISP
    MOVE LEFT #DB-DISP TO #DB-DISP
    MOVE EDITED ST-V.X-LOAN-AMOUNT (#I1) (EM=Z,ZZZ,ZZZ.99) TO #FIX-LOAN-DISP
    MOVE LEFT #FIX-LOAN-DISP TO #FIX-LOAN-DISP
    MOVE EDITED ST-V.X-LOAN-AMOUNT-2 (#I1) (EM=Z,ZZZ,ZZZ.99) TO #VAR-LOAN-DISP
    MOVE LEFT #VAR-LOAN-DISP TO #VAR-LOAN-DISP
*
    COMPRESS ST-V.ID-NUMBER
      #TAB #POL-NUM
      #TAB ST-V.ISSUE-DATE (#I1)
      #TAB ST-V.NAME
      #TAB ST-V.PLAN (#I1)
      #TAB #FACE-DISP
      #TAB #COST-BASIS-DISP
      #TAB #ACV-DISP
      #TAB #CSV-DISP
      #TAB #DB-DISP
      #TAB #MODAL-PREM-DISP
      #TAB ST-V.X-LOAN-DATE     (#I1)
      #TAB #FIX-LOAN-DISP
      #TAB ST-V.X-LOAN-DATE-2   (#I1)
      #TAB #VAR-LOAN-DISP
      INTO #EXTRACT-RECORD LEAVING NO
    WRITE WORK 8 #EXTRACT-RECORD
  END-IF
END-FOR
*
ADD 1 TO #NUM-CN-SEL
IF #NUM-CN-SEL = 1
  MOVE 'SL1' TO #SCR-SUFFIX
ELSE
  MOVE 'SL2' TO #SCR-SUFFIX
END-IF
*
MOVE ST-V.ID-NUMBER TO #SCR-ID
MOVE 20170101 TO #TRLOG-START-DT       /* PM17 PM19 PM21    /* vt1 was 20110101 /* vt3 20130101 /* vt4 was 20140101  /* vt5 was 20150101 /* vt6 was 20160101
MOVE 20171231 TO #TRLOG-END-DT         /* PM17 PM19 PM21    /* vt1 was 20111231 /* vt3 20131231 /* vt4 was 20141231  /* vt5 was 20151231 /* vt6 was 20161231 
*
WRITE 'Doing TA Extract for' #TRLOG-START-DT 'thru' #TRLOG-END-DT 'for' #SCR-ID
  'suffix =' #SCR-SUFFIX
*
FETCH RETURN 'G5000PTR' #SCR-SUFFIX #SCR-ID #TRLOG-START-DT #TRLOG-END-DT
WRITE 'return from G5000PTR' ST-V.ID-NUMBER #SCR-ID
*
END-SUBROUTINE
*
END
