* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* GPR000ST 
* bz AT Status statistics 

DEFINE DATA  
LOCAL 
1 AT-V VIEW OF A-APPL-TRACKING
  2 ID-NUMBER
  2 MEMBER-CN 
  2 USER-SOURCE
  2 AT-STATUS
  2 C*ST-NOTE-TBL
  2 ST-NOTE-TBL(50)
   3 ST-NOTE-USER      (A3)
   3 ST-NOTE-DATE      (N8)
   3 REDEFINE ST-NOTE-DATE
     4 ST-NOTE-DATE_A  (A8)
   3 ST-NOTE-STATUS    (A2)
  2 ACTION-DATE
  2 POLICY-NUMBER
  
1 v_From         (N8)
1 REDEFINE v_From 
  2 v_From_A     (A8)
1 REDEFINE v_From
  2 YYYYMM       (N6)
  2 v_DD         (N2)        
  
1 v_To           (N8)
1 REDEFINE v_To 
  2 v_To_A       (A8)

1 v_Range        (N3)   INIT<10>   
1 v_usr          (A3)
1 v_St           (A2)    
1 d_From         (D)    INIT <*DATX>
1 d_To           (D)    INIT <*DATX>
1 #d             (D)
1 #dpr           (D)
1 #i             (I4)    
1 #j             (I4)    
1 #k             (I4)
1 #u             (I4)
1 #x             (I4)
1 #y             (I4)
1 #N             (I2)  
1 #db            (I2)
1 sel            (N1)
1 v_AT           (N6)
1 dm             (A1)  INIT <':'>
1 dt             (A1)  INIT <H'09'>
1 v_msg          (A75)
1 f_Rep          (A80) INIT <"/usr/SAG/AAFMAA/batch/workfiles/WORK/AT-Status-History.TXT">
1 f_Rep_Full     (A80) INIT <"/usr/SAG/AAFMAA/batch/workfiles/WORK/AT-Status-History_Full.TXT">
1 A100           (A100)
1 l_Sum_Only    (L)
*
1 v_Pair         (A4)
1 REDEFINE v_Pair
  2 Pair_1      (A2)
  2 Pair_2      (A2)
  2 REDEFINE Pair_2
    3 Pair_21   (A1)        
    3 Pair_22   (A1)
1 st_Prev
  2 stn_S         (A2)          
  2 stn_U         (A3)
  2 stn_dd        (N3) 
*
1 usr_st   (40)
  2 usr_cd        (A3)
  2 usr_cd_#      (I2)
  2 st_#       (I2) 
  2 status     (50)
     3 st_cd       (A2)
     3 st_idx      (I2)
     3 st_cd_#     (I2)
1 usr_#            (I2) 
1  Allst  (40)
   2 Allst_cd   (A2)
   2 Allst_cd_# (I2)
1 Allst_#       (I2) 
1 mtx(A3/0:40,0:40)
1 Pairs         (A4/7) INIT <'SDS7','S7P*','U6A ','U2U6','U3U6','U4U6','U5U6'>
1 v_A           (A/0:40) DYNAMIC
1 A04           (A4)
1 REDEFINE A04
  2 A04_1  (A2)
  2 REDEFINE A04_1
    3 A04_11   (A1)
    3 A04_12   (A1)
  2 A04_2  (A2)
  2 REDEFINE A04_2
    3 A04_21   (A1)
    3 A04_22   (A1)
1 #dd          (I2)    
  1 uma(0:7,0:15) 
    2 sell (A5)
    2 summ (N5.2)
    2 No   (N4.2)
    2 avg  (N4.2)    
  1 usr#   (I2)
* ------------------------
1 ftp_Parm       (A) DYNAMIC INIT<'WORK, AT-Status-History.TXT, FTP/Applications/AT-Status,,  -e '>
1 ftp_Parm_Full  (A) DYNAMIC INIT<'WORK, AT-Status-History_Full.TXT, FTP/Applications/AT-Status,,  -e '> 
1 ftp_Msg        (A) DYNAMIC
1 ftp_RC         (N4)
*
1 v_Parm         (A70)
1 REDEFINE v_Parm
  2 v_pgm        (A8)
  2 v_sep        (A1)
  2 v_func       (A7)
*
1 l_test         (L)
END-DEFINE

ON ERROR
  WRITE *PROGRAM 'Line:' *ERROR-LINE 'Err:' *ERROR-NR  /
  ID-NUMBER '='#i(EM=ZZ9) '='#j(EM=ZZ9) '='#k(EM=ZZ9)  '='#x(EM=ZZ9) /
  ST-NOTE-USER(#i + 1) 
  IF *ERROR-NR = 3009 
     WRITE // 5x 'Database was idle some time'(I) /
              5x 'Please try againe - it will work'(I) 
  END-IF
  PERFORM sbr_Exit
END-ERROR

 l_test := FALSE                                         /* --db
 IF l_test
   EXAMINE ftp_Parm FOR 'Applications' REPLACE 'Temp'
   EXAMINE ftp_Parm_Full FOR 'Applications' REPLACE 'Temp'
 END-IF  

IF *DATA NE 0
  INPUT v_Parm
END-IF

v_Usr := '*'
v_St  := '*'
  
 SET KEY PF3
 SET KEY PF1
 SET KEY PF2
 SET KEY PF4
 SET KEY PF5      

 REPEAT
  INPUT (IP=OFF) *DAT4U 6x '-- AT-ST-Notes reporting --'(I) 
                 7x F-IS-DEV(<>)(AD=O EM=[PROD/[DEV) GET_DBN(<>)(EM=999']') 3x *TIMX //
      2x '0. Exit                                                  0'   // 
      2x '1. AT Status change history for one AT                   1'   / 
      2x '2. Last(Current) AT-ST-Note by user/status               2'   /
      2x '3. All AT-ST-Notes by user/status/status-change          3'   //      
      2x '4. Matrix - Users/Status                                 4'   /
      2x '5. Matrix - Average days for 7 predefined pairs          5'   //
      2x '6. Report AT-ST-Note for last(current) status            6'    /
      2x '7. Report AT-ST-Note change history                      7'   //
      2x 'Select - - - - - - - - - - - - - - - - - - - - - - - -  ' sel(AD=IM EM=9)
      20/1  v_Msg (AD=OI)                                         
      23/2 'PF3 - Exit'
    IF *PF-KEY = 'PF3' PERFORM sbr_Exit END-IF                       
  v_Msg := ' '  
  DECIDE ON FIRST VALUE sel
  VALUE 0  PERFORM sbr_Exit      /* Exit
  VALUE 1                        /* AT
     PERFORM sbr_1
  VALUE 2                        /* last User/Status 
     PERFORM sbr_2
  VALUE 3                        /* All filtered User/Status/Pair 
     PERFORM sbr_3
  VALUE 4                        /* Matrix Users/Status 
     PERFORM sbr_4
  VALUE 5                        
     PERFORM sbr_5               /* Matrix Average for changes 
  VALUE 6                        
     PERFORM sbr_6               /* Matrix Average for changes 
  VALUE 7                        
     PERFORM sbr_7               /* Matrix Average for changes 

   NONE IGNORE
  END-DECIDE
END-REPEAT
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
DEFINE sbr_1
*      ----- 
   INPUT (IP=OFF) *DAT4U 3x '-- Show Status change history for AT --'(I)  F-IS-DEV(<>)(EM=[Prod/[Dev) GET_DBN(<>)(EM=999']') 3x *TIMX ///
       2x 'AT:'v_AT (AD=UM EM=ZZZZZZ) ///
       23/2 'PF3 - Exit'
   IF *PF-KEY = 'PF3' ESCAPE ROUTINE END-IF       
   FIND(1) AT-V WITH ID-NUMBER = v_AT
     WRITE NOTITLE 'AT:' ID-NUMBER 3x 'CN:'  MEMBER-CN 3x 'Action date:' ACTION-DATE(EM=9999-99-99) 3x 'Created:' USER-SOURCE 3x 'Status:'AT-STATUS
     SKIP 1 
     WRITE NOTITLE 2x 'Date        : User : Note Status'(AD=I)  /
                   2x '------------:------:------------'
     FOR #i = 1 TO C*ST-NOTE-TBL
        MOVE EDITED ST-NOTE-DATE_A(#i) TO #d(EM=YYYYMMDD)
        WRITE  2x #d(EM=LLL-DD-YYYY) dm ST-NOTE-USER(#i) 2x dm ST-NOTE-STATUS(#i)
     END-FOR
   END-FIND
END-SUBROUTINE
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
DEFINE sbr_2 /* Last User Status */
*      ----- 
  d_To   := *DATX
  v_From := *DATN
  v_DD   := 01
  MOVE EDITED v_From_A TO d_From (EM=YYYYMMDD)
  v_Range := ( d_To - d_From ) + 1

  l_Sum_Only := TRUE
  INPUT (IP=OFF) 
      1/1 *DAT4U 7x '-- Last(Current) AT-ST-Note by user/status --'(I)  7x *TIMX 
      3/2 'Date From :' d_From(AD=OI EM=MM/DD/YYYY)                         
      4/2 'Date To   :' d_To(AD=OI EM=MM/DD/YYYY)    5x '(PF1: -1, PF2: +1)'
      5/2 'Range     :' v_Range(AD=OI EM=ZZ9) 'Days' 7x '(PF4: -1, PF5: +1)'
      7/2 'User   :'    v_Usr(AD=UML EM=XXX) 3x  '(* - all)'                  
      9/2 'Status :'    v_St (AD=UML EM=XX)  4x  '(* - all)'                
      11/2 'Show summary only N/Y:' 26T '[' 27T l_Sum_Only(AD=IM EM=N/Y) 28T ']'     
      13/1 '-'(36) 'Help' '-'(36)                                         
      15/2 '- To display report change "Show summary only" to "N"'           
      16/2 '- To interrupt report scrolling press PF3'                       
      23/2 'PF3 - Exit'             
      
      
  IF *PF-KEY = 'PF3' ESCAPE ROUTINE END-IF 
  PERFORM sbr_PF-Keys
  IF v_Usr = ' ' 
     REINPUT 'Enter User/Clerk ID or * for all'
  END-IF   
  IF v_St = ' ' 
     REINPUT 'Enter Status or * for all' 
  END-IF
  
  #j := 0
  #k := 0
  MOVE EDITED d_From(EM=YYYYMMDD) TO v_From_A
  MOVE EDITED d_To(EM=YYYYMMDD)   TO v_To_A
  FIND AT-V WITH  ACTION-DATE >= v_From AND ACTION-DATE <= v_To
*    PRINT ID-NUMBER ACTION-DATE
    #i := C*ST-NOTE-TBL
    IF  ( v_Usr <> '*' AND ST-NOTE-USER(#i) <> v_usr ) 
        ESCAPE TOP
    END-IF
    IF    ( v_St <> '*' AND ST-NOTE-STATUS(#i) <> v_St )
        ESCAPE TOP
    END-IF
    #j := #j + 1  
    #k := #k + 1
    IF #k = 22 #k := 1 NEWPAGE END-IF 
    IF #k = 1 
       IF NOT l_Sum_Only
          WRITE 2x '##   :   Date      : User :Status:  AT     : CN'(AD=I) 7x 'PF3 - Stop' 
       END-IF  
    END-IF   
    MOVE EDITED ST-NOTE-DATE_A(#i) TO #d(EM=YYYYMMDD)
    IF NOT l_Sum_Only
       WRITE  2x #j(EM=ZZ9')') dm #d(EM=LLL-DD-YYYY) dm ST-NOTE-USER(#i) 2x dm ST-NOTE-STATUS(#i) 3x /* AT-STATUS
         dm ID-NUMBER dm MEMBER-CN  
        IF *PF-KEY = 'PF3' ESCAPE BOTTOM END-IF
    END-IF    
  END-FIND
  COMPRESS 'St:' v_St 'Usr:' v_Usr INTO v_Msg
  COMPRESS '[' v_Msg ']' INTO v_Msg  LEAVING NO SPACE  
  COMPRESS v_Msg 'Found' #j 'AT'   ' Period:' d_From '-' d_To ':' v_Range 'Days' INTO v_Msg
END-SUBROUTINE
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
DEFINE sbr_3 /* User/Status/Pair */
*      ----- 
  d_To   := *DATX
  v_From := *DATN
  v_DD   := 01
  MOVE EDITED v_From_A TO d_From (EM=YYYYMMDD)
  v_Range := ( d_To - d_From ) + 1  

  v_Pair := '*'
  l_Sum_Only := TRUE
  INPUT (IP=OFF) 
      1/1  *DAT4U 4x '-- All AT-ST-Notes by user/status/status-change --'(I) 4x *TIMX 
      3/2  'Date From :' d_From(AD=OI EM=MM/DD/YYYY)                            
      4/2  'Date To   :' d_To(AD=OI EM=MM/DD/YYYY)    5x '(PF1: -1, PF2: +1)'   
      5/2  'Range     :' v_Range(AD=OI EM=ZZ9) 'Days' 7x '(PF4: -1, PF5: +1)'   
      8/2  'User          :' v_Usr(AD=UML EM=XXX)   4x '(* - all)'                          
      10/2 'Status        :' v_St (AD=UML EM=XX)    5x '(* - all)'                         
      12/2 'Status change :' v_Pair(AD=UML EM=XXXX) 3x '(* - all)'                
      14/2 'Show summary only N/Y:' 26T '[' 27T l_Sum_Only (AD=IM EM=N/Y) 28T ']'             
      16/1 '-'(36) 'Help' '-'(36)                                                
      18/2 '- To display report change "Show summary only" TO "N"'                 
      19/2 '- To interrupt report scrolling press PF3'
      20/2 '- "Status change" is a pair: old-new status" (ie SDS7)'
      23/2 'PF3 - Exit'

  IF *PF-KEY = 'PF3' ESCAPE ROUTINE END-IF 
  PERFORM sbr_PF-Keys
  IF v_Usr = ' ' OR v_St =' ' OR v_Pair = ' '
         REINPUT 'User and Status and Status change fields should not be blank' 
  END-IF
  IF v_St <> '*' AND v_Pair <> '*'
         REINPUT 'Status should be * when filter Status change is not *' 
  END-IF
  #j := 0
  #k := 0
  MOVE EDITED d_From(EM=YYYYMMDD) TO v_From_A
  MOVE EDITED d_To(EM=YYYYMMDD)   TO v_To_A
  FIND AT-V WITH  ACTION-DATE >= v_From /* AND ACTION-DATE <= v_To  /*  WRONG  !!!!!!
*    PRINT ID-NUMBER ACTION-DATE
    FOR #i := C*ST-NOTE-TBL TO 2 STEP -1
      IF  ST-NOTE-DATE(#i) < v_FROM OR ST-NOTE-DATE(#i) > v_To 
         ESCAPE TOP
      END-IF
      IF v_Usr <> '*' AND ST-NOTE-USER(#i) <> v_usr
          ESCAPE TOP
      END-IF
      IF v_St <> '*' AND ST-NOTE-STATUS(#i) <> v_St
          ESCAPE TOP
      END-IF
       MOVE EDITED ST-NOTE-DATE_A(#i) TO #d(EM=YYYYMMDD)
      IF v_Pair <> '*' 
          A04_1 := ST-NOTE-STATUS(#i - 1) A04_2 := ST-NOTE-STATUS(#i)
          IF Pair_22 = '*'
             A04_22 := '*'
          END-IF   
          IF A04 <> v_Pair
             ESCAPE TOP
          END-IF      
          stn_S := ST-NOTE-STATUS(#i - 1)
          stn_U := ST-NOTE-USER(#i - 1)
          MOVE EDITED ST-NOTE-DATE_A(#i - 1) TO #dpr(EM=YYYYMMDD)
          stn_dd := #d - #dpr
       ELSE 
          RESET st_Prev #dpr 
       END-IF
         
        #j := #j + 1  
        #k := #k + 1
        IF #k = 22 #k := 1 NEWPAGE END-IF 
        IF #k = 1
           IF NOT l_Sum_Only
              WRITE 2x '  ##' dm '     AT'(AD=I) dm  '       Date'(AD=I) dm 'Usr'(AD=I) dm 'St'(AD=I) dm
                      ' Prev. Date'(AD=I) dm 'Usr'(AD=I) dm  'St'(AD=I) dm ' Dif'(AD=I)
           END-IF 
        END-IF   
        IF NOT l_Sum_Only
           WRITE  2x #j(EM=ZZ9')') dm ID-NUMBER dm #d(EM=LLL-DD-YYYY) dm ST-NOTE-USER(#i) dm ST-NOTE-STATUS(#i)
                dm  #dpr(EM=LLL-DD-YYYY) dm stn_U dm stn_S dm stn_dd 
        END-IF
     END-FOR  
     IF *PF-KEY = 'PF3' ESCAPE BOTTOM END-IF        
  END-FIND
  COMPRESS 'St:' v_St 'Usr:' v_Usr 'Pair:' v_Pair INTO v_Msg
  COMPRESS '[' v_Msg ']' INTO v_Msg  LEAVING NO SPACE  
  COMPRESS v_Msg 'Found' #j  'AT'  ' Period:' d_From '-' d_To  INTO v_Msg
END-SUBROUTINE
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
DEFINE sbr_4 /* Matrix All */
*      ----- 
  FORMAT PS=23
  RESET usr_st(*) usr_#  AllSt(*) AllSt_# status(*,*) v_A(*) mtx(*,*)
  d_To   := *DATX
  v_From := *DATN
  v_DD   := 01
  MOVE EDITED v_From_A TO d_From (EM=YYYYMMDD)
  v_Range := ( d_To - d_From ) + 1  

  INPUT (IP=OFF) *DAT4U 15x '-- Matrix - Users/Status --'(I) 15x  *TIMX ///
      2x 'Date From :' d_From(AD=OI EM=MM/DD/YYYY)                           /
      2x 'Date To   :' d_To(AD=OI EM=MM/DD/YYYY)    5x '(PF1: -1, PF2: +1)' /
      2x 'Range     :' v_Range(AD=OI EM=ZZ9) 'Days' 7x '(PF4: -1, PF5: +1)' //
      2x 'User :'   v_Usr(AD=UML EM=XXX)  3x  '(* - all)'                   //
      2x '-'(78)                                             
      23/2 'PF3 - Exit'
      
  IF *PF-KEY = 'PF3' ESCAPE ROUTINE END-IF 
  PERFORM sbr_PF-Keys
  IF sel = 2 AND v_Usr = ' ' 
     REINPUT 'Enter User/Clerk ID or * for all' 
  END-IF   

  #j := 0
  #k := 0
  MOVE EDITED d_From(EM=YYYYMMDD) TO v_From_A
  MOVE EDITED d_To(EM=YYYYMMDD)   TO v_To_A
  
 FIND AT-V WITH  ACTION-DATE >= v_From /* AND ACTION-DATE <= v_To
  FOR #i = 1 To C*ST-NOTE-TBL
      
      IF ST-NOTE-DATE(#i) < v_From ESCAPE TOP END-IF
      IF ST-NOTE-DATE(#i) > v_To ESCAPE TOP END-IF
      
    IF v_Usr <> '*' AND ST-NOTE-USER(#i) <> v_usr  ESCAPE TOP END-IF

        EXAMINE usr_cd(*) FOR ST-NOTE-USER(#i) GIVING INDEX #u
        IF #u = 0
           usr_# := usr_# + 1
           #u    := usr_#
           usr_cd  (#u) := ST-NOTE-USER(#i)
           usr_cd_#(#u) := 1
        ELSE
           usr_cd_#(#u) := usr_cd_#(#u) + 1
        END-IF
           
        EXAMINE Allst_cd(*) FOR ST-NOTE-STATUS(#i) GIVING INDEX #j
        IF #j = 0 
           Allst_# := Allst_# + 1
           #j   := Allst_#         
           ALLst_cd(#j) := ST-NOTE-STATUS(#i)
           Allst_cd_#(#j) := 1
        ELSE
           Allst_cd_#(#j) := Allst_cd_#(#j) + 1
        END-IF
            
        EXAMINE st_cd(#u, *) FOR ST-NOTE-STATUS(#i) GIVING INDEX #x #y
*        WRITE '='#x '='#y
        IF #y = 0 
           st_#(#u) := st_#(#u) + 1
           #y   := st_#(#u)         
           st_cd  (#u, #y) := ST-NOTE-STATUS(#i)
           st_idx (#u, #y) := #j
           st_cd_#(#u, #y) := 1
        ELSE
           st_cd_#(#u, #y) := st_cd_#(#u, #y) + 1
        END-IF
*        MOVE EDITED ST-NOTE-DATE_A(#i) TO #d(EM=YYYYMMDD)
  END-FOR
 END-FIND
 IF Allst_# = 0 
        WRITE *DATX 3x 'AT-ST-Note by Users'  d_From(AD=I) '-' d_To(AD=I) ':' v_Range(EM=ZZ9) 'Days' /
       'Users:' usr_# 3x 'Status' Allst_# // 
       'Nothing found - hit ENTER to continue(I)'
    ESCAPE ROUTINE
 END-IF   
 

*  WRITE 'Total Users:' usr_#(EM=Z9)
  FOR #i = 1 TO usr_#
*    WRITE  usr_cd(#i)(AD=I) '-' st_#(#i)(AD=I EM=ZZ9)
    FOR #j = 1 TO st_#(#i)
      #k := st_idx(#i,#j)
*      WRITE  st_cd(#i,#j) ':'  st_cd_#(#i,#j)(EM=ZZ9) st_idx(#i,#j) Allst_cd(#k)
    END-FOR
  END-FOR   
  
  FOR #i = 1 TO usr_#
    MOVE RIGHT usr_cd(#i) TO mtx(0,#i)
    FOR #j = 1 TO Allst_#
      mtx(#j,0) := ALLst_cd(#j)
      #k := st_idx(#i,#j)
      IF #k = 0 ESCAPE TOP END-IF
*      PRINT  '='st_cd(#i,#j) Allst_cd(#k)
      MOVE RIGHT st_cd_#(#i,#j) TO mtx(#k,#i)
    END-FOR  
  END-FOR

*  PRINT 'Users:' usr_# 'All.st' Allst_#     /* --db
NEWPAGE 
dm := '|'
FOR #i = 0 TO Allst_# /* usr_#
 v_A(#i) := ' '
 FOR #j = 0 TO usr_#
  COMPRESS FULL
       v_A(#i) mtx(#i,#j) dm
              INTO v_A(#i) LEAVING NO SPACE 
 END-FOR 
END-FOR 
       CALLNAT 'SRTS-A' v_A(1:Allst_#)
 FOR #i = 0 TO Allst_# /* usr_#
   PRINT  v_A(#i)(AD=U)
 END-FOR
 WRITE / *DATX 3x 'AT-ST-Note by Users'  d_From(AD=I) '-' d_To(AD=I) ':' v_Range(EM=ZZ9) 'Days' /
 'Users:' usr_# 3x 'Status' Allst_# /


END-SUBROUTINE
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
DEFINE sbr_5 /* Avrg for Pairs by User */
*      ----- 
  RESET uma(*,*) usr#  
  v_A(*) := ' '
  FOR #i = 1 TO 7
    sell(#i,0) := Pairs(#i)
  END-FOR

  d_To   := *DATX
  v_From := *DATN
  v_DD   := 01
  MOVE EDITED v_From_A TO d_From (EM=YYYYMMDD)
  v_Range := ( d_To - d_From) + 1  

  INPUT (IP=OFF) *DAT4U 5x 'Matrix - Average days for 7 predefined pairs'(I) 5x *TIMX ///
      2x 'Date From :' d_From(AD=OI EM=MM/DD/YYYY)                           /
      2x 'Date To   :' d_To(AD=OI EM=MM/DD/YYYY)    5x '(PF1: -1, PF2: +1)' /
      2x 'Range     :' v_Range(AD=OI EM=ZZ9) 'Days' 7x '(PF4: -1, PF5: +1)' //
      2x 'Pairs:'  sell(1,0)(AD=MU) 
                3x sell(2,0)(AD=MU)
                3x sell(3,0)(AD=MU)
                3x sell(4,0)(AD=MU)
                3x sell(5,0)(AD=MU)                                           
                3x sell(6,0)(AD=MU) 
                3x sell(7,0)(AD=MU)                                            //
      2x '-'(78)                                                             
      23/2 'PF3 - Exit'             
      
  IF *PF-KEY = 'PF3' ESCAPE ROUTINE END-IF 
  PERFORM sbr_PF-Keys

  #j := 0
  #k := 0
  MOVE EDITED d_From(EM=YYYYMMDD) TO v_From_A
  MOVE EDITED d_To(EM=YYYYMMDD)   TO v_To_A
  
 FIND AT-V WITH  ACTION-DATE >= v_From /* AND ACTION-DATE <= v_To
  IF C*ST-NOTE-TBL = 1 ESCAPE TOP END-IF
      
  #N := C*ST-NOTE-TBL - 1
   FOR #i = 1 TO #N
     IF ST-NOTE-DATE(#i + 1) < v_From ESCAPE TOP END-IF
     IF ST-NOTE-DATE(#i + 1) > v_To ESCAPE TOP END-IF
    A04_1 := ST-NOTE-STATUS(#i) A04_2 := ST-NOTE-STATUS(#i + 1)
    IF A04_21 = 'P' A04_22 := '*' END-IF
    EXAMINE sell(*,0) FOR A04 GIVING INDEX #j #y
    IF #j = 0 ESCAPE TOP END-IF
    
    MOVE EDITED ST-NOTE-DATE_A(#i) TO #dpr(EM=YYYYMMDD)
    MOVE EDITED ST-NOTE-DATE_A(#i + 1) TO #d(EM=YYYYMMDD)
    #dd := #d - #dpr
*    PRINT 'OK-2' ST-NOTE-STATUS(#i) ST-NOTE-STATUS(#i + 1) #dd ST-NOTE-USER(#i + 1)
 
    EXAMINE sell(0,*) FOR ST-NOTE-USER(#i + 1) GIVING INDEX #y #x
        IF #x = 0
           usr# := usr# + 1
           #x    := usr#
           sell (0,#x) := ST-NOTE-USER(#i + 1)
        END-IF  
     No(#j,#x) := No(#j,#x) + 1
     summ(#j,#x) := summ(#j,#x) + #dd
   END-FOR 
  END-FIND    

 FOR #i = 1 TO usr#
   FOR #j = 1 TO 7
     IF summ(#j,#i) <> 0
*        PRINT Summ(#j,#i) No(#j,#i) avg(#j,#i)
        avg(#j,#i) := summ(#j,#i) / No(#j,#i)
        MOVE EDITED avg(#j,#i)(EM=Z9.99) TO sell(#j,#i)
     END-IF   
   END-FOR
 END-FOR       
  dm := '|'
  FOR #i = 0 TO usr#
   FOR #j = 0 TO 7
    COMPRESS FULL
       v_A(#i) sell(#j,#i) dm
              INTO v_A(#i) LEAVING NO SPACE 
   END-FOR
  END-FOR    

  FOR #i = 0 TO usr#
    PRINT  v_A(#i)(AD=U)
  END-FOR
  WRITE / *DATX 3x 'AT-ST-Note change duration' d_From(AD=I) '-' d_To(AD=I) ':' v_Range 'Days' /
       'Users:' usr# 

END-SUBROUTINE
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
DEFINE sbr_6
*      ----- 
  d_To   := *DATX
  v_From := *DATN
  v_DD   := 01
  MOVE EDITED v_From_A TO d_From (EM=YYYYMMDD)
v_Range := ( d_To - d_From ) + 1  
  #j := 0  
  INPUT (IP=OFF) *DAT4U 5x 'Report AT-ST-Note for last(current) status'(I) 10x *TIMX //
      2x 'Date From :' d_From(AD=OI EM=MM/DD/YYYY)                           /
      2x 'Date To   :' d_To(AD=OI EM=MM/DD/YYYY)    5x '(PF1: -1, PF2: +1)' /
      2x 'Range     :' v_Range(AD=OI EM=ZZ9) 'Days' 7x '(PF4: -1, PF5: +1)' ///
      '-'(36) 'Help' '-'(36)                                                 // 
      2x 20x 'Columns in the dump:'                                          //
      2x '        Last status          :         Previous status'(I)         /
      2x 'AT : Status :  Date :  User  :  Status  :  Date  : User'(I)        //
      '_'(78)                                                                //
      2x 'Report file:'  'Applications/AT-Status/AT_Status_History.txt'     
      23/2 'PF3 - Exit'             
  IF *PF-KEY = 'PF3' ESCAPE ROUTINE END-IF 
  PERFORM sbr_PF-Keys
  DEFINE WORK FILE 1  f_Rep TYPE 'ASCII-COMPRESSED'
  COMPRESS       *DATX 'AT Status notes history' 'From' d_From 'To' d_To INTO A100
  WRITE WORK FILE 1 A100  
  COMPRESS       dt 'Last' dt dt dt 'Previous' INTO A100
  WRITE WORK FILE 1 A100
  COMPRESS 'AT'  dt 'Status' dt 'Date' dt 'User' dt 'Status' dt 'Date' dt 'User' INTO A100
  WRITE WORK FILE 1 A100
  
  MOVE EDITED d_From(EM=YYYYMMDD) TO v_From_A
  MOVE EDITED d_To(EM=YYYYMMDD)   TO v_To_A
  FIND AT-V WITH  ACTION-DATE >= v_From AND ACTION-DATE <= v_To
    #i := C*ST-NOTE-TBL
    IF #i = 0 ESCAPE TOP END-IF
    #j := #j + 1
    MOVE EDITED ST-NOTE-DATE_A(#i) TO #d(EM=YYYYMMDD)
    IF #i > 1 
     MOVE EDITED ST-NOTE-DATE_A(#i - 1 ) TO #dpr(EM=YYYYMMDD)
     COMPRESS ID-NUMBER dt ST-NOTE-STATUS(#i) dt #d dt ST-NOTE-USER(#i) dt ST-NOTE-STATUS(#i - 1) dt #dpr dt ST-NOTE-USER(#i - 1)  INTO A100 
    ELSE
     COMPRESS ID-NUMBER dt ST-NOTE-STATUS(#i) dt #d dt ST-NOTE-USER(#i) dt  dt  dt   INTO A100 
    END-IF  
    WRITE WORK FILE 1 A100
  END-FIND      
  CLOSE WORK FILE 1
  COMPRESS 'Dump' #j 'records' INTO v_Msg 
  CALLNAT 'FTP-PS' ftp_Parm ftp_Msg ftp_RC
  IF ftp_RC = 0 
    COMPRESS v_Msg 'FTP completed'  INTO v_Msg 
  ELSE 
  COMPRESS v_Msg 'FTP Error' ftp_Msg INTO v_Msg 
  END-IF
END-SUBROUTINE
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
DEFINE sbr_7
*      ----- 
  d_To   := *DATX
  v_From := *DATN
  v_DD   := 01
  MOVE EDITED v_From_A TO d_From (EM=YYYYMMDD)
v_Range := ( d_To - d_From ) + 1  
  #j := 0
  INPUT (IP=OFF) *DAT4U 4x '-- Report AT-ST-Note change history  --'(I)  5x *TIMX //
      2x 'Date From :' d_From(AD=OI EM=MM/DD/YYYY)                          /
      2x 'Date To   :' d_To(AD=OI EM=MM/DD/YYYY)    5x '(PF1: -1, PF2: +1)' /
      2x 'Range     :' v_Range(AD=OI EM=ZZ9) 'Days' 7x '(PF4: -1, PF5: +1)' //
      '-'(36) 'Help' '-'(36)                                                 // 
      2x 20x 'Columns in the dump:'                                          //
      2x '        Last status          :         Previous status'(I)         /
      2x 'AT : Status :  Date :  User  :  Status  :  Date  : User'(I)        /
      '_'(78)                                                                ///
      2x 'Report file:'  'Applications/AT-Status/AT-Status-History_Full.TXT' 
      23/2 'PF3 - Exit'             
  IF *PF-KEY = 'PF3' ESCAPE ROUTINE END-IF 
  PERFORM sbr_PF-Keys
  DEFINE WORK FILE 1  f_Rep_Full TYPE 'ASCII-COMPRESSED'
  COMPRESS       *DATX 'AT Status notes full history' 'From' d_From 'To' d_To INTO A100
  WRITE WORK FILE 1 A100  
  COMPRESS       dt 'Previous'  dt dt dt 'Last' INTO A100
  WRITE WORK FILE 1 A100
  COMPRESS 'AT'  dt 'Status' dt 'Date' dt 'User' dt 'Status' dt 'Date' dt 'User' INTO A100
  WRITE WORK FILE 1 A100
  
  MOVE EDITED d_From(EM=YYYYMMDD) TO v_From_A
  MOVE EDITED d_To(EM=YYYYMMDD)   TO v_To_A
  FIND AT-V WITH  ACTION-DATE >= v_From AND ACTION-DATE <= v_To
    FOR #i =  C*ST-NOTE-TBL TO 1 STEP -1
      IF ST-NOTE-DATE(#i) < v_From ESCAPE TOP END-IF
      IF ST-NOTE-DATE(#i) > v_To ESCAPE TOP END-IF
*       IF ST-NOTE-STATUS(#i) = 'PR'                                 /* --db
*         AND ( v_Usr <> '*' AND ST-NOTE-USER(#i) = v_usr )          /* --db 
*          #db := #db +1                                             /* --db
*          PRINT #db(EM=ZZ9')') ST-NOTE-STATUS(#i)                   /* --db
*                ST-NOTE-DATE(#i) ST-NOTE-USER(#i)                   /* --db 
*       END-IF                                                       /* --db 
      #j := #j + 1
      MOVE EDITED ST-NOTE-DATE_A(#i) TO #d(EM=YYYYMMDD)
      IF #i > 1 
        MOVE EDITED ST-NOTE-DATE_A(#i - 1 ) TO #dpr(EM=YYYYMMDD)
        COMPRESS ID-NUMBER dt ST-NOTE-STATUS(#i - 1) dt #dpr dt ST-NOTE-USER(#i - 1) dt ST-NOTE-STATUS(#i) dt #d dt ST-NOTE-USER(#i) INTO A100 
      ELSE
        COMPRESS ID-NUMBER dt  dt  dt dt  ST-NOTE-STATUS(#i) dt #d dt ST-NOTE-USER(#i)  INTO A100 
      END-IF  
      WRITE WORK FILE 1 A100
    END-FOR
  END-FIND
  CLOSE WORK FILE 1
  COMPRESS 'Full Dump' #j 'records' INTO v_Msg 
  CALLNAT 'FTP-PS' ftp_Parm_Full ftp_Msg ftp_RC        
  IF ftp_RC = 0 
    COMPRESS v_Msg 'FTP completed'  INTO v_Msg 
  ELSE 
  COMPRESS v_Msg 'FTP Error' ftp_Msg INTO v_Msg 
  END-IF
END-SUBROUTINE
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

DEFINE sbr_PF-Keys
  IF *PF-KEY = 'PF1' 
     d_To := d_To - 1  
     IF d_To < d_From d_To := d_From END-IF
     v_Range := d_To - d_From + 1
     REINPUT FULL 'PF1'
  END-IF

  IF *PF-KEY = 'PF2' 
     d_To := d_To + 1 
     IF d_To > *DATX d_To := *DATX END-IF
     v_Range := d_To - d_From + 1
     REINPUT FULL 'PF2' END-IF

  IF *PF-KEY = 'PF4'
     v_Range := v_Range - 1  
     IF  v_Range = 0 v_Range := 1 END-IF
     d_From  := d_To - v_Range + 1 
     REINPUT FULL 'PF4'
  END-IF

  IF *PF-KEY = 'PF5' 
     v_Range := v_Range + 1  
     d_From  := d_To - v_Range  
     REINPUT FULL 'PF5' 
  END-IF
END-SUBROUTINE
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =
DEFINE sbr_Exit
 IF v_Parm <> ' '  
    v_func := 'PROC   '
    v_pgm  := 'G1000PUI'
    STACK TOP DATA v_Parm ' '
    FETCH v_pgm
 ELSE
    ESCAPE MODULE
 END-IF  
END-SUBROUTINE
* = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = = =

END       
