* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*** <@ NATURAL META INFORMATION BEGIN
***
*** @Mode REPORT
***
*** NATURAL META INFORMATION END @>
************************************************************************
* PROGRAM-ID: C1099SXX - select 1099 type
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* PAM  01042006 None Program Written                                   *
* DRW 11/21/2007 DW2 Add Type W (1099-C)                               *
* vxt 04/10/2014 vt1 /Ticket 2655/                                     *
* TMT 11/05/215  TT1 1099 Project                                      *
* vxt 10/19/2016 vt2 /Ticket 4335/                                     *
* bz-Name-C 07/07/2017     Fine Names. Keep all capital
************************************************************************
*
DEFINE DATA
PARAMETER
1 #COMMAND                   (A2)
1 #ID                        (N9)
1 #SUFFIX                    (A3)
1 #INT-1099-KEY              (A13)
1 REDEFINE #INT-1099-KEY
  2 #INT-1099-ID-NUMBER       (N9)
  2 #INT-1099-YYYY            (N4)
  2 REDEFINE #INT-1099-YYYY
    3 #INT-1099-CENT           (N2)
    3 #INT-1099-YY             (A2)
*
1 #YEAR-INT-TYPE-ID-KEY      (A14)
1 REDEFINE #YEAR-INT-TYPE-ID-KEY
  2 #YEAR-INT-YEAR            (N4)
  2 #YEAR-INT-TYPE            (A1)
  2 #YEAR-INT-ID-NUMBER       (N9)
1 #ISN                        (P8)
1 #FACE-AMOUNT                (A10)   /* TT1 BEGIN
1 #DEATH-BENEFIT              (A12)
1 #POLICY-TYPE                (A6)
1 #CLAIMANT-CI                (N8)
1 #DEAD-INSURED-CN            (N6)
1 #SEGMENT                    (I4)
*
LOCAL
1 INT-1099-V VIEW OF A-INT-1099
  2 SSN (N9)
  2 YEAR (N4)
  2 AMOUNT (P9.2)
  2 SSN-TAX-ID-IND (A1)
  2 RELATED-ID-NUMBER (N6)
  2 INT-TYPE (A1)
  2 GROSS-AMT (P9.2)
  2 INSURED (A25)
  2 TYPE-1099 (A4)
  2 POLICY-NUMBER (A16)
  2 SETTLEMENT-TYPE
  2 SETTLEMENT-DATE
  2 REDEFINE SETTLEMENT-DATE
    3 YYYY   (A4)
    3 MM     (A2)
    3 DD     (A2)
  2 DATE-ENTERED (N8)
  2 BANKRUPTCY-IND (A1)
  2 NAME-2 (A25)
  2 SHARE
  2 CONTACT-ID (N8)
  2 CLAIMANT-ID (N8)
  2 FINAL-PAYMENT-DATE  (N8)
  2 owner-ssn (n9)                       /* vt2
*
1 CONTACT VIEW OF A-CONTACTS
  2 CONTACT-ID
  2 DATE-OF-BIRTH
  2 REDEFINE DATE-OF-BIRTH
    3 DOB-YYYY  (N4)
    3 DOB-MM    (N2)
    3 DOB-DD    (N2)
  2 GENDER-CD
  2 SSN
  2 REDEFINE SSN
    3 XXX       (N3)
    3 XX        (N2)
    3 XXXX      (N4)
  2 id-number  (n6)                     /* vt2
*
1 ST-V-2 VIEW OF A-STATUS
  2 ID-NUMBER
  2 POLICY-ID  (9)
  2 ISSUE-DATE (9)
*
1 #NUMBER-SELECTED (I2)
1 #MAX-TB-LINES    (I4) CONSTANT <90>
1 #SELECT                    (A1/#MAX-TB-LINES)
1 #SELECT-CV                 (C/#MAX-TB-LINES)
1 #S-ISN                     (P8/#MAX-TB-LINES)
1 #NAME                      (A25/#MAX-TB-LINES)
1 #RELATION                  (A15/#MAX-TB-LINES)
1 #CHQ-DATE                  (A10/#MAX-TB-LINES)
1 #related-id-number         (n6/#max-tb-lines)            /* vt2
1 #NUMBER                    (N7.2)
1 #CV         (C/1:#MAX-TB-LINES)
1 #SELECT-CV2 (C/1:#MAX-TB-LINES)
1 #TOTAL-LINES(I2)
1 #ID-N6   (N6)
1 #LINES-ON-SCREEN  (I2)     CONSTANT <15>
*
1 #INT-TABLE                 (#MAX-TB-LINES)
  2 #INT-TYPE                 (A1)
  2 #INT-AMOUNT               (N9.2)
  2 #int-pol-nbr              (a16)                        /* vt2  \/
  2 #int-owner-cn             (n6)
  2 #int-owner-name           (a25)
*  2 #INT-DESCRIPTION         (A40)                        /* vt2  /\
*
1 #TB-TABLE
  2 #D                        (A1)   INIT <'D'>
  2 #A                        (A1)   INIT <'A'>
  2 #I                        (A1)   INIT <'I'>
  2 #E                        (A1)   INIT <'E'>
1 REDEFINE #TB-TABLE
  2 #TB-OCC                   (4)
    3 #TB-ENTRY                (A1)
1 #NUM-TB-ENTRIES            (P3)   INIT <4>
1 J (I4)
1 K (I4)
1 #X (N7) INIT <1>
*
1 #SCR-LINE                  (A75/#MAX-TB-LINES)
1 REDEFINE #SCR-LINE
  2 #SCR-OCCURENCES (#MAX-TB-LINES)
    3 #LINE                      (A75)
    3 REDEFINE  #LINE
      4 #SCR-POLICY-NUM   (A16)
      4 #SCR-POLICY-TYPE  (A6)
      4 #SCR-TOTAL-DB     (A12)
      4 #SCR-FILL-1       (A2)
      4 #SCR-POLICY-SHARE (A9)
      4 #SCR-FILL-2       (A2)
      4 #SCR-CLAIMANT-DB  (A12)
      4 #SCR-FILL-3       (A2)
      4 #SCR-SETTLE-CODE  (A2)
      4 #SCR-FILL-4       (A2)
      4 #SCR-SETTLED-DATE (A10)
    3 REDEFINE #LINE
      4 #SCR-NAME         (A25)
      4 #SCR-FILL-5       (A2)
      4 #SCR-RELATION     (A15)
      4 #SCR-FILL-6       (A2)
      4 #SCR-SEX          (A1)
      4 #SCR-FILL-7       (A2)
      4 #SCR-DOB          (A10)
      4 #SCR-FILL-8       (A2)
      4 #SCR-SSN          (A11)
1 #CLAIMANT-CIS           (N8/1:#MAX-TB-LINES)
*
1 #TC-TABLE
  2 #2                        (A1)   INIT <'2'>
  2 #C                        (A1)   INIT <'C'>
  2 #M                        (A1)   INIT <'M'>
  2 #N                        (A1)   INIT <'N'>
  2 #P                        (A1)   INIT <'P'>
  2 #L                        (A1)   INIT <'L'>
1 REDEFINE #TC-TABLE
  2 #TC-OCC                   (6)
    3 #TC-ENTRY               (A1)
1 #NUM-TC-ENTRIES            (P3)   INIT <6>
1 #TW-ENTRY                  (A1) CONST <'W'>
*
1 #LETTER          (A7) CONST <'!LETTER'>            /* bz-Name
1 Letter           (A) DYNAMIC
*
1 ST-V VIEW OF A-STATUS
  2 MEMBER-CONTACT-ID
1 #I1                        (I2)
1 #I2                        (I2)
1 #SELECTION-FOUND           (L)
1 #TB-REQUEST                (L)
1 #ADD-A-NEW-INT-TYPE        (A1)
1 #TYPE                      (A8)
1 #TEXT                      (A70)
1 I (I4)
* 1 #POLICIES   (A16/1:*)
1 #CLAIMANT-IDS (N8/1:*)
1 #CONTACT-ID   (N8)
1 #SEGMENTS (I4/1:#MAX-TB-LINES)
1 #LINE-NUM   (I2)
1 #FIR-SEGMENT   (I4)
*
1 FR-V VIEW OF A-FIRS
  2 ID-NUMBER
  2 DEAD-GROSS-DB  (9)
  2 POL-DATE       (9)
*
1 #CVALUSXX-PARMS
  2 #SUFFIX-CVAL               (A3)
  2 #AS-OF-YYYYMMDD            (N8)
  2 #LOAN-BAL                  (N7.2/9)
  2 #LOAN-BAL-2                (N7.2/9)
  2 #ACC-INT                   (N7.2/9)
  2 #ACC-INT-2                 (N7.2/9)
  2 #CSV                       (N7.2/9)
  2 #CVALUE                    (N7.2/9)
  2 #LVALUE                    (N7.2/9)
  2 #MCSV                      (N7.2/9)
  2 #DB                        (N7.2/9)
  2 #ANN-PREM                  (N7.2/9)
  2 #FACE-AMT                  (N7.2/9)
  2 #TPP                       (N7.2/9) /* TT1 END
*
1 #first-name   (a25)                        /* vt2  \/
1 #middle-name  (a25)
1 #last-name    (a25)
1 #suffix-n     (a10)
1 #insured-name  (a70)
1 #text-tot-amt  (a35)
1 #tot-amt       (n9.2)
1 #tot-amt-a     (a12)                        /* vt2 /\

END-DEFINE
*
************************************************************************
*
* DEFINE WINDOW LIST-1099                /* TT1 BEGIN
*   SIZE 24 * 75
*   BASE TOP LEFT
*   FRAMED ON POSITION SYMBOL AUTO       /* TT1 END
*
SET KEY PF3  NAMED 'Exit'

DEFINE ADD-CONTACT
/*     ===========
IF INT-1099-V.POLICY-NUMBER = ' ' AND #COMMAND = 'TB'                  /*TT1 BEGIN
  ESCAPE ROUTINE
END-IF
ADD +1 TO #LINE-NUM
#S-ISN (#LINE-NUM) := #ISN
MOVE (AD=NV) TO #SELECT-CV (#LINE-NUM)
MOVE INT-1099-V.INT-TYPE            TO #INT-TYPE (#LINE-NUM)
MOVE INT-1099-V.AMOUNT              TO #INT-AMOUNT (#LINE-NUM)
add  #int-amount(#line-num) to #tot-amt                                                /* vt2
move int-1099-v.policy-number       to #int-pol-nbr(#line-num)                         /* vt2  \/
#int-owner-cn(#line-num)            := F-GET-CN(<INT-1099-V.CLAIMANT-ID>)
move int-1099-v.related-id-number   to #related-id-number (#line-num)                  /* vt2
#int-owner-name(#line-num)          := FUNCTION-POCB(<int-1099-v.claimant-id>)
* DECIDE FOR FIRST CONDITION
*   WHEN #INT-TYPE (#LINE-NUM) = 'L'
*     MOVE 'Loans Treated as a Distribution' TO #INT-DESCRIPTION (#LINE-NUM)
*   WHEN #INT-TYPE (#LINE-NUM) = '2'
*     MOVE 'Cash Value - 1035 Exchange     ' TO #INT-DESCRIPTION (#LINE-NUM)
*   WHEN #INT-TYPE (#LINE-NUM) = 'C'
*     MOVE 'Cash Value Surrender           ' TO #INT-DESCRIPTION (#LINE-NUM)
*   WHEN #INT-TYPE (#LINE-NUM) = 'M'
*     MOVE 'MEC Interest                   ' TO #INT-DESCRIPTION (#LINE-NUM)
*   WHEN #INT-TYPE (#LINE-NUM) = 'N'
*     MOVE 'Annuitant Interest             ' TO #INT-DESCRIPTION (#LINE-NUM)
*   WHEN #INT-TYPE (#LINE-NUM) = 'P'
*     MOVE 'Pension                        ' TO #INT-DESCRIPTION (#LINE-NUM)
*   WHEN #INT-TYPE (#LINE-NUM) = 'D'
*     MOVE 'Annuitant Interest             ' TO #INT-DESCRIPTION (#LINE-NUM)
*   WHEN #INT-TYPE (#LINE-NUM) = 'A'
*     MOVE 'Death Benefit Interest         ' TO #INT-DESCRIPTION (#LINE-NUM)
*   WHEN #INT-TYPE (#LINE-NUM) = 'I'
*     MOVE 'Interest                       ' TO #INT-DESCRIPTION (#LINE-NUM)
*   WHEN #INT-TYPE (#LINE-NUM) = 'E'
*     MOVE 'Escrow Interest                ' TO #INT-DESCRIPTION (#LINE-NUM)
*   WHEN #INT-TYPE (#LINE-NUM) = 'W'                                           /* DW2
*     MOVE 'CAP Loan Write-Off             ' TO #INT-DESCRIPTION (#LINE-NUM)
*   WHEN NONE
*     MOVE 'Unknown                        ' TO #INT-DESCRIPTION (#LINE-NUM)
* END-DECIDE                                                                              /* vt2  /\
IF #TB-REQUEST
  COMPRESS FULL MM '/'DD '/' YYYY '/'INTO #SCR-SETTLED-DATE(#LINE-NUM) LEAVING NO
  #SCR-POLICY-NUM(#LINE-NUM)      := INT-1099-V.POLICY-NUMBER
  #SCR-POLICY-TYPE(#LINE-NUM)     := GET-POLICY-TYPE(<#SCR-POLICY-NUM(#LINE-NUM),INT-1099-V.CONTACT-ID>)
  #SCR-POLICY-SHARE(#LINE-NUM)    := *TRIM(INT-1099-V.SHARE)
  MOVE EDITED GROSS-AMT (EM=ZZZ,ZZ9.99) TO #SCR-CLAIMANT-DB(#LINE-NUM)
  PERFORM TRANSLATE-SET-OPTIONS
  RESET #SEGMENT #SCR-TOTAL-DB(#LINE-NUM)
  EXAMINE FULL ST-V-2.POLICY-ID(*) FOR FULL INT-1099-V.POLICY-NUMBER GIVING INDEX #SEGMENT
  IF #SEGMENT > 0
    #SEGMENTS(#LINE-NUM) := #SEGMENT
    FOR K 1 TO 9
      if k = #segment            /* vt 02/05/2018
        IF FR-V.POL-DATE(K) = ST-V-2.ISSUE-DATE(#SEGMENT)
          MOVE EDITED DEAD-GROSS-DB(K) (EM=Z,ZZZ,ZZ9.99) TO #SCR-TOTAL-DB(#LINE-NUM)
          ESCAPE BOTTOM
        END-IF
      end-if                   /* vt 02/05/2018
    END-FOR
  END-IF
END-IF                                                                             /* TT1 END
END-SUBROUTINE
*
MOVE (AD=P) TO #SELECT-CV (*)
RESET #INT-TABLE (*) #I1 #TB-REQUEST
*
if #id gt 500000                                                /* vt2  \/
  if #command = 'TC'
    find int-1099-v with owner-ssn = #id
      move int-1099-v.related-id-number  to #id-n6
      move int-1099-v.ssn                to #INT-1099-id-number
    end-find
  end-if
else                                                            /* vt2  /\
  #ID-N6 := #ID                                  /* TT1
end-if                                                          /* vt2
*
#CONTACT-ID   := F-GET-CONTACT-ID(<#ID-N6>)    /* TT1
#insured-name := FUNCTION-FRM-NAME(<int-1099-v.contact-id,#FIRST-NAME,#MIDDLE-NAME,#LAST-NAME,#SUFFIX-n>)      /* vt2
PERFORM GET-CVALUSXX                           /* TT1
PERFORM GET-FIR
*
DECIDE ON FIRST VALUE OF #COMMAND
  VALUE 'TB'
    MOVE TRUE TO #TB-REQUEST
    IF #ID > 500000
      FIND INT-1099-V WITH ID-NUMBER-YEAR-KEY = #INT-1099-KEY
        IF NO RECORDS FOUND
          IGNORE
        END-NOREC
        RESET #TYPE
        IF CLAIMANT-ID > 0
          MOVE '1099-INT' TO #TYPE
          FOR #I2 1 TO #NUM-TB-ENTRIES
            IF INT-1099-V.INT-TYPE = #TB-ENTRY (#I2)
              #ISN := *ISN (0323)              /*TT1
              PERFORM ADD-CONTACT
              ESCAPE BOTTOM
            ELSE
              ESCAPE TOP
            END-IF
          END-FOR
        END-IF
      END-FIND
    ELSE
      ADD 1 TO I                                        /* TT1 BEGIN
      EXPAND ARRAY #CLAIMANT-IDS TO (1:I)
      FIND INT-1099-V WITH RELATED-ID-NUMBER = #ID
        IF NO RECORDS FOUND
          IGNORE
        END-NOREC
        ACCEPT IF INT-1099-V.INT-TYPE = 'A'
        ACCEPT IF INT-1099-V.POLICY-NUMBER <> ' '
        IF INT-1099-V.CLAIMANT-ID = #CLAIMANT-IDS(*)
          ESCAPE TOP
        ELSE
          #CLAIMANT-IDS(I) := INT-1099-V.CLAIMANT-ID
          ADD 1 TO I
          EXPAND ARRAY #CLAIMANT-IDS TO (1:I)
        END-IF
      END-FIND
      FOR J 1 TO I
        IF #CLAIMANT-IDS(J) = 0
          ESCAPE TOP
        END-IF
        PERFORM CREATE-CLAIMANT-LINE
        FIND INT-1099-V WITH RELATED-ID-NUMBER = #ID
            AND INT-1099-V.CLAIMANT-ID = #CLAIMANT-IDS(J)
          IF NO RECORDS FOUND
            ESCAPE BOTTOM
          END-NOREC                                     /* TT1 END
          RESET #TYPE
          IF CLAIMANT-ID > 0
            MOVE '1099-INT' TO #TYPE
            FOR #I2 1 TO #NUM-TB-ENTRIES
              IF INT-1099-V.INT-TYPE = #TB-ENTRY (#I2)
                #ISN := *ISN (0363)
                PERFORM ADD-CONTACT
                ESCAPE BOTTOM
              ELSE
                ESCAPE TOP
              END-IF
            END-FOR
          END-IF
        END-FIND
      END-FOR
*       FIND INT-1099-V WITH RELATED-ID-NUMBER = #ID          /* TT1 BEGIN
*         IF NO RECORDS FOUND
*           IGNORE
*         END-NOREC
*         RESET #TYPE
*         IF CLAIMANT-ID > 0
*           MOVE '1099-INT' TO #TYPE
*           FOR #I2 1 TO #NUM-TB-ENTRIES
*             IF INT-1099-V.INT-TYPE = #TB-ENTRY (#I2)
*               #ISN := *ISN (0383)
*               PERFORM ADD-CONTACT
*               ESCAPE BOTTOM
*             ELSE
*               ESCAPE TOP
*             END-IF
*           END-FOR
*         END-IF
*       END-FIND                                              /* TT1 END
    END-IF
  VALUE 'TC'
    IF #ID > 500000
      FIND INT-1099-V WITH ID-NUMBER-YEAR-KEY = #INT-1099-KEY
        IF NO RECORDS FOUND
          IGNORE
        END-NOREC
        MOVE '1099-R' TO  #TYPE
        FOR #I2 1 TO #NUM-TC-ENTRIES
          IF INT-1099-V.INT-TYPE = #TC-ENTRY (#I2)
            #ISN := *ISN (0404)
            PERFORM ADD-CONTACT
            ESCAPE BOTTOM
          ELSE
            ESCAPE TOP
          END-IF
        END-FOR
      END-FIND
    ELSE
      FIND INT-1099-V WITH RELATED-ID-NUMBER = #ID
        IF NO RECORDS FOUND
          IGNORE
        END-NOREC
        IF INT-1099-V.YEAR = #INT-1099-YYYY
          MOVE '1099-R' TO  #TYPE
          FOR #I2 1 TO #NUM-TC-ENTRIES
            IF INT-1099-V.INT-TYPE = #TC-ENTRY (#I2)
              #ISN := *ISN (0420)
              PERFORM ADD-CONTACT
              ESCAPE BOTTOM
            ELSE
              ESCAPE TOP
            END-IF
          END-FOR
        END-IF
      END-FIND
    END-IF
  VALUE 'TW'
    IF #ID GE 500000
      FIND INT-1099-V WITH ID-NUMBER-YEAR-KEY = #INT-1099-KEY
        IF NO RECORDS FOUND
          ESCAPE BOTTOM
        END-NOREC
        IF INT-1099-V.INT-TYPE = #TW-ENTRY
          MOVE '1099-C' TO  #TYPE
          #ISN := *ISN (0440)
          PERFORM ADD-CONTACT
        END-IF
      END-FIND
    ELSE
      FIND INT-1099-V WITH RELATED-ID-NUMBER = #ID
        IF NO RECORDS FOUND
          FIND ST-V WITH ID-NUMBER = #ID
            #YEAR-INT-ID-NUMBER := ST-V.MEMBER-CONTACT-ID
          END-FIND
          ESCAPE BOTTOM
        END-NOREC
        IF INT-1099-V.YEAR = #INT-1099-YYYY
            AND INT-1099-V.INT-TYPE = #TW-ENTRY
          MOVE '1099-C' TO  #TYPE
          #ISN := *ISN (0451)
          PERFORM ADD-CONTACT
        END-IF
      END-FIND
    END-IF
  NONE VALUE
    COMPRESS #COMMAND 'is not supported'  INTO #TEXT
END-DECIDE
*
* SET WINDOW 'LIST-1099'
RESET #TEXT
*
IF #LINE-NUM > #LINES-ON-SCREEN             /* TT1 BEGIN
  SET KEY PF7 NAMED 'PgUp'
  SET KEY PF8 NAMED 'PgDwn'
END-IF                                      /* TT1 END
*
MOVE '*' TO #COMMAND
reset #text-tot-amt                                                        /* vt2
IF #LINE-NUM = 0                            /* TT1
  COMPRESS 'No' #TYPE 'entries found for' #INT-1099-YYYY INTO #TEXT
  IF #TB-REQUEST
    INPUT TEXT #TEXT MARK *#ADD-A-NEW-INT-TYPE USING MAP 'C1099MTB'
  ELSE
    MOVE 'X' TO #ADD-A-NEW-INT-TYPE
    INPUT TEXT #TEXT MARK *#ADD-A-NEW-INT-TYPE USING MAP  'C1099MXX'
  END-IF
ELSE
  COMPRESS 'Please select an interest type to modify'
    'or add a new interest type' INTO #TEXT
  IF #TB-REQUEST
    INPUT TEXT #TEXT MARK *#SELECT (1) USING MAP 'C1099MTB'
  ELSE
    if #id > 500000
      move edited #tot-amt (em=z,zzz,z99.99) to #tot-amt-a                        /* vt2   \/
      compress 'Total taxable amount:' #tot-amt-a into #text-tot-amt
    end-if                                                                        /* vt2   /\
    INPUT TEXT #TEXT MARK *#SELECT (1) USING MAP 'C1099MXX'
  END-IF
END-IF
*
XXX.                                                       /* TT1 BEGIN
REPEAT
  DECIDE ON FIRST VALUE OF *PF-KEY
    VALUE 'PF3'
      MOVE 'GM' TO #COMMAND
      FETCH 'G1000PXX'
    VALUE 'ENTR'
      RESET #NUMBER-SELECTED
      FOR #I1 1 TO #MAX-TB-LINES
        IF #SELECT (#I1) NE ' '
          ADD 1 TO #NUMBER-SELECTED
        END-IF
      END-FOR
      IF #NUMBER-SELECTED >= 2
        #TEXT := 'Can only select one policy/claimant at a time'
        REINPUT WITH TEXT #TEXT
      ELSE
        ESCAPE BOTTOM (XXX.)
      END-IF
    VALUE 'PF7'
      IF (#X - #LINES-ON-SCREEN) <= 0
        #X := 1
        INPUT TEXT #TEXT MARK *#SELECT (#X) USING MAP 'C1099MTB'
      ELSE
        #X := #X - #LINES-ON-SCREEN
        INPUT TEXT #TEXT MARK *#SELECT (#X) USING MAP 'C1099MTB'
      END-IF
    VALUE 'PF8'
      IF ((#X + #LINES-ON-SCREEN) > #MAX-TB-LINES) OR (#X + 15) > #LINE-NUM
        INPUT TEXT #TEXT MARK *#SELECT (#X) USING MAP 'C1099MTB'
      ELSE
        ADD #LINES-ON-SCREEN TO #X
        INPUT TEXT #TEXT MARK *#SELECT (#X) USING MAP 'C1099MTB'
      END-IF
    NONE
      IGNORE
  END-DECIDE
END-REPEAT                                                    /* TT1 END
*
IF #COMMAND = '*'
  RESET #SELECTION-FOUND
  FOR #I1 1 TO #MAX-TB-LINES                                  /* TT1
    IF #SELECT (#I1) NE ' '
      if #id GT 500000  and                                                    /* vt2  \/
          #command = '*'
        move  #related-id-number(#i1) to #year-int-id-number
      else                                                                     /* vt2  /\
        move #INT-1099-ID-NUMBER TO #YEAR-INT-ID-NUMBER
      end-if                                                                   /* vt2
      MOVE #INT-1099-YYYY      TO #YEAR-INT-YEAR
      MOVE #INT-TYPE (#I1)     TO #YEAR-INT-TYPE
      MOVE #S-ISN (#I1)        TO #ISN
      MOVE TRUE                TO #SELECTION-FOUND
      #DEATH-BENEFIT     := #SCR-TOTAL-DB(#I1)                /* TT1
      #POLICY-TYPE       := #SCR-POLICY-TYPE(#I1)             /* TT1
      #CLAIMANT-CI       := #CLAIMANT-CIS(#I1)                /* TT1
      #DEAD-INSURED-CN   := #ID-N6                            /* TT1
      #SEGMENT           := #SEGMENTS(#I1)                    /* TT1
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF NOT #SELECTION-FOUND
      AND #ADD-A-NEW-INT-TYPE = ' '
    MOVE 'Please make a selection' TO #TEXT
    REINPUT WITH TEXT #TEXT
  END-IF
END-IF
*
if #add-a-new-int-type = 'X'     /* vt1 \/
  if #command = '*' and   #ID > 500000                             /* vt2   \/
    move 'Cannot perform function when using SSN. Use CN instead' to #text
    reinput with text #text
  else                                                             /* vt2  /\
    reset #isn
  end-if                                                           /* vt2
end-if                           /* vt1 /\
*
* SET WINDOW OFF
*
DEFINE SUBROUTINE CREATE-CLAIMANT-LINE                                    /* TT1 Begin
* ----------------------------------
RESET #NUMBER
ADD 1 TO #LINE-NUM
Letter := #LETTER
CALLNAT 'GPRS0CNT' #CLAIMANT-IDS(J) Letter
#SCR-NAME(#LINE-NUM)     := Letter
#SCR-RELATION(#LINE-NUM) := GET-RELATION-R (< #CONTACT-ID, #CLAIMANT-IDS(J)  >)
#CLAIMANT-CIS(#LINE-NUM) := #CLAIMANT-IDS(J)
*
FIND(1) CONTACT WITH CONTACT-ID = #CLAIMANT-IDS(J)
  IF NO RECORDS FOUND
    ESCAPE BOTTOM
  END-NOREC
  COMPRESS FULL DOB-MM '/' DOB-DD '/' DOB-YYYY INTO #SCR-DOB(#LINE-NUM) LEAVING NO
  COMPRESS FULL XXX '-' XX '-' XXXX            INTO #SCR-SSN(#LINE-NUM) LEAVING NO
  #SCR-SEX(#LINE-NUM) := GENDER-CD
END-FIND
#CV     (#LINE-NUM)  := (AD=I)
*
END-SUBROUTINE
* ------------

DEFINE SUBROUTINE GET-CVALUSXX
* ----------------------------

FIND(1) ST-V-2 WITH ID-NUMBER = #ID-N6
END-FIND
*
CALLNAT 'CVALUSXX'
  #ID-N6
  #SUFFIX-CVAL
  #AS-OF-YYYYMMDD
  #LOAN-BAL   (*)
  #LOAN-BAL-2 (*)
  #ACC-INT    (*)
  #ACC-INT-2  (*)
  #CSV        (*)
  #CVALUE     (*)
  #LVALUE     (*)
  #MCSV       (*)
  #DB         (*)
  #ANN-PREM   (*)
  #FACE-AMT   (*)
  #TPP        (*)
END-SUBROUTINE
* ------------

* Temporary -2
DEFINE SUBROUTINE TRANSLATE-SET-OPTIONS
* -----------------------------------------------
DECIDE ON FIRST VALUE SETTLEMENT-TYPE
  VALUE '7'
    #SCR-SETTLE-CODE(#LINE-NUM) := 'A1'
  VALUE '9'
    #SCR-SETTLE-CODE(#LINE-NUM) := 'A2'
  VALUE '5'
    #SCR-SETTLE-CODE(#LINE-NUM):= 'IO'
  VALUE '2'
    #SCR-SETTLE-CODE(#LINE-NUM):= 'L1'
  VALUE '3'
    #SCR-SETTLE-CODE(#LINE-NUM):= 'L2'
  VALUE '4'
    #SCR-SETTLE-CODE(#LINE-NUM):= 'L3'
  VALUE '1'
    #SCR-SETTLE-CODE(#LINE-NUM):= 'LA'
  VALUE '8'
    #SCR-SETTLE-CODE(#LINE-NUM):= 'LT'
  VALUE '6'
    #SCR-SETTLE-CODE(#LINE-NUM):= 'LS'
  NONE VALUE
    #SCR-SETTLE-CODE(#LINE-NUM):= ' '
END-DECIDE
*
END-SUBROUTINE                                                      /* TT1 END
* ------------


DEFINE SUBROUTINE GET-FIR
* -----------------------
FIND(1) FR-V WITH ID-NUMBER = #ID-N6
END-FIND
END-SUBROUTINE
* ------------

END
