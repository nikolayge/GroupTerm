* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
************************************************************************
* PROGRAM-ID: NEWAUDT - (clone of ATHPAUDT).                           *
*                                                                      *
* FUNCTION  :  The program reads a list of ID'S in CN order and prints *
*            a loan audit report. The input file contains file with    * 
*            random selected CNs provided by the users.                *
*                                                                      *
************************************************************************
*                       MODIFICATION LOG                               *
* USER   DATE      TAG     REASON                                      *
* vxt 11/20/2014   vt1    2014 Created/modified                        *
* vxt 11/27/2015   vt2    2015 Audit changes                           * 
* vxt 11/10/2016   vt3    2016 Audit changes                           *
* vxt 10/19/2017   vt4    2017 Audit changes /Ticket 6084/             *
************************************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING G3500AAD
LOCAL
*
* * * *   S T A T U S   F I L E   * * * * * * * * * * * * * * *
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER      (N6)
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A  (A6)
  2 MEMBER-CONTACT-ID          
  2 LINKED-CN     (1)
  2 REDEFINE LINKED-CN
    3 LINKED-CN-A (A6/1)
  2 INTRO-FLAG
  2 NAME           (A25)
  2 X-LOAN-AMOUNT    (P5.2/9)
  2 X-LOAN-AMOUNT-2  (P7.2/9)
  2 MILITARY-STATUS
  2 MILITARY-SERVICE              
  2 RANK
  2 STATUS      (9)
  2 PAY-STATUS  (9)
  2 NUM-MBRSHIPS (9)
  2 ISSUE-DATE  (9)
  2 SPLIT-IND   (9)
  2 FACE-AMOUNT (9)
  2 OWNERSHIP-FLAG (9)
  2 PLAN        (9)
  2 REDEFINE PLAN
    3 PLAN-OCC  (9)
      4 PLAN-A1  (A1)
      4 PLAN-A2  (A2)
  2 REDEFINE PLAN /* PM2
    3 PLAN-OCC-2 (9)
      4 PLAN-A-2 (A2)
      4 PLAN-A-1 (A1)
  2 ANNUAL-PREM (9)
  2 MODE        (9)
*
1 #IN-RECD
  2 #IR-KEY            (A1)     
  2 #IR-ID             (A6)
*
1 #CNT-2              (N5)    
1 #TYPE               (A35)    
1 #LAST-KEY           (A1)     
1 #TOT-BY-KEY         (N5)     
1 #TOT-FACE           (N7.2)   
1 #TOT-TOT-FACE       (N9.2)   
1 #TOT-LOANS          (N7.2)
1 #DOB                (A10)
1 #I1                 (I2)
1 #I2                 (I2)
1 #I3                 (I2)
1 #I4                 (I2)
1 #I5                 (I2)
1 #POL-NUM            (A16/6)
1 #FACE               (A10/6)
1 #PLAN-1             (A10/6)
1 #PLAN-2             (A10/6)
1 #PREMIUM            (A10/6)
1 #FREQ-1             (A15/6)   
1 #FREQ-2             (A15/6)   
1 #INSURED-NAME       (A70)     
1 #INSURED-DOB        (A10)    
*
1 #F-LBL         (A22)
1 #F-LOAN        (A10/6)
1 REDEFINE #F-LOAN
  2 #F-LOAN-OCC   (6)
    3 #F-LOAN-D     (A1)
    3 #F-LOAN-N     (A9)
*
1 #V-LBL         (A22)
1 #V-LOAN        (A10/6)
1 REDEFINE #V-LOAN
  2 #V-LOAN-OCC   (6)
    3 #V-LOAN-D     (A1)
    3 #V-LOAN-N     (A9)
*
1 #MOD-PREM           (P5.2)
*
1 #F-ID          (A8)
1 #F-NAME        (A45)
1 #F-ADDR-1      (A25)
1 #F-ADDR-2      (A45)
1 #F-ADDR-3      (A45)
1 #F-ZIP         (A10)
*
1 #RET      (A3)
1 #DEL      (A1) CONST <','>
1 #DELL      (A1)
* 1 #LAST-NAME  (A25)
1 #FIRST/MID   (A25)
1 #SUFFIX      (A25)
1 #HOLD-FIRST-NAME    (A45)
1 #HOLD-INTER-NAME    (A45)
1 #HOLD-NAME    (A45)
1 #Z-HYPH         (A1)
*
1 #TAB       (A1) INIT <H'09'>     
1 #EXTRACT-RECORD     (A300)
1 #FACE-X   (A12)     
1 #LOANS-X  (A12)
*
1 #SUFFIX-3   (A3)                 
1 REDEFINE #SUFFIX-3
  2 #SUFFIX-2   (A2)
  2 #SUFFIX-X   (N1)
1 #AS-OF-DT   (N8)
1 #LOAN-BAL   (N7.2/9)
1 #LOAN-BAL-2 (N7.2/9)
1 #ACC-INT    (N7.2/9)
1 #ACC-INT-2  (N7.2/9)
1 #CSV        (N7.2/9)
1 #CVALUE     (N7.2/9)
1 #LVALUE     (N7.2/9)
1 #MCSV       (N7.2/9)
1 #DB         (N7.2/9)
1 #ANN-PREMIUM (N7.2/9)
1 #FACE-AMT    (N7.2/9)
1 #TPP         (N7.2/9)
1 #CSV-P      (P7.2/9)                    
*
1 P_GPRS0CNT                               
  2 P_CID    (N8)
  2 P_NAME   (A)  DYNAMIC
  2 P_DOB_N  (N8)
  2 P_DOB    (A10)
*
1 #PARM-BENEFICIARY-INFORMATION
  2 ##CGA-ISN               (P8)
  2 ##CGA-SCR-COMMAND       (A2)
  2 ##CGA-SCR-ID            (N9)
  2 ##CGA-ID                (N6)
  2 ##CGA-SCR-SUFFIX        (A3)
  2 ##POLICY-PRINT          (L)
*
1 #BENEFICIARY-INFORMATION
  2 ID-NUMBER                (N6)
  2 NOTE-DATE               (N8/60)     /* LET P/A = PRIMARY/ALTERNATE DESING
  2 NOTE-TEXT               (A60/60)
  2 REDEFINE NOTE-TEXT /* below layout must match E4750SBD
    3 NT-CN                  (N6)
    3 NT-ISS-DT              (N8)
    3 NT-PLAN                (A3)
    3 NT-TYPE                (A1)        /* bene-type of primary bene
    3 NT-NEW-LAYOUT          (A1)        /* new layout indicator of primar
    3 NT-NUM-LINES           (N3)        /* # of lines entered below
    3 NT-BENE-SHO            (A79/40)
    3 REDEFINE NT-BENE-SHO
      4 NT-BENE-SHO-OCC       (40)
        5 NT-BENE-SHO-1ST-1    (A1)        /* "~" indicates raw new format
        5 NT-BENE-SHO-AFTER-1  (A78)       /* bene data
*
1 #BENEFICIARY-LINES        (A78/40)
1 #ST-ISN                   (N8)
1 #FOUND-1RST-LINE          (L)          
*
1 DATE-OF-BIRTH   (N8.0)         
1 REDEFINE DATE-OF-BIRTH         
  2 DOB-YYYY   (N4)              
  2 DOB-MM     (N2)              
  2 DOB-DD     (N2)              
END-DEFINE
************************************************************************
*
* DEFINE WORK FILE 1 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/YE_SIDEXTR.COMB.223.TXT' TYPE 'ASCII'
* DEFINE WORK FILE 2 '/usr/SAG/AAFMAA/batch/workfiles/SYSDA/ATH/YE_CONF_DETAIL.COMB.223.TXT' TYPE 'ASCII'
*
FORMAT (2) PS=55 LS=133
WRITE (2) TITLE LEFT
  40T 'AAFMAA' 91T 'PAGE'
  96T *PAGE-NUMBER(2)
  / 40T '         2017 POLICY/LOAN AUDIT REPORT' /  /* vt1 was 2013   /* vt2 was 2014  /* vt3 was 2015 /* vt4 was 2016 

COMPRESS 'Detail of Year-End Confirmations' INTO #EXTRACT-RECORD
WRITE WORK 2 #EXTRACT-RECORD
*
COMPRESS 'CN'                
  #TAB 'Type'
  #TAB 'Name'
  #TAB 'OWNER-CN'
  #TAB 'MIL-ID'            
  #TAB 'MIL-ST'             
  #TAB 'TOT/LOANS'
  #TAB 'TOT/FACE'
  INTO #EXTRACT-RECORD LEAVING NO
WRITE WORK 2 #EXTRACT-RECORD
*
READ WORK 1 RECORD #IN-RECD
  IF   (#IR-KEY NE #LAST-KEY)                      
      AND (#LAST-KEY NE ' ')
    PERFORM TOTAL-PRINT
  END-IF
*
  MOVE #IR-KEY TO #LAST-KEY
  ADD 1 TO #TOT-BY-KEY
*
  DECIDE ON FIRST VALUE #IR-KEY          
    VALUE 'A' MOVE 'High-TERM-No-Loan'         TO #TYPE
    VALUE 'B' MOVE 'High-W/L-No-Loan'          TO #TYPE
    VALUE 'C' MOVE 'High-W/L With-Loan'        TO #TYPE
    VALUE 'D' MOVE 'CAP with Loan'             TO #TYPE
    VALUE 'E' MOVE 'High NON-CAP with Loan'    TO #TYPE
    VALUE 'F' MOVE 'Trade-Ups'                 TO #TYPE
    VALUE 'G' MOVE 'Ext 1035 Exchange'         TO #TYPE        
    value 'H' move 'Random-TERM-NO-Loan'       to #type               /* vt \/
    value 'I' move 'Random-W/L-No-Loan'        to #type
    value 'J' move 'Random-W/L With-Loan'      to #type
    value 'K' move 'Random-CAP with Loan'      to #type
    value 'L' move 'Random NON-CAP with loans' to #type               /* vt /\
    NONE      MOVE 'Unknown Type'       TO #TYPE
  END-DECIDE
*
  FIND (1) ST-V WITH MEMBER-KEY = #IR-ID
*
    RESET #POL-NUM (*) #FACE (*) #PLAN-1 (*) #PLAN-2 (*)
      #PREMIUM (*) #FREQ-1  (*) #FREQ-2  (*)
*
    RESET #INSURED-NAME #INSURED-DOB                  /* PM14
*
    RESET #F-LOAN (*)  #V-LOAN (*) #F-LBL #V-LBL
    RESET #I2
    RESET #TOT-FACE #TOT-LOANS
*
    MOVE ST-V.FACE-AMOUNT (*) TO #FACE-AMT (*)        /* DW9
    MOVE *DATN TO #AS-OF-DT
    MOVE 'NTP' TO #SUFFIX-3 /* do not replace w tpp
    CALLNAT 'CVALUSXX'    /* Get possibly lowered LT Death Benefit
      ST-V.ID-NUMBER
      #SUFFIX-3
      #AS-OF-DT
      #LOAN-BAL   (1:9)
      #LOAN-BAL-2 (1:9)
      #ACC-INT    (1:9)
      #ACC-INT-2  (1:9)
      #CSV        (1:9)
      #CVALUE     (1:9)
      #LVALUE     (1:9)
      #MCSV       (1:9)
      #DB         (1:9)
      #ANN-PREMIUM  (1:9)
      #FACE-AMT   (1:9)
      #TPP        (1:9)       /* END DW9
*
    RESET P_GPRS0CNT                    
    P_CID := ST-V.MEMBER-CONTACT-ID     
    CALLNAT 'GPRS0CNT'                  
      P_GPRS0CNT                        
    #INSURED-DOB  := P_DOB              
    #ST-ISN       := *ISN               
*
    FOR #I1 1 TO 9  /* ATHPAUDS bypasses if over 3 pols
      IF STATUS (#I1) NE 'D'
        ESCAPE TOP
      END-IF
      ADD 1 TO #I2
      ADD #FACE-AMT (#I1) TO #TOT-FACE         
      ADD #FACE-AMT (#I1) TO #TOT-TOT-FACE     
*
      CALLNAT 'GPLNMSXX' #POL-NUM (#I2) ST-V.ID-NUMBER #I1 /* build POL-#
*
      MOVE EDITED #FACE-AMT (#I1) (EM=ZZZ,ZZZ.99) TO #FACE (#I2)
      move left #face (#i2) to #face (#i2)                 /* vt1
      DECIDE ON FIRST VALUE OF MODE (#I1)
        VALUE 'G' MOVE 'Monthly'   TO #FREQ-1  (#I2)
          MOVE 'Allotment' TO #FREQ-2 (#I2)
          COMPUTE #MOD-PREM = ANNUAL-PREM (#I1) / 12
        VALUE 'E' MOVE 'Monthly'   TO #FREQ-1  (#I2)
          MOVE 'EZ-Pay'    TO #FREQ-2 (#I2)
          COMPUTE #MOD-PREM = ANNUAL-PREM (#I1) / 12
        VALUE 'Q' MOVE 'Quarterly' TO #FREQ-1  (#I2)
          MOVE ' '    TO #FREQ-2 (#I2)                   /* PM12 - removed CHECKS
          COMPUTE #MOD-PREM = ANNUAL-PREM (#I1) / 4
        VALUE 'S' MOVE 'Semi-Ann'  TO #FREQ-1  (#I2)
          MOVE ' '    TO #FREQ-2 (#I2)                   /* PM12 - removed CHECKS
          COMPUTE #MOD-PREM = ANNUAL-PREM (#I1) / 2
        VALUE 'A' MOVE 'Annual'    TO #FREQ-1  (#I2)
          MOVE ' '    TO #FREQ-2 (#I2)                   /* PM12 - removed CHECKS
          MOVE ANNUAL-PREM (#I1) TO #MOD-PREM
        VALUE 'M' MOVE 'Monthly'   TO #FREQ-1  (#I2)
          MOVE ' '    TO #FREQ-2 (#I2)                   /* PM12 - removed CHECKS
          COMPUTE #MOD-PREM = ANNUAL-PREM (#I1) / 12
        VALUE '0' MOVE 'Monthly'   TO #FREQ-1  (#I2)             /* DW1
          MOVE 'Credit Card' TO #FREQ-2 (#I2)            /* PM12
          COMPUTE #MOD-PREM = ANNUAL-PREM (#I1) / 12
        VALUE '1' MOVE 'Annual'    TO #FREQ-1  (#I2)
          MOVE 'Credit Card' TO #FREQ-2 (#I2)            /* PM12
          MOVE ANNUAL-PREM (#I1) TO #MOD-PREM
        VALUE '2' MOVE 'Semi-ann'    TO #FREQ-1  (#I2)
          MOVE 'Credit Card' TO #FREQ-2 (#I2)            /* PM12
          COMPUTE #MOD-PREM = ANNUAL-PREM (#I1) / 2
        VALUE '4' MOVE 'Quarterly' TO #FREQ-1  (#I2)
          MOVE 'Credit Card' TO #FREQ-2 (#I2)            /* PM12
          COMPUTE #MOD-PREM = ANNUAL-PREM (#I1) / 4
        NONE WRITE (2) ST-V.ID-NUMBER 'Invalid mode'
      END-DECIDE
*
      DECIDE ON FIRST VALUE OF PLAN (#I1)
        VALUE 'AL'  MOVE 'ANNUITY'   TO #PLAN-1 (#I2)   /* DW3
          MOVE 'LIFE'      TO #PLAN-2 (#I2)   /* DW3
        VALUE 'OL'  MOVE 'Ordinary'  TO #PLAN-1 (#I2)
          MOVE 'Life'      TO #PLAN-2 (#I2)
        VALUE '20P' MOVE '20'        TO #PLAN-1 (#I2)
          MOVE 'Pay'       TO #PLAN-2 (#I2)
        VALUE '30P' MOVE '30'        TO #PLAN-1 (#I2)
          MOVE 'Pay'       TO #PLAN-2 (#I2)
        VALUE '7P'  MOVE '7'         TO #PLAN-1 (#I2)    /* DW9
          MOVE 'Pay'       TO #PLAN-2 (#I2)
        VALUE 'LT'  MOVE 'Level'     TO #PLAN-1 (#I2)
          MOVE 'Term'      TO #PLAN-2 (#I2)
        VALUE 'RT'  MOVE 'Renewable' TO #PLAN-1 (#I2)
          MOVE 'Term'      TO #PLAN-2 (#I2)
        VALUE 'EZ'  MOVE 'EZ Term'   TO #PLAN-1 (#I2)                  /* YK2
          MOVE 'Term'      TO #PLAN-2 (#I2)                  /* YK2
        VALUE 'SPF' MOVE 'Single'    TO #PLAN-1 (#I2)
          MOVE 'Pay'       TO #PLAN-2 (#I2)
        VALUE 'GPL' MOVE 'Gen Plus'  TO #PLAN-1 (#I2)    /* DW7
          MOVE 'Life'      TO #PLAN-2 (#I2)
        VALUE 'GP2' MOVE 'Gen Plus 2' TO #PLAN-1 (#I2)              /* TT1
          MOVE 'Life'      TO #PLAN-2  (#I2)              /* TT1
*       NONE   IF (PLAN-A1 (#I1) GE 'U') AND (PLAN-A1 (#I1) LE 'Z')    /* YK1
        NONE   IF F-LT2-TRUE(<PLAN(#I1)>)                              /* YK1
            MOVE 'Level'        TO #PLAN-1 (#I2)
            MOVE 'Term II'      TO #PLAN-2 (#I2)
          ELSE
            IF PLAN-A-1 (#I1) = 'F' /* PM2
              IF PLAN (#I1) = MASK ('.P.')
                MOVE PLAN-A1 (#I1) TO #PLAN-1 (#I2)
              ELSE
                MOVE PLAN-A-2 (#I1) TO #PLAN-1 (#I2)
              END-IF
*
              MOVE 'Pay' TO #PLAN-2 (#I2)
            ELSE
              MOVE PLAN (#I1)     TO #PLAN-1 (#I2)
              RESET                  #PLAN-2 (#I2)
              WRITE (2) ST-V.ID-NUMBER 'invalid plan' PLAN (#I1)
            END-IF
          END-IF
      END-DECIDE
      MOVE EDITED #MOD-PREM (EM=ZZZ,ZZZ.99) TO #PREMIUM (#I2)   /* DW9
      move left #premium (#i2) to #premium (#i2)     /* vt1
*
      IF PAY-STATUS (#I1) GT '40'
        MOVE 'N/A'  TO #PREMIUM (#I2)             /* vt1 \/
        MOVE 'Paid' TO #FREQ-1 (#I2)
        MOVE 'Up'   TO #FREQ-2 (#I2)              /* vt1 /\
      END-IF
*
      IF X-LOAN-AMOUNT (#I1) NE 0
        ADD X-LOAN-AMOUNT (#I1) TO #TOT-LOANS               /* DW9
        MOVE 'Fixed Interest Loan' TO #F-LBL
        MOVE EDITED X-LOAN-AMOUNT(#I1) (EM=ZZ,ZZ9.99) TO #F-LOAN-N (#I2)
        MOVE '$' TO #F-LOAN-D (#I2)     /* WAS I1    DW8
      END-IF
*
      IF X-LOAN-AMOUNT-2 (#I1) NE 0
        ADD X-LOAN-AMOUNT-2 (#I1) TO #TOT-LOANS               /* DW9
        MOVE 'Variable Interest Loan' TO #V-LBL
        IF X-LOAN-AMOUNT-2(#I1) GT 99999.99
          MOVE EDITED X-LOAN-AMOUNT-2(#I1)(EM=ZZZZZ9.99) TO #V-LOAN-N(#I2)
        ELSE
          MOVE EDITED X-LOAN-AMOUNT-2(#I1)(EM=ZZ,ZZ9.99) TO #V-LOAN-N(#I2)
        END-IF
        MOVE '$' TO #V-LOAN-D (#I2)
      END-IF
    END-FOR
*
    IF (#F-LBL = ' ') AND (#V-LBL = ' ')
      MOVE 'No Loans' TO #F-LBL
    END-IF
*
    IF INTRO-FLAG = 'S' OR = 'K' OR = 'G'
      WRITE (2) ST-V.ID-NUMBER 'is a SPS or GEN'
    END-IF
*
    RESET DATE-OF-BIRTH                                                /* TT2
    DATE-OF-BIRTH := GET-DATE-OF-BIRTH(<ST-V.MEMBER-CONTACT-ID>)       /* TT2
    COMPRESS DOB-MM DOB-DD DOB-YYYY INTO #DOB WITH '/'/* Moved from  DW9
    COMPRESS 'CN' ID-NUMBER-A INTO #F-ID LEAVING NO SPACE  /* below  DW9
*
    MOVE ST-V.ID-NUMBER TO #CGA-SCR-ID
    MOVE 1 TO #CONTACT-SEG  /* get owner of 1st policy
    CALLNAT 'G3500SAD' #CGA-MASTER #PDA-AREA-G3500AAD
*
    IF ST-V.ID-NUMBER NE #ID-NUM
      WRITE (2) ST-V.ID-NUMBER 'is owned by' #ID-NUM
      MOVE #ID-NUM TO #CGA-ID
      FIND (1) ST-V WITH MEMBER-KEY =#CGA-ID-G
      END-FIND
    END-IF
*
    WRITE (1) NOTITLE USING FORM 'ATHFAUDT'            /* PM14
    ADD 1 TO #CNT-2                    /* DW4
    DISPLAY (2) #CNT-2 'CN' #F-ID
      #EXT-FORMATED-NAME (EM=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX)   
      'Fixed/Loan' X-LOAN-AMOUNT (1)
      'Var/loan' X-LOAN-AMOUNT-2 (1)
      'TOT/FACE' #TOT-FACE
*
    MOVE EDITED #TOT-FACE  (EM=Z,ZZZ,ZZZ.99) TO #FACE-X        
    MOVE EDITED #TOT-LOANS (EM=Z,ZZZ,ZZZ.99) TO #LOANS-X
*
    COMPRESS ST-V.ID-NUMBER                            
      #TAB #TYPE
      #TAB #EXT-FORMATED-NAME                        
      #TAB #ID-NUM
      #TAB ST-V.MILITARY-SERVICE                     
      #TAB ST-V.MILITARY-STATUS                      
      #TAB #LOANS-X
      #TAB #FACE-X
      INTO #EXTRACT-RECORD LEAVING NO
    WRITE WORK 2 #EXTRACT-RECORD
  END-FIND
END-WORK
*
PERFORM TOTAL-PRINT
*
************************************************************************
DEFINE SUBROUTINE TOTAL-PRINT
************************************************************************
*
DECIDE ON FIRST VALUE #LAST-KEY          
  VALUE 'A' MOVE 'High-TERM-No-Loan'         TO #TYPE
  VALUE 'B' MOVE 'High-W/L-No-Loan'          TO #TYPE
  VALUE 'C' MOVE 'High-W/L With-Loan'        TO #TYPE
  VALUE 'D' MOVE 'CAP with Loan'             TO #TYPE
  VALUE 'E' MOVE 'High NON-CAP with Loan'    TO #TYPE
  VALUE 'F' MOVE 'Trade-Ups'                 TO #TYPE
  VALUE 'G' MOVE 'Ext 1035 Exchange'         TO #TYPE         
  value 'H' move 'Random-TERM-NO-Loan'       to #type               /* vt1 \/
  value 'I' move 'Random-W/L-No-Loan'        to #type
  value 'J' move 'Random-W/L With-Loan'      to #type
  value 'K' move 'Random-CAP with Loan'      to #type
  value 'L' move 'Random NON-CAP with loans' to #type               /* vt1 /\
  NONE      MOVE 'Unknown Type'       TO #TYPE
END-DECIDE
*
WRITE (2) ' ** Totals ' #TOT-BY-KEY #TYPE 'TOT-FACE-' #TOT-TOT-FACE
MOVE #IR-KEY TO  #LAST-KEY
RESET #TOT-BY-KEY #TOT-TOT-FACE #CNT-2
*
END-SUBROUTINE
*
************************************************************************
DEFINE SUBROUTINE BUILD-BENEFICIARY-PAGE                         /* PM14
************************************************************************
*
RESET #BENEFICIARY-LINES (*)
##CGA-ISN           := #ST-ISN
##CGA-SCR-COMMAND   := 'BD'
##CGA-SCR-ID        := ##CGA-ID := ST-V.ID-NUMBER
COMPRESS 'SH' #I1 INTO ##CGA-SCR-SUFFIX LEAVING NO
##POLICY-PRINT      := FALSE
STACK TOP DATA #PARM-BENEFICIARY-INFORMATION
FETCH RETURN 'E4700PBD'
*
IF *DATA NE 0
  INPUT #BENEFICIARY-INFORMATION
  WRITE (11) 'Here with bene info'
  RELEASE STACK
END-IF
*
RESET #FOUND-1RST-LINE #I4
FOR #I5 1 TO NT-NUM-LINES                           /* WL=43 thru 60 TM=21 thru 38
  IF NT-BENE-SHO (#I5) = MASK('Upon the death of the named insured')
    MOVE TRUE TO #FOUND-1RST-LINE
  END-IF
*
  IF NOT #FOUND-1RST-LINE
    ESCAPE TOP
  END-IF
*
  IF   (NT-BENE-SHO (#I5) = ' ')
      AND (#I5 LT 40)
      AND (NT-BENE-SHO (#I5 + 1) = ' ')
    ESCAPE BOTTOM
  END-IF
*
  ADD +1 TO #I4
  IF  (NT-BENE-SHO-1ST-1 (#I5) = '~')               /* raw new format bene data  DW21
      OR (NT-BENE-SHO      (#I5) = MASK ('      '))   /* raw regular bene data
*
    #BENEFICIARY-LINES (#I4) := NT-BENE-SHO-AFTER-1 (#I5)
  ELSE
    #BENEFICIARY-LINES (#I4) := NT-BENE-SHO (#I5)
  END-IF
END-FOR
*
IF #I4 GT 0
  WRITE (11) 'Got a line ' 1X ST-V.ID-NUMBER
END-IF
END-SUBROUTINE
*
END
