* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: athpalph - ALPHA LISTING (OLD STATUS FICHE)
*
****************************************************************************
*                       MODIFICATION LOG
* USER DATE     TAG  REASON
* DRW  03052005 DW1  Add AL (Annuity Life) PROCESSING
* DRW  03312005 DW2  Fix GDROPSTM Linkage
* PAM  05272005 PM3  Adjust AVL-TDIV for 124156 per RLB
* SAG-AB 20060918 eliminate write of last line on page
* DRW  09062006 DW4  Increase size of #recs-readper RLB
* YAK  12042007 YK1  Remove hardcording for interest rates
*                    (Read GEN-TABLE through OBJNGENT)
* YAK  02052008 YK2  Change code to use FUNCTION-INT-RATE
*                         to get rate from GEN-TABLE
* RSE  09182009 RE1  Change 600K logic for Unification
* YAK  10092012 YK3  Use function to identify Level Term II plans
* YAK  11082012 YK4  No Medical Term policy (EZ)
* JNT  09132013 JT1  Address normalization
* TMT  06132014 TT1  Contact Normalization
* TMT  10242014 TT2  Annuity Life Digitalization
***************************************************************************
DEFINE DATA
LOCAL USING ADDA0001                                               /* JT1
LOCAL
*
* 1 #CURR-VAR-INT-RATE    (P2.3) INIT <8.10>     /* YK1
1 #CURR-VAR-INT-RATE    (P2.3)                   /* YK1
* * * *   S T A T U S   F I L E   * * * * * * * * * * * * * * *
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER      (N6)
  2 REDEFINE ID-NUMBER
    3 ID-NBR       (A6)
  2 WIDOW-FLAG
*   2 DATE-OF-BIRTH                               /* TT1
  2 MEMBER-FLAG
  2 PROCESS-IND
  2 INTRO-FLAG
  2 NAME
  2 DEBIT-CREDIT-AMT (N7.2)
  2 SSN
*   2 ADDRESS-1                                                  /* JT1 start
*   2 ADDRESS-2
*   2 ADDRESS-3
*   2 ZIP-CODE     (N9)
*   2 REDEFINE ZIP-CODE
*    3 ZIP-CODE-5  (N5)
*    3 ZIP-CODE-4  (N4)
  2 MEMBER-CONTACT-ID                                           /* JT1 end
  2 ALOT-AMT
  2 APL-CNT
  2 X-ALT-LP-IND   (9)
  2 X-ALT-LP-IND-2 (9)
  2 X-ALT-LP-AMT   (9)
  2 X-ALT-LP-AMT-2 (9)
  2 X-LOAN-AMOUNT  (9)
  2 X-LOAN-AMOUNT-2 (9)
  2 X-LOAN-DATE-2   (9)
  2 X-LOAN-DATE     (9)
  2 X-INTEREST-RATE (9)
  2 X-ACCUM-INTEREST (9)
  2 X-ACCUM-INTEREST-2 (9)
  2 ONLINE-ACTION-GN
  2 X-FIRST-PLACE-FEE   (9)
  2 SMOKER-FLAG         (9)
  2 X-BILL-ADJUST       (9)
  2 DUES-BALANCE
  2 DUES-FPF
  2 C*ACTIVE-SEGMENTS
  2 ONLINE-ACTION       (9)
  2 ISSUE-DATE          (N8/9)
  2 ISSUE-AGE           (A2/9)
  2 PAY-STATUS          (9)
  2 ANNUAL-PREM         (9)
  2 FACE-AMOUNT         (N7.2/9)
  2 REDEFINE FACE-AMOUNT
    3 FAC-OCC (9)
      4 FAC-4      (N4)
      4 FAC-REMAIN (N5)
  2 DEATH-BENEFIT   (9)
  2 CASH-VALUE      (9)
  2 PLAN            (9)
  2 REDEFINE PLAN
    3 PLAN-OCC       (9)
      4 PLAN-2   (A2)
      4 PLAN-1   (A1)
  2 REDEFINE PLAN
    3 PLAN-OCC-2     (9)
      4 PLAN-A1  (A1)
      4 PLAN-N2  (N2)
  2 STATUS          (9)
  2 MODE            (9)
  2 PAID-TO-DATE    (9)
  2 PAID-UP-DATE    (9)
  2 MONTH-ALLOC-AMT (9)
  2 BEG-CASH-VALUE  (9)
  2 LAST-ANN-CASH-VALUE (9)
*
1 #GEN-INFO (A57)
1 REDEFINE #GEN-INFO
  2 #GEN-NAM-ADDR (A26)
  2 #GEN-REMAIN   (A31)
1 #INS-INFO (A74)
1 #LON-INFO-F (A74)
1 #LON-INFO-V (A74)
*
1 #COUNTERS
  2 #RECS-READ        (P7)  /* DW4
  2 #MAX-LINES        (P5)
  2 #LINES-REMAINING  (P5)
  2 #LINES-NEEDED     (P5)
  2 #CNT              (P5)
  2 #CNT-2            (P5)
  2 #CNT-3            (P5)
  2 #CNT-4            (P5)
  2 #CNT-5            (P5)
  2 #CNT-6            (P5)
  2 #I1               (I2)
  2 #I2               (I2)
  2 #I3               (I2)
*
1 #PAY-STAT         (A4)     /* DW2
1 #FACE-AMT         (P7.2)   /* DW2
1 #TOT-FPF          (N7.2)
1 #TOT-BADJ         (N7.2)
1 #INVALID          (L)
1 #ERR-MSG          (A60)
1 #RANK-DISPL       (P2)
1 #MBR-RANK-DISPL   (P2)
1 #RANK-LIT         (A23)
1 #RANK-DISPLAY     (A5)
1 #COMMAND          (A2) INIT <'BA'>
*
1 #TODAY    (N8)    /* DW1
1 #DATE-DISP      (A10)
1 #YYYYMMDD-N     (N8)
1 REDEFINE #YYYYMMDD-N
  2 #YYYY    (A4)
  2 #MM      (A2)
  2 #DD      (A2)
*
1 #AVL-TDIV   (P7.2)
1 #SSN        (A11)
1 #LOAN-AMT   (A9)
1 #LOAN-DT    (A10)
1 #INT-RT     (A7)
1 #ACC-INT    (A7)
1 #ALP-AMT    (A11)
1 #ALP-IND    (A1)
1 #ALL-3    (L)
1 #APLS       (A8)
1 #FPF        (A15)
1 #FPF-X      (A17)
1 #BADJ       (A16)
1 #BADJ-X     (A21)
1 #DUES-LBL   (A3)
1 #DUES-BAL   (A10)
1 #DUES-FPF   (A10)
1 #DC         (A13)
1 #ALOT       (A13)
1 #SEG        (A1)
1 #ISS-DT     (A10)
1 #PD-THRU-DT (A10)
1 #FACE       (A4)
1 #CSV        (A11)
1 #DB-N       (P7.2)
1 #DB         (A11)
1 #DETH-BENE  (P7.2)
1 #ANN-PREM   (A7)
1 #STATUS     (A4)
1 #VAR-LN-SHOWN (L)
1 #TOT-SHOWN    (L)
1 #MISC1-SHOWN  (L)
1 #MISC2-SHOWN  (L)
1 #TOT-FACE-N (N7.2)
1 REDEFINE #TOT-FACE-N
  2 #TOT-FACE-N-4  (N4)
  2 #TOT-FACE-N-5  (N5)
1 #TOT-FACE   (A4)
1 #TOT-CSV-N  (P7.2)
1 #TOT-CSV    (A11)
1 #TOT-DB-N   (P7.2)
1 #TOT-DB     (A11)
1 v_Skip      (N7)
*
1 #ADD-LINE1   (A25)                                          /* JT1
1 #ADD-LINE2   (A25)                                          /* JT1
1 #ADD-LINE3   (A25)                                          /* JT1
*
1 DATE-OF-BIRTH        (N8.0)                        /* TT1
END-DEFINE
*
MOVE *DATN TO #TODAY   /* DW1
MOVE *DATN TO #YYYYMMDD-N
COMPRESS #MM #DD #YYYY INTO #DATE-DISP WITH '/'
*
MOVE 84 TO #MAX-LINES
MOVE 84 TO #LINES-REMAINING
FORMAT (2) LS=133 PS=95
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
  'MEMBER STATUS REPORT'
  5X 'DATE: ' #DATE-DISP 5X 'TIME: ' *TIMX
*
#CURR-VAR-INT-RATE := FUNCTION-INT-RATE(<'RATE5AB'>)  /* YK2
*
READ ST-V BY NAME-KEY
  IF ID-NUMBER LT 1900
      OR
      PROCESS-IND = 'S'
    v_Skip := v_Skip + 1
    ESCAPE TOP
  END-IF
*
*  IF ID-NUMBER GE 600000          /* RE1
*   IF AFFL-ONLY-CLIENT(<ID-NUMBER>) /* RE1
*     ESCAPE TOP
*   END-IF
*
  ADD 1 TO #RECS-READ
*
* IF C*ACTIVE-SEGMENTS GT 4
*   MOVE C*ACTIVE-SEGMENTS TO #LINES-NEEDED
* ELSE
*   MOVE 4 TO #LINES-NEEDED
* END-IF
*
  RESET #TOT-FPF #TOT-BADJ
  MOVE 2 TO #LINES-NEEDED  /* for top line and total line
  FOR #I1 1 TO 9
    IF STATUS (#I1) = 'D'
      ADD 1 TO #LINES-NEEDED
      ADD X-FIRST-PLACE-FEE (#I1) TO #TOT-FPF
      ADD X-BILL-ADJUST     (#I1) TO #TOT-BADJ
      IF (X-BILL-ADJUST (#I1) NE 0) OR (X-FIRST-PLACE-FEE (#I1) NE 0)
        ADD 1 TO #LINES-NEEDED
      END-IF
*
      IF  (X-LOAN-AMOUNT    (#I1) NE 0)
          OR (X-ACCUM-INTEREST (#I1) NE 0)
        ADD 1 TO #LINES-NEEDED
      END-IF
*
      IF  (X-LOAN-AMOUNT-2    (#I1) NE 0)
          OR (X-ACCUM-INTEREST-2 (#I1) NE 0)
        ADD 1 TO #LINES-NEEDED
      END-IF
    END-IF
  END-FOR
*
  IF #LINES-NEEDED LT 4
    MOVE 4 TO #LINES-NEEDED
  END-IF
*
  IF #LINES-REMAINING LT #LINES-NEEDED
    EJECT (2)
    WRITE  (2) 'PROGRAM: ' *PROGRAM 5X
      'MEMBER STATUS REPORT'
      5X 'DATE: ' #DATE-DISP 5X 'TIME: ' *TIMX
    MOVE #MAX-LINES TO #LINES-REMAINING
  END-IF
*
  RESET #ALP-AMT #ALP-IND #VAR-LN-SHOWN #TOT-SHOWN
  RESET #MISC1-SHOWN #MISC2-SHOWN
  RESET #TOT-FACE-N #TOT-CSV-N #TOT-DB-N
  MOVE NAME TO #GEN-NAM-ADDR
  MOVE EDITED SSN (EM=999-99-9999) TO #SSN
*
  IF DEBIT-CREDIT-AMT NE 0
    MOVE EDITED DEBIT-CREDIT-AMT (EM=-ZZZ,ZZZ.99) TO #DC
    COMPRESS 'D' #DC INTO #DC LEAVING NO
  ELSE
    RESET #DC
  END-IF
*
  COMPRESS ID-NUMBER #SSN #DC INTO #GEN-REMAIN
  COMPRESS ' Plan Iss-date-age  Face Paid-thru   Ann-Pr MD'
    '    CSV         DB    STAT' INTO #INS-INFO
  WRITE (2) #GEN-INFO #INS-INFO
  SUBTRACT 1 FROM #LINES-REMAINING
*
  RESET #I2   /* used for active ins segs
  RESET #PDA-ADDRESS  #ADD-LINE1 #ADD-LINE2 #ADD-LINE3      /* JT1 start
  MOVE 'P' TO #ADD-TYPE
  #ADD-CONTACT-ID := ST-V.MEMBER-CONTACT-ID
  CALLNAT 'ADDN0001' #PDA-ADDRESS
  MOVE #ADD-LINE-1 TO #ADD-LINE1
  MOVE #ADD-LINE-2 TO #ADD-LINE2
  MOVE #ADD-LINE-3 TO #ADD-LINE3                            /* JT1 end
*
  FOR #I1 1 TO 9
    RESET #GEN-INFO #INS-INFO #LON-INFO-F #LON-INFO-V
    IF #I1 = 1
      COMPRESS #ADD-LINE1 INTO #GEN-NAM-ADDR LEAVING NO   /* JT1
*     COMPRESS ADDRESS-1 INTO #GEN-NAM-ADDR LEAVING NO    /* JT1
*
      PERFORM BUILD-MISC1
      COMPRESS #ALOT #FPF #BADJ INTO #GEN-REMAIN
*
      IF #GEN-REMAIN = ' '
        PERFORM BUILD-MISC2
        COMPRESS #DUES-LBL #DUES-FPF #DUES-BAL INTO #GEN-REMAIN
      END-IF
    END-IF
*
    IF #I1 = 2
      COMPRESS #ADD-LINE2 INTO #GEN-NAM-ADDR LEAVING NO                      /* JT1 start
      IF #ADD-LINE3 = ' '
        COMPRESS #GEN-INFO #ADD-ZIP5 INTO #GEN-INFO
        IF #ADD-ZIP4 NE 0
          COMPRESS #GEN-INFO '-' #ADD-ZIP4 INTO #GEN-INFO LEAVING NO
        END-IF
      END-IF
*
*      COMPRESS ADDRESS-2 INTO #GEN-NAM-ADDR LEAVING NO
*      IF ADDRESS-3 = ' '
*        COMPRESS #GEN-INFO ZIP-CODE-5 INTO #GEN-INFO
*        IF ZIP-CODE-4 NE 0
*          COMPRESS #GEN-INFO '-' ZIP-CODE-4 INTO #GEN-INFO LEAVING NO
*        END-IF
*      END-IF                                                                /* JT1 end
*
      PERFORM BUILD-MISC1
      IF (#ALOT NE ' ') OR (#FPF NE ' ') OR (#BADJ NE ' ')
        COMPRESS #ALOT #FPF #BADJ INTO #GEN-REMAIN
      END-IF
*
      IF #GEN-REMAIN = ' '
        PERFORM BUILD-MISC2
        IF (#DUES-LBL NE ' ')
          COMPRESS #DUES-LBL #DUES-FPF #DUES-BAL INTO #GEN-REMAIN
        END-IF
      END-IF
    END-IF
*
    IF #I1 = 3
      IF #ADD-LINE3 NE ' '                                                   /* JT1 start
        COMPRESS #ADD-LINE3 #ADD-ZIP5 INTO #GEN-INFO
        IF #ADD-ZIP4 NE 0
          COMPRESS #GEN-INFO '-' #ADD-ZIP4 INTO #GEN-INFO LEAVING NO
        END-IF
      END-IF
*
*       IF ADDRESS-3 NE ' '
*         COMPRESS ADDRESS-3 ZIP-CODE-5 INTO #GEN-INFO
*         IF ZIP-CODE-4 NE 0
*           COMPRESS #GEN-INFO '-' ZIP-CODE-4 INTO #GEN-INFO LEAVING NO
*         END-IF
*       END-IF                                                               /* JT1 end
*
      PERFORM BUILD-MISC1
      IF (#ALOT NE ' ') OR (#FPF NE ' ') OR (#BADJ NE ' ')
        COMPRESS #ALOT #FPF #BADJ INTO #GEN-REMAIN
      END-IF
*
      IF #GEN-REMAIN = ' '
        PERFORM BUILD-MISC2
        IF #DUES-LBL NE  ' '
          COMPRESS #DUES-LBL #DUES-FPF #DUES-BAL INTO #GEN-REMAIN
        END-IF
      END-IF
    END-IF
*
    IF #I1 = 4
      PERFORM BUILD-MISC1
      COMPRESS #ALOT #FPF #BADJ INTO #GEN-REMAIN
*
      IF #GEN-REMAIN = ' '
        PERFORM BUILD-MISC2
        COMPRESS #DUES-LBL #DUES-FPF #DUES-BAL INTO #GEN-REMAIN
      END-IF
    END-IF
*
    IF #I1 = 5
      PERFORM BUILD-MISC1
      COMPRESS #ALOT #FPF #BADJ INTO #GEN-INFO
*
      IF #GEN-INFO = ' '
        PERFORM BUILD-MISC2
        COMPRESS #DUES-LBL #DUES-FPF #DUES-BAL INTO #GEN-INFO
      END-IF
    END-IF
*
    IF #I2 LT 9 /* find next active segment
      ADD 1 TO #I2
      FOR #I2 #I2 TO 9
        IF STATUS (#I2) = 'D'
          ESCAPE BOTTOM
        END-IF
      END-FOR
    END-IF
*
    RESET #FPF-X #BADJ-X
    IF   (#I2 LE 9)
        AND (STATUS (#I2) =  'D')
      MOVE #I1 TO #SEG
      MOVE ISSUE-DATE (#I2) TO #YYYYMMDD-N
      COMPRESS #MM #DD #YYYY INTO #ISS-DT WITH '/'
      MOVE PAID-TO-DATE (#I2) TO #YYYYMMDD-N
      COMPRESS #MM #DD #YYYY INTO #PD-THRU-DT WITH '/'
      MOVE EDITED CASH-VALUE  (#I2) (EM=ZZZZ,ZZZ.99) TO #CSV
*
      RESET #AVL-TDIV
      IF   (ISSUE-DATE(#I2) GE 19970101)
          AND (MONTH-ALLOC-AMT (#I2) NE 999.99)
        COMPUTE #AVL-TDIV = BEG-CASH-VALUE (#I2) - MONTH-ALLOC-AMT (#I2)
        IF #AVL-TDIV LT 0
          RESET #AVL-TDIV
        END-IF
      END-IF
*
      IF ST-V.ID-NUMBER = 124156                                  /* PM3
          AND ST-V.ISSUE-DATE (#I2) = 20040413                       /* PM3
          AND ST-V.DEATH-BENEFIT (#I2) = 226000                      /* PM3
        MOVE 10150.58 TO #AVL-TDIV                               /* PM3
      END-IF                                                      /* PM3
*
      IF ((ONLINE-ACTION (#I2) = '1') OR (ONLINE-ACTION-GN = '2')
          OR (PLAN (#I2) = 'LT')) /* USE POSSIBLY LOWERED FACE AMT
          AND (NOT IS-ANNUITY-LIFE(< PLAN (#I2)>))   /* DW1         /* TT2
        MOVE FACE-AMOUNT (#I2) TO #DB-N
      ELSE
        MOVE DEATH-BENEFIT (#I2) TO #DB-N
        ADD #AVL-TDIV TO #DB-N
      END-IF
*
      IF (ISSUE-DATE (#I2) GE 19970101)
          AND (MONTH-ALLOC-AMT (#I2) NE 999.99)
          AND (LAST-ANN-CASH-VALUE (#I2) GT #DB-N)
        MOVE LAST-ANN-CASH-VALUE (#I2) TO #DB-N
      END-IF
*
      RESET DATE-OF-BIRTH
      DATE-OF-BIRTH  := GET-DATE-OF-BIRTH(<ST-V.MEMBER-CONTACT-ID>)
*
      IF   ((PLAN (#I2) = 'LT')    /* DW1
          AND (DATE-OF-BIRTH LE (#TODAY - 400000))) /* 40 YEARS
          OR  ((PLAN (#I2) = 'RT')
          AND (ISSUE-AGE (#I2) GT '65'))
          OR  ((PLAN (#I2) = 'EZ')                                     /* YK4
          AND (PAID-UP-DATE(#I2) LE #TODAY))                           /* YK4
*      OR  (((PLAN-A1 (#I2) GE 'U') AND (PLAN-A1 (#I2) LE 'Z'))     /* YK3
          OR  (F-LT2-TRUE(<PLAN(#I2)>)                                 /* YK3
          AND ((ISSUE-DATE(#I2) + 40000) LE *DATN)) /* 4 years
          OR (IS-ANNUITY-LIFE(<PLAN(#I2)>))   /* DW1             /* TT2
        MOVE FACE-AMOUNT   (#I2) TO #FACE-AMT   /* DW2
        MOVE DEATH-BENEFIT (#I2) TO #DETH-BENE  /* DW2
*
        CALLNAT 'GDROPSTM' USING
          PLAN          (#I2)
          SMOKER-FLAG   (#I2)
          DATE-OF-BIRTH
          ISSUE-DATE    (#I2)
          PAID-UP-DATE  (#I2)
          #TODAY
          ISSUE-AGE     (#I2)
          #PAY-STAT               /* DW2
          #FACE-AMT               /* DW2
          #DETH-BENE
          CASH-VALUE (#I2)        /* DW3
          BEG-CASH-VALUE  (#I2)   /* DW3
        MOVE #DETH-BENE TO #DB-N  /* DW3
        MOVE #FACE-AMT  TO FACE-AMOUNT (#I2)  /* DW2
      END-IF
*
      MOVE EDITED FAC-4 (#I2) (EM=ZZ9) TO #FACE
      COMPRESS #FACE 'K' INTO #FACE LEAVING NO
      MOVE EDITED #DB-N (EM=ZZZZ,ZZZ.99) TO #DB
      MOVE EDITED ANNUAL-PREM  (#I2) (EM=ZZZZ.99) TO #ANN-PREM
      CALLNAT 'GPYSTSXX' PAY-STATUS (#I2) #STATUS #INVALID #ERR-MSG
      ADD FACE-AMOUNT    (#I2) TO #TOT-FACE-N
      ADD CASH-VALUE (#I2) TO #TOT-CSV-N
      ADD #DB-N TO #TOT-DB-N
      COMPRESS #SEG PLAN-2 (#I2) #ISS-DT ISSUE-AGE (#I2) #FACE
        #PD-THRU-DT #ANN-PREM MODE (#I2) #CSV #DB #STATUS
        INTO #INS-INFO
*
      IF (X-BILL-ADJUST (#I2) NE 0) OR (X-FIRST-PLACE-FEE (#I2) NE 0)
        IF X-BILL-ADJUST (#I2) NE 0
          MOVE EDITED X-BILL-ADJUST (#I2) (EM=-ZZZ,ZZZ.99) TO #BADJ-X
          COMPRESS ' Bill-Adj=' #BADJ-X INTO #BADJ-X
        END-IF
*
        IF X-FIRST-PLACE-FEE (#I2) NE 0
          MOVE EDITED X-FIRST-PLACE-FEE (#I2) (EM=-ZZZ,ZZZ.99) TO #FPF-X
          COMPRESS ' FPF=' #FPF-X INTO #FPF-X
        END-IF
      END-IF
*
      IF  (X-LOAN-AMOUNT (#I2) NE 0)
          OR (X-ACCUM-INTEREST (#I2) NE 0)
        MOVE EDITED X-LOAN-AMOUNT (#I2) (EM=ZZ,ZZZ.99) TO #LOAN-AMT
        MOVE X-LOAN-DATE (#I2) TO #YYYYMMDD-N
        COMPRESS #MM #DD #YYYY INTO #LOAN-DT WITH '/'
        MOVE EDITED X-INTEREST-RATE (#I2) (EM=ZZ.999) TO #INT-RT
        COMPRESS #INT-RT '%' INTO #INT-RT LEAVING NO
        MOVE EDITED X-ACCUM-INTEREST (#I2)(EM=ZZZZ.99) TO #ACC-INT
*
        RESET #ALP-AMT #ALP-IND
        IF X-ALT-LP-AMT (#I2) NE 0
          MOVE EDITED X-ALT-LP-AMT (#I2) (EM=ZZZZ.99) TO #ALP-AMT
          COMPRESS 'ALP' #ALP-AMT INTO #ALP-AMT
          MOVE X-ALT-LP-IND (#I2) TO #ALP-IND
        END-IF
*
        COMPRESS 'LOAN-FIXED' #LOAN-DT #LOAN-AMT 'INT=' #ACC-INT #INT-RT
          #ALP-AMT #ALP-IND   INTO #LON-INFO-F
      END-IF
*
      IF  (X-LOAN-AMOUNT-2 (#I2) NE 0)
          OR (X-ACCUM-INTEREST-2 (#I2) NE 0)
        IF X-LOAN-AMOUNT-2 (#I2) GT 99999.99
          MOVE EDITED X-LOAN-AMOUNT-2 (#I2) (EM=ZZZZZZ.99) TO #LOAN-AMT
        ELSE
          MOVE EDITED X-LOAN-AMOUNT-2 (#I2) (EM=ZZ,ZZZ.99) TO #LOAN-AMT
        END-IF
*
        MOVE X-LOAN-DATE-2 (#I2) TO #YYYYMMDD-N
        COMPRESS #MM #DD #YYYY INTO #LOAN-DT WITH '/'
        MOVE EDITED #CURR-VAR-INT-RATE (EM=ZZ.999) TO #INT-RT
        COMPRESS #INT-RT '%' INTO #INT-RT LEAVING NO
        MOVE EDITED X-ACCUM-INTEREST-2 (#I2)(EM=ZZZZ.99) TO #ACC-INT
*
        RESET #ALP-AMT #ALP-IND
        IF X-ALT-LP-AMT-2 (#I2) NE 0
          MOVE EDITED X-ALT-LP-AMT-2 (#I2) (EM=ZZZZ.99) TO #ALP-AMT
          COMPRESS 'ALP' #ALP-AMT INTO #ALP-AMT
          MOVE X-ALT-LP-IND-2 (#I2) TO #ALP-IND
        END-IF
*
        COMPRESS 'LOAN-VARBL' #LOAN-DT #LOAN-AMT 'INT=' #ACC-INT #INT-RT
          #ALP-AMT #ALP-IND   INTO #LON-INFO-V
      END-IF
    ELSE
      IF NOT #TOT-SHOWN
        PERFORM SHOW-TOTS
      END-IF
    END-IF
*
    IF (#GEN-INFO NE ' ') OR (#INS-INFO NE ' ')
      SUBTRACT 1 FROM #LINES-REMAINING
      WRITE (2) #GEN-INFO #INS-INFO
    END-IF
*
    IF (#FPF-X NE ' ') OR (#BADJ-X NE ' ')
      COMPRESS #FPF-X #BADJ-X INTO #INS-INFO
      RESET #GEN-INFO
      SUBTRACT 1 FROM #LINES-REMAINING
      WRITE (2) #GEN-INFO #INS-INFO
    END-IF
*
    IF #LON-INFO-F NE ' '
      SUBTRACT 1 FROM #LINES-REMAINING
      RESET #GEN-INFO
      WRITE (2) #GEN-INFO #LON-INFO-F
    END-IF
*
    IF #LON-INFO-V NE ' '
      SUBTRACT 1 FROM #LINES-REMAINING
      RESET #GEN-INFO
      WRITE (2) #GEN-INFO #LON-INFO-V
    END-IF
  END-FOR
*
  IF NOT #TOT-SHOWN
    RESET #GEN-INFO
    PERFORM SHOW-TOTS
    SUBTRACT 1 FROM #LINES-REMAINING
    WRITE (2) #GEN-INFO #INS-INFO
  END-IF
*
  SUBTRACT 1 FROM #LINES-REMAINING
  IF *LINE-COUNT (2) LT 82        /* SAG-AB 20060918 START
    WRITE (2) ' '
  END-IF                          /* SAG-AB 20060918  END
END-READ
WRITE (1) *PROGRAM *DATX *TIMX /
  'Read'     #RECS-READ    /
  'Skiped:'  v_skip
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE SHOW-TOTS
* * * * * * * * * * * * * * *
*
MOVE TRUE TO #TOT-SHOWN
MOVE EDITED #TOT-FACE-N-4 (EM=ZZ9) TO #TOT-FACE
COMPRESS #TOT-FACE 'K' INTO #TOT-FACE LEAVING NO
MOVE EDITED #TOT-CSV-N (EM=ZZZZ,ZZZ.99) TO #TOT-CSV
MOVE EDITED #TOT-DB-N  (EM=ZZZZ,ZZZ.99) TO #TOT-DB
*
IF APL-CNT NE 0
  MOVE EDITED APL-CNT (EM=ZZ9) TO #APLS
  COMPRESS 'APLS' #APLS INTO #APLS
ELSE
  MOVE '********' TO #APLS
END-IF
*
COMPRESS #APLS '* TOTAL *' #TOT-FACE '********************'
  #TOT-CSV #TOT-DB INTO #INS-INFO
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-MISC1
* * * * * * * * * * * * * * *
*
IF #MISC1-SHOWN
  RESET #ALOT #FPF #BADJ
  ESCAPE ROUTINE
END-IF
*
MOVE TRUE TO #MISC1-SHOWN
RESET #ALL-3
IF (ALOT-AMT NE 0) AND (#TOT-BADJ NE 0) AND (#TOT-FPF NE 0)
  MOVE TRUE TO #ALL-3
  MOVE EDITED ALOT-AMT (EM=ZZZZ.99) TO #ALOT
  COMPRESS 'A' #ALOT INTO #ALOT LEAVING NO
  MOVE EDITED #TOT-BADJ (EM=-ZZZZZ.99) TO #BADJ
  COMPRESS 'B' #BADJ INTO #BADJ LEAVING NO
  MOVE EDITED #TOT-FPF (EM=ZZZZZ.99) TO #FPF
  COMPRESS 'F' #FPF INTO #FPF LEAVING NO
ELSE
  IF ALOT-AMT NE 0
    MOVE EDITED ALOT-AMT (EM=Z,ZZZ.99) TO #ALOT
    COMPRESS 'ALOT' #ALOT INTO #ALOT
  ELSE
    RESET #ALOT
  END-IF
*
  IF #TOT-BADJ NE 0
    MOVE EDITED #TOT-BADJ (EM=-ZZZ,ZZZ.99) TO #BADJ
    COMPRESS 'BADJ' #BADJ INTO #BADJ
  ELSE
    RESET #BADJ
  END-IF
*
  IF #TOT-FPF NE 0
    MOVE EDITED #TOT-FPF (EM=-ZZZ,ZZZ.99) TO #FPF
    COMPRESS 'FPF' #FPF INTO #FPF
  ELSE
    RESET #FPF
  END-IF
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-MISC2
* * * * * * * * * * * * * * *
*
IF #MISC2-SHOWN
  RESET #DUES-LBL #DUES-FPF #DUES-BAL
  ESCAPE ROUTINE
END-IF
*
MOVE TRUE TO #MISC2-SHOWN
IF (DUES-FPF = 0) AND (DUES-BALANCE = 0)
  RESET #DUES-LBL
  ESCAPE ROUTINE
END-IF
MOVE 'DUE' TO #DUES-LBL
*
IF DUES-FPF NE 0
  MOVE EDITED DUES-FPF (EM=ZZZ.99) TO #DUES-FPF
  COMPRESS 'FPF' #DUES-FPF INTO #DUES-FPF
ELSE
  RESET #DUES-FPF
END-IF
*
IF DUES-BALANCE NE 0
  MOVE EDITED DUES-BALANCE (EM=ZZZ.99) TO #DUES-BAL
  COMPRESS 'BAL' #DUES-BAL INTO #DUES-BAL
ELSE
  RESET #DUES-BAL
END-IF
*
END-SUBROUTINE
*
END
