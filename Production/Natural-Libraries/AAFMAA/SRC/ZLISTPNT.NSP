* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*
********************  MODIFICATION LOG  ****************************
* NAME  DATE     TAG   DESCRIPTION
* SAG  06062006 SAG-AB Replaced Hex '05' with Hex '09' for ASCII Tab 
********************************************************************
DEFINE DATA
LOCAL
**1 #TAB       (A1) INIT <H'05'>  /* 06062006 SAG-AB
1 #TAB       (A1) INIT <H'09'>    /* 06062006 SAG-AB
1 #ADD-X    (N3)
1 #EXTRACT   (A70)
1 #DKD-CNT-OCC  (4)
 2 #DKD-CNT  (N5/4)
*
1 MR-V VIEW OF A-REQUEST
 2 ID-NUMBER
 2 MEMBER-NAME
 2 CLERK-ID
 2 REQUEST-DATE
 2 RQST-TABLE   (A10)
 2 REDEFINE RQST-TABLE
  3 BEN-IND    (A1)
*
1 NT-V VIEW OF A-NOTES
  2 ID-NUMBER
  2 REDEFINE ID-NUMBER
   3 ID-NUMBER-A    (A6)
  2 NOTE-DATE     (60)
  2 NOTE-CLERK-ID (60)
  2 NOTE-LINE-NUM (60)
  2 NOTE-TEXT     (A60/60)
   2 REDEFINE NOTE-TEXT
   3 NOTE-TEXT-OCC (60)
    4 NOTE-TEXT-60      (A60)
    4 REDEFINE NOTE-TEXT-60
      5 NOTE-TEXT-X     (A1/60)
 2 REDEFINE NOTE-TEXT              /* record for lm storage
  3 LOAN-LTR-TBL     (40)
   4 LL-ID          (N6)
   4 REDEFINE LL-ID
    5 LL-ID-A       (A6)
   4 LL-FIXED-RATE  (P2.3)
   4 LL-FIXED-LOAN  (P7.2)
   4 LL-FIXED-AN-IN (P7.2)
*
   4 LL-VAR-LOAN    (P7.2)
   4 LL-VAR-ACC-INT (P7.2)
   4 LL-VAR-AN-IN   (P7.2)
*
   4 LL-THIS-LOAN   (P7.2)
   4 LL-THIS-AN-IN  (P7.2)
*
   4 LL-NEW-LOAN    (P7.2)
   4 LL-NEW-AN-IN   (P7.2)
 2 REDEFINE NOTE-TEXT              /* record for lpo storage
  3 LOAN-PAYOFF-TBL  (100)
   4 LP-ID          (P6)
   4 LP-LOAN-AMT    (P5.2)
   4 LP-CAP-INT     (P5.2)
   4 LP-INT-AMT     (P5.2)
   4 LP-TOT-PMT-RCVD (P5.2)
   4 LP-INT-TYPE    (A1)
   4 LP-FILL        (A3)
*
1 ST-V VIEW OF A-STATUS
 2 ID-NUMBER
 2 WIDOW-FLAG
 2 PROCESS-IND
*  2 INTERNET-ADDR
* 2 INTRO-FLAG
* 2 NOTE-REC-IND
* 2 RANK
* 2 PLAN   (9)
*
1 #COUNTERS
 2 #RECS-READ        (P7)
 2 #RECS-SELECTED    (P5)
 2 #CNT              (P5)
 2 #CNT-2            (P5)
 2 #CNT-3            (P5)
 2 #I1               (I2)
 2 #I2               (I2)
 2 #I3               (I2)
 2 #FOUND-NOTE       (L)
 2 #UPDATE           (L)
 2 #ALI              (L)
 2 #ALI-MR          (L)
 2 #NO-REC          (L)
 2 #ISN             (P8)
*
1 #YYYYMMDD    (N8)
1 REDEFINE #YYYYMMDD
 2 #YYYY    (N4)
 2 #MM      (N2)
 2 #DD      (N2)
1 #FOUND-ST   (L)
*
END-DEFINE
*
FORMAT (2) LS=133 PS=76
WRITE  (2) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
     'SELECTED NOTES - Parse for "ACCESS"'
                      5X 'DATE: ' *DATU 5X 'TIME: ' *TIMX
*
FORMAT (3) LS=133 PS=76
WRITE  (3) TITLE LEFT 'PROGRAM: ' *PROGRAM 5X
     'selected notes - over 40 notes'
                      5X 'DATE: ' *DATU 5X 'TIME: ' *TIMX
*
READ NT-V BY ID-NUMBER
* IF #RECS-READ GT 1000
*   ESCAPE BOTTOM
* END-IF
*
  ADD 1 TO #RECS-READ
  FOR #I1 1 TO 60
    FOR #I2 1 TO 50
      RESET #ADD-X
*
      IF NOTE-TEXT (#I1) = ' '
 ESCAPE BOTTOM
      END-IF
*
      IF   (NOTE-TEXT-X (#I1, #I2)     = 'A' OR = 'a')
       AND (NOTE-TEXT-X (#I1, #I2 + 1) = 'C' OR = 'c')
       AND (NOTE-TEXT-X (#I1, #I2 + 2) = 'C' OR = 'c')
       AND (NOTE-TEXT-X (#I1, #I2 + 3) = 'E' OR = 'e')
       AND (NOTE-TEXT-X (#I1, #I2 + 4) = 'S' OR = 's')
*
        IF   (NOTE-LINE-NUM (#I1) = 4)
          IF #I1 - 3 NE 0
            ADD 1 TO #CNT-2
            WRITE (2) NT-V.ID-NUMBER NOTE-DATE (#I1 - 3)
                NOTE-LINE-NUM (#I1 - 3) NOTE-TEXT (#I1 - 3)
            COMPRESS NT-V.ID-NUMBER
                #TAB NT-V.NOTE-DATE (#I1 - 3) NOTE-CLERK-ID (#I1 - 3)
                #TAB NOTE-TEXT (#I1 -3 ) INTO #EXTRACT LEAVING NO
            WRITE WORK 1 #EXTRACT
          END-IF
*
          IF #I1 - 2 NE 0
            ADD 1 TO #CNT-2
            WRITE (2) NT-V.ID-NUMBER NOTE-DATE (#I1 - 2)
                NOTE-LINE-NUM (#I1 - 2) NOTE-TEXT (#I1 - 2)
            COMPRESS NT-V.ID-NUMBER
                #TAB NT-V.NOTE-DATE (#I1 - 2) NOTE-CLERK-ID (#I1 - 2)
                #TAB NOTE-TEXT (#I1 -2 ) INTO #EXTRACT LEAVING NO
            WRITE WORK 1 #EXTRACT
          END-IF
*
          IF #I1 - 1 NE 0
            ADD 1 TO #CNT-2
            WRITE (2) NT-V.ID-NUMBER NOTE-DATE (#I1 - 1)
                NOTE-LINE-NUM (#I1 - 1) NOTE-TEXT (#I1 - 1)
            COMPRESS NT-V.ID-NUMBER
                #TAB NT-V.NOTE-DATE (#I1 - 1) NOTE-CLERK-ID (#I1 - 1)
                #TAB NOTE-TEXT (#I1 -1 ) INTO #EXTRACT LEAVING NO
            WRITE WORK 1 #EXTRACT
          END-IF
        END-IF
*
        IF   (NOTE-LINE-NUM (#I1) = 3)
          IF #I1 - 2 NE 0
            ADD 1 TO #CNT-2
            WRITE (2) NT-V.ID-NUMBER NOTE-DATE (#I1 - 2)
                NOTE-LINE-NUM (#I1 - 2) NOTE-TEXT (#I1 - 2)
            COMPRESS NT-V.ID-NUMBER
                #TAB NT-V.NOTE-DATE (#I1 - 2) NOTE-CLERK-ID (#I1 - 2)
                #TAB NOTE-TEXT (#I1 -2 ) INTO #EXTRACT LEAVING NO
            WRITE WORK 1 #EXTRACT
          END-IF
*
          IF #I1 - 1 NE 0
            ADD 1 TO #CNT-2
            WRITE (2) NT-V.ID-NUMBER NOTE-DATE (#I1 - 1)
                NOTE-LINE-NUM (#I1 - 1) NOTE-TEXT (#I1 - 1)
            COMPRESS NT-V.ID-NUMBER
                #TAB NT-V.NOTE-DATE (#I1 - 1) NOTE-CLERK-ID (#I1 - 1)
                #TAB NOTE-TEXT (#I1 -1 ) INTO #EXTRACT LEAVING NO
            WRITE WORK 1 #EXTRACT
          END-IF
        END-IF
*
        IF   (NOTE-LINE-NUM (#I1) = 2)
          IF #I1 - 1 NE 0
            ADD 1 TO #CNT-2
            WRITE (2) NT-V.ID-NUMBER NOTE-DATE (#I1 - 1)
                NOTE-LINE-NUM (#I1 - 1) NOTE-TEXT (#I1 - 1)
            COMPRESS NT-V.ID-NUMBER
                #TAB NT-V.NOTE-DATE (#I1 - 1) NOTE-CLERK-ID (#I1 - 1)
                #TAB NOTE-TEXT (#I1 -1 ) INTO #EXTRACT LEAVING NO
            WRITE WORK 1 #EXTRACT
          END-IF
        END-IF
*
        ADD 1 TO #CNT-2   /* DO THIS NOTE <<<<<<<<<<<<<<<<<<<<<<
        WRITE (2) NT-V.ID-NUMBER NOTE-DATE (#I1) NOTE-LINE-NUM (#I1)
                              NOTE-TEXT (#I1)
        COMPRESS NT-V.ID-NUMBER
            #TAB NT-V.NOTE-DATE (#I1) NOTE-CLERK-ID (#I1)
            #TAB NOTE-TEXT (#I1) INTO #EXTRACT LEAVING NO
        WRITE WORK 1 #EXTRACT
*
        IF   (NOTE-LINE-NUM (#I1) = 1)
         AND (NOTE-LINE-NUM (#I1 +1 ) GT 1)
          ADD 1 TO #CNT-2
          WRITE (2) NT-V.ID-NUMBER NOTE-DATE (#I1 + 1)
              NOTE-LINE-NUM (#I1 + 1) NOTE-TEXT (#I1 + 1)
          COMPRESS NT-V.ID-NUMBER
              #TAB NT-V.NOTE-DATE (#I1 + 1) NOTE-CLERK-ID (#I1 + 1)
              #TAB NOTE-TEXT (#I1 + 1) INTO #EXTRACT LEAVING NO
          WRITE WORK 1 #EXTRACT
          ADD 1 TO #ADD-X
*
          IF   (NOTE-LINE-NUM (#I1) = 1)
           AND (NOTE-LINE-NUM (#I1 +2 ) GT 1)
            ADD 1 TO #CNT-2
            WRITE (2) NT-V.ID-NUMBER NOTE-DATE (#I1 + 2)
                NOTE-LINE-NUM (#I1 + 2) NOTE-TEXT (#I1 + 2)
            COMPRESS NT-V.ID-NUMBER
                #TAB NT-V.NOTE-DATE (#I1 + 2) NOTE-CLERK-ID (#I1 + 2)
                #TAB NOTE-TEXT (#I1 + 2) INTO #EXTRACT LEAVING NO
            WRITE WORK 1 #EXTRACT
            ADD 1 TO #ADD-X
*
            IF   (NOTE-LINE-NUM (#I1) = 1)
             AND (NOTE-LINE-NUM (#I1 +3 ) GT 1)
              ADD 1 TO #CNT-2
              WRITE (2) NT-V.ID-NUMBER NOTE-DATE (#I1 + 3)
                  NOTE-LINE-NUM (#I1 + 3) NOTE-TEXT (#I1 + 3)
              COMPRESS NT-V.ID-NUMBER
                  #TAB NT-V.NOTE-DATE (#I1 + 3) NOTE-CLERK-ID (#I1 + 3)
                  #TAB NOTE-TEXT (#I1 + 3) INTO #EXTRACT LEAVING NO
              WRITE WORK 1 #EXTRACT
              ADD 1 TO #ADD-X
*
              IF   (NOTE-LINE-NUM (#I1) = 1)
               AND (NOTE-LINE-NUM (#I1 +4 ) GT 1)
                ADD 1 TO #CNT-2
                WRITE (2) NT-V.ID-NUMBER NOTE-DATE (#I1 + 4)
                    NOTE-LINE-NUM (#I1 + 4) NOTE-TEXT (#I1 + 4)
                COMPRESS NT-V.ID-NUMBER
                   #TAB NT-V.NOTE-DATE (#I1 + 4) NOTE-CLERK-ID (#I1 + 4)
                    #TAB NOTE-TEXT (#I1 + 4) INTO #EXTRACT LEAVING NO
                WRITE WORK 1 #EXTRACT
                ADD 1 TO #ADD-X
              END-IF
            END-IF
          END-IF
        END-IF
*
        ADD 1 TO #ADD-X
*
*       ESCAPE BOTTOM
      END-IF
    END-FOR
  END-FOR
END-READ
STOP
*
* MOVE 800181 TO NT-V.ID-NUMBER
* STORE NT-V
* MOVE 800182 TO NT-V.ID-NUMBER
* STORE NT-V
* MOVE 800183 TO NT-V.ID-NUMBER
* STORE NT-V
* MOVE 800184 TO NT-V.ID-NUMBER
* STORE NT-V
* MOVE 800185 TO NT-V.ID-NUMBER
* STORE NT-V
* MOVE 800186 TO NT-V.ID-NUMBER
* STORE NT-V
* MOVE 800187 TO NT-V.ID-NUMBER
* STORE NT-V
* MOVE 800188 TO NT-V.ID-NUMBER
* STORE NT-V
* MOVE 800189 TO NT-V.ID-NUMBER
* STORE NT-V
* MOVE 800190 TO NT-V.ID-NUMBER
* STORE NT-V
* END TRANSACTION
* STOP
*
READ NT-V BY ID-NUMBER FROM 800181
  IF ID-NUMBER GT 800190
    END TRANSACTION
    ESCAPE BOTTOM
  END-IF
  DISPLAY NT-V.ID-NUMBER NOTE-DATE (1) NOTE-TEXT (1) (EM=XXXXXXXXXXXXXX)
  RESET NOTE-DATE (1) NOTE-TEXT (*)
*
* DELETE
* WRITE 'DELETE' NT-V.ID-NUMBER
  UPDATE
  WRITE 'Clear' NT-V.ID-NUMBER
  END TRANSACTION
END-READ
STOP
*
READ NT-V BY ID-NUMBER FROM 800000
  IF ID-NUMBER GE 900000
    ESCAPE BOTTOM
  END-IF
  DISPLAY NT-V.ID-NUMBER NOTE-TEXT (1)
END-READ
STOP
* FIND (1) NT-V WITH ID-NUMBER = 800104  /* last 40 loans
*   DISPLAY LL-ID (*) LL-THIS-LOAN (*) LL-NEW-LOAN (*)
*                              LL-VAR-LOAN (*) LL-VAR-ACC-INT (*)
* END-FIND
* FIND (1) NT-V WITH ID-NUMBER = 800015  /* last 100 lpo's
*   DISPLAY LP-ID           (1:60)
*           LP-LOAN-AMT     (1:60)
*           LP-CAP-INT      (1:60)
*           LP-INT-AMT      (1:60)
*           LP-TOT-PMT-RCVD (1:60)
*           LP-INT-TYPE     (1:60)
* END-FIND
* STOP
* AD NT-V BY ID-NUMBER FROM 600000
READ NT-V BY ID-NUMBER FROM 001000
  IF NT-V.ID-NUMBER GT 199999
* READ NT-V BY ID-NUMBER FROM 600000  /* mr msg area
*   IF NT-V.ID-NUMBER GT 799999
*   END TRANSACTION
    ESCAPE BOTTOM
  END-IF
*
  FOR #I1 1 TO 60
    IF   (NOTE-TEXT (#I1)  = MASK ('* P+I'))
      FOR #I2 1 TO 60
        IF   (NOTE-TEXT-X (#I1, #I2) = '$')
         AND (NOTE-TEXT-X (#I1, #I2 + 2) = '-')
          ADD 1 TO #CNT-2
          DISPLAY (2) #CNT-2 NT-V.ID-NUMBER NT-V.NOTE-DATE (#I1)
             NT-V.NOTE-TEXT (#I1)
          ESCAPE BOTTOM
        END-IF
      END-FOR
    END-IF
  END-FOR
  ESCAPE TOP
*
  MOVE TRUE TO #FOUND-ST
  FIND (1) ST-V WITH MEMBER-KEY = NT-V.ID-NUMBER-A
    IF NO RECORDS FOUND
      FIND (1) ST-V WITH WIDOW-KEY = NT-V.ID-NUMBER-A
        IF NO RECORDS FOUND
          RESET #FOUND-ST
        END-NOREC
      END-FIND
    END-NOREC
  END-FIND
*
  IF NOT #FOUND-ST
    WRITE NT-V.ID-NUMBER 'ST not found'
    ESCAPE TOP
  END-IF
*
  FOR #I1 1 TO 60
    MOVE NOTE-DATE (#I1) TO #YYYYMMDD
      IF  (NOTE-CLERK-ID (#I1) NE 'DKD')
       OR (#YYYY LT 2001)
       OR (#YYYY GT 2004)
      ESCAPE TOP
    END-IF
*
    IF #YYYY = 2001 MOVE 1 TO #I2 END-IF
    IF #YYYY = 2002 MOVE 2 TO #I2 END-IF
    IF #YYYY = 2003 MOVE 3 TO #I2 END-IF
    IF #YYYY = 2004 MOVE 4 TO #I2 END-IF
*
    IF WIDOW-FLAG = 'Y'
      MOVE 1 TO #I3
    ELSE
      IF PROCESS-IND = 'S'
        MOVE 2 TO #I3
      ELSE
        IF PROCESS-IND = 'G'
          MOVE 3 TO #I3
        ELSE
          MOVE 4 TO #I3
        END-IF
      END-IF
    END-IF
*
    ADD 1 TO #DKD-CNT (#I2, #I3)
*        ADD 1 TO #CNT-3
*        DISPLAY (3) #CNT-3 NT-V.ID-NUMBER #I1 NOTE-TEXT (#I1)
*        ESCAPE BOTTOM
*      END-IF
*    END-IF
  END-FOR
*
  ESCAPE TOP
*
* FOR #I1 1 TO 60
*   IF (NOTE-CLERK-ID (#I1) = 'EL')
*    AND (NOTE-DATE (#I1) GE 20010115)
*     FIND (1) ST-V WITH MEMBER-KEY = NT-V.ID-NUMBER-A
*     END-FIND
*
*     IF RANK = 'MG'
*       DISPLAY (3) NT-V.ID-NUMBER NT-V.NOTE-TEXT (#I1) ST-V.RANK
*     END-IF
*   END-IF
* END-FOR
* ESCAPE TOP
*
* FOR #I1 1 TO 60
*   IF   (NOTE-TEXT (#I1)  = MASK ('*Mbr in bnk'))
*    OR  (NOTE-TEXT (#I1) = MASK ('*MBR IN BNK'))
*   IF   (NOTE-TEXT-10 (#I1) = 'LAPS OVRLN')
*    AND (NOTE-DATE (#I1) GE 20030101)
*    AND (NOTE-DATE (#I1) LE 20041231)
*     FIND (1) ST-V WITH MEMBER-KEY = NT-V.ID-NUMBER-A
*     END-FIND
*     ADD 1 TO #CNT-2
*     DISPLAY (2) #CNT-2 NT-V.ID-NUMBER NT-V.NOTE-DATE (#I1)
*         NT-V.NOTE-TEXT (#I1)
*      ESCAPE BOTTOM
*   END-IF
*   ESCAPE TOP
*
*     RESET #NO-REC
*     FIND (1) MR-V WITH ID-NUMBER = NT-V.ID-NUMBER
*       IF NO RECORDS FOUND
*         MOVE TRUE TO #NO-REC
*       END-NOREC
*       MOVE *ISN TO #ISN
*     END-FIND
*
*     IF #NO-REC
*       MOVE NT-V.ID-NUMBER      TO MR-V.ID-NUMBER
*     ELSE
*       GET MR-V #ISN
*     END-IF
*
*     MOVE 'DRW'               TO MR-V.CLERK-ID
*     MOVE 0710                TO MR-V.REQUEST-DATE
*     RESET                       MR-V.BEN-IND
*
*     IF  (NOTE-TEXT-RQST (#I1) = 'BNF')
*       MOVE '1' TO BEN-IND
*     END-IF
*
*     IF  (NOTE-TEXT-RQST (#I1) = 'BNB')
*       MOVE '2' TO BEN-IND
*     END-IF
*
*     IF  (NOTE-TEXT-RQST (#I1) = 'BNC')
*       MOVE '4' TO BEN-IND
*     END-IF
*
*     IF  (NOTE-TEXT-RQST (#I1) = 'BND')
*       MOVE '5' TO BEN-IND
*     END-IF
*
*     IF MR-V.BEN-IND NE ' '
*       IF NOTE-CLERK-ID (#I1)  = 'LCB'
*         IF #NO-REC
*           WRITE 'STORE' NT-V.ID-NUMBER
*           STORE MR-V
*         ELSE
*           WRITE 'UPD' NT-V.ID-NUMBER
*           UPDATE (0441)
*         END-IF
*         END TRANSACTION
*         ADD 1 TO #CNT-3
*         DISPLAY (3) #CNT-3 NT-V.ID-NUMBER #I1 NOTE-CLERK-ID (#I1)
*             NOTE-DATE (#I1) BEN-IND NOTE-TEXT (#I1)
*       ELSE
*         ADD 1 TO #CNT-2
*         DISPLAY (2) #CNT-2 NT-V.ID-NUMBER #I1 NOTE-CLERK-ID (#I1)
*             NOTE-DATE (#I1) BEN-IND NOTE-TEXT (#I1)
*       END-IF
*     END-IF
*     ESCAPE BOTTOM
*   END-IF
* END-FOR
  ESCAPE TOP
*
* DISPLAY ID-NUMBER NOTE-TEXT (1)    /* MR MSG 1ST LINE
* DISPLAY           NOTE-TEXT (11)   /* MR BEN MSG 1ST LINE
* ESCAPE TOP
*
  ADD 1 TO #RECS-READ
*
* FIND (1) ST-V WITH MEMBER-KEY = ID-NUMBER-A
*   IF NOTE-REC-IND NE 'Y'
*     DISPLAY (2) ID-NUMBER NOTE-DATE (1) NOTE-CLERK-ID (1)
*                                       NOTE-TEXT (1)
*     MOVE 'Y' TO NOTE-REC-IND
*     UPDATE
*   END-IF
*
*   END TRANSACTION
* END-FIND
* ESCAPE TOP
*
* RESET #UPDATE
* RESET #ALI #ALI-MR
* FOR #I1 1 TO 40
*   IF    (NOTE-CLERK-ID (#I1) = 'LCB')
*   IF    (NOTE-TEXT (#I1) = MASK ('Formerly:'))
*    AND   (NOTE-DATE (#I1) GT 19981015)
*     ADD 1 TO #CNT-2
*     DISPLAY (2) #CNT-2 ID-NUMBER NOTE-DATE (#I1)
*                                  NOTE-TEXT (#I1)
*     ESCAPE BOTTOM
*     MOVE TRUE TO #ALI
*   END-IF
* END-FOR
*
* IF #ALI
*   ADD 1 TO #RECS-SELECTED
*   ADD 1 TO #CNT-2
*   DISPLAY (2) #CNT-2 ID-NUMBER
* END-IF
* END TRANSACTION
*
* IF #UPDATE
*   UPDATE (0325)
* END-IF
*
* END TRANSACTION
END-READ
*
*  WRITE (2) 'TOT-RECS-SELECTED    = ' #RECS-SELECTED
MOVE 2001 TO #YYYY
WRITE 'DKD NS notes'
WRITE '             WIDOW   /  AFSC   /  G/F     / INS-ONLY'
FOR #I2 1 TO 4
  DISPLAY #I2 #YYYY #DKD-CNT (#I2, *)
  ADD 1 TO #YYYY
END-FOR
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE MOVE-TO-CG
* * * * * * * * * * * * * * * * *
*
FIND (1) ST-V WITH MEMBER-KEY = NT-V.ID-NUMBER-A
* IF INTERNET-ADDR = ' '
*   MOVE NOTE-TEXT-INTERNET-ADDR (#I1) TO INTERNET-ADDR
* ELSE
*   WRITE ID-NUMBER 'INTERNET ADDR ALREADY ON STATUS'
* END-IF
* UPDATE (0547)   /*<<<<<<<<<<<<<<<<<<<<<<<<<<
*
* RESET #FOUND-NOTE
* FOR #I2 #I1 TO 39
*   IF NOTE-TEXT (#I1 + 1) NE ' '
*     MOVE TRUE TO #FOUND-NOTE
*   END-IF
*
*   MOVE NOTE-TEXT     (#I2 + 1) TO NOTE-TEXT     (#I2)
*   MOVE NOTE-DATE     (#I2 + 1) TO NOTE-DATE     (#I2)
*   MOVE NOTE-CLERK-ID (#I2 + 1) TO NOTE-CLERK-ID (#I2)
*   MOVE NOTE-LINE-NUM (#I2 + 1) TO NOTE-LINE-NUM (#I2)
* END-FOR
*
* RESET NOTE-TEXT     (40)
* RESET NOTE-DATE     (40)
* RESET NOTE-CLERK-ID (40)
* RESET NOTE-LINE-NUM (40)
*
END-FIND
*
END-SUBROUTINE
*
END
