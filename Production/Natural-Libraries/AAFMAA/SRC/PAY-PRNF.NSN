* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
**********************************************************************************
* PGM ID : PAY-PRNF
*
* FUNCTION : PAY THE PRINCIPAL AMOUNTS PER POLICY WITH FIX/VAR LOAN
*
* 10/20/2011 VT INITIAL CREATION
* 08/19/2013 vt1 Add PS payments /ticket 2177/
**********************************************************************************
DEFINE DATA PARAMETER
1 #REST-AMT               (N7.2)
1 #STATUS-ISN             (P8)
1 CC-PAYMENT
  2 PARM-DATE             (N8.0)
  2 ID-NUMBER             (N6.0)
  2 INSURED-NAME          (A50)
  2 C@PAY-POLICY          (N2.0)
  2 PAY-POLICY     (1:9)
    3 POLICY-NBR          (A16)
    3 segment             (i2)               /* vt
    3 CAP-POLICY          (A1)
    3 PLAN-TYPE           (A3)
    3 ISSUE-DATE          (N8.0)
    3 FACE-AMOUNT         (N7.2)
    3 MAX-PREMIUMS        (N4)
    3 MIN-PREMIUMS        (N2)
    3 DEFAULT-PREM        (N2)
    3 C@AVAILABLE-PAYMENT (N2.0)
    3 AVAILABLE-PAYMENT (1:10)
      4 PAYMENT-NOTE      (A) DYNAMIC
      4 CC-PAYABLE        (A1)
      4 VAR-AMOUNT        (A1)
      4 EXCEED-AMT        (A1)
      4 TRAN-TYPE         (A6)                          /* vt1 was a4
      4 PAID-TO-DATE      (N8.0)
      4 PAYMENT-MODE      (A1)
      4 DEFAULT-AMOUNT    (N6.2)
      4 DUE-AMOUNT        (N6.2)
1 #timn               (n7)
1 #ERROR-MESSAGE      (A75)
LOCAL USING C2500AAM
LOCAL
*
1 ST-V VIEW OF A-STATUS
  2 ID-NUMBER              (N6)
  2 NAME                   (A25)
  2 PROCESS-IND            (A1)
  2 INTRO-FLAG             (A1)
  2 loan-date              (n8)
  2 STATUS                 (A1/9)
  2 PAY-STATUS             (A2/9)
  2 MODE                   (A1/9)
  2 PLAN                   (A3/9)
  2 ISSUE-DATE             (N8/9)
  2 PAID-TO-DATE           (N8/9)
  2 PAID-UP-DATE           (N8/9)
  2 ANNUAL-PREM            (P5.2/9)
  2 MTD-ACV-PREM-ADJ       (P7.2/9)
  2 X-FIRST-PLACE-FEE      (P7.2/9)
  2 X-INTEREST-RATE        (P2.3/9)
  2 X-LOAN-DATE            (N8/9)
  2 X-LOAN-AMOUNT          (P5.2/9)
  2 X-ACCUM-INTEREST       (P5.2/9)
  2 X-NXT-YR-ACCUM-INT     (P5.2/9)
  2 X-OLD-LOAN-AMT         (P5.2/9)
  2 X-CAP-AMT              (P5.2/9)
  2 X-BILL-INTEREST-AMT    (P5.2/9)
  2 X-INTEREST-RECEIVED    (P5.2/9)
  2 X-PRINCIPAL-CHG-CODE   (A1/9)
  2 APL-CNT                (P3)
  2 X-LOAN-DATE-2          (N8/9)
  2 X-LOAN-AMOUNT-2        (P7.2/9)
  2 X-ACCUM-INTEREST-2     (P5.2/9)
  2 X-NXT-YR-ACCUM-INT-2   (P5.2/9)
  2 X-OLD-LOAN-AMT-2       (P7.2/9)
  2 X-CAP-AMT-2            (P5.2/9)
  2 X-BILL-INTEREST-AMT-2  (P5.2/9)
  2 X-INTEREST-RECEIVED-2  (P5.2/9)
  2 X-LPO-PMT-RCVD         (P5.2/9)
  2 X-LPO-PMT-RCVD-2       (P5.2/9)
  2 X-LPO-PRIOR-LOAN-BAL   (P5.2/9)
  2 X-LPO-PRIOR-LOAN-BAL-2 (P7.2/9)
  2 X-LPO-PRIOR-ACC-INT    (P5.2/9)
  2 X-LPO-PRIOR-ACC-INT-2  (P5.2/9)
  2 principal-chg-code
  2 DATE-ACCT-UPDATE       (N8)
  2 DTS-TIMN               (P7)
  2 bill-dollar
  2 old-loan-amt-2          (p5.2)
  2 old-loan-amt            (p5.2)
  2 x-bill-dollar          (9)
  2 X-BILL-SW              (A1/9)
  2 X-BILL-SW-2            (A1/9)
  2 CONV-DURATION          (P3/9)
  2 cap-amt-2              (p5.2)
  2 CAP-BILL-DATE
  2 x-alt-lp-ind           (9)
  2 x-alt-lp-amt           (9)
  2 x-alt-lp-ind-2         (9)
  2 x-alt-lp-amt-2         (9)

*
1 AR-V VIEW OF A-ACCOUNTING-REGISTER
  2 ID-NUMBER              (N6)
  2 NAME                   (A25)
  2 TRANSACTION-DATN       (P9)
  2 TRANSACTION-TIMN       (P7)
  2 CASH-CODE              (A1)
  2 CLERK-ID               (A3)
  2 TERMINAL-ID            (A8)
  2 PROCESS-IND            (A1)
  2 POLICY-NUMBER          (A16)
  2 AALP-FLAG              (A1)
  2 TXN-CODE               (A4)
  2 TXN-ACCT-NUMBER        (N3)
  2 MESSAGE-CODE           (A1)
  2 SG-AMOUNT              (N6.2/1)
  2 CREDIT-AMOUNT          (P7.2)
  2 ACCT-DATE              (N8)
  2 DEBIT-AMOUNT           (P7.2)
  2 DESCRIPTION            (A20)

*
LOCAL
1 #L                       (I2)
1 #M                       (I2)
1 #CC-X                    (I2)
1 #ILN1                    (I2)
1 #ILN2                    (I2)
1 #LX                      (I2)
1 #POL-NBR                 (A16)
1 #prnf-amt                 (P7.2)
1 #INP-AMT                 (P7.2)
1 #INP-TR-CD               (A4)
1 #CASH-CODE               (A1)
1 #ISSUE-DATE              (N8)
1 REDEFINE #ISSUE-DATE
  2 #ISSUE-DATE-A          (A8)
1 #DATE-MMDDYYYY           (N8)
1 REDEFINE #DATE-MMDDYYYY
  2 #MMDD                  (N4)
  2 #YYYY                  (N4)
1 REDEFINE #DATE-MMDDYYYY
  2 #DATE-MMDDYYYY-A       (A8)
1 #UPDATE-MODE             (L) INIT<TRUE>
1 #SG-TBL                  (15)
  2 #SG-CAT1               (A2)
  2 #SG-CAT2               (A2)
  2 #SG-AMT                (N6.2)
1 #DATN                    (N8)
1 redefine #datn
  2 #datn-yyyy             (n4)
  2 #datn-mm               (n2)
  2 #datn-dd               (n2)
1 #datn-a                  (a10)
1 #amount                  (a10)
1 #CURR-VAR-INT-RATE       (P2.3)
1 #RATE-DISP               (A6)
1 #CGA-CLERK               (a3)
1 #ORIG-MODE               (A1/9)
1 #DATE-OF-UPDATE          (N8)
1 #TIME-OF-UPDATE          (n7)
1 #CMBX                    (A4)   /* adj code
*
1 #out-rec            (a100)
1 #tab                (a1) INIT <H'09'>
1 #tran-code          (a4)
*
END-DEFINE
*
GET ST-V #STATUS-ISN
#DATN          := *DATN
#DATE-MMDDYYYY := FUNCTION-DATE(<#DATN>)
*
FOR #L 1 9
  IF  CAP-POLICY(#L) NE 'Y'
    FOR #M 1 9
      IF TRAN-TYPE(#L,#M) = 'PRNF' OR = 'PRNV'
        MOVE POLICY-NBR(#L) TO #POL-NBR
        move default-amount(#l,#m) to #prnf-amt
        IF  #REST-AMT gE #prnf-amt
          COMPUTE #REST-AMT = #rest-amt - #prnf-amt
*
        else
          move #rest-amt to #prnf-amt
          reset #rest-amt
        end-if
*        #CC-X      := #L                              /* vt
        move segment(#l) to #cc-x                      /* vt
        #INP-AMT   := #prnf-amt
        #INP-TR-CD := TRAN-TYPE(#L,#M)
        #CASH-CODE := 'I'
        PERFORM APPLY-PRNF-PRNV
        PERFORM PREPARE-ACCT-REG
        perform write-report
*        WRITE 'AFTER PRINCIPAL of loan PAYMENT - AMT LEFT' #REST-AMT
*
*        write '!!!!!!' '='  st-v.x-loan-amount(#l) '=' #l '=' st-v.x-loan-amount-2(#l)
*
*
        if (st-v.x-loan-amount(#l) ne 0)
            and (st-v.x-loan-amount(#l) le 5.00 )
          if tran-type(#l,#m) = 'PRNF'
            #INP-TR-CD := 'PADF'
            #inp-amt   := st-v.x-loan-amount(#l)
            #scr-tran-amt(1) := st-v.x-loan-amount(#l)
          end-if
        end-if
        if (st-v.x-loan-amount-2(#l) ne 0)
            and (st-v.x-loan-amount-2(#l) le 5.00 )
          if tran-type(#l,#m) = 'PRNV'
            #INP-TR-CD := 'PADV'
            #inp-amt   := st-v.x-loan-amount-2(#l)
            #scr-tran-amt(1) := st-v.x-loan-amount-2(#l)
          end-if
        end-if
        if #inp-tr-cd = 'PADF' or  = 'PADV'
          #CC-X      := #L
          #CASH-CODE := 'I'
          move '-' to #scr-adj (1)
          perform apply-PADF-PADV
          perform PREPARE-ACCT-REG
          perform write-report
          reset #scr-adj(1)
          reset #cmbx
          move 'SAWO' to #scr-tran-code(1)
          perform prepare-acct-reg
        end-if
*
        if st-v.x-loan-amount(#l) eq 0
          if tran-type(#l,#m) = 'PRNF'
            #INP-TR-CD := 'FLNF'
          end-if
          #CC-X      := #L
          #INP-AMT   := 0
          #CASH-CODE := 'I'
          perform apply-flnf-flnv
          perform PREPARE-ACCT-REG
          perform write-report
          escape bottom
        end-if
*
        if st-v.x-loan-amount-2(#l) eq 0

          if tran-type(#l,#m) = 'PRNV'
            #INP-TR-CD := 'FLNV'
          end-if
          #CC-X      := #L
          #INP-AMT   := 0
          #CASH-CODE := 'I'
          perform apply-flnf-flnv
          perform PREPARE-ACCT-REG
          perform write-report
          escape bottom
        end-if
*
      END-IF
    END-FOR
  END-IF
END-FOR
*
*****************
DEFINE SUBROUTINE APPLY-PRNF-PRNV
*****************
*
MOVE 1 TO #ILN1
MOVE #CC-X TO #LX
MOVE ST-V.ID-NUMBER    TO #SCR-ID-SSN    (1)
MOVE #DATE-MMDDYYYY-A  TO #SCR-EFF-DT    (1)
MOVE #INP-TR-CD        TO #SCR-TRAN-CODE (1)
MOVE #INP-AMT          TO #SCR-TRAN-AMT  (1)
MOVE #CASH-CODE        TO #SCR-CASH-CODE (1)

*
CALLNAT 'CPRNPSAM' #SCR-LINES
  #CURR-VAR-INT-RATE
  ST-V.X-INTEREST-RATE        (#LX)
  ST-V.X-LOAN-DATE            (#LX)
  ST-V.X-LOAN-AMOUNT          (#LX)
  ST-V.X-ACCUM-INTEREST       (#LX)
  ST-V.X-NXT-YR-ACCUM-INT     (#LX)
  ST-V.X-OLD-LOAN-AMT         (#LX)
  ST-V.X-CAP-AMT              (#LX)
  #ORIG-MODE                  (#LX)
  ST-V.X-BILL-INTEREST-AMT    (#LX)
  ST-V.X-INTEREST-RECEIVED    (#LX)
  ST-V.X-PRINCIPAL-CHG-CODE   (#LX)
  ST-V.X-BILL-DOLLAR          (#LX)
  ST-V.APL-CNT
  ST-V.X-LOAN-DATE-2          (#LX)
  ST-V.X-LOAN-AMOUNT-2        (#LX)
  ST-V.X-ACCUM-INTEREST-2     (#LX)
  ST-V.X-NXT-YR-ACCUM-INT-2   (#LX)
  ST-V.X-OLD-LOAN-AMT-2       (#LX)
  ST-V.X-CAP-AMT-2            (#LX)
  ST-V.X-BILL-INTEREST-AMT-2  (#LX)
  ST-V.X-INTEREST-RECEIVED-2  (#LX)
  ST-V.INTRO-FLAG
  ST-V.X-LPO-PMT-RCVD         (#LX)
  ST-V.X-LPO-PMT-RCVD-2       (#LX)
  ST-V.X-LPO-PRIOR-LOAN-BAL   (#LX)
  ST-V.X-LPO-PRIOR-LOAN-BAL-2 (#LX)
  ST-V.X-LPO-PRIOR-ACC-INT    (#LX)
  ST-V.X-LPO-PRIOR-ACC-INT-2  (#LX)
  ST-V.DATE-ACCT-UPDATE
  ST-V.DTS-TIMN
  #DATE-OF-UPDATE
  #TIME-OF-UPDATE
  #ILN1
  #ILN2
  #UPDATE-MODE
  #SG-TBL (1:15)
  ST-V.CAP-BILL-DATE
  ST-V.PROCESS-IND
  ST-V.NAME
  #CGA-CLERK
  #ERROR-MESSAGE
*
UPDATE (0175)
END-SUBROUTINE
*
*****************
DEFINE SUBROUTINE apply-padf-padv
*****************
*
MOVE 1 TO #ILN1
MOVE #CC-X TO #LX
MOVE ST-V.ID-NUMBER    TO #SCR-ID-SSN    (1)
MOVE #DATE-MMDDYYYY-A  TO #SCR-EFF-DT    (1)
MOVE #INP-TR-CD        TO #SCR-TRAN-CODE (1)
MOVE #INP-AMT          TO #SCR-TRAN-AMT  (1)
MOVE #CASH-CODE        TO #SCR-CASH-CODE (1)
*
CALLNAT 'CPADJSAM' #SCR-LINES
  #CURR-VAR-INT-RATE
  ST-V.X-INTEREST-RATE            (#LX)
  ST-V.x-LOAN-DATE                (#LX)
  ST-V.x-LOAN-AMOUNT              (#LX)
  ST-V.x-ACCUM-INTEREST           (#LX)
  ST-V.x-NXT-YR-ACCUM-INT         (#LX)
  ST-V.x-OLD-LOAN-AMT             (#LX)
  ST-V.x-CAP-AMT                  (#LX)
  ST-V.APL-CNT
  ST-V.x-PRINCIPAL-CHG-CODE       (#LX)
  ST-V.x-LOAN-DATE-2              (#LX)
  ST-V.x-LOAN-AMOUNT-2            (#LX)
  ST-V.x-ACCUM-INTEREST-2         (#LX)
  ST-V.x-NXT-YR-ACCUM-INT-2       (#LX)
  ST-V.x-OLD-LOAN-AMT-2           (#LX)
  ST-V.x-CAP-AMT-2                (#LX)
  ST-V.INTRO-FLAG
  #ILN1
  #ILN2
  #UPDATE-MODE
  #SG-TBL (1:15)
  #CGA-CLERK
  #CMBX
  ST-V.CAP-BILL-DATE
  ST-V.PROCESS-IND
  ST-V.NAME
  #DATE-OF-UPDATE
  #TIME-OF-UPDATE
*
END-SUBROUTINE
*
*
*****************
DEFINE SUBROUTINE APPLY-FLNF-FLNV
*****************
*
MOVE 1 TO #ILN1
MOVE #CC-X TO #LX
MOVE ST-V.ID-NUMBER   TO #SCR-ID-SSN    (1)
MOVE #DATE-MMDDYYYY-A TO #SCR-EFF-DT (1)
MOVE #INP-TR-CD       TO #SCR-TRAN-CODE (1)
RESET                  #SCR-TRAN-AMT  (1)
MOVE #CASH-CODE       TO #SCR-CASH-CODE (1)
*
CALLNAT 'CFLNPSAM' #SCR-LINES
  #CURR-VAR-INT-RATE
  ST-V.X-INTEREST-RATE (#LX)
  ST-V.X-LOAN-DATE (#LX)
  ST-V.X-LOAN-AMOUNT (#LX)
  ST-V.X-ACCUM-INTEREST (#LX)
  ST-V.X-NXT-YR-ACCUM-INT (#LX)
  ST-V.X-OLD-LOAN-AMT (#LX)
  ST-V.X-CAP-AMT (#LX)
  ST-V.X-BILL-INTEREST-AMT (#LX)
  ST-V.X-INTEREST-RECEIVED (#LX)
  ST-V.X-PRINCIPAL-CHG-CODE (#LX)
  ST-V.X-LOAN-DATE-2 (#LX)
  ST-V.X-LOAN-AMOUNT-2 (#LX)
  ST-V.X-ACCUM-INTEREST-2 (#LX)
  ST-V.X-NXT-YR-ACCUM-INT-2 (#LX)
  ST-V.X-OLD-LOAN-AMT-2 (#LX)
  ST-V.X-CAP-AMT-2 (#LX)
  ST-V.X-BILL-INTEREST-AMT-2 (#LX)
  ST-V.X-INTEREST-RECEIVED-2 (#LX)
  ST-V.INTRO-FLAG
  ST-V.X-ALT-LP-IND (#LX)
  ST-V.X-ALT-LP-AMT (#LX)
  ST-V.X-ALT-LP-IND-2 (#LX)
  ST-V.X-ALT-LP-AMT-2 (#LX)
  ST-V.X-LPO-PMT-RCVD (#LX)
  ST-V.X-LPO-PMT-RCVD-2 (#LX)
  ST-V.X-LPO-PRIOR-LOAN-BAL (#LX)
  ST-V.X-LPO-PRIOR-LOAN-BAL-2 (#LX)
  ST-V.X-LPO-PRIOR-ACC-INT (#LX)
  ST-V.X-LPO-PRIOR-ACC-INT-2 (#LX)
  ST-V.DATE-ACCT-UPDATE
  ST-V.DTS-TIMN
  #DATE-OF-UPDATE
  #TIME-OF-UPDATE
  #ILN1
  #ILN2
  #UPDATE-MODE
*
UPDATE (0175)
END-SUBROUTINE
*
*****************
DEFINE SUBROUTINE PREPARE-ACCT-REG
*****************
*
**  WRITE '=' #SCR-TRAN-AMT(1) '=' #ILN1
*
RESET AR-V
AR-V.ID-NUMBER               := ST-V.ID-NUMBER
AR-V.TRANSACTION-DATN        := #DATN
AR-V.TRANSACTION-TIMN        := #timn
AR-V.ACCT-DATE               := #DATN
AR-V.CASH-CODE               := 'I'
AR-V.NAME                    := ST-V.NAME
AR-V.CLERK-ID                := 'EDS'
AR-V.TERMINAL-ID             := *INIT-ID
AR-V.TXN-CODE                := #SCR-TRAN-CODE (1)
AR-V.PROCESS-IND             := ST-V.PROCESS-IND
AR-V.AALP-FLAG               := #SCR-ALP-CODE  (1)
AR-V.POLICY-NUMBER           := #POL-NBR
AR-V.SG-AMOUNT          (1)  := #SCR-TRAN-AMT(1)
if #scr-tran-code (1) = 'SAWO'
  AR-V.debit-AMOUNT            := #SCR-TRAN-AMT(1)
else
  AR-V.CREDIT-AMOUNT           := #SCR-TRAN-AMT(1)
end-if
AR-V.MESSAGE-CODE            := '1'
if #SCR-TRAN-CODE (1) = 'PRNF' or = 'PRNV'
  AR-V.TXN-ACCT-NUMBER         := 110
else
  ar-v.txn-acct-number         := 410
end-if
AR-V.DESCRIPTION             := 'INV'
IF (#SCR-TR-CD-2 (#ILN1) = '33' OR = '44' OR = '11' OR = '22' OR = '88') /* PREP/FPFP/RIDP
    AND (#SCR-ISS-DT (#ILN1) NE ' ')
  COMPRESS AR-V.DESCRIPTION #SCR-ISS-DT (#ILN1)
    INTO AR-V.DESCRIPTION
END-IF
*
STORE AR-V
END-SUBROUTINE
*
*****************
define subroutine write-report
*****************
#tran-code := #SCR-TRAN-CODE (1)
compress #datn-mm '/' #datn-dd '/' #datn-yyyy into #datn-a leaving no
move edited #scr-tran-amt(1) (EM=zzzzzz9.99) to #amount
compress st-v.id-number #tab
  #tran-code              #tab
  #amount                 #tab
  #datn-a                 #tab
  into #out-rec leaving no
write work 3 #out-rec
*
end-subroutine
*
END
