* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*****************************************************************
*                                                               *
* New COPYCODE member: ATHISNMN created by ACCORD on: 02/09/05  *
*                                                               *
*****************************************************************
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* DW12-AB Correction made 10-2005 applied 20060323                     *
* DW14-AB added for 01/2006 month-end applied 20060323                 *
* DRW  20070316  DW1   Stop using Loan Amt to calc ACV Interest        *
* RSE  20090917  RE1   Change 600K logic                               *
* PAM 07/21/2010 PM2   Added 3SR service-fee processing                *
************************************************************************
*
DEFINE SUBROUTINE CALC-NEW-MNTHLY-VALUES
*
IF USE-X-CALCS = 'Y'
  PERFORM CALC-NEW-MNTHLY-VALUES-X
  ESCAPE ROUTINE
END-IF
*
**                                                 SAG-AB 20060717 START
**COMPUTE ROUNDED IS-SNG-PREM-CURR = IS-SNG-PREM-1AGO
**   + (((IS-MNTH-IND - 1) / 12) * (IS-SNG-PREM - IS-SNG-PREM-1AGO))
COMPUTE #INTVAL1 = (IS-MNTH-IND - 1) / 12
COMPUTE ROUNDED #INTVAL2 = IS-SNG-PREM - IS-SNG-PREM-1AGO
COMPUTE ROUNDED #INTVAL3 = #INTVAL1 * #INTVAL2
COMPUTE ROUNDED IS-SNG-PREM-CURR = IS-SNG-PREM-1AGO + #INTVAL3
**                                                 SAG-AB 20060717 END
*
IF IS-RESTRICTED-MBR-SW = 'Y'
  COMPUTE ROUNDED IS-NXT-CSV = IS-MIN-CSV + (IS-MNTHLY-MIN-DIFF * IS-MNTH-IND)
  RESET IS-COI IS-INTEREST IS-WORK-PREM
  MOVE IS-FAC-AMT TO IS-EOM-DB
  IF IS-NXT-CSV < 0
    RESET IS-NXT-CSV
  END-IF
END-IF
IF IS-RESTRICTED-MBR-SW = 'Y'
  ESCAPE ROUTINE
END-IF
*
RESET IS-WORK-PREM
IF (IS-PAID-UP-SW NE 'Y') AND (L-REIN-CODE NE 'REIN')
  IF L-REIN-CODE = ' '
    PERFORM ADD-AUTO-PREM-NEW
  ELSE
    IF (IS-MODE = 12)
        OR ((IS-MODE = 2) AND ((IS-TODAY-MON = IS-PRM-PD-MON(1)) OR (IS-TODAY-MON = IS-PRM-PD-MON(2))))
        OR ((IS-MODE = 4) AND ((IS-TODAY-MON = IS-PRM-PD-MON(1)) OR (IS-TODAY-MON = IS-PRM-PD-MON(2))
        OR (IS-TODAY-MON = IS-PRM-PD-MON(3)) OR (IS-TODAY-MON = IS-PRM-PD-MON(4))))
        OR ((IS-MODE = 1) AND (IS-TODAY-MON = IS-PRM-PD-MON(1)))
      MOVE IS-PREMIUM TO IS-WORK-PREM
    END-IF
  END-IF
END-IF
*
COMPUTE ROUNDED IS-WORK-B = (IS-LST-CSV + IS-WORK-PREM) / IS-SNG-PREM-CURR
MOVE IS-WORK-B TO IS-SAVE-INT-DB
*
IF IS-WORK-B > IS-FAC-AMT
  MOVE IS-WORK-B TO IS-INT-DB
ELSE
  MOVE IS-FAC-AMT TO IS-INT-DB
END-IF
IF IS-LST-DB > IS-INT-DB
  MOVE IS-LST-DB TO IS-INT-DB
END-IF
*
COMPUTE ROUNDED IS-NAR = (IS-INT-DB / IS-CALC-3) - (IS-LST-CSV + IS-WORK-PREM) + IS-NET-AMT-RISK-FACT
IF (IS-ISS-AGE + IS-DURATION) > 99
  RESET IS-COI
ELSE
  IF IS-NAR > 50000
    COMPUTE ROUNDED IS-COI = ((IS-CALC-8 + IS-MORT-RT) * 50)
      + ((IS-MORT-RT * (IS-NAR - 50000)) / 1000)
  ELSE
    COMPUTE ROUNDED IS-COI = (IS-CALC-8 + IS-MORT-RT) * (IS-NAR / 1000)
  END-IF
END-IF
*
**IF IS-PROCESS-IND = 'O' AND (IS-ISS-AGE + IS-DURATION LE 99) /* DW12-AB removed 10-2005
**  SUBTRACT IS-OO-COI-ADJ FROM IS-COI                         /* DW12-AB removed 10-2005
**END-IF                                                       /* DW12-AB removed 10-2005
**
**IF IS-PROCESS-IND = 'G'                /* DW14-AB added for 01/2006 month-end
IF (IS-PROCESS-IND = 'G' OR EQ 'O'      /* DW14-AB added for 01/2006 month-end
    OR EQ 'S')                          /* RE1
    AND (IS-SEG-X = IS-FIRST-GF-POL)
    AND (IS-ISS-AGE + IS-DURATION LE 99)
  ADD IS-SVCS-FEE TO IS-COI
END-IF
**
IF (IS-PROCESS-IND EQ 'O')               /* DW14-AB added for 01/2006 month-end
    AND (IS-SEG-X EQ IS-FIRST-GF-POL)    /* DW14-AB added for 01/2006 month-end
    AND (IS-ISS-AGE + IS-DURATION LE 99) /* DW14-AB added for 01/2006 month-end
  SUBTRACT IS-LIV-SVC FROM IS-COI        /* DW14-AB added for 01/2006 month-end
END-IF                                   /* DW14-AB added for 01/2006 month-end
*
IF #SERVICES                                        /* PM2
 AND #OL-IND                                        /* PM2
 AND #OL-INDEX = IS-SEG-X                           /* PM2
 AND IS-ISS-AGE + IS-DURATION LE 99                 /* PM2
  ADD IS-SVCS-FEE TO IS-COI                         /* PM2
END-IF                                              /* PM2
*  /* DW1 Below replaces 2/16/2007
* PUTE ROUNDED IS-INTEREST = ((IS-LST-CSV + IS-WORK-PREM - IS-COI - IS-LN-AMT
*  - IS-LN-AMT-2) * IS-M-CURR-RT) + (IS-LN-AMT * IS-M-LOAN-RT)
*   + (IS-LN-AMT-2 * IS-M-LOAN-RT-2)
* New Interest Calc Below as of 3/16/2007                         /* DW1
COMPUTE ROUNDED IS-INTEREST = (IS-LST-CSV + IS-WORK-PREM - IS-COI)   /* DW1
  * IS-M-CURR-RT
*
IF IS-INTEREST < 0 OR IS-CALC-INT-SW = 'N'
  RESET IS-INTEREST
END-IF
*
COMPUTE ROUNDED IS-NXT-CSV = IS-LST-CSV + IS-WORK-PREM - IS-COI + IS-INTEREST
MOVE IS-NXT-CSV TO IS-NXT-ACV
COMPUTE ROUNDED IS-WORK-B = IS-NXT-CSV / IS-SNG-PREM-CURR
IF IS-WORK-B > IS-FAC-AMT
  MOVE IS-WORK-B TO IS-EOM-DB
ELSE
  MOVE IS-FAC-AMT TO IS-EOM-DB
END-IF
*
IF IS-LST-DB > IS-EOM-DB
  MOVE IS-LST-DB TO IS-EOM-DB
END-IF
IF (IS-ISS-AGE + IS-DURATION > 99) AND IS-NXT-CSV > IS-EOM-DB
  MOVE IS-NXT-CSV TO IS-EOM-DB
END-IF
*
END-SUBROUTINE
*
********************************************************************************
DEFINE SUBROUTINE ADD-AUTO-PREM-NEW
********************************************************************************
*
IF ((IS-PAD-CODE = 'E') AND (IS-MODE-MODE = 'E'))
    OR (IS-PAD-CODE = 'V')
    OR ((IS-PAD-CODE = 'W') AND (IS-POL-OWNER = 'N'))
    OR ((IS-PAD-CODE = 'X') AND (IS-POL-OWNER = 'D'))
  IF IS-PD-THRU-YYYYMM GE IS-RUN-DATE-YYYYMM
    ESCAPE ROUTINE
  END-IF
END-IF
*
IF ((IS-PAD-CODE = 'E') AND (IS-MODE-MODE = 'E'))
    OR (IS-PAD-CODE = 'V')
    OR ((IS-PAD-CODE = 'W') AND (IS-POL-OWNER = 'N'))
    OR ((IS-PAD-CODE = 'X') AND (IS-POL-OWNER = 'D'))
    OR ((IS-MODE-MODE = 'G') AND (IS-PAY-STATUS = '20'))
    OR ((IS-MODE-MODE = 'G') AND (IS-PAY-STATUS = '22'))
  IGNORE
ELSE
  ESCAPE ROUTINE
END-IF
*
IF IS-TYPE = 'OL'
  MOVE IS-DOB TO IS-PD-UP
  ADD 96 TO IS-PD-UP-YYYY
ELSE
  MOVE IS-ISS-DATE TO IS-PD-UP
  IF IS-TYPE = '20'
    ADD 20 TO IS-PD-UP-YYYY
  ELSE
    IF IS-TYPE = '30'
      ADD 30 TO IS-PD-UP-YYYY
    ELSE
      ADD 7 TO IS-PD-UP-YYYY
    END-IF
  END-IF
END-IF
IF IS-PD-UP-YYYYMM < IS-RUN-DATE-YYYYMM
  ESCAPE ROUTINE
END-IF
IF IS-PD-UP-YYYYMM = IS-RUN-DATE-YYYYMM
  COMPUTE ROUNDED IS-WORK-PREM = (IS-PREMIUM * (IS-PD-UP-DD - 1)) / 30
ELSE
  MOVE IS-PREMIUM TO IS-WORK-PREM
END-IF
*
END-SUBROUTINE
*
*********************************************************************************
*
