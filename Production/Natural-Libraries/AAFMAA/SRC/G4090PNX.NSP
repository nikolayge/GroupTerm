* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* PGM-ID: G4090PNX
*     'NX' COMMAND PROCESSING  - MISC NOTE PROCESSOR
* also processes auto msgs (lt 6 lines) to AAFMAA users such as c2200pcg
*        and W5700PWN
*******************************************
*                       MODIFICATION LOG
* USER DATE     TAG  REASON
* DRW  03212006 DW1  Bypass SAG and SBS personel and Pirooz & ramen
* DRW  10102006 DW2  Compress Screen to add a new column ti show more
* DRW  02182007 DW3  Do Not show Yelana 2 times in Full NX List
* DRW 09/22/2008 DW4 Stop using ISN to match to note file
* DRW 03/11/2009 DW5 Increase Notes Occurrance from 60 to 500
* DRW 09/23/2009 DW6 AFFL Unification
* VXT 08/23/2012 vt1 Replaced PAM with VXT
* vxt 11/18/2016 vt2 Ticket 1924
*******************************************
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK
LOCAL USING GONERLXX     /* WORK FIELDS FOR GONERCXX - ERROR ROUTINE
LOCAL USING G4090LNX
LOCAL
1 MBRSHIP-MTD-DET-V VIEW OF A-MBRSHIP-MTD-DETAIL
  2 ENTRY-DATE       (N8)
  2 REC-ISN          (N8)
  2 CODE             (A1)
  2 ISSUE-DATE       (N8)
  2 NUM-MBRSHIPS     (N3)
  2 USER             (A3)
  2 ID-NUMBER                       /* DW4
*
1 NU-V VIEW OF A-NOTES
  2 ID-NUMBER                           /* DW4
  2 NOTE-TEXT      (500)              /* DW5
  2 REDEFINE NOTE-TEXT
    3 NOTE-TEXT-OCC  (500)             /* DW5
      4 NOTE-TEXT-3   (A3)
      4 NOTE-TEXT-57  (A57)
  2 NOTE-CLERK-ID  (500)              /* DW5
  2 NOTE-LINE-NUM  (500)              /* DW5
  2 NOTE-DATE      (500)              /* DW5
*
1 ST-V VIEW OF A-STATUS
  2 SSN
*
1 TM-V VIEW OF A-TERMINALS
  2 TERMINAL-ID         (A8)
  2 CLERK-ID            (A3)
  2 SECURITY-CODE       (N2)
*
1 #NOTE-DATE     (N8/500)                /* DW5
1 #NOTE-CLERK-ID (A3/500)                /* DW5
1 #NOTE-LINE-NUM (N1/500)                /* DW5
1 #NOTE-TEXT     (A60/500)               /* DW5
*
1 #CN   (N6)
1 REDEFINE #CN
  2 #CN-X   (A1/6)
1 REDEFINE #CN
  2 #CN-A   (A6)
*
1 #FILL-BLNKS (A78/24)
1 #SUFFIX-MATCH        (L)
1 #ID-REQUESTED        (L)
1 #CHECK-INIT-TBL      (L)
1 #CLERK-ID-1          (A3/20)
1 #CLERK-DESC-1        (A20/20)
1 #INIT-TBL-1          (A1/20)
*
1 #CLERK-ID-2          (A3/20)
1 #CLERK-DESC-2        (A20/20)
1 #INIT-TBL-2          (A1/20)
*
1 #CLERK-ID-3          (A3/20)
1 #CLERK-DESC-3        (A20/20)
1 #INIT-TBL-3          (A1/20)
*
1 #CLERK-ID-4          (A3/20)
1 #CLERK-DESC-4        (A20/20)
1 #INIT-TBL-4          (A1/20)
*
1 #CLERK-ID-5          (A3/20)
1 #CLERK-DESC-5        (A20/20)
1 #INIT-TBL-5          (A1/20)
*
1 #SCR-SEL             (A1/40)
1 REDEFINE #SCR-SEL
  2 #SCR-SEL-2          (A1/40)
1 #SCR-RECEIVE-CLK     (A3/40)
1 #SCR-RECEIVE-MSG     (A22/40)
1 #SCR-RECEIVE-CLK-NUM (P3/40)
1 #SCR-UNVIEWED-NUM    (P3/40)
1 #SCR-UNVIEWED-CV     (C/40)
1 #SCR-SEL-CV          (C/40)
1 #NUM-PENDING-TASKS   (P3)
1 #NUM-COMPL-TASKS     (P3)
1 #CLK-NAME            (A20)
1 #1ST-NAME            (A20)
1 #2ND-NAME            (A20)
1 #3RD-NAME            (A20)
1 #HOLD-DATN           (N8)
1 #HOLD-TIMN           (N7)
1 #HOLD-TO-CLK         (A3)
*
1 #INVALID             (L)
1 #TOT-MSGS            (P5)
1 #NUM-CLKS            (P3)
1 #REQUESTED-CLK       (A3)
*
1 #SCR-HDR-TO-CLK (A03)
1 #SCR-HDR-CV     (C)
1 #SCR-CV         (C/22)
*
1 #SCR-HEADER-GR
  2 #SCR-FIL1-1        (A16) INIT <'Message sent by '>
  2 #SCR-HDR-CLK       (A03)
  2 #SCR-FILL-2        (A04) INIT <' on '>
  2 #SCR-HDR-DT-MM     (A02)
  2 #SCR-FILL-3        (A01) INIT <'/'>
  2 #SCR-HDR-DT-DD     (A02)
  2 #SCR-FILL-4        (A01) INIT <'/'>
  2 #SCR-HDR-DT-YYYY   (A04)
  2 #SCR-FILL-5        (A04) INIT <' at '>
  2 #SCR-HDR-TM-HH     (A02)
  2 #SCR-FILL-6        (A01) INIT <':'>
  2 #SCR-HDR-TM-MM     (A02)
  2 #SCR-FILL-7        (A03) INIT <' to'>
1 REDEFINE #SCR-HEADER-GR
  2 #SCR-HEADER        (A45)
*
1 #SCR-NUM-OF-NOTES-GR
  2 #SCR-NUM-OF-1        (A2)
  2 #SCR-NUM-FIL1        (A4) INIT <' OF '>
  2 #SCR-NUM-OF-2        (A2)
1 REDEFINE #SCR-NUM-OF-NOTES-GR
  2 #SCR-NUM-OF-NOTES    (A8)
*
1 #LAST-NOTE-TBL  (P6/50)
1 #NOTE-SEQ-NUM   (N2)
1 #NOTE-NUM       (N6)
1 #SCR-MSG        (A75)
1 #SCR-LINES      (A78/22)
1 REDEFINE #SCR-LINES
  2 #SCR-LINES-TAB   (22)
    3 #SCR-LINES-1ST-POS    (A1)
    3 #SCR-LINES-REST       (A77)
*
1 #LINES-EXIST     (L)
1 #LINES-CHGED     (L)
1 #ADD-SCN         (L)
1 #FOUND-AST       (L)
1 #EDIT-CODE-FOUND (L)
1 #VIEW-ONLY-UNV   (L)
1 #VIEW-ONLY-COMPL (L)
*
1 #COMPLETE-LINE  (A78)
1 #MOV-BACK-LINE  (A78)
1 #HOLD-LINE      (A78)
1 #HOLD-LINE-22   (A78)
1 #SPLIT-LINE     (A78)
1 REDEFINE #SPLIT-LINE
  2 #FST-60        (A60)
  2 #LST-18        (A18)
*
1 #I1         (I2)
1 #I2         (I2)
1 #I3         (I2)
1 #ISC        (I2)
1 #IAST       (I2)
*
1 #DEL          (A1)
1 #NT-ISN       (P8)
1 #HOLD-ISN     (P8)
1 #HOLD-INIT-ISN (P8)
1 #TERM-ISN     (P8)
*
1 #YYYYMMDD     (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY        (A4)
  2 #MM          (A2)
  2 #DD          (A2)
1 REDEFINE #YYYYMMDD
  2 #YYYYMMDD-A   (A8)
*
1 #TIMN         (N7)
1 REDEFINE #TIMN
  2 #TIMN-HH     (A2)
  2 REDEFINE #TIMN-HH
    3 #TIMN-HH-N  (N2)
  2 #TIMN-MM     (A2)
  2 #TIMN-SS     (A2)
  2 #TIMN-T      (A1)
*
1 #STORE-COMMAND   (A2)
1 #STORE-ID        (N9)
1 #STORE-SUFFIX    (A3)
1 #FROM-INIT   (A3)
1 #TO-INIT     (A3)
1 #MSG         (A60/5)
*
END-DEFINE
*
INCLUDE GONERCXX      /* NATURAL ERROR ROUTINE
*
IF #CGA-SCR-SUFFIX = 'BLK'
  INPUT USING MAP 'G409XMNX'
  RESET #CGA-SCR-COMMAND
  FETCH 'G1000PXX'
END-IF
*
IF #CGA-SCR-SUFFIX = '*NX'
  INPUT #FROM-INIT #TO-INIT #MSG (*)
  PERFORM SEND-AUTO-MSG
  ESCAPE ROUTINE
END-IF
*
IF   (NOT #CGA-CLERK = 'DRW' OR = 'VXT' OR = 'TDM' OR = 'YAK')  /* vt1
    AND (NOT #CGA-ORIG-COMMAND = '*P')   /* flashed msg processing
  RESET #CGA-SCR-ID
END-IF
*
IF #CGA-SCR-SUFFIX = 'WES'
  MOVE 800018 TO #CGA-SCR-ID
  RESET #CGA-SCR-SUFFIX
END-IF
*
IF ((#CGA-SCR-SUFFIX = 'MAP')    /* SHOW MAP OF SPECIAL RECORDS
    OR ((#CGA-SCR-ID    LT 50)       /* DISPL NX REC REC (DISP FROM 890000)
    AND (#CGA-SCR-ID GT 0))
    OR (#CGA-SCR-ID    GE 800000))  /* SHOW SELECTED NX RECORD
    AND (NOT (#CGA-ORIG-COMMAND = '**' OR = '*P'))  /* NOT FROM SUPERVISOR
*
  IF #CGA-SCR-ID GE 990000
    MOVE 'AAF' TO #REQUESTED-CLK
    MOVE 'COM' TO #CGA-SCR-SUFFIX
    RESET         #CGA-SCR-ID
  ELSE
    IF #CGA-SCR-ID GE 980000
      MOVE 'AAF' TO #REQUESTED-CLK
      RESET         #CGA-SCR-ID
    ELSE
      IF   (#CGA-SCR-ID GE 800000)
          AND (#CGA-SCR-ID LT 890000)
          AND (NOT (#CGA-CLERK = 'DRW' OR = 'YAK' OR = 'VXT'))  /* vt1
        MOVE 'AAF' TO #REQUESTED-CLK
        RESET         #CGA-SCR-ID
      ELSE
        MOVE 'ALL' TO #REQUESTED-CLK
      END-IF
    END-IF
  END-IF
*
  PERFORM DISPLAY-NX-NOTES
  MOVE 'NX' TO #CGA-SCR-COMMAND
  RESET        #CGA-SCR-ID
  RESET        #CGA-SCR-SUFFIX
  END TRANSACTION
  FETCH 'G1000PXX'
END-IF
*
MOVE #CGA-SCR-COMMAND TO #STORE-COMMAND
MOVE #CGA-SCR-ID      TO #STORE-ID
MOVE #CGA-SCR-SUFFIX  TO #STORE-SUFFIX
RESET #CGA-SCR-ID         /* TO PREVENT MASSIVE RECORD READING
*
IF #CGA-ORIG-COMMAND = '**' OR = '*P' /* COMING FROM SUPERVISOR
  MOVE #CGA-CLERK TO #REQUESTED-CLK
  MOVE 900000 TO #NOTE-NUM
  READ NT-CNT-V BY ID-NUMBER FROM #NOTE-NUM
*
    IF NT-CNT-V.ID-NUMBER GE 980000                 /* BEGINING OF EDS TASKS
      ESCAPE BOTTOM
    END-IF
*
    IF NOTE-CLERK-ID (2) NE #CGA-CLERK
      ESCAPE TOP
    END-IF
*
    IF #SCR-RECEIVE-CLK-NUM (1) LT 999
      ADD 1 TO #SCR-RECEIVE-CLK-NUM (1)
    END-IF
  END-READ
*
  IF #CGA-ORIG-COMMAND = '**'
    MOVE #SCR-RECEIVE-CLK-NUM (1) TO #CGA-SCR-ID
    FETCH 'G1000PXX'
  END-IF
*
  IF #SCR-RECEIVE-CLK-NUM (1) = 0
    RESET #CGA-ORIG-COMMAND
    FETCH 'G1000PXX'
  END-IF
*
  MOVE TRUE TO #VIEW-ONLY-UNV
  MOVE EDITED #SCR-RECEIVE-CLK-NUM (1) (EM=Z9) TO #SCR-NUM-OF-2
  RESET #CGA-SCR-COMMAND
  RESET #CGA-SCR-ID
  RESET #CGA-SCR-SUFFIX
ELSE
  MOVE 900000 TO #NOTE-NUM
  READ NT-CNT-V BY ID-NUMBER FROM #NOTE-NUM
    IF NT-CNT-V.ID-NUMBER GE 990000
      ADD 1 TO #NUM-COMPL-TASKS
      ESCAPE TOP
    ELSE
      IF NT-CNT-V.ID-NUMBER GE 980000
        ADD 1 TO #NUM-PENDING-TASKS
        ESCAPE TOP
      END-IF
    END-IF
*
    IF   (NOTE-CLERK-ID (2) = 'ACE')   /* only used for wes bills
        AND (NOT #CGA-CLERK =   'VXT' OR = 'TDM' OR = 'YAK' OR = 'LR'  )  /* vt1 removed 'SV' and DRW
      ESCAPE TOP
    END-IF
*
*    IF #CGA-USER-COMPANY = 'I'      /* AAFMAA user doing "NX"  /* DW6
*      FIND (1) TM-V WITH CLERK-ID = NOTE-CLERK-ID (2)
*      END-FIND
*      IF TM-V.SECURITY-CODE = 1 OR = 2 OR = 97 /* note sent to afsc
*        ESCAPE TOP
*      END-IF
*    END-IF
*
*    IF #CGA-USER-COMPANY = 'S'      /* AFSC user doing "NX"
*      FIND (1) TM-V WITH CLERK-ID = NOTE-CLERK-ID (2)
*      END-FIND
*      IF TM-V.SECURITY-CODE = 4  OR = 6 OR = 8    /* NOTE SENT AAFMAA
*                         OR = 12 OR = 16 OR = 20 OR = 98
*        ESCAPE TOP
*      END-IF
*    END-IF                                        /* END DW6
*
    IF NOTE-CLERK-ID (2) = ' '              /* Don't count not tagged msgs
      ESCAPE TOP
    END-IF
    IF   (NOTE-CLERK-ID (1) = 'EDS')        /* DON"T COUNT
        AND (NOTE-CLERK-ID (2) = 'LIS')        /* MULTIPLE
        AND (DTS-DATN          = #HOLD-DATN)   /* SCREEN BATCH LISTS
        AND (DTS-TIMN          = #HOLD-TIMN)
        AND (NOTE-CLERK-ID (2) = #HOLD-TO-CLK)
      IGNORE
    ELSE
      ADD 1 TO #TOT-MSGS
    END-IF
*
    FOR #I1 1 TO 37                          /* 3 LESS THAN MAX
      IF NOTE-CLERK-ID (2) = #SCR-RECEIVE-CLK (#I1)
        IF   (NOTE-CLERK-ID (1) = 'EDS')        /* DON"T COUNT
            AND (NOTE-CLERK-ID (2) = 'LIS')        /* MULTIPLE
            AND (DTS-DATN          = #HOLD-DATN)   /* SCREEN BATCH LISTS
            AND (DTS-TIMN          = #HOLD-TIMN)
            AND (NOTE-CLERK-ID (2) = #HOLD-TO-CLK)
          IGNORE
        ELSE
          MOVE DTS-DATN TO #HOLD-DATN  /* SAVE FOR BATCH CHECK
          MOVE DTS-TIMN TO #HOLD-TIMN
          MOVE NOTE-CLERK-ID (2) TO #HOLD-TO-CLK
          IF #SCR-RECEIVE-CLK-NUM (#I1) LT 999
            ADD 1 TO #SCR-RECEIVE-CLK-NUM (#I1)
          END-IF
*
          IF NOTE-CLERK-ID (3) = 'UNV'       /* UNVIEWED NOTES
            IF #SCR-UNVIEWED-NUM (#I1) LT 999
              ADD 1 TO #SCR-UNVIEWED-NUM (#I1)
            END-IF
            MOVE (AD=I) TO #SCR-UNVIEWED-CV (#I1)
          END-IF
        END-IF
        ESCAPE BOTTOM
      ELSE
        IF #SCR-RECEIVE-CLK (#I1) = ' '
          RESET #CLK-NAME
          CALLNAT 'GCKNMSXX' NOTE-CLERK-ID (2)
            #INVALID
            #CLK-NAME
          IF #INVALID
            IF NOTE-CLERK-ID (2) = 'LIS'
              MOVE 'Listings from EDS' TO #SCR-RECEIVE-MSG (#I1)
            ELSE
              COMPRESS 'Msgs sent to' NOTE-CLERK-ID (2)
                INTO #SCR-RECEIVE-MSG (#I1)
            END-IF
          ELSE
            SEPARATE #CLK-NAME INTO #1ST-NAME #2ND-NAME #3RD-NAME
              WITH DELIMITER ' '
            COMPRESS 'Msgs sent to' #1ST-NAME
              INTO #SCR-RECEIVE-MSG (#I1)
*
            IF #1ST-NAME = 'Richard'
              IF #2ND-NAME = 'Browett'
                COMPRESS #SCR-RECEIVE-MSG (#I1) 'B.'
                  INTO #SCR-RECEIVE-MSG (#I1)
              END-IF
              IF #2ND-NAME = 'Sinofsky'
                COMPRESS #SCR-RECEIVE-MSG (#I1) 'S.'
                  INTO #SCR-RECEIVE-MSG (#I1)
              END-IF
              IF #2ND-NAME = 'Vansise'
                COMPRESS #SCR-RECEIVE-MSG (#I1) 'V.'
                  INTO #SCR-RECEIVE-MSG (#I1)
              END-IF
            END-IF
*
            IF #1ST-NAME = 'Don'
              IF #2ND-NAME = 'Wingert'
                COMPRESS #SCR-RECEIVE-MSG (#I1) 'W.'
                  INTO #SCR-RECEIVE-MSG (#I1)
              END-IF
              IF #2ND-NAME = 'Gendreau'
                COMPRESS #SCR-RECEIVE-MSG (#I1) 'G.'
                  INTO #SCR-RECEIVE-MSG (#I1)
              END-IF
            END-IF
*
            IF #1ST-NAME = 'Keith'
              IF #2ND-NAME = 'Calhoun'
                COMPRESS #SCR-RECEIVE-MSG (#I1) 'C.'
                  INTO #SCR-RECEIVE-MSG (#I1)
              END-IF
              IF #2ND-NAME = 'Miller'
                COMPRESS #SCR-RECEIVE-MSG (#I1) 'M.'
                  INTO #SCR-RECEIVE-MSG (#I1)
              END-IF
            END-IF
          END-IF
*
          MOVE NOTE-CLERK-ID (2) TO #SCR-RECEIVE-CLK (#I1)
          MOVE 1 TO #SCR-RECEIVE-CLK-NUM (#I1)
*          IF #SCR-RECEIVE-CLK-NUM (#I1) LT 999
*            ADD 1          TO #SCR-RECEIVE-CLK-NUM (#I1)
*          END-IF
*
          IF NOTE-CLERK-ID (3) = 'UNV'       /* UNVIEWED NOTES
*            IF #SCR-UNVIEWED-NUM (#I1) LT 999
*              ADD 1 TO #SCR-UNVIEWED-NUM (#I1)
*            END-IF
            MOVE 1 TO #SCR-UNVIEWED-NUM (#I1)
            MOVE (AD=I) TO #SCR-UNVIEWED-CV (#I1)
          END-IF
*
          MOVE DTS-DATN TO #HOLD-DATN  /* SAVE FOR BATCH CHECK
          MOVE DTS-TIMN TO #HOLD-TIMN
          MOVE NOTE-CLERK-ID (2) TO #HOLD-TO-CLK
*
          IF NOTE-CLERK-ID (2) = #STORE-SUFFIX
            MOVE TRUE TO #SUFFIX-MATCH
            MOVE 'X' TO #SCR-SEL (#I1)
          END-IF
*
          IF NOT #SUFFIX-MATCH AND (NOTE-CLERK-ID (2) = #CGA-CLERK)
            MOVE 'X' TO #SCR-SEL (#I1)
          END-IF
*
          ESCAPE BOTTOM
        END-IF
      END-IF
    END-FOR
  END-READ
*
  FOR #I1 1 TO 37
    IF #SCR-RECEIVE-CLK (#I1) = ' ' /* FIND FIRST AVAILABLE SLOT
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF #I1 NE 1
    MOVE
      'Enter "X" on line of message desired ("U" for only unviewed)'
      TO #SCR-MSG
    MOVE 'ALL'          TO #SCR-RECEIVE-CLK (#I1)
    MOVE 'All messages' TO #SCR-RECEIVE-MSG (#I1)
    IF #TOT-MSGS GT 999
      MOVE 999  TO #SCR-RECEIVE-CLK-NUM (#I1)
    ELSE
      MOVE #TOT-MSGS TO #SCR-RECEIVE-CLK-NUM (#I1)
    END-IF
    ADD 1 TO #I1
    MOVE 'AAF'          TO #SCR-RECEIVE-CLK (#I1)
    MOVE 'EDS tasks-"C" complete' TO #SCR-RECEIVE-MSG (#I1)
    MOVE #NUM-PENDING-TASKS TO #SCR-RECEIVE-CLK-NUM (#I1)
    ADD 1 TO #I1
    MOVE #I1 TO #ISC
    MOVE (AD=I) TO #SCR-UNVIEWED-CV (#I1)
    MOVE 'ADD'  TO #SCR-RECEIVE-CLK (#I1)
    MOVE 'Add new message' TO #SCR-RECEIVE-MSG (#I1)
  ELSE
    MOVE 'No pending messages' TO #SCR-MSG
    MOVE 'AAF'          TO #SCR-RECEIVE-CLK (#I1)
    MOVE 'EDS tasks-"C" complete' TO #SCR-RECEIVE-MSG (#I1)
    MOVE #NUM-PENDING-TASKS TO #SCR-RECEIVE-CLK-NUM (#I1)
    ADD 1 TO #I1
    MOVE 'ADD'          TO #SCR-RECEIVE-CLK (#I1)
    MOVE 'Add new message' TO #SCR-RECEIVE-MSG (#I1)
    MOVE 'X' TO #SCR-SEL (#I1)
    MOVE #I1 TO #ISC
  END-IF
*
  IF #ISC = 0
    MOVE 1 TO #ISC
  END-IF
*
  IF #I1 LT 40
    ADD 1 TO #I1
    FOR #I1 #I1 TO 40
      MOVE (AD=P) TO #SCR-SEL-CV (#I1)
    END-FOR
  END-IF
*
  MOVE '*' TO #CGA-SCR-COMMAND
*
  IF NOT #SUFFIX-MATCH
    INPUT TEXT #SCR-MSG MARK *#SCR-SEL (#ISC) USING MAP 'G4090MNX'
  END-IF
*
  RESET #SCR-MSG
  PERFORM CHECK-CMD-TERMINATION
*
  FOR #I1 40 TO 1 STEP -1
    IF #SCR-SEL (#I1) NE ' '
      IF #SCR-SEL (#I1) = 'U'
        MOVE TRUE TO #VIEW-ONLY-UNV
      ELSE
        IF #SCR-SEL (#I1) = 'C'
          MOVE TRUE TO #VIEW-ONLY-COMPL
        END-IF
      END-IF
*
      MOVE #SCR-RECEIVE-CLK     (#I1) TO #REQUESTED-CLK
      MOVE EDITED #SCR-RECEIVE-CLK-NUM (#I1) (EM=Z9)TO #SCR-NUM-OF-2
*
      ESCAPE BOTTOM
    END-IF
  END-FOR
END-IF
*
IF #REQUESTED-CLK = 'ADD'
  PERFORM ADD-NX-NOTES
ELSE
  PERFORM DISPLAY-NX-NOTES
END-IF
*
IF #CGA-SCR-COMMAND = '*'
  RESET #CGA-SCR-COMMAND
END-IF
*
END TRANSACTION
FETCH 'G1000PXX'
*
* * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ADD-NX-NOTES
* * * * * * * * * * * * * * * * * * * * * * *
*
RESET #SCR-NUM-OF-NOTES
MOVE *DATN TO #YYYYMMDD
MOVE *TIMN TO #TIMN
IF #TIMN-HH-N GT 12
  SUBTRACT 12 FROM #TIMN-HH-N
END-IF
MOVE #CGA-CLERK TO #SCR-HDR-CLK
MOVE #MM   TO #SCR-HDR-DT-MM
MOVE #DD   TO #SCR-HDR-DT-DD
MOVE #YYYY TO #SCR-HDR-DT-YYYY
MOVE #TIMN-HH   TO #SCR-HDR-TM-HH
MOVE #TIMN-MM   TO #SCR-HDR-TM-MM
*
RESET #SCR-HDR-TO-CLK
RESET #SCR-LINES (*)
*
MOVE 'PRESS ENTER FOR SEND MENU OR ENTER INITIALS IF KNOWN'
  TO #SCR-MSG
MOVE (AD=I) TO #SCR-HDR-CV
MOVE '*' TO #CGA-SCR-COMMAND
INPUT TEXT #SCR-MSG MARK *#SCR-HDR-TO-CLK USING MAP 'G4091MNX'
PERFORM CHECK-CMD-TERMINATION
*
IF #SCR-HDR-TO-CLK NE 'AAF'         /* SPECIAL EDS TASK NX RECS
  PERFORM EDIT-TO-CLERK
END-IF
*
PERFORM FIND-NEXT-NX-NUM
PERFORM SETUP-FOR-ADD-NOTES
*
IF #LINES-EXIST
  IF   (#SCR-HDR-TO-CLK = #CGA-CLERK)
      AND (#NOTE-NUM GE 900000)
    REINPUT 'INVALID TO SEND MESSAGE TO YOURSELF'
      MARK *#SCR-HDR-TO-CLK
  END-IF
*
  IF #CHECK-INIT-TBL
    PERFORM STORE-MULTIPLE-MSGS
  ELSE
    STORE NT-V
    PERFORM SET-MSG-SENT-INDICATOR
  END-IF
*
  END TRANSACTION
  MOVE 'THIS MESSAGE HAS BEEN SENT' TO #SCR-MSG
  RESET #CGA-SCR-COMMAND
  MOVE '*' TO #CGA-SCR-COMMAND
  MOVE (AD=P) TO #SCR-CV (*)
  INPUT TEXT #SCR-MSG USING MAP 'G4091MNX'
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE DISPLAY-NX-NOTES
* * * * * * * * * * * * * * * * * * * * * * *
*
IF #REQUESTED-CLK = 'AAF'
  IF  (#CGA-SCR-SUFFIX = 'COM' OR #VIEW-ONLY-COMPL) /* ONLY EDS SEES
      OR (NOT #CGA-CLERK  = 'YAK' OR = 'PM'  /* PENDING TASKS
      OR = 'VXT' OR = 'TDM' OR = 'LR'  )     /* vt1 removed 'SV' and DRW
    MOVE 990000 TO #NOTE-NUM               /* THIS IS COMPLETED TASKS
    RESET #CGA-SCR-SUFFIX
  ELSE
    MOVE 980000 TO #NOTE-NUM    /* PENDING TASKS
  END-IF
ELSE
  IF #CGA-SCR-SUFFIX = 'MAP'       /* SHOW MAP OF SPECIAL RECORDS
    MOVE 890000 TO #NOTE-NUM
    RESET #CGA-SCR-SUFFIX
  ELSE
    IF #CGA-SCR-ID NE 0           /* SHOW SELECTED NX RECORD
        AND (NOT (#CGA-ORIG-COMMAND = '**' OR = '*P'))
      IF #CGA-SCR-ID LT 50
        COMPUTE #NOTE-NUM = #CGA-SCR-ID + 890000
      ELSE
        MOVE #CGA-SCR-ID TO #NOTE-NUM
      END-IF
*
      MOVE TRUE TO #ID-REQUESTED
      RESET #CGA-SCR-ID
    ELSE
      MOVE 900000 TO #NOTE-NUM
    END-IF
  END-IF
END-IF
*
REPEAT                                /* USED FOR '-' FUNCTION
  READ NT-V BY ID-NUMBER FROM #NOTE-NUM
    IF   (#REQUESTED-CLK NE 'AAF')             /* NOT DOING EDS TASKS
        AND (NT-V.ID-NUMBER GE 980000)                 /* BEGINING OF EDS TASKS
      ESCAPE BOTTOM
    END-IF
*
    MOVE *ISN TO #HOLD-ISN
      #HOLD-INIT-ISN
*
    MOVE NT-V.ID-NUMBER TO #NOTE-NUM
*
    IF  (#REQUESTED-CLK = 'ALL')              /* REQUESTED ALL NX NOTES
        OR (#REQUESTED-CLK  = NOTE-CLERK-ID (2))
      IF   (NOTE-CLERK-ID (2) = 'ACE')  /* only used for wes bills
          AND (NOT #CGA-CLERK = 'DRW' OR = 'VXT' OR = 'TDM' OR = 'YAK')   /* vt1
        ESCAPE TOP
      END-IF
*
*    IF #CGA-USER-COMPANY = 'I'      /* AAFMAA user doing "NX"   /* DW6
*      FIND (1) TM-V WITH CLERK-ID = NOTE-CLERK-ID (2)
*      END-FIND
*      IF TM-V.SECURITY-CODE = 1 OR = 2 OR = 97 /* note sent to AFSC
*        ESCAPE TOP
*      END-IF
*    END-IF
*
*    IF #CGA-USER-COMPANY = 'S'      /* AFSC user doing "NX"
*      FIND (1) TM-V WITH CLERK-ID = NOTE-CLERK-ID (2)
*      END-FIND
*      IF TM-V.SECURITY-CODE = 4  OR =  6 OR = 8 /* NOTE SENT TO AAFMAA
*                         OR = 12 OR = 16 OR = 20 OR = 98
*        ESCAPE TOP
*      END-IF
*    END-IF                                               /* ENd DW6
    ELSE
      ESCAPE TOP
    END-IF
*
    IF #VIEW-ONLY-UNV AND (NOTE-CLERK-ID (3) NE 'UNV')
      ESCAPE TOP
    END-IF
*
    PERFORM LOAD-SCR-HEADER-INFO
    PERFORM BUILD-SCREEN
*
    IF  #REQUESTED-CLK = 'AAF'
      IF #CGA-CLERK = 'DRW' OR = 'YAK' OR = 'KEC' OR = 'VXT' OR = 'TDM'    /* vt1
        MOVE
          'M-MOV/*-TO THIS POS/I-INS/D-DLT/C-K-CMPL/--MOV BACK/+-ADD SCN'
          TO #SCR-MSG
      ELSE
        MOVE 'PRESS ENTER TO SEE NEXT SCREEN OF TASK LIST' TO #SCR-MSG
        MOVE (AD=P) TO #SCR-CV (*)
      END-IF
    ELSE
      IF #CGA-ORIG-COMMAND = '*P'
        MOVE '* THIS MESSAGE JUST SENT - PRESS ENTER OR PROCESS MESSAGE *'
          TO #SCR-MSG
      ELSE
        MOVE '"XXX" TO DELETE, "?" FOR MENU OR PROCESS MESSAGE'
          TO #SCR-MSG
      END-IF
    END-IF
*
    IF NT-V.ID-NUMBER = 980001     /* BEGINNING OF PENDING TASKS
      RESET #NOTE-SEQ-NUM
      MOVE EDITED #NUM-PENDING-TASKS (EM=Z9) TO #SCR-NUM-OF-2
    END-IF
*
    IF NT-V.ID-NUMBER = 990001     /* BEGINNING OF COMPLETED TASKS
      RESET #NOTE-SEQ-NUM
      MOVE EDITED #NUM-COMPL-TASKS (EM=Z9) TO #SCR-NUM-OF-2
    END-IF
*
    ADD 1 TO #NOTE-SEQ-NUM
    MOVE EDITED #NOTE-SEQ-NUM (EM=Z9) TO #SCR-NUM-OF-1
*
    IF #NOTE-SEQ-NUM LT 50
      MOVE #NOTE-NUM TO #LAST-NOTE-TBL (#NOTE-SEQ-NUM)  /* SAVE IN TABLE
    END-IF
*
    IF ((#CGA-CLERK = NT-V.NOTE-CLERK-ID (2))  /* RECIEVER IS VIEWING MSG
        OR (#CGA-CLERK = NT-V.NOTE-CLERK-ID (4))) /* RECIEVER IS VIEWING LIST
        AND (NT-V.NOTE-CLERK-ID (3) = 'UNV')    /* UNVIEWED
        AND (#NOTE-NUM GE 900000)
      GET NT-V #HOLD-ISN
      RESET NOTE-CLERK-ID (3)
      PERFORM FIND-NEXT-NX-NUM
      MOVE #NOTE-NUM TO NT-V.ID-NUMBER    /* TO RESEQUENCE IT
      UPDATE (0732)
      END TRANSACTION
    END-IF
*
    IF NT-V.NOTE-CLERK-ID (2) = 'AAF'
      MOVE (AD=IP) TO #SCR-HDR-CV
    ELSE
      MOVE (AD=I) TO #SCR-HDR-CV
    END-IF
*
    IF #ID-REQUESTED
      COMPRESS 'REC ID IS' NT-V.ID-NUMBER-A INTO #SCR-MSG
    END-IF
*
    MOVE '*' TO #CGA-SCR-COMMAND
    INPUT TEXT #SCR-MSG MARK *#SCR-HDR-TO-CLK USING MAP 'G4091MNX'
    PERFORM CHECK-CMD-TERMINATION
*
    IF #SCR-HDR-TO-CLK = 'xxx' MOVE 'XXX' TO #SCR-HDR-TO-CLK END-IF
    IF #SCR-HDR-TO-CLK = 'yyy' MOVE 'YYY' TO #SCR-HDR-TO-CLK END-IF
    IF #SCR-HDR-TO-CLK = 'zzz' MOVE 'ZZZ' TO #SCR-HDR-TO-CLK END-IF
    IF #SCR-HDR-TO-CLK = 'www' MOVE 'WWW' TO #SCR-HDR-TO-CLK END-IF
*
    IF ((#SCR-HDR-TO-CLK = 'XXX'   /* INDICATES to DELETE NX
        OR = 'YYY'   /* IND to DEL NX & NU & PD
        OR = 'ZZZ'   /* IND to DEL NX & alter NU
        OR = 'WWW')  /* IND to do "UP" and YYY
        AND (NT-V.ID-NUMBER GE 900000)     /* ONLY REGULAR MESSAGES
        AND (NT-V.ID-NUMBER LT 980000))        /* CAN BE DELETED
        OR ((#SCR-HDR-TO-CLK = 'XXX')    /* INDICATES TO DELETE
        AND (NT-V.ID-NUMBER GE 980000)            /* EDS TASKS
        AND (#CGA-CLERK = 'YAK' OR = 'DRW' OR = 'VXT' OR = 'TDM')) /* EDSONLY   /* vt1
      IF #SCR-HDR-TO-CLK = 'YYY' OR = 'ZZZ' OR = 'WWW'
        FOR #I1 1 TO 30
          IF NT-V.NOTE-TEXT-X (2, #I1) = '-'
            RESET #CN
            ADD 2 TO #I1
            MOVE 1 TO #I2
*
            IF NT-V.NOTE-TEXT-X (2, #I1 + 5) = ' ' /* 5 dig cn
              ADD 1 TO #I2
            END-IF
*
            IF NT-V.NOTE-TEXT-X (2, #I1 + 4) = ' ' /* 4 dig cn
              ADD 1 TO #I2
            END-IF
*
            IF NT-V.NOTE-TEXT-X (2, #I1 + 3) = ' ' /* 3 dig cn
              ADD 1 TO #I2
            END-IF
*
            FOR #I2 #I2 TO 6
              MOVE NT-V.NOTE-TEXT-X (2, #I1) TO #CN-X (#I2)
              ADD 1 TO #I1
            END-FOR
          END-IF
        END-FOR
*
        COMPRESS NT-V.NOTE-TEXT-PAC-YYYY (4) NT-V.NOTE-TEXT-PAC-MM   (4)
          NT-V.NOTE-TEXT-PAC-DD   (4) INTO #YYYYMMDD-A LEAVING NO
*
        IF #SCR-HDR-TO-CLK = 'WWW'             /* do "UP"
          MOVE #CN TO #CGA-ORIG-ID /* chged 12/17/2001
          FIND (1) ST-V WITH MEMBER-KEY = #CN-A
            MOVE ST-V.SSN TO #CGA-SCR-ID
          END-FIND
*
          MOVE '@NX' TO #CGA-ORIG-SUFFIX
          FETCH RETURN 'C2250PUP'
*
          IF #CGA-ORIG-SUFFIX = '@NX' /* if "up" was actually updated
            MOVE 'YYY' TO #SCR-HDR-TO-CLK /* del NX/NU/PD
          END-IF
        END-IF
*
        FIND (1) NU-V WITH ID-NUMBER = #CN
          MOVE *ISN TO #NT-ISN
          FOR #I1 1 TO 500    /* Was 60                    /* DW5
            IF NU-V.NOTE-TEXT (#I1) = NT-V.NOTE-TEXT (4)
              IF #SCR-HDR-TO-CLK = 'ZZZ'              /* alter NU
                MOVE NU-V.NOTE-TEXT-57 (#I1) TO NU-V.NOTE-TEXT (#I1)
                PERFORM RESEQUENCE-NOTES
              END-IF
*
              IF #SCR-HDR-TO-CLK = 'YYY'              /* delete NU
                FOR #I1 #I1 TO 500   /* Was 60              /* DW5
                  IF #I1 LT 500      /* Was 60              /* DW5
                    FOR #I2 #I1 TO 499  /* was 59           /* DW5
                      MOVE NU-V.NOTE-TEXT(#I2 + 1) TO NU-V.NOTE-TEXT(#I2)
                      MOVE NU-V.NOTE-DATE(#I2 + 1) TO NU-V.NOTE-DATE(#I2)
                      MOVE NU-V.NOTE-CLERK-ID (#I2 + 1)
                        TO NU-V.NOTE-CLERK-ID (#I2)
                      MOVE NU-V.NOTE-LINE-NUM (#I2 + 1)
                        TO NU-V.NOTE-LINE-NUM (#I2)
*
                      IF NU-V.NOTE-TEXT (#I2 + 1) = ' '
                        ESCAPE BOTTOM
                      END-IF
                    END-FOR
                  END-IF
*
                  RESET NU-V.NOTE-TEXT (500)         /* WAS 60      /* DW5
                  RESET NU-V.NOTE-DATE (500)         /* WAs 60      /* DW5
                  RESET NU-V.NOTE-CLERK-ID (500)     /* WAs 60      /* DW5
                  RESET NU-V.NOTE-LINE-NUM (500)     /* Was 60      /* DW5
                  IF  (NU-V.NOTE-LINE-NUM (#I1) = 1)
                      OR (NU-V.NOTE-TEXT (#I1) = ' ')
                    ESCAPE BOTTOM  /* END OF DELETED NOTE SET
                  END-IF
                  SUBTRACT 1 FROM #I1
                END-FOR
              END-IF
              ESCAPE BOTTOM  /* END OF NOTE PROCESSING
            END-IF
          END-FOR
*
          UPDATE (0811)  /* UPDATE NU NOTE
        END-FIND
*
        IF   (#SCR-HDR-TO-CLK = 'YYY' OR = 'ZZZ')  /* NOT 'WWW'
            AND (#YYYYMMDD NE 0)
          READ MBRSHIP-MTD-DET-V BY ENTRY-DATE       /* del PD
              FROM #YYYYMMDD
              THRU #YYYYMMDD
            IF ((REC-ISN = #NT-ISN)
                OR (MBRSHIP-MTD-DET-V.ID-NUMBER = NU-V.ID-NUMBER))    /* DW4
                AND (CODE = 'S')
              DELETE (0857)    /* DELETE PENDING ACT
              ESCAPE BOTTOM
            END-IF
          END-READ
        END-IF
      END-IF
*
      GET NT-V #HOLD-ISN                   /* del NX
      DELETE (0870)               /*  DELETE NX MESSAGE
      END TRANSACTION
*
      MOVE 'Screen deleted - Press ENTER to continue' TO #SCR-MSG
      MOVE (AD=P) TO #SCR-CV (*)
*
      RESET #CGA-SCR-SUFFIX
      MOVE '*' TO #CGA-SCR-COMMAND
      INPUT TEXT #SCR-MSG USING MAP 'G4091MNX'
      PERFORM CHECK-CMD-TERMINATION
      RESET #SCR-MSG
      RESET #SCR-CV (*)
    ELSE
      IF #SCR-HDR-TO-CLK NE 'AAF'         /* SPECIAL EDS TASK NX RECS
        IF NOT #SCR-HDR-CV MODIFIED
            AND (NT-V.NOTE-CLERK-ID (1) NE 'EDS')
            AND (NT-V.NOTE-CLERK-ID (2) NE 'AAF')
            AND (NT-V.NOTE-CLERK-ID (2) =  #CGA-CLERK)    /* SENT TO VIEWER
          MOVE NT-V.NOTE-CLERK-ID (1) TO #SCR-HDR-TO-CLK
        ELSE
          PERFORM EDIT-TO-CLERK
        END-IF
      END-IF
*
      IF  ((#REQUESTED-CLK = 'AAF')              /* EDS TASK PROCESSING
          OR (#NOTE-NUM LT 900000))                 /* SPECIAL WORK NOTES
          AND (#CGA-CLERK = 'DRW' OR = 'YAK' OR = 'KEC' OR = 'VXT')         /* vt1
        PERFORM CHECK-SPECIAL-EDS-TASK-UPDT
      END-IF
*
      RESET #LINES-CHGED
*
      FOR #ISC 1 TO 22          /* SEE IF ANYTHING WAS CHANGED
        IF #SCR-CV (#ISC) MODIFIED
          MOVE TRUE TO #LINES-CHGED
          ESCAPE BOTTOM
        END-IF
      END-FOR
*
      IF #LINES-CHGED
          OR #SCR-HDR-CV MODIFIED
          OR #CHECK-INIT-TBL
        IF   (#SCR-HDR-TO-CLK = #CGA-CLERK)
            AND (#CGA-SCR-SUFFIX NE 'JOB')
          REINPUT 'INVALID TO SEND MESSAGE TO YOURSELF'
            MARK *#SCR-HDR-TO-CLK
        END-IF
*
        GET NT-V #HOLD-ISN
*
        IF #CHECK-INIT-TBL
          IF NT-V.ID-NUMBER NE 800018
            DELETE (0919)
          END-IF
*
          END TRANSACTION
          PERFORM FIND-NEXT-NX-NUM
          PERFORM SETUP-FOR-ADD-NOTES
*
          IF #LINES-EXIST
            PERFORM STORE-MULTIPLE-MSGS
            MOVE 'MULTIPLE MESSAGES SENT' TO #SCR-MSG
          END-IF
        ELSE
          IF NT-V.ID-NUMBER = 800018
            WRITE 'USE MULTIPLE RECEIVER SCREEN TO SEND WES BILL'
            ESCAPE ROUTINE
          END-IF
*
          RESET NT-V
          MOVE #NOTE-NUM       TO NT-V.ID-NUMBER
          MOVE *DATN           TO NT-V.DTS-DATN
          MOVE *TIMN           TO NT-V.DTS-TIMN
          MOVE *DATN           TO NT-V.NOTE-DATE     (1)
          MOVE #CGA-CLERK      TO NT-V.NOTE-CLERK-ID (1)
          MOVE #SCR-HDR-TO-CLK TO NT-V.NOTE-CLERK-ID (2)
          MOVE 'UNV'           TO NT-V.NOTE-CLERK-ID (3)
          PERFORM LOAD-SCR-HEADER-INFO
          PERFORM BUILD-NOTE-RECORD
*
          IF #LINES-EXIST
            PERFORM FIND-NEXT-NX-NUM
            MOVE #NOTE-NUM TO NT-V.ID-NUMBER    /* TO RESEQUENCE IT
            UPDATE (0919)
            PERFORM SET-MSG-SENT-INDICATOR
            END TRANSACTION
            MOVE 'SCREEN UPDATED - PRESS ENTER TO CONTINUE' TO #SCR-MSG
          ELSE
            DELETE (0919)
            END TRANSACTION
            MOVE 'SCREEN DELETED - PRESS ENTER TO CONTINUE' TO #SCR-MSG
          END-IF
        END-IF
*
        MOVE (AD=P) TO #SCR-CV (*)
        MOVE '*' TO #CGA-SCR-COMMAND
        INPUT TEXT #SCR-MSG USING MAP 'G4091MNX'
        PERFORM CHECK-CMD-TERMINATION
        RESET #SCR-MSG
        RESET #SCR-CV (*)
      END-IF
    END-IF
*
    IF #CHECK-INIT-TBL
      ESCAPE ROUTINE
    END-IF
*
    IF #CGA-SCR-COMMAND = '-' OR = '-X'    /* BACK 1 SCREEN
      ESCAPE BOTTOM
    END-IF
  END-READ
*
  IF   (#CGA-SCR-COMMAND = '-' OR = '-X')
      AND (NOT #VIEW-ONLY-UNV)
    IF #NOTE-NUM = 990001        /* AT BEGINNING OF COMPLETED TASKS
      MOVE 980001 TO #LAST-NOTE-TBL (1)  /*& GO TO BEGINNING OF PEND TASKS
      MOVE 1 TO #NOTE-SEQ-NUM
    ELSE
      IF #NOTE-SEQ-NUM = 0 OR = 1
        MOVE 1 TO #NOTE-SEQ-NUM
      ELSE
        SUBTRACT 1 FROM #NOTE-SEQ-NUM      /* TO GET LAST READ NOTE-NUM
      END-IF
    END-IF
*
    MOVE #LAST-NOTE-TBL (#NOTE-SEQ-NUM)  TO #NOTE-NUM
    SUBTRACT 1 FROM #NOTE-SEQ-NUM      /* SO COUNTER WILL SHOW RIGHT
*
    ESCAPE TOP                 /* TO TOP OF REPEAT
  END-IF
*
  ESCAPE BOTTOM                /* TO BYPASS REPEAT
END-REPEAT
*
IF   (#CGA-ORIG-COMMAND = '**' OR = '*P')  /* GOT HERE BY SUPERVISOR
    AND (#CGA-SCR-COMMAND = '*')
  MOVE #STORE-COMMAND TO #CGA-SCR-COMMAND
  MOVE #STORE-ID      TO #CGA-SCR-ID
  MOVE #STORE-SUFFIX  TO #CGA-SCR-SUFFIX
  FETCH 'G1000PXX'
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-SCREEN
* * * * * * * * * * * * * * * * * * * * * * *
*
RESET #SCR-LINES (*)
MOVE 31 TO #I1               /* BUCKET OF 18 SECTION
MOVE 1  TO #I2               /* INDEX IN THAT BUCKET
*
FOR #ISC 1 TO 22
  IF #I2 GT 3
    ADD 1 TO #I1
    MOVE 1 TO #I2
  END-IF
*
  MOVE NT-V.NOTE-TEXT (#ISC)     TO #FST-60
  MOVE NT-V.NOTE-18   (#I1, #I2) TO #LST-18
  MOVE #SPLIT-LINE TO #SCR-LINES (#ISC)
*
  ADD 1 TO #I2
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-NOTE-RECORD
* * * * * * * * * * * * * * * * * * * * * * *
*
MOVE 31 TO #I1               /* BUCKET OF 18 SECTION
MOVE 1  TO #I2               /* INDEX IN THAT BUCKET
RESET #LINES-EXIST
*
FOR #ISC 1 TO 22
  IF #SCR-LINES (#ISC) NE ' '
    MOVE TRUE TO #LINES-EXIST
  END-IF
*
  IF #I2 GT 3
    ADD 1 TO #I1
    MOVE 1 TO #I2
  END-IF
*
  MOVE #SCR-LINES (#ISC) TO #SPLIT-LINE
  MOVE #FST-60 TO NT-V.NOTE-TEXT (#ISC)
  MOVE #LST-18 TO NT-V.NOTE-18   (#I1, #I2)
*
  ADD 1 TO #I2
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-CMD-TERMINATION
* * * * * * * * * * * * * * * * * * * * * * *
*
IF #CGA-SCR-COMMAND = '*' OR = ' ' OR = '-' OR = '-X'
  IGNORE
ELSE
  END TRANSACTION
  FETCH 'G1000PXX'
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LOAD-SCR-HEADER-INFO
* * * * * * * * * * * * * * * * * * * * * * *
*
MOVE NT-V.DTS-DATN TO #YYYYMMDD
MOVE NT-V.DTS-TIMN TO #TIMN
*
IF #TIMN-HH-N GT 12
  SUBTRACT 12 FROM #TIMN-HH-N
END-IF
*
MOVE NT-V.NOTE-CLERK-ID (1) TO #SCR-HDR-CLK
*
IF NT-V.NOTE-CLERK-ID (2) = 'LIS'         /* LISTING FROM EDS
  MOVE NT-V.NOTE-CLERK-ID (4) TO #SCR-HDR-TO-CLK   /* INTENDED VIEWER
ELSE
  MOVE NT-V.NOTE-CLERK-ID (2) TO #SCR-HDR-TO-CLK
END-IF
*
MOVE #MM   TO #SCR-HDR-DT-MM
MOVE #DD   TO #SCR-HDR-DT-DD
MOVE #YYYY TO #SCR-HDR-DT-YYYY
MOVE #TIMN-HH   TO #SCR-HDR-TM-HH
MOVE #TIMN-MM   TO #SCR-HDR-TM-MM
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CHECK-SPECIAL-EDS-TASK-UPDT
* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
REPEAT                      /* <<<<<<<< TO REPEAT UPDATING
  RESET #LINES-CHGED
*
  FOR #ISC 1 TO 22          /* SEE IF ANYTHING WAS CHANGED
    IF #SCR-CV (#ISC) MODIFIED
      MOVE TRUE TO #LINES-CHGED
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  RESET #FOUND-AST
  RESET #EDIT-CODE-FOUND
  FOR #ISC 2 TO 22
    IF #SCR-LINES-1ST-POS (#ISC) = '*'     /* LINE TO MOVE "M" AFTER
      MOVE TRUE TO #FOUND-AST
    ELSE
      IF #SCR-LINES-1ST-POS (#ISC) NE ' '
        IF #EDIT-CODE-FOUND
          REINPUT 'ONLY 1 EDIT FUNCTION ALLOWED AT A TIME'
        ELSE
          MOVE TRUE TO #EDIT-CODE-FOUND
        END-IF
      END-IF
    END-IF
  END-FOR
*
  FOR #ISC 3 TO 22
    IF   (#SCR-LINES-1ST-POS(#ISC) = 'M') /* LINE TO MOVE TO AFTER * LINE
        AND (#FOUND-AST)                         /* MUST HAVE FOUND AN *
      RESET #SCR-LINES-1ST-POS (#ISC)
      MOVE #SCR-LINES (#ISC) TO #HOLD-LINE
*
      IF #ISC LT 22
        FOR #I1 #ISC TO 21
          MOVE #SCR-LINES (#I1 + 1) TO #SCR-LINES (#I1)
        END-FOR
      END-IF
*
      RESET #SCR-LINES (22)
      RESET #IAST
*
      FOR #ISC 2 TO 21
        IF #SCR-LINES-1ST-POS (#ISC) = '*'     /* LINE TO MOVE "M" AFTER
          RESET #SCR-LINES-1ST-POS (#ISC)
          MOVE #ISC TO #IAST
          ESCAPE BOTTOM
        END-IF
      END-FOR
*
      MOVE 21 TO #I1
      REPEAT UNTIL #I1 LE #IAST
        MOVE #SCR-LINES (#I1) TO #SCR-LINES (#I1 + 1)
        SUBTRACT 1 FROM #I1
      END-REPEAT
      MOVE #HOLD-LINE TO #SCR-LINES (#IAST + 1)
      MOVE TRUE TO #LINES-CHGED
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  RESET #HOLD-LINE
  FOR #ISC 2 TO 21
    IF #SCR-LINES-1ST-POS (#ISC) = 'I'     /* INSERT LINE AFTER THIS ONE
      RESET #SCR-LINES-1ST-POS (#ISC)
      MOVE #SCR-LINES (22) TO #HOLD-LINE
      MOVE 21 TO #I1
      REPEAT UNTIL #I1 LE #ISC
        MOVE #SCR-LINES (#I1) TO #SCR-LINES (#I1 + 1)
        SUBTRACT 1 FROM #I1
      END-REPEAT
      RESET #SCR-LINES (#ISC + 1)
      MOVE TRUE TO #LINES-CHGED
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  RESET #MOV-BACK-LINE
  RESET #COMPLETE-LINE
  FOR #ISC 3 TO 22
    IF #SCR-LINES-1ST-POS (#ISC) = 'K'    /* COMPLETE BUT KEEP LINE
      RESET #SCR-LINES-1ST-POS (#ISC)
      MOVE #SCR-LINES (#ISC) TO #COMPLETE-LINE
      MOVE TRUE TO #LINES-CHGED
      ESCAPE BOTTOM
    END-IF
*
    IF #SCR-LINES-1ST-POS (#ISC) = 'D' OR = '-' OR = 'C'  /* DEL THIS LINE
*
      IF #SCR-LINES-1ST-POS (#ISC) = '-'
        RESET #SCR-LINES-1ST-POS (#ISC)
        MOVE #SCR-LINES (#ISC) TO #MOV-BACK-LINE
      END-IF
*
      IF #SCR-LINES-1ST-POS (#ISC) = 'C'
        RESET #SCR-LINES-1ST-POS (#ISC)
        MOVE #SCR-LINES (#ISC) TO #COMPLETE-LINE
      END-IF
*
      RESET #SCR-LINES-1ST-POS (#ISC)
      MOVE #ISC TO #I1
      REPEAT UNTIL #I1 GT 21
        MOVE #SCR-LINES (#I1 + 1) TO #SCR-LINES (#I1)
        ADD 1 TO #I1
      END-REPEAT
      RESET #SCR-LINES (22)
      MOVE TRUE TO #LINES-CHGED
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  FOR #ISC 1 TO 22
    IF #SCR-LINES-1ST-POS (#ISC) = '+'     /* ADD NEW SCREEN
      RESET #SCR-LINES-1ST-POS (#ISC)
      MOVE TRUE TO #ADD-SCN
      MOVE TRUE TO #LINES-CHGED
      ESCAPE BOTTOM
    END-IF
  END-FOR
*
  IF #LINES-CHGED
    MOVE 'SCREEN UPDATED - ENTER MORE CHANGES OR PRESS ENTER' TO #SCR-MSG
    GET NT-V #HOLD-ISN
    RESET NT-V
    MOVE #NOTE-NUM     TO NT-V.ID-NUMBER
    MOVE *DATN         TO NT-V.DTS-DATN
    MOVE *TIMN         TO NT-V.DTS-TIMN
    MOVE *DATN         TO NT-V.NOTE-DATE  (1)
    MOVE #CGA-CLERK TO NT-V.NOTE-CLERK-ID (1)
    MOVE #SCR-HDR-TO-CLK  TO NT-V.NOTE-CLERK-ID (2)
    PERFORM LOAD-SCR-HEADER-INFO
    PERFORM BUILD-NOTE-RECORD
*
    UPDATE (1230)
    END TRANSACTION
*
    IF #MOV-BACK-LINE NE ' '
      COMPUTE #NOTE-NUM = #NOTE-NUM - 1
      RESET #HOLD-ISN
      FIND (1) NT-V WITH ID-NUMBER = #NOTE-NUM
        MOVE *ISN TO #HOLD-ISN
      END-FIND
*
      IF #HOLD-ISN = 0
        REINPUT 'NO PRECEEDING RECORD FOUND'
      END-IF
*
      SUBTRACT 1 FROM #NOTE-SEQ-NUM
      MOVE EDITED #NOTE-SEQ-NUM (EM=Z9) TO #SCR-NUM-OF-1
      GET NT-V #HOLD-ISN
      PERFORM BUILD-SCREEN
*
      MOVE #MOV-BACK-LINE TO #SCR-LINES (22)
*
      PERFORM BUILD-NOTE-RECORD
      UPDATE (1257)
      END TRANSACTION
*
      MOVE 'TASK MOVED TO PRECEEDING SCN - ENTER MORE CHANGES' TO #SCR-MSG
    END-IF
*
    IF #COMPLETE-LINE NE ' '
      RESET #HOLD-ISN
      FIND (1) NT-V WITH ID-NUMBER = 990001
        MOVE *ISN TO #HOLD-ISN
      END-FIND
*
      IF #HOLD-ISN = 0
        REINPUT 'NO COMPLETED 990000 RECS AVAILABLE'
      END-IF
*
      GET NT-V #HOLD-ISN
      MOVE NT-V.ID-NUMBER TO #NOTE-NUM
      PERFORM BUILD-SCREEN
*
      MOVE #SCR-LINES (22) TO #HOLD-LINE
      FOR #I1 21 TO 3 STEP -1
        MOVE #SCR-LINES (#I1) TO #SCR-LINES (#I1 + 1)
      END-FOR
*
      MOVE #COMPLETE-LINE TO #SCR-LINES (3)
      PERFORM BUILD-NOTE-RECORD
      UPDATE (1279)
      END TRANSACTION
*
      MOVE 'TASK MOVED TO COMPLETED - ENTER MORE CHANGES' TO #SCR-MSG
      MOVE 1 TO #NOTE-SEQ-NUM
      MOVE EDITED #NOTE-SEQ-NUM    (EM=Z9) TO #SCR-NUM-OF-1
      MOVE EDITED #NUM-COMPL-TASKS (EM=Z9) TO #SCR-NUM-OF-2
    END-IF
*
    IF #HOLD-LINE NE ' '
      REPEAT
        COMPUTE #NOTE-NUM = #NOTE-NUM + 1
        ADD 1 TO #NOTE-SEQ-NUM
        MOVE #NOTE-NUM TO #LAST-NOTE-TBL (#NOTE-SEQ-NUM)
        MOVE EDITED #NOTE-SEQ-NUM (EM=Z9) TO #SCR-NUM-OF-1
        RESET #HOLD-ISN
        FIND (1) NT-V WITH ID-NUMBER = #NOTE-NUM
          MOVE *ISN TO #HOLD-ISN
        END-FIND
*
        IF #HOLD-ISN = 0
          MOVE 'ADDITIONAL RECORDS MUST BE ADDED' TO #SCR-MSG
          ESCAPE BOTTOM
        END-IF
*
        GET NT-V #HOLD-ISN
        PERFORM BUILD-SCREEN
*
        MOVE #SCR-LINES (22) TO #HOLD-LINE-22
        FOR #I1 21 TO 3 STEP -1
          MOVE #SCR-LINES (#I1) TO #SCR-LINES (#I1 + 1)
        END-FOR
*
        MOVE #HOLD-LINE TO #SCR-LINES (3)
        MOVE #HOLD-LINE-22 TO #HOLD-LINE
*
        PERFORM BUILD-NOTE-RECORD
        UPDATE (1315)
        END TRANSACTION
*
        MOVE 'TASK MOVED TO FOLLOWING SCN - ENTER MORE CHANGES'
          TO #SCR-MSG
*
        IF #SCR-LINES (22) = ' '     /* THATS THE LAST SCREEN
          ESCAPE BOTTOM
        END-IF
      END-REPEAT
    END-IF
*
    IF #ADD-SCN           /* REQUEST TO BUILD NEW SCREEN
      RESET #ADD-SCN
      ADD 1 TO NT-V.ID-NUMBER
      RESET NOTE-TEXT (3:40)
      STORE NT-V
      END TRANSACTION
      MOVE 'NEW TASK SCREEN ADDED - ENTER MORE CHANGES' TO #SCR-MSG
    END-IF
*
    IF (#HOLD-ISN NE #HOLD-INIT-ISN)
        OR #ADD-SCN
      MOVE #HOLD-INIT-ISN TO #HOLD-ISN
      GET NT-V #HOLD-ISN
      MOVE NT-V.ID-NUMBER TO #NOTE-NUM
      PERFORM LOAD-SCR-HEADER-INFO
      PERFORM BUILD-SCREEN
    END-IF
*
    MOVE '*' TO #CGA-SCR-COMMAND
    INPUT TEXT #SCR-MSG USING MAP 'G4091MNX'
    PERFORM CHECK-CMD-TERMINATION
    RESET #SCR-HDR-CV
  ELSE
    ESCAPE BOTTOM             /* TO STOP CONTINOUS UPDATING
  END-IF
*
END-REPEAT /*(1109)
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE RESET-1ST-NAME-CLERK
* * * * * * * * * * * * * * * * * * * *
*
* IF #SCR-HDR-TO-CLK = 'DON'                                   /* vt 06/18/2013 \/
*   MOVE 'DRW' TO #SCR-HDR-TO-CLK
* END-IF                                                       /* vt 06/18/2013 /\
*
IF #SCR-HDR-TO-CLK = 'JOE'
  MOVE 'JJF' TO #SCR-HDR-TO-CLK
END-IF
*
IF #SCR-HDR-TO-CLK = 'LEE'
  MOVE 'ELB' TO #SCR-HDR-TO-CLK
END-IF
*
IF #SCR-HDR-TO-CLK = 'STE'
  MOVE 'SKH' TO #SCR-HDR-TO-CLK
END-IF
*
* IF #SCR-HDR-TO-CLK = 'LIN'                             /* 09/20/2017 \/
*   MOVE 'LCE' TO #SCR-HDR-TO-CLK
* END-IF                                                 /* 09/20/2017 /\
*
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE SET-MSG-SENT-INDICATOR
* * * * * * * * * * * * * * * * * * * * *
*
FIND (1) TRMS-V WITH CLERK-ID = #SCR-HDR-TO-CLK
  MOVE 'Y' TO MSG-JUST-SENT
  UPDATE (1400)
  END TRANSACTION
END-FIND
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE EDIT-TO-CLERK
* * * * * * * * * * * * * * * *
*
PERFORM RESET-1ST-NAME-CLERK               /* CHG DON TO DRW ETC
RESET #CLK-NAME
CALLNAT 'GCKNMSXX' #SCR-HDR-TO-CLK
  #INVALID
  #CLK-NAME
IF #INVALID OR (#SCR-HDR-TO-CLK = ' ')
*   MOVE 'DRW' TO #CLERK-ID-1 (1)                           /* vt 06182013
*   MOVE '*Don(EDS)' TO #CLERK-DESC-1 (1)                   /* vt 06182013
* MOVE 'JAK' TO #CLERK-ID-1 (2)
* MOVE '*Judy Kolva (EDS)' TO #CLERK-DESC-1 (2)
  MOVE 'VXT' TO #CLERK-ID-1 (2)                  /* vt1
  MOVE '*Venetka(EDS)' TO #CLERK-DESC-1 (2)      /* vt1
  MOVE 2 TO #I1
  MOVE 'TDM' TO #CLERK-ID-1 (3)
  MOVE '*Toni(EDS)' TO #CLERK-DESC-1 (3)
  MOVE 3 TO #I1
  MOVE 'YAK' TO #CLERK-ID-1 (4)
  MOVE '*Yelena(EDS)' TO #CLERK-DESC-1 (4)
  MOVE 4 TO #I1
*
  READ TM-V BY CLERK-ID
    IF TERMINAL-ID = 'ATMASTER' OR = 'CNMASTER' OR = 'YNMASTER'
        OR = 'T4CJDRW' OR = 'T4CJJAK' OR = 'SVMASTER'
        OR = 'DZYFS6'  OR = 'HZ172W' OR = 'ZZVLYG' OR = 'SZMJCG'
        OR = 'GZ311P'                             /* DW3
*     below are SAG and SBS
        OR = 'DZ4LK1' OR = 'RZN856' OR = 'VZYH4L' OR = 'DZSXSK' /* DW1
        OR = 'TZVS03' OR = 'ZZJMM0' OR = 'FZBFPP' OR = 'SZNG3J'
        OR = 'XZ9NNX'
*     below are AAFMAA PirooZ and Ramen
        OR = 'PZP5K6' OR = 'RZC0B7'
      ESCAPE TOP
    END-IF
*
    ADD 1 TO #I1
*
    IF #I1 LE 20
      MOVE CLERK-ID TO #CLERK-ID-1  (#I1)
      CALLNAT 'GCKNMSXX' CLERK-ID
        #INVALID
        #CLK-NAME
      IF #INVALID OR (CLERK-ID = ' ')
        MOVE 'UNKNOWN' TO #CLERK-DESC-1 (#I1)
      ELSE
        MOVE #CLK-NAME TO #CLERK-DESC-1 (#I1)
      END-IF
    ELSE
      IF #I1 LE 40
        MOVE CLERK-ID TO #CLERK-ID-2  (#I1 - 20)
        CALLNAT 'GCKNMSXX' CLERK-ID
          #INVALID
          #CLK-NAME
        IF #INVALID OR (CLERK-ID = ' ')
          MOVE 'UNKNOWN' TO #CLERK-DESC-2 (#I1 - 20)
        ELSE
          MOVE #CLK-NAME TO #CLERK-DESC-2 (#I1 - 20)
        END-IF
      ELSE
*       IF #CGA-CLERK = 'DRW'
*         DISPLAY CLERK-ID #I1
*       END-IF
*
        IF #I1 LE 60
          MOVE CLERK-ID TO #CLERK-ID-3  (#I1 - 40)
          CALLNAT 'GCKNMSXX' CLERK-ID
            #INVALID
            #CLK-NAME
          IF #INVALID OR (CLERK-ID = ' ')
            MOVE 'UNKNOWN' TO #CLERK-DESC-3 (#I1 - 40)
          ELSE
            MOVE #CLK-NAME TO #CLERK-DESC-3 (#I1 - 40)
          END-IF
        ELSE
          IF #I1 LE 80
            MOVE CLERK-ID TO #CLERK-ID-4  (#I1 - 60)
            CALLNAT 'GCKNMSXX' CLERK-ID
              #INVALID
              #CLK-NAME
            IF #INVALID OR (CLERK-ID = ' ')
              MOVE 'UNKNOWN' TO #CLERK-DESC-4 (#I1 - 60)
            ELSE
              MOVE #CLK-NAME TO #CLERK-DESC-4 (#I1 - 60)
            END-IF
          ELSE
            IF #I1 LE 100                                   /* DW2
              MOVE CLERK-ID TO #CLERK-ID-5  (#I1 - 80)
              CALLNAT 'GCKNMSXX' CLERK-ID
                #INVALID
                #CLK-NAME
              IF #INVALID OR (CLERK-ID = ' ')
                MOVE 'UNKNOWN' TO #CLERK-DESC-5 (#I1 - 80)
              ELSE
                MOVE #CLK-NAME TO #CLERK-DESC-5 (#I1 - 80)     /* DW2
              END-IF
            END-IF
          END-IF
        END-IF
      END-IF
    END-IF
  END-READ
*
  REPEAT
    MOVE TRUE TO #CHECK-INIT-TBL
    MOVE 'SELECT PERSON(S) WITH "X" TO RECEIVE MESSAGE' TO #SCR-MSG
    INPUT TEXT #SCR-MSG MARK *#INIT-TBL-1 (1) USING MAP 'G4092MNX'
    RESET #SCR-MSG
    PERFORM CHECK-CMD-TERMINATION
*
    IF #SCR-LINES (20) NE ' '   /* IF SCREEN ALREADY FILLED
      ESCAPE BOTTOM             /* DO NOT LOSE BOTTOM LINE
    END-IF
*
    FOR #I2 19 TO 1 STEP -1
      IF #SCR-LINES (#I2) NE ' '
        ADD 1 TO #I2
        ESCAPE BOTTOM
      END-IF
    END-FOR
*
    IF #I2 = 0
      MOVE 1 TO #I2
    END-IF
*
    FOR #I1 1 TO 20
      IF   (#INIT-TBL-1 (#I1) NE ' ')
          AND (#CLERK-ID-1 (#I1) NE ' ')
        ADD 1 TO #NUM-CLKS
        MOVE #CLERK-ID-1 (#I1) TO #SCR-HDR-TO-CLK
*
        IF #NUM-CLKS LT 11
          SEPARATE #CLERK-DESC-1(#I1) INTO #1ST-NAME #2ND-NAME #3RD-NAME
            WITH DELIMITER ' '
          COMPRESS #SCR-LINES (#I2) #1ST-NAME INTO #SCR-LINES (#I2)
            WITH '/'
        END-IF
      END-IF
    END-FOR
*
    FOR #I1 1 TO 20
      IF   (#INIT-TBL-2 (#I1) NE ' ')
          AND (#CLERK-ID-2 (#I1) NE ' ')
        ADD 1 TO #NUM-CLKS
        MOVE #CLERK-ID-2 (#I1) TO #SCR-HDR-TO-CLK
*
        IF #NUM-CLKS LT 11
          SEPARATE #CLERK-DESC-2(#I1) INTO #1ST-NAME #2ND-NAME #3RD-NAME
            WITH DELIMITER ' '
          COMPRESS #SCR-LINES (#I2) #1ST-NAME INTO #SCR-LINES (#I2)
            WITH '/'
        END-IF
      END-IF
    END-FOR
*
    FOR #I1 1 TO 20
      IF   (#INIT-TBL-3 (#I1) NE ' ')
          AND (#CLERK-ID-3 (#I1) NE ' ')
        ADD 1 TO #NUM-CLKS
        MOVE #CLERK-ID-3 (#I1) TO #SCR-HDR-TO-CLK
*
        IF #NUM-CLKS LT 11
          SEPARATE #CLERK-DESC-3(#I1) INTO #1ST-NAME #2ND-NAME #3RD-NAME
            WITH DELIMITER ' '
          COMPRESS #SCR-LINES (#I2) #1ST-NAME INTO #SCR-LINES (#I2)
            WITH '/'
        END-IF
      END-IF
    END-FOR
*
    FOR #I1 1 TO 20
      IF   (#INIT-TBL-4 (#I1) NE ' ')
          AND (#CLERK-ID-4 (#I1) NE ' ')
        ADD 1 TO #NUM-CLKS
        MOVE #CLERK-ID-4 (#I1) TO #SCR-HDR-TO-CLK
*
        IF #NUM-CLKS LT 11
          SEPARATE #CLERK-DESC-4(#I1) INTO #1ST-NAME #2ND-NAME #3RD-NAME
            WITH DELIMITER ' '
          COMPRESS #SCR-LINES (#I2) #1ST-NAME INTO #SCR-LINES (#I2)
            WITH '/'
        END-IF
      END-IF
    END-FOR
*
    IF #NUM-CLKS GE 11
      MOVE 'TO ALL CONCERNED:' TO #SCR-LINES (1)
    ELSE
      IF #NUM-CLKS GE 1
        COMPRESS 'TO' #SCR-LINES (#I2) INTO #SCR-LINES (#I2)
        COMPRESS #SCR-LINES (#I2) ':'  INTO #SCR-LINES (#I2) LEAVING NO
      ELSE
        ESCAPE TOP
      END-IF
    END-IF
*
    ESCAPE BOTTOM (1513)
  END-REPEAT
*
  INPUT TEXT #SCR-MSG MARK *#SCR-LINES (2) USING MAP 'G4091MNX'
  PERFORM CHECK-CMD-TERMINATION
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FIND-NEXT-NX-NUM                                     /* vt2 \/
* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
MOVE 950000 TO #NOTE-NUM
READ NT-CNT-V BY ID-NUMBER FROM #NOTE-NUM
  IF #NOTE-NUM < NT-CNT-V.ID-NUMBER
    ESCAPE BOTTOM
  END-IF
  IF NT-CNT-V.ID-NUMBER GE 980000
    ESCAPE BOTTOM
  END-IF
  ADD 1 TO #NOTE-NUM
END-READ
* READ (1) NT-CNT-V BY ID-NUMBER FROM #NOTE-NUM /* FIND NEXT AVAIL NX NUM
*   MOVE NT-CNT-V.ID-NUMBER TO #NOTE-NUM
* END-READ
* *
* IF  (#NOTE-NUM LE 950000)
*     OR (#NOTE-NUM GT 980000)
*   MOVE 980000 TO #NOTE-NUM
* END-IF
* SUBTRACT 1 FROM #NOTE-NUM
*
END-SUBROUTINE                                                        /* vt2 /\
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE SETUP-FOR-ADD-NOTES
* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
RESET NT-V
MOVE #NOTE-NUM     TO NT-V.ID-NUMBER
* MOVE 979999        TO NT-V.ID-NUMBER   /* TO FORCE A NEW NOTE
MOVE *DATN         TO NT-V.DTS-DATN
MOVE *TIMN         TO NT-V.DTS-TIMN
MOVE *DATN         TO NT-V.NOTE-DATE (1)
MOVE #CGA-CLERK    TO NT-V.NOTE-CLERK-ID  (1)
MOVE #SCR-HDR-TO-CLK TO NT-V.NOTE-CLERK-ID (2)
MOVE 'UNV'           TO NT-V.NOTE-CLERK-ID (3)
PERFORM BUILD-NOTE-RECORD
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE STORE-MULTIPLE-MSGS
* * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
FOR #I1 1 TO 20
  IF #INIT-TBL-1 (#I1) NE ' '
    MOVE #CLERK-ID-1 (#I1) TO NT-V.NOTE-CLERK-ID (2)
    STORE NT-V
    MOVE #CLERK-ID-1 (#I1) TO #SCR-HDR-TO-CLK
    PERFORM SET-MSG-SENT-INDICATOR
    SUBTRACT 1 FROM NT-V.ID-NUMBER
  END-IF
END-FOR
*
FOR #I1 1 TO 20
  IF #INIT-TBL-2 (#I1) NE ' '
    MOVE #CLERK-ID-2 (#I1) TO NT-V.NOTE-CLERK-ID (2)
    STORE NT-V
    MOVE #CLERK-ID-2 (#I1) TO #SCR-HDR-TO-CLK
    PERFORM SET-MSG-SENT-INDICATOR
    SUBTRACT 1 FROM NT-V.ID-NUMBER
  END-IF
END-FOR
*
FOR #I1 1 TO 20
  IF #INIT-TBL-3 (#I1) NE ' '
    MOVE #CLERK-ID-3 (#I1) TO NT-V.NOTE-CLERK-ID (2)
    STORE NT-V
    MOVE #CLERK-ID-3 (#I1) TO #SCR-HDR-TO-CLK
    PERFORM SET-MSG-SENT-INDICATOR
    SUBTRACT 1 FROM NT-V.ID-NUMBER
  END-IF
END-FOR
*
FOR #I1 1 TO 20
  IF #INIT-TBL-4 (#I1) NE ' '
    MOVE #CLERK-ID-4 (#I1) TO NT-V.NOTE-CLERK-ID (2)
    STORE NT-V
    MOVE #CLERK-ID-4 (#I1) TO #SCR-HDR-TO-CLK
    PERFORM SET-MSG-SENT-INDICATOR
    SUBTRACT 1 FROM NT-V.ID-NUMBER
  END-IF
END-FOR
*
FOR #I1 1 TO 20                            /* DW2
  IF #INIT-TBL-5 (#I1) NE ' '
    MOVE #CLERK-ID-5 (#I1) TO NT-V.NOTE-CLERK-ID (2)
    STORE NT-V
    MOVE #CLERK-ID-5 (#I1) TO #SCR-HDR-TO-CLK
    PERFORM SET-MSG-SENT-INDICATOR
    SUBTRACT 1 FROM NT-V.ID-NUMBER
  END-IF
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
DEFINE SUBROUTINE SEND-AUTO-MSG
* * * * * * * * * * * * * *
*
* MOVE 950000 TO #NOTE-NUM       /* SEND ACCOUNTING NOTES                            /* vt2 \/
* READ (1) NT-V BY ID-NUMBER FROM #NOTE-NUM /* FIND NEXT AVAIL NX NOTE
*   MOVE NT-V.ID-NUMBER TO #NOTE-NUM
* END-READ
* *
* IF  (#NOTE-NUM LE 950000)
*     OR (#NOTE-NUM GT 980000)
*   MOVE 980000 TO #NOTE-NUM
* END-IF
*
* SUBTRACT 1 FROM #NOTE-NUM
PERFORM FIND-NEXT-NX-NUM                                                            /* vt2 /\
RESET NT-V
MOVE #NOTE-NUM     TO NT-V.ID-NUMBER
MOVE *DATN         TO NT-V.DTS-DATN
MOVE *TIMN         TO NT-V.DTS-TIMN
MOVE *DATN         TO NT-V.NOTE-DATE (1)
MOVE #FROM-INIT    TO NT-V.NOTE-CLERK-ID (1)
MOVE #TO-INIT      TO NT-V.NOTE-CLERK-ID (2)
MOVE 'UNV'         TO NT-V.NOTE-CLERK-ID (3)
*
FOR #I1 1 TO 5
  IF #MSG (#I1) NE ' '
    MOVE #MSG (#I1) TO NT-V.NOTE-TEXT (#I1)
  END-IF
END-FOR
*
STORE NT-V
*
FIND (1) TRMS-V WITH CLERK-ID = #TO-INIT
  MOVE 'Y' TO MSG-JUST-SENT
  UPDATE (1747)
END-FIND
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE RESEQUENCE-NOTES
* * * * * * * * * * * * * * * * *
*
RESET #NOTE-DATE     (*)  /* PUT IMPORTANT NOTES AT
  #NOTE-CLERK-ID (*)  /* BEGINNING
  #NOTE-LINE-NUM (*)
  #NOTE-TEXT     (*)
RESET #I2
FOR #I3 1 TO 500     /* WAS 60         /* DW5
  IF  (#I3 GT 500)   /* Was 60         /* DW5
      OR (NU-V.NOTE-TEXT (#I3) = ' ')
    ESCAPE BOTTOM
  END-IF
*
  IF   (NU-V.NOTE-TEXT     (#I3) = MASK ('*')) /* IMPORTANT NOTES
      AND (NU-V.NOTE-LINE-NUM (#I3) = 1)  /* ARE PRECEDED BY "*"
    REPEAT
      ADD 1 TO #I2
      MOVE NU-V.NOTE-DATE     (#I3) TO #NOTE-DATE    (#I2)
      MOVE NU-V.NOTE-CLERK-ID (#I3) TO #NOTE-CLERK-ID(#I2)
      MOVE NU-V.NOTE-LINE-NUM (#I3) TO #NOTE-LINE-NUM(#I2)
      MOVE NU-V.NOTE-TEXT     (#I3) TO #NOTE-TEXT    (#I2)
*
      IF  (#I3 + 1) GT 500       /* Was 60              /* DW5
          OR (NU-V.NOTE-LINE-NUM (#I3 + 1) = 1)
          OR (NU-V.NOTE-TEXT     (#I3 + 1) = ' ')
        ESCAPE BOTTOM
      END-IF
*
      ADD 1 TO #I3
    END-REPEAT
  END-IF
END-FOR
*
FOR #I3 1 TO 500    /* Was 60  /* PUT NEW OR UPDATED NOTES NEXT   /* DW5
  IF  (#I3 GT 500)     /* Was 60                                  /* DW5
      OR (NU-V.NOTE-TEXT (#I3) = ' ')
    ESCAPE BOTTOM
  END-IF
*
  IF   (NU-V.NOTE-TEXT     (#I3) NE MASK ('*')) /* UN-IMPORTANT NOTES
      AND (NU-V.NOTE-LINE-NUM (#I3) = 1)
    REPEAT
      ADD 1 TO #I2
      MOVE NU-V.NOTE-DATE     (#I3) TO #NOTE-DATE    (#I2)
      MOVE NU-V.NOTE-CLERK-ID (#I3) TO #NOTE-CLERK-ID(#I2)
      MOVE NU-V.NOTE-LINE-NUM (#I3) TO #NOTE-LINE-NUM(#I2)
      MOVE NU-V.NOTE-TEXT     (#I3) TO #NOTE-TEXT    (#I2)
*
      IF  (#I3 + 1) GT 500          /* Was 60                    /* DW5
          OR (NU-V.NOTE-LINE-NUM (#I3 + 1) = 1)
          OR (NU-V.NOTE-TEXT     (#I3 + 1) = ' ')
        ESCAPE BOTTOM
      END-IF
*
      ADD 1 TO #I3
    END-REPEAT
  END-IF
END-FOR
*
FOR #I3 1 TO 500          /* WAs 60                  /* DW5
  RESET NU-V.NOTE-DATE     (#I3)
  RESET NU-V.NOTE-CLERK-ID (#I3)
  RESET NU-V.NOTE-LINE-NUM (#I3)
  RESET NU-V.NOTE-TEXT     (#I3)
  MOVE #NOTE-DATE     (#I3) TO NU-V.NOTE-DATE    (#I3)
  MOVE #NOTE-CLERK-ID (#I3) TO NU-V.NOTE-CLERK-ID(#I3)
  MOVE #NOTE-LINE-NUM (#I3) TO NU-V.NOTE-LINE-NUM(#I3)
  MOVE #NOTE-TEXT     (#I3) TO NU-V.NOTE-TEXT    (#I3)
END-FOR
*
END-SUBROUTINE
*
END
