* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID  SAGSRT6
************************************************************************
*                       MODIFICATION LOG
* USER DATE      TAG   REASON
*
* SAG  11242005  RH1   SS - Created for implementing sorting algorithm *
************************************************************************
DEFINE DATA PARAMETER
**
1 #SRT-TABLE                (A40/1:198) /* USED FOR SORT
1 REDEFINE #SRT-TABLE
  2 #SRT-TYPE-COD           (A1)
  2 #SRT-MSB-FIELDS
    3 #SRT-MSB-NAME         (A25)  /* 25
    3 #SRT-MSB-TYPE         (A3)   /* 03
    3 #SRT-MSB-TICK-SYM     (A6)   /* 06
    3 #SRT-MSB-UNITS        (P6.3) /* 05 = 39
**
1 #SRT-PARM
  2 #SRT-NUM-ENTRIES         (I2)
  2 #SRT-ENTRY-LENGTH        (I2)
  2 #SRT-KEY-LENGTH          (I2) /* 25 OR 14 OR 27 OR 13
  2 #SRT-KEY-POSITION        (I2)
  2 #SRT-SORT-TYPE           (A1)
**
LOCAL
**
1 #SRT-WORK                  (198)
  2 #SRT-TYPE-COD            (A1)
  2 #SRT-MSB-FIELDS
    3 #SRT-MSB-NAME          (A25)  /* 25
    3 #SRT-MSB-TYPE          (A3)   /* 03
    3 #SRT-MSB-TICK-SYM      (A6)   /* 06
    3 #SRT-MSB-UNITS         (P6.3) /* 05 = 39
1 REDEFINE #SRT-WORK
  2 #SRT-ROW                 (A40/1:198)
**
1 REDEFINE #SRT-WORK
  2 #SRT-REC-1               (198)
    3 #SRT-KEY-1             (A25)
    3 #SRT-FILL-1            (A15)
**
1 REDEFINE #SRT-WORK
  2 #SRT-REC-2               (198)
    3 #SRT-KEY-2             (A14)
    3 #SRT-FILL-2            (A26)
**
1 REDEFINE #SRT-WORK
  2 #SRT-REC-3               (198)
    3 #SRT-KEY-3             (A27)
    3 #SRT-FILL-3            (A13)
**
1 REDEFINE #SRT-WORK
  2 #SRT-REC-4               (198)
    3 #SRT-KEY-4             (A13)
    3 #SRT-FILL-4            (A26)
**
1 #I                 (P7)
1 #ROWS              (P7)
1 #DONE              (L)  INIT <FALSE>
1 #TEMP-ROW          (A12)
**
END-DEFINE
**
**  first eliminate any empty rows
FOR #I EQ 1 TO 198
  IF SUBSTR(#SRT-TABLE(#I),1,#SRT-KEY-LENGTH) EQ ' '
    ESCAPE TOP
  ELSE
    ADD 1 TO #ROWS
    MOVE #SRT-TABLE (#I) TO #SRT-ROW (#ROWS)
  END-IF
**
END-FOR
IF #ROWS EQ 0 ESCAPE ROUTINE END-IF
**

DECIDE ON FIRST VALUE OF #SRT-SORT-TYPE
**
  VALUE 'A'
    DECIDE ON FIRST VALUE OF #SRT-KEY-LENGTH
      VALUE 25
        REPEAT UNTIL #DONE
          #DONE := TRUE
          FOR #I EQ 2 TO #ROWS
            IF #SRT-KEY-1 (#I) LT #SRT-KEY-1 (#I - 1)
              MOVE #SRT-ROW (#I - 1) TO #TEMP-ROW
              MOVE #SRT-ROW (#I) TO #SRT-ROW (#I - 1)
              MOVE #TEMP-ROW TO #SRT-ROW (#I)
              #DONE := FALSE
            END-IF
          END-FOR
        END-REPEAT
      VALUE 14
        REPEAT UNTIL #DONE
          #DONE := TRUE
          FOR #I EQ 2 TO #ROWS
            IF #SRT-KEY-2 (#I) LT #SRT-KEY-2 (#I - 1)
              MOVE #SRT-ROW (#I - 1) TO #TEMP-ROW
              MOVE #SRT-ROW (#I) TO #SRT-ROW (#I - 1)
              MOVE #TEMP-ROW TO #SRT-ROW (#I)
              #DONE := FALSE
            END-IF
          END-FOR
        END-REPEAT
      VALUE 27
        REPEAT UNTIL #DONE
          #DONE := TRUE
          FOR #I EQ 2 TO #ROWS
            IF #SRT-KEY-3 (#I) LT #SRT-KEY-3 (#I - 1)
              MOVE #SRT-ROW (#I - 1) TO #TEMP-ROW
              MOVE #SRT-ROW (#I) TO #SRT-ROW (#I - 1)
              MOVE #TEMP-ROW TO #SRT-ROW (#I)
              #DONE := FALSE
            END-IF
          END-FOR
        END-REPEAT
      VALUE 13
        REPEAT UNTIL #DONE
          #DONE := TRUE
          FOR #I EQ 2 TO #ROWS
            IF #SRT-KEY-4 (#I) LT #SRT-KEY-4 (#I - 1)
              MOVE #SRT-ROW (#I - 1) TO #TEMP-ROW
              MOVE #SRT-ROW (#I) TO #SRT-ROW (#I - 1)
              MOVE #TEMP-ROW TO #SRT-ROW (#I)
              #DONE := FALSE
            END-IF
          END-FOR
        END-REPEAT
      NONE
        WRITE // 'ERROR IN SAGSORT - SORT KEY LENGTH' #SRT-KEY-LENGTH
          'NOT IMPLEMENTED - EXECUTION TERMINATED'
        STOP
    END-DECIDE
  VALUE 'D'
    WRITE // 'ERROR IN SAGSORT - SORT TYPE' #SRT-SORT-TYPE
      'NOT IMPLEMENTED - EXECUTION TERMINATED'
    STOP
**
  NONE VALUE
    WRITE // 'ERROR IN SAGSORT - SORT TYPE' #SRT-SORT-TYPE
      'NOT RECOGNIZED - EXECUTION TERMINATED'
    STOP
**
END-DECIDE
**
RESET #SRT-TABLE (*)
FOR #I EQ 1 TO #ROWS
  MOVE #SRT-ROW (#I) TO #SRT-TABLE (#I)
END-FOR
#SRT-NUM-ENTRIES := #ROWS  /* SUBJECT TO CONFIRMATION
**
END
