* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* ----------------------------------------------------------------------
* Generated from NFN XML TOOLKIT
*
*   'AUCMASP1'
*
* DESCRIPTION
*   Address share XML Parser implementationfor file:
*
* ----------------------------------------------------------------------
*
DEFINE DATA PARAMETER
1 #XML_INPUT             (A) DYNAMIC BY VALUE
1 #XML_OUTPUT            (A) DYNAMIC        /* Out
LOCAL USING AUCAAS01
LOCAL USING AUCAAD01
LOCAL USING AUCAER01
LOCAL USING PARSER-X
LOCAL
1 #XML_PATH             (A) DYNAMIC
1 #XML_VALUE            (A) DYNAMIC
1 #XML_NAME             (A) DYNAMIC
1 #PREV_PARSE-TYPE      (A1)
1 XML_PARSER_XPATH_TYPE (A1)
1 XML_PARSER_ERROR_TEXT (A253)
1 XML_PARSER_RESPONSE   (I4)
1 XML_PARSER_CONTENT_IS_EMPTY (L)
*
LOCAL
1 #NODES (A/10) DYNAMIC
1 #LEN              (I4)
1 #PARSE-ERROR      (I4) CONST <-7>
1 #NATURAL-ERROR    (I4) CONST <-3>
1 #ERROR-LOG        (I4) CONST <3>
1 BLANK             (A1) CONST <' '>
1 #TRUE             (A4) CONST <'TRUE'>
1 #ZIP-CODE          (A9) 1 REDEFINE #ZIP-CODE
  2 #ZIP5    (N5)
  2 #ZIP4    (N4)
1 REDEFINE #ZIP-CODE
  2 #ZIPN    (N9)
1 #CX               (I4)
1 #FAMILY           (A) DYNAMIC CONST <'FAMILY'>
END-DEFINE
*
#AUCerror.ErrorTag := 'AddressShare'
ASSIGN #LEN := *LENGTH (#XML_INPUT)
IF #LEN <= 0
  #AUCerror.ErrorCode := #Parse-error
  #AUCerror.ErrorDescription := 'Empty search data XML'
  CALLNAT 'AUCNERS1' #XML_OUTPUT #AUCerror
  ESCAPE ROUTINE
END-IF
RESET AddressRelation (*)
*
INCLUDE PARSER_X '#XML_INPUT'       /* XML file to be parsed
  '#XML_PATH'                       /* XPATH to represent element...
  'XML_PARSER_XPATH_TYPE'           /* Type of callback
  '#XML_VALUE'                      /* Content of element found
  'XML_PARSER_CONTENT_IS_EMPTY'     /* Is TRUE if element is empty
  'XML_PARSER_ERROR_TEXT'           /* error Message
  'XML_PARSER_RESPONSE'             /* Error NR; 0 = OK
*
DEFINE SUBROUTINE PARSER_ERROR
/*                ============
#AUCerror.ErrorCode := #PARSE-ERROR
#AUCerror.ErrorDescription := XML_PARSER_ERROR_TEXT
CALLNAT 'AUCNERS1' #XML_OUTPUT #AUCerror
END-SUBROUTINE
*
DEFINE SUBROUTINE CALLBACK
/*                ========
#XML_VALUE := *TRIM (#XML_VALUE)
MOVE *TRANSLATE(#XML_VALUE, UPPER) TO #XML_VALUE
PERFORM PARSE-DOCUMENT
END-SUBROUTINE
*
IF PageActionType > 0
  CALLNAT 'AUCNASM1' AddressShare
    Address.AddressPoolID
    Address.User
  IF AddressShare.ErrorCode (*) > 0
    CALLNAT 'AUCNASG2' #XML_OUTPUT AddressShare
    BACKOUT TRANSACTION
    ESCAPE ROUTINE
  ELSE
    END TRANSACTION
    CALLNAT 'MBRCRC' AddressShare.PageContactID #FAMILY
  END-IF
END-IF
CALLNAT 'AUCNASG1'
  AddressShare.PageContactID
  Address.AddressPoolID
  #XML_OUTPUT            /* AddressShare Get
* ------------------------------------------------- CALL THE PARSER
DEFINE PARSE-DOCUMENT
/*     ==============
**PARSE XML #XML_INPUT INTO PATH #XML_PATH NAME #XML_NAME VALUE #XML_VALUE
*
DECIDE ON FIRST #XML_PATH
  VALUE 'AddressShare//'
    IGNORE
  VALUE 'AddressShare'
    RESET INITIAL AddressShare
  VALUE 'AddressShare/ActionType//'
    IGNORE
  VALUE 'AddressShare/ActionType'
    IGNORE
  VALUE 'AddressShare/ActionType/$'
    AddressShare.PageActionType := VAL(#XML_VALUE)
  VALUE 'AddressShare/User//'
    IGNORE
  VALUE 'AddressShare/User'
    IGNORE
  VALUE 'AddressShare/User/$'
    IF #XML_VALUE NE BLANK
      Address.User := FUNCTION-WEB-USER(<#XML_VALUE>)(2)
    END-IF
  VALUE 'AddressShare/ContactID//'
    IGNORE
  VALUE 'AddressShare/ContactID'
    IGNORE
  VALUE 'AddressShare/ContactID/$'
    AddressShare.PageContactID := VAL(#XML_VALUE)
  VALUE 'AddressShare/AddressContacts//'
    IGNORE
  VALUE 'AddressShare/AddressContacts'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact'
    ADD 1 TO AddressShare.C@AddressContacts
    #CX := AddressShare.C@AddressContacts
    EXPAND ARRAY AddressShare.AddressContacts TO (1:#CX)
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/ActionType//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/ActionType'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/ActionType/$'
    AddressShare.ActionType(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/ErrorCode//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/ErrorCode'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/ErrorCode/$'
    AddressShare.ErrorCode(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/ErrorDescription//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/ErrorDescription'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/ErrorDescription/$'
    AddressShare.ErrorDescription(#CX) := #XML_VALUE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/ContactID//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/ContactID'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/ContactID/$'
    AddressShare.ContactID(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/CN//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/CN'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/CN/$'
    AddressShare.CN(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/LastUpdatedDate//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/LastUpdatedDate'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/LastUpdatedDate/$'
    AddressShare.LastUpdatedDate(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/LastUpdatedTime//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/LastUpdatedTime'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/LastUpdatedTime/$'
    AddressShare.LastUpdatedTime(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/LastUpdatedUser//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/LastUpdatedUser'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/LastUpdatedUser/$'
    AddressShare.LastUpdatedUser(#CX) := #XML_VALUE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/SystemSource//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/SystemSource'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/SystemSource/$'
    AddressShare.SystemSource(#CX) := #XML_VALUE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/User//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/User'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/User/$'
    AddressShare.User(#CX) := #XML_VALUE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/AddressPoolID//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/AddressPoolID'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/AddressPoolID/$'
    AddressShare.AddressPoolID(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/RelationID//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/RelationID'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/RelationID/$'
    AddressShare.RelationID(#CX) := VAL(#XML_VALUE)
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/AddressTypeCode//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/AddressTypeCode'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/AddressTypeCode/$'
    AddressShare.AddressTypeCode(#CX) := #XML_VALUE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/AddressLocationCode//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/AddressLocationCode'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/AddressLocationCode/$'
    AddressShare.AddressLocationCode(#CX) := #XML_VALUE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/Source//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/Source'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/Source/$'
    AddressShare.Source(#CX) := #XML_VALUE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/Undeliverable//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/Undeliverable'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/Undeliverable/$'
    IF #XML_VALUE = #TRUE
      AddressShare.Undeliverable(#CX) := 'Y'
    ELSE
      AddressShare.Undeliverable(#CX) := 'N'
    END-IF
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/Protected//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/Protected'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/Protected/$'
    IF #XML_VALUE = #TRUE
      AddressShare.Protected(#CX) := 'Y'
    ELSE
      AddressShare.Protected(#CX) := 'N'
    END-IF
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/AttentionLine//'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/AttentionLine'
    IGNORE
  VALUE 'AddressShare/AddressContacts/AddressContact/AddressRelation/AttentionLine/$'
    AddressShare.AttentionLine(#CX) := #XML_VALUE
  VALUE 'AddressShare/Address//'
    IGNORE
  VALUE 'AddressShare/Address'
    IGNORE
  VALUE 'AddressShare/Address/ActionType//'
    IGNORE
  VALUE 'AddressShare/Address/ActionType'
    IGNORE
  VALUE 'AddressShare/Address/ActionType/$'
    Address.ActionType := VAL(#XML_VALUE)
  VALUE 'AddressShare/Address/ErrorCode//'
    IGNORE
  VALUE 'AddressShare/Address/ErrorCode'
    IGNORE
  VALUE 'AddressShare/Address/ErrorCode/$'
    Address.ErrorCode := VAL(#XML_VALUE)
  VALUE 'AddressShare/Address/ErrorDescription//'
    IGNORE
  VALUE 'AddressShare/Address/ErrorDescription'
    IGNORE
  VALUE 'AddressShare/Address/ErrorDescription/$'
    Address.ErrorDescription := #XML_VALUE
  VALUE 'AddressShare/Address/ContactID//'
    IGNORE
  VALUE 'AddressShare/Address/ContactID'
    IGNORE
  VALUE 'AddressShare/Address/ContactID/$'
    Address.ContactID := VAL(#XML_VALUE)
  VALUE 'AddressShare/Address/CN//'
    IGNORE
  VALUE 'AddressShare/Address/CN'
    IGNORE
  VALUE 'AddressShare/Address/CN/$'
    Address.CN := VAL(#XML_VALUE)
  VALUE 'AddressShare/Address/LastUpdatedDate//'
    IGNORE
  VALUE 'AddressShare/Address/LastUpdatedDate'
    IGNORE
  VALUE 'AddressShare/Address/LastUpdatedDate/$'
    Address.LastUpdatedDate := VAL(#XML_VALUE)
  VALUE 'AddressShare/Address/LastUpdatedTime//'
    IGNORE
  VALUE 'AddressShare/Address/LastUpdatedTime'
    IGNORE
  VALUE 'AddressShare/Address/LastUpdatedTime/$'
    Address.LastUpdatedTime := VAL(#XML_VALUE)
  VALUE 'AddressShare/Address/LastUpdatedUser//'
    IGNORE
  VALUE 'AddressShare/Address/LastUpdatedUser'
    IGNORE
  VALUE 'AddressShare/Address/LastUpdatedUser/$'
    Address.LastUpdatedUser := #XML_VALUE
  VALUE 'AddressShare/Address/SystemSource//'
    IGNORE
  VALUE 'AddressShare/Address/SystemSource'
    IGNORE
  VALUE 'AddressShare/Address/SystemSource/$'
    Address.SystemSource := #XML_VALUE
  VALUE 'AddressShare/Address/User//'
    IGNORE
  VALUE 'AddressShare/Address/User'
    IGNORE
  VALUE 'AddressShare/Address/User/$'
    IF #XML_VALUE NE BLANK
      Address.User := FUNCTION-WEB-USER(<#XML_VALUE>)(2)
    END-IF
  VALUE 'AddressShare/Address/AddressPoolID//'
    IGNORE
  VALUE 'AddressShare/Address/AddressPoolID'
    IGNORE
  VALUE 'AddressShare/Address/AddressPoolID/$'
    Address.AddressPoolID := VAL(#XML_VALUE)
  VALUE 'AddressShare/Address/Street//'
    IGNORE
  VALUE 'AddressShare/Address/Street'
    IGNORE
  VALUE  'AddressShare/Address/Street/![CDATA['
    Address.Street := #XML_VALUE
  VALUE  'AddressShare/Address/Street/$'
    Address.Street := #XML_VALUE
  VALUE 'AddressShare/Address/Unit//'
    IGNORE
  VALUE 'AddressShare/Address/Unit'
    IGNORE
  VALUE 'AddressShare/Address/Unit/![CDATA['
    Address.Unit := #XML_VALUE
  VALUE 'AddressShare/Address/Unit/$'
    Address.Unit := #XML_VALUE
  VALUE 'AddressShare/Address/City//'
    IGNORE
  VALUE 'AddressShare/Address/City'
    IGNORE
  VALUE 'AddressShare/Address/City/$'
    Address.City := #XML_VALUE
  VALUE 'AddressShare/Address/StateCode//'
    IGNORE
  VALUE 'AddressShare/Address/StateCode'
    IGNORE
  VALUE 'AddressShare/Address/StateCode/$'
    Address.StateCode := #XML_VALUE
  VALUE 'AddressShare/Address/ZipCode//'
    IGNORE
  VALUE 'AddressShare/Address/ZipCode'
    IGNORE
  VALUE 'AddressShare/Address/ZipCode/$'
    ASSIGN #LEN := *LENGTH (#XML_VALUE)
    IF #LEN > 0
      IF #LEN < 6
        #ZIP5 := VAL(#XML_VALUE)
        RESET #ZIP4
      ELSE
        #ZIPN := VAL(#XML_VALUE)
      END-IF
      Address.ZipCode := #ZIPN
    END-IF
  VALUE 'AddressShare/Address/CountryCode//'
    IGNORE
  VALUE 'AddressShare/Address/CountryCode'
    IGNORE
  VALUE 'AddressShare/Address/CountryCode/$'
    Address.CountryCode := #XML_VALUE
  VALUE 'AddressShare/Address/IntlRegion//'
    IGNORE
  VALUE 'AddressShare/Address/IntlRegion'
    IGNORE
  VALUE 'AddressShare/Address/IntlRegion/$'
    Address.IntlRegion := #XML_VALUE
  VALUE 'AddressShare/Address/PostalCode//'
    IGNORE
  VALUE 'AddressShare/Address/PostalCode'
    IGNORE
  VALUE 'AddressShare/Address/PostalCode/$'
    Address.PostalCode := #XML_VALUE
  VALUE 'AddressShare/Address/Urbanization//'
    IGNORE
  VALUE 'AddressShare/Address/Urbanization'
    IGNORE
  VALUE 'AddressShare/Address/Urbanization/$'
    Address.Urbanization := #XML_VALUE
  VALUE 'AddressShare/Address/AddressFormatTypeCode//'
    IGNORE
  VALUE 'AddressShare/Address/AddressFormatTypeCode'
    IGNORE
  VALUE 'AddressShare/Address/AddressFormatTypeCode/$'
    Address.AddressFormatTypeCode := #XML_VALUE
  VALUE 'AddressShare/Address/AddressValidIndicator//'
    IGNORE
  VALUE 'AddressShare/Address/AddressValidIndicator'
    IGNORE
  VALUE 'AddressShare/Address/AddressValidIndicator/$'
    IF #XML_VALUE = #TRUE
      Address.AddressValidIndicator := 'Y'
    ELSE
      Address.AddressValidIndicator := 'N'
    END-IF
  VALUE 'AddressShare/Address/Share//'
    IGNORE
  VALUE 'AddressShare/Address/Share'
    IGNORE
  VALUE 'AddressShare/Address/Share/$'
    IF #XML_VALUE = #TRUE
      Address.Share := 'Y'
    ELSE
      Address.Share := 'N'
    END-IF
  NONE
    IGNORE
END-DECIDE
*
END-SUBROUTINE
*
END
