* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* PROGRAM-ID: ATHSWEBA  - Process Web Input
*
*******************************************
*                       MODIFICATION LOG
* USER DATE     TAG  REASON
* DRW    05162995  DW1     Add SEX to GPREMSXX linkage
* NGG    06192014  NG1 CONTACTS NORMALIZATION - GENDER
*******************************************
DEFINE DATA
PARAMETER
1 #WEB-INPUT     (A100/50)
1 REDEFINE #WEB-INPUT
  2 #WEB-OCC (50)
    3 #WEB-X (A1/100)
1 REDEFINE #WEB-INPUT
  2 #WEB-INPUT-WRITE   (A50/100)
1 #LENGTH     (N8)
*
LOCAL
*
1 ST-V VIEW OF A-STATUS
  2 NAME
  2 MEMBER-CONTACT-ID  /* NG1
1 OBSOLETE-STATUS-FIELDS
  2 SEX   (A1)         /* DW1
*
1 #WEB-INPUT-HOLD   (A100/5)    /* store input
1 REDEFINE #WEB-INPUT-HOLD
  2 #WEB-HOLD-OCC (5)
    3 #WEB-HOLD-X (A1/100)
*
1 #WEB-ENTRIES  (N3) INIT <50>
1 #WEB-REC-LEN  (N3) INIT <100>
1 #W1     (I2)
1 #END-W1 (I2)
1 #END-I2 (I2)
1 #WORK-DATA-LEN (N3)
1 #WORK-DATA-A   (A250)
1 REDEFINE #WORK-DATA-A
  2 #WORK-DATA-X  (A1/250)
1 REDEFINE #WORK-DATA-A
  2 #WORK-DATA-/   (A1)
  2 #WORK-DATA-99  (A99)
*
1 #INPUT-TAG-DATA-TABLE
  2 #TAG-2     (A25) INIT <'product'>
  2 #TAG-2-LEN (N3)  INIT <7>
  2 #DATA-2    (A28)
  2 #TAG-3     (A25) INIT <'age'>
  2 #TAG-3-LEN (N3)  INIT <3>
  2 #DATA-3    (A28)
  2 #TAG-4     (A25) INIT <'tobacco'>
  2 #TAG-4-LEN (N3)  INIT <7>
  2 #DATA-4    (A28)
  2 #TAG-5     (A25) INIT <'policy-length'>
  2 #TAG-5-LEN (N3)  INIT <13>
  2 #DATA-5    (A28)
  2 #TAG-6     (A25) INIT <'ins-amt'>
  2 #TAG-6-LEN (N3)  INIT <7>
  2 #DATA-6    (A28)
  2 #TAG-7     (A25) INIT <'member-status'>
  2 #TAG-7-LEN (N3)  INIT <13>
  2 #DATA-7    (A28)
*
1 REDEFINE #INPUT-TAG-DATA-TABLE
  2 #TAG-TBL-OCC (6)   /* must match below
    3 #TAG     (A25)
    3 #TAG-LEN (N3)
    3 #DATA      (A25)
    3 #DATA-LEN  (N3)
1 #NUM-ENTRIES (N3) INIT <6> /* must match above
*
1 #OUTPUT-TAG-TABLE
  2 #XML-TAG          (A19) INIT <'?xml-version**1.0*?'>
  2 #XML-TAG-LEN      (N2)  INIT <19>
  2 #QUOTE-RQST-TAG   (A13) INIT <'quote-request'>
  2 #QUOTE-RQST-TAG-LEN (N2)  INIT <13>
  2 #ERROR-TAG        (A13) INIT <'error-message'>
  2 #ERROR-TAG-LEN    (N2)  INIT <13>
  2 #PRODUCTS-TAG     (A8)  INIT <'products'>
  2 #PRODUCTS-LEN     (N2)  INIT <8>
  2 #QUOTE-SUMM-TAG   (A13) INIT <'quote-summary'>
  2 #QUOTE-SUMM-TAG-LEN (N2)  INIT <13>
  2 #PRD-SUMM-TAG     (A15) INIT <'product-summary'>
  2 #PRD-SUMM-TAG-LEN (N2)  INIT <15>
*
  2 #PRD-NAME-TAG     (A12) INIT <'product-name'>
  2 #PRD-NAME-TAG-LEN (N2)  INIT <12>
  2 #W-L-NAME         (A22) INIT <'Value-Added-Whole-Life'>
  2 #W-L-NAME-LEN     (N2)  INIT <22>
  2 #RT-NAME          (A24) INIT <'Five-Year-Renewable-Term'>
  2 #RT-NAME-LEN      (N2)  INIT <24>
  2 #LT-NAME          (A20) INIT <'Level-Term-To-Age-50'>
  2 #LT-NAME-LEN      (N2)  INIT <20>
  2 #LT2-NAME         (A20) INIT <'Level-Term-II-Select'>
  2 #LT2-NAME-LEN     (N2)  INIT <20>
*
  2 #PRD-DESC-TAG     (A12) INIT <'product-desc'>
  2 #PRD-DESC-TAG-LEN (N2)  INIT <12>
  2 #W-L-DESC         (A55) INIT <'Fixed rate with increasing death'
    -' benefit and cash value'>
  2 #W-L-DESC-LEN     (N2)  INIT <55>
  2 #RT-DESC          (A98) INIT <'Fixed rate and fixed death benef'
    -'it until age 50, with increasing'
    -' rate every fifth year thereafte'
    -'r.'>
  2 #RT-DESC-LEN      (N3)  INIT <98>
  2 #RT-DESC-REF      (A93) INIT <'A 30% annual refund of total pre'
    -'miums paid for nonsmokers is ant'
    -'icipated, but not guaranteed.'>
  2 #RT-DESC-REF-LEN  (N3)  INIT <93>
  2 #LT-NS-DESC     (A101)INIT   <'Fixed rate and fixed death benef'
    -'it until age 50 (nonsmoker), wit'
    -'h decreasing death benefit to ag'
    -'e 60.'>
  2 #LT-NS-DESC-LEN   (N3)  INIT <101>
  2 #LT-SM-DESC      (A98)INIT   <'Fixed rate and fixed death benef'
    -'it until age 40 (smoker), with d'
    -'ecreasing death benefit to age 5'
    -'0.'>
  2 #LT-SM-DESC-LEN   (N3)  INIT <98>
  2 #LT-DESC-REF      (A93) INIT <'A 20% annual refund of total pre'
    -'miums paid for nonsmokers is ant'
    -'icipated, but not guaranteed.'>
  2 #LT-DESC-REF-LEN  (N3)  INIT <93>
  2 #LT2-DESC         (A63) INIT <'Fixed rate and fixed death benef'
    -'it for specific number of years'>
  2 #LT2-DESC-LEN     (N2)  INIT <63>
*
  2 #PRD-NOTE-TAG     (A12) INIT <'product-note'>
  2 #PRD-NOTE-TAG-LEN (N2)  INIT <12>
  2 #W-L-NOTE         (A188)INIT <'Our Whole Life guarantee: If at '
    -'any time you discontinue your AA'
    -'FMAA Value Added Life Insurance '
    -'policy, we will refund ALL premi'
    -'ums paid on that policy, PLUS an'
    -'y accumulated policy growth!'>
  2 #W-L-NOTE-LEN     (N3)  INIT <188>
  2 #W-L-NOTE-OV-100K (A51) INIT <'There is a $100,000 limit on pol'
    -'icies for children.'>
  2 #W-L-NOTE-OV-100K-LEN (N2)  INIT <51>
  2 #W-L-NOTE-OV-23   (A54) INIT <'This policy is not available for'
    -' children over age 23.'>
  2 #W-L-NOTE-OV-23-LEN (N2)  INIT <54>
  2 #W-L-NOTE-AGE     (A45) INIT <'Exceeds minimum or maximum age f'
    -'or this plan.'>
  2 #W-L-NOTE-AGE-LEN   (N2)  INIT <45>
  2 #RT-NOTE          (A61) INIT <'Rate increases every five years '
    -'starting at your current age.'>
  2 #RT-NOTE-LEN      (N2)  INIT <61>
  2 #RT-LT-NOTE-MIN   (A48) INIT <'The minimum coverage for this po'
    -'licy is $50,000.'>
  2 #RT-LT-NOTE-MIN-LEN  (N2)  INIT <48>
  2 #RT-NOTE-YOUNG-NS (A38) INIT <'Non-smokers should be at least a'
    -'ge 46.'>
  2 #RT-NOTE-YOUNG-NS-LEN (N2)  INIT <38>
  2 #RT-NOTE-YOUNG-SM (A34) INIT <'Smokers should be at least age 3'
    -'6.'>
  2 #RT-NOTE-YOUNG-SM-LEN (N2)  INIT <34>
  2 #LT-NOTE          (A68) INIT <'The death benefit on this policy'
    -' decreases during the last 10 ye'
    -'ars.'>
  2 #LT-NOTE-LEN      (N2)  INIT <68>
  2 #LT-NOTE-OLD-NS (A76)   INIT <'This policy is not recommended b'
    -'ecause the death benefit decline'
    -'s at age 50.'>
  2 #LT-NOTE-OLD-NS-LEN (N2)  INIT <76>
  2 #LT-NOTE-OLD-SM (A76)   INIT <'This policy is not recommended b'
    -'ecause the death benefit decline'
    -'s at age 40.'>
  2 #LT-NOTE-OLD-SM-LEN (N2)  INIT <76>
  2 #LT-NOTE-CONV   (A91)   INIT <'At age 47 you should convert to '
    -'Five-Year Renewable Term to main'
    -'tain a fixed death benefit.'>
  2 #LT-NOTE-CONV-LEN   (N2)  INIT <91>
  2 #LT2-NOTE         (A144)INIT <'Quote is for Select rates. You m'
    -'ay qualify for lower Super Selec'
    -'t rates, or higher Standard rate'
    -'s, depending on results of medic'
    -'al underwriting.'>
  2 #LT2-NOTE-LEN     (N3)  INIT <144>
  2 #LT2-NOTE-OLD     (A74) INIT <'This policy is not available for'
    -' the selected number of years pa'
    -'st age 85.'>
  2 #LT2-NOTE-OLD-LEN (N2)  INIT <74>
  2 #LT2-NOTE-LESS-5  (A54) INIT <'This policy must be purchased fo'
    -'r at least five years.'>
  2 #LT2-NOTE-LESS-5-LEN(N2)  INIT <54>
  2 #LT2-NOTE-LFTM    (A61) INIT <'This policy must be purchased fo'
    -'r a specific number of years.'>
  2 #LT2-NOTE-LFTM-LEN  (N2)  INIT <61>
*
  2 #MONTHLY-TAG      (A7)  INIT <'monthly'>
  2 #MONTHLY-TAG-LEN  (N2)  INIT <7>
  2 #PMT-TERM-TAG     (A9)  INIT <'pmt-terms'>
  2 #PMT-TERM-TAG-LEN (N2)  INIT <9>
  2 #TERM-DES-TAG     (A12) INIT <'term-desc="'>
  2 #TERM-DES-TAG-LEN (N2)  INIT <12>
  2 #OL-TAG           (A25) INIT <'Pay until age 100" rate="'>
  2 #OL-TAG-LEN       (N2)  INIT <25>
  2 #30P-TAG          (A20) INIT <'Pay 30 years" rate="'>
  2 #30P-TAG-LEN      (N2)  INIT <20>
  2 #20P-TAG          (A20) INIT <'Pay 20 years" rate="'>
  2 #20P-TAG-LEN      (N2)  INIT <20>
  2 #7P-TAG           (A19) INIT <'Pay 7 years" rate="'>
  2 #7P-TAG-LEN       (N2)  INIT <19>
  2 #SP-TAG           (A24) INIT <'One Time Payment" rate="'>
  2 #SP-TAG-LEN       (N2)  INIT <24>
  2 #COV-TERM-LBL     (A14) INIT <'coverage-terms'>
  2 #COV-TERM-LBL-LEN (N2)  INIT <14>
  2 #COV-DESC-40      (A31) INIT <'coverage desc="At age 40" amt="'>
  2 #COV-DESC-40-LEN  (N2)  INIT <31>
  2 #COV-DESC-45      (A31) INIT <'coverage desc="At age 45" amt="'>
  2 #COV-DESC-45-LEN  (N2)  INIT <31>
  2 #COV-DESC-50      (A31) INIT <'coverage desc="At age 50" amt="'>
  2 #COV-DESC-50-LEN  (N2)  INIT <31>
  2 #COV-DESC-55      (A31) INIT <'coverage desc="At age 55" amt="'>
  2 #COV-DESC-55-LEN  (N2)  INIT <31>
  2 #COV-DESC-60      (A31) INIT <'coverage desc="At age 60" amt="'>
  2 #COV-DESC-60-LEN  (N2)  INIT <31>
*
1 #PRODUCT     (A25)
*
1 #PROCESS-INPUT  (L)
1 #NO-BLANKS      (L)
1 #BEGIN-TAG      (L)
1 #END-TAG        (L)
1 #PROCESS-TAG    (L)
1 #PROCESS-DATA   (L)
1 #FOUND-TAG      (L)
1 #ERR            (A75)
1 #ERR-LEN        (N3)
*
1 #LETTER-TABLE
  2 #1T (A26) INIT <'AaBbCcDdEeFfGgHhIiJjKkLlMm'>
  2 #2T (A26) INIT <'NnOoPpQqRrSsTtUuVvWwXxYyZz'>
1 REDEFINE #LETTER-TABLE
  2 #LETTER-OCCUR (26)
    3 #UPPER      (A1)
    3 #LOWER      (A1)
*
1 #YYYYMMDD        (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY          (A4)
  2 #MM            (A2)
  2 #DD            (A2)
*
1 #CNT            (P5)
1 #CNT-2          (P5)
1 #CNT-3          (P5)
1 #CNT-4          (P5)
1 #CNT-5          (P5)
1 #CNT-6          (P5)
1 #CNT-7          (P5)
1 #CNT-8          (P5)
1 #I1             (I2)
1 #I2             (I2)
1 #I3             (I2)
1 #I4             (I2)
1 #I5             (I2)
*
1 #MON-PREM       (N7.2)
1 #MON-PREM-DISP  (A10)
1 #TOTAL-AMT-DISP (A12)
1 #MON-PREM-OL    (N7.2)
1 #MON-PREM-7P    (N7.2)
1 #MON-PREM-20P   (N7.2)
1 #MON-PREM-30P   (N7.2)
1 #MON-PREM-RT    (N7.2/10)
1 #AGES-RT        (N2/10)
1 #NUM-AGES-RT    (N2)
1 #MON-PREM-LT    (N7.2)
1 #MON-PREM-LT2   (N7.2)
1 #TOTAL-AMT-OL   (N9.2)
1 #TOTAL-AMT-7P   (N9.2)
1 #TOTAL-AMT-20P  (N9.2)
1 #TOTAL-AMT-30P  (N9.2)
1 #TOTAL-AMT-SP   (N9.2)
1 #TOTAL-AMT-RT   (N9.2)
1 #TOTAL-AMT-LT   (N9.2)
*
1 #ELIG       (A1)
1 #CURR-AGE   (N2)
1 #TERM       (N2)
1 REDEFINE #TERM
  2 #TERM-X   (A1/2)
1 REDEFINE #TERM
  2 #TERM-A   (A2)
*
* below is linkage to GPREMSXX
1 #SCR-COMMAND (A2)
1 #SCR-ID      (N9)
1 #SCR-SUFFIX  (A3)
1 #PLAN        (A3)
1 #AGE         (N2)
1 REDEFINE #AGE
  2 #AGE-X      (A1/2)
1 #APRM        (N6.2)
1 #ISSUE-DATE  (N8)
1 #FACE-AMT    (N7.2)
1 REDEFINE #FACE-AMT
  2 #FACE-AMT-X  (A1/9)
1 #SMOKER-FLAG (A1)
*
* above is linkage to GPREMSXX
*
END-DEFINE
*
* WRITE 'TOP OF ATHSWEBA'
* FIND (1) ST-V WITH MEMBER-KEY = '043549'
*   WRITE 'name = ' NAME
* END-FIND
*
MOVE *DATN TO #ISSUE-DATE
*
FOR #W1 1 TO 5    /* stores input
  FOR #I1 1 TO #WEB-REC-LEN
    MOVE #WEB-X (#W1, #I1) TO #WEB-HOLD-X (#W1, #I1)
  END-FOR
END-FOR
*
FOR-1. FOR #W1 1 TO #WEB-ENTRIES
*  WRITE 'for loop' #W1 #WEB-INPUT (#W1) (EM=XXXXXXXXXXXXXXXXXXXXXX)
  FOR #I1 1 TO #WEB-REC-LEN
*    WRITE 'for loop' #W1 #I1 #WEB-X (#W1, #I1)
    IF #WEB-X (#W1, #I1) = '~'   /* 'tildi' temporary end of line
      ESCAPE BOTTOM
    END-IF
*
    IF #WEB-X (#W1, #I1) = '<'   /* Beg of tag/data
      IF #PROCESS-TAG
        MOVE 'Found "<" but doing Tag' TO #ERR
        MOVE 23 TO #ERR-LEN
        PERFORM ERR-PROCESS
        ESCAPE BOTTOM (FOR-1.)
      END-IF
*
      MOVE TRUE TO #PROCESS-TAG
      RESET #WORK-DATA-A    /* <<<<<<<<<<
      RESET #PROCESS-DATA #I5
      ESCAPE TOP
    END-IF
*
    IF #WEB-X (#W1, #I1) = '>'   /* End of tag/data
      IF  (#WORK-DATA-A = #XML-TAG)         /* xml version tag
          OR (#WORK-DATA-A = #QUOTE-RQST-TAG)  /* ('quote-request'))
        RESET #PROCESS-TAG #WORK-DATA-A #I5
        ESCAPE TOP
      END-IF
*
      IF #WORK-DATA-A = MASK ('/quote-request')    /* end of input
        ESCAPE BOTTOM (FOR-1.)
      END-IF
*
      IF #PROCESS-TAG
*   WRITE 'process-tag' #WORK-DATA-A (EM=XXXXXXXXXXXXXXXXXX)
        IF #WORK-DATA-/ = '/'  /* end tag
          RESET #FOUND-TAG
          FOR #I2 1 TO #NUM-ENTRIES
*           WRITE #I2 'inp' #WORK-DATA-99  (EM=XXXXXXXXXXXXXXXXXX)
*                      'tbl' #TAG (#I2)
            IF #WORK-DATA-99 = #TAG (#I2)
              MOVE TRUE TO #FOUND-TAG
              ESCAPE BOTTOM
            END-IF
          END-FOR
*
          IF NOT #FOUND-TAG
            MOVE 'End Tag not found' TO #ERR
            MOVE 17 TO #ERR-LEN
            PERFORM ERR-PROCESS
            ESCAPE BOTTOM (FOR-1.)
          END-IF
        ELSE    /* must be a begin tag
          RESET #FOUND-TAG
          FOR #I2 1 TO #NUM-ENTRIES
            IF #WORK-DATA-A = #TAG (#I2)
              MOVE TRUE TO #FOUND-TAG
              MOVE TRUE TO #PROCESS-DATA
              ESCAPE BOTTOM
            END-IF
          END-FOR
*
          IF NOT #FOUND-TAG
            MOVE 'Tag not found' TO #ERR
            MOVE 13 TO #ERR-LEN
            PERFORM ERR-PROCESS
            ESCAPE BOTTOM (FOR-1.)
          END-IF
        END-IF
      END-IF
*
      RESET #WORK-DATA-A  #PROCESS-TAG #I5
      IF #WORK-DATA-/ NE '/'
        MOVE TRUE TO #PROCESS-DATA
      END-IF
      ESCAPE TOP
    END-IF
*    must be processing tag or data
    ADD 1 TO #I5
    MOVE #WEB-X (#W1, #I1) TO #WORK-DATA-X (#I5)
*
    IF #PROCESS-DATA
      MOVE #I5     TO #DATA-LEN (#I2)
      MOVE #WORK-DATA-A TO #DATA   (#I2)
*     WRITE 'XXX' #WORK-DATA-A (EM=XXXXXXXXXXXXXXXXXXXXXXXXX)
    END-IF
  END-FOR
END-FOR
*
MOVE TRUE TO #PROCESS-INPUT
*
*                                              PROCESS WEB REQUEST
IF #ERR = ' '    /* no errors
  RESET #PROCESS-TAG #WORK-DATA-A #I5
  PERFORM PROCESS-QUOTES
  IF #ERR = ' '    /* no errors
    PERFORM RETURN-QUOTES
  END-IF
END-IF
*
COMPUTE #LENGTH = ((#W1 - 1) * #WEB-REC-LEN) + #I2
* WRITE 'W1 = ' #W1  '  #I2 = ' #I2 'LENGTH=' #LENGTH
*
*  WRITE 'OUTPUT BELOW'
FOR #I1 1 TO 13
  IF #WEB-INPUT-WRITE (#I1) = ' '
    ESCAPE BOTTOM
  END-IF
*
*    WRITE #I1 #WEB-INPUT-WRITE (#I1)
END-FOR
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE PROCESS-QUOTES
* * * * * * * * * * * * * * * * *
*
*   EDIT INPUT PARMS
*
DECIDE ON FIRST VALUE OF #DATA (1)
  VALUE 'ALL'      MOVE 'ALL' TO #PRODUCT
  VALUE #W-L-NAME  MOVE 'OL'  TO #PRODUCT
  VALUE #RT-NAME   MOVE 'RT'  TO #PRODUCT
  VALUE #LT-NAME   MOVE 'LT'  TO #PRODUCT
  VALUE #LT2-NAME  MOVE 'LT2' TO #PRODUCT
  NONE MOVE 'Invalid Product' TO #ERR
    MOVE 15 TO #ERR-LEN
    PERFORM ERR-PROCESS
    ESCAPE ROUTINE
END-DECIDE
*
IF #PRODUCT NE 'ALL'
  MOVE 'Only product "ALL" has been developed so far' TO #ERR
  MOVE 44 TO #ERR-LEN
  PERFORM ERR-PROCESS
  ESCAPE ROUTINE
END-IF
*
IF #DATA-LEN (2) GT 2
  MOVE 'Invalid Age Length' TO #ERR
  MOVE 18 TO #ERR-LEN
  PERFORM ERR-PROCESS
  ESCAPE ROUTINE
END-IF
*
MOVE #DATA (2) TO #WORK-DATA-A
FOR #I1 1 TO #DATA-LEN (2)
  IF #WORK-DATA-X (#I1) NOT = MASK (N)
    MOVE 'Invalid Age' TO #ERR
    MOVE 11 TO #ERR-LEN
    PERFORM ERR-PROCESS
    ESCAPE ROUTINE
  END-IF
END-FOR
*
IF NOT #DATA (3) = 'true' OR = 'false'
  MOVE 'Invalid Smoker-Flag' TO #ERR
  MOVE 19 TO #ERR-LEN
  PERFORM ERR-PROCESS
  ESCAPE ROUTINE
END-IF
*
IF #DATA-LEN (4) GT 2
  MOVE 'Invalid Term Length' TO #ERR
  MOVE 19 TO #ERR-LEN
  PERFORM ERR-PROCESS
  ESCAPE ROUTINE
END-IF
*
IF #DATA (4) NE 'LF'
  MOVE #DATA (4) TO #WORK-DATA-A
  FOR #I1 1 TO #DATA-LEN (4)
    IF #WORK-DATA-X (#I1) NOT = MASK (N)
      MOVE 'Invalid Term-Length' TO #ERR
      MOVE 19 TO #ERR-LEN
      PERFORM ERR-PROCESS
      ESCAPE ROUTINE
    END-IF
  END-FOR
END-IF
*
IF #DATA-LEN (5) GT 7
  MOVE 'Invalid Ins-Amount Length' TO #ERR
  MOVE 25 TO #ERR-LEN
  PERFORM ERR-PROCESS
  ESCAPE ROUTINE
END-IF
*
MOVE #DATA (5) TO #WORK-DATA-A
FOR #I1 1 TO #DATA-LEN (6)
  IF #WORK-DATA-X (#I1) NOT = MASK (N)
    MOVE 'Invalid Ins-Amount' TO #ERR
    MOVE 18 TO #ERR-LEN
    PERFORM ERR-PROCESS
    ESCAPE ROUTINE
  END-IF
END-FOR
*
DECIDE ON FIRST VALUE OF #DATA (6)
  VALUE 'M'    MOVE 'M' TO #ELIG  /* Member
  VALUE 'MS'   MOVE 'S' TO #ELIG  /* Spouse
  VALUE 'MCG'  MOVE 'G' TO #ELIG  /* Gen
  VALUE 'ADA'  MOVE 'N' TO #ELIG  /* Non-Member
  VALUE 'ADAF' MOVE 'N' TO #ELIG  /* Non-Member
  VALUE 'RA'   MOVE 'N' TO #ELIG  /* Non-Member
  VALUE 'RAF'  MOVE 'N' TO #ELIG  /* Non-Member
  VALUE 'RGA'  MOVE 'N' TO #ELIG  /* Non-Member
  VALUE 'RGAF' MOVE 'N' TO #ELIG  /* Non-Member
  NONE
    MOVE 'Invalid Eligibility' TO #ERR
    MOVE 19 TO #ERR-LEN
    PERFORM ERR-PROCESS
    ESCAPE ROUTINE
END-DECIDE
*
*  Parse Input Parms
*
MOVE #DATA (2) TO #WORK-DATA-A   /* age
MOVE #DATA-LEN (2) TO #I2
MOVE 2 TO #I3
RESET #AGE
FOR #I1 #I2 TO 1 STEP -1
  MOVE #WORK-DATA-X (#I1) TO #AGE-X (#I3)
  SUBTRACT 1 FROM #I3
END-FOR
MOVE #AGE TO #CURR-AGE
*
IF #DATA (3) = 'false'      /* tobacco flag
  MOVE 'N' TO #SMOKER-FLAG
ELSE
  MOVE 'S' TO #SMOKER-FLAG
END-IF
*
IF #DATA (4) = 'LF'
  MOVE 99 TO #TERM   /* to indicate lifetime
ELSE
  MOVE #DATA (4) TO #WORK-DATA-A /* policy-length
  MOVE #DATA-LEN (4) TO #I2
  MOVE 2 TO #I3
  RESET #TERM
  FOR #I1 #I2 TO 1 STEP -1
    MOVE #WORK-DATA-X (#I1) TO #TERM-X (#I3)
    SUBTRACT 1 FROM #I3
  END-FOR
END-IF
*
MOVE #DATA (5) TO #WORK-DATA-A    /* ins-amt
MOVE #DATA-LEN (5) TO #I2
MOVE 7 TO #I3        /* process as dollars
RESET #FACE-AMT
FOR #I1 #I2 TO 1 STEP -1
  MOVE #WORK-DATA-X (#I1) TO #FACE-AMT-X (#I3)
  SUBTRACT 1 FROM #I3
END-FOR
*
* WRITE '#PRODUCT' #PRODUCT #FACE-AMT #TERM #SMOKER-FLAG #AGE #ELIG
*
IF #PRODUCT = 'ALL'
  IF  (#AGE GE 17) AND (#AGE LE 70)
    MOVE 'OL '  TO #PLAN
    PERFORM CALLNAT-GPREMSXX
    MOVE #MON-PREM TO #MON-PREM-OL
    COMPUTE #TOTAL-AMT-OL = (100 - #AGE) * #APRM
*
    MOVE '30P' TO #PLAN
    PERFORM CALLNAT-GPREMSXX
    MOVE #MON-PREM TO #MON-PREM-30P
    COMPUTE #TOTAL-AMT-30P = 30 * #APRM
*
    MOVE '20P'  TO #PLAN
    PERFORM CALLNAT-GPREMSXX
    MOVE #MON-PREM TO #MON-PREM-20P
    COMPUTE #TOTAL-AMT-20P = 20 * #APRM
*
    MOVE '7P '  TO #PLAN
    PERFORM CALLNAT-GPREMSXX
    MOVE #MON-PREM TO #MON-PREM-7P
    COMPUTE #TOTAL-AMT-7P = 7 * #APRM
*
    MOVE 'SI '  TO #PLAN
    PERFORM CALLNAT-GPREMSXX
    MOVE #APRM TO #TOTAL-AMT-SP
  END-IF
*
  MOVE 'RT '  TO #PLAN
  PERFORM CALLNAT-GPREMSXX
  MOVE #MON-PREM TO #MON-PREM-RT (1)
*
  MOVE 'LT '  TO #PLAN
  PERFORM CALLNAT-GPREMSXX
  MOVE #MON-PREM TO #MON-PREM-LT
*
  IF #TERM NE 99
    COMPRESS 'V' #TERM-A INTO #PLAN LEAVING NO
    PERFORM CALLNAT-GPREMSXX
    MOVE #MON-PREM TO #MON-PREM-LT2
  END-IF
END-IF
*
IF #PRODUCT = 'RT'
  MOVE 'RT' TO #PLAN
*
  FOR #I1 1 TO 10
    ADD 1 TO #NUM-AGES-RT
    PERFORM CALLNAT-GPREMSXX
    MOVE #AGE      TO #AGES-RT (#I1)
    MOVE #MON-PREM TO #MON-PREM-RT (#I1)
    ADD 5 TO #AGE
    IF #AGE GT 70
      ESCAPE BOTTOM
    END-IF
  END-FOR
  MOVE #CURR-AGE TO #AGE
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALLNAT-GPREMSXX
* * * * * * * * * * * * * * * * * *
*
SEX := GET-GENDER(<ST-V.MEMBER-CONTACT-ID>)                 /* NG1
CALLNAT 'GPREMSXX' #SCR-COMMAND #SCR-ID #SCR-SUFFIX
  #PLAN #AGE #APRM #ISSUE-DATE #SMOKER-FLAG #FACE-AMT SEX   /* DW1
COMPUTE #MON-PREM = #APRM / 12
MOVE EDITED #MON-PREM (EM=ZZZZZZZ.99) TO #MON-PREM-DISP
* DISPLAY #PLAN #AGE #ISSUE-DATE #SMOKER-FLAG #FACE-AMT #APRM #MON-PREM
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE RETURN-QUOTES
* * * * * * * * * * * * * * * *
*
RESET #WEB-INPUT (*)
MOVE 1 TO #W1
RESET #I2
*
* MOVE #XML-TAG     TO #WORK-DATA-A   /* removed 4/16/2001 as per john
* MOVE #XML-TAG-LEN TO #WORK-DATA-LEN
* MOVE TRUE TO #BEGIN-TAG
* PERFORM BUILD-OUTPUT
*
IF #PRODUCT = 'ALL'
*                                         QUOTE SUMMARY
  MOVE #QUOTE-SUMM-TAG TO #WORK-DATA-A
  MOVE #QUOTE-SUMM-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
*                                         QUOTE REQUEST
  MOVE #QUOTE-RQST-TAG     TO #WORK-DATA-A
  MOVE #QUOTE-RQST-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
*                                         RETURN INPUT TO WEB
  FOR #I3 1 TO 6
    PERFORM LOAD-INPUT-TO-OUTPUT
  END-FOR
*
*                                         QUOTE REQUEST end
  MOVE #QUOTE-RQST-TAG     TO #WORK-DATA-A
  MOVE #QUOTE-RQST-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*                                         PRODUCTS
  MOVE #PRODUCTS-TAG TO #WORK-DATA-A
  MOVE #PRODUCTS-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT SUMMARY
  MOVE #PRD-SUMM-TAG     TO #WORK-DATA-A
  MOVE #PRD-SUMM-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT NAME W-L
  MOVE #PRD-NAME-TAG     TO #WORK-DATA-A
  MOVE #PRD-NAME-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  MOVE #W-L-NAME     TO #WORK-DATA-A
  MOVE #W-L-NAME-LEN TO #WORK-DATA-LEN
  PERFORM BUILD-OUTPUT
*
  MOVE #PRD-NAME-TAG     TO #WORK-DATA-A
  MOVE #PRD-NAME-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT DESC
  MOVE #PRD-DESC-TAG     TO #WORK-DATA-A
  MOVE #PRD-DESC-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  MOVE #W-L-DESC     TO #WORK-DATA-A
  MOVE #W-L-DESC-LEN TO #WORK-DATA-LEN
  PERFORM BUILD-OUTPUT
*
  MOVE #PRD-DESC-TAG     TO #WORK-DATA-A
  MOVE #PRD-DESC-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*                                         PRODUCT NOTE
  MOVE #PRD-NOTE-TAG     TO #WORK-DATA-A
  MOVE #PRD-NOTE-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  IF  (#AGE LT 17)
      OR ((#ELIG  = 'M') AND (#AGE GT 70))
      OR ((#ELIG NE 'M') AND (#AGE GT 65))
    MOVE #W-L-NOTE-AGE TO #WORK-DATA-A
    MOVE #W-L-NOTE-AGE-LEN TO #WORK-DATA-LEN
    PERFORM BUILD-OUTPUT
    PERFORM BUMP-OUT-INDX
    RESET #MON-PREM-OL
  END-IF
*
  IF (#ELIG = 'G') AND (#FACE-AMT GT 100000)
    MOVE #W-L-NOTE-OV-100K     TO #WORK-DATA-A
    MOVE #W-L-NOTE-OV-100K-LEN TO #WORK-DATA-LEN
    PERFORM BUILD-OUTPUT
    PERFORM BUMP-OUT-INDX
    RESET #MON-PREM-OL
  END-IF
*
  IF (#ELIG = 'G') AND (#AGE GT 23)
    MOVE #W-L-NOTE-OV-23 TO #WORK-DATA-A
    MOVE #W-L-NOTE-OV-23-LEN TO #WORK-DATA-LEN
    PERFORM BUILD-OUTPUT
    PERFORM BUMP-OUT-INDX
    RESET #MON-PREM-OL
  END-IF
*
  MOVE #W-L-NOTE     TO #WORK-DATA-A
  MOVE #W-L-NOTE-LEN TO #WORK-DATA-LEN
  PERFORM BUILD-OUTPUT
*
  MOVE #PRD-NOTE-TAG     TO #WORK-DATA-A
  MOVE #PRD-NOTE-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         MONTHLY PREMIUM
  MOVE #MONTHLY-TAG     TO #WORK-DATA-A
  MOVE #MONTHLY-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  MOVE EDITED #MON-PREM-OL (EM=ZZZZZZZ.99) TO #MON-PREM-DISP
  MOVE #MON-PREM-DISP   TO #WORK-DATA-A
  MOVE 10               TO #WORK-DATA-LEN
  MOVE TRUE TO #NO-BLANKS
  PERFORM BUILD-OUTPUT
*
  MOVE #MONTHLY-TAG     TO #WORK-DATA-A
  MOVE #MONTHLY-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT SUMMARY end
  MOVE #PRD-SUMM-TAG     TO #WORK-DATA-A
  MOVE #PRD-SUMM-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT SUMMARY
  MOVE #PRD-SUMM-TAG     TO #WORK-DATA-A
  MOVE #PRD-SUMM-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT NAME RT
  MOVE #PRD-NAME-TAG     TO #WORK-DATA-A
  MOVE #PRD-NAME-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  MOVE #RT-NAME     TO #WORK-DATA-A
  MOVE #RT-NAME-LEN TO #WORK-DATA-LEN
  PERFORM BUILD-OUTPUT
*
  MOVE #PRD-NAME-TAG     TO #WORK-DATA-A
  MOVE #PRD-NAME-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT DESC
  MOVE #PRD-DESC-TAG     TO #WORK-DATA-A
  MOVE #PRD-DESC-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  MOVE #RT-DESC     TO #WORK-DATA-A
  MOVE #RT-DESC-LEN TO #WORK-DATA-LEN
  PERFORM BUILD-OUTPUT
*
  IF #SMOKER-FLAG = 'N'
    MOVE #RT-DESC-REF     TO #WORK-DATA-A
    MOVE #RT-DESC-REF-LEN TO #WORK-DATA-LEN
    PERFORM BUMP-OUT-INDX
    PERFORM BUILD-OUTPUT
  END-IF
*
  MOVE #PRD-DESC-TAG     TO #WORK-DATA-A
  MOVE #PRD-DESC-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*                                         PRODUCT NOTE
  MOVE #PRD-NOTE-TAG     TO #WORK-DATA-A
  MOVE #PRD-NOTE-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  IF  (#AGE LT 17) OR (#AGE GT 70)
    MOVE #W-L-NOTE-AGE TO #WORK-DATA-A
    MOVE #W-L-NOTE-AGE-LEN TO #WORK-DATA-LEN
    PERFORM BUILD-OUTPUT
    PERFORM BUMP-OUT-INDX
    RESET #MON-PREM-RT (*)
  END-IF
*
  IF #FACE-AMT LT 50000
    MOVE #RT-LT-NOTE-MIN     TO #WORK-DATA-A
    MOVE #RT-LT-NOTE-MIN-LEN TO #WORK-DATA-LEN
    PERFORM BUILD-OUTPUT
    PERFORM BUMP-OUT-INDX
    RESET #MON-PREM-RT (*)
  END-IF
*
  IF (#SMOKER-FLAG = 'N') AND (#AGE LE 45)
    MOVE #RT-NOTE-YOUNG-NS     TO #WORK-DATA-A
    MOVE #RT-NOTE-YOUNG-NS-LEN TO #WORK-DATA-LEN
    PERFORM BUILD-OUTPUT
    PERFORM BUMP-OUT-INDX
  END-IF
*
  MOVE #RT-NOTE     TO #WORK-DATA-A
  MOVE #RT-NOTE-LEN TO #WORK-DATA-LEN
  PERFORM BUILD-OUTPUT
*
  IF  (#SMOKER-FLAG = 'S') AND (#AGE LE 35)
    MOVE #RT-NOTE-YOUNG-SM     TO #WORK-DATA-A
    MOVE #RT-NOTE-YOUNG-SM-LEN TO #WORK-DATA-LEN
    PERFORM BUMP-OUT-INDX
    PERFORM BUILD-OUTPUT
  END-IF
*
  MOVE #PRD-NOTE-TAG     TO #WORK-DATA-A
  MOVE #PRD-NOTE-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         MONTHLY PREMIUM
  MOVE #MONTHLY-TAG     TO #WORK-DATA-A
  MOVE #MONTHLY-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  MOVE EDITED #MON-PREM-RT (1) (EM=ZZZZZZZ.99) TO #MON-PREM-DISP
  MOVE #MON-PREM-DISP   TO #WORK-DATA-A
  MOVE 10               TO #WORK-DATA-LEN
  MOVE TRUE TO #NO-BLANKS
  PERFORM BUILD-OUTPUT
*
  MOVE #MONTHLY-TAG     TO #WORK-DATA-A
  MOVE #MONTHLY-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT SUMMARY end
  MOVE #PRD-SUMM-TAG     TO #WORK-DATA-A
  MOVE #PRD-SUMM-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT SUMMARY
  MOVE #PRD-SUMM-TAG     TO #WORK-DATA-A
  MOVE #PRD-SUMM-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
*
*                                         PRODUCT NAME LT
  MOVE #PRD-NAME-TAG     TO #WORK-DATA-A
  MOVE #PRD-NAME-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  MOVE #LT-NAME     TO #WORK-DATA-A
  MOVE #LT-NAME-LEN TO #WORK-DATA-LEN
  PERFORM BUILD-OUTPUT
*
  MOVE #PRD-NAME-TAG     TO #WORK-DATA-A
  MOVE #PRD-NAME-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT DESC
  MOVE #PRD-DESC-TAG     TO #WORK-DATA-A
  MOVE #PRD-DESC-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  IF #SMOKER-FLAG = 'N'
    MOVE #LT-NS-DESC     TO #WORK-DATA-A
    MOVE #LT-NS-DESC-LEN TO #WORK-DATA-LEN
    PERFORM BUILD-OUTPUT
  ELSE
    MOVE #LT-SM-DESC     TO #WORK-DATA-A
    MOVE #LT-SM-DESC-LEN TO #WORK-DATA-LEN
    PERFORM BUILD-OUTPUT
  END-IF
*
  IF #SMOKER-FLAG = 'N'
    MOVE #LT-DESC-REF     TO #WORK-DATA-A
    MOVE #LT-DESC-REF-LEN TO #WORK-DATA-LEN
    PERFORM BUMP-OUT-INDX
    PERFORM BUILD-OUTPUT
  END-IF
*
  MOVE #PRD-DESC-TAG     TO #WORK-DATA-A
  MOVE #PRD-DESC-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*                                         PRODUCT NOTE
  MOVE #PRD-NOTE-TAG     TO #WORK-DATA-A
  MOVE #PRD-NOTE-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  IF #AGE LT 17
    MOVE #W-L-NOTE-AGE TO #WORK-DATA-A
    MOVE #W-L-NOTE-AGE-LEN TO #WORK-DATA-LEN
    PERFORM BUILD-OUTPUT
    PERFORM BUMP-OUT-INDX
    RESET #MON-PREM-LT
  END-IF
*
  IF #FACE-AMT LT 50000
    MOVE #RT-LT-NOTE-MIN     TO #WORK-DATA-A
    MOVE #RT-LT-NOTE-MIN-LEN TO #WORK-DATA-LEN
    PERFORM BUILD-OUTPUT
    PERFORM BUMP-OUT-INDX
    RESET #MON-PREM-LT
  END-IF
*
  IF (#AGE + #TERM) GT 47
    MOVE #LT-NOTE-CONV     TO #WORK-DATA-A
    MOVE #LT-NOTE-CONV-LEN TO #WORK-DATA-LEN
    PERFORM BUILD-OUTPUT
    PERFORM BUMP-OUT-INDX
  END-IF
*
  IF  (#SMOKER-FLAG = 'N') AND (#AGE GE 48)
    MOVE #LT-NOTE-OLD-NS     TO #WORK-DATA-A
    MOVE #LT-NOTE-OLD-NS-LEN TO #WORK-DATA-LEN
    PERFORM BUILD-OUTPUT
    PERFORM BUMP-OUT-INDX
*
    IF #AGE GE 49
      RESET #MON-PREM-LT
    END-IF
  END-IF
*
  IF  (#SMOKER-FLAG = 'S') AND (#AGE GE 38)
    MOVE #LT-NOTE-OLD-SM     TO #WORK-DATA-A
    MOVE #LT-NOTE-OLD-SM-LEN TO #WORK-DATA-LEN
    PERFORM BUMP-OUT-INDX
*
    IF #AGE GE 39
      RESET #MON-PREM-LT
    END-IF
  END-IF
*
  MOVE #PRD-NOTE-TAG     TO #WORK-DATA-A
  MOVE #PRD-NOTE-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         MONTHLY PREMIUM
  MOVE #MONTHLY-TAG     TO #WORK-DATA-A
  MOVE #MONTHLY-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  MOVE EDITED #MON-PREM-LT (EM=ZZZZZZZ.99) TO #MON-PREM-DISP
  MOVE #MON-PREM-DISP   TO #WORK-DATA-A
  MOVE 10               TO #WORK-DATA-LEN
  MOVE TRUE TO #NO-BLANKS
  PERFORM BUILD-OUTPUT
*
  MOVE #MONTHLY-TAG     TO #WORK-DATA-A
  MOVE #MONTHLY-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT SUMMARY end
  MOVE #PRD-SUMM-TAG     TO #WORK-DATA-A
  MOVE #PRD-SUMM-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT SUMMARY
  MOVE #PRD-SUMM-TAG     TO #WORK-DATA-A
  MOVE #PRD-SUMM-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
*
*                                         PRODUCT NAME LT2
  MOVE #PRD-NAME-TAG     TO #WORK-DATA-A
  MOVE #PRD-NAME-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  MOVE #LT2-NAME     TO #WORK-DATA-A
  MOVE #LT2-NAME-LEN TO #WORK-DATA-LEN
  PERFORM BUILD-OUTPUT
*
  MOVE #PRD-NAME-TAG     TO #WORK-DATA-A
  MOVE #PRD-NAME-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT DESC
  MOVE #PRD-DESC-TAG     TO #WORK-DATA-A
  MOVE #PRD-DESC-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  MOVE #LT2-DESC     TO #WORK-DATA-A
  MOVE #LT2-DESC-LEN TO #WORK-DATA-LEN
  PERFORM BUILD-OUTPUT
*
  MOVE #PRD-DESC-TAG     TO #WORK-DATA-A
  MOVE #PRD-DESC-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*                                         PRODUCT NOTE
  MOVE #PRD-NOTE-TAG     TO #WORK-DATA-A
  MOVE #PRD-NOTE-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  MOVE #LT2-NOTE     TO #WORK-DATA-A
  MOVE #LT2-NOTE-LEN TO #WORK-DATA-LEN
  PERFORM BUILD-OUTPUT
*
  IF #FACE-AMT LT 50000
    MOVE #RT-LT-NOTE-MIN     TO #WORK-DATA-A
    MOVE #RT-LT-NOTE-MIN-LEN TO #WORK-DATA-LEN
    PERFORM BUMP-OUT-INDX
    PERFORM BUILD-OUTPUT
    RESET #MON-PREM-LT2
  END-IF
*
  IF (#AGE + #TERM) GT 85
    MOVE #LT2-NOTE-OLD     TO #WORK-DATA-A
    MOVE #LT2-NOTE-OLD-LEN TO #WORK-DATA-LEN
    PERFORM BUMP-OUT-INDX
    PERFORM BUILD-OUTPUT
    RESET #MON-PREM-LT2
  END-IF
*
  IF #TERM LT 5
    MOVE #LT2-NOTE-LESS-5     TO #WORK-DATA-A
    MOVE #LT2-NOTE-LESS-5-LEN TO #WORK-DATA-LEN
    PERFORM BUMP-OUT-INDX
    PERFORM BUILD-OUTPUT
    RESET #MON-PREM-LT2
  END-IF
*
  IF #TERM = 99
    MOVE #LT2-NOTE-LFTM     TO #WORK-DATA-A
    MOVE #LT2-NOTE-LFTM-LEN TO #WORK-DATA-LEN
    PERFORM BUMP-OUT-INDX
    PERFORM BUILD-OUTPUT
    RESET #MON-PREM-LT2
  END-IF
*
  MOVE #PRD-NOTE-TAG     TO #WORK-DATA-A
  MOVE #PRD-NOTE-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         MONTHLY PREMIUM
  MOVE #MONTHLY-TAG     TO #WORK-DATA-A
  MOVE #MONTHLY-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #BEGIN-TAG
  PERFORM BUILD-OUTPUT
*
  MOVE EDITED #MON-PREM-LT2 (EM=ZZZZZZZ.99) TO #MON-PREM-DISP
  MOVE #MON-PREM-DISP   TO #WORK-DATA-A
  MOVE 10               TO #WORK-DATA-LEN
  MOVE TRUE TO #NO-BLANKS
  PERFORM BUILD-OUTPUT
*
  MOVE #MONTHLY-TAG     TO #WORK-DATA-A
  MOVE #MONTHLY-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         PRODUCT SUMMARY END
  MOVE #PRD-SUMM-TAG     TO #WORK-DATA-A
  MOVE #PRD-SUMM-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*                                         PRODUCTS END
  MOVE #PRODUCTS-TAG TO #WORK-DATA-A
  MOVE #PRODUCTS-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
*                                         QUOTE SUMMARY END
  MOVE #QUOTE-SUMM-TAG TO #WORK-DATA-A
  MOVE #QUOTE-SUMM-TAG-LEN TO #WORK-DATA-LEN
  MOVE TRUE TO #END-TAG
  PERFORM BUILD-OUTPUT
*
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE LOAD-INPUT-TO-OUTPUT
* * * * * * * * * * * * * * * * * * *
*
MOVE #TAG (#I3)     TO #WORK-DATA-A
MOVE #TAG-LEN (#I3) TO #WORK-DATA-LEN
MOVE TRUE TO #BEGIN-TAG
PERFORM BUILD-OUTPUT
*
MOVE #DATA (#I3)     TO #WORK-DATA-A
MOVE #DATA-LEN (#I3) TO #WORK-DATA-LEN
PERFORM BUILD-OUTPUT
*
MOVE #TAG (#I3)     TO #WORK-DATA-A
MOVE #TAG-LEN (#I3) TO #WORK-DATA-LEN
MOVE TRUE TO #END-TAG
PERFORM BUILD-OUTPUT
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUILD-OUTPUT
* * * * * * * * * * * * * * *
*
IF #BEGIN-TAG
  PERFORM BUMP-OUT-INDX
  MOVE '<' TO #WEB-X (#W1, #I2)
END-IF
*
IF #END-TAG
  PERFORM BUMP-OUT-INDX
  MOVE '<' TO #WEB-X (#W1, #I2)
  PERFORM BUMP-OUT-INDX
  MOVE '/' TO #WEB-X (#W1, #I2)
END-IF
*
FOR #I1 1 TO #WORK-DATA-LEN
  IF #NO-BLANKS AND (#WORK-DATA-X (#I1) = ' ')
    ESCAPE TOP
  END-IF
*
  PERFORM BUMP-OUT-INDX
*
*  WRITE 'CHECK'#I1 #W1 #I2 #WORK-DATA-LEN #WORK-DATA-X (#I1)
* DISPLAY #I1 #W1 #I2 #WORK-DATA-LEN #WORK-DATA-X (#I1)
  MOVE #WORK-DATA-X (#I1) TO #WEB-X (#W1, #I2)
END-FOR
*
IF #BEGIN-TAG OR #END-TAG
  PERFORM BUMP-OUT-INDX
  MOVE '>' TO #WEB-X (#W1, #I2)
END-IF
*
RESET #BEGIN-TAG #END-TAG #NO-BLANKS
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE BUMP-OUT-INDX
* * * * * * * * * * * * * * * *
ADD 1 TO #I2
*
IF #I2 GT #WEB-REC-LEN
  ADD 1 TO #W1
  MOVE 1 TO #I2
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * *
DEFINE SUBROUTINE ERR-PROCESS
* * * * * * * * * * * * * * *
*
WEB-YYY.  FOR #W1 1 TO #WEB-ENTRIES   /* find end of raw input
  IF #WEB-INPUT (#W1 + 1) = ' '
    FOR #I2 #WEB-REC-LEN TO 1 STEP -1
      IF #WEB-X (#W1, #I2) NE ' '
        IF #I2 = #WEB-REC-LEN
          ADD 1 TO #W1
          MOVE 1 TO #I2
        ELSE
          ADD 1 TO #I2
        END-IF
*
        ESCAPE BOTTOM (WEB-YYY.)
      END-IF
    END-FOR
  END-IF
END-FOR
*
MOVE #W1 TO #END-W1
MOVE #I2 TO #END-I2
*                                         QUOTE SUMMARY
RESET #WEB-INPUT (*)
MOVE 1 TO #W1
RESET #I2
MOVE #QUOTE-SUMM-TAG TO #WORK-DATA-A
MOVE #QUOTE-SUMM-TAG-LEN TO #WORK-DATA-LEN
MOVE TRUE TO #BEGIN-TAG
PERFORM BUILD-OUTPUT
*
FOR-ERR. FOR #I1 1 TO 5
  FOR #I3 1 TO #WEB-REC-LEN
    IF #WEB-HOLD-X (#I1, #I3) = '~'
      ESCAPE BOTTOM
    END-IF
*
    IF (#I1 = #END-W1) AND (#I3 = #END-I2)
      ESCAPE BOTTOM (FOR-ERR.)
    END-IF
*
    PERFORM BUMP-OUT-INDX
    MOVE #WEB-HOLD-X (#I1, #I3) TO #WEB-X (#W1, #I2)
  END-FOR
END-FOR
*
MOVE #ERROR-TAG TO #WORK-DATA-A
MOVE #ERROR-TAG-LEN TO #WORK-DATA-LEN
MOVE TRUE TO #BEGIN-TAG
PERFORM BUILD-OUTPUT
*
MOVE #ERR     TO #WORK-DATA-A
MOVE #ERR-LEN TO #WORK-DATA-LEN
PERFORM BUILD-OUTPUT
* WRITE 'Fatal error' #ERR
*
MOVE #ERROR-TAG TO #WORK-DATA-A
MOVE #ERROR-TAG-LEN TO #WORK-DATA-LEN
MOVE TRUE TO #END-TAG
PERFORM BUILD-OUTPUT
*
MOVE #QUOTE-SUMM-TAG TO #WORK-DATA-A
MOVE #QUOTE-SUMM-TAG-LEN TO #WORK-DATA-LEN
MOVE TRUE TO #END-TAG
PERFORM BUILD-OUTPUT
*
*
END-SUBROUTINE
*
END
