* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
************************************************************************
* NAME         : INVPFIX01                                             *
* AUTHOR       : Copyright: Electronic Data Systems                    *
* DESCRIPTION  : Check Scanning Interface                              *
*              : Applies scanned items to accounts                     *
************************************************************************
*                       MODIFICATION LOG                               *
* USER  DATE       TAG     REASON                                      *
* PAM  01/13/2011  None    Program Written                             *
************************************************************************
*
DEFINE DATA
LOCAL USING OBJLSTAT      /* Status file object LDA
LOCAL USING OBJLTRRG      /* Transaction Register object LDA
LOCAL USING C2500AAM
LOCAL
*
1 AR-V VIEW OF A-ACCOUNTING-REGISTER
  2 ID-NUMBER
  2 TRANSACTION-DATN
  2 TRANSACTION-TIMN
  2 TXN-CODE
  2 DEBIT-AMOUNT
  2 CREDIT-AMOUNT
  2 CASH-CODE
  2 POLICY-NUMBER
*
1 #TRAN-DATE           (N8)
1 #2ND-TIM-EDIT        (L)
1 #CASH-CODE           (A1)
1 #DISP-MSG            (A75)
1 #OLD-ALP-FLG         (A1)
1 #OLD-ALP-AMT         (P5.2)
1 #CMB2-LOAN-AMT       (P5.2)
*
1 #TRANS-TABLE         (300)
  2 #TT-TRAN-APPLIED   (L)
  2 #TT-ID-NO          (P6)
  2 #TT-EFF-DT         (P8)
  2 #TT-ISS-DT         (P8)
  2 #TT-TRAN-CODE      (A4)
  2 #TT-TRAN-AMT       (P7.2)
  2 #TT-NAME           (A25)
  2 #TT-ADJ            (A1)
  2 #TT-ALP-CODE       (A1)
  2 #TT-AMT-FLAG       (A1)
  2 #TT-CASH-CODE      (A1)
1 #TOT-CMB3-PRN        (P5.2)
1 #TOT-CMB3-INT        (P5.2)
1 #TOT-CMB3-ADCR       (P5.2)
1 #TOT-CMB4-PREM       (P5.2)
1 #TOT-CMB4-DUES       (P5.2)
1 #TOT-CMB3-PRN-CAP    (P5.2)
1 #TOT-CMB3-INT-CAP    (P5.2)
1 #APPROVED            (L/15)
***
1 #DATN           (N8)
1 #TIMN           (N7)
1 #DATE-MMDDYYYY  (N8)
1 REDEFINE #DATE-MMDDYYYY
  2 #MMDD         (N4)
  2 #YYYY         (N4)
1 REDEFINE #DATE-MMDDYYYY
  2 #DATE-MMDDYYYY-A (A8)
1 #CUR-ACCT-UPDT  (N8)
1 #ST-ISN         (P9)
1 #MR-ISN         (P9)
1 #CC-X           (I2)
1 #ILN1           (I2)
1 #ILN2           (I2)
1 #LX             (I2)
1 #I              (I2)
1 #II             (I2)
1 #SG-TBL (15)
 2 #SG-CAT1 (A2)
 2 #SG-CAT2 (A2)
 2 #SG-AMT  (N6.2)
1 #INP-AMT        (N6.2)
1 #INP-TR-CD      (A4)
1 #PRNP-AMT       (N6.2)
1 #PRNP-TR-CD     (A4)
1 #LOAN-AMOUNT    (P7.2)
1 #UPDATE-MODE    (L)   INIT <TRUE>
1 #ORIG-MODE      (A1/9)
1 #CURR-VAR-INT-RATE (P2.3)
1 #CLERK          (A3) INIT <'WEB'>
1 #USER-ID        (A8)
1 #TERM           (L)
1 #EXTRA-STOP     (L)
1 #CAP-POLICY     (L)
1 #CMBX           (A4)
1 #ERROR-MESSAGE  (A75)          /* Error passed from apply payment program
1 #TT-DATE        (P8)           /* Parm for apply ADCR subroutine
1 #ACC-INT-AMT    (P5.2)
1 #ISSUE-DATE     (N8)
1 REDEFINE #ISSUE-DATE
  2 #ISSUE-DATE-A  (A8)
1 #MEMBER-KEY     (A7)
1 REDEFINE #MEMBER-KEY
  2 #ID-NUMBER    (N6)
  2 REDEFINE #ID-NUMBER
    3 #ID-NUMBER-A (A6)
1 #MODE           (A1)
1 #WEB-CHARGE     (A1) INIT <'Y'>
1 #LPF            (L)               /* YK1
1 #LPV            (L)               /* YK1
1 #INVALID        (L)
*
END-DEFINE
************************************************************************
*
INPUT #TRAN-DATE
IF #TRAN-DATE NE MASK (YYYYMMDD)
  WRITE 'invalid transaction date = ' #TRAN-DATE
  ESCAPE ROUTINE
END-IF
*
READ AR-V BY AR-V.TRANSACTION-DATN FROM #TRAN-DATE
  IF AR-V.TRANSACTION-DATN NE #TRAN-DATE
   OR AR-V.CASH-CODE NE 'I'
     ESCAPE TOP
  END-IF
*
  #DATN := AR-V.TRANSACTION-DATN
  #TIMN := AR-V.TRANSACTION-TIMN
  #CURR-VAR-INT-RATE := FUNCTION-INT-RATE(<'RATE5AB'>)
  #DATE-MMDDYYYY := FUNCTION-DATE(<#DATN>)
  #ID-NUMBER := AR-V.ID-NUMBER
*
  #CASH-CODE := 'I'
*
  #CLERK := 'EDS'
*
  FIND(1) ST-V WITH ID-NUMBER = AR-V.ID-NUMBER
    #ST-ISN := *ISN
    #ORIG-MODE(*) := MODE(*)
  END-FIND
*
  GET ST-V #ST-ISN
  ST-V.DATE-ACCT-UPDATE := ST-V.DTS-DATN := #DATN
  ST-V.DTS-TIMN := *TIMN
*
  RESET #INP-TR-CD #INP-AMT
  #CC-X := F_POLICY_SEGMENT(<AR-V.POLICY-NUMBER,#ID-NUMBER-A>)
  WRITE #CC-X 1X AR-V.ID-NUMBER 1X AR-V.TXN-CODE
  DECIDE FOR FIRST CONDITION
    WHEN AR-V.TXN-CODE = 'PREP'
      #INP-TR-CD  := 'PRER'
      #INP-AMT    := AR-V.CREDIT-AMOUNT
    WHEN AR-V.TXN-CODE = 'INTF'
      #INP-TR-CD  := 'AIAF'
      #INP-AMT    := AR-V.CREDIT-AMOUNT
    WHEN AR-V.TXN-CODE = 'INPF'
      #INP-TR-CD  := 'AIAF'
      #INP-AMT    := AR-V.CREDIT-AMOUNT
    WHEN AR-V.TXN-CODE = 'PRNF'
      #INP-TR-CD  := 'PADF'
      #INP-AMT    := AR-V.CREDIT-AMOUNT
    WHEN AR-V.TXN-CODE = 'DUEP'
      #INP-TR-CD  := 'DUER'
      #INP-AMT    := AR-V.CREDIT-AMOUNT
    WHEN AR-V.TXN-CODE = 'ADCR'
      #INP-TR-CD  := 'RDCR'
      #INP-AMT    := AR-V.CREDIT-AMOUNT
    WHEN NONE
      IGNORE
  END-DECIDE
*
  RESET #INVALID
  DECIDE ON FIRST VALUE #INP-TR-CD
    VALUE 'PRER'
      PERFORM APPLY-PRER
    VALUE 'RDCR'
      PERFORM APPLY-RDCR
    VALUE 'AIAF'
      PERFORM APPLY-AIAF
    VALUE 'DUER'
      PERFORM APPLY-DUER
      RESET ST-V.DUES-BALANCE
    VALUE 'PADF'
      PERFORM APPLY-PADF
    NONE VALUE
      #INVALID := TRUE
      WRITE 'Invalid Txn Code - ' AR-V.TXN-CODE
  END-DECIDE
*
  IF #INVALID
    DISPLAY (2) AR-V.ID-NUMBER AR-V.TXN-CODE
  ELSE
    DISPLAY (1) ST-V.ID-NUMBER #INP-TR-CD #INP-AMT
    UPDATE (0144)
    PERFORM ACCT-REG
  END-IF
*
  END TRANSACTION
END-READ
*
**********************************************************************
DEFINE SUBROUTINE APPLY-PRER
**********************************************************************
*
MOVE 1 TO #ILN1
MOVE #CC-X TO #LX
MOVE ST-V.ID-NUMBER TO #SCR-ID-SSN    (1)
#SCR-EFF-DT (1) := #DATE-MMDDYYYY-A
*
MOVE #INP-TR-CD     TO #SCR-TRAN-CODE (1)
MOVE #INP-AMT       TO #SCR-TRAN-AMT  (1)
MOVE #CASH-CODE     TO #SCR-CASH-CODE (1)   /* PM1
* MOVE 'C'            TO #SCR-CASH-CODE (1) /* PM1
*
DECIDE ON FIRST VALUE ST-V.MODE(#LX)
  VALUE '4','2','1'
    #MODE := '0'
  VALUE 'A','S','Q'
    #MODE := 'M'
  VALUE 'G'
    IF ST-V.PAY-STATUS (#LX) = '21'      /* GAWT
      #MODE := ST-V.MODE(#LX)
    ELSE                                 /* YK1
      #MODE := 'M'                       /* YK1
    END-IF                               /* YK1
  NONE VALUE
    #MODE := ST-V.MODE(#LX)
END-DECIDE
*
CALLNAT 'CPRERSAM' #SCR-LINES
  ST-V.STATUS       (#LX)
  ST-V.PAY-STATUS   (#LX)
  #MODE
  ST-V.PLAN         (#LX)
  ST-V.ISSUE-DATE   (#LX)
  ST-V.PAID-TO-DATE (#LX)
  ST-V.PAID-UP-DATE (#LX)
  ST-V.ANNUAL-PREM  (#LX)
  ST-V.MTD-ACV-PREM-ADJ (1:9)
  ST-V.MONTH-ALLOC-AMT  (#LX)
  ST-V.X-BILL-ADJUST (#LX)
  ST-V.X-BILL-DOLLAR (#LX)
  ST-V.OWNERSHIP-FLAG (#LX)
  ST-V.DUES-ALL-PAID-IND
  ST-V.DUES-BALANCE
  ST-V.DUES-FPF
  ST-V.DUES-TOT-PAID
  ST-V.INTRO-FLAG
  ST-V.PAD-CODE                         /* PM4
  ST-V.RID-PLAN    (#LX)
  ST-V.RID-EFF-DT  (#LX)
  ST-V.RID-PD-TO   (#LX)
  #ILN1
  #ILN2
  #UPDATE-MODE
  #SG-TBL (1:15)
  #LX
  #MODE                                  /* YK3
*
END-SUBROUTINE
*
**********************************************************************
DEFINE SUBROUTINE APPLY-DUER
**********************************************************************
*
MOVE 1 TO #ILN1
MOVE ST-V.ID-NUMBER   TO #SCR-ID-SSN    (1)
MOVE #DATE-MMDDYYYY-A TO #SCR-EFF-DT (1)
MOVE #INP-TR-CD       TO #SCR-TRAN-CODE (1)
MOVE #INP-AMT         TO #SCR-TRAN-AMT  (1)
MOVE #CASH-CODE       TO #SCR-CASH-CODE (1)   /* PM1
*
CALLNAT 'CDUESSAM' #SCR-LINES
  ST-V.DUES-FPF
  ST-V.DUES-BALANCE
  ST-V.DUES-TOT-PAID
  #ILN1
  #ILN2
  #SG-TBL (1:15)
*
END-SUBROUTINE
*
**********************************************************************
DEFINE SUBROUTINE APPLY-AIAF
**********************************************************************
*
MOVE 1 TO #ILN1
MOVE #CC-X TO #LX
MOVE ST-V.ID-NUMBER   TO #SCR-ID-SSN    (1)
MOVE #DATE-MMDDYYYY-A TO #SCR-EFF-DT (1)
MOVE #INP-TR-CD       TO #SCR-TRAN-CODE (1)
MOVE #INP-AMT         TO #SCR-TRAN-AMT  (1)
MOVE #CASH-CODE       TO #SCR-CASH-CODE (1) /* PM1
*
ADD #SCR-TRAN-AMT (#ILN1) TO ST-V.X-ACCUM-INTEREST (#LX)
*
IF ST-V.INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q'           /* DW18
  MOVE 'CP'          TO #SG-TBL.#SG-CAT1 (1)
  MOVE '**'          TO #SG-TBL.#SG-CAT2 (1)
  MOVE #SCR-TRAN-AMT (#ILN1) TO #SG-TBL.#SG-AMT  (1)
END-IF
*
END-SUBROUTINE
*
**********************************************************************
DEFINE SUBROUTINE APPLY-PADF
**********************************************************************
*
MOVE 1 TO #ILN1
MOVE #CC-X TO #LX
MOVE ST-V.ID-NUMBER TO #SCR-ID-SSN    (1)
#SCR-EFF-DT (1) := #DATE-MMDDYYYY-A
MOVE #INP-TR-CD     TO #SCR-TRAN-CODE (1)
MOVE #INP-AMT       TO #SCR-TRAN-AMT  (1)
MOVE #CASH-CODE     TO #SCR-CASH-CODE (1)   /* PM1
*
CALLNAT 'CPADJSAM' #SCR-LINES
  #CURR-VAR-INT-RATE
  ST-V.X-INTEREST-RATE (#LX)
  ST-V.X-LOAN-DATE (#LX)
  ST-V.X-LOAN-AMOUNT (#LX)
  ST-V.X-ACCUM-INTEREST (#LX)
  ST-V.X-NXT-YR-ACCUM-INT (#LX)
  ST-V.X-OLD-LOAN-AMT (#LX)
  ST-V.X-CAP-AMT (#LX)
  ST-V.APL-CNT
  ST-V.X-PRINCIPAL-CHG-CODE (#LX)
  ST-V.X-LOAN-DATE-2 (#LX)
  ST-V.X-LOAN-AMOUNT-2 (#LX)
  ST-V.X-ACCUM-INTEREST-2 (#LX)
  ST-V.X-NXT-YR-ACCUM-INT-2 (#LX)
  ST-V.X-OLD-LOAN-AMT-2 (#LX)
  ST-V.X-CAP-AMT-2 (#LX)
  ST-V.INTRO-FLAG
  #ILN1
  #ILN2
  #UPDATE-MODE
  #SG-TBL (1:15)
  #CLERK
  #CMBX
  ST-V.CAP-BILL-DATE
  ST-V.PROCESS-IND
  ST-V.NAME
  #DATN
  #TIMN
*
END-SUBROUTINE
*
**********************************************************************
DEFINE SUBROUTINE APPLY-RDCR
**********************************************************************
*
#ILN1              := 1
#SCR-ID-SSN (1)    := ST-V.ID-NUMBER
#SCR-EFF-DT (1)    := #DATE-MMDDYYYY-A
#SCR-TRAN-CODE (1) := #INP-TR-CD
#SCR-TRAN-AMT  (1) := #INP-AMT
#SCR-CASH-CODE (1) := #CASH-CODE   /* PM1
*
CALLNAT 'CRDCRSAM' #SCR-LINES
  ST-V.STATUS                (1:9)
  ST-V.PAY-STATUS            (1:9)
  ST-V.MODE                  (1:9)
  ST-V.PLAN                  (1:9)
  ST-V.ISSUE-DATE            (1:9)
  ST-V.PAID-TO-DATE          (1:9)
  ST-V.PAID-UP-DATE          (1:9)
  ST-V.ANNUAL-PREM           (1:9)
  ST-V.MTD-ACV-PREM-ADJ      (1:9)
  ST-V.ALOT-AMT
  ST-V.ALOT-SW
  ST-V.STOP-DATE
  ST-V.DEBIT-CREDIT-AMT
  ST-V.AUX-DEBIT-CREDIT-AMT
  ST-V.ALT-LP-AMT
  ST-V.PAD-CODE
  ST-V.LAST-DB-CR-CHECK
  ST-V.PAY-NOW-SWITCH
  #ILN1
  #ILN2
  #UPDATE-MODE
  #TT-DATE
*
END-SUBROUTINE
*
**********************************************************************
DEFINE SUBROUTINE ACCT-REG
**********************************************************************
*
MOVE 1 TO #ILN1
MOVE ST-V.ID-NUMBER TO #SCR-ID-SSN    (1)
#SCR-EFF-DT (1) := #DATE-MMDDYYYY-A
*
IF #INP-TR-CD = 'ADCR' OR = 'RDCR'
  #SCR-ISS-DT (1) := 0
ELSE
  #ISSUE-DATE    := FUNCTION-DATE(<ST-V.ISSUE-DATE(#CC-X)>)
  #SCR-ISS-DT(1) := #ISSUE-DATE-A
END-IF
*
MOVE #INP-TR-CD     TO #SCR-TRAN-CODE (1)
*
IF #INP-TR-CD = MASK ('FLN')
  RESET #SCR-TRAN-AMT (1)
ELSE
  MOVE #INP-AMT       TO #SCR-TRAN-AMT  (1)
END-IF
*
MOVE #CASH-CODE     TO #SCR-CASH-CODE (1)   /* PM1 to indicate description
* MOVE 'C'            TO #SCR-CASH-CODE (1) /* PM1
*
CALLNAT 'C2520SAM' #SCR-LINES
  ST-V.ID-NUMBER
  ST-V.PROCESS-IND
  ST-V.INTRO-FLAG
  ST-V.NAME
  ST-V.PLAN   (1:9)
  ST-V.DEBIT-CREDIT-AMT
  ST-V.DATE-ACCT-UPDATE
  #DATN
  #TIMN
  #ILN1
  #CUR-ACCT-UPDT
  #CLERK
  #EXTRA-STOP
  #SG-TBL (1:15)
  #CMBX
RESET #EXTRA-STOP
RESET #SG-TBL(*) #ERROR-MESSAGE #SCR-LINES
END-SUBROUTINE
END
