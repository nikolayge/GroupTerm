* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PROGRAM-ID: C2V30PAV
*      MODIFICATIONS
* SAG 10282005 RH1 AB - Replaced CALL to Cobol with CALLNAT to Natural (C2V12CVP)
* YAK 12052007 YK1  Remove hardcording for interest rates
*                   (Read GEN-TABLE through OBJNGENT)
* YAK 02052008 YK2  Change code to use FUNCTION-INT-RATE
*                    to get rate from GEN-TABLE
*********************************************************
*
INCLUDE C2V10CVP     /* COMMON DEFINE DATA FOR "VP" AND "AV"
*
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
INCLUDE GONERCXX      /* NATURAL ERROR ROUTINE
*
#SCR-OVR-GROWTH-RATE := FUNCTION-INT-RATE(<'RATE2AA'>)  /* YK2
#CURR-VAR-INT-RATE   := FUNCTION-INT-RATE(<'RATE5AB'>)  /* YK2
*
INCLUDE  C2V12CVP     /* COMMON LOGIC FOR "VP" AND "AV"
*
INCLUDE  C2V11CVP     /* COMMON OVERRIDE LOGIC FOR "VP" AND "AV"
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE AV-PROCESSING
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
*
IF #SCR-OVR-SMOKER-FLAG = 'N'
  MOVE 'NON-SMOKER' TO #SMOK-NON
ELSE
  MOVE 'SMOKER' TO #SMOK-NON
END-IF
*
MOVE #OVR-DOB TO #YYYYMMDD
PERFORM DATE-REFORMAT
MOVE #W-DATE-EDITED TO #SCR-AS-OF-DATE
*
IF #USE-ASSUMED-AGE
  COMPRESS 'FOR' #SCR-OVR-NAME '-' #SMOK-NON '-'
         'ASSUMED AGE IS'  #AGE  INTO #SCR-TOP-LINE
ELSE
  COMPRESS 'FOR' #SCR-OVR-NAME '-' #SMOK-NON '-'
         'BORN' #SCR-AS-OF-DATE       INTO #SCR-TOP-LINE
END-IF
*
MOVE 1 TO #PROJ-IDX
* MOVE EDITED #SCR-OVR-ISSUE-MM (EM=99) TO #ISS-MM
* MOVE EDITED #SCR-OVR-ISSUE-DD (EM=99) TO #ISS-DD
* MOVE EDITED #SCR-OVR-ISSUE-YYYY (EM=9999) TO #ISS-YYYY
*
MOVE EDITED #SCR-OVR-FACE-AMT (EM=ZZZ,ZZZ) TO #SCR-AMT-DISP-6
*
IF #OVR-ISSUE-DATE GE 19941201
  MOVE 5 TO #TOT-POLS
ELSE
  MOVE 4 TO #TOT-POLS
END-IF
*
MOVE #SCR-OVR-GROWTH-RATE TO #L-GROWTH-RATE
COMPUTE #RATE-CALC = #SCR-OVR-GROWTH-RATE / 1000
MOVE EDITED #RATE-CALC (EM=Z9.999) TO #RATE-DISP
*                     'ON' #ISS-DT
COMPRESS ' PROJECTIONS FOR $' #SCR-AMT-DISP-6 'UNDER' #TOT-POLS
      'PAYMENT PLANS - CURR CREDITING RATE' #RATE-DISP
                                INTO #SCR-PROJ-LINE (#PROJ-IDX)
COMPRESS #SCR-PROJ-LINE (#PROJ-IDX) '%'
                           INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
*
ADD 1 TO #PROJ-IDX
COMPRESS 'YRS-AS-MBR  GUAR-CASH-VALUE  GUAR-DEATH-BENE  PROJ-CASH'
  '-VALUE   PROJ-DEATH-BENE' INTO #SCR-PROJ-LINE (#PROJ-IDX) LEAVING NO
*
ADD 1 TO #PROJ-IDX
 MOVE 'OL ' TO #PR-V.PLAN (#IDX)
MOVE 'OL' TO #SCR-OVR-PLAN
PERFORM AV-CALC-PREM
* PERFORM CALC-DUES
* COMPRESS '-- ORDINARY LIFE -- PAY TO AGE 100 --- MONTHLY PREM  $'
*      #AV-DUES-DISP 'DUES $' #SVC-FEE-A INTO #SCR-PROJ-LINE (#PROJ-IDX)
*
PERFORM SETUP-PROJECTION
PERFORM FORMAT-AV-AMTS
*
ADD 1 TO #PROJ-IDX
* MOVE '30P' TO #pr-v.PLAN (#IDX)
MOVE '30' TO #SCR-OVR-PLAN
PERFORM AV-CALC-PREM
* PERFORM CALC-DUES
* COMPRESS '-- 30 PAY --------- PAY FOR 30 YEARS - MONTHLY PREM  $'
*     #AV-DUES-DISP 'DUES $' #SVC-FEE-A  INTO #SCR-PROJ-LINE (#PROJ-IDX)
PERFORM SETUP-PROJECTION
PERFORM FORMAT-AV-AMTS
*
ADD 1 TO #PROJ-IDX
* MOVE '20P' TO #pr-v.PLAN (#IDX)
MOVE '20' TO #SCR-OVR-PLAN
PERFORM AV-CALC-PREM
* PERFORM CALC-DUES
* COMPRESS '-- 20 PAY --------- PAY FOR 20 YEARS - MONTHLY PREM  $'
*      #AV-DUES-DISP 'DUES $' #SVC-FEE-A INTO #SCR-PROJ-LINE (#PROJ-IDX)
PERFORM SETUP-PROJECTION
PERFORM FORMAT-AV-AMTS
*
IF #OVR-ISSUE-DATE GE 19941201
  ADD 1 TO #PROJ-IDX
*   MOVE '7P' TO #pr-v.PLAN (#IDX)
  MOVE '7P' TO #SCR-OVR-PLAN
  PERFORM AV-CALC-PREM
* PERFORM CALC-DUES
* COMPRESS '-- 7 PAY ---------- PAY FOR  7 YEARS - MONTHLY PREM  $'
*     #AV-DUES-DISP 'DUES $' #SVC-FEE-A  INTO #SCR-PROJ-LINE (#PROJ-IDX)
  PERFORM SETUP-PROJECTION
  PERFORM FORMAT-AV-AMTS
END-IF
*
ADD 1 TO #PROJ-IDX
* MOVE #HOLD-PLAN TO #pr-v.PLAN (#IDX)
MOVE 'SI' TO #SCR-OVR-PLAN
PERFORM AV-CALC-PREM
* PERFORM CALC-DUES
MOVE ROUNDED #ANNUAL-PREM TO #WHOLE-DOLLARS
MOVE EDITED #WHOLE-DOLLARS (EM=ZZZ,ZZ9) TO #AV-SNG-PREM-DISP
* COMPRESS '-- SINGLE PAYMENT - LIFE MEMBERSHIP -- ONE TIME PMT'
*   'OF $'#AV-SNG-PREM-DISP 'DUES $' #SVC-FEE-A
*              INTO #SCR-PROJ-LINE (#PROJ-IDX)
*
MOVE '47' TO PAY-STATUS (#IDX)
PERFORM SETUP-PROJECTION
PERFORM FORMAT-AV-AMTS
*
IF #OVR-ISSUE-DATE LT 19941201
  ADD 1 TO #PROJ-IDX
  COMPRESS '  NOTE: CASH VALUE IS WHAT YOU GET IF YOU EVER QUIT THE'
          'ASSOCIATION.'                INTO #SCR-PROJ-LINE (#PROJ-IDX)
*
  ADD 1 TO #PROJ-IDX
  COMPRESS '        DEATH BENEFIT IS WHAT YOUR BENEFICIARY GETS IF'
         'YOU DIE.'                    INTO #SCR-PROJ-LINE (#PROJ-IDX)
*
  ADD 1 TO #PROJ-IDX
  COMPRESS '        (YOU CAN ALSO TAKE LOANS AGAINST YOUR INSURANCE'
         'COVERAGE.)'                  INTO #SCR-PROJ-LINE (#PROJ-IDX)
END-IF
*
INPUT TEXT #SCR-TEXT USING MAP 'C2V13MVP'
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FORMAT-AV-AMTS
* * * * * * * * * * * * * * * * *
*
FOR #DTL-IDX 1 TO 3
  ADD 1 TO #PROJ-IDX
*
  IF   (#CGA-ORIG-SUFFIX NE 'NEG')       /* DO NOT SHOW NEGATIVE MIN CV
   AND (#L-PTY-MIN-CSV (#DTL-IDX) LT 0)  /* UNLESS SUFFIX IS 'NEG'
    RESET #L-PTY-MIN-CSV (#DTL-IDX)
  END-IF
*
  IF PLAN (#IDX) = 'OL'
    COMPUTE #MAX-YRS = (DOB-YYYY + 100)
           - #PR-V.ISSUE-DATE-YYYY (#IDX)
  ELSE
    RESET #MAX-YRS
    IF PLAN (#IDX) NE 'SPF'
      IF PLAN-2A (#IDX) = 'P' OR = 'F'
        MOVE PLAN-1A (#IDX) TO #MAX-YRS-A1
      ELSE
        MOVE PLAN-2 (#IDX) TO #MAX-YRS-A2
      END-IF
    END-IF
  END-IF
*
  IF PAY-STATUS (#IDX) = '47'
    MOVE #ANNUAL-PREM TO #DUES-PAID  /* calc pusp amt
  ELSE
    IF #L-PTY-POL-AGE (#DTL-IDX) GT #MAX-YRS
      COMPUTE #DUES-PAID = ANNUAL-PREM (#IDX) * #MAX-YRS
                           + TOT-PREMIUMS-PAID (#IDX)
    ELSE
      COMPUTE #DUES-PAID =
              ANNUAL-PREM (#IDX) * #L-PTY-POL-AGE (#DTL-IDX)
                         + TOT-PREMIUMS-PAID (#IDX)
    END-IF
  END-IF
*
  MOVE ROUNDED #DUES-PAID TO #DUES-PD-DOLS
  MOVE RIGHT #DUES-PD-DOLS TO #YD-DUES-PAID
*
  IF #SCR-SHOW-REAL = 'N' /* do not show real numbers (apply limits)
    IF #L-PTY-PR-CSV (#DTL-IDX) LT #L-PTY-MIN-CSV (#DTL-IDX)
      MOVE #L-PTY-PR-CSV (#DTL-IDX) TO #L-PTY-MIN-CSV (#DTL-IDX)
    END-IF
*
    IF #DUES-PD-DOLS GT #L-PTY-MIN-CSV (#DTL-IDX)
      MOVE #DUES-PD-DOLS TO #L-PTY-MIN-CSV (#DTL-IDX)
    END-IF
*
    IF #DUES-PD-DOLS GT #L-PTY-MIN-DB (#DTL-IDX)
      MOVE #DUES-PD-DOLS TO #L-PTY-MIN-DB (#DTL-IDX)
    END-IF
*
    IF #DUES-PD-DOLS GT #L-PTY-PR-CSV (#DTL-IDX)
      MOVE #DUES-PD-DOLS TO #L-PTY-PR-CSV (#DTL-IDX)
    END-IF
*
    IF #DUES-PD-DOLS GT #L-PTY-PR-CSV-NL (#DTL-IDX)
      MOVE #DUES-PD-DOLS TO #L-PTY-PR-CSV-NL (#DTL-IDX)
    END-IF
  END-IF
*
  MOVE FACE-AMOUNT (#IDX) TO #L-PTY-MIN-DB (#DTL-IDX)
*
  MOVE EDITED #L-PTY-POL-AGE (#DTL-IDX) (EM=ZZ9) TO #AV-YRS-AS-MBR
  MOVE EDITED #L-PTY-MIN-CSV (#DTL-IDX) (EM=-ZZ,ZZZ,ZZ9) TO #AV-G-CV
  MOVE EDITED #L-PTY-MIN-DB  (#DTL-IDX) (EM=-ZZ,ZZZ,ZZ9) TO #AV-G-DB
  MOVE EDITED #L-PTY-PR-CSV  (#DTL-IDX) (EM=-ZZ,ZZZ,ZZ9) TO #AV-CV
  MOVE EDITED #L-PTY-PR-DB   (#DTL-IDX) (EM=-ZZ,ZZZ,ZZ9) TO #AV-DB
  MOVE #AV-DTL TO #SCR-PROJ-LINE (#PROJ-IDX)
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE AV-CALC-PREM
*
IF MONTH-ALLOC-AMT (#IDX) = 999.99
  MOVE 'OLD' TO #CGA-SCR-SUFFIX
END-IF
MOVE #SCR-OVR-PLAN TO #PLAN
*
CALLNAT 'GPREMSXX' #CGA-SCR-COMMAND #CGA-SCR-ID #CGA-SCR-SUFFIX
         #PLAN #AGE #ANNUAL-PREM #OVR-ISSUE-DATE
         #SCR-OVR-SMOKER-FLAG #SCR-OVR-FACE-AMT #SCR-OVR-SEX
RESET #CGA-SCR-SUFFIX
*
IF #SCR-OVR-PLAN = 'SI'
  MOVE #ANNUAL-PREM TO ACC-CASH-VALUE (#IDX)
  MOVE #ANNUAL-PREM TO CASH-VALUE (#IDX)
ELSE
  MOVE #ANNUAL-PREM TO ANNUAL-PREM (#IDX)
END-IF
*
COMPUTE #AV-DUES = #ANNUAL-PREM / 12
MOVE EDITED #AV-DUES (EM=Z,ZZZ.99) TO #AV-DUES-DISP
MOVE (AD=I) TO #SCR-CV (#PROJ-IDX)
*
END-SUBROUTINE
*
* * * * * * * * * * * * * *
* DEFINE SUBROUTINE CALC-DUES
* * * * * * * * * * * * * *
*
* RESET #SVC-FEE
*
* IF #CGA-SCR-ID NE 0   /* no fee
*   MOVE '0' TO #SVC-FEE-A
*   ESCAPE ROUTINE
* END-IF
*
* IF PLAN (1) = 'OL'  MOVE #SVC-FEE-OL TO #SVC-FEE END-IF
* IF PLAN (1) = '30P' MOVE #SVC-FEE-30 TO #SVC-FEE END-IF
* IF PLAN (1) = '20P' MOVE #SVC-FEE-20 TO #SVC-FEE END-IF
* IF PLAN (1) = '7P'  MOVE #SVC-FEE-7P TO #SVC-FEE END-IF
* MOVE EDITED #SVC-FEE (EM=ZZ.99) TO #SVC-FEE-A
*
* IF #SCR-OVR-PLAN = 'SI'
*   MOVE EDITED #SVC-FEE-SI (EM=ZZ9) TO #SVC-FEE-A
* END-IF
*
* END-SUBROUTINE
*
END
