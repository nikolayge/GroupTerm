* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
*****************************************************************
*                                                               *
* New COPYCODE member: ATHISXEY created by ACCORD on: 02/09/05  *
*                                                               *
*****************************************************************
************************************************************************
*                       MODIFICATION LOG                               *
* USER DATE     TAG  REASON                                            *
* SAG  20060221 RH1  AS - Correction made to converted code.  Logic    *
*                    now matches that of original Cobol module.        *
* SAG-AB 20061016     Changed evaluation of min csv to preserve precision
* DRW 08/18/2008 DW21 Gen-Plus processing
* NGG 20141023   NG1  Annuity life products                            *
************************************************************************
*
DEFINE SUBROUTINE CALC-NEW-END-YR-VALUES-X
*
* write 'top athisxey db=' is-lst-db 'is-csv=' is-csv
IF IS-TYPE = 'GP'       /* Gen Plus            DW21
  MOVE IS-NXT-YR-MIN-CSV TO IS-MIN-CSV
  COMPUTE IS-NXT-YR-MIN-CSV = IS-GPL-CVS (IS-DURATION +1) * IS-FAC-AMT / 1000
  MOVE IS-EOM-DB TO IS-DB
  MOVE IS-CSH-SUR-VL TO IS-CSV
*  write 'athisxey IS-NXT-YR-MIN-CSV=' IS-NXT-YR-MIN-CSV 'dur=' is-duration
*    'min-csv=' is-min-csv 'is-eom-db=' is-eom-db 'is-db=' is-db
*    'is-csv=' is-csv 'is-csv-sur-vl=' is-csh-sur-vl
  ESCAPE ROUTINE
END-IF
*
**IF IS-TYPE = 'AL'
IF IS-ANNUITY-LIFE (< IS-TYPE >)
  MOVE IS-CSH-SUR-VL TO IS-CSV
  MOVE IS-EOM-DB TO IS-DB
  ESCAPE ROUTINE
END-IF
*
MOVE IS-ISS-AGE TO TJ-ISS-X
ADD 1 TO TJ-ISS-X
MOVE TJ-ISS-X TO TJ-ATT-X
ADD IS-DURATION TO TJ-ATT-X
IF TJ-ATT-X > 101
  MOVE 101 TO TJ-ATT-X
END-IF
*
IF IS-TYPE = 'OL' OR = 'SO' OR = 'FS'
  MOVE 101 TO TJ-PUP-X
ELSE
  MOVE IS-ISS-AGE TO TJ-PUP-X
  ADD 1 TO TJ-PUP-X
  ADD IS-TYPE-YEARS TO TJ-PUP-X
END-IF
MOVE TJ-ISS-X TO TK-ISS-X
MOVE TJ-ATT-X TO TK-ATT-X
MOVE TJ-PUP-X TO TK-PUP-X
*
MOVE IS-NXT-YR-MIN-CSV TO IS-MIN-CSV
*
IF (IS-MIN-CSV > IS-FAC-AMT) OR ((IS-ISS-AGE + IS-DURATION) > 99)
  MOVE IS-FAC-AMT TO IS-MIN-CSV
END-IF
MOVE IS-FAC-AMT TO IS-MIN-DB
*
MOVE IS-CSH-SUR-VL TO IS-CSV
IF IS-PAID-UP-SW = 'Y'
  MOVE IS-EOM-DB TO IS-DB
ELSE
  MOVE IS-EOM-DB TO IS-DB
END-IF
IF L-LN = 'LN'
  PERFORM CALC-LIAB-RSV
END-IF
*
IF IS-PAID-UP-SW = 'Y'
  RESET IS-WORK-E
ELSE
  MOVE IS-ANN-PREM TO IS-WORK-E
END-IF
IF (IS-TYPE = 'OL' OR = 'SO' OR = 'FS') AND ((IS-ISS-AGE + IS-DURATION + 1) > 100)
  RESET IS-WORK-E
END-IF
IF IS-TYPE = 'SP' OR = 'OL' OR = 'SO' OR = 'FS'
  IGNORE                                                 /*SAG 20060221 RH1 AS
ELSE                                                     /*SAG 20060221 RH1 AS
  IF (IS-DURATION + 1) > IS-TYPE-YEARS
    RESET IS-WORK-E
  END-IF
END-IF
*
ADD 1 TO TJ-ATT-X
IF TJ-ATT-X > 101
  MOVE 101 TO TJ-ATT-X
END-IF
MOVE TJ-ATT-X TO TK-ATT-X
IF IS-SMOK-STATUS = 'N'
  ASSIGN  IS-WORK-F = IS-WORK-E                                    /* SAG-AB 20061016 start
  COMPUTE IS-WORK-F = IS-WORK-F * IS-NET-PREM-RATIO
  COMPUTE IS-WORK-F = IS-WORK-F + IS-MIN-CSV
  ASSIGN  IS-WORK-G = TJ-DX(TJ-ATT-X - 1)
  COMPUTE IS-WORK-G = IS-WORK-G / TJ-DX(TJ-ATT-X)
  COMPUTE IS-WORK-F = IS-WORK-F * IS-WORK-G
  ASSIGN  IS-WORK-G = TJ-MX(TJ-ATT-X - 1)
  COMPUTE IS-WORK-G = IS-WORK-G - TJ-MX(TJ-ATT-X)
  COMPUTE IS-WORK-G = IS-WORK-G / TJ-DX(TJ-ATT-X)
  COMPUTE IS-WORK-G = IS-WORK-G * IS-FAC-AMT
  COMPUTE ROUNDED IS-WORK-B = IS-WORK-F - IS-WORK-G
**  COMPUTE ROUNDED IS-WORK-B = ((IS-MIN-CSV + (IS-WORK-E * IS-NET-PREM-RATIO))
**   * (TJ-DX(TJ-ATT-X - 1) / TJ-DX(TJ-ATT-X)))
**   - (((TJ-MX(TJ-ATT-X - 1) - TJ-MX(TJ-ATT-X)) / TJ-DX(TJ-ATT-X)) * IS-FAC-AMT)
ELSE
  ASSIGN  IS-WORK-F = IS-WORK-E
  COMPUTE IS-WORK-F = IS-WORK-F * IS-NET-PREM-RATIO
  COMPUTE IS-WORK-F = IS-WORK-F + IS-MIN-CSV
  ASSIGN  IS-WORK-G = TK-DX(TK-ATT-X - 1)
  COMPUTE IS-WORK-G = IS-WORK-G / TK-DX(TK-ATT-X)
  COMPUTE IS-WORK-F = IS-WORK-F * IS-WORK-G
  ASSIGN  IS-WORK-G = TK-MX(TK-ATT-X - 1)
  COMPUTE IS-WORK-G = IS-WORK-G - TK-MX(TK-ATT-X)
  COMPUTE IS-WORK-G = IS-WORK-G / TK-DX(TK-ATT-X)
  COMPUTE IS-WORK-G = IS-WORK-G * IS-FAC-AMT
  COMPUTE ROUNDED IS-WORK-B = IS-WORK-F - IS-WORK-G
**  COMPUTE ROUNDED IS-WORK-B = ((IS-MIN-CSV + (IS-WORK-E * IS-NET-PREM-RATIO))
**   * (TK-DX(TK-ATT-X - 1) / TK-DX(TK-ATT-X)))  -
**   (((TK-MX(TK-ATT-X - 1) - TK-MX(TK-ATT-X)) / TK-DX(TK-ATT-X)) * IS-FAC-AMT)
**COMPUTE ROUNDED IS-NXT-YR-MIN-CSV = IS-WORK-B * 1      /*SAG 20060221 RH1 AS
END-IF                                                            /* SAG-AB 20061016 end
COMPUTE ROUNDED IS-NXT-YR-MIN-CSV = IS-WORK-B * 1        /*SAG 20060221 RH1 AS
*
IF IS-PAY-STATUS = '48'                                                                  /* PM23
  CALLNAT 'AGEN0001' V_CN L-SEG-NO V_AGE                                                 /* PM23
*                                                                                        /* PM23
  IF IS-SMOK-STATUS = 'N'                                                                /* PM23
    CALLNAT 'AOCX0001' V_CN L-SEG-NO IS-FAC-AMT TJ-DX(TJ-ATT-X) TJ-MX(TJ-ATT-X) TJ-ATT-X /* PM23
                       TJ-DX(V_AGE) TJ-MX (V_AGE) V_AGE V_CALC                           /* PM23
  ELSE                                                                                   /* PM23
    CALLNAT 'AOCX0001' V_CN L-SEG-NO IS-FAC-AMT TK-DX(TK-ATT-X) TK-MX(TK-ATT-X) TK-ATT-X /* PM23
                       TK-DX(V_AGE) TK-MX (V_AGE) V_AGE V_CALC                           /* PM23
  END-IF                                                                                 /* PM23
*                                                                                        /* PM23
  IS-NXT-YR-MIN-CSV := V_CALC                                                            /* PM23
END-IF                                                                                   /* PM23
*
IF (IS-NXT-YR-MIN-CSV > IS-FAC-AMT) OR ((IS-ISS-AGE + IS-DURATION + 1) > 99)
  MOVE IS-FAC-AMT TO IS-NXT-YR-MIN-CSV
END-IF
*
END-SUBROUTINE
*
********************************************************************************
*
