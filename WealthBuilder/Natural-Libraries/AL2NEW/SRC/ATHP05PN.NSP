* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 2
* <Natural Source Header
******** CONVERTED TO NATURAL BY SOFTWARE AG ON 07/09/05 ***********************
*                                                                              *
* COMPOPT:RENT,RES,OPT,LIB,SIZE(4000K)                                         *
* LINKOPT:RENT,AMODE=31,RMODE=ANY                                              *
*  PROGRAM-ID.    ATHP05PN.                                                    *
* ******************************************************************************
* INSTALLATION.  AMAA                                                          *
* DATE-COMPILED.  TODAY.                                                       *
* AUTHOR.        EJS 03/77.                                                    *
* REMARKS.                                          VERSION 25.6               *
********************************************************************************
*                       MODIFICATION LOG
* USER DATE     TAG  REASON
* DRW  02212005 DW1  ADD AL (ANNUITY LIFE) PROCESSING
* DRW  03172005 DW2  USE CONV-DURATION TO IND CAP POLICIES
* DRW  04062005 DW3  MODIFY AL INT CALC & ADD TERM DIV CALC
* DRW  04/07/2005 DW4  ADD  COI & TDIV CALCS FOR AL
* PAM  05/27/2005 PM5  ADJUST AVL-TDIV FOR 124156 PER RLB
* DRW  06/24/2005 DW6  HANDLE PD UP DATES GTR 20991231 ON APL'S
* DRW  07/08/2005 DW7  USE GTR OF LST DB & CURR DB CALC FOR AL'S
* SAG  12/23/2005 DW8  AB - INCREASE V/A HISTORY OCCURRANCES (09/21/2005)
* SAG  12/23/2005 DW9  AB - MODIFY CAP LOAN EXCEPTION LINE (09/26/2005)
* SAG  12/23/2005 DW10 AB - FIX MISSING PERIOD ON VA HISTORY PROCESS (10/23/2005)
* SAG  12/09/2005 RH1  SS - MADE CODE CHANGES TO REFLECT THE CONVERSION
*                      OF VARIABLE REINSTATE-COMPLETE-SW FROM A1 TO L
*                      H'00' / H'FF' ASSIGNMENT TO REINSTATE-COMPLETE-SW
*                      WILL BE TREATED AS CHECKING FOR THE FLAG = 'FALSE'
*                      OR 'TRUE'.
* SAG-AB 20060313 Workaround for NAT 1305 overflow pol 48471
* DRW  10/28/2005 DW11 MAKE $3.34 COI ADJUST TO G/F AND OPT-OUT
* DRW  11/14/2005 DW12 STOP ADJUSTING SVC-FEE IF OPTED-OUT
* DRW  11/15/2005 DW13 FIX RESET OF 13 MONTH ON NEW POL BACKDATED
* DRW  12/15/2005 DW14 CHG O/O PROCESSING AGAIN
* DRW  02/15/2006 DW15 USE COI FACTOR IN PROJECTION YEARS
* SAG-AB 20060328 implementation of DW11 through DW15 in converted Natural
* DRW  05/02/2006 DW16-AB FIX TERM REIN AFTER RSGN SPLIT
* SAG-AB 20060711 Workaround for NAT 1305 overflow
* SAG-AB 20060811 Incorporated structure TIN1-PN into Global on advice PAM
* SAG-AB 20060823 TIN1-PN-INTRT from Cobol 99.99 to A5
* DRW-AB 20060816 DW17 MAKE ALL FIXED CAPITALIZATIONS USE ACC INT
* DRW-AB 20060831 DW17   AND ADJUST FOR ROUNDING IF LESS THAN .06
* SAG-AB 20060919 Changed move of id-number to move edited so leading zero is written
* DRW   01/09/2007 DW18 CHG GROWTH RATE & OTHER RSV RATES (CROOKS)
* DRW   03/16/2007 DW19 Chges to ATHIS?MN for ACVB Int Calc
* DRW   04/30/2007 DW20 ADD ALP 9 E&E message
* DRW   12/10/2007 DW21 If Mip(6) & Pad-Code of V etc go ahead and process Loan Pmt
* YAK   12/05/2007 YK1  Remove hardcording for interest rates
*                       (Read GEN-TABLE through OBJNGENT)
* DRW   01/29/2008 DW22 ADD ALP L E&E message
* YAK   02/05/2008 YK2  Change code to use FUNCTION-INT-RATE
*                         to get rate from GEN-TABLE
* DRW  02/20/2008  DW23 Do a WRITE when Loan Amount is reset & other Write chges
* DRW  02/27/2008  DW24 Fix reset od #m-e-loan-amt etc
* DRW  02/28/2008  DW25 Create Sungard trans for CAP loan write-offs
* DRW  04/09/2008  DW26 Chg WOFF to LWOF
* PAM  05/05/2008  PM27 Use loan payment indicator only when determining
*                       loan overpayments.
* DRW 05/08/2008   DW28 Stop putting 12.00 into Fixed int Rate on Pay-off
* DRW 06/25/2008   DW29 Replace CVIN/UPDI with CVIF/V and UPDF/V for Loan Int
* DRW 07/01/2008   DW30 Chg check for Iss date on new CAP loans
* DRW 07/03/2008   DW31 Reset Loan Prin when < .05 is ignored on Capitalization
* DRW 07/21/2008   DW32 Chg Svc-Fee Rates (ATHISWRK)
* DRW 08/12/2008   DW33 Do not Capitalize if negative Acc-Int and modify < .06
*                       bypass Capitalization logic
* DRW 08/21/2008   DW34 Gen Plus Processing
* PAM 09/18/2008   PM35 Allow CAP loans to capitalize or charge partial month
*                       interest in first month
* DRW 11/03/2008   DW36 Fix newly started EZ-PAY alp processing on loan Final Pmt
* DRW 03/31/2009   DW37 Fix Exceeding 999.99 on VA Hist Premwhen AVC ADJ is negetive
* PAM 05/13/2009   PM38 Look for existing CAP policies with loan paid-off
* DRW 05/29/2009   DW39 Modify Errors and Exceptions Report
* DRW 07/23/2009   DW40 Chg Svc-Fee Rates for 7/1/2009 (ATHISWRK)
* RSE 09/17/2009   RE1  Change PROCESS-IND logic
* PAM 07/21/2010   PM41 Added 3SR service-fee processing
* PAM 07/28/2011   PM23 Added PUAP processing for minimum cash value
* vxt 10/19/2011   vt1  Added logic to mark Cap policy for UPDF transaction.
* vxt 04/27/2012   vt2  Chg LWOF* to SAWO*
* YAK 10/09/2012   YK3  Use function to identify Level Term II plans
* YAK 11/08/2012   YK4  Add No Medical Term plan (EZ)
* vxt 12/12/2012   vt3  Created separate report /ticket 1670/
* YAK 02/13/2012   YK5  Add special processing for EZ term - deduct $1 from premium
*                       for EZ Pay and Allotment
* NGG 20131121     NG1  Changes for 1M$ project COI and Premium
* NGG 20131217     NG2  Changes gor GP2 ACV calculations
* YAK 20140113     YK6  Add GP2 plan
* YAK 20140225     YK7  Do not use Rider balance field
* NGG 20140613     NG3  Contact Normalization  - DOB and Sex
* vxt 20140924     vt4  /Ticket3031/ - APL interest for GPL should be 5.00%.
* NGG 20141023     NG4  Annuity life products    
*******************************************************************************
*        SUBPROGRAM TO DO ALL MONTH END PROCESSING.
* ***************************************************************
*                                                               *
*          W O R K I N G - S T O R A G E   S E C T I O N        *
*                                                               *
*****************************************************************
* Converted to Natural by SAGUK ( UKALI ) on 07/09/05
* ---------------------------------------------------
* Notes:
*  SAG 12/23/2005 AB Adjusted VA History parameters to match changes
*                 made 09/20/2005 under tag DW6 in ATHP05P0
*
********************************************************************************
DEFINE DATA
GLOBAL USING ATHG05P0
**
LOCAL USING ATHISMTA
LOCAL USING ATHISMTB
LOCAL USING ATHISMTC
LOCAL USING ATHISMTD
LOCAL USING ATHISMTE
LOCAL USING ATHISMTF
LOCAL USING ATHISMTG
LOCAL USING ATHISMTH
LOCAL USING ATHISMTI
LOCAL USING ATHISMTJ
LOCAL USING ATHISMTK
LOCAL USING ATHISMTL
LOCAL USING ATHISMTM
LOCAL USING ATHISMTN
LOCAL USING ATHISMTO
LOCAL USING ATHISMTP
LOCAL USING ATHISMTQ
LOCAL USING ATHISMTR
LOCAL USING ATHISMTS
LOCAL USING ATHISWRK
LOCAL USING ATHISPJW
LOCAL USING ATHYVHIS
LOCAL USING SVCA0001              /* PM41
**
LOCAL
*
* 1 GPL-V VIEW OF A-GPL-RATES                         /* DW34
*   2 ISSUE-AGE      (N2)            /* A descriptor
*   2 PLAN-RATES     (P7.2/120)
1 #GPL-CVS         (N5.2/120)
1 #GP2-CVS         (N5.2/120)
*
01 WRK-NAS-X                        (P3)
01 WRK-OWN-X                        (P3)
01 OWN-X                            (P3)
01 PRM-X                            (P3)
01 COI-X                            (P3)
01 INT-X                            (P3)
01 IH-HIST-X                        (P3)
01 IH-Y-HIST-X                      (P3)
* 01 DISP-CNT                         (P5)
* 01 ANNY-CNT                         (P9)
* 01 THIS-YEAR                        (P5)
* 01 LOAN-DAYS                        (P3)
* 01 LOAN-DAY                         (P3)
* 01 VA-RUN-DATE                      (P6)
01 VA-RUN-DATE-WORK                 (P6)
01 VA-HIST-FND                      (A1) INIT <'Y'>
01 PP-POLS                          (A1) INIT <'N'>
01 PLUSS                            (A1)             /* SAG  12/23/2005 DW8
* 01 RETURN-SW                        (N2)
* 01 PRIOR-MONTH                      (N2)
* 01 FLTFAR-1-SW                      (N1)
01 V-40                             (A2) INIT <'40'>
01 V-42                             (A2) INIT <'42'>
01 V-44                             (A2) INIT <'44'>
01 D-4                              (N1) INIT <4>
* 01 FIRST-TIME-SW                    (N1)
* 01 SAVE-DEBIT-CREDIT                (N7.2)
01 DURATION-PN                         (P2)
* 01 PAY-UP-LOW                       (N8)
* 01 PAY-UP-HIGH                      (N8)
* 01 STOR-LN-AMT                      (P6.2)
* 01 PT-GT-PU-SW                      (A1)
* 01 WA-D-PD-TO                       (N4)
* 01 WA-D-PAYUP                       (N4)
01 NO-MON                           (P2)
01 NO-DAYS                          (P3)
* 01 MODE-MONEY-NEEDED                (P5.2)
* 01 MODE-MONEY-NEEDED-PREM           (P5.2)
* 01 APL-DUES                         (P9.2)
* 01 TOT-LOAN-VALUE                   (P7.2)
* 01 TOT-LOAN-VALUE-N                 (P7.2)
* 01 TOT-LOAN-INT                     (P11.2)
* 01 TOT-LOAN-INT-N                   (P11.2)
* 01 CSV-TO-USE                       (P11.2)
01 RUN-DATE-YEAR                    (P5)
01 WORK-MONTH                       (P2)
01 WORK-MONTH-LAST                  (P2)
01 WORK-YYYY                        (P4)
01 WORK-MONTH-IND                   (P2)
01 ONLINE-ETI-SW                    (A1) INIT <'N'>
01 NO-VA-UPDATE-SW                  (A1) INIT <'N'>
01 VA-ETI-NET-LOSS-PER-MONTH        (P5.2)
01 VA-ETI-MONTHS-TILL-EXPIRE        (P5)
01 HOLD-ETI-CREDIT                  (P7.2)
* 01 VA-NEW-OLD-ISSUES                (P7)
* 01 VA-NEW-NEW-ISSUES                (P7)
* 01 VA-NEW-CATCH-UP-MOS              (P7)
* 01 VA-REIN-MONTHIV                  (P7)
* 01 VA-MONTHIVERSARIES               (P7)
* 01 VA-ETI-MONTHIVERSARIES           (P7)
* 01 VA-ANNIVERSARIES                 (P7)
* 01 VA-OLD-ETIS                      (P7)
* 01 VA-NEW-ETIS                      (P7)
* 01 VA-APLS                          (P7)
* 01 VA-ONLINE-ETI                    (P7)
* 01 VA-AGE-96                        (P7)
* 01 NUM-ALP                          (P7)
* 01 NUM-AIP                          (P7)
* 01 ALT-LOAN-AMT                     (P5.2)
* 01 ALT-INT-AMT                      (P5.2)
* 01 AGE-96-YEAR-THIS-MO              (P4)
* 01 AGE-96-YEAR-LAST-MO              (P4)
* 01 AGE-96-MONTH-THIS-MO             (P2)
* 01 AGE-96-MONTH-LAST-MO             (P2)
01 W-MODE-PREMIUM-PN                (P5.2)
01 W-MODE                           (P3)
01 HLD-ACV-PREM-ADJ                 (P7.2)
01 HLD-ACV-INT-ADJ                  (P7.2)
01 HLD-ACV-COI-ADJ                  (P7.2)
01 L-REIN-CODE                      (A4)
01 L-IPR                            (A3)
01 L-NPR                            (A2)
01 L-NPR-OLD-TERM                   (N2)
* 01 I-NEW-ACTIVE-SEG                 (P3)
* 01 WK-5-5-PCT-YTD-COI-SUBSIDY       (P11.2)
* 01 WK-5-5-PCT-DEATH-BENEFIT         (P11.2)
* 01 WK-BEF-VA-DB                     (P11.2)
01 TOT-ALLOT                        (P5.2)
01 L-LN                             (A2)
01 L-SWITCHED-NAME                  (A25)
01 HOLD-MON-AMORT-ACQ               (P7.2)
01 AVL-TDIV                         (P7.2)
01 SVC-FEE-2P                       (P3.2) INIT <18.50>
01 SVC-FEE-3P                       (P3.2) INIT <12.50>
01 SVC-FEE-4P                       (P3.2) INIT <9.50>
01 SVC-FEE-5P                       (P3.2) INIT <7.50>
01 SVC-FEE-6P                       (P3.2) INIT <6.50>
01 SVC-FEE-7P                       (P3.2) INIT <6.00>
01 SVC-FEE-10                       (P3.2) INIT <4.50>
01 SVC-FEE-20                       (P3.2) INIT <3.00>
01 SVC-FEE-30                       (P3.2) INIT <2.50>
01 SVC-FEE-OL                       (P3.2) INIT <2.00>
01 SVC-FEE-TM                       (P3.2) INIT <2.00>
* 01 SVC-FEE                          (P3.2)
* 01 FIRST-ACTIVE                     (N3)
01 SUB-PN                           (N2)
01 RID-MON-PREM-PN                     (P3.2)
* 01 RID-AMT-DUE                      (P5.2)
01 LAST-MON-CSV                     (P7.2)
01 LAST-MON-MCV-AL                  (P7.2)
01 NEW-IND                          (A1)
01 SG-TRAN                          (A4)
01 SG-YEAR                          (A2)
01 SG-PLAN                          (A2)
01 SG-AMT                           (N6.2)
01 SG-X                             (N2)
01 SG-XIT                           (N2)
* 01 TOT-EZPAY-LOAN-OVERFLOW          (P7.2)
01 FIXED-INT-RESET                  (P5) INIT <0>   /* DW17-AB 20060831
01 VAR-INT-RESET                    (P5) INIT <0>   /* DW17-AB 20060831
1 #CAPITALIZE-AMT                (N5.2)                /* DW33
*
01 ETI-FUNCTION-TABLE
  02 F01                            (A34) INIT <'0173239984086130101831063470837231'>
  02 F02                            (A34) INIT <'0192978102081403402028550370791678'>
  02 F03                            (A34) INIT <'0212736974077016502226236350749383'>
  02 F04                            (A34) INIT <'0232514863072933202424104790709994'>
  02 F05                            (A34) INIT <'0252310312069134202622141950673354'>
  02 F06                            (A34) INIT <'0272121927065596402820333610639154'>
  02 F07                            (A34) INIT <'0291948373062292703018667870607230'>
  02 F08                            (A34) INIT <'0311788455059202603217132720577322'>
  02 F09                            (A34) INIT <'0331641084056307203415717630549247'>
  02 F10                            (A34) INIT <'0351505203053584003614412870522825'>
  02 F11                            (A34) INIT <'0371379932051021003813210560497999'>
  02 F12                            (A34) INIT <'0391264539048615504012103170474696'>
  02 F13                            (A34) INIT <'0411158304046361204211082010452679'>
  02 F14                            (A34) INIT <'0431059966044191904410135540431353'>
  02 F15                            (A34) INIT <'0450968890042096404609259040410743'>
  02 F16                            (A34) INIT <'0470884477040062604808445520390612'>
  02 F17                            (A34) INIT <'0490806079038069905007690240370903'>
  02 F18                            (A34) INIT <'0510733360036124505206988750351559'>
  02 F19                            (A34) INIT <'0530665553034187105406333890332215'>
  02 F20                            (A34) INIT <'0550602363032260805605724500313064'>
  02 F21                            (A34) INIT <'0570543386030335805805151890293537'>
  02 F22                            (A34) INIT <'0590487878028364706004614540273722'>
  02 F23                            (A34) INIT <'0610435921026379406204110130253627'>
  02 F24                            (A34) INIT <'0630386782024329506403632700232862'>
  02 F25                            (A34) INIT <'0650340510022238706603185310211923'>
  02 F26                            (A34) INIT <'0670296893020105606802757180189922'>
  02 F27                            (A34) INIT <'0690255111017863807002351540167308'>
  02 F28                            (A34) INIT <'0710215920015602607201973000144708'>
  02 F29                            (A34) INIT <'0730179394013347307401622910122437'>
  02 F30                            (A34) INIT <'0750146066011170007601307830101356'>
  02 F31                            (A34) INIT <'0770116187009118307801024070081332'>
  02 F32                            (A34) INIT <'0790089542007193008000776540063069'>
  02 F33                            (A34) INIT <'0810066777005481808200568200047119'>
  02 F34                            (A34) INIT <'0830047808004002908400397540033591'>
  02 F35                            (A34) INIT <'0850032649002783008600264620022747'>
  02 F36                            (A34) INIT <'0870021149001832908800166520014547'>
  02 F37                            (A34) INIT <'0890012900001135809000098170008711'>
  02 F38                            (A34) INIT <'0910007322000654809200053370004811'>
  02 F39                            (A34) INIT <'0930003786000344009400026000002382'>
  02 F40                            (A34) INIT <'0950001717000158709600010770001005'>
  02 F41                            (A34) INIT <'0970000625000059009800003100000296'>
  02 F42                            (A17) INIT <'09900001000000097'>
01 REDEFINE ETI-FUNCTION-TABLE
  02 ETI-FUNC-TABLE                 (83)
    03 ETI-FUNC-AGE                 (N3)
    03 ETI-FUNC-DX                  (N3.4)
    03 ETI-FUNC-MX                  (N3.4)
*
**01 TIN1-PN              Incorporated into Global 20060811 SAG-AB/PAM
**  02 TIN1-PN-SECT                      (A1) INIT <'B'>
**  02 TIN1-PN-ACCT                      (A3)
**  02 TIN1-PN-CN-NUMBER
**    03 TIN1-PN-CN                      (A2) INIT <'CN'>
**    03 TIN1-PN-ID                      (N6)
**    03 FILLER-4149                  (A1)
**  02 TIN1-PN-DATE                      (A6)
**  02 TIN1-PN-TRAN                      (A4)
**  02 TIN1-PN-COL                       (A1)
**  02 TIN1-PN-NAME                      (A25)
**  02 FILLER-4150                    (A1)
**  02 TIN1-PN-CERT                      (A5)
**  02 TIN1-PN-ACCTNO                    (A3)
**  02 TIN1-PN-LTRANDT                   (A6)
**  02 TIN1-PN-DEBIT                     (N7.2)
**  02 TIN1-PN-CREDIT                    (N7.2)
**  02 TIN1-PN-REF                       (A10)
**  02 TIN1-PN-DESC
**    03 TIN1-PN-DSC1                    (A3)
**    03 FILLER-4151                  (A1)
**    03 TIN1-PN-INTRT                   (N2.2) (EM=99.99)
**    03 FILLER-4152                  (A11)
**  02 REDEFINE TIN1-PN-DESC
**    03 TIN1-PN-DESC/ALPHA              (A19)
**  02 TIN1-PN-MSG                       (A1) INIT <'A'>
**  02 TIN1-PN-PROCESS-DATE              (A6)
**  02 FILLER-4153                    (A4)
**  02 TIN1-PN-AALP-CD                   (A1)
**  02 TIN1-PN-CLERK                     (A4) INIT <'AUTO'>
**  02 TIN1-PN-TRDATE                    (A6)
**  02 TIN1-PN-TRTIME                    (A6)
**  02 TIN1-PN-TERMINAL                  (A4)
**  02 FILLER-4154                    (A140)
**01 REDEFINE TIN1-PN
**  02 TIN1-PN-LOAN-REG-TOTAL
**    03 TIN1-PN-LR-SECT                 (A1)
**    03 TIN1-PN-LR-SEQ                  (A50)
**    03 TIN1-PN-LR-TOTALS               (A20)
**    03 TIN1-PN-5-5-PCT-YTD-COI-SUBSIDY (N11.2)
**    03 TIN1-PN-5-5-PCT-DEATH-BENEFIT   (N11.2)
**    03 TIN1-PN-BEF-VA-DB               (N11.2)
**    03 FILLER-4155                  (A173)
**01 REDEFINE TIN1-PN
**  02 TIN1-PN/ALPHA                     (A283)
*
* 01 LOAN-REG-TOTALS
*  02 TOT-MAX-LNS-TODAY              (P13.2)
*  02 TOT-MAX-LNS-NXT-YR             (P13.2)
*  02 TOT-MBS-ELIG-LNS               (P7)
* 01 REDEFINE LOAN-REG-TOTALS
*  02 LOAN-REG-TOTALS/ALPHA          (A20)
*
* 01 STOP-DATE-YYYYMMDD               (N8)
* 01 APL-DATE-YYYYMM                  (N6)
01 EMESS                            (A50)
*
01 REDEFINE EMESS
  02 FILLER-4156                    (A42)
  02 EMESS-LAST-8                   (N8)
*
01 ISS-DT-1-YEAR                    (N8)
01 REDEFINE ISS-DT-1-YEAR
  02 ISS-DT-1-YYYYMM                (N6)
  02 REDEFINE ISS-DT-1-YYYYMM
    03 ISS-DT-1-YYYY                (N4)
    03 ISS-DT-1-MM                  (N2)
  02 ISS-DT-1-DD                    (N2)
*
01 WORK-DATE-YYYYMMDD               (N8)
01 REDEFINE WORK-DATE-YYYYMMDD
  02 WORK-DATE-YYYYMM               (N6)
  02 REDEFINE WORK-DATE-YYYYMM
    03 WORK-DATE-YYYY               (N4)
    03 WORK-DATE-MM                 (N2)
    03 REDEFINE WORK-DATE-MM
      04 WORK-DATE-MM-NO-SIGN       (N2)
  02 WORK-DATE-DD                   (N2)
01 REDEFINE WORK-DATE-YYYYMMDD
  02 WORK-DATE-CT                   (N2)
  02 WORK-DATE-YY                   (N2)
  02 WORK-DATE-MMDD                 (N4)
*
**01 WORK-DATE-MMDDYY                 (N6)      /* SAG-AB 20060822
01 WORK-DATE-MMDDYY                 (A6)        /* SAG-AB 20060822
01 REDEFINE WORK-DATE-MMDDYY
  02 WD-MM                          (N2)
  02 WD-DD                          (N2)
  02 WD-YY                          (N2)
*
01 ETI-MSG-1
  02 FILLER-4157                    (A11) INIT <'ETI - PREM='>
  02 ETI-PRM                        (N0.2) (EM=.99)
  02 FILLER-4158                    (A8) INIT <'/LN+INT='>
  02 ETI-IND                        (N5.2) (EM=$$,$$$.99)
  02 FILLER-4159                    (A5) INIT <'/CSV='>
  02 ETI-CSV                        (N5.2) (EM=$$,$$$.99)
*
01 ETI-MSG-2
  02 FILLER-4160                    (A7) INIT <' LN-DT='>
  02 ETI-LN-MM                      (N2)
  02 FILLER-4161                    (A1) INIT <'-'>
  02 ETI-LN-DD                      (N2)
  02 FILLER-4162                    (A1) INIT <'-'>
  02 ETI-LN-YY                      (N2)
  02 FILLER-4163                    (A4) INIT <'/PR='>
  02 ETI-PRIN                       (N5.2) (EM=$$,$$$.99)
  02 FILLER-4164                    (A4) INIT <'/IN='>
  02 ETI-INT                        (N0.2) (EM=.99)
  02 FILLER-4165                    (A5) INIT <'/RTE='>
  02 ETI-INT-RT                     (N2.3) (EM=ZZ.999)
*
01 OVERLOAN-WITH-INT-MSG
  02 FILLER-OVR                     (A40) INIT <'~# LOAN + ACC INT EXCEEDS CASH VALUE BY '>
  02 OVR-LN-DOL-WITH-INT            (N5.2) (EM=$$,$$$.99)
*
01 OVERLOAN-WITH-INT-MSG-N
  02 FILLER-OVRL                    (A40) INIT <'~# NON-MBR LOAN + ACC INT EXCEEDS CV BY '>
  02 OVR-LN-DOL-WITH-INT-N          (N5.2) (EM=$$,$$$.99)
*
01 TA-ISS-X                         (N3)
01 TA-ATT-X                         (N3)
01 TA-PUP-X                         (N3)
01 TA-ATT-10-X                      (N3)
01 TB-ISS-X                         (N3)
01 TB-ATT-X                         (N3)
01 TB-PUP-X                         (N3)
01 TC-ISS-X                         (N3)
01 TC-ATT-X                         (N3)
01 TC-PUP-X                         (N3)
01 TD-SMOK-X                        (N1)
01 TD-ISS-X                         (N3)
01 TD-ATT-X                         (N3)
01 TE-ISS-X                         (N3)
01 TE-ATT-X                         (N3)
01 TE-PUP-X                         (N3)
01 TF-ISS-X                         (N3)
01 TF-ATT-X                         (N3)
01 TF-PUP-X                         (N3)
01 TG-ISS-X                         (N3)
01 TG-ATT-X                         (N3)
01 TG-PUP-X                         (N3)
01 TH-ISS-X                         (N3)
01 TH-ATT-X                         (N3)
01 TH-PUP-X                         (N3)
01 TI-ATT-X                         (N3)
01 TJ-ISS-X                         (N3)
01 TJ-ATT-X                         (N3)
01 TJ-PUP-X                         (N3)
01 TK-ISS-X                         (N3)
01 TK-ATT-X                         (N3)
01 TK-PUP-X                         (N3)
01 TL-ATT-X                         (N3)
01 TM-ATT-X                         (N3)
01 TN-ATT-X                         (N3)
01 TO-ATT-X                         (N3)
01 TP-ATT-X                         (N3)
01 TQ-ATT-X                         (N3)
01 TR-ATT-X                         (N3)
01 SP-AL-X                          (N2)
01 PIR-X                            (N2)
01 LIR-X                            (N2)
01 EPR-X                            (N1)
01 ISH-X                            (N2)
01 HLD-ISH-X                        (N2)
01 HLD-ISH-Y-X                      (N2)    /* SAG  12/23/2005 DW8
01 OO-COI-X                         (N1)
01 F-LOAN-X                         (N1)
01 V-LOAN-X                         (N1)
01 #WORK-VALUE                      (P10)
01 ESC-TOP                          (L)
01 #TIMES                           (N3)
01 #AUTO-APL-LOOP-IND               (L) INIT <FALSE>
**01 #CHECK-FOR-LOAN                  (L) INIT <FALSE> /* IN GLOBAL
01 #PROCESS-VARIABLE-ALP            (L) INIT <FALSE>
01 #PROCESS-ALP                     (L) INIT <FALSE>
01 #CHECK-INTEREST                  (L) INIT <FALSE>
01 #CHECK-INTEREST-2                (L) INIT <FALSE>
01 #CHECK-LOAN-CASH-EXIT            (L) INIT <FALSE>
01 #ONEK                            (P7) INIT <1000>  /* SAG-AB 20060313
01 #ONEC                            (P7) INIT <100>   /* SAG-AB 20060711
01 #DUMMY                           (P7)              /* SAG-AB 20060313
01 #REMAIN                          (P11.7)           /* SAG-AB 20060313
01 #DOT-995                         (F8) INIT <0.995> /* SAG-AB 20060403 mort rate calc
01 #ONE-DOT-03                      (F8) INIT <1.03>  /* SAG-AB 20060406 precision
01 #ONE-DOT-05                      (F8) INIT <1.05>  /* SAG-AB 20060406 precision
1 #COUNT                            (N7)
*
1 #CAP-X                            (I2)              /* PM38
1 #CAP-FOUND                        (L)               /* PM38
*
1 V_CN                              (N6)              /* PM23
1 V_AGE                             (N3)              /* PM23
1 V_CALC                            (N11.3)           /* PM23
1 L-SEG-NO                          (I2)              /* PM23
*
1 #tab                               (a1) init<H'09'>              /* vt3  \/
1 #out-file-11                        (a80)
1 #is-work-prem                      (n7.2)
1 #is-work-prem-a                    (a11)
1 #is-interest                       (n7.2)
1 #is-COI                            (n7.2)
1 #is-COI-a                          (a11)                          /* vt3 /\
1 #EZ-TERM                           (A3) CONST <'EZ'>              /* YK5
1 OBSOLETE-STATUS-FIELDS                         /* NG3  \/
  2 DATE-OF-BIRTH     (N8)
  2 REDEFINE DATE-OF-BIRTH
    3 DOB-YYYY (N4.0)
    3 REDEFINE DOB-YYYY
      4 DOB-CENT (N2.0)
      4 DOB-YY (N2.0)
    3 DOB-MMDD (N4.0)
    3 REDEFINE DOB-MMDD
      4 DOB-MM (N2.0)
      4 DOB-DD (N2.0)
*
1 #cur-fix-gpl-int-rt     (n2.2) init <5.00>       /* vt4
*
END-DEFINE
********************************************************************************
*
* write 'top of ATHP05PN' id-number
* MOVE ALL H'00' TO REINSTATE-COMPLETE-SW            /* SAG 12092005 RH1 SS
* MOVE ALL H'00' TO NO-MORE-COI-SUBSIDY-SW           /* SAG 12092005 RH1 SS
*
CUR-VAR-INT-RT := FUNCTION-INT-RATE(<'RATE5AB'>)                   /* YK2
IS-CURR-RT     := FUNCTION-INT-RATE(<'RATE2AA'>) / 100             /* YK2
IS-ACQ-LOAN-INT-RT := IS-TDIV-A-INT-RT := IS-TDIV-B-INT-RT := IS-CURR-RT    /* YK2
*
V_CN := ID-NUMBER                                                  /* PM23
DATE-OF-BIRTH := GET-DATE-OF-BIRTH (< STATUS-VIEW.MEMBER-CONTACT-ID >) /* NG3
*
RESET REINSTATE-COMPLETE-SW NO-MORE-COI-SUBSIDY-SW   /* SAG 12092005 RH1 SS
**
IF P05PN.FIRST-TIME-SW = 1
  IGNORE
ELSE
  MOVE 1 TO P05PN.FIRST-TIME-SW
  COMPUTE PRIOR-MONTH = #C-RUN-DT-MM - 1
  IF PRIOR-MONTH = 0
    MOVE 12 TO PRIOR-MONTH
  END-IF
**
****  CALC-THIS-YEAR.
  MOVE #C-RUN-DT-MM TO WD-MM
  MOVE #C-RUN-DT-DD TO WD-DD
  MOVE #C-RUN-DT-YY TO WD-YY
  MOVE WORK-DATE-MMDDYY TO TIN1-PN-TRDATE TIN1-PN-DATE TIN1-PN-PROCESS-DATE
**
****  CALCULATE  A P L DATE
  MOVE #C-RUN-DT-YYYYMMDD TO WORK-DATE-YYYYMMDD
  SUBTRACT +03 FROM WORK-DATE-MM
  IF WORK-DATE-MM < 01
    ADD 12 TO WORK-DATE-MM
    SUBTRACT +01 FROM WORK-DATE-YYYY
  END-IF
  MOVE WORK-DATE-YYYYMM TO APL-DATE-YYYYMM
**
****  CALCULATE  S T O P   D A T E
  MOVE #C-RUN-DT-YYYYMMDD TO WORK-DATE-YYYYMMDD
  SUBTRACT +01 FROM WORK-DATE-MM
  IF WORK-DATE-MM < 01
    ADD 12 TO WORK-DATE-MM
    SUBTRACT +01 FROM WORK-DATE-YYYY
  END-IF
  MOVE WORK-DATE-MM TO WORK-DATE-MM-NO-SIGN
  MOVE WORK-DATE-YYYYMMDD TO STOP-DATE-YYYYMMDD
**
****  CALCULATE  L O A N   D A Y S
  IF PRIOR-MONTH = 02
    MOVE 28 TO P05PN.LOAN-DAYS
  ELSE
    IF PRIOR-MONTH = 04 OR = 06 OR = 09 OR = 11
      MOVE 30 TO P05PN.LOAN-DAYS
    ELSE
      MOVE 31 TO P05PN.LOAN-DAYS
    END-IF
  END-IF
  MOVE #C-RUN-DT-YYYY TO THIS-YEAR
  IF #C-RUN-DT-MM = 1
    SUBTRACT 1 FROM THIS-YEAR
  END-IF
  MOVE THIS-YEAR TO IS-DATE-YYYY
  MOVE #C-RUN-DT-MM TO IS-DATE-MM
  SUBTRACT 01 FROM IS-DATE-MM
  IF IS-DATE-MM = 00
    MOVE 12 TO IS-DATE-MM
  END-IF
  MOVE IS-DATE-YYYYMM TO VA-RUN-DATE
  COMPUTE AGE-96-YEAR-THIS-MO = #C-RUN-DT-YYYY - 96
  MOVE AGE-96-YEAR-THIS-MO TO AGE-96-YEAR-LAST-MO
  MOVE #C-RUN-DT-MM TO AGE-96-MONTH-THIS-MO
  MOVE PRIOR-MONTH TO AGE-96-MONTH-LAST-MO
  IF PRIOR-MONTH = 12
    SUBTRACT 1 FROM AGE-96-YEAR-LAST-MO
  END-IF
**
*****COMPUTE AGE 96 DATES
  COMPUTE AGE-96-LOW = #C-RUN-DT-YYYYMMDD - 960000
  MOVE AGE-96-LOW TO AGE-96-HIGH
  ADD 2 TO AGE-96-HIGH-MM
  IF AGE-96-HIGH-MM > 12
    SUBTRACT 12 FROM AGE-96-HIGH-MM
    ADD 1 TO AGE-96-HIGH-YYYY
  END-IF
**
END-IF
**
GOTO-C-F-L-XIT.
REPEAT
*
  CHECK-FOR-LOAN-EXIT-2.
  REPEAT
*
    GOTO-INCREASE-ACCUM-INTEREST-2.
    REPEAT
*
      GOTO-FLTFAR-1-2.
      REPEAT
*
        CHECK-FOR-LOAN-EXIT.
        REPEAT
*
          GOTO-INCREASE-ACCUM-INTEREST.
          REPEAT
*
            GOTO-FLTFAR-1.
            REPEAT
*
              DOITTOIT.
              REPEAT
*
                MOVE 1 TO EPR-X
                SUBTRACT 1 FROM EPR-X
                IF #C-INCOMING-FLAG = 1 AND RETURN-SW = 65
                  RESET TIN1-PN
                  MOVE 'B' TO TIN1-PN-SECT
                  MOVE 'CN' TO TIN1-PN-CN
                  MOVE 999999 TO TIN1-PN-ID
                  MOVE #C-RUN-DT-MM TO WD-MM
                  MOVE #C-RUN-DT-DD TO WD-DD
                  MOVE #C-RUN-DT-YY TO WD-YY
                  MOVE WORK-DATE-MMDDYY TO TIN1-PN-DATE
                  MOVE 'EDS' TO TIN1-PN-CLERK
                  MOVE 'APDU' TO TIN1-PN-TRAN
                  MOVE 999 TO TIN1-PN-ACCTNO
                  RESET TIN1-PN-CREDIT
                  MOVE APL-DUES TO TIN1-PN-DEBIT
                  MOVE 'A' TO TIN1-PN-MSG
                  PERFORM END-WITH-WRITE
                END-IF
**
                IF #C-INCOMING-FLAG = 1
                  WRITE VA-NEW-NEW-ISSUES ' VA-NEW-NEW-ISSUES'
                  WRITE VA-NEW-OLD-ISSUES ' VA-NEW-OLD-ISSUES'
                  WRITE VA-NEW-CATCH-UP-MOS ' VA-NEW-MONTHS-TO-CATCH-UP'
                  WRITE VA-MONTHIVERSARIES ' VA-MONTHIVERSARIES'
                  WRITE VA-ETI-MONTHIVERSARIES ' VA-ETI-MONTHIVERSARIES'
                  WRITE VA-ANNIVERSARIES ' VA-ANNIVERSARIES'
                  WRITE VA-OLD-ETIS ' VA-OLD-ETIS'
                  WRITE VA-NEW-ETIS ' VA-NEW-ETIS'
                  WRITE VA-APLS ' VA-APLS'
                  WRITE VA-ONLINE-ETI ' VA-ONLINE-ETI'
                  WRITE VA-AGE-96 ' VA-AGE-96'
                  WRITE VA-REIN-MONTHIV ' VA-REIN-MONTHIVERSARIES'
                  WRITE NUM-ALP ' NUMBER ALP MEMBERS'
                  WRITE NUM-AIP ' NUMBER AIP MEMBERS'
                  WRITE ALLOT-LOAN-OVERFLOW ' ALLOT LOAN OVERFLOW'
                  WRITE TOT-EZPAY-LOAN-OVERFLOW ' EZPAY LOAN OVERFLOW'
                  WRITE ALP-EZPAY-PRIN ' EZPAY ALP PRINCIPAL'
                  WRITE ALP-ALOT-PRIN ' ALOT ALP PRINCIPAL'
                  WRITE ALP-EZPAY-INT ' EZPAY ALP INTREST'
                  WRITE ALP-ALOT-INT ' ALOT ALP INTEREST'
                  WRITE FIXED-INT-RESET  ' FIXED ACC INT RESETS'    /* DW17-AB 20060831
                  WRITE VAR-INT-RESET ' VARIABLE ACC INT RESETS'    /* DW17-AB 20060831
                  RESET TIN1-PN-LOAN-REG-TOTAL
                  MOVE 'J' TO TIN1-PN-LR-SECT
                  MOVE ALL H'FF' TO TIN1-PN-LR-SEQ
                  MOVE LOAN-REG-TOTALS/ALPHA TO TIN1-PN-LR-TOTALS
                  MOVE WK-5-5-PCT-YTD-COI-SUBSIDY TO TIN1-PN-5-5-PCT-YTD-COI-SUBSIDY
                  MOVE WK-5-5-PCT-DEATH-BENEFIT TO TIN1-PN-5-5-PCT-DEATH-BENEFIT
                  MOVE WK-BEF-VA-DB TO TIN1-PN-BEF-VA-DB
                  MOVE 65 TO RETURN-SW
                  PERFORM END-WITH-MORE-WRITE
                END-IF
**
                IF FLTFAR-1-SW = 1
                  ESCAPE BOTTOM (GOTO-FLTFAR-1.)
                END-IF
                IF FLTFAR-1-SW = 2
                  ESCAPE BOTTOM (CHECK-FOR-LOAN-EXIT.)
                END-IF
                IF FLTFAR-1-SW = 3
                  ESCAPE BOTTOM (GOTO-FLTFAR-1-2.)
                END-IF
                IF FLTFAR-1-SW = 4
                  ESCAPE BOTTOM (CHECK-FOR-LOAN-EXIT-2.)
                END-IF
**
                IF RETURN-SW = 2
                  PERFORM AUTO-APL-2
                END-IF
                IF RETURN-SW = 3
                  PERFORM AUTO-APL-3
                END-IF
                IF RETURN-SW = 4
                  PERFORM AUTO-APL-4
                END-IF
                IF RETURN-SW = 5
                  MOVE TRUE TO #AUTO-APL-LOOP-IND
                END-IF
                IF RETURN-SW = 61
                  MOVE TRUE TO #PROCESS-ALP
                  MOVE TRUE TO #CHECK-INTEREST
                  ESCAPE BOTTOM (GOTO-C-F-L-XIT.)
                END-IF
                IF RETURN-SW = 62
                  MOVE TRUE TO #PROCESS-ALP
                  MOVE TRUE TO #PROCESS-VARIABLE-ALP
                  ESCAPE BOTTOM (GOTO-C-F-L-XIT.)
                END-IF
                IF RETURN-SW = 63
                  MOVE TRUE TO #PROCESS-ALP
                  MOVE TRUE TO #PROCESS-VARIABLE-ALP
                  MOVE TRUE TO #CHECK-INTEREST-2
                  ESCAPE BOTTOM (GOTO-C-F-L-XIT.)
                END-IF
                IF RETURN-SW = 64
                  MOVE TRUE TO #PROCESS-ALP
                  ESCAPE BOTTOM (GOTO-C-F-L-XIT.)
                END-IF
                ESCAPE BOTTOM
              END-REPEAT /* (DOITTOIT.)
**
*****************************************************************
*                                                               *
*              C H E C K   F O R   A G E   9 6                  *
*                                                               *
*****************************************************************
**  CHECK-FOR-AGE-96.
              IF #LOANS-DONE
                ESCAPE BOTTOM (GOTO-C-F-L-XIT.)  /* proceed to next part
              END-IF
              IF #CHECK-FOR-LOAN
                IGNORE
              ELSE
                ADD 1 TO DISP-CNT
                IF DISP-CNT > 3000
                  RESET DISP-CNT
                  WRITE 'PROGRESS DISPLAY - ' NAME
                END-IF
*****************************************************************
*                                                               *
*              S E T U P - A C T I V E - S E G S                *
*                                                               *
*****************************************************************
**    SETUP-ACTIVE-SEGS.
                RESET FIRST-ACTIVE-PN
                FOR SUB-PN = 1 TO 9
                  PERFORM FIND-FST-ACTIVE
                END-FOR
*
                RESET NAS-X P05PN.I-NEW-ACTIVE-SEG
                RESET #M-E-LOAN-AMT(*)  #M-E-ACCUM-INT(*)      /* DW24
                  #M-E-LOAN-AMT-2(*)  #M-E-ACCUM-INT-2(*) /* WAS below
*
                SETUP-ACTIVE-SEGS-LOOP.
*
                REPEAT
                  ADD 1 TO NAS-X
                  IF NAS-X GT 9     /* SAG-AB 20060314 split test in 2 parts
                    ESCAPE BOTTOM   /* formerly GO TO CHECK-FOR-LOAN-SETUP
                  END-IF
                  IF STATUS(NAS-X) = ' '
                    ESCAPE BOTTOM   /* formerly GO TO CHECK-FOR-LOAN-SETUP
                  ELSE
                    ADD 1 TO P05PN.I-NEW-ACTIVE-SEG
*                    RESET                                        /* DW24
*                      #M-E-LOAN-AMT(NAS-X)    #M-E-ACCUM-INT(NAS-X)
*                      #M-E-LOAN-AMT-2(NAS-X)  #M-E-ACCUM-INT-2(NAS-X)
                  END-IF
                END-REPEAT
**
*****************************************************************
*                                                               *
*              C H E C K - F O R - L O A N                      *
*                                                               *
*****************************************************************
**        CHECK-FOR-LOAN-SETUP.
                MOVE TRUE TO #CHECK-FOR-LOAN  /* have started
                RESET NAS-X
              END-IF  /* if check-for-loan

**        CHECK-FOR-LOAN.
              ADD 1 TO NAS-X
              IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
                ESCAPE BOTTOM (GOTO-C-F-L-XIT.)
              END-IF
*

              IF X-LOAN-DATE(NAS-X) = 0 OR X-LOAN-AMOUNT(NAS-X) = 0
                  OR SUSPEND-CODE = '3'
                ESCAPE BOTTOM (CHECK-FOR-LOAN-EXIT.)
              END-IF
              RESET SAVE-DEBIT-CREDIT
              MOVE X-LOAN-DATE-DD(NAS-X) TO LOAN-DAY
              IF (X-LOAN-DATE-MM(NAS-X) NE PRIOR-MONTH)
*                 OR (CONV-DURATION (NAS-X) EQ 999)  /* SAG-AB 20060313  PM35
                ESCAPE BOTTOM (GOTO-INCREASE-ACCUM-INTEREST.)
              END-IF
**
**        LOAN-DUE-THIS-MONTH.
              IF X-LOAN-DATE-YYYY(NAS-X) NE THIS-YEAR

                MOVE X-LOAN-AMOUNT(NAS-X) TO STOR-LN-AMT

**              IF X-PRINCIPAL-CHG-CODE(NAS-X) = ' ' AND X-OLD-LOAN-AMT(NAS-X) = 0  /* DRW17-AB 20060831
**                WRITE ID-NUMBER ' WOULD HAVE CAPITALIZD USING INT-RCV'            /* DRW17-AB 20060831
**              COMPUTE ROUNDED X-LOAN-AMOUNT(NAS-X) = X-LOAN-AMOUNT(NAS-X) + /* DRW17 20060816
**                (X-LOAN-AMOUNT(NAS-X) * X-INTEREST-RATE (NAS-X) / 100)      /* DRW17 20060816
**                - X-INTEREST-RECEIVED(NAS-X)                                /* DRW17 20060816
**              END-IF                               /* DRW17-AB 20060831
*
                if (x-interest-rate(nas-x) = 0) and (plan(nas-x) = 'GPL')     /* vt4 \/
                    and (conv-duration(nas-x) ne 999)
                  move #cur-fix-gpl-int-rt to x-interest-rate(nas-x)
                end-if                                                  /* vt4 /\
*

                COMPUTE #CAPITALIZE-AMT =                         /* DW33
                  X-ACCUM-INTEREST(NAS-X) + (X-LOAN-AMOUNT(NAS-X) *
                  X-INTEREST-RATE(NAS-X) / 36500   * (LOAN-DAY - 1))
*
                IF #CAPITALIZE-AMT LT 0  /* Do not Capitalize if negetive
                  WRITE ID-NUMBER 'Bypassed Negative capitalization'
                    #CAPITALIZE-AMT
                  ADD #CAPITALIZE-AMT TO X-NXT-YR-ACCUM-INT(NAS-X) /* put in nxt year
                  MOVE X-LOAN-AMOUNT(NAS-X) TO STOR-LN-AMT
                ELSE                                              /* END DW33
**                IF X-PRINCIPAL-CHG-CODE(NAS-X) NE ' '                         /* DRW17 20060816
                  COMPUTE ROUNDED X-LOAN-AMOUNT(NAS-X) = X-LOAN-AMOUNT(NAS-X) +
                    X-ACCUM-INTEREST(NAS-X) + (X-LOAN-AMOUNT(NAS-X) *
                    X-INTEREST-RATE(NAS-X) / 36500   * (LOAN-DAY - 1))          /* DRW17 20060816
**                END-IF

**                IF X-PRINCIPAL-CHG-CODE(NAS-X) = ' ' AND X-OLD-LOAN-AMT(NAS-X) NE 0 /* DRW17-AB 20060831
**                  WRITE ID-NUMBER ' WOULD HAVE CAPITALIZD USING INT-RCV OL'         /* DRW17-AB 20060831
**                  COMPUTE ROUNDED X-LOAN-AMOUNT(NAS-X) = X-LOAN-AMOUNT(NAS-X) +  /* DRW17 20060816
**                      (X-OLD-LOAN-AMT(NAS-X) * X-INTEREST-RATE(NAS-X) / 100) -   /* DRW17 20060816
**                      X-INTEREST-RECEIVED(NAS-X)                                 /* DRW17 20060816
**                END-IF     /* DRW17-AB 20060831
                END-IF
*
                COMPUTE SAVE-DEBIT-CREDIT = X-LOAN-AMOUNT(NAS-X) - STOR-LN-AMT
**
**              IF SAVE-DEBIT-CREDIT LT +0                        /* DRW17-AB 20060831
**                WRITE ID-NUMBER ' FIXED PRIN CAPITALIZED LOWER' /* DRW17-AB 20060831
**              END-IF                                            /* DRW17-AB 20060831

                IF      (SAVE-DEBIT-CREDIT GT -.06)
                    AND (SAVE-DEBIT-CREDIT LT +.06)
                    AND (SAVE-DEBIT-CREDIT NE 0)                /* DW33
                    AND (X-INTEREST-RECEIVED (NAS-X) EQ X-BILL-INTEREST-AMT (NAS-X))
                  WRITE ID-NUMBER ' FIXED CAP AMT RESET TO ZERO'  /* DRW17-AB 20060831
                  ADD 1 TO FIXED-INT-RESET                        /* DRW17-AB 20060831
                  SUBTRACT SAVE-DEBIT-CREDIT FROM X-ACCUM-INTEREST (NAS-X)
                  SUBTRACT SAVE-DEBIT-CREDIT FROM X-LOAN-AMOUNT (NAS-X) /* DW31
                  MOVE +0 TO SAVE-DEBIT-CREDIT
                END-IF                                           /* DRW17 20060816 END

                IF SAVE-DEBIT-CREDIT > 0
                  MOVE NAS-X TO F-LOAN-X
                  MOVE SAVE-DEBIT-CREDIT TO #FIX-ADDL-LOAN(F-LOAN-X)
                  ADD SAVE-DEBIT-CREDIT TO X-CAP-AMT(NAS-X)
                END-IF

                RESET X-PRINCIPAL-CHG-CODE(NAS-X)

              END-IF
**
**       COMPUTE-ACCUM-INT.
              COMPUTE ROUNDED X-ACCUM-INTEREST(NAS-X) = (X-NXT-YR-ACCUM-INT(NAS-X) +
                (X-LOAN-AMOUNT(NAS-X) * X-INTEREST-RATE(NAS-X) / 36500 *
                (P05PN.LOAN-DAYS - LOAN-DAY + 1)))
              IF X-NXT-YR-ACCUM-INT(NAS-X) NE 0
                MOVE '1' TO X-PRINCIPAL-CHG-CODE(NAS-X)
              END-IF
              RESET X-NXT-YR-ACCUM-INT(NAS-X) X-OLD-LOAN-AMT(NAS-X)
              RESET X-INTEREST-RECEIVED(NAS-X) X-BILL-INTEREST-AMT(NAS-X) X-BILL-SW(NAS-X)
**
*****************************************************************
*     F O R M - L O A N - T R A N S - F O R - A C C T - R E G   *
*****************************************************************
**
              IF SAVE-DEBIT-CREDIT = 0
                ESCAPE BOTTOM (CHECK-FOR-LOAN-EXIT.)
              END-IF
              RESET TIN1-PN-REF
              MOVE NAME TO TIN1-PN-NAME
              MOVE ID-NUMBER TO TIN1-PN-ID
              MOVE SAVE-DEBIT-CREDIT TO TIN1-PN-CREDIT
              RESET TIN1-PN-DEBIT
              MOVE '410' TO TIN1-PN-ACCTNO
              MOVE DAU-MM TO WD-MM
              MOVE DAU-DD TO WD-DD
              MOVE DAU-YY TO WD-YY
              MOVE WORK-DATE-MMDDYY TO TIN1-PN-LTRANDT
              MOVE #C-RUN-DT-YYYYMMDD TO DATE-ACCT-UPDATE
              MOVE 'CVIF' TO TIN1-PN-TRAN  /* Was CVIN        DW29
              MOVE TIN1-PN-TRAN TO SG-TRAN
              MOVE '**' TO SG-YEAR SG-PLAN
              MOVE SAVE-DEBIT-CREDIT TO SG-AMT
              PERFORM SG-LOOP
              RESET TIN1-PN-ACCT TIN1-PN-COL
              MOVE ISSUE-DATE(NAS-X) TO TIN1-PN-DESC/ALPHA
              MOVE 1 TO FLTFAR-1-SW
              PERFORM END-WITH-MORE-WRITE
**
              ESCAPE BOTTOM (GOTO-FLTFAR-1.)
            END-REPEAT /* (GOTO-FLTFAR-1.)
** FLTFAR-1.
            MOVE 2 TO FLTFAR-1-SW
            RESET TIN1-PN-CREDIT
            MOVE SAVE-DEBIT-CREDIT TO TIN1-PN-DEBIT
            MOVE '110' TO TIN1-PN-ACCTNO
            MOVE 'UPDF' TO TIN1-PN-TRAN    /* Was UPDT        DW29
            MOVE TIN1-PN-TRAN TO SG-TRAN
**

            if (conv-duration (NAS-X) EQ 999)                        /* vt1 \/
              move 'CP' to sg-year
            else
              MOVE '**' TO sg-year
            end-if
            move '**' to sg-plan                                     /* vt1 /\
**
            COMPUTE SG-AMT = SAVE-DEBIT-CREDIT * -1
            PERFORM SG-LOOP
            PERFORM END-WITH-MORE-WRITE
**
            ESCAPE BOTTOM (GOTO-INCREASE-ACCUM-INTEREST.)
          END-REPEAT /* (GOTO-INCREASE-ACCUM-INTEREST.)

** INCREASE-ACCUM-INTEREST.
          IF      (X-LOAN-DATE(NAS-X) = #C-RUN-DT-YYYYMMDD)
*  AND (ISSUE-DATE(NAS-X)  = #C-RUN-DT-YYYYMMDD) /* removed 7/1/2008   DW30
            IGNORE
          ELSE
            COMPUTE ROUNDED X-ACCUM-INTEREST(NAS-X) = X-ACCUM-INTEREST(NAS-X) +
              (X-LOAN-AMOUNT(NAS-X) * X-INTEREST-RATE(NAS-X) / 36500 * P05PN.LOAN-DAYS)
          END-IF
          ESCAPE BOTTOM (CHECK-FOR-LOAN-EXIT.)
        END-REPEAT /* (CHECK-FOR-LOAN-EXIT.)
** CHECK-FOR-LOAN-EXIT.
        RESET FLTFAR-1-SW

** CHECK-FOR-LOAN-2
        IF X-LOAN-DATE-2(NAS-X)= 0 OR X-LOAN-AMOUNT-2(NAS-X) = 0 OR SUSPEND-CODE = '3'
          ESCAPE BOTTOM (CHECK-FOR-LOAN-EXIT-2.)
        END-IF
        RESET SAVE-DEBIT-CREDIT
        MOVE X-LOAN-DATE-DD-2(NAS-X) TO LOAN-DAY
        IF X-LOAN-DATE-MM-2(NAS-X) NE PRIOR-MONTH
          ESCAPE BOTTOM (GOTO-INCREASE-ACCUM-INTEREST-2.)
        END-IF

** LOAN-DUE-THIS-MONTH-2
        IF X-LOAN-DATE-YYYY-2(NAS-X) EQ THIS-YEAR
          IGNORE
        ELSE
          MOVE X-LOAN-AMOUNT-2(NAS-X) TO STOR-LN-AMT
*
          COMPUTE #CAPITALIZE-AMT =                         /* DW33
            X-ACCUM-INTEREST-2 (NAS-X) + (X-LOAN-AMOUNT-2 (NAS-X) *
            CUR-VAR-INT-RT / 36500 * (LOAN-DAY - 1))
*
          IF #CAPITALIZE-AMT LT 0  /* Do not Capitalize if negetive
            WRITE ID-NUMBER 'Bypassed Negative capitalization'
              #CAPITALIZE-AMT
            ADD #CAPITALIZE-AMT TO X-NXT-YR-ACCUM-INT-2(NAS-X) /* put in nxt year
            MOVE X-LOAN-AMOUNT-2 (NAS-X) TO STOR-LN-AMT
          ELSE                                              /* END DW33
            COMPUTE ROUNDED X-LOAN-AMOUNT-2(NAS-X) = X-LOAN-AMOUNT-2(NAS-X) +
              X-ACCUM-INTEREST-2(NAS-X) + (X-LOAN-AMOUNT-2(NAS-X) *
              CUR-VAR-INT-RT / 36500 * (LOAN-DAY - 1))
          END-IF
*
          COMPUTE SAVE-DEBIT-CREDIT = X-LOAN-AMOUNT-2(NAS-X) - STOR-LN-AMT
**
**        IF SAVE-DEBIT-CREDIT LT +0                       /* DRW17 20060816 START
**          WRITE ID-NUMBER ' VAR PRIN CAPITALIZED LOWER'  /* DRW17-AB 20060831
**        END-IF                                           /* DRW17-AB 20060831
**
          IF      (SAVE-DEBIT-CREDIT GT -.06)   /* Negative wil never happen now
              AND (SAVE-DEBIT-CREDIT LT +.06)
              AND (SAVE-DEBIT-CREDIT NE 0)                /* DW33
              AND (X-INTEREST-RECEIVED-2 (NAS-X) EQ  X-BILL-INTEREST-AMT-2 (NAS-X))
            WRITE ID-NUMBER ' VAR CAP AMT RESET TO ZERO' /* DRW17-AB 20060831
            ADD 1 TO VAR-INT-RESET                         /* DRW17-AB 20060831
            SUBTRACT SAVE-DEBIT-CREDIT FROM X-ACCUM-INTEREST-2 (NAS-X)
            SUBTRACT SAVE-DEBIT-CREDIT FROM X-LOAN-AMOUNT-2 (NAS-X) /* DW31
            MOVE +0 TO SAVE-DEBIT-CREDIT
          END-IF                                           /* DRW17 20060816 START
**
          IF SAVE-DEBIT-CREDIT > 0
            MOVE NAS-X TO V-LOAN-X
            MOVE SAVE-DEBIT-CREDIT TO #VAR-ADDL-LOAN(V-LOAN-X)
            ADD SAVE-DEBIT-CREDIT TO X-CAP-AMT-2(NAS-X)
          END-IF
        END-IF

** COMPUTE-ACCUM-INT-2
        COMPUTE ROUNDED X-ACCUM-INTEREST-2(NAS-X) = (X-NXT-YR-ACCUM-INT-2(NAS-X) +
          (X-LOAN-AMOUNT-2(NAS-X) * CUR-VAR-INT-RT / 36500 * (P05PN.LOAN-DAYS - LOAN-DAY + 1)))
        RESET X-NXT-YR-ACCUM-INT-2(NAS-X) X-OLD-LOAN-AMT-2(NAS-X)
          X-INTEREST-RECEIVED-2(NAS-X) X-BILL-INTEREST-AMT-2(NAS-X) X-BILL-SW-2(NAS-X)
**
*****************************************************************
*     F O R M - L O A N - T R A N S - F O R - A C C T - R E G   *
*****************************************************************
**
        IF SAVE-DEBIT-CREDIT = 0
          ESCAPE BOTTOM (CHECK-FOR-LOAN-EXIT-2.)
        END-IF
        RESET TIN1-PN-REF
        MOVE NAME TO TIN1-PN-NAME
        MOVE ID-NUMBER TO TIN1-PN-ID
        MOVE SAVE-DEBIT-CREDIT TO TIN1-PN-CREDIT
        RESET TIN1-PN-DEBIT
        MOVE '410' TO TIN1-PN-ACCTNO
        MOVE DAU-MM TO WD-MM
        MOVE DAU-DD TO WD-DD
        MOVE DAU-YY TO WD-YY
        MOVE WORK-DATE-MMDDYY TO TIN1-PN-LTRANDT
        MOVE #C-RUN-DT-YYYYMMDD TO DATE-ACCT-UPDATE
        MOVE 'CVIV' TO TIN1-PN-TRAN    /* Was CVIN        DW29
        MOVE TIN1-PN-TRAN TO SG-TRAN
        MOVE '**' TO SG-YEAR SG-PLAN
        MOVE SAVE-DEBIT-CREDIT TO SG-AMT
        PERFORM SG-LOOP
        RESET TIN1-PN-ACCT TIN1-PN-COL
        MOVE ISSUE-DATE(NAS-X) TO TIN1-PN-DESC/ALPHA
        MOVE 3 TO FLTFAR-1-SW
        PERFORM END-WITH-MORE-WRITE
**
        ESCAPE BOTTOM (GOTO-FLTFAR-1-2.)
      END-REPEAT /* (GOTO-FLTFAR-1-2.)
** FLTFAR-1-2.
      MOVE 4 TO FLTFAR-1-SW
      RESET TIN1-PN-CREDIT
      MOVE SAVE-DEBIT-CREDIT TO TIN1-PN-DEBIT
      MOVE '110' TO TIN1-PN-ACCTNO
      MOVE 'UPDV' TO TIN1-PN-TRAN   /* Was UPDT        DW29
      MOVE TIN1-PN-TRAN TO SG-TRAN
      MOVE '**' TO SG-YEAR SG-PLAN
      COMPUTE SG-AMT = SAVE-DEBIT-CREDIT * -1
      PERFORM SG-LOOP
      PERFORM END-WITH-MORE-WRITE
**
      ESCAPE BOTTOM (GOTO-INCREASE-ACCUM-INTEREST-2.)
    END-REPEAT /* (GOTO-INCREASE-ACCUM-INTEREST-2.)
** INCREASE-ACCUM-INTEREST-2.

    COMPUTE ROUNDED X-ACCUM-INTEREST-2(NAS-X) = X-ACCUM-INTEREST-2(NAS-X) +
      (X-LOAN-AMOUNT-2(NAS-X) * CUR-VAR-INT-RT / 36500 * P05PN.LOAN-DAYS)
**
    ESCAPE BOTTOM (CHECK-FOR-LOAN-EXIT-2.)
  END-REPEAT /* (CHECK-FOR-LOAN-EXIT-2.)
** CHECK-FOR-LOAN-EXIT-2.
  RESET FLTFAR-1-SW
END-REPEAT /* (GOTO-C-F-L-XIT.)
** C-F-L-XIT.
MOVE TRUE TO #LOANS-DONE         /* loans processing completed
*
**********************************************************
*        NEW POLICY PROCESSING
**********************************************************
IF #AUTO-APL-LOOP-IND OR #PROCESS-ALP
  IGNORE
ELSE
*   write 'ATHP05PN' id-number 'line 2056 top of new policy'
**
  RESET NAS-X
**
  GOTO-C-F-N-P-XIT.
  REPEAT
    CHECK-FOR-NEW-POLICY.
    REPEAT
      ADD 1 TO NAS-X
      IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
        ESCAPE BOTTOM (GOTO-C-F-N-P-XIT.)
      END-IF
      IF (STATUS(NAS-X) NE 'D' OR (PLAN(NAS-X) = 'SO' OR = 'FSO'))
          OR (NOT (ONLINE-ACTION(NAS-X) = '1' OR ONLINE-ACTION-GN = '2'))
        ESCAPE TOP
      END-IF
*     IF PLAN(NAS-X) = 'RT' OR PLAN(NAS-X) = 'LT' OR                /* YK3
*         ((PLAN-A1(NAS-X) GE 'U')   AND (PLAN-A1(NAS-X) LE 'Z'))   /* YK3
      IF FUNCTION-TERM-POLICY(<PLAN(NAS-X)>)                        /* YK3
        MOVE FACE-AMOUNT(NAS-X) TO DEATH-BENEFIT(NAS-X)
          NXT-MON-DEATH-BENEFIT(NAS-X)
        ESCAPE TOP
      END-IF
      MOVE ID-NUMBER TO IS-ID-NO
      IF ISSUE-DATE(NAS-X) GE 19970101 AND MONTH-ALLOC-AMT(NAS-X) NE 999.99
        MOVE 'Y' TO USE-X-CALCS
      ELSE
        MOVE 'N' TO USE-X-CALCS
      END-IF
*     write 'ATHP05PN' id-number 'line 2114 top of new policy nas-x=' nas-x
*
      PERFORM CHECK-FOR-ACV-ADJUSTMENT
      PERFORM INIT-VALUE-ADDED-PROCESS
      PERFORM BUILD-VA-HISTORY-REC
      PERFORM FIND-CURRENT-MONTH-IND
      IF CONVERSION-FLAG(NAS-X) = 'C'
        ADD 1 TO VA-NEW-OLD-ISSUES
      ELSE
        ADD 1 TO VA-NEW-NEW-ISSUES
      END-IF
*
* write id-number 'ln 2136 end of Initial process work-mnth-ind=' work-month-ind
*  'cur/nxt mcvs=' min-cash-value(nas-x) nxt-yr-min-cash-value(nas-x)
* 'cur/nxt csvs=' cash-value (nas-x)  nxt-mon-cash-value    (nas-x)
*
      IF WORK-MONTH-IND = 0
        ESCAPE TOP
      END-IF
      IF CONVERSION-FLAG(NAS-X) = 'C'
        MOVE IS-BEG-ACV TO IS-NXT-ACV
        MOVE IS-BEG-DB TO IS-EOM-DB
      ELSE
        MOVE IS-BEG-ACV TO IS-NXT-ACV
        MOVE IS-BEG-CSV TO IS-NXT-CSV
        MOVE IS-BEG-MCV-AL TO IS-NXT-MCV-AL
        MOVE IS-BEG-DB TO IS-EOM-DB
        IF USE-X-CALCS = 'Y'
          MOVE IS-INIT-ACQ TO IS-CURR-ACQ
          RESET IS-NXT-CONT-FUND
        END-IF
      END-IF
      PERFORM SETUP-AND-CALC-YEARLY-VAL
      ADD WORK-MONTH-IND TO VA-NEW-CATCH-UP-MOS
      SUBTRACT 1 FROM VA-NEW-CATCH-UP-MOS
      MOVE VA-RUN-DATE-WORK TO IS-DATE-YYYYMM
      ADD 1 TO IS-DATE-MM
      IF IS-DATE-MM > 12
        MOVE 1 TO IS-DATE-MM
        ADD 1 TO IS-DATE-YYYY
      END-IF
      MOVE IS-DATE-YYYYMM TO VA-RUN-DATE-WORK
      MOVE IS-MON-AMORT-ACQ TO HOLD-MON-AMORT-ACQ
      RESET LAST-MON-CSV    LAST-MON-MCV-AL
      MOVE 'N' TO IS-CALC-INT-SW
      FOR IS-MNTH-IND = 1 TO WORK-MONTH-IND
        PERFORM SETUP-AND-CALC-MNTHLY
      END-FOR
*
      MOVE 'Y' TO IS-CALC-INT-SW
      IF   (NXT-MON-CASH-VALUE(NAS-X) = 0)
          AND (PLAN (NAS-X) NE 'GPL')     /* DW34
          AND (PLAN (NAS-X) NE 'GP2')     /* YK6
        MOVE CASH-VALUE(NAS-X) TO NXT-MON-CASH-VALUE(NAS-X)
      END-IF
    END-REPEAT
*
    ESCAPE BOTTOM (GOTO-C-F-N-P-XIT.)
  END-REPEAT /* (GOTO-C-F-N-P-XIT.)
* C-F-N-P-XIT.
*
**********************************************************
*        REINSTATEMENT PROCESSING
**********************************************************
*
  RESET NAS-X
*
  CHECK-FOR-REINSTAT.
  REPEAT
    ADD 1 TO NAS-X
    IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
      ESCAPE BOTTOM
    END-IF
    IF STATUS(NAS-X) NE 'D' OR
        (PLAN(NAS-X) = 'SO' OR = 'FSO') OR
        ONLINE-ACTION(NAS-X) NE 'B'
      ESCAPE TOP
    END-IF
    IF ISSUE-DATE(NAS-X) GE 19970101 AND MONTH-ALLOC-AMT(NAS-X) NE 999.99
      MOVE 'Y' TO USE-X-CALCS
    ELSE
      MOVE 'N' TO USE-X-CALCS
    END-IF
    FOR ISH-X = 1 TO 20
      PERFORM FIND-HIST-REC
    END-FOR
**                                      DW16-AB 05022006 START
**                                      if logic was reworked in the Cobol
    IF VA-HIST-FND = 'N'
*     IF      (PLAN(NAS-X) NE 'RT')                                  /* YK3
*         AND (PLAN(NAS-X) NE 'LT')                                  /* YK3
*         AND ((PLAN-A1(NAS-X) LT 'U') OR (PLAN-A1(NAS-X) GT 'Z'))   /* YK3
      IF (NOT FUNCTION-TERM-POLICY(<PLAN(NAS-X)>))                   /* YK3
        MOVE MONTH-ALLOC-AMT(NAS-X) TO IS-ALLOC-CRED
        MOVE PREM-DEFICIENCY(NAS-X) TO IS-PREM-DEFIC
        MOVE NET-PR-RATIO(NAS-X) TO IS-NET-PREM-RATIO
        MOVE BEG-CASH-VALUE(NAS-X) TO IS-BEG-ACV
        RESET IS-BEG-CSV IS-BEG-DB
        IF USE-X-CALCS = 'Y'
          MOVE MONTH-ALLOC-AMT(NAS-X) TO IS-CURR-ACQ
          MOVE PREM-DEFICIENCY(NAS-X) TO IS-MON-AMORT-ACQ
          PERFORM BUILD-VA-HISTORY-REC
        ELSE
          PERFORM BUILD-VA-HISTORY-REC
        END-IF
      ELSE
        ESCAPE TOP
      END-IF
    END-IF
**                                      DW16-AB 05022006 END
    MOVE VA-RUN-DATE TO IH-TM-DATE
    MOVE 'REI' TO IH-TM-CODE
    RESET IH-ETI-DATE IH-ETI-ACCUM-CASH-VALUE IH-ETI-CASH-VALUE IH-ETI-DEATH-BENE
      IH-ETI-LOAN-VALUE
** SAG  12/23/2005 DW8 START
**    MOVE VA-HISTORY-RECORD TO ISH-RECORD (HLD-ISH-X)
    MOVE VA-MONTHLY-HIST-DATA-STR TO #ISH-MONTHLY-HIST-HDR-A (HLD-ISH-X)
    MOVE VA-MONTHLY-HIST-STR      TO #ISH-MONTHLY-HIST-A (HLD-ISH-X)
    MOVE VA-MONTHLY-HIST-B-STR    TO #ISH-MONTHLY-HIST-B-A (HLD-ISH-X)
    MOVE VA-YEARLY-HIST-STR       TO #ISH-YEARLY-HIST-A (HLD-ISH-X)
** SAG  12/23/2005 DW8 END
  END-REPEAT
*
********************************************
*     VALUE ADDED MONTHLY PROCESSING
********************************************
*
  RESET IS-FIRST-GF-POL NAS-X
*
  #SERVICES-CN        := ID-NUMBER           /* PM41
  #SERVICES-PARM-DATE := #C-RUN-DT-YYYYMMDD  /* PM41
  CALLNAT 'SVCN0001'                         /* PM41
    #PDA-AAFMAA-SERVICES                     /* PM41
*
  CHECK-FOR-MNTHLY.
  REPEAT
    ADD 1 TO NAS-X
    IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
      ESCAPE BOTTOM
    END-IF
*
    IF STATUS(NAS-X) NE 'D' OR
*       (PLAN(NAS-X) = 'RT' OR = 'LT' OR = 'SO' OR = 'FSO') OR      /* YK3
*       ((PLAN-A1(NAS-X) GE 'U') AND (PLAN-A1(NAS-X) LE 'Z'))       /* YK3
        (PLAN(NAS-X) = 'SO' OR = 'FSO') OR                          /* YK3
        FUNCTION-TERM-POLICY(<PLAN(NAS-X)>)                        /* YK3
      MOVE NAS-X TO PRM-X COI-X INT-X
      RESET MTD-ACV-PREM-ADJ(PRM-X) MTD-ACV-INT-ADJ(INT-X) MTD-ACV-COI-ADJ(COI-X)
      ESCAPE TOP
    END-IF
*
    IF ONLINE-ACTION(NAS-X) = '1' OR ONLINE-ACTION-GN = '2' OR
        (NOT (CONVERSION-FLAG(NAS-X) = 'N' OR CONVERSION-FLAG(NAS-X) = 'C'))
      ESCAPE TOP
    END-IF
    IF ISSUE-DATE(NAS-X) GE 19970101 AND MONTH-ALLOC-AMT(NAS-X) NE 999.99
      MOVE 'Y' TO USE-X-CALCS
    ELSE
      MOVE 'N' TO USE-X-CALCS
    END-IF
*
*  write id-number 'line 2338 top of monthly processing'
* 'cur/nxt mcvs=' min-cash-value(nas-x) nxt-yr-min-cash-value(nas-x)
* 'cur/lst csvs=' cash-value (nas-x)  nxt-mon-cash-value    (nas-x)
    MOVE MONTH-IND(NAS-X) TO IS-MNTH-IND
    ADD 1 TO IS-MNTH-IND
    MOVE VA-RUN-DATE TO VA-RUN-DATE-WORK
    MOVE CASH-VALUE(NAS-X) TO LAST-MON-CSV
    PERFORM CHECK-FOR-ACV-ADJUSTMENT
    MOVE ACC-CASH-VALUE(NAS-X) TO IS-NXT-ACV
    MOVE CASH-VALUE(NAS-X) TO IS-NXT-CSV
    MOVE DEATH-BENEFIT(NAS-X) TO IS-EOM-DB
    IF USE-X-CALCS = 'Y'
      MOVE MONTH-ALLOC-AMT(NAS-X) TO IS-CURR-ACQ
      MOVE PREM-DEFICIENCY(NAS-X) TO IS-MON-AMORT-ACQ
      MOVE BEG-CASH-VALUE(NAS-X) TO IS-NXT-CONT-FUND
    END-IF
*    IF PLAN(NAS-X) = 'AL'
    IF IS-ANNUITY-LIFE (< PLAN(NAS-X) >)  /* NG4
      MOVE MIN-CASH-VALUE(NAS-X) TO LAST-MON-MCV-AL IS-NXT-MCV-AL
    END-IF
    ADD 1 TO VA-MONTHIVERSARIES
    IF PAY-STATUS(NAS-X) = V-44
      ADD 1 TO VA-ETI-MONTHIVERSARIES
    END-IF
    IF ONLINE-ACTION(NAS-X) = 'B' OR = 'I'
      ADD 1 TO VA-REIN-MONTHIV
    END-IF
    PERFORM SETUP-AND-CALC-YEARLY-VAL
    MOVE #C-RUN-DT-MM TO WORK-MONTH
    MOVE #C-RUN-DT-YYYY TO WORK-YYYY
    SUBTRACT 1 FROM WORK-MONTH
    IF WORK-MONTH = 0
      MOVE 12 TO WORK-MONTH
      SUBTRACT 1 FROM WORK-YYYY
    END-IF
*
    IF PLAN (NAS-X) = 'GPL' OR = 'GP2'   /* To calc cash-value                /* DW34   YK6
      MOVE MIN-CASH-VALUE(NAS-X)        TO IS-MIN-CSV
      MOVE NXT-YR-MIN-CASH-VALUE(NAS-X) TO IS-NXT-YR-MIN-CSV
    END-IF
*
    PERFORM SETUP-AND-CALC-MNTHLY
*
*  write id-number 'line 2470 end of monthly processing nas=x=' nas-x
* 'cur/nxt mcvs=' min-cash-value(nas-x) nxt-yr-min-cash-value(nas-x)
* 'cur/lst csvs=' cash-value (nas-x)  nxt-mon-cash-value    (nas-x)
  END-REPEAT
*
*********************************************************
**   CHECK FOR POLICY ANNIVERSY
**     SLIDE CASH VALUE     BUMP DURATION
************************************************************
*
  RESET NAS-X
*   write id-number 'line 2460 top of check-duration'
*
  X15.
  REPEAT
    GOTO-CHECK-DURATION.
    REPEAT
      CHECK-FOR-ANNY.
      REPEAT
        ADD 1 TO NAS-X
        IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
          ESCAPE BOTTOM (X15.)
        END-IF
        IF STATUS(NAS-X) NE 'D' OR
*           (PLAN(NAS-X) = 'RT' OR = 'LT' OR = 'SO' OR = 'FSO') OR      /* YK3
*           (PLAN-A1(NAS-X) GE 'U' AND PLAN-A1(NAS-X) LE 'Z')           /* YK3
            (PLAN(NAS-X) = 'SO' OR = 'FSO') OR                          /* YK3
            FUNCTION-TERM-POLICY(<PLAN(NAS-X)>)                        /* YK3
          ESCAPE TOP
        END-IF
        MOVE ISSUE-DATE(NAS-X) TO WORK-DATE-YYYYMMDD
        IF ISSUE-DATE-MM(NAS-X) NE #C-RUN-DT-MM OR ISSUE-DATE-YYYY(NAS-X) = #C-RUN-DT-YYYY
          ESCAPE BOTTOM (GOTO-CHECK-DURATION.)
        END-IF
        ADD 1 TO LAST-DURATION(NAS-X)
        ESCAPE BOTTOM
      END-REPEAT
*
      ADD 1 TO ANNY-CNT
*
      ESCAPE BOTTOM (GOTO-CHECK-DURATION.)
    END-REPEAT /* (GOTO-CHECK-DURATION.)
*
* CHECK-DURATION.
    SUBTRACT ISSUE-DATE-YYYY(NAS-X) FROM #C-RUN-DT-YYYY GIVING DURATION-PN
    IF #C-RUN-DT-MM < WORK-DATE-MM
      SUBTRACT 1 FROM DURATION-PN
    END-IF
    IF DURATION-PN < 0 OR DURATION-PN = LAST-DURATION(NAS-X)
      ESCAPE TOP
    END-IF
    MOVE 'DURATION INCORRECT' TO EMESS
    PERFORM FORM-ERROR-MESSAGE
    ESCAPE BOTTOM
  END-REPEAT /* (X15.)
*
****************************************************
*   VALUE ADDED ANNIVERSARY PROCESSING
****************************************************
*
  RESET NAS-X
*
  CHECK-FOR-VA-ANNY.
  REPEAT
    ADD 1 TO NAS-X
    IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
      ESCAPE BOTTOM
    END-IF
    IF STATUS(NAS-X) NE 'D' OR
*       (PLAN(NAS-X) = 'RT' OR = 'LT' OR = 'SO' OR = 'FSO') OR     /* YK3
*       (PLAN-A1(NAS-X) GE 'U' AND PLAN-A1(NAS-X) LE 'Z')          /* YK3
        (PLAN(NAS-X) = 'SO' OR = 'FSO') OR                         /* YK3
        FUNCTION-TERM-POLICY(<PLAN(NAS-X)>)                       /* YK3
      ESCAPE TOP
    END-IF
    IF NOT (CONVERSION-FLAG(NAS-X) = 'N' OR CONVERSION-FLAG(NAS-X) = 'C')
      ESCAPE TOP
    END-IF
    IF ISSUE-DATE(NAS-X) GE 19970101 AND MONTH-ALLOC-AMT(NAS-X) NE 999.99
      MOVE 'Y' TO USE-X-CALCS
    ELSE
      MOVE 'N' TO USE-X-CALCS
    END-IF
    IF ISSUE-DATE-MM(NAS-X) NE #C-RUN-DT-MM OR ONLINE-ACTION(NAS-X) = '1'
        OR ONLINE-ACTION-GN = '2'
      ESCAPE TOP
    END-IF
    ADD 1 TO VA-ANNIVERSARIES
    PERFORM SETUP-AND-CALC-YEARLY-VAL
    PERFORM SETUP-AND-CALC-END-OF-YR
** SAG  12/23/2005 DW8 START
**     MOVE ISH-Y-DATA (HLD-ISH-X) TO IH-YEARLY-HIST-DATA
    HLD-ISH-Y-X := HLD-ISH-X
    MOVE #ISH-YEARLY-HIST-A (HLD-ISH-Y-X) TO VA-YEARLY-HIST-STR
    MOVE 'Y' TO PLUSS
    FOR IH-Y-HIST-X = 16 TO 15 STEP -1
      PERFORM RESET-14-MO-HIST
    END-FOR
    MOVE IS-SMOK-STATUS            TO IH-Y-SMOKER-FLAG      (15)
    MOVE IH-Y-YEAR-MONTH       (1) TO IH-Y-YEAR-MONTH       (15)
    MOVE IH-Y-ACCUM-CASH-VALUE (1) TO IH-Y-ACCUM-CASH-VALUE (15)
    MOVE IH-Y-CASH-VALUE       (1) TO IH-Y-CASH-VALUE       (15)
    MOVE IH-Y-DEATH-BENE       (1) TO IH-Y-DEATH-BENE       (15)
    MOVE IH-Y-PRORAT-LOAN-BAL  (1) TO IH-Y-PRORAT-LOAN-BAL  (15)
    MOVE IH-Y-PRORAT-LN-ACC-INT(1) TO IH-Y-PRORAT-LN-ACC-INT(15)
    MOVE +0  TO IH-Y-MONTH-IND   (15)
    MOVE +0  TO IH-Y-PREMIUM     (15)
    MOVE +0  TO IH-Y-COI         (15)
    MOVE +0  TO IH-Y-INTEREST    (15)
    MOVE 'N' TO PLUSS
** SAG  12/23/2005 DW8 END
    FOR IH-Y-HIST-X = 2 TO 14
      PERFORM RESET-14-MO-HIST
    END-FOR
    PERFORM MONTHLY-13-TO-YEARLY-14-MOVES
    MOVE IS-SMOK-STATUS TO IH-Y-SMOKER-FLAG (14)    /* SAG  12/23/2005 DW8
    RESET IH-Y-SMOKER-FLAG(14) IH-Y-MONTH-IND(14) IH-Y-PREMIUM(14)
      IH-Y-COI(14) IH-Y-INTEREST(14)
** SAG  12/23/2005 DW8 START
**    MOVE IH-YEARLY-HIST-DATA  TO ISH-Y-DATA (HLD-ISH-X)
    HLD-ISH-Y-X := HLD-ISH-X
    MOVE VA-YEARLY-HIST-STR TO #ISH-YEARLY-HIST-A (HLD-ISH-Y-X)
** SAG  12/23/2005 DW8 END
  END-REPEAT
*
**************************************************
*     UPDATE V/A HISTORY WITH TERMINATION INFO
**************************************************
**
  RESET NAS-X
**
  CHECK-FOR-TERM.
  REPEAT
    ADD 1 TO NAS-X
    IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
      ESCAPE BOTTOM
    END-IF
*   IF (PLAN(NAS-X) = 'RT' OR = 'LT' OR = 'SO' OR = 'FSO') OR     /* YK3
*       ((PLAN-A1(NAS-X) GE 'U') AND (PLAN-A1(NAS-X) LE 'Z'))     /* YK3
    IF (PLAN(NAS-X) = 'SO' OR = 'FSO') OR                         /* YK3
        FUNCTION-TERM-POLICY(<PLAN(NAS-X)>)                      /* YK3
      ESCAPE TOP
    END-IF
    IF NOT (CONVERSION-FLAG(NAS-X) = 'C' OR CONVERSION-FLAG(NAS-X) = 'N')
      ESCAPE TOP
    END-IF
    IF NOT (ONLINE-ACTION(NAS-X) = '5' OR = '6' OR = 'J' OR = 'K' OR = 'L'
        OR = 'M' OR = 'E' OR = 'G' OR = 'H')
      ESCAPE TOP
    END-IF
    FOR ISH-X = 1 TO 20
      PERFORM FIND-HIST-REC
    END-FOR
    IF VA-HIST-FND = 'N'
      ESCAPE TOP
    END-IF
    MOVE PLAN(NAS-X) TO IH-PLAN
    MOVE STATUS-VIEW.ISSUE-AGE(NAS-X) TO IH-ISSUE-AGE
    MOVE VA-RUN-DATE TO IH-TM-DATE
    IF ONLINE-ACTION(NAS-X) = '5' OR = 'J'
      MOVE 'CSV' TO IH-TM-CODE
    ELSE
      IF ONLINE-ACTION(NAS-X) = '6' OR = 'K' OR = 'L' OR = 'M'
        MOVE 'LAP' TO IH-TM-CODE
      ELSE
        MOVE 'DTH' TO IH-TM-CODE
      END-IF
    END-IF
** SAG  12/23/2005 DW8 START
**    MOVE VA-HISTORY-RECORD       TO ISH-RECORD (HLD-ISH-X)
    MOVE VA-MONTHLY-HIST-DATA-STR TO #ISH-MONTHLY-HIST-HDR-A (HLD-ISH-X)
    MOVE VA-MONTHLY-HIST-STR      TO #ISH-MONTHLY-HIST-A (HLD-ISH-X)
    MOVE VA-MONTHLY-HIST-B-STR    TO #ISH-MONTHLY-HIST-B-A (HLD-ISH-X)
    MOVE VA-YEARLY-HIST-STR       TO #ISH-YEARLY-HIST-A (HLD-ISH-X)
** SAG  12/23/2005 DW8 END
  END-REPEAT
* C-F-T-XIT.
*
**************************************************
*     ONLINE ETI PROCESSING
**************************************************
*
  RESET NAS-X
*
  CHECK-FOR-ONLINE-ETI.
  REPEAT
    ADD 1 TO NAS-X
    IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
      ESCAPE BOTTOM
    END-IF
*   IF (PLAN(NAS-X) = 'RT' OR = 'LT' OR = 'SO' OR = 'FSO') OR    /* YK3
*      (PLAN-A1(NAS-X) GE 'U' AND PLAN-A1(NAS-X) LE 'Z')         /* YK3
    IF (PLAN(NAS-X) = 'SO' OR = 'FSO') OR                        /* YK3
        FUNCTION-TERM-POLICY(<PLAN(NAS-X)>)                      /* YK3
      ESCAPE TOP
    END-IF
    IF ONLINE-ACTION(NAS-X) NE '9'
      ESCAPE TOP
    END-IF
    ADD 1 TO VA-ONLINE-ETI
  END-REPEAT
*
END-IF /* #AUTO-APL-LOOP-IND OR #PROCESS-ALP

************************************************************
****        CHECK FOR AUTO PREMIUM LOAN                   **
****   LEND MEMBER MODE PREMIUM IF OVERDUE                **
************************************************************

IF #PROCESS-ALP
  IGNORE
ELSE
  X20A.
  REPEAT
    X20.
    REPEAT
      C-F-O-E-XIT.
      REPEAT
        AUTO-APL.
        REPEAT
          IF RESTRICT-MBR-SW = 'Y' OR (PLAN(1) = 'SO' OR = 'FSO')
            RESET NAS-X
            ESCAPE BOTTOM (X20A.)
          END-IF
          RESET NAS-X
          ESCAPE BOTTOM
        END-REPEAT
*
        X19.
        REPEAT
          AUTO-APL-0.
          REPEAT
            ADD 1 TO NAS-X
            MOVE NAS-X TO OWN-X
            IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
**            RESET NAS-X        /* moved to next loop after X20A. SAG-AB 20060221
              ESCAPE BOTTOM (X20A.)
            END-IF
*           IF (PLAN(NAS-X) = 'RT' OR = 'LT') OR                        /* YK3
*               ((PLAN-A1(NAS-X) GE 'U') AND (PLAN-A1(NAS-X) LE 'Z'))   /* YK3
            IF FUNCTION-TERM-POLICY(<PLAN(NAS-X)>)                      /* YK3
              ESCAPE TOP
            END-IF
            IF MODE(NAS-X) = 'A' OR = 'S' OR = 'Q' OR = '1' OR = '2' OR = '4'
              IF PAD-CODE  = 'V' OR = 'W' OR = 'X' OR = 'Z'
                ESCAPE TOP
              END-IF
            ELSE
              ESCAPE TOP
            END-IF
            IF PAY-STATUS(NAS-X) > V-40
                OR STATUS(NAS-X) NE 'D' OR SUSPEND-CODE = '3'
                OR APL-DATE-YYYYMM NE PAID-TO-YYYYMM(NAS-X)
              ESCAPE TOP
            END-IF
            RESET CSV-TO-USE
            IF STATUS(NAS-X) = 'D' AND PAY-STATUS(NAS-X) NE '44'
              MOVE CASH-VALUE(NAS-X) TO CSV-TO-USE
            END-IF
            MOVE CSV-TO-USE TO P05PN.CASH-AVAIL
            IF ISSUE-DATE(NAS-X) GE 19970101 AND (MONTH-ALLOC-AMT(NAS-X) NE 999.99)
              MOVE 'Y' TO USE-X-CALCS
            ELSE
              MOVE 'N' TO USE-X-CALCS
            END-IF
            PERFORM CALC-MODE-PREMIUM
            PERFORM CALC-DUES
            PERFORM CALC-RIDER-MODAL-PREM
            MOVE W-MODE-PREMIUM TO MODE-MONEY-NEEDED-PREM
            MOVE W-MODE-PREMIUM TO MODE-MONEY-NEEDED
            ADD P05PN.SVC-FEE TO MODE-MONEY-NEEDED
            ADD P05PN.RID-AMT-DUE TO MODE-MONEY-NEEDED
            RESET PT-GT-PU-SW
            MOVE PAID-UP-DATE(NAS-X) TO WORK-DATE-YYYYMMDD
            IF WORK-DATE-YYYYMMDD < 19760000
              ADD 1000000 TO WORK-DATE-YYYYMMDD
            END-IF
            COMPUTE WA-D-PAYUP = (WORK-DATE-YY * 12) + WORK-DATE-MM
            IF WORK-DATE-YYYYMMDD > 19991231
              ADD 1200 TO WA-D-PAYUP
            END-IF
            IF WORK-DATE-YYYYMMDD > 20991231
              WRITE ID-NUMBER ' PAID UP DATE AFTER 20991231'
              ADD 1200 TO WA-D-PAYUP
            END-IF
            IF MODE(NAS-X) = 'A' OR = '1'
              MOVE 12 TO NO-MON
              MOVE 360 TO NO-DAYS
            END-IF
            IF MODE(NAS-X) = 'S' OR = '2'
              MOVE 06 TO NO-MON
              MOVE 180 TO NO-DAYS
            END-IF
            IF MODE(NAS-X) = 'Q' OR = '4'
              MOVE 03 TO NO-MON
              MOVE 090 TO NO-DAYS
            END-IF
            COMPUTE WA-D-PD-TO = (PAID-TO-YY(NAS-X) * 12) + PAID-TO-MM(NAS-X)
            IF PAID-TO-DATE(NAS-X) > 19991231
              ADD 1200 TO WA-D-PD-TO
            END-IF
            ADD NO-MON TO WA-D-PD-TO
            IF WA-D-PD-TO < WA-D-PAYUP
              ESCAPE BOTTOM
            END-IF
            SUBTRACT NO-MON FROM WA-D-PD-TO
            MOVE '1' TO PT-GT-PU-SW
            IF PLAN(NAS-X) = 'OL' OR = 'GPL' OR = 'GP2'      /* DW34 YK6
              MOVE DOB-DD TO WD-DD
            ELSE
              MOVE ISSUE-DATE-DD(NAS-X) TO WD-DD
            END-IF
            IF ISSUE-DATE(NAS-X) GE 19970101 AND MONTH-ALLOC-AMT(NAS-X) NE 999.99
              COMPUTE ROUNDED P05PN.SVC-FEE = ((WA-D-PAYUP - WA-D-PD-TO) * (P05PN.SVC-FEE / NO-MON))
              COMPUTE ROUNDED MODE-MONEY-NEEDED = (WA-D-PAYUP - WA-D-PD-TO) * (W-MODE-PREMIUM / NO-MON)
              MOVE MODE-MONEY-NEEDED TO MODE-MONEY-NEEDED-PREM
              ADD P05PN.SVC-FEE TO MODE-MONEY-NEEDED
              ADD P05PN.RID-AMT-DUE TO MODE-MONEY-NEEDED
            ELSE
              COMPUTE ROUNDED MODE-MONEY-NEEDED = ((WA-D-PAYUP - 1) - WA-D-PD-TO)
                * (W-MODE-PREMIUM / NO-MON) + ((WD-DD - 1) * W-MODE-PREMIUM / NO-DAYS)
              MOVE MODE-MONEY-NEEDED TO MODE-MONEY-NEEDED-PREM
            END-IF
            ESCAPE BOTTOM
          END-REPEAT
*
          AUTO-AVAIL-CHK.
          REPEAT
            SUBTRACT X-LOAN-AMOUNT(NAS-X) FROM P05PN.CASH-AVAIL
            SUBTRACT X-ACCUM-INTEREST(NAS-X) FROM P05PN.CASH-AVAIL
            SUBTRACT X-LOAN-AMOUNT-2(NAS-X) FROM P05PN.CASH-AVAIL
            SUBTRACT X-ACCUM-INTEREST-2(NAS-X) FROM P05PN.CASH-AVAIL
            IF (P05PN.CASH-AVAIL > 0 AND P05PN.CASH-AVAIL < MODE-MONEY-NEEDED) OR P05PN.CASH-AVAIL LE 0
              MOVE TRUE TO ESC-TOP
              ESCAPE BOTTOM /* AUTO-APL-0
            END-IF
            ADD P05PN.SVC-FEE TO APL-DUES
            MOVE ISSUE-DATE(NAS-X) TO ISS-DT-1-YEAR
            ADD 1 TO ISS-DT-1-YYYY
            IF ISS-DT-1-YYYYMM GE PAID-TO-YYYYMM(NAS-X)
              MOVE '1Y' TO SG-YEAR
            ELSE
              MOVE 'RN' TO SG-YEAR
            END-IF
            IF PLAN(NAS-X) = 'OL' OR = '20P' OR = '30P' OR = '7P' OR = 'SO' OR = 'SPF' OR
*               = 'FSO' OR = 'LT' OR = 'RT' OR = 'GPL'               /* DW34
                = 'FSO' OR = 'LT' OR = 'RT' OR = 'GPL' OR = 'EZ' OR = 'GP2'     /* YK4 YK6
              MOVE PLAN(NAS-X) TO SG-PLAN
            ELSE
*             IF PLAN-A1(NAS-X) GE 'U' AND PLAN-A1(NAS-X) LE 'Z'     /* YK3
              IF F-LT2-TRUE(<PLAN(NAS-X)>)                           /* YK3
                MOVE 'VT' TO SG-PLAN
              ELSE
                MOVE 'FX' TO SG-PLAN
              END-IF
            END-IF
            MOVE 'PREP' TO SG-TRAN
            IF PLAN(NAS-X) = 'SO'
              MOVE 'DUEP' TO SG-TRAN
              MOVE 'SO' TO SG-YEAR
              MOVE '**' TO SG-PLAN
            END-IF
            MOVE MODE-MONEY-NEEDED-PREM TO SG-AMT
            PERFORM SG-LOOP
            MOVE 'DUEP' TO SG-TRAN
            MOVE '**' TO SG-YEAR SG-PLAN
            MOVE P05PN.SVC-FEE TO SG-AMT
            PERFORM SG-LOOP
            MOVE RID-EFF-DT(NAS-X) TO ISS-DT-1-YEAR
            ADD 1 TO ISS-DT-1-YYYY
            IF ISS-DT-1-YYYYMM GE RID-PD-TO-YYYYMM(NAS-X)
              MOVE '1Y' TO SG-YEAR
            ELSE
              MOVE 'RN' TO SG-YEAR
            END-IF
            MOVE 'RIDP' TO SG-TRAN
            MOVE 'RD' TO SG-PLAN
            MOVE P05PN.RID-AMT-DUE TO SG-AMT
            PERFORM SG-LOOP
            ESCAPE BOTTOM
          END-REPEAT
*
*****************************************************************
*             P R O C E S S - A P L                             *
*****************************************************************
*
          IF ESC-TOP
            MOVE FALSE TO ESC-TOP
            ESCAPE TOP
          END-IF

          PROCESS-APL.
          REPEAT
            ADD 1 TO VA-APLS
            IF PT-GT-PU-SW NE '1'
              IGNORE
            ELSE
              MOVE PAID-UP-DATE(NAS-X) TO PAID-TO-DATE(NAS-X)
              MOVE 15 TO PAID-TO-DD(NAS-X)
              ESCAPE BOTTOM
            END-IF
*   PROCESS-APL-X.
            MOVE PAID-TO-DATE(NAS-X) TO WORK-DATE-YYYYMMDD
            IF MODE(NAS-X) = 'A' OR = '1'
              ADD 12 TO WORK-DATE-MM
            END-IF
            IF MODE(NAS-X) = 'S' OR = '2'
              ADD 6 TO WORK-DATE-MM
            END-IF
            IF MODE(NAS-X) = 'Q' OR = '4'
              ADD 3 TO WORK-DATE-MM
            END-IF
            MOVE 15 TO WORK-DATE-DD
            IF WORK-DATE-MM > 12
              SUBTRACT 12 FROM WORK-DATE-MM
              ADD 1 TO WORK-DATE-YYYY
            END-IF
            MOVE WORK-DATE-MM TO WORK-DATE-MM-NO-SIGN
            MOVE WORK-DATE-YYYYMMDD TO PAID-TO-DATE(NAS-X)
* BELOW ADDED 1/14/2004
            IF P05PN.RID-AMT-DUE NE 0
              MOVE WORK-DATE-YYYYMMDD TO RID-PD-TO(NAS-X)
            END-IF
            ESCAPE BOTTOM
          END-REPEAT
*
          PROCESS-APL-Y.
          REPEAT
            ADD P05PN.SVC-FEE TO DUES-TOT-PAID
            SUBTRACT P05PN.SVC-FEE FROM DUES-BALANCE
            ADD P05PN.RID-AMT-DUE TO RID-TOT-PAID
*           SUBTRACT P05PN.RID-AMT-DUE FROM X-RID-BALANCE(NAS-X)       /* YK7
            IF NAS-X NE 1
              FOR PRM-X = 1 TO 6
                PERFORM FILL-SEGS
              END-FOR
            END-IF
            MOVE NAS-X TO PRM-X
            IF MTD-ACV-PREM-ADJ(PRM-X) = 9999999.99
              MOVE MODE-MONEY-NEEDED-PREM TO MTD-ACV-PREM-ADJ(PRM-X)
            ELSE
              ADD MODE-MONEY-NEEDED-PREM TO MTD-ACV-PREM-ADJ(PRM-X)
            END-IF
            IF MTD-ACV-PREM-ADJ(PRM-X) = 0
              MOVE 9999999.99 TO MTD-ACV-PREM-ADJ(PRM-X)
            END-IF
            ESCAPE BOTTOM (C-F-O-E-XIT.) /* PROCESS-APL-NOW
          END-REPEAT
        END-REPEAT /* (X19.)
      END-REPEAT
*
*****************************************************************
*             P R O C E S S - A P L - N O W                     *
*****************************************************************
*
*  PROCESS-APL-NOW.
      IF MODE-MONEY-NEEDED = 0
        MOVE TRUE TO ESC-TOP
        ESCAPE BOTTOM /* AUTO-APL-0
      END-IF
      ADD 1 TO APL-CNT
      MOVE DAU-YY TO WD-YY
      MOVE DAU-MM TO WD-MM
      MOVE DAU-DD TO WD-DD
      MOVE WORK-DATE-MMDDYY TO TIN1-PN-LTRANDT
      MOVE #C-RUN-DT-YYYYMMDD TO DATE-ACCT-UPDATE
      MOVE 'AUTO APL' TO TIN1-PN-REF
      MOVE NAME TO TIN1-PN-NAME
      MOVE ID-NUMBER TO TIN1-PN-ID
      RESET TIN1-PN-ACCT
      MOVE ISSUE-DATE(NAS-X) TO TIN1-PN-DESC/ALPHA

*     AUTO-APL-1.
      RESET TIN1-PN-COL
      MOVE 'IRT' TO TIN1-PN-DSC1
**    MOVE CUR-VAR-INT-RT TO TIN1-PN-INTRT                    /* SAG-AB 20060823
*
      if plan(nas-x) = 'GPL'                                 /* vt4 \/
        move edited #cur-fix-gpl-int-rt (em=99.99) to tin1-pn-intrt
      else                                                   /* vt4 /\
        MOVE EDITED CUR-VAR-INT-RT (EM=99.99) TO TIN1-PN-INTRT  /* SAG-AB 20060823
      end-if                                                 /* vt4
*
      RESET TIN1-PN-DEBIT
      MOVE MODE-MONEY-NEEDED TO TIN1-PN-CREDIT
      MOVE '420' TO TIN1-PN-ACCTNO
      MOVE 'PREP' TO TIN1-PN-TRAN
      MOVE 2 TO RETURN-SW
      PERFORM END-WITH-MORE-WRITE

*   AUTO-APL-LOOP.
      MOVE TRUE TO ESC-TOP
      ESCAPE BOTTOM /* AUTO-APL-0
*   AUTO-APL-EXIT.
************************************************************
****        SAVE LOAN-BALANCE & ACCUM INTEREST FOR M/E STATS
************************************************************
      RESET NAS-X
*
      ESCAPE BOTTOM
    END-REPEAT /* (X20.)
    IF ESC-TOP
      MOVE FALSE TO ESC-TOP
    ELSE
      ESCAPE BOTTOM (X20A.)
    END-IF
  END-REPEAT /* (X20A).

  RESET NAS-X  /* moved from top of previous loop X20A. SAG-AB 20060221
  CHECK-M-E-BAL.
  REPEAT
    ADD 1 TO NAS-X
    IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
      ESCAPE BOTTOM
    END-IF
    MOVE X-LOAN-AMOUNT(NAS-X) TO #M-E-LOAN-AMT(NAS-X)
    MOVE X-ACCUM-INTEREST(NAS-X) TO #M-E-ACCUM-INT(NAS-X)
    MOVE X-LOAN-AMOUNT-2(NAS-X) TO #M-E-LOAN-AMT-2(NAS-X)
    MOVE X-ACCUM-INTEREST-2(NAS-X) TO #M-E-ACCUM-INT-2(NAS-X)
  END-REPEAT
*
* END-CHECK-M-E-BAL.

* ********************************************************
************************************************************
****        CHECK FOR  E T I  LINE TO  BE EXPIRED         **
************************************************************
  RESET NAS-X
  CHECK-ETI.
  REPEAT
    ADD 1 TO NAS-X
    IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
**    RESET NAS-X   /* moved to start of next loop SAG-AB 20060221
      ESCAPE BOTTOM
    END-IF
    IF PAY-STATUS(NAS-X) NE V-44 OR STATUS(NAS-X) NE 'D' OR
*       (PLAN(NAS-X) = 'RT' OR = 'LT' OR = 'SO' OR = 'FSO') OR    /* YK3
*       (PLAN-A1(NAS-X) GE 'U' AND PLAN-A1(NAS-X) LE 'Z')         /* YK3
        (PLAN(NAS-X) = 'SO' OR = 'FSO') OR                        /* YK3
        FUNCTION-TERM-POLICY(<PLAN(NAS-X)>)                      /* YK3
      ESCAPE TOP
    END-IF
    IF CONVERSION-FLAG(NAS-X) = 'C' OR CONVERSION-FLAG(NAS-X) = 'N'
      IF CASH-VALUE(NAS-X) > IS-COI
        PERFORM COMPUTE-EST-EXPIRY-DATE
        ESCAPE TOP
      END-IF
    ELSE
      IF #C-RUN-DT-YYYYMMDD < PAID-UP-DATE(NAS-X)
        ESCAPE TOP
      END-IF
    END-IF
    IF CONVERSION-FLAG(NAS-X) = 'C' OR CONVERSION-FLAG(NAS-X) = 'N'
      FOR ISH-X = 1 TO 20
        PERFORM FIND-HIST-REC
      END-FOR
      MOVE VA-RUN-DATE TO IH-TM-DATE
      MOVE 'EXP' TO IH-TM-CODE
** SAG  12/23/2005 DW8 START
**   MOVE VA-HISTORY-RECORD       TO ISH-RECORD (HLD-ISH-X)
      MOVE VA-MONTHLY-HIST-DATA-STR TO #ISH-MONTHLY-HIST-HDR-A (HLD-ISH-X)
      MOVE VA-MONTHLY-HIST-STR      TO #ISH-MONTHLY-HIST-A (HLD-ISH-X)
      MOVE VA-MONTHLY-HIST-B-STR    TO #ISH-MONTHLY-HIST-B-A (HLD-ISH-X)
      MOVE VA-YEARLY-HIST-STR       TO #ISH-YEARLY-HIST-A (HLD-ISH-X)
** SAG  12/23/2005 DW8 END
    END-IF
    MOVE 'E' TO STATUS(NAS-X)
    IF STATUS(1) NE 'D' AND STATUS(2) NE 'D' AND
        STATUS(3) NE 'D'    AND STATUS(4) NE 'D' AND
        STATUS(5) NE 'D'    AND STATUS(6) NE 'D' AND
        STATUS(7) NE 'D'    AND STATUS(8) NE 'D' AND
        STATUS(9) NE 'D'
      RESET NUMBER-MEMBERSHIPS
    END-IF
    IF ONLINE-ACTION(NAS-X) = '9'
      MOVE 'F' TO ONLINE-ACTION(NAS-X)
    ELSE
      MOVE '8' TO ONLINE-ACTION(NAS-X)
    END-IF
    IF ONLINE-ACTION-GN = '1'
      IF NOT (ONLINE-ACTION-GN = '1' OR = '2' OR = '3')
        MOVE '4' TO ONLINE-ACTION-GN
      END-IF
    END-IF
    IF CONVERSION-FLAG(NAS-X) = 'C' OR = 'N'
      MOVE #C-RUN-DT-YYYYMMDD TO DATE-ACCT-UPDATE
    ELSE
      MOVE PAID-UP-DATE(NAS-X) TO DATE-ACCT-UPDATE
    END-IF
    ESCAPE TOP
*   CHECK-ETI-EXIT.
  END-REPEAT
*
************************************************************
****        CHECK FOR  RT/LT/LTIITO  BE EXPIRED           **
************************************************************
*
  RESET NAS-X   /* moved from exit of previous loop SAG-AB 20060221
  CHECK-EXP.
  REPEAT
    ADD 1 TO NAS-X
    IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
**    RESET NAS-X  /* not needed here - at start of next loop SAG-AB 20060221
      ESCAPE BOTTOM
    END-IF
    IF NOT (ONLINE-ACTION(NAS-X) = '8' AND STATUS(NAS-X) = 'D' AND
*       (PLAN(NAS-X) = 'RT'  OR PLAN(NAS-X) = 'LT' OR                 /* YK3
*       (PLAN-A1(NAS-X) GE 'U' AND PLAN-A1(NAS-X) LE 'Z')))           /* YK3
        FUNCTION-TERM-POLICY(<PLAN(NAS-X)>))
      ESCAPE TOP
    END-IF
    FOR ISH-X = 1 TO 20
      PERFORM FIND-HIST-REC
    END-FOR
    MOVE VA-RUN-DATE TO IH-TM-DATE
    MOVE 'EXP' TO IH-TM-CODE
** SAG  12/23/2005 DW8 START
**   MOVE VA-HISTORY-RECORD       TO ISH-RECORD (HLD-ISH-X)
    MOVE VA-MONTHLY-HIST-DATA-STR TO #ISH-MONTHLY-HIST-HDR-A (HLD-ISH-X)
    MOVE VA-MONTHLY-HIST-STR      TO #ISH-MONTHLY-HIST-A (HLD-ISH-X)
    MOVE VA-MONTHLY-HIST-B-STR    TO #ISH-MONTHLY-HIST-B-A (HLD-ISH-X)
    MOVE VA-YEARLY-HIST-STR       TO #ISH-YEARLY-HIST-A (HLD-ISH-X)
** SAG  12/23/2005 DW8 END
    MOVE 'E' TO STATUS(NAS-X)
    IF STATUS(1) NE 'D' AND STATUS(2) NE 'D' AND
        STATUS(3) NE 'D' AND STATUS(4) NE 'D' AND
        STATUS(5) NE 'D' AND STATUS(6) NE 'D' AND
        STATUS(7) NE 'D' AND STATUS(8) NE 'D' AND
        STATUS(9) NE 'D'
      RESET NUMBER-MEMBERSHIPS
    END-IF
    IF ONLINE-ACTION-GN = '1'
      IF NOT (ONLINE-ACTION-GN = '1' OR = '2' OR = '3')
        MOVE '4' TO ONLINE-ACTION-GN
      END-IF
    END-IF
    MOVE #C-RUN-DT-YYYYMMDD TO DATE-ACCT-UPDATE
*   CHECK-EXP-EXIT.
  END-REPEAT
*
END-IF /* #PROCESS-ALP
*
*****************************************************************
*            A U T O - L O A N - P A Y M E N T                  *
*****************************************************************
************************************************************
****        CHECK FOR AUTOMATIC PAYMENT OF LOAN           **
************************************************************
*
IF NOT #PROCESS-ALP                 /* first time through
  RESET NAS-X                       /* included after review SAG-AB 20060314
END-IF
AUTO-LOAN-PAYMENT.
REPEAT
  IF RETURN-SW EQ 61 OR EQ 62 OR EQ 63
    IGNORE
  ELSE
    ADD 1 TO NAS-X
    IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
      ESCAPE BOTTOM (AUTO-LOAN-PAYMENT.)
    END-IF
    RESET
      FIX-ALP-PRN-AMT(NAS-X) FIX-ALP-INT-AMT(NAS-X)
      VAR-ALP-PRN-AMT(NAS-X) VAR-ALP-INT-AMT(NAS-X)
  END-IF
*
  GOTO-PROCESS-VARIABLE-ALP.
  REPEAT
**PROCESS-FIXED-ALP.
    IF #PROCESS-VARIABLE-ALP
      ESCAPE BOTTOM (GOTO-PROCESS-VARIABLE-ALP.)
    END-IF
    IF #CHECK-INTEREST            /* SAG-AB 20060314
      PERFORM ALP-CHECK-INTEREST  /* SAG-AB 20060314
    ELSE                          /* SAG-AB 20060314
      IF X-ALT-LP-IND(NAS-X) = '3' OR = '4'
        IF PAD-CODE = 'E' OR = 'V' OR = 'W' OR = 'X'  OR = 'Z'
          IGNORE
        ELSE
          MOVE 'FIXED ELP ON AND PAD-CODE NOT = "E"' TO EMESS
          EXAMINE EMESS FOR H'27' REPLACE WITH H'22'  /* SAG-AB 20060925
          MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
          PERFORM FORM-ERROR-MESSAGE
        END-IF
      END-IF
*
      IF  X-ALT-LP-IND(NAS-X) = '9' OR = 'L'                       /* DW20 / DW22
        COMPRESS 'FIX ALP-CODE is "9 or L" so ALP bypassed' X-ALT-LP-IND(NAS-X) TO EMESS
        MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
        PERFORM FORM-ERROR-MESSAGE
      END-IF
*
      IF     (X-ALT-LP-IND(NAS-X) = '1')
          OR (X-ALT-LP-IND(NAS-X) = '2')
          OR (X-ALT-LP-IND(NAS-X) = '6')
          OR ((X-ALT-LP-IND(NAS-X) = '3' OR = '4')
          AND (PAD-CODE = 'E' OR = 'V' OR = 'W' OR = 'X' OR = 'Z'))
        IGNORE
      ELSE
        RESET TIN1-PN-DESC TIN1-PN-AALP-CD
        ESCAPE BOTTOM (GOTO-PROCESS-VARIABLE-ALP.)
      END-IF
      IF X-ALT-LP-AMT(NAS-X) = 0
        MOVE 'FIXED ALP/ELP ON AND NO ALP-AMT' TO EMESS
        MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
        PERFORM FORM-ERROR-MESSAGE
        RESET TIN1-PN-DESC TIN1-PN-AALP-CD
        ESCAPE BOTTOM (GOTO-PROCESS-VARIABLE-ALP.)
      END-IF
      IF X-ALT-LP-IND(NAS-X) = '1' OR = '2' OR = '3'  OR = '4' OR = '6'
        MOVE '4' TO X-PRINCIPAL-CHG-CODE(NAS-X)
      END-IF
      IF X-LOAN-DATE(NAS-X) = 0 AND
          (X-ALT-LP-IND(NAS-X) = '1' OR = '2' OR = '3' OR = '4' OR = '6')
        MOVE 'FIXED ALP/ELP ON AND NO LOAN' TO EMESS
        MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
        PERFORM FORM-ERROR-MESSAGE
      END-IF
      IF (X-ALT-LP-IND(NAS-X) = '1' OR = '2') AND ALOT-AMT = 0
        MOVE 'FIXED ALP ON AND NO ALOT' TO EMESS
        MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
        PERFORM FORM-ERROR-MESSAGE
      END-IF
*
      IF      X-LOAN-AMOUNT(NAS-X) GE 0
          AND X-LOAN-AMOUNT(NAS-X) LE 5.00
          AND (CONV-DURATION (NAS-X) EQ 999)     /* SAG-AB 20060913
        IF X-LOAN-AMOUNT(NAS-X) GT 0                        /* DW23
          WRITE ID-NUMBER 'CAP loan amt of' X-LOAN-AMOUNT(NAS-X) 'reset to Zero' /*DW25
          MOVE 'PADF' TO SG-TRAN
          MOVE 'CP' TO SG-YEAR
          MOVE '**' TO SG-PLAN
          MOVE X-LOAN-AMOUNT (NAS-X) TO SG-AMT
          PERFORM SG-LOOP
          MOVE 'SAWO' TO SG-TRAN                     /* DW26  /* vt2
          MOVE 'CP' TO SG-YEAR
          MOVE '**' TO SG-PLAN
          MOVE X-LOAN-AMOUNT (NAS-X) TO SG-AMT
          PERFORM SG-LOOP                                          /* END DW25
        END-IF
        RESET X-LOAN-AMOUNT(NAS-X)  X-ACCUM-INTEREST(NAS-X)
      END-IF
*
      IF X-ALT-LP-IND(NAS-X) = '1' OR X-ALT-LP-IND(NAS-X) = '3'
        ADD 1 TO NUM-ALP
        MOVE X-ALT-LP-AMT(NAS-X) TO ALT-LOAN-AMT
        RESET ALT-INT-AMT
      ELSE
        ADD 1 TO NUM-AIP
        IF X-ACCUM-INTEREST(NAS-X) < X-ALT-LP-AMT(NAS-X)
          IF X-ACCUM-INTEREST(NAS-X) > 0
            COMPUTE ALT-LOAN-AMT = X-ALT-LP-AMT(NAS-X) - X-ACCUM-INTEREST(NAS-X)
            MOVE X-ACCUM-INTEREST(NAS-X) TO ALT-INT-AMT
          ELSE
            MOVE X-ALT-LP-AMT(NAS-X) TO ALT-LOAN-AMT
            RESET ALT-INT-AMT
          END-IF
        ELSE
          RESET ALT-LOAN-AMT
          MOVE X-ALT-LP-AMT(NAS-X) TO ALT-INT-AMT
        END-IF
      END-IF
*       below 3 lines moved to below                      /* DW36
*     IF X-ALT-LP-IND(NAS-X) = '6' AND X-LOAN-AMOUNT(NAS-X) < ALT-LOAN-AMT
*       MOVE X-LOAN-AMOUNT(NAS-X) TO ALT-LOAN-AMT
*     END-IF
*
      MOVE ALT-LOAN-AMT TO FIX-ALP-PRN-AMT(NAS-X)
      MOVE ALT-INT-AMT TO FIX-ALP-INT-AMT(NAS-X)
*
      IF X-ALT-LP-IND(NAS-X) = '6'
        IF   (PAD-CODE = 'V' OR = 'Z') /* Continue if EZ-PAY Start       /* DW21
            OR ((PAD-CODE = 'X') AND (OWNERSHIP-FLAG (NAS-X) = 'D'))
          WRITE ID-NUMBER 'ALP "6" (MIP) with an EZ-PAY-START'
*                  /* Allocate Auto Loan Pmt
        ELSE
          IF X-LOAN-AMOUNT(NAS-X) < ALT-LOAN-AMT                     /* DW36
            MOVE X-LOAN-AMOUNT(NAS-X) TO ALT-LOAN-AMT
          END-IF                                                     /* END DW36
*
          ESCAPE BOTTOM (GOTO-PROCESS-VARIABLE-ALP.)
        END-IF
      END-IF
*
      SUBTRACT ALT-LOAN-AMT FROM X-LOAN-AMOUNT(NAS-X)
      SUBTRACT ALT-INT-AMT FROM X-ACCUM-INTEREST(NAS-X)
      ADD ALT-INT-AMT TO X-INTEREST-RECEIVED(NAS-X)
      IF      X-LOAN-AMOUNT(NAS-X) GE 0
          AND X-LOAN-AMOUNT(NAS-X) LE 5.00
          AND (CONV-DURATION (NAS-X) = 999)           /* SAG-AB 20060313
        IF X-LOAN-AMOUNT(NAS-X) GT 0                        /* DW23
          WRITE ID-NUMBER 'CAP loan amt of' X-LOAN-AMOUNT(NAS-X) 'reset to Zero' /*DW25
          MOVE 'PADF' TO SG-TRAN
          MOVE 'CP' TO SG-YEAR
          MOVE '**' TO SG-PLAN
          MOVE X-LOAN-AMOUNT (NAS-X) TO SG-AMT
          PERFORM SG-LOOP
          MOVE 'SAWO' TO SG-TRAN                /* DW26    vt2
          MOVE 'CP' TO SG-YEAR
          MOVE '**' TO SG-PLAN
          MOVE X-LOAN-AMOUNT (NAS-X) TO SG-AMT
          PERFORM SG-LOOP                                          /* END DW25
        END-IF
        RESET X-LOAN-AMOUNT(NAS-X)
      END-IF
*
      IF X-LOAN-AMOUNT(NAS-X) < 0
        IF (X-ALT-LP-IND(NAS-X) = '3' OR = '4')
*       OR (PAD-CODE = 'V' OR = 'W' OR = 'X' OR = 'Z')            /* PM27
            OR ((PAD-CODE = 'V' OR = 'W' OR = 'X' OR = 'Z')             /* DW36
            AND (X-ALT-LP-IND (NAS-X) = '6'))  /* only for MIPs   /* DW36
          ADD X-LOAN-AMOUNT(NAS-X) TO #EZPAY-LOAN-OVERFLOW
          ADD X-LOAN-AMOUNT(NAS-X) TO TOT-EZPAY-LOAN-OVERFLOW
          ADD X-LOAN-AMOUNT(NAS-X) TO FIX-ALP-PRN-AMT(NAS-X)
*         MOVE 'EZPAY AMOUNT ADJUSTED - FIX LOAN PAID OFF' TO EMESS  /* DW39
*         MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
*         PERFORM FORM-ERROR-MESSAGE                                /* DW39
        ELSE
          ADD X-LOAN-AMOUNT(NAS-X) TO ALLOT-LOAN-OVERFLOW
          ADD X-LOAN-AMOUNT(NAS-X) TO X-ALT-LP-AMT(NAS-X)
          ADD X-LOAN-AMOUNT(NAS-X) TO FIX-ALP-PRN-AMT(NAS-X)
*        MOVE 'FIXED AUTO LOAN PAID OFF -DB/CR ADJ' TO EMESS         /* DW39
*        MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
*        PERFORM FORM-ERROR-MESSAGE                                  /* DW39
        END-IF
        ADD X-LOAN-AMOUNT(NAS-X) TO ALT-LOAN-AMT
        RESET X-LOAN-AMOUNT(NAS-X)
      END-IF
*
      IF CONV-DURATION(NAS-X) = 999 AND X-LOAN-AMOUNT(NAS-X) = 0 AND
          (X-ALT-LP-IND(NAS-X) = '2' OR = '4' OR = '6')                   /* DW21
        RESET X-ACCUM-INTEREST(NAS-X) X-NXT-YR-ACCUM-INT(NAS-X) X-BILL-INTEREST-AMT(NAS-X)
          X-CAP-AMT(NAS-X) X-OLD-LOAN-AMT(NAS-X) X-INTEREST-RECEIVED(NAS-X)
        RESET X-PRINCIPAL-CHG-CODE(NAS-X)
        RESET X-INTEREST-RATE(NAS-X) /* Chged from move 12% 5/8/2008 DW28
      END-IF
      IF CONV-DURATION(NAS-X) = 999 AND X-LOAN-AMOUNT(NAS-X) = 0
        MOVE #C-RUN-DT-YYYYMMDD TO X-LOAN-DATE(NAS-X)
      END-IF
      IF CONV-DURATION(NAS-X) = 999
        MOVE 'CAP MBR' TO TIN1-PN-DESC/ALPHA
      ELSE
        MOVE ISSUE-DATE(NAS-X) TO TIN1-PN-DESC/ALPHA
      END-IF
      IF X-ALT-LP-IND(NAS-X) = '1'
        MOVE '3' TO NEW-IND
      ELSE
        MOVE '4' TO NEW-IND
      END-IF
      IF ALT-LOAN-AMT < 0
        WRITE ID-NUMBER ' ALOT LOAN AMT < 0 ' ALT-LOAN-AMT
      END-IF
      IF ALT-LOAN-AMT > 0
        MOVE NAME TO TIN1-PN-NAME
        MOVE ID-NUMBER TO TIN1-PN-ID
        RESET TIN1-PN-ACCT
        MOVE DAU-YY TO WD-YY
        MOVE DAU-MM TO WD-MM
        MOVE DAU-DD TO WD-DD
        MOVE WORK-DATE-MMDDYY TO TIN1-PN-LTRANDT
        MOVE #C-RUN-DT-YYYYMMDD TO DATE-ACCT-UPDATE
        RESET TIN1-PN-COL    TIN1-PN-DEBIT
        MOVE ALT-LOAN-AMT TO TIN1-PN-CREDIT
        MOVE '110' TO TIN1-PN-ACCTNO
        MOVE 'PRNF' TO TIN1-PN-TRAN
        MOVE 61 TO RETURN-SW
        MOVE X-ALT-LP-IND(NAS-X) TO TIN1-PN-AALP-CD
        IF X-ALT-LP-IND(NAS-X) = '1' OR = '2'
          ADD ALT-LOAN-AMT TO ALP-ALOT-PRIN
          MOVE 'ALP GEN' TO TIN1-PN-REF
          PERFORM END-WITH-MORE-WRITE
        ELSE
          ADD ALT-LOAN-AMT TO ALP-EZPAY-PRIN
          MOVE 'ELP GEN' TO TIN1-PN-REF
          PERFORM END-WITH-MORE-WRITE
        END-IF
      ELSE                          /* EDS-PM 20060912
        #CHECK-INTEREST :=TRUE      /* EDS-PM 20060912
        ESCAPE TOP                  /* EDS-PM 20060912
      END-IF
    END-IF
**
* ALP-EXIT.  /* code has been included in 2 other exits which bypass this
    RESET TIN1-PN-DESC   TIN1-PN-AALP-CD
*
    ESCAPE BOTTOM (GOTO-PROCESS-VARIABLE-ALP.)
  END-REPEAT /* (GOTO-PROCESS-VARIABLE-ALP.)
**
  PROCESS-VARIABLE-ALP.
  REPEAT
    IF #CHECK-INTEREST-2
      PERFORM ALP-CHECK-INTEREST-2
    ELSE
      IF X-ALT-LP-IND-2(NAS-X) = '3' OR = '4'
        IF PAD-CODE = 'E' OR = 'V' OR = 'W' OR = 'X' OR = 'Z'
          IGNORE
        ELSE
          MOVE 'VAR ELP ON AND PAD-CODE NOT = "E"' TO EMESS
          EXAMINE EMESS FOR H'27' REPLACE WITH H'22'      /* SAG-AB 20060925
          MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
          PERFORM FORM-ERROR-MESSAGE
        END-IF
      END-IF
*
      IF  X-ALT-LP-IND-2(NAS-X) = '9'                              /* DW20
        MOVE 'VAR ALP-CODE is "9" so ALP bypassed' TO EMESS
        MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
        PERFORM FORM-ERROR-MESSAGE
      END-IF
*
      IF     (X-ALT-LP-IND-2(NAS-X) = '1')
          OR (X-ALT-LP-IND-2(NAS-X) = '2')
          OR ((X-ALT-LP-IND-2(NAS-X) = '3' OR = '4')
          AND (PAD-CODE = 'E' OR = 'V' OR = 'W' OR = 'X' OR = 'Z'))
        IGNORE
      ELSE
        ESCAPE BOTTOM
      END-IF

      IF X-ALT-LP-AMT-2(NAS-X) = 0
        MOVE 'VARIABLE ALP/ELP ON AND NO ALP-AMT' TO EMESS
        MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
        PERFORM FORM-ERROR-MESSAGE
        ESCAPE BOTTOM
      END-IF
      IF (X-ALT-LP-IND-2(NAS-X) = '1' OR = '2' OR = '3' OR = '4' OR = '6')
          AND X-LOAN-DATE-2(NAS-X) = 0
        MOVE 'VARIABLE ALP/ELP ON AND NO LOAN' TO EMESS
        MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
        PERFORM FORM-ERROR-MESSAGE
      END-IF
      IF (X-ALT-LP-IND-2(NAS-X) = '1' OR = '2') AND ALOT-AMT = 0
        MOVE 'VARIABLE ALP ON AND NO ALOT' TO EMESS
        MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
        PERFORM FORM-ERROR-MESSAGE
      END-IF
      IF X-ALT-LP-IND-2(NAS-X) = '1' OR = '3'
        ADD 1 TO NUM-ALP
        MOVE X-ALT-LP-AMT-2(NAS-X) TO ALT-LOAN-AMT
        RESET ALT-INT-AMT
      ELSE
        ADD 1 TO NUM-AIP
        IF X-ACCUM-INTEREST-2(NAS-X) < X-ALT-LP-AMT-2(NAS-X)
          IF X-ACCUM-INTEREST-2(NAS-X) > 0
            COMPUTE ALT-LOAN-AMT = X-ALT-LP-AMT-2(NAS-X) - X-ACCUM-INTEREST-2(NAS-X)
            MOVE X-ACCUM-INTEREST-2(NAS-X) TO ALT-INT-AMT
          ELSE
            MOVE X-ALT-LP-AMT-2(NAS-X) TO ALT-LOAN-AMT
            RESET ALT-INT-AMT
          END-IF
        ELSE
          RESET ALT-LOAN-AMT
          MOVE X-ALT-LP-AMT-2(NAS-X) TO ALT-INT-AMT
        END-IF
      END-IF
      SUBTRACT ALT-LOAN-AMT FROM X-LOAN-AMOUNT-2(NAS-X)
      SUBTRACT ALT-INT-AMT FROM X-ACCUM-INTEREST-2(NAS-X)
      ADD ALT-INT-AMT TO X-INTEREST-RECEIVED-2(NAS-X)
      MOVE ALT-LOAN-AMT TO VAR-ALP-PRN-AMT(NAS-X)
      MOVE ALT-INT-AMT TO VAR-ALP-INT-AMT(NAS-X)
      IF X-LOAN-AMOUNT-2(NAS-X) < 0
        IF (X-ALT-LP-IND-2(NAS-X) = '3' OR = '4') OR
            (PAD-CODE = 'V' OR = 'W' OR = 'X' OR = 'Z')
** WRITE ID-NUMBER ' EZVAR LN PAOF ' X-LOAN-AMOUNT-2(NAS-X) /* removed SAG-AB 20060328
          ADD X-LOAN-AMOUNT-2(NAS-X) TO #EZPAY-LOAN-OVERFLOW
          ADD X-LOAN-AMOUNT-2(NAS-X) TO TOT-EZPAY-LOAN-OVERFLOW
          ADD X-LOAN-AMOUNT-2(NAS-X) TO VAR-ALP-PRN-AMT(NAS-X)
*         MOVE 'EZPAY AMOUNT ADJUSTED - VAR LOAN PAID OFF' TO EMESS   /* DW39
*         MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
*         PERFORM FORM-ERROR-MESSAGE                                  /* DW39
        ELSE
          ADD X-LOAN-AMOUNT-2(NAS-X) TO ALLOT-LOAN-OVERFLOW
          ADD X-LOAN-AMOUNT-2(NAS-X) TO X-ALT-LP-AMT-2(NAS-X)
          ADD X-LOAN-AMOUNT-2(NAS-X) TO VAR-ALP-PRN-AMT(NAS-X)
*         MOVE 'VAR ALP/ELP MADE LN LESS THAN 0 - DB/CR ADJ' TO EMESS  /* DW39
*         MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
*         PERFORM FORM-ERROR-MESSAGE                                   /* DW39
        END-IF
        ADD X-LOAN-AMOUNT-2(NAS-X) TO ALT-LOAN-AMT
        RESET X-LOAN-AMOUNT-2(NAS-X)
      END-IF
*     IF X-LOAN-AMOUNT-2(NAS-X) = 0                                    /* DW39
*       MOVE '#*VAR ALP/ELP HAS PAID OFF LOAN THIS MONTH' TO EMESS
*       MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
*       PERFORM FORM-ERROR-MESSAGE                                     /* DW39
*     END-IF
      IF X-ALT-LP-IND-2(NAS-X) = '1'
        MOVE '3' TO NEW-IND
      ELSE
        MOVE '4' TO NEW-IND
      END-IF
      IF ALT-LOAN-AMT < 0
        WRITE ID-NUMBER ' ALOT LOAN AMT < 0 ' ALT-LOAN-AMT
      END-IF
      IF ALT-LOAN-AMT > 0
        MOVE NAME TO TIN1-PN-NAME
        MOVE ID-NUMBER TO TIN1-PN-ID
        RESET TIN1-PN-ACCT
        MOVE ISSUE-DATE(NAS-X) TO TIN1-PN-DESC/ALPHA
        MOVE DAU-YY TO WD-YY
        MOVE DAU-MM TO WD-MM
        MOVE DAU-DD TO WD-DD
        MOVE WORK-DATE-MMDDYY TO TIN1-PN-LTRANDT
        MOVE #C-RUN-DT-YYYYMMDD TO DATE-ACCT-UPDATE
        RESET TIN1-PN-COL TIN1-PN-DEBIT
        MOVE ALT-LOAN-AMT TO TIN1-PN-CREDIT
        MOVE '110' TO TIN1-PN-ACCTNO
        MOVE 'PRNV' TO TIN1-PN-TRAN
        MOVE 63 TO RETURN-SW
        MOVE X-ALT-LP-IND-2(NAS-X) TO TIN1-PN-AALP-CD
        IF X-ALT-LP-IND-2(NAS-X) = '1' OR X-ALT-LP-IND-2(NAS-X) = '2'
          ADD ALT-LOAN-AMT TO ALP-ALOT-PRIN
          MOVE 'ALP GEN' TO TIN1-PN-REF
        ELSE
          ADD ALT-LOAN-AMT TO ALP-EZPAY-PRIN
          MOVE 'ELP GEN' TO TIN1-PN-REF
        END-IF
        PERFORM END-WITH-MORE-WRITE
      ELSE                          /* EDS-PM 20060912
        #CHECK-INTEREST-2 :=TRUE    /* EDS-PM 20060912
        ESCAPE TOP                  /* EDS-PM 20060912
      END-IF
    END-IF
    ESCAPE BOTTOM
  END-REPEAT
*
* ALP-EXIT-2.
*
  RESET #PROCESS-VARIABLE-ALP #PROCESS-ALP
  RESET #CHECK-INTEREST #CHECK-INTEREST-2
  RESET RETURN-SW                     /* inserted 20060524 SAG-AB
**
**ESCAPE BOTTOM (AUTO-LOAN-PAYMENT.)  /* removed  20060517 SAG-AB
END-REPEAT /* (AUTO-LOAN-PAYMENT.)`
RESET TIN1-PN-AALP-CD
*
*********************************************************
************************************************************
****        EXCEPTION MESSAGES                            **
************************************************************
*
IF (INTRO-FLAG = 'C' OR = 'B' OR = 'P' OR = 'Q')
    AND CONV-DURATION(NAS-X) = 999 AND ALOT-AMT = 0
  MOVE TRUE TO #CHECK-LOAN-CASH-EXIT
END-IF
MOVE 'N' TO PP-POLS /* excluded from else condition above SAG-AB 20060221
RESET NAS-X
*
EXCP-LOOP.
REPEAT
  IF #CHECK-LOAN-CASH-EXIT
**    RESET NAS-X SU  /* removed - could not see why SAG-AB 20060221
    MOVE FALSE TO #CHECK-LOAN-CASH-EXIT
    ESCAPE BOTTOM (EXCP-LOOP.)
  END-IF
  REPEAT
    ADD 1 TO NAS-X
    IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
**    RESET NAS-X SU /* removed - could not see why SAG-AB 20060221
      ESCAPE BOTTOM (EXCP-LOOP.)
    END-IF
    IF PAY-STATUS(NAS-X) < '40' AND STATUS(NAS-X) = 'D'
      MOVE 'Y' TO PP-POLS
    END-IF
    IF CONV-DURATION(NAS-X) = 999
        AND X-LOAN-DATE(NAS-X) = 0
        AND ISSUE-DATE(1) NE #C-RUN-DT-YYYYMMDD
        AND STATUS (NAS-X) = 'D'            /* SAG  12/23/2005 DW9
      RESET #CAP-FOUND                      /* PM38
      FOR #CAP-X 1 TO NAS-X                 /* PM38
        IF (CONV-DURATION (#CAP-X) = 999     /* PM38    DW39
            AND X-LOAN-DATE (#CAP-X) NE 0      /* PM38
            AND X-LOAN-AMOUNT (#CAP-X) = 0)     /* PM38
            OR (X-ALT-LP-IND (#CAP-X) = 'L' OR = 'C' /* Loan creation pending  DW39
            OR = 'E' OR = '9')                               /* DW39
          #CAP-FOUND := TRUE                /* PM38
          ESCAPE BOTTOM                     /* PM38
        END-IF                              /* PM38
      END-FOR                               /* PM38
      IF NOT #CAP-FOUND                     /* PM38
        MOVE 'CAP MBR WITH NO FIXED LOAN' TO EMESS
        PERFORM FORM-ERROR-MESSAGE
      END-IF                                /* PM38
    END-IF
    IF CONV-DURATION(NAS-X) = 999 AND X-LOAN-AMOUNT(NAS-X) NE 0
        AND X-INTEREST-RATE(NAS-X) NE 1.5
      MOVE 'CAP MBR WITH INVALID 1.5% LOAN' TO EMESS
      PERFORM FORM-ERROR-MESSAGE
    END-IF
    IF ((X-LOAN-AMOUNT(NAS-X) = 0) AND (X-LOAN-AMOUNT-2(NAS-X) = 0)) /* SAG-AB 20060313
        OR (CONV-DURATION (NAS-X) = 999)                           /* SAG-AB 20060313
      ESCAPE TOP
    END-IF
    IF CONV-DURATION(NAS-X) EQ 999
      IGNORE
    ELSE
      IF X-INTEREST-RATE(NAS-X) = 1.5 AND X-LOAN-AMOUNT(NAS-X) NE 0
        MOVE 'NON-CAP MBR WITH 1.5 FIXED LOAN' TO EMESS
        MOVE ISSUE-DATE(NAS-X) TO EMESS-LAST-8
        PERFORM FORM-ERROR-MESSAGE
      END-IF
    END-IF
    RESET CASH-VALUE-PN
    ESCAPE BOTTOM
  END-REPEAT
*
  CHECK-LOAN-CASH.
  REPEAT
    MOVE NAS-X TO OWN-X
    IF STATUS(NAS-X) NE 'D' OR PAY-STATUS(NAS-X) = V-44
      MOVE TRUE TO ESC-TOP
      ESCAPE BOTTOM
    END-IF
    IF ISSUE-DATE(NAS-X) < 19910409 OR
        (ISSUE-DATE(NAS-X) GE 19910409 AND LAST-DURATION(NAS-X) > 1) OR
        (ISSUE-DATE(NAS-X) GE 19970101 AND MONTH-ALLOC-AMT(NAS-X) NE 999.99)
      ADD CASH-VALUE(NAS-X) TO CASH-VALUE-PN
    END-IF
*   CHECK-LOAN-CASH-END.
    COMPUTE TOT-LOAN-INT = X-LOAN-AMOUNT(NAS-X) + X-ACCUM-INTEREST(NAS-X)
    COMPUTE TOT-LOAN-INT = TOT-LOAN-INT + X-LOAN-AMOUNT-2(NAS-X) + X-ACCUM-INTEREST-2(NAS-X)
    IF CASH-VALUE-PN < TOT-LOAN-INT
      MOVE TOT-LOAN-INT TO P05PN.CASH-AVAIL
      SUBTRACT CASH-VALUE-PN FROM P05PN.CASH-AVAIL
    END-IF
*
    MOVE TRUE TO ESC-TOP
    ESCAPE BOTTOM

*   CHECK-LOAN-CASH-EXIT.
****************************************************************
*          ACCUMULATE LOAN FORECAST TOTALS                     *
*                                                              *
*     TOTALS ACCUMULATED HERE WILL BE PUT ON A LOAN-REG-TOTAL  *
*     RECORD IN THIS SUBROUTINE TO BE USED IN ATHP10P5.        *
****************************************************************
  END-REPEAT
  IF ESC-TOP
    MOVE FALSE TO ESC-TOP
    ESCAPE TOP
  ELSE
    ESCAPE BOTTOM (EXCP-LOOP.)
  END-IF
END-REPEAT /* (EXCP-LOOP.)
**
RESET NAS-X
RESET SU
CHECK-FORECAST-LOOP.
REPEAT
  GOTO-CHECK-FORECAST-EXIT.
  REPEAT
    ADD 1 TO NAS-X
    MOVE NAS-X TO OWN-X
    IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
      ESCAPE BOTTOM (GOTO-CHECK-FORECAST-EXIT.)
    END-IF
    IF STATUS(NAS-X) NE 'D' OR PAY-STATUS(NAS-X) = '44' OR
*       (PLAN(NAS-X) = 'RT' OR = 'LT' OR = 'SO' OR = 'FSO') OR      /* YK3
*       (PLAN-A1(NAS-X) GE 'U' AND PLAN-A1(NAS-X) LE 'Z')           /* YK3
        (PLAN(NAS-X) = 'SO' OR = 'FSO') OR                          /* YK3
        FUNCTION-TERM-POLICY(<PLAN(NAS-X)>)                        /* YK3
      ESCAPE TOP
    END-IF
    IF ISSUE-DATE(NAS-X) < 19910409 OR
        (ISSUE-DATE(NAS-X) GE 19910409 AND LAST-DURATION(NAS-X) > 1) OR
        (ISSUE-DATE(NAS-X) GE 19970101 AND MONTH-ALLOC-AMT(NAS-X) NE 999.99)
      COMPUTE TOT-MAX-LNS-TODAY = TOT-MAX-LNS-TODAY + (CASH-VALUE(NAS-X) * .75)
    END-IF
    RESET TOT-MAX-LNS-NXT-YR
    IF CASH-VALUE(NAS-X) NE 0
      ADD 1 TO SU
    END-IF
    ESCAPE BOTTOM (GOTO-CHECK-FORECAST-EXIT.)
  END-REPEAT /* (GOTO-CHECK-FORECAST-EXIT.)
*   CHECK-FORECAST-EXIT.
  IF SU > 0
    ADD 1 TO TOT-MBS-ELIG-LNS
  END-IF
*****************************************************************
*          CHECK FOR LINE TO PAY UP
*****************************************************************
**  RESET NAS-X /* moved to start of next loop SAG-AB 20060221
  ESCAPE BOTTOM
END-REPEAT
*
RESET NAS-X     /* moved from end of previous loop SAG-AB 20060221
GOTO-END-PAID-UP.
REPEAT
  X17.
  REPEAT
    GOTO-TEST-OL.
    REPEAT
      TEST-FOR-PAID-UP.
      REPEAT
        ADD 1 TO NAS-X
        IF NAS-X > P05PN.I-NEW-ACTIVE-SEG
          ESCAPE BOTTOM (GOTO-END-PAID-UP.)
        END-IF
        IF (STATUS(NAS-X) NE 'D')
*           OR (PLAN(NAS-X) = 'RT') OR (PLAN(NAS-X) = 'LT')                          /* YK3
*           OR ((PLAN-A1(NAS-X) GE 'U') AND (PLAN-A1(NAS-X) LE 'Z'))                 /* YK3
            OR FUNCTION-TERM-POLICY(<PLAN(NAS-X)>)                                   /* YK3
            OR (PLAN(NAS-X) = 'SO') OR (PLAN(NAS-X) = 'FSO')
          ESCAPE TOP
        END-IF
        IF ((PAY-STATUS(NAS-X) = '47') OR (PAY-STATUS(NAS-X) = '48'))
            AND ((ONLINE-ACTION(NAS-X) = '2')  OR (ONLINE-ACTION(NAS-X) = '3')
            OR (ONLINE-ACTION(NAS-X) = '4') OR (ONLINE-ACTION(NAS-X) = 'N'))
          ESCAPE BOTTOM
        END-IF
        IF PAY-STATUS(NAS-X) > V-42
          ESCAPE TOP
        END-IF
        IF PLAN(NAS-X) = 'OL ' OR = 'GPL' OR = 'GP2'                /* DW34  YK6
          ESCAPE BOTTOM (GOTO-TEST-OL.)
        END-IF
        IF NOT ((PLAN-SUF-A1(NAS-X) = 'F' OR = 'P') OR (PLAN-SUF-A2(NAS-X) = 'F' OR = 'P'))
          ESCAPE TOP
        END-IF
        MOVE #C-RUN-DT-YYYYMMDD TO WORK-DATE-YYYYMMDD
        SUBTRACT 1 FROM WORK-DATE-MM
        IF WORK-DATE-MM < 1
          ADD 12 TO WORK-DATE-MM
          SUBTRACT 1 FROM WORK-DATE-YYYY
        END-IF
        IF PLAN-SUF-A2(NAS-X) = 'PF' OR PLAN-SUF-A2(NAS-X) = 'P'
          SUBTRACT PLAN-N1(NAS-X) FROM WORK-DATE-YYYY
        ELSE
          SUBTRACT PLAN-N2(NAS-X) FROM WORK-DATE-YYYY
        END-IF
        MOVE WORK-DATE-YYYYMMDD TO PAY-UP-LOW
        MOVE #C-RUN-DT-YYYYMMDD TO WORK-DATE-YYYYMMDD
        IF PLAN-SUF-A2(NAS-X) = 'PF' OR PLAN-SUF-A2(NAS-X) = 'P'
          SUBTRACT PLAN-N1(NAS-X) FROM WORK-DATE-YYYY
        ELSE
          SUBTRACT PLAN-N2(NAS-X) FROM WORK-DATE-YYYY
        END-IF
        MOVE WORK-DATE-YYYYMMDD TO PAY-UP-HIGH
        IF NOT (ISSUE-DATE(NAS-X) > PAY-UP-LOW AND ISSUE-DATE(NAS-X) LE PAY-UP-HIGH)
          ESCAPE TOP
        END-IF
        ESCAPE BOTTOM
      END-REPEAT
*
*    MOV-7-TO-ONL-ACTION.
      MOVE '7' TO ONLINE-ACTION(NAS-X)
      IF NOT (ONLINE-ACTION-GN = '1' OR = '2' OR = '3')
        MOVE '4' TO ONLINE-ACTION-GN
        ESCAPE TOP /* TEST-FOR-PAID-UP
      END-IF
*
      ESCAPE BOTTOM (GOTO-TEST-OL.)
    END-REPEAT /* (GOTO-TEST-OL.)
*
*****************************************************************
*                T E S T - O L                                  *
*****************************************************************
*
*   TEST-OL.
    IF NOT (DOB-YYYY = AGE-96-YEAR-THIS-MO AND DOB-MM = AGE-96-MONTH-THIS-MO AND DOB-DD = 01)
      IF NOT (DOB-YYYY = AGE-96-YEAR-LAST-MO AND DOB-MM = AGE-96-MONTH-LAST-MO AND DOB-DD > 01)
        ESCAPE TOP /* TEST-FOR-PAID-UP
      END-IF
    END-IF
    ADD 1 TO VA-AGE-96
    MOVE '7' TO ONLINE-ACTION(NAS-X)
    IF NOT (ONLINE-ACTION-GN = '1' OR = '2' OR = '3')
      MOVE '4' TO ONLINE-ACTION-GN
    END-IF
*
  END-REPEAT /* (X17.)
  ESCAPE BOTTOM (GOTO-END-PAID-UP.)
END-REPEAT /* (GOTO-END-PAID-UP.)
*
RESET RETURN-SW
PERFORM END-WITH-NO-WRITE
*
********************************************************************************
DEFINE SUBROUTINE END-WITH-NO-WRITE
********************************************************************************
*
MOVE 2 TO #C-OUTGOING-FLAG
ESCAPE MODULE
END-SUBROUTINE
*
********************************************************************************
DEFINE SUBROUTINE END-WITH-WRITE
********************************************************************************
*
RESET #C-OUTGOING-FLAG
MOVE TIN1-PN/ALPHA TO #C-REPORT-RECORD
ESCAPE MODULE
END-SUBROUTINE
*
********************************************************************************
DEFINE SUBROUTINE END-WITH-MORE-WRITE
********************************************************************************
MOVE 1 TO #C-OUTGOING-FLAG
MOVE TIN1-PN/ALPHA TO #C-REPORT-RECORD
ESCAPE MODULE
END-SUBROUTINE
*
********************************************************************************
DEFINE SUBROUTINE AUTO-APL-2
********************************************************************************
MOVE '1' TO TIN1-PN-COL
RESET TIN1-PN-DEBIT
*
if plan(nas-x) = 'GPL'            /* vt4 \/
  if x-loan-amount (nas-x) = 0
    perform auto-apl-3
  else
    move edited #cur-fix-gpl-int-rt (em=99.99) to tin1-pn-intrt
    move x-loan-amount(nas-x) to tin1-pn-credit
    move x-loan-amount(nas-x) to sg-amt
    move 'IRT' TO TIN1-PN-DSC1
    move '110' TO TIN1-PN-ACCTNO
    move 'ADDL' TO TIN1-PN-TRAN
    move TIN1-PN-TRAN TO SG-TRAN
    MOVE '**' TO SG-YEAR SG-PLAN
    PERFORM SG-LOOP
    MOVE 3 TO RETURN-SW
    PERFORM END-WITH-MORE-WRITE
  end-if
else
  IF X-LOAN-AMOUNT-2(NAS-X) = 0
    PERFORM AUTO-APL-3
  else
    MOVE EDITED CUR-VAR-INT-RT (EM=99.99) TO TIN1-PN-INTRT  /* SAG-AB 20060823
    MOVE X-LOAN-AMOUNT-2(NAS-X) TO TIN1-PN-CREDIT
    MOVE X-LOAN-AMOUNT-2(NAS-X) TO SG-AMT
    MOVE 'IRT' TO TIN1-PN-DSC1
    MOVE '110' TO TIN1-PN-ACCTNO
    MOVE 'ADDL' TO TIN1-PN-TRAN
    MOVE TIN1-PN-TRAN TO SG-TRAN
    MOVE '**' TO SG-YEAR SG-PLAN
    PERFORM SG-LOOP
    MOVE 3 TO RETURN-SW
    PERFORM END-WITH-MORE-WRITE
  end-if
end-if                                                  /* vt4 /\
*
END-SUBROUTINE

********************************************************************************
DEFINE SUBROUTINE AUTO-APL-3
********************************************************************************
MOVE '2' TO TIN1-PN-COL
RESET TIN1-PN-DEBIT
if plan(nas-x) = 'GPL'                 /* vt4 \/
  if x-accum-interest(nas-x) = 0
    perform auto-apl-4
  else
    move edited #cur-fix-gpl-int-rt(em=99.99) to tin1-pn-intrt
    move x-accum-interest(nas-x) to tin1-pn-credit
    move 'INTF' to sg-tran
    move x-accum-interest(nas-x) to sg-amt
    move '**' to sg-year sg-plan
    perform sg-loop
    move 'IRT' to tin1-pn-dsc1
    MOVE '410' TO TIN1-PN-ACCTNO
    MOVE 'ADDL' TO TIN1-PN-TRAN
    MOVE 4 TO RETURN-SW
    PERFORM END-WITH-MORE-WRITE
  end-if
else                                                  /* vt4 /\
  IF X-ACCUM-INTEREST-2(NAS-X) = 0
    PERFORM AUTO-APL-4
  else
    MOVE EDITED CUR-VAR-INT-RT (EM=99.99) TO TIN1-PN-INTRT  /* SAG-AB 20060823
    MOVE X-ACCUM-INTEREST-2(NAS-X) TO TIN1-PN-CREDIT
    MOVE 'INTV' TO SG-TRAN
    MOVE X-ACCUM-INTEREST-2(NAS-X) TO SG-AMT
    MOVE '**' TO SG-YEAR SG-PLAN
    PERFORM SG-LOOP
    MOVE 'IRT' TO TIN1-PN-DSC1
    MOVE '410' TO TIN1-PN-ACCTNO
    MOVE 'ADDL' TO TIN1-PN-TRAN
    MOVE 4 TO RETURN-SW
    PERFORM END-WITH-MORE-WRITE
  end-if                                              /* vt4
end-if
*
END-SUBROUTINE

********************************************************************************
DEFINE SUBROUTINE AUTO-APL-4
********************************************************************************
MOVE '3' TO TIN1-PN-COL
RESET TIN1-PN-CREDIT
*
if plan(nas-x) = 'GPL'                   /* vt4 \/
  if x-accum-interest(nas-x) = 0 and x-loan-amount(nas-x) = 0
    x-interest-rate(nas-x) := #cur-fix-gpl-int-rt
    move 'NEWL' to tin1-pn-tran
  else
    move 'ADDL' to tin1-pn-tran
  end-if
  compute x-loan-amount(nas-x) = x-loan-amount(nas-x) +
    mode-money-needed + x-accum-interest(nas-x)
  move nas-x to f-loan-x
  compute #fix-addl-loan(f-loan-x) = #fix-addl-loan(f-loan-x) +
    mode-money-needed + x-accum-interest(nas-x)
  move tin1-pn-tran to sg-tran
  move '**' to sg-year sg-plan
  compute sg-amt = x-loan-amount(nas-x) * -1
  perform sg-loop
  if x-accum-interest(nas-x) gt 0
    add x-accum-interest(nas-x) to x-cap-amt(nas-x)
  end-if
  reset x-interest-received(nas-x) x-bill-interest-amt(nas-x) x-bill-sw(nas-x)
    mode-money-needed x-accum-interest(nas-x) x-nxt-yr-accum-int(nas-x)
  move #c-run-dt-yyyymmdd to x-loan-date (nas-x)
  move x-loan-amount(nas-x) to tin1-pn-debit
  move edited #cur-fix-gpl-int-rt (em=99.99) to tin1-pn-intrt
else                                    /* vt4 /\
  IF X-ACCUM-INTEREST-2(NAS-X) = 0 AND X-LOAN-AMOUNT-2(NAS-X) = 0
    MOVE 'NEWL' TO TIN1-PN-TRAN
  ELSE
    MOVE 'ADDL' TO TIN1-PN-TRAN
  END-IF
  COMPUTE X-LOAN-AMOUNT-2(NAS-X) = X-LOAN-AMOUNT-2(NAS-X) +
    MODE-MONEY-NEEDED + X-ACCUM-INTEREST-2(NAS-X)
  MOVE NAS-X TO V-LOAN-X
  COMPUTE #VAR-ADDL-LOAN(V-LOAN-X) = #VAR-ADDL-LOAN(V-LOAN-X) +
    MODE-MONEY-NEEDED + X-ACCUM-INTEREST-2(NAS-X)
  MOVE TIN1-PN-TRAN TO SG-TRAN
  MOVE '**' TO SG-YEAR SG-PLAN
  COMPUTE SG-AMT = X-LOAN-AMOUNT-2(NAS-X) * -1
  PERFORM SG-LOOP
  IF X-ACCUM-INTEREST-2(NAS-X) > 0
    ADD X-ACCUM-INTEREST-2(NAS-X) TO X-CAP-AMT-2(NAS-X)
  END-IF
  RESET X-INTEREST-RECEIVED-2(NAS-X)  X-BILL-INTEREST-AMT-2(NAS-X) X-BILL-SW-2(NAS-X)
    MODE-MONEY-NEEDED X-ACCUM-INTEREST-2(NAS-X)   X-NXT-YR-ACCUM-INT-2(NAS-X)
  MOVE #C-RUN-DT-YYYYMMDD TO X-LOAN-DATE-2(NAS-X)
  MOVE X-LOAN-AMOUNT-2(NAS-X) TO TIN1-PN-DEBIT
* MOVE 'IRT' TO TIN1-PN-DSC1                            /* vt4
**MOVE CUR-VAR-INT-RT TO TIN1-PN-INTRT                  /* SAG-AB 20060823
  MOVE EDITED CUR-VAR-INT-RT (EM=99.99) TO TIN1-PN-INTRT  /* SAG-AB 20060823
end-if
MOVE 'IRT' TO TIN1-PN-DSC1                                 /* vt4
MOVE '110' TO TIN1-PN-ACCTNO
MOVE 5 TO RETURN-SW
PERFORM END-WITH-MORE-WRITE
END-SUBROUTINE

********************************************************************************
DEFINE SUBROUTINE ALP-CHECK-INTEREST
********************************************************************************
IF CONV-DURATION(NAS-X) = 999
  MOVE 'CAP MBR' TO TIN1-PN-DESC/ALPHA
ELSE
  MOVE ISSUE-DATE(NAS-X) TO TIN1-PN-DESC/ALPHA
END-IF
IF ALT-INT-AMT > 0
  MOVE NAME TO TIN1-PN-NAME
  MOVE ID-NUMBER TO TIN1-PN-ID
  RESET TIN1-PN-ACCT
  MOVE DAU-YY TO WD-YY
  MOVE DAU-MM TO WD-MM
  MOVE DAU-DD TO WD-DD
  MOVE WORK-DATE-MMDDYY TO TIN1-PN-LTRANDT
  MOVE #C-RUN-DT-YYYYMMDD TO DATE-ACCT-UPDATE
  RESET TIN1-PN-COL TIN1-PN-DEBIT
  MOVE ALT-INT-AMT TO TIN1-PN-CREDIT
  MOVE '410' TO TIN1-PN-ACCTNO
  MOVE 'INTF' TO TIN1-PN-TRAN
  MOVE 62 TO RETURN-SW
  MOVE X-ALT-LP-IND(NAS-X) TO TIN1-PN-AALP-CD
  IF X-ALT-LP-IND(NAS-X) = '1' OR X-ALT-LP-IND(NAS-X) = '2'
    ADD ALT-INT-AMT TO ALP-ALOT-INT
    MOVE 'AIP GEN' TO TIN1-PN-REF
    PERFORM END-WITH-MORE-WRITE
  ELSE
    ADD ALT-INT-AMT TO ALP-EZPAY-INT
    MOVE 'EIP GEN' TO TIN1-PN-REF
    PERFORM END-WITH-MORE-WRITE
  END-IF
END-IF
*
RESET TIN1-PN-DESC   TIN1-PN-AALP-CD
*
END-SUBROUTINE

********************************************************************************
DEFINE SUBROUTINE ALP-CHECK-INTEREST-2
********************************************************************************
IF ALT-INT-AMT > 0
  MOVE NAME TO TIN1-PN-NAME
  MOVE ID-NUMBER TO TIN1-PN-ID
  RESET TIN1-PN-ACCT
  MOVE ISSUE-DATE(NAS-X) TO TIN1-PN-DESC/ALPHA
  MOVE DAU-YY TO WD-YY
  MOVE DAU-MM TO WD-MM
  MOVE DAU-DD TO WD-DD
  MOVE WORK-DATE-MMDDYY TO TIN1-PN-LTRANDT
  MOVE #C-RUN-DT-YYYYMMDD TO DATE-ACCT-UPDATE
  RESET TIN1-PN-COL      TIN1-PN-DEBIT
  MOVE ALT-INT-AMT TO TIN1-PN-CREDIT
  MOVE '410' TO TIN1-PN-ACCTNO
  MOVE 'INTV' TO TIN1-PN-TRAN
  MOVE 64 TO RETURN-SW
  MOVE X-ALT-LP-IND-2(NAS-X) TO TIN1-PN-AALP-CD
  IF X-ALT-LP-IND-2(NAS-X) = '1' OR X-ALT-LP-IND-2(NAS-X) = '2'
    ADD ALT-INT-AMT TO ALP-ALOT-INT
    MOVE 'AIP GEN' TO TIN1-PN-REF
    PERFORM END-WITH-MORE-WRITE
  ELSE
    ADD ALT-INT-AMT TO ALP-EZPAY-INT
    MOVE 'EIP GEN' TO TIN1-PN-REF
    PERFORM END-WITH-MORE-WRITE
  END-IF
END-IF
*
END-SUBROUTINE

********************************************************************************
DEFINE SUBROUTINE FORM-ERROR-MESSAGE
********************************************************************************
IF EPR-X = 5
  ESCAPE ROUTINE
END-IF
ADD 1 TO EPR-X
**MOVE ID-NUMBER TO #C-E-ID(EPR-X)                  /* SAG-AB 20060919
MOVE EDITED ID-NUMBER (EM=999999) TO #C-E-ID(EPR-X) /* SAG-AB 20060919
MOVE NAME TO #C-E-NAME(EPR-X)
MOVE RANK TO #C-E-RANK(EPR-X)
MOVE MILITARY-STATUS TO #C-E-RETIRED(EPR-X)
MOVE EMESS TO #C-E-MESSAGE(EPR-X)
*
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*          C A L C - M O D E - P R E M I U M                    *
*                                                               *
*****************************************************************
*
********************************************************************************
DEFINE SUBROUTINE CALC-MODE-PREMIUM
********************************************************************************
IF PAD-CODE = 'V' OR = 'W' OR = 'X' OR = 'Z'
  MOVE 12 TO W-MODE
ELSE
  IF MODE(NAS-X) = 'A' OR = '1'
    MOVE 1 TO W-MODE
  ELSE
    IF MODE(NAS-X) = 'S' OR = '2'
      MOVE 2 TO W-MODE
    ELSE
      IF MODE(NAS-X) = 'Q' OR = '4'
        MOVE 4 TO W-MODE
      ELSE
        MOVE 12 TO W-MODE
      END-IF
    END-IF
  END-IF
END-IF
COMPUTE W-MODE-PREMIUM = ANNUAL-PREM(NAS-X) / W-MODE
* YK5 Special processing for EZ Term - $1 Less monthly
IF PLAN(NAS-X) = #EZ-TERM AND (MODE(NAS-X) = 'E' OR = 'G')
  W-MODE-PREMIUM := W-MODE-PREMIUM - 1
END-IF
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*          C A L C - D U E S - P A Y M E N T                    *
*                                                               *
*****************************************************************
*
********************************************************************************
DEFINE SUBROUTINE CALC-DUES
********************************************************************************
*
RESET P05PN.SVC-FEE
IF ISSUE-DATE(NAS-X) < 19970101 OR
    MONTH-ALLOC-AMT(NAS-X) = 999.99 OR
    (INTRO-FLAG = 'S' OR = 'K' OR = 'G' OR = 'O' OR = 'P' OR = 'Q') OR
    DUES-ALL-PAID-IND = 'Y' OR NAS-X NE FIRST-ACTIVE-PN
  ESCAPE ROUTINE
END-IF
IF PLAN(NAS-X) = '2P'
  MOVE SVC-FEE-2P TO P05PN.SVC-FEE
END-IF
IF PLAN(NAS-X) = '3P'
  MOVE SVC-FEE-3P TO P05PN.SVC-FEE
END-IF
IF PLAN(NAS-X) = '4P'
  MOVE SVC-FEE-4P TO P05PN.SVC-FEE
END-IF
IF PLAN(NAS-X) = '5P'
  MOVE SVC-FEE-5P TO P05PN.SVC-FEE
END-IF
IF PLAN(NAS-X) = '6P'
  MOVE SVC-FEE-6P TO P05PN.SVC-FEE
END-IF
IF PLAN(NAS-X) = '7P'
  MOVE SVC-FEE-7P TO P05PN.SVC-FEE
END-IF
IF PLAN(NAS-X) = '8P'
  MOVE SVC-FEE-7P TO P05PN.SVC-FEE
END-IF
IF PLAN(NAS-X) = '9P'
  MOVE SVC-FEE-7P TO P05PN.SVC-FEE
END-IF
IF PLAN(NAS-X) = 'OL' OR = 'GPL' OR = 'GP2'           /* DW34   YK6
  MOVE SVC-FEE-OL TO P05PN.SVC-FEE
END-IF
* IF PLAN(NAS-X) = 'LT'                                         /* YK3 Start
*   MOVE SVC-FEE-TM TO P05PN.SVC-FEE
* END-IF
* IF PLAN(NAS-X) = 'RT'
*   MOVE SVC-FEE-TM TO P05PN.SVC-FEE
* END-IF
* IF PLAN-A1(NAS-X) GE 'U' AND PLAN-A1(NAS-X) LE 'Z'
*   MOVE SVC-FEE-TM TO P05PN.SVC-FEE
* END-IF                                                         /* YK3 end
IF FUNCTION-TERM-POLICY(<PLAN(NAS-X)>)                           /* YK3
  MOVE SVC-FEE-TM TO P05PN.SVC-FEE                               /* YK3
END-IF                                                           /* YK3
IF P05PN.SVC-FEE NE 0
  COMPUTE P05PN.SVC-FEE = (P05PN.SVC-FEE * 12) / W-MODE
  ESCAPE ROUTINE
END-IF
IF PLAN(NAS-X) GE '10F' AND PLAN(NAS-X) LE '19P'
  MOVE SVC-FEE-10 TO P05PN.SVC-FEE
END-IF
IF PLAN(NAS-X) GE '20F' AND PLAN(NAS-X) LE '29P'
  MOVE SVC-FEE-20 TO P05PN.SVC-FEE
END-IF
IF PLAN(NAS-X) GE '30F' AND PLAN(NAS-X) LE '34P'
  MOVE SVC-FEE-30 TO P05PN.SVC-FEE
END-IF
IF PLAN(NAS-X) GE '35F' AND PLAN(NAS-X) LE '99P'
  MOVE SVC-FEE-OL TO P05PN.SVC-FEE
END-IF
*
COMPUTE P05PN.SVC-FEE = (P05PN.SVC-FEE * 12) / W-MODE
*
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*          C A L C - R I D E R - P A Y M E N T                  *
*                                                               *
*****************************************************************
*
********************************************************************************
DEFINE SUBROUTINE CALC-RIDER-MODAL-PREM
********************************************************************************
*
RESET RID-MON-PREM P05PN.RID-AMT-DUE
IF RID-PLAN(NAS-X) = '  ' OR RID-PD-TO-YYYYMM(NAS-X) GE BILL-TO-YYYYMM(NAS-X)
  ESCAPE ROUTINE
END-IF
IF RID-PLAN-1(NAS-X) = 'F'
  COMPUTE RID-MON-PREM = 1.50 * RID-PLAN-2(NAS-X)
END-IF
IF RID-PLAN-1(NAS-X) = 'T'
  COMPUTE RID-MON-PREM = 2.00 * RID-PLAN-2(NAS-X)
END-IF
IF RID-PLAN-1(NAS-X) = 'C'
  COMPUTE RID-MON-PREM = 1.50 * RID-PLAN-2(NAS-X)
END-IF
MOVE RID-PD-TO(NAS-X) TO WORK-DATE-YYYYMMDD
*
ADD-TO-RID-AMT.
REPEAT
  ADD RID-MON-PREM TO P05PN.RID-AMT-DUE
  ADD 1 TO WORK-DATE-MM
  IF WORK-DATE-YYYY > 12
    MOVE 1 TO WORK-DATE-MM
    ADD 1 TO WORK-DATE-YYYY
  END-IF
  IF WORK-DATE-YYYYMM < BILL-TO-YYYYMM(NAS-X)
    ESCAPE TOP
  END-IF
  ESCAPE BOTTOM
END-REPEAT
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE FIND-FST-ACTIVE
*
IF STATUS(SUB-PN) = 'D'
  MOVE SUB-PN TO FIRST-ACTIVE-PN
  MOVE 9 TO SUB-PN
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*     I N I T - V A L U E - A D D E D - P R O C E S S           *
*                                                               *
*****************************************************************
******************************************************
*   INITIALIZE VALUE ADDED PROCESS
******************************************************
********************************************************************************
DEFINE SUBROUTINE INIT-VALUE-ADDED-PROCESS
********************************************************************************
*
MOVE ISSUE-DATE(NAS-X) TO IS-ISS-DATE
MOVE EDITED STATUS-VIEW.ISSUE-AGE(NAS-X) TO IS-ISS-AGE(EM=99)
MOVE FACE-AMOUNT(NAS-X) TO IS-FAC-AMT
MOVE SMOKER-FLAG(NAS-X) TO IS-SMOK-STATUS
IF PAY-STATUS(NAS-X) > '40'
  MOVE 'Y' TO IS-PAID-UP-SW
ELSE
  RESET IS-PAID-UP-SW
END-IF
MOVE LAST-DURATION(NAS-X) TO IS-DURATION
MOVE PLAN(NAS-X) TO IS-TYPE
IF (IS-TYPE-2 = 'P' OR = 'F') AND (NOT IS-TYPE = 'SP' OR = 'GP')   /* DW34
  RESET IS-TYPE-2
END-IF
MOVE '00' TO IS-TYPE-YEARS-XX
IF NOT (IS-TYPE = 'OL' OR = 'SP' OR = 'SO' OR = 'FS' OR = 'GP')    /* DW34
  IF IS-TYPE-2 = ' '
    MOVE IS-TYPE-1 TO IS-TYPE-YEARS-2
  ELSE
    MOVE IS-TYPE TO IS-TYPE-YEARS-XX
  END-IF
END-IF
MOVE ANNUAL-PREM(NAS-X) TO IS-ANN-PREM
*
IF IS-TYPE = 'GP'     /* Get this iss age's 120 cv amts   DW34
  CALLNAT 'GPLN0002' PLAN(NAS-X) IS-ISS-AGE    /* NG2
    #GPL-CVS         (*)
    #GP2-CVS         (*)
  IF PLAN(NAS-X) = 'GP2'
    MOVE #GP2-CVS (*) TO IS-GPL-CVS (*)
  ELSE
    MOVE #GPL-CVS (*) TO IS-GPL-CVS (*)
  END-IF
*   FIND GPL-V WITH ISSUE-AGE = IS-ISS-AGE
*     MOVE PLAN-RATES (*) TO IS-GPL-CVS (*)
* *    write 'is-iss-age=' is-iss-age 'csv=' is-gpl-cvs (*)
*   END-FIND
END-IF
*
IF ISSUE-DATE(NAS-X) < 19860701
  PERFORM CALC-CONV-VALUES
ELSE
  MOVE ACC-CASH-VALUE(NAS-X) TO IS-WORK-BEG-ACV
  MOVE CASH-VALUE(NAS-X) TO IS-WORK-BEG-CSV
  MOVE MIN-CASH-VALUE(NAS-X) TO IS-WORK-BEG-MIN-CSV
  MOVE TOT-PREMIUMS-PAID(NAS-X) TO IS-TOT-PRM-PD
  PERFORM CALC-INIT-VALUES
END-IF
MOVE IS-BEG-MIN-CSV TO IS-MIN-CSV
MOVE IS-BEG-MIN-DB TO IS-MIN-DB
MOVE IS-BEG-CSV TO IS-CSV
MOVE IS-BEG-DB TO IS-DB
MOVE 1 TO IS-CONV-DUR
ADD 1 TO IS-DURATION
*
IF ISSUE-DATE(NAS-X) < 19860701
  MOVE 'C' TO CONVERSION-FLAG(NAS-X) SMOKER-FLAG(NAS-X)
END-IF
MOVE IS-BEG-CSV TO CASH-VALUE(NAS-X) NXT-MON-CASH-VALUE(NAS-X)
MOVE IS-BEG-DB TO DEATH-BENEFIT(NAS-X)
*
RESET MONTH-IND(NAS-X)
MOVE IS-DURATION TO DURATION(NAS-X)
MOVE IS-BEG-MIN-CSV TO MIN-CASH-VALUE(NAS-X)
MOVE IS-NXT-YR-MIN-CSV TO NXT-YR-MIN-CASH-VALUE(NAS-X)
MOVE IS-BEG-DB TO NXT-MON-DEATH-BENEFIT(NAS-X)
IF CONVERSION-FLAG(NAS-X) = 'C'
  MOVE IS-CONV-DUR TO CONV-DURATION(NAS-X)
  MOVE IS-BEG-ACV TO ACC-CASH-VALUE(NAS-X)
  MOVE IS-ALLOC-CRED TO MONTH-ALLOC-AMT(NAS-X)
  MOVE IS-PREM-DEFIC TO PREM-DEFICIENCY(NAS-X)
  RESET BEG-CASH-VALUE(NAS-X)
ELSE
  MOVE IS-BEG-ACV TO ACC-CASH-VALUE(NAS-X)
**                                               SAG-AB 20060711 OVERFLOW WORKAROUND START
  IF IS-NET-PREM-RATIO LE 99.99999
    MOVE IS-NET-PREM-RATIO TO NET-PR-RATIO(NAS-X)
  ELSE
    DIVIDE #ONEC INTO IS-NET-PREM-RATIO GIVING #DUMMY REMAINDER #REMAIN
    MOVE #REMAIN TO NET-PR-RATIO(NAS-X)
  END-IF
**MOVE IS-NET-PREM-RATIO TO NET-PR-RATIO(NAS-X)
**                                               SAG-AB 20060711 OVERFLOW WORKAROUND END
  IF USE-X-CALCS = 'Y'
*     IF IS-INIT-ACQ GE 999.99                      /* NG99
*       MOVE 999.98 TO MONTH-ALLOC-AMT(NAS-X)
*       USE-X-CALCS := 'N'
*     ELSE
*       MOVE IS-INIT-ACQ TO MONTH-ALLOC-AMT(NAS-X)
*     END-IF
    MOVE IS-INIT-ACQ TO MONTH-ALLOC-AMT(NAS-X)
    MOVE IS-MON-AMORT-ACQ TO PREM-DEFICIENCY(NAS-X)
    RESET BEG-CASH-VALUE(NAS-X)
  END-IF
END-IF
**IF IS-TYPE = 'AL'
IF IS-ANNUITY-LIFE (< IS-TYPE >)  /* NG4
  MOVE IS-NXT-CONT-FUND TO BEG-CASH-VALUE(NAS-X)
  MOVE IS-BEG-ACV TO CASH-VALUE(NAS-X) NXT-MON-CASH-VALUE(NAS-X)
  MOVE IS-BEG-MCV-AL TO MIN-CASH-VALUE(NAS-X) NXT-YR-MIN-CASH-VALUE(NAS-X)
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*    F I N D - C U R R E N T - M O N T H - I N D                *
*     FIND CURRENT MONTH INDICATOR FOR MONTHLY CATCH UP
*****************************************************************
*
********************************************************************************
DEFINE SUBROUTINE FIND-CURRENT-MONTH-IND
********************************************************************************
*
MOVE ISSUE-DATE-MM(NAS-X) TO WD-MM
MOVE ISSUE-DATE-DD(NAS-X) TO WD-DD
RESET WORK-MONTH-IND
MOVE #C-RUN-DT-YYYY TO WORK-YYYY
MOVE #C-RUN-DT-MM TO WORK-MONTH  WORK-MONTH-LAST
SUBTRACT 1 FROM WORK-MONTH-LAST
IF WORK-MONTH-LAST = 0
  MOVE 12 TO WORK-MONTH-LAST
END-IF
*
FIND-CUR-MON-LOOP.
REPEAT
  IF WD-MM = WORK-MONTH
    ESCAPE ROUTINE
  END-IF
  ADD 1 TO WORK-MONTH-IND
  SUBTRACT 1 FROM WORK-MONTH
  IF WORK-MONTH = 0
    MOVE 12 TO WORK-MONTH
    SUBTRACT 1 FROM WORK-YYYY
  END-IF
  SUBTRACT 1 FROM WORK-MONTH-LAST
  IF WORK-MONTH-LAST = 0
    MOVE 12 TO WORK-MONTH-LAST
  END-IF
  ESCAPE TOP
END-REPEAT
*
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*       B U I L D - V A - H I S T O R Y - R E C                 *
*                                                               *
*****************************************************************
*********************************************
*     BUILD VALUE ADDED HISTORY RECORD
*********************************************
*
********************************************************************************
DEFINE SUBROUTINE BUILD-VA-HISTORY-REC
********************************************************************************
*
RESET VA-HISTORY-RECORD
MOVE ID-NUMBER TO IH-ID-ACCT-NO
MOVE ISSUE-DATE(NAS-X) TO IH-ISSUE-DATE
MOVE SPLIT-IND(NAS-X) TO IH-SPLIT-IND
MOVE PLAN(NAS-X) TO IH-PLAN
MOVE STATUS-VIEW.ISSUE-AGE(NAS-X) TO IH-ISSUE-AGE
IF CONVERSION-FLAG(NAS-X) = 'C'
  MOVE IS-ALLOC-CRED TO IH-MNTH-ALLOC-AMT
  MOVE IS-PREM-DEFIC TO IH-PREM-DEFIC
  RESET IH-NET-PREM-RATIO
ELSE
  RESET IH-MNTH-ALLOC-AMT IH-PREM-DEFIC
**                                              SAG-AB 20060711 OVERFLOW WORKAROUND START
  IF IS-NET-PREM-RATIO LE 99.99999
    MOVE IS-NET-PREM-RATIO TO IH-NET-PREM-RATIO
  ELSE
    DIVIDE #ONEC INTO IS-NET-PREM-RATIO GIVING #DUMMY REMAINDER #REMAIN
    MOVE #REMAIN TO IH-NET-PREM-RATIO
  END-IF
**MOVE IS-NET-PREM-RATIO TO IH-NET-PREM-RATIO
**                                              SAG-AB 20060711 OVERFLOW WORKAROUND END
  IF USE-X-CALCS = 'Y'
    MOVE IS-MON-AMORT-ACQ TO IH-PREM-DEFIC
    MOVE IS-CURR-ACQ TO IH-MNTH-ALLOC-AMT
  END-IF
END-IF
IF ONLINE-ACTION(NAS-X) = '1' OR ONLINE-ACTION-GN = '2'
  MOVE ISSUE-DATE-YYYY(NAS-X) TO IS-DATE-YYYY
  MOVE ISSUE-DATE-MM(NAS-X) TO IS-DATE-MM
ELSE
  IF CONVERSION-FLAG(NAS-X) = 'C'
    MOVE 1986 TO IS-DATE-YYYY
    MOVE ISSUE-DATE-MM(NAS-X) TO IS-DATE-MM
  ELSE
    MOVE ISSUE-DATE-YYYY(NAS-X) TO IS-DATE-YYYY
    MOVE ISSUE-DATE-MM(NAS-X) TO IS-DATE-MM
  END-IF
END-IF
SUBTRACT 01 FROM IS-DATE-MM
IF IS-DATE-MM = 00
  MOVE 12 TO IS-DATE-MM
  SUBTRACT 01 FROM IS-DATE-YYYY
END-IF
MOVE IS-DATE-YYYYMM TO IH-PRV-ANN-DATE
MOVE IS-DATE-YYYYMM TO VA-RUN-DATE-WORK
* write 'ln 6042 create a hist rec for' va-run-date-work 'prem=' HLD-ACV-PREM-ADJ
MOVE IS-BEG-ACV TO IH-PRV-ACCUM-CASH-VALUE
MOVE IS-BEG-CSV TO IH-PRV-CASH-VALUE
MOVE IS-BEG-DB TO IH-PRV-DEATH-BENE
MOVE X-LOAN-AMOUNT(NAS-X) TO IH-PRV-PRORAT-LOAN-BAL
IF X-LOAN-AMOUNT-2(NAS-X) > 99999.99
  ADD 99999.99 TO IH-PRV-PRORAT-LOAN-BAL
ELSE
  ADD X-LOAN-AMOUNT-2(NAS-X) TO IH-PRV-PRORAT-LOAN-BAL
END-IF
MOVE X-ACCUM-INTEREST(NAS-X) TO IH-PRV-PRORAT-LN-ACC-INT
ADD X-ACCUM-INTEREST-2(NAS-X) TO IH-PRV-PRORAT-LN-ACC-INT
RESET IH-2AGO-ANN-DATE IH-2AGO-CASH-VALUE IH-ETI-DATE IH-ETI-ACCUM-CASH-VALUE
  IH-ETI-CASH-VALUE IH-ETI-DEATH-BENE IH-ETI-LOAN-VALUE IH-TM-DATE
MOVE DURATION(NAS-X) TO IH-CUR-DURATION
MOVE CONV-DURATION(NAS-X) TO IH-CUR-CONV-DUR
PERFORM INIT-MNTH-HIST
MOVE IS-SMOK-STATUS TO IH-SMOKER-FLAG (13)           /* SAG 12/23/2005 DW8
MOVE IS-DATE-YYYYMM TO IH-YEAR-MONTH(13)
RESET IH-MONTH-IND(13)
MOVE IS-BEG-ACV TO IH-ACCUM-CASH-VALUE(13)
MOVE IS-BEG-CSV TO IH-CASH-VALUE(13)
IF USE-X-CALCS = 'Y'
  COMPUTE AVL-TDIV = BEG-CASH-VALUE(NAS-X) - MONTH-ALLOC-AMT(NAS-X)
  IF AVL-TDIV < 0
    RESET AVL-TDIV
  END-IF
  IF ID-NUMBER = 124156 AND ISSUE-DATE(NAS-X) = 20040413 AND
      DEATH-BENEFIT(NAS-X) = 226000
    MOVE 10150.58 TO AVL-TDIV
  END-IF
  COMPUTE IH-DEATH-BENE(13) = IS-BEG-DB + AVL-TDIV
ELSE
  MOVE IS-BEG-DB TO IH-DEATH-BENE(13)
END-IF
RESET IH-PREMIUM(13) IH-COI(13) IH-INTEREST(13)
**                                     SAG-AB 20060313 workaround start
* IF HLD-ACV-PREM-ADJ LE 999.99          /* P7.2 to P5.2  NG1
IH-PREMIUM (13) := HLD-ACV-PREM-ADJ
* ELSE
*   DIVIDE #ONEK INTO HLD-ACV-PREM-ADJ GIVING #DUMMY REMAINDER IH-PREMIUM (13)
* END-IF
IF HLD-ACV-INT-ADJ LE 99999.99         /* p7.2 to P5.2
  IH-INTEREST (13) := HLD-ACV-INT-ADJ
ELSE
  DIVIDE #ONEK INTO HLD-ACV-INT-ADJ GIVING #DUMMY REMAINDER IH-INTEREST (13)
END-IF
* IF HLD-ACV-COI-ADJ GE -999.99 AND HLD-ACV-COI-ADJ LE 999.99 /* p7.2 to P3.2   NG1   \/
IH-COI (13) := HLD-ACV-COI-ADJ
* ELSE
*   DIVIDE #ONEK INTO HLD-ACV-COI-ADJ GIVING #DUMMY REMAINDER IH-COI (13)
* END-IF                                                                        NG1   /\
**************************************
**ADD HLD-ACV-PREM-ADJ TO IH-PREMIUM(13)
**ADD HLD-ACV-INT-ADJ TO IH-INTEREST(13)
**ADD HLD-ACV-COI-ADJ TO IH-COI(13)
**************************************
**                                      SAG-AB 20060313 workaround end
RESET HLD-ACV-PREM-ADJ HLD-ACV-INT-ADJ HLD-ACV-COI-ADJ HLD-ACV-COI-ADJ
  IH-PRORAT-LOAN-BAL(13) IH-PRORAT-LN-ACC-INT(13)
IF USE-X-CALCS NE 'Y'
  MOVE X-LOAN-AMOUNT(NAS-X) TO IH-PRV-PRORAT-LOAN-BAL
  IF X-LOAN-AMOUNT-2(NAS-X) > 99999.99
    ADD 99999.99 TO IH-PRV-PRORAT-LOAN-BAL
  ELSE
    ADD X-LOAN-AMOUNT-2(NAS-X) TO IH-PRV-PRORAT-LOAN-BAL
  END-IF
  MOVE X-ACCUM-INTEREST(NAS-X) TO IH-PRV-PRORAT-LN-ACC-INT
  ADD X-ACCUM-INTEREST-2(NAS-X) TO IH-PRV-PRORAT-LN-ACC-INT
END-IF
PERFORM MONTHLY-13-TO-YEARLY-14-MOVES
ADD 1 TO #ISH-NUMBER-RECORDS
MOVE #ISH-NUMBER-RECORDS TO HLD-ISH-X
** SAG  12/23/2005 DW8 START
** MOVE VA-HISTORY-RECORD TO ISH-RECORD (HLD-ISH-X)
MOVE VA-MONTHLY-HIST-DATA-STR TO #ISH-MONTHLY-HIST-HDR-A (HLD-ISH-X)
MOVE VA-MONTHLY-HIST-STR      TO #ISH-MONTHLY-HIST-A (HLD-ISH-X)
MOVE VA-MONTHLY-HIST-B-STR    TO #ISH-MONTHLY-HIST-B-A (HLD-ISH-X)
MOVE VA-YEARLY-HIST-STR       TO #ISH-YEARLY-HIST-A (HLD-ISH-X)
** SAG  12/23/2005 DW8 END
RESET #ISH-ISN(HLD-ISH-X)
*
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*         I N I T - M N T H - H I S T                           *
*                                                               *
*****************************************************************
*
********************************************************************************
DEFINE SUBROUTINE INIT-MNTH-HIST
********************************************************************************
*
FOR IH-HIST-X = 1 TO 12
  PERFORM INIT-HIST-M-SEGS
END-FOR
FOR IH-Y-HIST-X = 1 TO 13
  PERFORM INIT-HIST-Y-SEGS
END-FOR
END-SUBROUTINE
*
***********************************************************************
*
DEFINE SUBROUTINE INIT-HIST-M-SEGS
RESET IH-YEAR-MONTH(IH-HIST-X) IH-MONTH-IND(IH-HIST-X) IH-ACCUM-CASH-VALUE(IH-HIST-X)
  IH-CASH-VALUE(IH-HIST-X) IH-DEATH-BENE(IH-HIST-X) IH-PREMIUM(IH-HIST-X)
  IH-COI(IH-HIST-X) IH-INTEREST(IH-HIST-X) IH-PRORAT-LOAN-BAL(IH-HIST-X)
  IH-PRORAT-LN-ACC-INT(IH-HIST-X)
END-SUBROUTINE
*
********************************************************************************
DEFINE SUBROUTINE INIT-HIST-Y-SEGS
********************************************************************************
RESET IH-Y-YEAR-MONTH(IH-Y-HIST-X)   IH-Y-MONTH-IND(IH-Y-HIST-X)
  IH-Y-ACCUM-CASH-VALUE(IH-Y-HIST-X) IH-Y-CASH-VALUE(IH-Y-HIST-X)
  IH-Y-DEATH-BENE(IH-Y-HIST-X)       IH-Y-PREMIUM(IH-Y-HIST-X)
  IH-Y-COI(IH-Y-HIST-X)              IH-Y-INTEREST(IH-Y-HIST-X)
  IH-Y-PRORAT-LOAN-BAL(IH-Y-HIST-X)  IH-Y-PRORAT-LN-ACC-INT(IH-Y-HIST-X)
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*     S E T U P - A N D - C A L C - Y E A R L Y - V A L         *
*     SETUP INPUT AND CALCULATE YEARLY VALUES                   *
*****************************************************************
*
********************************************************************************
*
********************************************************************************
DEFINE SUBROUTINE SETUP-AND-CALC-YEARLY-VAL
********************************************************************************
*
MOVE ISSUE-DATE(NAS-X) TO IS-ISS-DATE
MOVE EDITED STATUS-VIEW.ISSUE-AGE(NAS-X) TO IS-ISS-AGE(EM=99)
MOVE FACE-AMOUNT(NAS-X) TO IS-FAC-AMT
MOVE PAY-STATUS(NAS-X) TO IS-PAY-STATUS
IF PAY-STATUS(NAS-X) > '40'
  MOVE 'Y' TO IS-PAID-UP-SW
ELSE
  RESET IS-PAID-UP-SW
END-IF
MOVE 1 TO IS-PROJ-DUR
MOVE DURATION(NAS-X) TO IS-DURATION
MOVE PLAN(NAS-X) TO IS-TYPE
IF (IS-TYPE-2 = 'P' OR = 'F') AND (NOT IS-TYPE = 'SP' OR = 'GP')   /* DW34
  RESET IS-TYPE-2
END-IF
MOVE '00' TO IS-TYPE-YEARS-XX
IF NOT (IS-TYPE = 'OL' OR = 'SP' OR = 'SO' OR = 'FS' OR = 'GP')     /* DW34
  IF IS-TYPE-2 = ' '
    MOVE IS-TYPE-1 TO IS-TYPE-YEARS-2
  ELSE
    MOVE IS-TYPE TO IS-TYPE-YEARS-XX
  END-IF
END-IF
MOVE ANNUAL-PREM(NAS-X) TO IS-ANN-PREM
MOVE SMOKER-FLAG(NAS-X) TO IS-SMOK-STATUS
MOVE PAD-CODE TO IS-PAD-CODE
MOVE MODE(NAS-X) TO IS-MODE-MODE
MOVE DATE-OF-BIRTH TO IS-DOB
MOVE #C-RUN-DT-YYYYMMDD TO IS-RUN-DATE
MOVE PAID-TO-DATE(NAS-X) TO IS-PD-THRU
MOVE PREM-RATING(NAS-X) TO IS-PREM-RATING
IF PAD-CODE = 'V' OR = 'W' OR = 'X' OR = 'Z'
  MOVE 12 TO IS-MODE
ELSE
  IF MODE(NAS-X) = 'A' OR = '1'
    MOVE 1 TO IS-MODE
  ELSE
    IF MODE(NAS-X) = 'S' OR = '2'
      MOVE 2 TO IS-MODE
    ELSE
      IF MODE(NAS-X) = 'Q' OR = '4'
        MOVE 4 TO IS-MODE
      ELSE
        MOVE 12 TO IS-MODE
      END-IF
    END-IF
  END-IF
END-IF
IF CONVERSION-FLAG(NAS-X) = 'C'
  PERFORM CALC-OLD-YEARLY-VALUES
ELSE
  PERFORM CALC-NEW-YEARLY-VALUES
END-IF
MOVE MIN-CASH-VALUE(NAS-X) TO IS-MIN-CSV
IF CONVERSION-FLAG(NAS-X) = 'C'
  MOVE PREM-DEFICIENCY(NAS-X) TO IS-PREM-DEFIC
  MOVE CONV-DURATION(NAS-X) TO IS-CONV-DUR
  MOVE MONTH-ALLOC-AMT(NAS-X) TO IS-ALLOC-CRED
  IF PAY-STATUS(NAS-X) = '44'
    RESET IS-ALLOC-CRED
  END-IF
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*     S E T U P - A N D - C A L C - M N T H L Y                 *
*     SETUP INPUT AND CALCULATE MONTHLY VALUES
*
********************************************************************************
DEFINE SUBROUTINE SETUP-AND-CALC-MNTHLY
********************************************************************************
*
GOTO-UPDATE-HISTORY-REC.
REPEAT
  IF IS-PAY-STATUS = '43'
    MOVE IS-MNTH-IND TO MONTH-IND(NAS-X)
    RESET IS-WORK-PREM IS-COI IS-INTEREST IS-MON-AMORT-ACQ IS-MON-MAINT-EXP
    MOVE IS-NXT-CSV TO IS-CSH-SUR-VL
    ESCAPE BOTTOM (GOTO-UPDATE-HISTORY-REC.)
  END-IF
  IF IS-CALC-INT-SW = 'N'
    MOVE HOLD-MON-AMORT-ACQ TO IS-MON-AMORT-ACQ
  END-IF
  IF IS-CALC-INT-SW = 'N' AND IS-MNTH-IND = WORK-MONTH-IND
    MOVE 'Y' TO IS-CALC-INT-SW
  END-IF
  IF IS-MODE = 01 OR IS-MODE = 02 OR IS-MODE = 04
    MOVE PAID-TO-DATE(NAS-X) TO IS-PD-THRU
    PERFORM CALC-PREM-PMT-MONS
  END-IF
  MOVE ISSUE-DATE-MM(NAS-X) TO IS-1ST-MONTHIVERSARY
  MOVE WORK-MONTH TO IS-TODAY-MON
  PERFORM CALC-MODE-PREMIUM
  MOVE W-MODE-PREMIUM TO IS-PREMIUM
  IF CONV-DURATION(NAS-X) = 999
    RESET IS-LN-AMT  IS-ACCUM-INT
  ELSE
    MOVE X-LOAN-AMOUNT(NAS-X) TO IS-LN-AMT
    MOVE X-ACCUM-INTEREST(NAS-X) TO IS-ACCUM-INT
  END-IF
  MOVE X-LOAN-AMOUNT-2(NAS-X) TO IS-LN-AMT-2
  MOVE X-ACCUM-INTEREST-2(NAS-X) TO IS-ACCUM-INT-2
  COMPUTE ROUNDED IS-LOAN-RT = X-INTEREST-RATE(NAS-X) / 100
  COMPUTE ROUNDED IS-LOAN-RT-2 = CUR-VAR-INT-RT / 100
  PERFORM CALC-MNTHLY-CMP-INT-RATES
  COMPUTE ROUNDED IS-MNTHLY-MIN-DIFF =
    (NXT-YR-MIN-CASH-VALUE(NAS-X) - MIN-CASH-VALUE(NAS-X)) / +12
  MOVE ID-NUMBER TO IS-ID-NO
  MOVE NAS-X TO OWN-X
  MOVE OWNERSHIP-FLAG(OWN-X) TO IS-POL-OWNER
  MOVE NAS-X TO OO-COI-X
  MOVE PROCESS-IND TO IS-PROCESS-IND
  MOVE #COI-ADJ(OO-COI-X) TO IS-OO-COI-ADJ
  MOVE PREM-RATING(NAS-X) TO IS-PREM-RATING
  MOVE NAS-X TO IS-SEG-X
  IF ((IS-PROCESS-IND = 'G')
      OR  (IS-PROCESS-IND = 'O')   /* DW11 SAG-AB 20060328
      OR  (IS-PROCESS-IND = 'S'))  /* RE1
      AND (IS-FIRST-GF-POL = 0)
    MOVE IS-SEG-X TO IS-FIRST-GF-POL
  END-IF
  IF USE-X-CALCS NE 'Y' AND MONTH-ALLOC-AMT(NAS-X) NE 999.99
    MOVE IS-OO-COI-ADJ TO MONTH-ALLOC-AMT(NAS-X)
  END-IF
  IF CONVERSION-FLAG(NAS-X) = 'C'
    MOVE IS-NXT-ACV TO IS-LST-ACV
    MOVE IS-EOM-DB TO IS-LST-DB
    RESET IS-YTD-COI-SUBSIDY IS-YTD-DB-DIFF
    IF FACE-AMOUNT(NAS-X) = 0 AND DATE-OF-BIRTH < 18910101
      MOVE 'Y' TO IS-AGE-96-REINST
      PERFORM CALC-OLD-MNTHLY-VALUES
      ADD IS-EOM-DB TO WK-BEF-VA-DB
      ADD IS-YTD-COI-SUBSIDY TO WK-5-5-PCT-YTD-COI-SUBSIDY
      ADD IS-SAVE-INT-DB TO WK-5-5-PCT-DEATH-BENEFIT
      MOVE IS-SAVE-INT-DB TO BEG-CASH-VALUE(NAS-X)
    ELSE
      MOVE 'N' TO IS-AGE-96-REINST
      PERFORM CALC-OLD-MNTHLY-VALUES
      ADD IS-EOM-DB TO WK-BEF-VA-DB
      ADD IS-YTD-COI-SUBSIDY TO WK-5-5-PCT-YTD-COI-SUBSIDY
      ADD IS-SAVE-INT-DB TO WK-5-5-PCT-DEATH-BENEFIT
      MOVE IS-SAVE-INT-DB TO BEG-CASH-VALUE(NAS-X)
    END-IF
  ELSE
    MOVE IS-NXT-ACV TO IS-LST-ACV
    MOVE IS-NXT-CSV TO IS-LST-CSV
    MOVE IS-NXT-MCV-AL TO IS-LST-MCV-AL
    MOVE IS-EOM-DB TO IS-LST-DB
    MOVE RESTRICT-MBR-SW TO IS-RESTRICTED-MBR-SW
    IF USE-X-CALCS = 'Y'
*     IF PLAN(NAS-X) = 'AL'
      IF IS-ANNUITY-LIFE (< PLAN(NAS-X) >)  /* NG4
        MOVE MIN-CASH-VALUE(NAS-X) TO LAST-MON-MCV-AL
      END-IF
      MOVE IS-CURR-ACQ TO IS-LST-ACQ
      MOVE IS-NXT-CONT-FUND TO IS-LST-CONT-FUND
    END-IF
    PERFORM CALC-NEW-MNTHLY-VALUES
  END-IF
*
  IF NO-VA-UPDATE-SW = 'Y'
    ESCAPE ROUTINE
  END-IF
*
  IF PLAN (NAS-X) = 'GPL' OR = 'GP2'     /* DW34  YK6
    MOVE LAST-MON-CSV TO NXT-MON-CASH-VALUE(NAS-X)
    MOVE IS-MNTH-IND TO MONTH-IND(NAS-X)
    MOVE CASH-VALUE(NAS-X) TO NXT-MON-CASH-VALUE(NAS-X) /* this is realy lst mon
    MOVE IS-NXT-ACV TO CASH-VALUE (NAS-X) ACC-CASH-VALUE (NAS-X)
*    write id-number 'line 6630 Monthly processing'
*    'cur/nxt yr mcvs=' min-cash-value(nas-x) nxt-yr-min-cash-value(nas-x)
*    'lst/nxt mon csvs=' nxt-mon-cash-value (nas-x) cash-value (nas-x)
*    'is-nxt-acv=' is-nxt-acv 'month-ind=' month-ind (nas-x)
    ESCAPE BOTTOM (GOTO-UPDATE-HISTORY-REC.)
  END-IF
*
  MOVE LAST-MON-CSV TO NXT-MON-CASH-VALUE(NAS-X)
* IF IS-TYPE = 'AL'
  IF IS-ANNUITY-LIFE (< IS-TYPE >)  /* NG4
    MOVE LAST-MON-MCV-AL TO NXT-YR-MIN-CASH-VALUE(NAS-X)
  END-IF
  RESET AVL-TDIV
  IF USE-X-CALCS = 'Y'
    COMPUTE AVL-TDIV = BEG-CASH-VALUE(NAS-X) - MONTH-ALLOC-AMT(NAS-X)
    IF AVL-TDIV < 0
      RESET AVL-TDIV
    END-IF
  END-IF
  IF ID-NUMBER = 124156 AND ISSUE-DATE(NAS-X) = 20040413 AND
      DEATH-BENEFIT(NAS-X) = 226000
    MOVE 10150.58 TO AVL-TDIV
  END-IF
  COMPUTE NXT-MON-DEATH-BENEFIT(NAS-X) = DEATH-BENEFIT(NAS-X) + AVL-TDIV
  MOVE IS-NXT-CSV TO CASH-VALUE(NAS-X)
  MOVE IS-EOM-DB TO DEATH-BENEFIT(NAS-X)
  MOVE IS-MNTH-IND TO MONTH-IND(NAS-X)
  MOVE IS-NXT-ACV TO ACC-CASH-VALUE(NAS-X)
  IF USE-X-CALCS = 'Y'
    MOVE IS-CSH-SUR-VL TO CASH-VALUE(NAS-X)
    MOVE IS-CURR-ACQ TO MONTH-ALLOC-AMT(NAS-X)
    MOVE IS-NXT-CONT-FUND TO BEG-CASH-VALUE(NAS-X)
    COMPUTE AVL-TDIV = BEG-CASH-VALUE(NAS-X) - MONTH-ALLOC-AMT(NAS-X)
    IF AVL-TDIV < 0
      RESET AVL-TDIV
    END-IF
  END-IF
  IF ID-NUMBER = 124156 AND ISSUE-DATE(NAS-X) = 20040413 AND
      DEATH-BENEFIT(NAS-X) = 226000
    MOVE 10150.58 TO AVL-TDIV
  END-IF
  IF USE-X-CALCS = 'Y'
    IF (ONLINE-ACTION(NAS-X) = '1' OR ONLINE-ACTION-GN = '2') AND
        NXT-MON-DEATH-BENEFIT(NAS-X) = FACE-AMOUNT(NAS-X)
      ADD AVL-TDIV TO NXT-MON-DEATH-BENEFIT(NAS-X)
    END-IF
  END-IF
*  IF IS-TYPE = 'AL'
  IF IS-ANNUITY-LIFE (< IS-TYPE >)  /* NG4
    MOVE IS-NXT-MCV-AL TO MIN-CASH-VALUE(NAS-X)
  END-IF
*****************************************************************
*         U P D A T E - H I S T O R Y - R E C                   *
*****************************************************************
*
  ESCAPE BOTTOM (GOTO-UPDATE-HISTORY-REC.)
END-REPEAT /* (GOTO-UPDATE-HISTORY-REC.)
*
UPDATE-HISTORY-REC.
FOR ISH-X = 1 TO 20
  PERFORM FIND-HIST-REC
END-FOR
** SAG 12/23/2005 DW8 START
FOR IH-HIST-X = 48 TO 14 STEP -1
  PERFORM RESET-36-MO-HIST
END-FOR
IF (IH-YEAR-MONTH (1) NOT EQUAL 0)
    AND  ((IH-SMOKER-FLAG (1) = 'C')     /* DW13 SAG-AB 20060328
    OR   (IH-SMOKER-FLAG (1) = 'S')      /* DW13 SAG-AB 20060328
    OR   (IH-SMOKER-FLAG (1) = 'N'))     /* DW13 SAG-AB 20060328
  MOVE IH-SMOKER-FLAG      (1)  TO IH-SMOKER-FLAG      (14)
  MOVE IH-YEAR-MONTH       (1)  TO IH-YEAR-MONTH       (14)
  MOVE IH-MONTH-IND        (1)  TO IH-MONTH-IND        (14)
  MOVE IH-ACCUM-CASH-VALUE (1)  TO IH-ACCUM-CASH-VALUE (14)
  MOVE IH-CASH-VALUE       (1)  TO IH-CASH-VALUE       (14)
  MOVE IH-DEATH-BENE       (1)  TO IH-DEATH-BENE       (14)
  MOVE IH-PREMIUM          (1)  TO IH-PREMIUM          (14)
  MOVE IH-COI              (1)  TO IH-COI              (14)
  MOVE IH-INTEREST         (1)  TO IH-INTEREST         (14)
  MOVE IH-PRORAT-LOAN-BAL  (1)  TO IH-PRORAT-LOAN-BAL  (14)
  MOVE IH-PRORAT-LN-ACC-INT (1) TO IH-PRORAT-LN-ACC-INT(14)  /* SAG 12/23/2005 DW10
END-IF
** SAG 12/23/2005 DW8 END
FOR IH-HIST-X = 2 TO 13
  PERFORM RESET-13-MO-HIST
END-FOR
*
MOVE PLAN(NAS-X) TO IH-PLAN
MOVE STATUS-VIEW.ISSUE-AGE(NAS-X) TO IH-ISSUE-AGE
MOVE VA-RUN-DATE-WORK TO IH-YEAR-MONTH(13)
* write 'ln 6808 create a history rec for' va-run-date-work 'prem=' is-work-prem
MOVE IS-MNTH-IND TO IH-MONTH-IND(13)
MOVE IS-SMOK-STATUS TO IH-SMOKER-FLAG(13)
IF CONVERSION-FLAG(NAS-X) = 'C'
  MOVE MONTH-ALLOC-AMT(NAS-X) TO IH-MNTH-ALLOC-AMT
  MOVE PREM-DEFICIENCY(NAS-X) TO IH-PREM-DEFIC
END-IF
MOVE IS-NXT-ACV TO IH-ACCUM-CASH-VALUE(13)
MOVE IS-NXT-CSV TO IH-CASH-VALUE(13)
RESET AVL-TDIV
IF USE-X-CALCS = 'Y'
  COMPUTE AVL-TDIV = BEG-CASH-VALUE(NAS-X) - MONTH-ALLOC-AMT(NAS-X)
  IF AVL-TDIV < 0
    RESET AVL-TDIV
  END-IF
END-IF
IF ID-NUMBER = 124156 AND ISSUE-DATE(NAS-X) = 20040413 AND
    DEATH-BENEFIT(NAS-X) = 226000
  MOVE 10150.58 TO AVL-TDIV
END-IF
COMPUTE IH-DEATH-BENE(13) = IS-EOM-DB + AVL-TDIV
***********************************  SAG-AB 20060313 workaround START
* if (is-work-prem GT 999.99) or
if (is-COI gt 999.99 )                          /* vt3  \/ 20121231
  move is-work-prem    to   #is-work-prem
  move is-interest     to   #is-interest
  move is-coi          to   #is-coi
  move edited  #is-work-prem (em=zzzzzz9.99) to #is-work-prem-a
  move edited #is-coi (em=zzzzzz9.99) to #is-coi-a

  compress
    id-number           #tab
    issue-date(nas-x)   #tab
    plan (nas-x)        #tab
*    #is-work-prem-a     #tab               /* vt3 20121231
    #is-COI-a           #tab
    into #out-file-11
  write work 11 #out-file-11
end-if                                                     /* vt3 /\
*
* IF IS-WORK-PREM LE 999.99            /* P6.2 to P3.2
MOVE IS-WORK-PREM TO IH-PREMIUM (13)
* ELSE
*   DIVIDE #ONEK INTO IS-WORK-PREM GIVING #DUMMY REMAINDER IH-PREMIUM (13)
* END-IF
* IF IS-COI GE -999.99 AND IS-COI LE 99999.99 /* P11.7 to P3.2   NG1
MOVE ROUNDED IS-COI TO IH-COI (13)
* ELSE
*   DIVIDE #ONEK INTO IS-COI GIVING #DUMMY REMAINDER #REMAIN
*   MOVE ROUNDED #REMAIN TO IH-COI (13)
* END-IF
IF IS-INTEREST LE 99999.99          /* P11.7 to P5.2
  MOVE ROUNDED IS-INTEREST TO IH-INTEREST (13)
ELSE
  DIVIDE #ONEK INTO IS-INTEREST GIVING #DUMMY REMAINDER #REMAIN
  MOVE ROUNDED #REMAIN TO IH-INTEREST (13)
END-IF
**************************************************
**MOVE IS-WORK-PREM TO IH-PREMIUM(13)
**COMPUTE ROUNDED IH-COI(13) = IS-COI * 1
**COMPUTE ROUNDED IH-INTEREST(13) = IS-INTEREST * 1
***********************************  SAG-AB 20060313 workaround END
IF USE-X-CALCS = 'Y'
  MOVE IS-CSH-SUR-VL TO IH-CASH-VALUE(13)
  MOVE IS-MON-AMORT-ACQ TO IH-PRORAT-LOAN-BAL(13)
  MOVE IS-MON-MAINT-EXP TO IH-PRORAT-LN-ACC-INT(13)
ELSE
  MOVE X-LOAN-AMOUNT(NAS-X) TO IH-PRORAT-LOAN-BAL(13)
  IF X-LOAN-AMOUNT-2(NAS-X) > 99999.99
    ADD 99999.99 TO IH-PRORAT-LOAN-BAL(13)
  ELSE
    ADD X-LOAN-AMOUNT-2(NAS-X) TO IH-PRORAT-LOAN-BAL(13)
  END-IF
  MOVE X-ACCUM-INTEREST(NAS-X) TO IH-PRORAT-LN-ACC-INT(13)
  ADD X-ACCUM-INTEREST-2(NAS-X) TO IH-PRORAT-LN-ACC-INT(13)
END-IF
***********************************  SAG-AB 20060313 workaround START
*
* IF   (HLD-ACV-PREM-ADJ + IH-PREMIUM (13)) LE 999.99     /* P7.2 to P5.2
*     AND (HLD-ACV-PREM-ADJ + IH-PREMIUM (13)) GE -999.99    /* P7.2 to P5.2  DW37
IH-PREMIUM (13) := IH-PREMIUM (13) + HLD-ACV-PREM-ADJ
* ELSE
*   #REMAIN := IH-PREMIUM (13) + HLD-ACV-PREM-ADJ
*   DIVIDE #ONEK INTO #REMAIN GIVING #DUMMY REMAINDER IH-PREMIUM (13)
* END-IF
*
IF   (HLD-ACV-INT-ADJ + IH-INTEREST (13)) LE 99999.99   /* P7.2 to P5.2
    AND (HLD-ACV-INT-ADJ + IH-INTEREST (13)) GE -99999.99  /* P7.2 to P5.2  DW37
  IH-INTEREST (13) := IH-INTEREST (13) + HLD-ACV-INT-ADJ
ELSE
  #REMAIN := IH-INTEREST (13) + HLD-ACV-INT-ADJ
  DIVIDE #ONEK INTO #REMAIN GIVING #DUMMY REMAINDER IH-INTEREST (13)
END-IF
*
* IF      (HLD-ACV-COI-ADJ + IH-COI (13)) LE 999.99         /* p7.2 to P3.2   NG1
*     AND (HLD-ACV-COI-ADJ + IH-COI (13)) GE -999.99
IH-COI (13) := IH-COI (13) + HLD-ACV-COI-ADJ
* ELSE
*   #REMAIN := IH-COI (13) + HLD-ACV-COI-ADJ
*   DIVIDE #ONEK INTO #REMAIN GIVING #DUMMY REMAINDER IH-COI (13)
* END-IF
*
**ADD HLD-ACV-PREM-ADJ TO IH-PREMIUM(13)
**ADD HLD-ACV-INT-ADJ TO IH-INTEREST(13)
**ADD HLD-ACV-COI-ADJ TO IH-COI(13)
***********************************  SAG-AB 20060313 workaround END
RESET HLD-ACV-PREM-ADJ HLD-ACV-INT-ADJ HLD-ACV-COI-ADJ
** SAG  12/23/2005 DW8 START
** MOVE VA-HISTORY-RECORD TO ISH-RECORD (HLD-ISH-X)
MOVE VA-MONTHLY-HIST-DATA-STR TO #ISH-MONTHLY-HIST-HDR-A (HLD-ISH-X)
MOVE VA-MONTHLY-HIST-STR      TO #ISH-MONTHLY-HIST-A (HLD-ISH-X)
MOVE VA-MONTHLY-HIST-B-STR    TO #ISH-MONTHLY-HIST-B-A (HLD-ISH-X)
MOVE VA-YEARLY-HIST-STR       TO #ISH-YEARLY-HIST-A (HLD-ISH-X)
** SAG  12/23/2005 DW8 END
**
ADD 1 TO WORK-MONTH
IF WORK-MONTH > 12
  MOVE 1 TO WORK-MONTH
  ADD 1 TO WORK-YYYY
END-IF
MOVE VA-RUN-DATE-WORK TO IS-DATE-YYYYMM
ADD 1 TO IS-DATE-MM
IF IS-DATE-MM > 12
  MOVE 1 TO IS-DATE-MM
  ADD 1 TO IS-DATE-YYYY
END-IF
MOVE IS-DATE-YYYYMM TO VA-RUN-DATE-WORK
*
END-SUBROUTINE
*
*****************************************************************
*     R E S E T - 1 3 - M O - H I S T                           *
*****************************************************************
*
********************************************************************************
DEFINE SUBROUTINE RESET-13-MO-HIST
********************************************************************************
*
COMPUTE SU = IH-HIST-X - 1
MOVE IH-SMOKER-FLAG(IH-HIST-X) TO IH-SMOKER-FLAG(SU)
MOVE IH-YEAR-MONTH(IH-HIST-X) TO IH-YEAR-MONTH(SU)
MOVE IH-MONTH-IND(IH-HIST-X) TO IH-MONTH-IND(SU)
MOVE IH-ACCUM-CASH-VALUE(IH-HIST-X) TO IH-ACCUM-CASH-VALUE(SU)
MOVE IH-CASH-VALUE(IH-HIST-X) TO IH-CASH-VALUE(SU)
MOVE IH-DEATH-BENE(IH-HIST-X) TO IH-DEATH-BENE(SU)
MOVE IH-PREMIUM(IH-HIST-X) TO IH-PREMIUM(SU)
MOVE IH-COI(IH-HIST-X) TO IH-COI(SU)
MOVE IH-INTEREST(IH-HIST-X) TO IH-INTEREST(SU)
MOVE IH-PRORAT-LOAN-BAL(IH-HIST-X) TO IH-PRORAT-LOAN-BAL(SU)
MOVE IH-PRORAT-LN-ACC-INT(IH-HIST-X) TO IH-PRORAT-LN-ACC-INT(SU)
*
END-SUBROUTINE
*
*****************************************************************
*         C H E C K - F O R - A C J - A D J U S T M E N T       *
*****************************************************************
*
********************************************************************************
DEFINE SUBROUTINE CHECK-FOR-ACV-ADJUSTMENT
********************************************************************************
*
MOVE NAS-X TO PRM-X COI-X INT-X
*
* write 'line 7100 top of acv adj plan=' plan (nas-x) 'acv-adj='
*       MTD-ACV-PREM-ADJ(PRM-X)
IF PLAN (NAS-X) = 'GPL' OR = 'GP2'    /* DW34   YK6
  IF MTD-ACV-PREM-ADJ(PRM-X) NE +9999999.99
    MOVE MTD-ACV-PREM-ADJ(PRM-X) TO HLD-ACV-PREM-ADJ
*     write 'line 7108 move adj to #hld-adj' HLD-ACV-PREM-ADJ
  END-IF
ELSE
  IF NOT ((MTD-ACV-PREM-ADJ(PRM-X) = 0 OR MTD-ACV-PREM-ADJ(PRM-X) = +9999999.99) AND
      (MTD-ACV-INT-ADJ(INT-X) = 0 OR MTD-ACV-INT-ADJ(INT-X) = +99999.99) AND
      (MTD-ACV-COI-ADJ(COI-X) = 0 OR MTD-ACV-COI-ADJ(COI-X) = +99999.99))
    IF NOT (MTD-ACV-PREM-ADJ(PRM-X) = 0 OR MTD-ACV-PREM-ADJ(PRM-X) = +9999999.99)
      ADD MTD-ACV-PREM-ADJ(PRM-X) TO ACC-CASH-VALUE(NAS-X)
      ADD MTD-ACV-PREM-ADJ(PRM-X) TO CASH-VALUE(NAS-X)
      MOVE MTD-ACV-PREM-ADJ(PRM-X) TO HLD-ACV-PREM-ADJ
    END-IF
    IF NOT (MTD-ACV-INT-ADJ(INT-X) = 0 OR MTD-ACV-INT-ADJ(INT-X) = +99999.99)
      ADD MTD-ACV-INT-ADJ(INT-X) TO ACC-CASH-VALUE(NAS-X)
      ADD MTD-ACV-INT-ADJ(INT-X) TO CASH-VALUE(NAS-X)
      MOVE MTD-ACV-INT-ADJ(INT-X) TO HLD-ACV-INT-ADJ
    END-IF
    IF NOT (MTD-ACV-COI-ADJ(COI-X) = 0 OR MTD-ACV-COI-ADJ(COI-X) = +99999.99)
      SUBTRACT MTD-ACV-COI-ADJ(COI-X) FROM ACC-CASH-VALUE(NAS-X)
      SUBTRACT MTD-ACV-COI-ADJ(COI-X) FROM CASH-VALUE(NAS-X)
      MOVE MTD-ACV-COI-ADJ(COI-X) TO HLD-ACV-COI-ADJ
    END-IF
  END-IF
END-IF
*
RESET MTD-ACV-PREM-ADJ(PRM-X) MTD-ACV-INT-ADJ(INT-X) MTD-ACV-COI-ADJ(COI-X)
*
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*   S E T U P - A N D - C A L C - E N D - O F - Y R             *
*                                                               *
*****************************************************************
**************************************************
*    SETUP INPUT AND CALCULATE END OF YEAR VALUES
***************************************************
********************************************************************************
DEFINE SUBROUTINE SETUP-AND-CALC-END-OF-YR
********************************************************************************
*
GOTO-UPDATE-VA-HISTORY-REC.
REPEAT
  IF IS-PAY-STATUS = '43'
    MOVE CASH-VALUE(NAS-X) TO IS-CSV
    MOVE DEATH-BENEFIT(NAS-X) TO IS-DB
    ADD 1 TO DURATION(NAS-X)
    RESET MONTH-IND(NAS-X)
    IF CONVERSION-FLAG(NAS-X) = 'C'
      ADD 1 TO CONV-DURATION(NAS-X)
    END-IF
    ESCAPE BOTTOM (GOTO-UPDATE-VA-HISTORY-REC.)
  END-IF
  IF USE-X-CALCS = 'Y'
    MOVE CASH-VALUE(NAS-X) TO IS-CSH-SUR-VL
  ELSE
    MOVE CASH-VALUE(NAS-X) TO IS-NXT-CSV
  END-IF
  MOVE DEATH-BENEFIT(NAS-X) TO IS-EOM-DB
  IF CONVERSION-FLAG(NAS-X) = 'N'
    MOVE MIN-CASH-VALUE(NAS-X) TO IS-MIN-CSV
    MOVE NXT-YR-MIN-CASH-VALUE(NAS-X) TO IS-NXT-YR-MIN-CSV
    MOVE NET-PR-RATIO(NAS-X) TO IS-NET-PREM-RATIO
  END-IF
*
  L-SEG-NO := NAS-X                /* PM23
*
  IF CONVERSION-FLAG(NAS-X) = 'C'
    PERFORM CALC-OLD-END-YR-VALUES
  ELSE
    IF IS-TYPE = 'GP'     /* Get this iss age's 120 cv amts   DW34
      CALLNAT 'GPLN0002' PLAN(NAS-X) IS-ISS-AGE    /* NG2
        #GPL-CVS         (*)
        #GP2-CVS         (*)
      IF PLAN(NAS-X) = 'GP2'
        MOVE #GP2-CVS (*) TO IS-GPL-CVS (*)
      ELSE
        MOVE #GPL-CVS (*) TO IS-GPL-CVS (*)
      END-IF
*
*       FIND GPL-V WITH ISSUE-AGE = IS-ISS-AGE
*         MOVE PLAN-RATES (*) TO IS-GPL-CVS (*)
* *        write 'is-iss-age=' is-iss-age 'csv=' is-gpl-cvs (*)
*       END-FIND
    END-IF
*
    PERFORM CALC-NEW-END-YR-VALUES
  END-IF
*
  IF PAY-STATUS(NAS-X) = '44'
    MOVE IS-NXT-CSV TO IS-CSV
    RESET IS-MIN-CSV IS-NXT-YR-MIN-CSV
  END-IF
  IF NO-VA-UPDATE-SW = 'Y'
    ESCAPE ROUTINE
  END-IF
*
  MOVE IS-CSV TO CASH-VALUE(NAS-X)
  MOVE IS-DB TO DEATH-BENEFIT(NAS-X)
  ADD 1 TO DURATION(NAS-X)
  RESET MONTH-IND(NAS-X)
  MOVE IS-MIN-CSV TO MIN-CASH-VALUE(NAS-X)
  MOVE IS-NXT-YR-MIN-CSV TO NXT-YR-MIN-CASH-VALUE(NAS-X)
  IF CONVERSION-FLAG(NAS-X) = 'C'
    ADD 1 TO CONV-DURATION(NAS-X)
  END-IF
*
  ESCAPE BOTTOM (GOTO-UPDATE-VA-HISTORY-REC.)
END-REPEAT /* (GOTO-UPDATE-VA-HISTORY-REC.)
UPDATE-VA-HISTORY-REC.
FOR ISH-X = 1 TO 20
  PERFORM FIND-HIST-REC
END-FOR
MOVE IH-PRV-ANN-DATE TO IH-2AGO-ANN-DATE
MOVE IH-PRV-CASH-VALUE TO IH-2AGO-CASH-VALUE
MOVE IH-PRV-ANN-DATE TO IS-DATE-YYYYMM
ADD 01 TO IS-DATE-YYYY
MOVE IS-DATE-YYYYMM TO IH-PRV-ANN-DATE
MOVE ACC-CASH-VALUE(NAS-X) TO IH-PRV-ACCUM-CASH-VALUE
MOVE IS-CSV TO IH-PRV-CASH-VALUE
MOVE IS-DB TO IH-PRV-DEATH-BENE
MOVE X-LOAN-AMOUNT(NAS-X) TO IH-PRV-PRORAT-LOAN-BAL
IF X-LOAN-AMOUNT-2(NAS-X) > 99999.99
  ADD 99999.99 TO IH-PRV-PRORAT-LOAN-BAL
ELSE
  ADD X-LOAN-AMOUNT-2(NAS-X) TO IH-PRV-PRORAT-LOAN-BAL
END-IF
MOVE X-ACCUM-INTEREST(NAS-X) TO IH-PRV-PRORAT-LN-ACC-INT
ADD X-ACCUM-INTEREST-2(NAS-X) TO IH-PRV-PRORAT-LN-ACC-INT
MOVE DURATION(NAS-X) TO IH-CUR-DURATION
MOVE CONV-DURATION(NAS-X) TO IH-CUR-CONV-DUR
** SAG  12/23/2005 DW8 START
** MOVE VA-HISTORY-RECORD TO ISH-RECORD (HLD-ISH-X)
MOVE VA-MONTHLY-HIST-DATA-STR TO #ISH-MONTHLY-HIST-HDR-A (HLD-ISH-X)
MOVE VA-MONTHLY-HIST-STR      TO #ISH-MONTHLY-HIST-A (HLD-ISH-X)
MOVE VA-MONTHLY-HIST-B-STR    TO #ISH-MONTHLY-HIST-B-A (HLD-ISH-X)
MOVE VA-YEARLY-HIST-STR       TO #ISH-YEARLY-HIST-A (HLD-ISH-X)
** SAG  12/23/2005 DW8 END
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*          F I N D - H I S T - R E C                            *
*                                                               *
*****************************************************************
**********************************************
*      FIND MATCHING HISTORY RECORD
**********************************************
*
********************************************************************************
DEFINE SUBROUTINE FIND-HIST-REC
********************************************************************************
*
MOVE 'Y' TO VA-HIST-FND
IF ISH-X > #ISH-NUMBER-RECORDS
  IF ONLINE-ACTION(NAS-X) = '5' OR = '6' OR = 'E' OR = 'B' OR = 'J' OR = 'K'
    MOVE 'N' TO VA-HIST-FND
    MOVE 20 TO ISH-X
    ESCAPE ROUTINE
  ELSE
    FOR ISH-X = 1 TO 20
      PERFORM CHECK-SPLIT-IND
    END-FOR
    ESCAPE ROUTINE
  END-IF
END-IF
IF #ISH-ISSUE-DATE(ISH-X) = ISSUE-DATE(NAS-X) AND #ISH-SPLIT-IND(ISH-X) = SPLIT-IND(NAS-X)
** SAG  12/23/2005 DW8 START
**  MOVE ISH-RECORD(ISH-X) TO VA-HISTORY-RECORD
  MOVE #ISH-MONTHLY-HIST-HDR-A (ISH-X) TO VA-MONTHLY-HIST-DATA-STR
  MOVE #ISH-MONTHLY-HIST-A (ISH-X)     TO VA-MONTHLY-HIST-STR
  MOVE #ISH-MONTHLY-HIST-B-A (ISH-X)   TO VA-MONTHLY-HIST-B-STR
  MOVE #ISH-YEARLY-HIST-A (ISH-X)      TO VA-YEARLY-HIST-STR
** SAG  12/23/2005 DW8 END
  MOVE ISH-X TO HLD-ISH-X
  MOVE 20 TO ISH-X
  ESCAPE ROUTINE
END-IF
IF ISH-X = 20
  IF ONLINE-ACTION(NAS-X) = '5' OR = '6' OR = 'E' OR = 'B' OR = 'J' OR = 'K'
    MOVE 'N' TO VA-HIST-FND
    MOVE 20 TO ISH-X
  ELSE
    FOR ISH-X = 1 TO 20
      PERFORM CHECK-SPLIT-IND
    END-FOR
  END-IF
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*        C H E C K - S P L I T - I N D                          *
*                                                               *
*****************************************************************
*
********************************************************************************
DEFINE SUBROUTINE CHECK-SPLIT-IND
********************************************************************************
*
IF ISH-X > #ISH-NUMBER-RECORDS
  WRITE 'HISTORY RECORD NOT FOUND ' ID-NUMBER
  TERMINATE 120
END-IF
IF #ISH-ISSUE-DATE(ISH-X) = ISSUE-DATE(NAS-X) AND SPLIT-IND(NAS-X) = 1
  MOVE SPLIT-IND(NAS-X) TO #ISH-SPLIT-IND(ISH-X)
** SAG  12/23/2005 DW8 START
**  MOVE ISH-RECORD(ISH-X) TO VA-HISTORY-RECORD
  MOVE #ISH-MONTHLY-HIST-HDR-A (ISH-X) TO VA-MONTHLY-HIST-DATA-STR
  MOVE #ISH-MONTHLY-HIST-A (ISH-X)     TO VA-MONTHLY-HIST-STR
  MOVE #ISH-MONTHLY-HIST-B-A (ISH-X)   TO VA-MONTHLY-HIST-B-STR
  MOVE #ISH-YEARLY-HIST-A (ISH-X)      TO VA-YEARLY-HIST-STR
** SAG  12/23/2005 DW8 END
  MOVE ISH-X TO HLD-ISH-X
  MOVE 20 TO ISH-X
  ESCAPE ROUTINE
END-IF
IF ISH-X = 20
  WRITE 'HISTORY RECORD NOT FOUND ' ID-NUMBER
  WRITE 'ISSUE DATE = ' ISSUE-DATE(NAS-X)
  WRITE 'SPLIT IND  = ' SPLIT-IND(NAS-X)
  TERMINATE 120
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*                                                               *
*       C O M P U T E - E S T - E X P I R Y - D A T E           *
*                                                               *
*****************************************************************
*
********************************************************************************
DEFINE SUBROUTINE COMPUTE-EST-EXPIRY-DATE
********************************************************************************
*
IF CONVERSION-FLAG(NAS-X) = 'C'
  MOVE ACC-CASH-VALUE(NAS-X) TO IS-NXT-ACV
  MOVE DEATH-BENEFIT(NAS-X) TO IS-EOM-DB
ELSE
  MOVE CASH-VALUE(NAS-X) TO IS-NXT-CSV
  MOVE DEATH-BENEFIT(NAS-X) TO IS-EOM-DB
END-IF
PERFORM SETUP-AND-CALC-YEARLY-VAL
MOVE #C-RUN-DT-MM TO WORK-MONTH
MOVE #C-RUN-DT-YYYY TO WORK-YYYY
SUBTRACT 1 FROM WORK-MONTH
IF WORK-MONTH = 0
  MOVE 12 TO WORK-MONTH
  SUBTRACT 1 FROM WORK-YYYY
END-IF
MOVE MONTH-IND(NAS-X) TO IS-MNTH-IND
ADD 1 TO IS-MNTH-IND
MOVE 'Y' TO NO-VA-UPDATE-SW
PERFORM SETUP-AND-CALC-MNTHLY
MOVE 'N' TO NO-VA-UPDATE-SW
WRITE 'ETI EXPIRY DAY CALC - ' ID-NUMBER
MOVE ACC-CASH-VALUE(NAS-X) TO DISP-AMT
WRITE DISP-AMT ' - ACV'
MOVE CASH-VALUE(NAS-X) TO DISP-AMT
WRITE DISP-AMT ' - CV'
MOVE IS-COI TO DISP-AMT
WRITE DISP-AMT ' - COI'
MOVE IS-INTEREST TO DISP-AMT
WRITE DISP-AMT ' - IS-INTEREST'
MOVE IS-PREM-DEFIC TO DISP-AMT
WRITE DISP-AMT ' - PREM-DIFF'
IF CONVERSION-FLAG(NAS-X) = 'C'
  COMPUTE VA-ETI-NET-LOSS-PER-MONTH = IS-COI - IS-INTEREST + IS-PREM-DEFIC
ELSE
  COMPUTE VA-ETI-NET-LOSS-PER-MONTH = IS-COI - IS-INTEREST
END-IF
IF VA-ETI-NET-LOSS-PER-MONTH LE 0
  IF ONLINE-ACTION(NAS-X) NE '9' AND PAID-UP-DATE(NAS-X) < 19991231
    ESCAPE ROUTINE
  ELSE
    WRITE '    WILL EXPIRE 12/31/99 (NEVER)'
    MOVE 19991231 TO PAID-UP-DATE(NAS-X)
    MOVE 31 TO EXPIRY-DAY(NAS-X) EXPIRY-DAY(NAS-X)
    ESCAPE ROUTINE
  END-IF
END-IF
COMPUTE VA-ETI-MONTHS-TILL-EXPIRE = 1 + (CASH-VALUE(NAS-X) / VA-ETI-NET-LOSS-PER-MONTH)
MOVE #C-RUN-DT-YYYYMMDD TO WORK-DATE-YYYYMMDD
*
IF VA-ETI-MONTHS-TILL-EXPIRE > 0
  FOR #TIMES = 1 TO VA-ETI-MONTHS-TILL-EXPIRE
    PERFORM BUMP-ETI-DATE
  END-FOR
END-IF
*
IF ONLINE-ACTION(NAS-X) NE '9' AND PAID-UP-DATE(NAS-X) < WORK-DATE-YYYYMMDD
  WRITE '    WILL EXPIRE ' PAID-UP-DATE(NAS-X)
  ESCAPE ROUTINE
END-IF
WRITE '    WILL EXPIRE ' WORK-DATE-YYYYMMDD
MOVE WORK-DATE-MM TO WORK-DATE-MM-NO-SIGN
MOVE WORK-DATE-YYYYMMDD TO PAID-UP-DATE(NAS-X)
MOVE 1 TO EXPIRY-DAY(NAS-X)
*
END-SUBROUTINE
*
***********************************************************************
*
********************************************************************************
DEFINE SUBROUTINE BUMP-ETI-DATE
********************************************************************************
*
ADD 1 TO WORK-DATE-MM
IF WORK-DATE-MM > 12
  MOVE 1 TO WORK-DATE-MM
  ADD 1 TO WORK-DATE-YYYY
END-IF
*
END-SUBROUTINE
*
***********************************************************************
DEFINE SUBROUTINE RESET-14-MO-HIST
***********************************************************************
** SAG  12/23/2005 DW8 START
IF PLUSS EQ 'Y'
  COMPUTE SU = IH-Y-HIST-X + 1
ELSE
  COMPUTE SU = IH-Y-HIST-X - 1
END-IF
** SAG  12/23/2005 DW8 END
MOVE IH-Y-SMOKER-FLAG(IH-Y-HIST-X)      TO IH-Y-SMOKER-FLAG(SU)
MOVE IH-Y-YEAR-MONTH(IH-Y-HIST-X)       TO IH-Y-YEAR-MONTH(SU)
MOVE IH-Y-MONTH-IND(IH-Y-HIST-X)        TO IH-Y-MONTH-IND(SU)
MOVE IH-Y-ACCUM-CASH-VALUE(IH-Y-HIST-X) TO IH-Y-ACCUM-CASH-VALUE(SU)
MOVE IH-Y-CASH-VALUE(IH-Y-HIST-X)       TO IH-Y-CASH-VALUE(SU)
MOVE IH-Y-DEATH-BENE(IH-Y-HIST-X)       TO IH-Y-DEATH-BENE(SU)
MOVE IH-Y-PREMIUM(IH-Y-HIST-X)          TO IH-Y-PREMIUM(SU)
MOVE IH-Y-COI(IH-Y-HIST-X)              TO IH-Y-COI(SU)
MOVE IH-Y-INTEREST(IH-Y-HIST-X)         TO IH-Y-INTEREST(SU)
MOVE IH-Y-PRORAT-LOAN-BAL(IH-Y-HIST-X)  TO IH-Y-PRORAT-LOAN-BAL(SU)
MOVE IH-Y-PRORAT-LN-ACC-INT(IH-Y-HIST-X) TO IH-Y-PRORAT-LN-ACC-INT(SU)
*
END-SUBROUTINE
** SAG 12/20/2005 DW8 START
***********************************************************************
DEFINE SUBROUTINE RESET-36-MO-HIST
***********************************************************************
COMPUTE SU = IH-HIST-X + 1
IF     ((IH-SMOKER-FLAG (IH-HIST-X) = 'C')
    OR (IH-SMOKER-FLAG (IH-HIST-X) = 'S')
    OR (IH-SMOKER-FLAG (IH-HIST-X) = 'N'))
    AND (IH-YEAR-MONTH (IH-HIST-X) NOT EQUAL 0)  /* DW13 SAG-AB 20060328
  MOVE IH-SMOKER-FLAG      (IH-HIST-X) TO IH-SMOKER-FLAG      (SU)
  MOVE IH-YEAR-MONTH       (IH-HIST-X) TO IH-YEAR-MONTH       (SU)
  MOVE IH-MONTH-IND        (IH-HIST-X) TO IH-MONTH-IND        (SU)
  MOVE IH-ACCUM-CASH-VALUE (IH-HIST-X) TO IH-ACCUM-CASH-VALUE (SU)
  MOVE IH-CASH-VALUE       (IH-HIST-X) TO IH-CASH-VALUE       (SU)
  MOVE IH-DEATH-BENE       (IH-HIST-X) TO IH-DEATH-BENE       (SU)
  MOVE IH-PREMIUM          (IH-HIST-X) TO IH-PREMIUM          (SU)
  MOVE IH-COI              (IH-HIST-X) TO IH-COI              (SU)
  MOVE IH-INTEREST         (IH-HIST-X) TO IH-INTEREST         (SU)
  MOVE IH-PRORAT-LOAN-BAL  (IH-HIST-X) TO IH-PRORAT-LOAN-BAL  (SU)
  MOVE IH-PRORAT-LN-ACC-INT (IH-HIST-X)TO IH-PRORAT-LN-ACC-INT(SU)
END-IF
END-SUBROUTINE
** SAG 12/20/2005 DW8 END
*
***********************************************************************
DEFINE SUBROUTINE SG-LOOP
***********************************************************************
*
FOR SG-X = 1 TO 27
  IF SG-AMT = 0               /* OR PROCESS-IND = 'S'         RE1
    ESCAPE ROUTINE
  END-IF
  IF SG-X = 27
    WRITE ID-NUMBER 'SUNGARD FILE TABLE ON 27TH ENTRY'  SG-TRAN
  END-IF
  IF SUN-TRAN(SG-X) = '  '
    MOVE SG-TRAN TO SUN-TRAN(SG-X)
    MOVE SG-YEAR TO SUN-CAT1(SG-X)
    MOVE SG-PLAN TO SUN-CAT2(SG-X)
    ADD SG-AMT TO SUN-AMT(SG-X)
    IF NAS-X > 9
      RESET SUN-SEG(SG-X)
    ELSE
      MOVE NAS-X TO SUN-SEG(SG-X)
    END-IF
    MOVE 27 TO SG-X
  END-IF
END-FOR
*
END-SUBROUTINE
*
***********************************************************************
DEFINE SUBROUTINE MONTHLY-13-TO-YEARLY-14-MOVES
***********************************************************************
*
MOVE IH-SMOKER-FLAG(13) TO IH-Y-SMOKER-FLAG(14)
MOVE IH-YEAR-MONTH(13) TO IH-Y-YEAR-MONTH(14)
MOVE IH-MONTH-IND(13) TO IH-Y-MONTH-IND(14)
MOVE IH-ACCUM-CASH-VALUE(13) TO IH-Y-ACCUM-CASH-VALUE(14)
MOVE IH-CASH-VALUE(13) TO IH-Y-CASH-VALUE(14)
MOVE IH-DEATH-BENE(13) TO IH-Y-DEATH-BENE(14)
MOVE IH-PREMIUM(13) TO IH-Y-PREMIUM(14)
MOVE IH-COI(13) TO IH-Y-COI(14)
MOVE IH-INTEREST(13) TO IH-Y-INTEREST(14)
MOVE IH-PRORAT-LOAN-BAL(13) TO IH-Y-PRORAT-LOAN-BAL(14)
MOVE IH-PRORAT-LN-ACC-INT(13) TO IH-Y-PRORAT-LN-ACC-INT(14)
*
END-SUBROUTINE
*
***********************************************************************
DEFINE SUBROUTINE FILL-SEGS
***********************************************************************
*
IF PRM-X < NAS-X AND MTD-ACV-PREM-ADJ(PRM-X) = 0
  MOVE 9999999.99 TO MTD-ACV-PREM-ADJ(PRM-X)
END-IF
END-SUBROUTINE
*
*****************************************************************
*        C A L C - P R E M - P M T - M O N S                    *
*****************************************************************
*
INCLUDE ATHISCPM
*
*****************************************************************
*        C A L C - M N T H L Y - C M P - I N T - R A T E S      *
*****************************************************************
*
**INCLUDE ATHISINT
DEFINE SUBROUTINE CALC-MNTHLY-CMP-INT-RATES
*   The added code is not working for ATHP05PN
IF PLAN (NAS-X) <> 'AL'                        /* NG 122014 \/
  AL-ADMIN-FEE   := AL-ADMIN-FEE-2
  IF ISSUE-DATE (NAS-X) > IS-EFF-DATE
    IS-GUAR-INT-RT := IS-GUAR-INT-RT-2
  END-IF
END-IF                                       /* NG 122014 /\
*
COMPUTE ROUNDED IS-M-LOAN-RT     = ((1 + IS-LOAN-RT - 0.005) ** (1 / 12)) - 1   /* fixed loan rate
COMPUTE ROUNDED IS-M-LOAN-RT-2   = ((1 + IS-LOAN-RT-2 - 0.005) ** (1 / 12)) - 1 /* variable loan rate
COMPUTE ROUNDED IS-M-CURR-RT     = ((1 + IS-CURR-RT) ** (1 / 12)) - 1           /* crediting rate
COMPUTE ROUNDED IS-M-CURR-RT-AL  = ((1 + AL-ADMIN-FEE) ** (1 / 12)) - 1   /* crediting rate less AL admin fee /* NG 122014
IF IS-M-LOAN-RT > IS-M-CURR-RT
  MOVE IS-M-CURR-RT TO IS-M-LOAN-RT
END-IF
IF IS-M-LOAN-RT-2 > IS-M-CURR-RT
  MOVE IS-M-CURR-RT TO IS-M-LOAN-RT-2
END-IF
*
COMPUTE ROUNDED IS-M-ACQ-LOAN-INT-RT   = ((1 + IS-ACQ-LOAN-INT-RT) ** (1 / 12)) - 1
COMPUTE ROUNDED #TEMPFLT1              = 1 / 12                       /* SAG-AB 20060725
COMPUTE ROUNDED #TEMPFLT2              = 1 + IS-GUAR-INT-RT           /* SAG-AB 20060725
COMPUTE ROUNDED IS-M-GUAR-INT-RT       = (#TEMPFLT2 ** #TEMPFLT1) - 1 /* SAG-AB 20060725
COMPUTE ROUNDED #INTVAL1               = IS-M-GUAR-INT-RT * 100       /* SAG-AB 20060725
IS-M-GUAR-INT-RT                       := #INTVAL1                    /* SAG-AB 20060725
COMPUTE ROUNDED IS-M-GUAR-INT-RT       = IS-M-GUAR-INT-RT / 100       /* SAG-AB 20060725 /* min crediting rate
COMPUTE ROUNDED IS-M-GUAR-INT-RT-AL    = ((1 + IS-GUAR-INT-RT - AL-ADMIN-FEE) ** (1 / 12)) - 1  /* min crediting rate less AL admin fee /* NG 122014
COMPUTE ROUNDED IS-M-TDIV-A-INT-RT     = ((1 + IS-TDIV-A-INT-RT) ** (1 / 12)) - 1
COMPUTE ROUNDED IS-M-TDIV-B-INT-RT     = ((1 + IS-TDIV-B-INT-RT) ** (1 / 12)) - 1
*
END-SUBROUTINE
*
*****************************************************************
*        C A L C - L I A B - R S V                              *
*****************************************************************
*
INCLUDE ATHISRSV
*
*****************************************************************
*        C A L C - C O N V - V A L U E S                        *
*****************************************************************
*
INCLUDE ATHISCNV
*
*****************************************************************
*        C A L C - O L D - Y E A R L Y - V A L U E S            *
*****************************************************************
*
INCLUDE ATHISOYV
*
*****************************************************************
*        C A L C - O L D - M N T H L Y - V A L U E S            *
*        A C C U M - Y T D - P R E M S - P A I D                *
*        A C C U M - Y T D - P R E M S - P A I D - N X M O      *
*****************************************************************
*
INCLUDE ATHISOMN
*
*****************************************************************
*        C A L C - O L D - E N D - Y R - V A L U E S            *
*****************************************************************
*
INCLUDE ATHISOEY
*
*****************************************************************
*        C A L C - I N I T - V A L U E S                        *
*****************************************************************
*
INCLUDE ATHISNEW
*
*****************************************************************
*        C A L C - N E W - Y E A R L Y - V A L U E S            *
*****************************************************************
*
INCLUDE ATHISNYV
*
*****************************************************************
*        C A L C - N E W - M N T H L Y - V A L U E S            *
*****************************************************************
*
INCLUDE ATHISNMN
*
*****************************************************************
*        C A L C - N E W - E N D - Y R - V A L U E S            *
*****************************************************************
*
INCLUDE ATHISNEY
*
*****************************************************************
*        C A L C - I N I T - V A L U E S - X                    *
*****************************************************************
*
INCLUDE ATHISXNU
*
*****************************************************************
*        C A L C - N E W - M N T H L Y - V A L U E S - X        *
*****************************************************************
*
INCLUDE ATHISXMN
*
*****************************************************************
*        C A L C - N E W - E N D - Y R - V A L U E S - X        *
*****************************************************************
*
INCLUDE ATHISXEY
*
*****************************************************************
*        C A L L - A B E N D                                    *
*****************************************************************
*
END
