* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
* SUBPROGRAM-ID: C2060SNC NEW CERTIFICATE SCREEN
* PURPOSE   : TO PROCESS THE 'NC' COMMAND OR NEW CERTIFICATE
*
*************************************************
*                       MODIFICATION LOG
* USER   DATE  TAG     REASON
* DRW  09282004 DW1  add CREDIT CARD processing
* DRW  10212004 DW2  if mode Q and 2-mon FPF make suffix EZP
* PAM  12082004 PM3  Adjust Rider message for LTII policies.
* DRW  03052005 DW4  Add AL (Annuity Life) PROCESSING
* DRW  05162005 DW5  Add SEX to GPREMSXX linkage
* DRW  05162005 DW6  Add Prem-Rating to Call Linkage
* PAM  07072005 PM7  Adjusted text - chgd LT1-0302 to LT1-0404
* DRW  10192005 DW8  Show Single Prem if PUSP
* DRW  01102006 DW9  Chg 07000 to 06900 as growth Rte
* PAM  01192006 PM10 Increased size for single premiums
* DRW  03162006 DW11 Use Date entered to do chg to suffix (see #DW2)
* DRW  04042006 DW12 chg ending age on RT display from +4 to +5
* PAM  05242006 PM13 Changed #PREM-DUES from 10 to 12 in length
* SAG  06062006 RH1 AB - Changed CALL to Cobol to CALLNAT to Natural
* DRW  10162006 DW14 Chg text at botoom of NC
* DRW  10182006 DW15 Text changes for LT pols
* DRW  11131006 DW16 Add Terminated Text to LTII policies
* DRW  02212007 DW17 Fix Note Search for RT Renewal to Use 1st One
* DRW  03072007 DW18 Set Loan-repaid to "Y" to prevent ABEND
* DRW  03132007 DW19 Chg text of AL NC's
* DRW  09282007 DW20 Reverse labels of Issue-date and Effective Date
* DRW 03/03/2008 DW21 Add Rating Indicator to Whole Life Paid-Ups
* DRW 08/15/2008 DW22 Gen Plus Processing
* YAK 08/25/2009 YK1  Correct #OWNER-SSN field for non-member owners
* YAK 03/04/2010 YK2  Correct compiling Owner name from beneficiary
*                     data (missing suffix)
* NGG 11/10/2010 NG1 Formating name
* YAK 01/14/2011 YK3 Correct Formatting name logic - reset variable
*                    before calling to common subroutine GPRS0CNT
* NGG 10/02/2012 NG2 CN Expansion Project - New beneficiary database file
* YAK 10/10/2012 YK4 Use function to identify Level Term II plans
* YAK 11/26/2012 YK5 Change text for LTII+
* YAK 12/18/2012 YK6 Add EZ Term, add NH status
* NGG 03/25/2013 NG3 Change for EZ Term rates
* RSE 05/03/2013 RE1 Stability Project for $1M Policy - change edit mask
* vxt 06/02/2013 vt1 fix 1316 error during the policy print
* NGG 11/11/2013 NG4 1M$ project
* TMT 12/27/2013 TT1 ADDED GP2 POLICY
* vxt 02/26/2014 vt2 /Ticket 2620/
* TMT 06/16/2014 TT2  Contact Normalization - DOB and Sex
* YAK 10/15/2014 YK7  Replace 'AL' with function 
* NGG 12/08/2014 NG5  Annuity life 2
********************************************************************
*
DEFINE DATA
PARAMETER USING C2060ANC     /* changed for 1M$
*
LOCAL USING GC2V5LXX
LOCAL USING CONTPDA1
LOCAL
1 #PP-YEARS   (N3)
1 #LUMP-PREM-VALUE  (N7.2)
1 #FND-BD-OWNER   (L)
*
1 ST-X VIEW OF A-STATUS
  2 MEMBER-CONTACT-ID (N8)      /* NG1
  2 NAME
  2 SSN
*
1 ST-V VIEW OF A-STATUS
  2 MEMBER-CONTACT-ID (N8)
  2 ID-NUMBER         (N6)
  2 NAME
  2 SSN
*  2 SEX      /* DW5                        /* TT2
  2 SPOUSE-CONTACT-ID
  2 NAME-SP
  2 MILITARY-SERVICE
  2 DEBIT-CREDIT-AMT
  2 X-FIRST-PLACE-FEE  (9)
  2 INTRO-FLAG
  2 DUES-ALL-PAID-IND
  2 X-LOAN-DATE   (9)
  2 X-LOAN-AMOUNT (9)
  2 LINKED-CN     (10)
  2 REDEFINE LINKED-CN
    3 LINKED-CN-A (A6/10)
  2 C*ACTIVE-SEGMENTS
  2 DATE-ENTERED      (9)   /* DW11
  2 NUM-MBRSHIPS      (9)
  2 STATUS            (9)
  2 PLAN              (9)
  2 ISSUE-AGE         (9)
  2 REDEFINE ISSUE-AGE
    3 ISSUE-AGE-OCC   (9)
      4 ISSUE-AGE-N    (N2)
  2 PREM-RATING       (9)
  2 PAY-STATUS        (9)
  2 FACE-AMOUNT       (9)
  2 ISSUE-DATE        (9)
  2 REDEFINE ISSUE-DATE
    3 ISSUE-DATE-OCC (9)
      4 ISSUE-DATE-CENT   (N2)
      4 ISSUE-DATE-YYMMDD (N6)
      4 REDEFINE ISSUE-DATE-YYMMDD
        5 ISSUE-DATE-YY   (N2)
        5 ISSUE-DATE-MM   (N2)
        5 ISSUE-DATE-DD   (N2)
  2 REDEFINE ISSUE-DATE
    3 ISSUE-OCC       (9)
      4 ISSUE-YYYY      (N4)
      4 ISSUE-MM        (N2)
      4 ISSUE-DD        (N2)
  2 SPLIT-IND         (9)
  2 PAID-TO-DATE      (9)
  2 REDEFINE PAID-TO-DATE
    3 PTO-OCC          (9)
      4 PTO-YYYY    (N4)
      4 PTO-MM      (N2)
      4 PTO-DD      (N2)
  2 PAID-UP-DATE      (9)
  2 REDEFINE PAID-UP-DATE
    3 PUP-OCC          (9)
      4 PUP-YYYY  (N4)
      4 PUP-MM    (N2)
      4 PUP-DD    (N2)
  2 TOT-PREMIUMS-PAID (9)
  2 MTD-ACV-PREM-ADJ  (9)
  2 MTD-ACV-INT-ADJ  (9)
  2 MTD-ACV-COI-ADJ  (9)
  2 CONV-DURATION    (9)
  2 MONTH-ALLOC-AMT  (9)
  2 MEC-IND          (9)
*
1 LNK-V VIEW OF A-STATUS
  2 MEMBER-CONTACT-ID (N8)
  2 NAME
  2 SSN
*
1 BENE-F-V VIEW OF A-BENE-FINAL         /* NG2
  2 ID-NUMBER          (N6)
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A       (A6)
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-1ST    (N1)
    3 ID-NUMBER-LAST-5 (N5)
  2 NOTE-DATE          (N8/60) /* LET P/A = PRIMARY/ALTERNATE DESING
  2 REDEFINE NOTE-DATE         /* let L = linked policies
    3 BENE-DATES-6-POLS (6)
      4 BENE-ISS-DT        (N6/7)   /* (D, L)
      4 BENE-SPLIT-IND     (N1/7)   /* (D, L)
      4 BENE-LST-UPD       (N8)     /* (D)
      4 BENE-STRT-PEND     (N8)     /* (D)
      4 BENE-FOL-UP-IND    (N1)     /* (D)
      4 BENE-OWN-TRNSF-DT  (N8)     /* (D)
      4 BENE-SUC-OWN       (N1)     /* (D)
      4 BENE-NEW-LAYOUT    (N1)     /* (D)
      4 BENE-FIL1          (A4)
* 2 NOTE-CLERK-ID      (A3/60)
* 2 REDEFINE NOTE-CLERK-ID
*  3 BENE-MISC-6-POLS  (6)
*   4 BENE-STATUS      (A1)     /* (D)
*   4 BENE-RESTRICT    (A1)     /* (D)
*   4 BENE-MISC-PRIM-SEC (2)
*    5 BENE-TYPE        (A1)    /* (D, P/A)
*    5 BENE-SHARE-TYP   (A1)
*    5 BENE-MISC-FIL-2  (A12)
  2 NOTE-TEXT          (A60/60)
  2 REDEFINE NOTE-TEXT
    3 BENE-TEXTS-6-POLS (6)
      4 BENE-TEXT-PRIM-SEC (2)
        5 BENE-TEXT-OCC    (5)    /* (D, P/A, TEXT-LINE)
          6 BENE-TEXT        (A60)
          6 REDEFINE BENE-TEXT
            7 BENE-TEXT-1ST-25 (A25)
            7 BENE-TEXT-LST-35 (A35)
1 NT-V VIEW OF A-NOTES
  2 ID-NUMBER          (N6)
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-A       (A6)
  2 REDEFINE ID-NUMBER
    3 ID-NUMBER-1ST    (N1)
    3 ID-NUMBER-LAST-5 (N5)
  2 NOTE-DATE          (N8/60) /* LET P/A = PRIMARY/ALTERNATE DESING
  2 NOTE-TEXT          (A60/60)
  2 REDEFINE NOTE-TEXT
    3 NOTE-OCC     (60)
      4 NOTE-TEXT-FOR-POL-ISS
        5 NT-POL-ISS   (A10)
        5 NT-PI-MM     (A2)
        5 NT-FIL1      (A1)
        5 NT-PI-DD     (A2)
        5 NT-FIL2      (A1)
        5 NT-PI-YYYY   (A4)
        5 NT-DB-LBL    (A4)
        5 NT-DB-THOU   (A3)
        5 NT-FIL3      (A1)
        5 NT-DB-HUND   (A3)
        5 NT-FIL4      (A1)
        5 NT-DB-PENN   (A2)
        5 NT-FILL      (A26)
  2 REDEFINE NOTE-TEXT
    3 NOTE-REN-OCC     (60)
      4 NOTE-TEXT-FOR-RENEWAL
        5 NT-REN-POL-ISS   (A10)
        5 NT-REN-PI-MM     (A2)
        5 NT-REN-FIL1      (A1)
        5 NT-REN-PI-DD     (A2)
        5 NT-REN-FIL2      (A1)
        5 NT-REN-PI-YYYY   (A4)
        5 NT-REN-LBL       (A26)
        5 NT-REN-THOU      (A3)
        5 NT-REN-FIL3      (A1)
        5 NT-REN-HUND      (A3)
        5 NT-REN-FIL4      (A1)
        5 NT-REN-PENN      (A2)
        5 NT-REN-FILL      (A4)
*
1 #TERMED-ISS-DT   (N8)
1 #AMT-8     (A8)
1 REDEFINE #AMT-8
  2 #AMT-8-X  (A1/8)
1 REDEFINE #AMT-8
  2 #AMT-8-N  (N6.2)
1 #CURR-DB    (N6.2)
1 #BD-ID             (N6)
1 #BD-OWNER          (A60)
1 REDEFINE #BD-OWNER
  2 #BD-OWNER-6  (A6)
*
1 #MONTHS
  2 #M1  (A3) INIT <'Jan'>
  2 #M2  (A3) INIT <'Feb'>
  2 #M3  (A3) INIT <'Mar'>
  2 #M4  (A3) INIT <'Apr'>
  2 #M5  (A3) INIT <'May'>
  2 #M6  (A3) INIT <'Jun'>
  2 #M7  (A3) INIT <'Jul'>
  2 #M8  (A3) INIT <'Aug'>
  2 #M9  (A3) INIT <'Sep'>
  2 #M10 (A3) INIT <'Oct'>
  2 #M11 (A3) INIT <'Nov'>
  2 #M12 (A3) INIT <'Dec'>
1 REDEFINE #MONTHS
  2 #MONTH  (A3/12)
*
1 #DAYS-MTH    (A24) INIT <'312831303130313130313031'>
1 REDEFINE #DAYS-MTH
  2 #DAYS   (A2/12)
*
1 #LAST-NAME   (A25)
1 #FIRST-MID   (A25)
1 #SUFFIX      (A25)
1 #EXTRA1      (A25)
1 #EXTRA2      (A25)
1 #TEMP-NAME   (A30)
1 #TEMP-FACE   (A13)  /* RE1
1 #TEMP-PREM   (A10)
1 #MON-X (N2)
1 #CAP-LOAN-MONS   (N3)
1 #CAP-CSV-MONS    (N3)
1 #CAP-REMAIN-MONS (N3)
1 #MASK            (A12)
*
*
1 #SVC-FE-SP (N3.2) INIT <450.00>
1 #SVC-FE-2P (N2.2) INIT <18.50>
1 #SVC-FE-3P (N2.2) INIT <12.50>
1 #SVC-FE-4P (N1.2) INIT <9.50>
1 #SVC-FE-5P (N1.2) INIT <7.50>
1 #SVC-FE-6P (N1.2) INIT <6.50>
1 #SVC-FE-7P (N1.2) INIT <6.00>
1 #SVC-FE-10 (N1.2) INIT <4.50>
1 #SVC-FE-20 (N1.2) INIT <3.00>
1 #SVC-FE-30 (N1.2) INIT <2.50>
1 #SVC-FE-OL (N1.2) INIT <2.00>
1 #SVC-FE-TM (N1.2) INIT <2.00>
*
1 #ANN-SVC-FE    (N3.2)
* 1 #MODAL-PREM (P5.2)                                           /* PM10
1 #MODAL-PREM (P7.2)                                             /* PM10
1 #MOD-DUES   (P3.2)
1 #MAT-AGE   (A3)
1 #THRU-AGE  (A2)
1 #LEV-AGE   (A3)
1 #AFTER-AGE (A3)
1 #INS-AGE   (A3)
1 #LT-DB   (N6)
1 #LT-PREM (N3.2)
1 #TO-AGE  (A2)
1 REDEFINE #TO-AGE
  2 #TO-AGE-N  (N2)
1 #RT-AGE   (A2/7)
1 REDEFINE #RT-AGE
  2 #RT-AGE-OCC   (7)
    3 #RT-AGE-N  (N2)
1 #RT-PREM  (A8/7)
1 #RT-DB    (A10/7)
1 #NEW-DB   (P6.2)
1 #SCN-SP   (A15) INIT<'               '>
*
*                                  55-59     65-69
1 #REDUCTION-RATES /*    <50  50-54     60-64     70
  2 #NON-SMK (A30) INIT <'0000/5200/4186/3485/2979/4689/'>
  2 #SMOKER  (A30) INIT <'0000/5000/4805/3419/2778/4689/'>
1 REDEFINE #REDUCTION-RATES
  2 #REDUCT-N-S    (2)   /* non-smoker/smoker
    3 #REDUCT-AGES  (6)   /* under 50/50-54/55-59/60-64/65-69/70 & over
      4 #REDUCT-RATE   (N0.4)
      4 #FILL          (A1)
*
1 #CALC-DATE       (N8)
1 REDEFINE #CALC-DATE
  2 #CALC-DATE-YYYY (N4)
  2 #CALC-DATE-MM   (N2)
  2 #CALC-DATE-DD   (N2)
1 #CAP-CONV-ACV    (P7.2) /* CAN BE 0 SINCE ONLY USED FOR MIN CSV
1 #CAP-LOAN-END-DATE (N8)
1 #CSV        (P7.2)
1 #CAP-CSV    (P7.2)
1 #WORK-CAP-CONV-ACV  (P9.2)
*
1 #CSV-W-O-TDIV  (P7.2)
1 #SPLIT-POL     (L)
1 #TOT-FACE      (P7)
1 #WHOLE-DOLLARS (P7)
*
1 #PLAN-3    (A3)
1 REDEFINE #PLAN-3
  2 #PLAN-A1  (A1)
  2 #PLAN-A2  (A2)
  2 REDEFINE #PLAN-A2
    3 #PLAN-A2-N  (N2)
1 REDEFINE #PLAN-3
  2 #PLAN       (A2)
  2 REDEFINE #PLAN
    3 #PLAN-N1   (N1)
  2 REDEFINE #PLAN
    3 #PLAN-N2   (N2)
*
1 #YYYYMMDD   (N8)
1 REDEFINE #YYYYMMDD
  2 #YYYY      (N4)
  2 #MM        (N2)
  2 #DD        (N2)
1 REDEFINE #YYYYMMDD
  2 #YYYY-A    (A4)
  2 #MM-A      (A2)
  2 #DD-A      (A2)
1 REDEFINE #YYYYMMDD
  2 #YYYYMMDD-A (A8)
*
1 #WYYYYMMDD-N  (N8)
1 REDEFINE #WYYYYMMDD-N
  2 #WYYYY (N4)
  2 #WMM   (N2)
  2 #WDD   (N2)
1 REDEFINE #WYYYYMMDD-N
  2 #WYYYY-A (A4)
  2 #WMM-A (A2)
  2 #WDD-A (A2)
*
1 #HOLD-COMP-DB   (N7.2)                  /* vt2 was n5.2
1 #HOLD-SCR-ID     (N6)
1 #I1              (I2)
1 #I2              (I2)
1 #I3              (I2)
1 #ISC             (I2)
1 #SCN-X           (I2)
1 #IDX                 (I2)
*
1 #PASS-FACE-AMOUNT   (N7.2)
1 #PASS-PLAN          (A3)
1 #HOLD-MON-PREM      (N6.2/7)
1 #HOLD-TTL-PREM      (N6.2/7)
1 #PREMIUM-CALC       (N2)
1 #HOLD-ANN-PREM (N7.2)
1 #DUES-PAID      (P7.2)
1 #DUES-PD-DOLS   (P7)
1 #MAX-YRS        (N3)
1 REDEFINE #MAX-YRS
  2 #MAX-YRS-FIL1  (N1)
  2 #MAX-YRS-A2    (A2)
1 REDEFINE #MAX-YRS
  2 #MAX-YRS-FIL2  (N2)
  2 #MAX-YRS-A1    (A1)
1 #NUM-MONTHS     (P5)
1 #USE-X-CALCS    (L)
1 #WORK-DATE-N    (N8)
1 REDEFINE #WORK-DATE-N
  2 #WORK-DATE-YYYY (N4)
  2 #WORK-DATE-MM   (N2)
*
1 #FST-X     (I2)
1 #RT-CURR  (L)
1 #NUM      (P3)
1 #ISS-AGE   (A2)
1 REDEFINE #ISS-AGE
  2 #ISS-AGE-N (N2)
1 #MY        (N2)
1 #YEARS     (N4)
1 #LEVEL-II       (A) DYNAMIC   /* YK4
1 #FACE-AMOUNTS-A (A8/7)        /* YK6     vt1 was a8/6
1 #AGE-RANGES     (A7/7)        /* YK6 NG3
1 #APREM          (A6/7)        /* YK6 NG3
1 #TERMINATION-DATE (A) DYNAMIC /* YK6
1 #TEXT-LINE      (A75)         /* YK6
1 REDEFINE #TEXT-LINE
  2 F1         (A8)
  2 #AGE-BAND  (A7)
  2 #F2        (A17)
  2 #MPREM     (A6)
  2 #F3        (A15)
  2 #DEATH-BEN (A8)
*
1 DOB           (N8.0)          /* TT2
1 REDEFINE DOB                  /* TT2
  2 DOB-YYYY    (N4.0)          /* TT2
  2 DOB-MMDD    (N4.0)          /* TT2
END-DEFINE
*
RESET #PROJECTION-VIEW ST-V
GET ST-V #PDA-ISN
GET #PROJECTION-VIEW #PDA-ISN
*
FOR #FST-X 1 TO 9   /* get 1st active pol
  IF STATUS (#FST-X) = 'D'
    ESCAPE BOTTOM
  END-IF
END-FOR
*
IF #FST-X GT 9
  MOVE 1 TO #FST-X
END-IF
*
RESET PDA-CONTACT DOB                             /* TT2
P-CONTACT-ID := ST-V.MEMBER-CONTACT-ID          /* TT2
CALLNAT 'CONTS001' PDA-CONTACT                  /* TT2
DOB  := P-DATE-OF-BIRTH
*
* mOVE ISSUE-DATE (#INS-INDEX) TO #YYYYMMDD     /* DW2
MOVE DATE-ENTERED (#INS-INDEX) TO #YYYYMMDD     /* DW11
*
IF #DD = 1
  ADD 1 TO #MM
ELSE
  ADD 2 TO #MM
END-IF
*
IF #MM GT 12
  SUBTRACT 12 FROM #MM
END-IF
*
IF (PTO-MM (#INS-INDEX) = #MM) AND (MODE (#INS-INDEX) = 'Q')  /* DW2
  MOVE 'EZP' TO #PDA-SCR-SUFFIX
END-IF
*
IF #PDA-SCR-SUFFIX = 'EZP'   /* added 10/28/2003 to assum EZP
  MOVE 'E' TO MODE (#INS-INDEX)
END-IF
*
IF #PDA-SCR-SUFFIX = 'CUR'
  MOVE TRUE TO #RT-CURR
END-IF
*
MOVE #PDA-SCR-ID TO #HOLD-SCR-ID
RESET #PDA-SCR-COMMAND #PDA-SCR-ID #PDA-SCR-SUFFIX
RESET #DUES-PD-DOLS #DUES-PAID #L-PTY-MIN-CSV(*) #L-PTY-PR-CSV(*)
RESET #SCN-DUR (*) #SCN-VALUE(*) #SCN-LINES(*) /* ADDED BY DBM 7-10-97
RESET #FREQ #DUES-MSG
RESET #RT-DB-1 (*) #RT-DB-2 (*) #RT-PREM-2 (*)
*
IF DATE-ENTERED (#INS-INDEX) = 0                     /* DW15
  MOVE ISSUE-DATE (#INS-INDEX) TO #WYYYYMMDD-N
ELSE
  MOVE DATE-ENTERED (#INS-INDEX) TO #WYYYYMMDD-N    /* DW15
END-IF
*
MOVE #WMM TO #MON-X
COMPRESS #WDD #MONTH (#MON-X) #WYYYY-A INTO #SCN-DATE-ENTERED WITH '-'
*
MOVE EDITED ST-V.SSN (EM=999-99-9999) TO #INSURED-SSN

SEPARATE ST-V.NAME LEFT INTO #LAST-NAME #FIRST-MID #SUFFIX
  #EXTRA1 #EXTRA2 WITH DELIMITER ','
COMPRESS #FIRST-MID #LAST-NAME INTO #SCN-NAME
*
IF #SUFFIX NE ' '
  COMPRESS #SCN-NAME ',' INTO #SCN-NAME LEAVING NO SPACE
  COMPRESS #SCN-NAME #SUFFIX #EXTRA1 #EXTRA2 INTO #SCN-NAME
END-IF
*
#INSURED := ' '
CALLNAT 'GPRS0CNT'  ST-V.MEMBER-CONTACT-ID  #INSURED           /* NG1
MOVE #INSURED TO #OWNER                                        /* NG1
MOVE #INSURED TO #LNK-MBR   /* DW15
MOVE EDITED ST-V.SSN (EM=999-99-9999) TO #OWNER-SSN
*
IF INTRO-FLAG = 'S' OR = 'K' OR = 'G'
  FIND (1) LNK-V WITH MEMBER-KEY = LINKED-CN-A (1)
    MOVE EDITED LNK-V.SSN (EM=999-99-9999) TO #OWNER-SSN
    RESET #OWNER                                              /* YK3
    CALLNAT 'GPRS0CNT'  LNK-V.MEMBER-CONTACT-ID  #OWNER       /* NG1
    MOVE #OWNER TO #BD-OWNER  /* DEFAULT TO MEMBER IN CASE NO BD
    MOVE #OWNER TO #LNK-MBR   /* DW15
  END-FIND
END-IF
*
IF CONV-DURATION (#INS-INDEX) = 776 OR = 641 OR = 642 /* non-mbr onr
  RESET #OWNER   /* only use bd owner
END-IF
*
**COMPUTE #BD-ID = ID-NUMBER + 400000
#BD-ID := ID-NUMBER                       /* NG2
RESET #FND-BD-OWNER
**FIND (1) NT-V WITH ID-NUMBER = #BD-ID
FIND (1) BENE-F-V WITH ID-NUMBER = #BD-ID
  FOR.  FOR #I1 1 TO 6
    FOR #I2 1 TO 7
      IF   (ISSUE-DATE-YYMMDD (#INS-INDEX) = BENE-ISS-DT    (#I1, #I2))
          AND (SPLIT-IND         (#INS-INDEX) = BENE-SPLIT-IND (#I1, #I2))
        MOVE BENE-TEXT-LST-35 (#I1, 2, 5) TO #BD-OWNER
        IF #BD-OWNER = MASK (NNNNNN)
          FIND (1) ST-X WITH MEMBER-KEY = #BD-OWNER-6
            RESET #OWNER                                           /* YK3
            CALLNAT 'GPRS0CNT'  ST-X.MEMBER-CONTACT-ID  #OWNER     /* NG1                                               /* YK2
            MOVE EDITED ST-X.SSN (EM=999-99-9999) TO #OWNER-SSN
            MOVE TRUE TO #FND-BD-OWNER
          END-FIND
        ELSE
          IF #BD-OWNER = '*'
            MOVE BENE-TEXT (#I1, 1, 1) TO #BD-OWNER
            MOVE TRUE TO #FND-BD-OWNER
          ELSE
            MOVE #BD-OWNER TO #OWNER
            IF #OWNER = ' '  /* BLANK = INSURED IS OWNER
              MOVE #INSURED     TO #OWNER
              MOVE #INSURED-SSN TO #OWNER-SSN               /* YK1
            END-IF
          END-IF
        END-IF
*
        ESCAPE BOTTOM (FOR.)
      END-IF
    END-FOR
  END-FOR
END-FIND
*
* orig owner "non-mbr (776/641/642) will have owner in #owner if bd done
IF   (CONV-DURATION (#INS-INDEX) = 776 OR = 641 OR = 642) /* pol type N
    AND (#OWNER = ' ')
  MOVE 'NOT ENTERED YET - SEE LIN EAGAN' TO #OWNER
END-IF
*
IF NOT #FND-BD-OWNER
  IF CONV-DURATION (#INS-INDEX) = 888
    MOVE 'AAFMAA' TO #OWNER
  END-IF
*
  IF CONV-DURATION (#INS-INDEX) = 777 OR = 611 OR = 612 /* pol type T
    MOVE 'TRUST' TO #OWNER
  END-IF
*
  IF CONV-DURATION (#INS-INDEX) = 778 OR = 621 OR = 622 /* pol type I
    MOVE 'THE INSURED' TO #OWNER
  END-IF
*
  IF CONV-DURATION (#INS-INDEX) = 779 OR = 631 OR = 632 /* pol type S
    IF INTRO-FLAG = 'K' OR = 'G'
      MOVE 'THE MEMBER"S WIDOW' TO #OWNER
    ELSE
      IF NAME-SP NE ' '
        CALLNAT 'GPRS0CNT'  ST-V.SPOUSE-CONTACT-ID  #OWNER   /* NG1
*       MOVE NAME-SP TO #OWNER
      ELSE
        MOVE 'THE SPOUSE' TO #OWNER
      END-IF
    END-IF
  END-IF
END-IF
*
MOVE PREM-RATING (#INS-INDEX) TO #PREM-RATING
MOVE MEC-IND (#INS-INDEX) TO #MEC-IND
MOVE ISSUE-AGE(#INS-INDEX) TO #SCN-AGE
*
MOVE ISSUE-DATE-MM (#INS-INDEX) TO #MON-X
*
COMPRESS ISSUE-DATE-DD (#INS-INDEX) #MONTH (#MON-X)
  ISSUE-DATE-YYYY (#INS-INDEX) INTO #SCN-DATE WITH '-'
*
IF PLAN (#INS-INDEX) NE 'RT'
  MOVE PUP-MM (#INS-INDEX) TO #MON-X
*
  COMPRESS ISSUE-DATE-DD (#INS-INDEX) #MONTH (#MON-X)
    PUP-YYYY (#INS-INDEX) INTO #SCN-DATE-PAID-UP
END-IF
*
IF SMOKER-FLAG (#INS-INDEX) = 'S'
  MOVE 'YES   ' TO #SMOKER-LBL
  MOVE '50.' TO #MAT-AGE
  MOVE '49' TO #THRU-AGE
  MOVE '40,' TO #LEV-AGE
  MOVE '39,' TO #AFTER-AGE
  MOVE '37' TO #INS-AGE
ELSE
  MOVE 'NO       ' TO #SMOKER-LBL
  MOVE '60.' TO #MAT-AGE
  MOVE '59' TO #THRU-AGE
  MOVE '50,' TO #LEV-AGE
  MOVE '49,' TO #AFTER-AGE
  MOVE '47' TO #INS-AGE
END-IF
*
MOVE PLAN (#INS-INDEX) TO #PLAN-3
IF   (#INS-INDEX = #FST-X)
    AND (NUM-MBRSHIPS (#INS-INDEX) = 1)
  IF PLAN (#INS-INDEX) = 'LT'
    MOVE 'LT1-0404 )' TO #DATA-3                                  /* PM7
    MOVE 'NMC0900     Certificate of Membership' TO #DESC2
  ELSE
*   IF (#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z') /* VAR TERM        /* YK4
    IF F-LT2-TRUE(<PLAN(#INS-INDEX)>)                             /* YK4
      IF CONV-DURATION (#INS-INDEX) = 662
        MOVE 'NMC/1000    Certificate of Membership' TO #DESC2
      ELSE
        MOVE 'NMC2/1000   Certificate of Membership' TO #DESC2
      END-IF
*     MOVE 'TLT2/1000)'  TO #DATA-3
      MOVE 'T21105)'  TO #DATA-3         /* DW14
    ELSE
      MOVE 'NMC0497     Certificate of Membership' TO #DESC2
    END-IF
  END-IF
ELSE
  IF PLAN (#INS-INDEX) = 'LT'
    MOVE 'AIC0900     Confirmation of Existing Membership' TO #DESC2
  ELSE
*   IF (#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z') /* VAR TERM        /* YK4
    IF F-LT2-TRUE(<PLAN(#INS-INDEX)>)                         /* YK4
      IF CONV-DURATION (#INS-INDEX) = 662
        MOVE 'AIC/1000    Confirmation of Existing Membership' TO #DESC2
      ELSE
        MOVE 'AIC2/1000   Confirmation of Existing Membership' TO #DESC2
      END-IF
    ELSE
      MOVE 'AIC0497     Confirmation of Existing Membership' TO #DESC2
    END-IF
  END-IF
END-IF
*
MOVE EDITED FACE-AMOUNT(#INS-INDEX)(EM=Z,ZZZ,ZZ9.99) TO #TEMP-FACE     /* RE1
COMPRESS '$' #TEMP-FACE INTO #SCN-FACE LEAVING NO SPACE
*
IF PLAN (#INS-INDEX) NE 'FSO'
  MOVE 'PREM/DUES PMT:' TO #PREM-DUES-LBL
END-IF
*
MOVE ISSUE-DATE (#INS-INDEX) TO #WYYYYMMDD-N
*
IF PLAN (#INS-INDEX) = 'RT'
  MOVE '5-YR RENEWABLE TERM' TO #PLAN-TYPE
  ADD 5 TO #WYYYY
  PERFORM FIND-PREV-DAY
*
  COMPRESS #WMM-A #WDD-A #WYYYY-A INTO #POL-EXP-DT-OVER-5 WITH '-'
*
  COMPRESS 'RT0497      5 Year Renewable Term thru age 70'
    INTO #DESC1
  MOVE 'RT-0302 )' TO #DATA-3
  IF #INS-INDEX = #FST-X
    MOVE #POL-EXP-DT TO #MBSHP-EXP-DT
  END-IF
*
  MOVE ' AGE' TO #YEARS-LBL
  MOVE '  ANN PREM' TO #GUARANTEED
  DECIDE FOR FIRST CONDITION
    WHEN MODE (#INS-INDEX) = 'G'
      COMPRESS #GUARANTEED '  MON ALLT  ALLT PREM/DUES'
        INTO #GUARANTEED
*     ADD +12              TO #PREMIUM-CALC
      MOVE +12 TO #PREMIUM-CALC
      MOVE 'Monthly' TO #FREQ
    WHEN MODE (#INS-INDEX) = 'M' OR = '0'    /* DW1
      COMPRESS #GUARANTEED '  MON PREM  MON PREM/DUES'
        INTO #GUARANTEED
      MOVE +12 TO #PREMIUM-CALC
      MOVE 'Monthly' TO #FREQ
    WHEN MODE (#INS-INDEX) = 'E'
      COMPRESS #GUARANTEED '  MON PREM  MON PREM/DUES'
        INTO #GUARANTEED
      MOVE +12 TO #PREMIUM-CALC
      MOVE 'Monthly' TO #FREQ
    WHEN MODE (#INS-INDEX) = 'Q' OR = '4'    /* DW1
      COMPRESS #GUARANTEED '  QTR PREM  QTR PREM/DUES'
        INTO #GUARANTEED
      MOVE +4 TO #PREMIUM-CALC
      MOVE 'Quarterly' TO #FREQ
    WHEN MODE (#INS-INDEX) = 'S' OR = '2'    /* DW1
      COMPRESS #GUARANTEED ' BI-A PREM  BI-A PREM/DUES'
        INTO #GUARANTEED
      MOVE +2 TO #PREMIUM-CALC
      MOVE 'Semi-annual' TO #FREQ
    WHEN MODE (#INS-INDEX) = 'A' OR = '1'   /* DW1
      COMPRESS #GUARANTEED '            ANN PREM/DUES'
        INTO #GUARANTEED
      MOVE +1 TO #PREMIUM-CALC
      MOVE 'Annual' TO #FREQ
    WHEN NONE
      IGNORE
  END-DECIDE               /* PM
*
  IF  (ONLINE-ACTION (#INS-INDEX) = '1')  /* new policy
      OR (ONLINE-ACTION-GN = '2')
    MOVE FACE-AMOUNT (#INS-INDEX) TO DEATH-BENEFIT (#INS-INDEX)
  END-IF
*
  MOVE FACE-AMOUNT   (#INS-INDEX) TO #PASS-FACE-AMOUNT
  MOVE DEATH-BENEFIT (#INS-INDEX) TO #NEW-DB
  MOVE DEATH-BENEFIT (#INS-INDEX) TO #CURR-DB
  MOVE PLAN          (#INS-INDEX) TO #PASS-PLAN
  MOVE ISSUE-AGE     (#INS-INDEX) TO #RT-AGE (1)
*
  IF NOT #RT-CURR
    MOVE ISSUE-DATE (#INS-INDEX) TO #YYYYMMDD
    SUBTRACT DOB FROM #YYYYMMDD
*
    IF #YYYY LT 100
      MOVE #YYYY TO #RT-AGE (1)
      MOVE #YYYY TO #SCN-AGE
    END-IF
*
    FIND NT-V WITH ID-NUMBER = ST-V.ID-NUMBER
      FOR #I1 1 TO 60
        IF NT-POL-ISS (#I1) = '* POL ISS'
          COMPRESS NT-PI-YYYY (#I1) NT-PI-MM (#I1) NT-PI-DD (#I1)
            INTO #YYYYMMDD-A LEAVING NO
*
          IF (#YYYYMMDD = ISSUE-DATE (#INS-INDEX))
              AND (NT-DB-LBL (#I1) = ' DB ')
            COMPRESS NT-DB-THOU (#I1) NT-DB-HUND(#I1) NT-DB-PENN (#I1)
              INTO #AMT-8 LEAVING NO
            FOR #I2 1 TO 8
              IF #AMT-8-X (#I2) = ' '
                MOVE '0' TO #AMT-8-X (#I2)
              END-IF
            END-FOR
*
            MOVE #AMT-8-N TO #PASS-FACE-AMOUNT #NEW-DB #CURR-DB
*           ESCAPE BOTTOM   /* continue hunting Removed 2/21/2007
            ESCAPE BOTTOM  /* chged 2/21/2007 to use the 1st Conv Note DW17
          END-IF
*
          IF (#YYYYMMDD = ISSUE-DATE (#INS-INDEX))
              AND ((NT-REN-LBL (#I1) = ' RT RENEWAL REVERSED FROM')
              OR  (NT-REN-LBL (#I1) = ' RT renewal reversed from'))
            COMPRESS NT-REN-THOU(#I1) NT-REN-HUND(#I1) NT-REN-PENN(#I1)
              INTO #AMT-8 LEAVING NO
            FOR #I2 1 TO 8
              IF #AMT-8-X (#I2) = ' '
                MOVE '0' TO #AMT-8-X (#I2)
              END-IF
            END-FOR
*
            MOVE #AMT-8-N TO #PASS-FACE-AMOUNT #NEW-DB #CURR-DB
            MOVE EDITED #AMT-8-N (EM=ZZZ,ZZ9.99) TO #TEMP-FACE
            COMPRESS '$' #TEMP-FACE INTO #SCN-FACE LEAVING NO SPACE
            ESCAPE BOTTOM   /* stop hunting
          END-IF
        END-IF
      END-FOR
    END-FIND
  END-IF
*
  FOR #ISC 1 TO 7
* only RT so rating not needed
    CALLNAT 'GPREMSXX' #PDA-SCR-COMMAND #PDA-SCR-ID #PDA-SCR-SUFFIX
      #PASS-PLAN #RT-AGE-N (#ISC) #HOLD-ANN-PREM
      ISSUE-DATE (#INS-INDEX) SMOKER-FLAG (#INS-INDEX)
      #PASS-FACE-AMOUNT P-GENDER                                    /* TT2
*
    COMPUTE ROUNDED #HOLD-MON-PREM (#ISC) =
      #HOLD-ANN-PREM  / 12
*                   #HOLD-ANN-PREM  / #PREMIUM-CALC
    MOVE EDITED #HOLD-MON-PREM (#ISC)(EM=ZZZZZZ.99)
      TO #SCN-VALUE (#ISC)
    COMPRESS '$' #SCN-VALUE (#ISC) INTO #SCN-VALUE (#ISC) LEAVING NO
*
    MOVE #RT-AGE-N (#ISC) TO #SCN-DUR (#ISC)
*   COMPUTE #TO-AGE-N = #RT-AGE-N (#ISC) + 4
    COMPUTE #TO-AGE-N = #RT-AGE-N (#ISC) + 5    /* DW12
    COMPRESS #SCN-DUR (#ISC) #TO-AGE INTO #SCN-DUR (#ISC) WITH '-'
    COMPRESS #RT-AGE-N(#ISC) #TO-AGE-N INTO #SCN-YEARS(#ISC) WITH '-'
    MOVE EDITED #HOLD-ANN-PREM (EM=ZZZZZZ.99) TO #SCN-ANN (#ISC)
    COMPRESS '$' #SCN-ANN (#ISC) INTO #SCN-ANN (#ISC) LEAVING NO
*
    IF #ISC GT 1
      PERFORM CALC-NEW-DB
    END-IF
*
    IF #ISC GT 1
      MOVE #RT-DB-1 (1) TO #RT-DB-1 (#ISC)
      MOVE #SCN-VALUE (1) TO #RT-PREM-2 (#ISC)
    ELSE
      MOVE EDITED #CURR-DB (EM=ZZZ,ZZZ.99) TO #RT-DB-1 (#ISC)
      MOVE #SCN-VALUE (1) TO #RT-PREM-2 (#ISC)
    END-IF
*
    MOVE EDITED #NEW-DB (EM=ZZZ,ZZZ.99) TO #RT-DB-2 (#ISC)
    COMPRESS '$' #RT-DB-2 (#ISC) INTO #RT-DB-2 (#ISC) LEAVING NO
*
    IF  (#ISC GE 7)
        OR (#RT-AGE-N (#ISC) GT 65)
      ESCAPE BOTTOM
    END-IF
    COMPUTE #RT-AGE-N (#ISC + 1) = #RT-AGE-N (#ISC) + 5
  END-FOR
*
  REPEAT
    IF  (#ISC GE 7)
        OR (#RT-AGE-N (#ISC) GT 65)
      ESCAPE BOTTOM
    END-IF
*
    COMPUTE #RT-AGE-N (#ISC + 1) = #RT-AGE-N (#ISC) + 5
    ADD 1 TO #ISC
  END-REPEAT
*
  MOVE DOB TO #WYYYYMMDD-N
  MOVE ISSUE-DATE-DD (#INS-INDEX) TO #WDD
  MOVE ISSUE-DATE-MM (#INS-INDEX) TO #WMM
  COMPUTE #WYYYY = #WYYYY + #RT-AGE-N (#ISC) + 5 /* chged from 6 11/2002
*
  PERFORM FIND-PREV-DAY    /* #mon-x should remain issue month
  MOVE #WMM TO #MON-X
* COMPRESS #WDD #MONTH (#MON-X) #WYYYY INTO #SCN-DATE-PAID-UP WITH '-'
*
  IF #RT-AGE-N (1) LT 25 MOVE 10 TO #MY ELSE
    IF #RT-AGE-N (1) LT 30 MOVE  9 TO #MY ELSE
      IF #RT-AGE-N (1) LT 35 MOVE  8 TO #MY ELSE
        IF #RT-AGE-N (1) LT 40 MOVE  7 TO #MY ELSE
          IF #RT-AGE-N (1) LT 45 MOVE  6 TO #MY ELSE
            IF #RT-AGE-N (1) LT 50 MOVE  5 TO #MY ELSE
              IF #RT-AGE-N (1) LT 55 MOVE  4 TO #MY ELSE
                IF #RT-AGE-N (1) LT 60 MOVE  3 TO #MY ELSE
                  IF #RT-AGE-N (1) LT 65 MOVE  2 TO #MY ELSE
                    IF #RT-AGE-N (1) LE 69 MOVE  1 TO #MY
                    END-IF END-IF END-IF END-IF END-IF
          END-IF END-IF END-IF END-IF END-IF
*
  IF #RT-AGE-N(#ISC) = 70 ADD 1 TO #MY END-IF
  COMPUTE #YEARS = (ISSUE-YYYY(#INS-INDEX) + (#MY * 5))
  COMPRESS #WDD #MONTH (#MON-X) #YEARS
    INTO #SCN-DATE-PAID-UP WITH '-'
*
  COMPRESS 'Term Life Insurance certificate guaranteed renewable'
    'at new premiums'  INTO #TEXT (1)
  COMPRESS 'at five year intervals from effective date thru age'
    '70, expiring at'  INTO #TEXT (2)
  COMPRESS 'age' #RT-AGE-N (#ISC) INTO #TEXT (3)
  COMPRESS #TEXT (3) '. Insurance is payable upon death of the i'
    'nsured while this '   INTO #TEXT (3) LEAVING NO
  MOVE     'certificate is in force.'    TO #TEXT (4)
  COMPRESS 'If kept in force, this certificate will end on'
    INTO #SCN-LINES(1)
  COMPRESS #SCN-LINES(1) #SCN-DATE-PAID-UP INTO #SCN-LINES(1)
  COMPRESS #SCN-LINES(1) '. Death Benefit' INTO #SCN-LINES(1) LEAVING NO
  COMPRESS 'is payable upon death of the insured while this certificate'
    'is in force.' INTO #SCN-LINES(2)
ELSE    /* EZ Term  YK6 Start
  IF PLAN (#INS-INDEX) = 'EZ'
    COMPRESS 'EZ TERM' INTO #PLAN-TYPE
    #SCN-LINES(1) := 'This Certificate is guaranteed renewable in five year intervals, as defined'
    #SCN-LINES(2) := 'in Terms and Conditions. The Death Benefit of this Policy remains level;'
    #SCN-LINES(3) := 'premiums increase as illustrated in the schedule below:'
    #SCN-LINES(4) := 'Attained Age of Insured     Monthly premium     Level Death Benefit'
* Ranges - 6 max
    CALLNAT 'GPRNNMT3' DOB ST-V.FACE-AMOUNT(#INS-INDEX) P-GENDER       /* TT1
      #FACE-AMOUNTS-A(*) #AGE-RANGES(*) #APREM(*)
    FOR #I1 = 1 TO 7                              /* NG3
      IF #AGE-RANGES(#I1) <> ' '
        RESET #TEXT-LINE
        #AGE-BAND  := #AGE-RANGES(#I1)
        #MPREM     := #APREM(#I1)
        #DEATH-BEN := #FACE-AMOUNTS-A(#I1)
        #SCN-LINES(#I1+4) := #TEXT-LINE
      END-IF
    END-FOR
    #SCN-LINES(11):= 'An insured"s initial and subsequent premium increases as the insured gets'
    #SCN-LINES(12):= 'older and advances through each five year age period.'
    DOB := DOB + 800000                           /* TT2
    #TERMINATION-DATE := FUNCTION-CALENDAR(<DOB,'W'>)         /* TT2
    COMPRESS #TERMINATION-DATE '.' INTO #TERMINATION-DATE LEAVING NO
    COMPRESS 'If kept in force, this Certificate will end on' #TERMINATION-DATE INTO #SCN-LINES(13)
*    'Death Benefit is payable upon death of the insured while this Certificate is in force.'
  ELSE   /* YK6 End
    IF PLAN (#INS-INDEX) = 'LT'
      MOVE '                AGE' TO #SCN-LINES(4)
      COMPRESS #SCN-LINES(4)
        '                        DEATH BENEFIT'
        INTO #SCN-LINES(4) LEAVING NO
*
      IF SMOKER-FLAG (#INS-INDEX) = 'S'
        COMPRESS 'This Certificate of Insurance ("Certificate")' /* DW15
          'provides a level death' INTO #SCN-LINES(1)
        COMPRESS 'benefit through the insured"s age 39, then decreasing'
          'until termination' INTO #SCN-LINES(2)
        COMPRESS 'at age 50 as follows:' TO #SCN-LINES(3)
        ADD 50 TO #WYYYY
        COMPRESS #WMM-A #WDD-A #WYYYY-A INTO #POL-EXP-DT-OVER-5 WITH '-'
        MOVE '                Through 39' TO #SCN-LINES(5)
        MOVE '                40-44     ' TO #SCN-LINES(6)
        MOVE '                45-49     ' TO #SCN-LINES (7)
        MOVE '                50        ' TO #SCN-LINES (8)
      ELSE
        COMPRESS 'This Certificate of Insurance ("Certificate")' /* DW15
          'provides a level death' INTO #SCN-LINES(1)
        COMPRESS 'benefit through the insured"s age 49, then decreasing'
          'until termination' INTO #SCN-LINES(2)
        COMPRESS 'at age 60 as follows:' TO #SCN-LINES(3)
        ADD 60 TO #WYYYY
        COMPRESS #WMM-A #WDD-A #WYYYY-A INTO #POL-EXP-DT-OVER-5 WITH '-'
        MOVE '                Through 49' TO #SCN-LINES(5)
        MOVE '                50-54     ' TO #SCN-LINES(6)
        MOVE '                55-59     ' TO #SCN-LINES (7)
        MOVE '                60        ' TO #SCN-LINES (8)
      END-IF
*
      IF #INS-INDEX = #FST-X
        MOVE #POL-EXP-DT TO #MBSHP-EXP-DT
      END-IF
*
      RESET #SCN-VALUE(*)
      COMPRESS 'LEVEL TERM I' INTO #PLAN-TYPE
      MOVE FACE-AMOUNT (#INS-INDEX) TO #LT-DB
      MOVE EDITED #LT-DB (EM=ZZZ,ZZ9) TO #SCN-VALUE (1)
      COMPRESS #SCN-LINES(5) '                   $' #SCN-VALUE (1)
        INTO #SCN-LINES(5) LEAVING NO
*
      COMPUTE #LT-DB = FACE-AMOUNT (#INS-INDEX) * .27
      MOVE EDITED #LT-DB (EM=ZZZ,ZZ9) TO #SCN-VALUE (2)
      COMPRESS #SCN-LINES(6) '                        $' #SCN-VALUE (2)
        INTO #SCN-LINES(6) LEAVING NO
*
      COMPUTE #LT-DB = FACE-AMOUNT (#INS-INDEX) * .20
      MOVE EDITED #LT-DB (EM=ZZZ,ZZ9) TO #SCN-VALUE (3)
      COMPRESS #SCN-LINES(7) '                        $' #SCN-VALUE (3)
        INTO #SCN-LINES(7) LEAVING NO
*
      COMPRESS #SCN-LINES(8) '                           $      0'
        INTO #SCN-LINES(8) LEAVING NO
      MOVE DOB TO #WYYYYMMDD-N
*                                                /* DW15 below
      COMPRESS 'Premiums will remain level until termination. The death'
        'benefit is payable' INTO #SCN-LINES(9)
      COMPRESS 'upon death of the Insured while this Certificate is in'
        'force. While in' INTO #SCN-LINES(10)
      COMPRESS 'force, this Certificate may be exchanged as defined'
        'under "Guaranteed' INTO #SCN-LINES(11)
      COMPRESS 'Exchange" or converted as defined under "Conversion'
        'Option".'    TO #SCN-LINES(12)
      MOVE 'LT1-0404 )' TO #DATA-3                                  /* PM7
    ELSE
      IF PLAN (#INS-INDEX) = 'SO' OR = 'FSO'
        MOVE 'N/A' TO #SMOKER-LBL
        MOVE 'SO0497     Accidental Death and Dismemberment Policy'
          TO #DESC1
*
        IF PLAN (#INS-INDEX) = 'FSO'
          COMPRESS '* Membership is free for 1 year from effective'
            'date.'           INTO #TEXT (2)
        END-IF
*
        MOVE 'Lifetime' TO #POL-EXP-DT-OVER-5
        MOVE ' DUES PAYMENT:' TO #PREM-DUES-LBL
        MOVE 'LIFETIME' TO #SCN-DATE-PAID-UP
*
        IF PAY-STATUS (#INS-INDEX) GE '40'
          MOVE 'PAID-UP SERVICE ONLY' TO #PLAN-TYPE
        ELSE
          MOVE 'SERVICE ONLY' TO #PLAN-TYPE
        END-IF
      ELSE
*     IF (#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z') /* VAR TERM        /* YK4
        IF F-LT2-TRUE(<PLAN(#INS-INDEX)>)                           /* YK4
          IF CONV-DURATION (#INS-INDEX) = 662
            MOVE 'COLLEGE PROTECTION' TO #PLAN-TYPE
            MOVE 'TCPP/1000 College Protection Plan' TO #DESC1
            MOVE 'TCPP/1000)' TO #DATA-3
          ELSE
            COMPRESS 'LEVEL TERM II FOR ' #PLAN-A2-N ' YEARS'
              INTO #PLAN-TYPE
            MOVE 'TLT2/1000 Level Term II' TO #DESC1
*         MOVE 'TLT2/1000)'  TO #DATA-3
            MOVE 'T21105)'  TO #DATA-3         /* DW14
          END-IF
*
          MOVE ISSUE-DATE (#INS-INDEX) TO #WYYYYMMDD-N
*
          ADD #PLAN-A2-N TO #WYYYY
          PERFORM FIND-PREV-DAY
          COMPRESS #WMM-A #WDD-A #WYYYY-A INTO #POL-EXP-DT-OVER-5 WITH '-'
          MOVE #WMM TO #MON-X
          COMPRESS #WDD #MONTH (#MON-X) #WYYYY-A
            INTO #SCN-DATE-PAID-UP WITH '-'
*
*       MOVE 'Premium Rate Classification:' TO #SCH-BEN
*
          IF PREM-RATING (#INS-INDEX) NE ' '
            COMPRESS #SCH-BEN ' Class' PREM-RATING (#INS-INDEX)
              INTO #SCH-BEN
          ELSE
            IF #PLAN-A1 = 'U' OR = 'X' OR = 'S'                 /* YK4
              COMPRESS #SCH-BEN ' Standard' INTO #SCH-BEN
            ELSE
              IF #PLAN-A1 = 'V' OR = 'Y' OR = 'R'               /* YK4
                COMPRESS #SCH-BEN ' Select' INTO #SCH-BEN
              ELSE
                COMPRESS #SCH-BEN ' Super Select' INTO #SCH-BEN
              END-IF
            END-IF
          END-IF
*
* YK5 Start
          IF F-LT2PLUS-TRUE(<#PLAN-3>)    /* LTII+
            COMPRESS 'This Certificate provides a level death benefit for'
              #PLAN-A2-N 'years ' INTO #SCN-LINES(2)
            #SCN-LINES(3) := '("The Initial Term Period") and thereafter as defined in Terms and '
            #SCN-LINES(4) := 'Conditions. Premiums will remain level during the Initial Term Period,'
*
            MOVE ISSUE-DATE (#INS-INDEX) TO #YYYYMMDD     /* DW16
            ADD #PLAN-A2-N TO #YYYY
            COMPRESS #DD-A #MONTH (#MM) #YYYY-A
              INTO #SCN-LINES (5) WITH '-'
*
            COMPRESS #SCN-LINES (5) '.' INTO #SCN-LINES (5) LEAVING NO
            COMPRESS  'until 12:01 AM (EST)' #SCN-LINES (5) 'The death benefit is payable upon'
              INTO #SCN-LINES(5)
            #SCN-LINES(6) := 'death of the Insured while this Certificate is in force.'
            #SCN-LINES(8) := 'After the Initial Term Period, premiums increase annually to age 100'
            #SCN-LINES(9) := 'as illustrated on page 2 of this Certificate. AAFMAA will send the'
            #SCN-LINES(10):= 'Owner a notice prior to each premium increase.'
          ELSE /* LTII
* YK5 end
            COMPRESS 'This certificate provides a level death benefit for'
              #PLAN-A2-N 'years. Premiums' INTO #SCN-LINES(2)
*
            MOVE ISSUE-DATE (#INS-INDEX) TO #YYYYMMDD     /* DW16
            ADD #PLAN-A2-N TO #YYYY
            COMPRESS #DD-A #MONTH (#MM) #YYYY-A
              INTO #SCN-LINES (3) WITH '-'
            COMPRESS #SCN-LINES (3) '.' INTO #SCN-LINES (3) LEAVING NO
            COMPRESS 'will remain level until termination at 12:01 AM'
              '(EST)' #SCN-LINES (3) 'Death' INTO #SCN-LINES(3)
            COMPRESS 'benefit is payable upon death of the insured while'
              'this certificate is' INTO #SCN-LINES(4)
            COMPRESS 'in force. This certificate'
              INTO #SCN-LINES(5) LEAVING NO       /* PM3
*
            IF #PLAN-A1 = 'X' OR = 'Y' OR = 'Z'   /* with rider
              COMPRESS #DESC1 'with Conv Rider' INTO #DESC1
              COMPRESS #SCN-LINES(5)  'contains a Conversion Rider.' /* PM3
                INTO #SCN-LINES(5)
            ELSE
              COMPRESS #DESC1 'without Conv Rider' INTO #DESC1
              COMPRESS #SCN-LINES(5) 'does not contain a'
                'Conversion Rider.'
                INTO #SCN-LINES(5)
            END-IF
          END-IF                                                                        /* YK5
*
          RESET #SCN-DUR (*) #SCN-ANN (*)
*
          IF #INS-INDEX = #FST-X
            MOVE #POL-EXP-DT TO #MBSHP-EXP-DT
          END-IF
*
          COMPRESS 'Term Life Insurance Policy with level death benefit'
            'for' #PLAN-A2-N 'years'  INTO #TEXT (1)
          COMPRESS 'Premiums to remain level throughout the life of the'
            'policy. Insurance is'  INTO #TEXT (2)
          COMPRESS 'payable upon death of the insured while this'
            'certificate is in force.'  INTO #TEXT (3)
          IF #PLAN-A1 = 'X' OR = 'Y' OR = 'Z'   /* with rider
            COMPRESS 'Conversion Rider must be exercised in accordance'
              'with the terms and'           INTO #TEXT (4)
            MOVE     'conditions of the policy.' TO #TEXT (5)
          ELSE
            COMPRESS 'This policy does not contain a Conversion'
              'Rider.'                       INTO #TEXT (4)
          END-IF
        ELSE    /* Whole life
          MOVE '                   SCHEDULE OF BENEFITS' TO #SCH-BEN
          MOVE 'YEARS' TO #YEARS-LBL
          MOVE 'GUARANTEED MINIMUM CASH VALUE' TO #GUARANTEED
*       COMPRESS 'WL0204      VALUE ADDED LIFE INSURANCE POLICY'
          COMPRESS 'TW0605      VALUE ADDED LIFE INSURANCE POLICY' /* DW14
            INTO #DESC1
*
*         IF PLAN (#INS-INDEX) = 'AL'           /* DW4
          IF IS-ANNUITY-LIFE(<PLAN(#INS-INDEX)>)                /* YK7  
            MOVE  'LIFE-ANNUITY' TO #PLAN-TYPE  /* DW4
          ELSE
            IF PLAN (#INS-INDEX) = 'GPL'         /* DW22
              compute #gpl-age-21-db = FACE-AMOUNT(#INS-INDEX) * 2    /* DW22
              MOVE  'Generations Plus Whole-life' TO #PLAN-TYPE
            ELSE
              IF PLAN (#INS-INDEX) = 'GP2'                             /*TT1
                compute #gpl-age-21-db = FACE-AMOUNT(#INS-INDEX) * 2    /* DW22
                MOVE  'Generations Plus 2 Whole-life' TO #PLAN-TYPE
              ELSE
                COMPRESS 'VALUE-ADDED WHOLE LIFE' INTO #PLAN-TYPE
              END-IF
            END-if
          END-IF
*       MOVE 'WL0204 )' TO #DATA-3
          MOVE 'TW0605 )' TO #DATA-3            /* DW14
          MOVE '                YEARS' TO #SCN-LINES(1)
          COMPRESS #SCN-LINES(1) '            GUARANTEED MINIMUM CASH'
            'VALUE'    INTO #SCN-LINES(1)
          MOVE 1 TO #SCN-X
*
          IF (#PLAN = 'OL' or = 'GP') AND (PAY-STATUS(#INS-INDEX) LT '40') /*DW22
            COMPUTE #WYYYYMMDD-N = DOB + 1000000               /* TT2
*         MOVE ISSUE-DATE-DD (#INS-INDEX) TO #WDD   /* use iss date dd
          ELSE
            MOVE ISSUE-DATE(#INS-INDEX) TO #WYYYYMMDD-N
*
            IF #PLAN = MASK (NN) /* all non numeric plans will
              ADD #PLAN-N2 TO #WYYYY  /* create mat date as iss date
            ELSE
              IF #PLAN-A1 = MASK (N)
                ADD #PLAN-N1 TO #WYYYY
              END-IF
            END-IF
          END-IF
*
          IF PAY-STATUS (#INS-INDEX) LT '40' /*pusp have iss dt as matdate
            PERFORM FIND-PREV-DAY
          END-IF
*
          MOVE #WMM TO #MON-X
          COMPRESS #WDD #MONTH(#MON-X) #WYYYY
            INTO #SCN-DATE-PAID-UP WITH '-'
*
*         IF PLAN (#INS-INDEX) = 'AL'           /* DW19
          IF IS-ANNUITY-LIFE(<PLAN(#INS-INDEX)>)                /* YK7  
            compress 'This ANNUITYLife certificate includes value-added'
              'growth to both death' into #scn-lines (9)
            COMPRESS 'benefit and cash value. The death benefit is payable'
              'upon death of the'  into #scn-lines (10)
            Compress 'insured while this certificate is in force per Section'
              '1.2 Proceeds of your ' into #scn-lines (11)
            Compress 'Terms and Conditions. This certificate matured on'
              #scn-date-paid-up into #scn-lines (12)
            compress #scn-lines (12) '. Premiums'
              into #scn-lines (12) leaving no
            compress 'ended but death benefit will continue unless an annuity'
              'option is selected.' into #scn-lines (13)
          else
            IF PLAN (#INS-INDEX) = 'GPL'          /* DW22
              COMPRESS 'This whole life certificate includes a guaranteed'
                ' death benefit which ' INTO #SCN-LINES(9) LEAVING NO
              COMPRESS 'doubles on the insured"s age 21st birthday.'
                'Death Benefit is payable upon'INTO #SCN-LINES(10)
              COMPRESS 'death of the insured while this certificate is in force.'
                'If kept in force,' INTO #SCN-LINES(11)
              COMPRESS 'premiums will remain level until this certificate reaches'
                'maturity. At' INTO #SCN-LINES(12)
              COMPRESS 'maturity, premiums will end but Death Benefit will'
                'continue.' INTO #SCN-LINES(13)
            else
              IF PLAN (#INS-INDEX)   = 'GP2'          /* DW22
                COMPRESS 'This whole life certificate includes a guaranteed'
                  ' death benefit which ' INTO #SCN-LINES(9) LEAVING NO
                COMPRESS 'doubles on the insured"s age 18th birthday.'          /* TT1
                  'Death Benefit is payable upon'INTO #SCN-LINES(10)
                COMPRESS 'death of the insured while this certificate is in force.'
                  'If kept in force,' INTO #SCN-LINES(11)
                COMPRESS 'premiums will remain level until this certificate reaches'
                  'maturity. At' INTO #SCN-LINES(12)
                COMPRESS 'maturity, premiums will end but Death Benefit will'
                  'continue.' INTO #SCN-LINES(13)
              else
                COMPRESS 'This whole life certificate includes value-added'
                  ' growth to both death' INTO #SCN-LINES(9) LEAVING NO
                COMPRESS 'benefit and cash value. Death Benefit is payable'
                  ' upon death of the insured' INTO #SCN-LINES(10) LEAVING NO
*
                IF PAY-STATUS (#INS-INDEX) = '47'
                  COMPRESS 'while this certificate is in force. This'
                    'certificate matured on' INTO #SCN-LINES(11)
                  COMPRESS #SCN-LINES(11) #SCN-DATE-PAID-UP INTO #SCN-LINES(11)
                  COMPRESS #SCN-LINES(11) '.' INTO #SCN-LINES (11) LEAVING NO
                  MOVE 'Premiums ended but Death Benefit will continue.'
                    TO #SCN-LINES(12)
                ELSE
                  COMPRESS 'while this certificate is in force. If kept in '
                    'force, premiums will remain' INTO #SCN-LINES(11)
                  COMPRESS 'level until this certificate reaches maturity'
                    'on' INTO #SCN-LINES(12)
                  COMPRESS #SCN-LINES(12) #SCN-DATE-PAID-UP INTO #SCN-LINES(12)
                  COMPRESS #SCN-LINES(12) '. At maturity,' INTO #SCN-LINES(12)
                    LEAVING NO
                  COMPRESS 'premiums will end but Death Benefit will'
                    'continue.' INTO #SCN-LINES(13)
                end-if
              end-if
            END-IF
          end-if
*
          COMPRESS 'WHOLE LIFE POLICY WITH VALUE ADDED CASH BUILDUP'
            'PROVISIONS.' INTO #TEXT (1)
          COMPRESS 'INSURANCE IS PAYABLE WHEN THE INSURED DIES. PREMIUMS'
            'PAYABLE DURING'   INTO #TEXT (2)
          COMPRESS 'LIFE OF THE INSURED AS SCHEDULED ABOVE. LIFE'
            'INSURANCE PROTECTION'        INTO #TEXT (3)
          COMPRESS 'CONTINUES BEYOND MATURITY DATE WHEN PAID'
            'AS SCHEDULED ABOVE.'     INTO #TEXT (4)
*
          MOVE 'Payment Plan: ' TO #SCN-HDR-VAR-1
          IF PAY-STATUS (#INS-INDEX) GE '40'
            MOVE 'LIFE MEMBER' TO #SCN-TYPE
            MOVE 'PAID-UP' TO #POL-EXP-DT-OVER-5
          ELSE
            IF PLAN (#INS-INDEX) = 'OL'
              MOVE DOB TO #WYYYYMMDD-N               /* TT2
              MOVE 'ORDINARY LIFE' TO #SCN-TYPE
*           MOVE ISSUE-AGE (#INS-INDEX) TO #ISS-AGE
*           COMPUTE #NUM = 100 - #ISS-AGE-N
*           COMPRESS #SCN-HDR-VAR-1 #NUM 'YEARS ' INTO #SCN-HDR-VAR-1
*           ADD 100 TO #WYYYY
*           COMPRESS #WMM-A #WDD-A #WYYYY-A
*                 INTO #POL-EXP-DT-OVER-5 WITH '-'
              MOVE 'TO AGE 100' TO #POL-EXP-DT-OVER-5
              COMPRESS #SCN-HDR-VAR-1 #POL-EXP-DT-OVER-5
                INTO #SCN-HDR-VAR-1
*
              IF PREM-RATING (#INS-INDEX) NE ' '
                COMPRESS #SCN-HDR-VAR-1 'Class' PREM-RATING (#INS-INDEX)
                  INTO #SCN-HDR-VAR-1
              END-IF
*
            ELSE
              MOVE PLAN (#INS-INDEX) TO #PLAN
              IF #PLAN = MASK (N'P')
                COMPRESS #PLAN-N1 'PAYMENT LIFE' INTO #SCN-TYPE
                COMPRESS #SCN-HDR-VAR-1 #PLAN-N1 'YEARS'
                  INTO #SCN-HDR-VAR-1
                ADD #PLAN-N1 TO #WYYYY
                COMPRESS #WMM-A #WDD-A #WYYYY-A
                  INTO #POL-EXP-DT-OVER-5 WITH '-'
              ELSE
                IF #PLAN = MASK (NN)
                  COMPRESS #PLAN-N2 'PAYMENT LIFE' INTO #SCN-TYPE
                  COMPRESS #SCN-HDR-VAR-1 #PLAN-N2 'YEARS'
                    INTO #SCN-HDR-VAR-1
                  ADD #PLAN-N2 TO #WYYYY
                  COMPRESS #WMM-A #WDD-A #WYYYY-A
                    INTO #POL-EXP-DT-OVER-5 WITH '-'
                END-IF
              END-IF
*
              IF PREM-RATING (#INS-INDEX) NE ' '                       /* DW21
                COMPRESS #SCN-HDR-VAR-1 ' Class' PREM-RATING (#INS-INDEX)
                  INTO #SCN-HDR-VAR-1
              End-if
            END-IF
          END-IF
*
          IF #INS-INDEX = #FST-X
            MOVE 'LIFETIME' TO #MBSHP-EXP-DT-OVER-5
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
END-IF        /* YK6
*
IF  (INTRO-FLAG = 'S' OR = 'K' OR = 'G')
    OR (MILITARY-SERVICE = 'EMP')
    OR (NUM-MBRSHIPS (#INS-INDEX) NE 1) /* remove if not 1st policy
  RESET #MBSHP-EXP-DT #DESC2 #RIDER-LINE
ELSE
  MOVE ' - Certificate of Membership' TO #RIDER-LINE              /* PM7
* MOVE ' - Rider to Certificate of Insurance' TO #RIDER-LINE
END-IF
*
IF #INS-INDEX NE #INS-INDEX
  RESET #MBSHP-EXP-DT
END-IF
*
RESET #ANN-SVC-FE
IF  (#FST-X = #INS-INDEX)
    AND (ISSUE-DATE (#INS-INDEX) GE 19970101)
    AND (MONTH-ALLOC-AMT (#INS-INDEX) NE 999.99)
    AND (DUES-ALL-PAID-IND NE 'Y')
    AND (NOT INTRO-FLAG = 'S' OR = 'K' OR = 'G'
    OR = 'O' OR = 'P' OR = 'Q')
  DECIDE ON FIRST VALUE #PLAN
    VALUE '2P' MOVE #SVC-FE-2P TO #ANN-SVC-FE
    VALUE '3P' MOVE #SVC-FE-3P TO #ANN-SVC-FE
    VALUE '4P' MOVE #SVC-FE-4P TO #ANN-SVC-FE
    VALUE '5P' MOVE #SVC-FE-5P TO #ANN-SVC-FE
    VALUE '6P' MOVE #SVC-FE-6P TO #ANN-SVC-FE
    VALUE '7P' MOVE #SVC-FE-7P TO #ANN-SVC-FE
    VALUE '8P' MOVE #SVC-FE-7P TO #ANN-SVC-FE
    VALUE '9P' MOVE #SVC-FE-7P TO #ANN-SVC-FE
    VALUE '20' MOVE #SVC-FE-20 TO #ANN-SVC-FE
    VALUE '30' MOVE #SVC-FE-30 TO #ANN-SVC-FE
    VALUE 'OL' MOVE #SVC-FE-OL TO #ANN-SVC-FE
*   VALUE 'RT' MOVE #SVC-FE-TM TO #ANN-SVC-FE                  /* YK4
*   VALUE 'LT' MOVE #SVC-FE-TM TO #ANN-SVC-FE                  /* YK4
    VALUE 'SP' MOVE #SVC-FE-SP TO #ANN-SVC-FE
    NONE        IGNORE
  END-DECIDE
*
* IF (#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z')                    /* YK4
  IF FUNCTION-TERM-POLICY(<PLAN(#INS-INDEX)>)                   /* YK4
    MOVE #SVC-FE-TM TO #ANN-SVC-FE
  END-IF
*
  IF (#PLAN = MASK (NN)) AND (#ANN-SVC-FE = 0)
    IF #PLAN LE '19' MOVE #SVC-FE-10 TO #ANN-SVC-FE ELSE
      IF #PLAN LE '29' MOVE #SVC-FE-20 TO #ANN-SVC-FE ELSE
        IF #PLAN LE '34' MOVE #SVC-FE-30 TO #ANN-SVC-FE ELSE
          MOVE #SVC-FE-OL TO #ANN-SVC-FE
        END-IF END-IF END-IF
  END-IF
END-IF
*
IF PAY-STATUS (#INS-INDEX) NE '47'
  MULTIPLY #ANN-SVC-FE BY 12
  MOVE EDITED #ANN-SVC-FE (EM=ZZ.99) TO #ANN-DUES
  COMPRESS '$' #ANN-DUES INTO #ANN-DUES LEAVING NO
END-IF
*
IF MODE (#INS-INDEX) = 'G'
  MOVE 'ALLOTMENT' TO #PMT-MODE
  MOVE 'Monthly Premium:   ' TO #SCN-HDR-VAR-2
  COMPUTE #MODAL-PREM =  ANNUAL-PREM (#INS-INDEX) / 12
  COMPUTE #MOD-DUES   =  #ANN-SVC-FE / 12
ELSE
  IF MODE (#INS-INDEX) = 'M' OR = 'E' OR = '0'    /* DW1
    MOVE 'MONTHLY' TO #PMT-MODE
    MOVE 'Monthly Premium:   ' TO #SCN-HDR-VAR-2
    COMPUTE #MODAL-PREM =  ANNUAL-PREM (#INS-INDEX) / 12
    COMPUTE #MOD-DUES   =  #ANN-SVC-FE / 12
  ELSE
    IF MODE (#INS-INDEX) = 'Q' OR = '4'     /* DW1
      MOVE 'QUARTERLY' TO #PMT-MODE
      MOVE 'Quarterly Premium: ' TO #SCN-HDR-VAR-2
      COMPUTE #MODAL-PREM =  ANNUAL-PREM (#INS-INDEX) / 4
      COMPUTE #MOD-DUES   =  #ANN-SVC-FE / 4
    ELSE
      IF MODE (#INS-INDEX) = 'S' OR = '2'   /* DW1
        MOVE 'SEMI-ANNUALLY' TO #PMT-MODE
        MOVE 'Semi-Annual Premium:' TO #SCN-HDR-VAR-2
        COMPUTE #MODAL-PREM =  ANNUAL-PREM (#INS-INDEX) / 2
        COMPUTE #MOD-DUES   =  #ANN-SVC-FE / 2
      ELSE
        IF MODE (#INS-INDEX) = 'A' OR = '1'     /* DW1
          MOVE 'ANNUALLY' TO #PMT-MODE
          MOVE 'Annual Premium:    ' TO #SCN-HDR-VAR-2
          MOVE ANNUAL-PREM (#INS-INDEX) TO #MODAL-PREM
          MOVE #ANN-SVC-FE TO #MOD-DUES
        END-IF
      END-IF
    END-IF
  END-IF
END-IF
*
IF PAY-STATUS (#INS-INDEX) = '47'    /* DW8
  MOVE 'Single Premium:' TO #SCN-HDR-VAR-2
  MOVE TOT-PREMIUMS-PAID (#INS-INDEX) TO #MODAL-PREM
  MOVE EDITED #MODAL-PREM (EM=ZZZ,ZZZ.99) TO #PREM-DUES
ELSE
  ADD #MOD-DUES TO #MODAL-PREM
  MOVE EDITED #MODAL-PREM (EM=Z,ZZZ.99) TO #PREM-DUES
END-IF
*
COMPRESS '$' #PREM-DUES INTO #PREM-DUES LEAVING NO
*
IF PLAN (#INS-INDEX) = 'RT'
  IGNORE
ELSE
  COMPRESS #SCN-HDR-VAR-2 ' ' #PREM-DUES INTO #SCN-HDR-VAR-2
* IF (#PLAN-A1 GE 'U') AND (#PLAN-A1 LE 'Z') /* VAR TERM            /* YK4
  IF F-LT2-TRUE(<PLAN(#INS-INDEX)>)                                 /* YK4
    IF F-LT2PLUS-TRUE(<PLAN(#INS-INDEX)>)                           /* YK4
      #LEVEL-II := 'LEVEL TERM II+'                                 /* YK4
    ELSE
      #LEVEL-II := 'LEVEL TERM II'                                  /* YK4
    END-IF
    COMPRESS #LEVEL-II 'FOR' #PLAN-A2-N 'YEARS' INTO #PLAN-TYPE     /* YK4
    COMPRESS 'Premium Rate Classification:' #SCH-BEN
      INTO #SCN-HDR-VAR-1 LEAVING NO
    COMPRESS 'Premium Rate Classification:' #SCH-BEN
      INTO #SCH-BEN LEAVING NO
  END-IF
END-IF
*
IF PLAN (#INS-INDEX) = 'FSO'
  COMPRESS #PREM-DUES '*' INTO #PREM-DUES LEAVING NO
END-IF
*
IF PLAN (#INS-INDEX) = 'RT'
  IF #MOD-DUES NE 0
    MOVE '(With dues)' TO #DUES-MSG
  END-IF
*
  MOVE 'SEE TABLE'TO #PREM-DUES
  FOR #ISC 1 TO 7
    IF #SCN-ANN (#ISC) = ' '
      ESCAPE BOTTOM
    END-IF
*
    COMPUTE #HOLD-TTL-PREM (#ISC) = #HOLD-MON-PREM (#ISC) + #MOD-DUES
    MOVE EDITED #HOLD-TTL-PREM (#ISC)(EM=ZZZZZZ.99) TO #SCN-TOTAL(#ISC)
    COMPRESS '$' #SCN-TOTAL (#ISC) INTO #SCN-TOTAL (#ISC) LEAVING NO
  END-FOR
END-IF                      /* PM
*
IF RESTRICT-MBR-SW = 'Y'
  MOVE '      THIS IS A SPECIAL CATEGORY MEMBERSHIP.' TO #SCN-ROW9
ELSE
  MOVE 'INCREASES WILL BE BASED ON OUR VALUE ADDED PROCESS.'
    TO #SCN-ROW9
  MOVE 'AN ANNUAL STATEMENT OF ACCOUNT WILL BE FURNISHED.'
    TO #SCN-ROW10
END-IF
*
CALLNAT 'GPLNMSXX' #SCN-POLICY-NUMBER ID-NUMBER #INS-INDEX
*
IF PLAN (#INS-INDEX) = 'RT'
  MOVE 'SEE TABLE' TO #SCN-PREM
ELSE
  MOVE EDITED ANNUAL-PREM (#INS-INDEX) (EM=ZZZ,ZZ9.99) TO #TEMP-PREM
  MOVE LEFT #TEMP-PREM TO #TEMP-PREM
  MOVE ANNUAL-PREM (#INS-INDEX) TO #HOLD-ANN-PREM
  COMPRESS '$' #TEMP-PREM INTO #SCN-PREM LEAVING NO SPACE
END-IF                       /* PM
*
RESET #SCN-ROW11
MOVE 'ANNUAL PREMIUM:' TO #ANN-PREM-LBL
IF PAY-STATUS (#INS-INDEX) = '47'
  MOVE 'SINGLE PAYMENT:' TO #ANN-PREM-LBL
  MOVE 'N/A' TO  #PMT-MODE #PREM-DUES #ANN-DUES #SCN-DATE-PAID-UP
  COMPRESS #SCN-HDR-VAR-1 'PAID-UP WHOLE LIFE' INTO #SCN-HDR-VAR-1
*
  IF PREM-RATING (#INS-INDEX) NE ' '         /* DW21
    compress  'Payment Plan: PAID-UP Class' PREM-RATING (#INS-INDEX)
      INTO #SCN-HDR-VAR-1
  END-IF
*
  MOVE ROUNDED ST-V.TOT-PREMIUMS-PAID (#INS-INDEX)
    TO #WHOLE-DOLLARS
  MOVE EDITED #WHOLE-DOLLARS (EM=ZZZ,ZZ9) TO #TEMP-PREM
  MOVE #WHOLE-DOLLARS TO #HOLD-ANN-PREM
  COMPRESS '$' #TEMP-PREM INTO #SCN-PREM LEAVING NO SPACE
ELSE
  IF PAY-STATUS(#INS-INDEX) = '45'
    MOVE '                       REDUCED PAID-UP' TO #SCN-ROW11
    MOVE *DATN TO #YYYYMMDD
    COMPRESS #DD-A #MONTH(#MM) #YYYY-A INTO
      #SCN-REDUCED-TODAY
    MOVE PUP-MM(#INS-INDEX) TO #MON-X
    COMPRESS PUP-DD(#INS-INDEX) #MONTH (#MON-X)
      PUP-YYYY(#INS-INDEX) INTO #SCN-REDUCED-DATE
    IF CONVERSION-FLAG (#INS-INDEX) = 'C' OR = 'N'
      IF ONLINE-ACTION(#INS-INDEX) EQ '1' OR ONLINE-ACTION-GN = '2'
        MOVE EDITED FACE-AMOUNT(#INS-INDEX)(EM=Z,ZZZ,ZZ9.99) TO #TEMP-FACE            /* vt2 was (EM=ZZ,ZZ9.99)
      ELSE
        IF (ISSUE-DATE-DD (#INS-INDEX) = 01) OR
            (ISSUE-DATE-DD(#INS-INDEX) GT #DD)
          MOVE EDITED DEATH-BENEFIT(#INS-INDEX) (EM=Z,ZZZ,ZZ9.99)                     /* vt2 was (EM=ZZ,ZZ9.99)
            TO #TEMP-FACE
        ELSE
          MOVE EDITED NXT-MON-DEATH-BENEFIT (#INS-INDEX) (EM=Z,ZZZ,ZZ9.99)            /* vt2 was (EM=ZZ,ZZ9.99)
            TO #TEMP-FACE
        END-IF
      END-IF
    ELSE
      COMPUTE ROUNDED #HOLD-COMP-DB = FACE-AMOUNT (#INS-INDEX) * 1.8
      MOVE EDITED #HOLD-COMP-DB (EM=Z,ZZZ,ZZ9.99) TO #TEMP-FACE                      /* vt2 was (EM=ZZ,ZZ9.99)
    END-IF
    COMPRESS '$' #TEMP-FACE INTO #SCN-REDUCED-AMT LEAVING NO SPACE
  ELSE
    IF PAY-STATUS (#INS-INDEX) GT '40'
      IF PREM-RATING (#INS-INDEX) NE ' '                       /* DW21
        COMPRESS #SCN-HDR-VAR-1 'PAID-UP Class' PREM-RATING (#INS-INDEX)
          INTO #SCN-HDR-VAR-1
      ELSE
        IF PAY-STATUS (#INS-INDEX) EQ '73'                                      /* YK6
          COMPRESS #SCN-HDR-VAR-1 'NURSING HOME EZ TERM' INTO #SCN-HDR-VAR-1    /* YK6
        ELSE                                                                    /* YK6
          COMPRESS #SCN-HDR-VAR-1 'PAID-UP WHOLE LIFE' INTO #SCN-HDR-VAR-1
        END-IF                                                                  /* YK6
      END-IF
*
      MOVE '                              PAID-UP' TO #SCN-ROW11
    END-IF
  END-IF
END-IF
*
IF PLAN (#INS-INDEX) = 'SO' OR = 'FSO'
  IF PAY-STATUS (#INS-INDEX) LT '40'
    MOVE EDITED #HOLD-ANN-PREM (EM=ZZZ.99) TO #ANN-DUES
  END-IF
*
  RESET #SCN-PREM
  RESET #ANN-PREM-LBL
END-IF
*
RESET #TERMED-ISS-DT
FOR #I1 1 TO 9
  IF   (ISSUE-DATE (#I1) = ISSUE-DATE (#INS-INDEX))
      AND (PLAN (#I1)       = PLAN (#INS-INDEX))
      AND (STATUS (#I1) = 'E' OR = 'F' OR = 'G' )
    MOVE ISSUE-DATE (#I1) TO #TERMED-ISS-DT
    ESCAPE BOTTOM
  END-IF
END-FOR
*
RESET #TOT-FACE
RESET #SPLIT-POL
FOR #I1 1 TO 9
  IF   (ISSUE-DATE (#I1) = ISSUE-DATE (#INS-INDEX))
      AND (ISSUE-DATE (#I1) = #TERMED-ISS-DT)
    ADD FACE-AMOUNT (#I1) TO #TOT-FACE
    IF STATUS (#I1) = 'D'
      MOVE TRUE TO #SPLIT-POL
    END-IF
  END-IF
END-FOR
*
IF #SPLIT-POL
  MOVE 'ORIGINAL GUARANTEED FACE AMOUNT' TO #LBL-1
  MOVE 'AMENDED GUARANTEED FACE AMOUNT'  TO #LBL-2
  MOVE EDITED #TOT-FACE (EM=ZZZ,ZZ9) TO #DATA-1
  COMPRESS '$' #DATA-1 INTO #DATA-1 LEAVING NO
  MOVE EDITED FACE-AMOUNT (#INS-INDEX) (EM=ZZZ,ZZ9) TO #DATA-2
  COMPRESS '$' #DATA-2 INTO #DATA-2 LEAVING NO
  MOVE '(REDUCED CERTIFICATE)' TO #NEW-TYPE-LBL
  MOVE *DATN TO #YYYYMMDD
  COMPRESS #DD-A #MONTH (#MM) #YYYY INTO #NEW-DATE WITH '-'
ELSE
  IF   (ONLINE-ACTION (#INS-INDEX) = '2' OR = '3' OR = '4' OR = 'N')
      AND (PAY-STATUS (#INS-INDEX) LE '40')
    MOVE '       ORIGINAL PLAN           ' TO #LBL-1
    MOVE '        AMENDED PLAN           ' TO #LBL-2
*
    IF ONLINE-ACTION (#INS-INDEX) = '2'
      MOVE 'OL ' TO #DATA-1
    ELSE
      IF ONLINE-ACTION (#INS-INDEX) = '3'
        MOVE '20P' TO #DATA-1
      ELSE
        IF ONLINE-ACTION (#INS-INDEX) = '4'
          MOVE '30P' TO #DATA-1
        ELSE
          MOVE '7P' TO #DATA-1
        END-IF
      END-IF
    END-IF
*
    MOVE PLAN (#INS-INDEX) TO #DATA-2
    MOVE '(CONVERTED CERTIFICATE)' TO #NEW-TYPE-LBL
    MOVE *DATN TO #YYYYMMDD
    COMPRESS #DD-A #MONTH (#MM) #YYYY-A INTO #NEW-DATE WITH '-'
  END-IF
END-IF
*
* IF   (NOT #PLAN-3 = 'RT' OR = 'LT' OR = 'SO' OR = 'FSO') /* YK4
*   AND ((#PLAN-A1 LT 'U') OR (#PLAN-A1  GT 'Z'))          /* YK4
IF   (NOT #PLAN-3 = 'SO' OR = 'FSO')                       /* YK4
    AND (NOT FUNCTION-TERM-POLICY(<PLAN(#INS-INDEX)>))     /* YK4
  PERFORM CALL-AOCX2V5A
END-IF
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-CAP-CSV
* * * * * * * * * * * * * * * *
*
IF PAY-STATUS (#INS-INDEX) GE '40'
  MOVE #CSV TO #CAP-CSV
  ESCAPE ROUTINE
END-IF
*
IF FACE-AMOUNT (#INS-INDEX) GT 10000.00
  COMPUTE ROUNDED #WORK-CAP-CONV-ACV =
    ((#CSV - #CAP-CONV-ACV) * (FACE-AMOUNT (#INS-INDEX) - 10000))
    / FACE-AMOUNT (#INS-INDEX)
  ADD #WORK-CAP-CONV-ACV TO #CAP-CONV-ACV
END-IF
*
IF X-LOAN-AMOUNT (#INS-INDEX) = 0
  MOVE X-LOAN-DATE (#INS-INDEX) TO #CAP-LOAN-END-DATE
ELSE
  RESET #CAP-LOAN-END-DATE
END-IF
*
CALLNAT 'CCAPCSVP'
  ID-NUMBER
  ISSUE-DATE (#INS-INDEX)
  #CAP-LOAN-END-DATE
  #CALC-DATE
  #CAP-CONV-ACV
  #CSV
  #CAP-CSV
  #CAP-LOAN-MONS
  #CAP-CSV-MONS
  #CAP-REMAIN-MONS
*
END-SUBROUTINE  /* (1582)
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE FIND-PREV-DAY
* * * * * * * * * * * * * * * *
*
SUBTRACT 1 FROM #WDD
IF #WDD = 0
  SUBTRACT 1 FROM #WMM
  IF #WMM = 0
    MOVE 12 TO #WMM
    SUBTRACT 1 FROM #WYYYY
  END-IF
*
  IF #WMM = 4 OR = 6 OR = 9 OR = 11
    MOVE 30 TO #WDD
  ELSE
    IF #WMM = 02
      IF #WYYYY = 2000 OR = 2004 OR = 2008 OR = 2012
        MOVE 29 TO #WDD
      ELSE
        MOVE 28 TO #WDD
      END-IF
    ELSE
      MOVE 31 TO #WDD
    END-IF
  END-IF
END-IF
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALL-AOCX2V5A
* * * * * * * * * * * * * * * * * *
*
IF  (STATUS (#INS-INDEX) NE 'D')
    OR ((PAY-STATUS (#INS-INDEX) = '45')
    AND (ISSUE-DATE (#INS-INDEX) LT *DATN - 100000))
  ESCAPE ROUTINE
END-IF
*
IF MTD-ACV-PREM-ADJ (#INS-INDEX) NE 9999999.99
  ADD MTD-ACV-PREM-ADJ (#INS-INDEX)
    TO #PROJECTION-VIEW.ACC-CASH-VALUE (#INS-INDEX)
  ADD MTD-ACV-PREM-ADJ (#INS-INDEX)
    TO #PROJECTION-VIEW.CASH-VALUE (#INS-INDEX)
END-IF
*
IF MTD-ACV-INT-ADJ (#INS-INDEX) NE 99999.99
  ADD MTD-ACV-INT-ADJ (#INS-INDEX)
    TO #PROJECTION-VIEW.ACC-CASH-VALUE (#INS-INDEX)
  ADD MTD-ACV-INT-ADJ (#INS-INDEX)
    TO #PROJECTION-VIEW.CASH-VALUE (#INS-INDEX)
END-IF
*
IF MTD-ACV-COI-ADJ (#INS-INDEX) NE 99999.99
  SUBTRACT MTD-ACV-COI-ADJ (#INS-INDEX)
    FROM #PROJECTION-VIEW.ACC-CASH-VALUE (#INS-INDEX)
  SUBTRACT MTD-ACV-COI-ADJ (#INS-INDEX)
    FROM #PROJECTION-VIEW.CASH-VALUE (#INS-INDEX)
END-IF
*
* IF (#PROJECTION-VIEW.PAY-STATUS (#INS-INDEX) = '47')
* and (#PROJECTION-VIEW.ACC-CASH-VALUE (#INS-INDEX) LE 0)
IF (#PROJECTION-VIEW.ISSUE-DATE (#INS-INDEX) GT *DATN - 10000)
    AND (ST-V.X-FIRST-PLACE-FEE (#INS-INDEX) GT 400.00)
*  MOVE ST-V.DEBIT-CREDIT-AMT TO
  MOVE TOT-PREMIUMS-PAID (#INS-INDEX)     /* so nc uses full puap
    TO #PROJECTION-VIEW.ACC-CASH-VALUE (#INS-INDEX) /* amt even if not
    #PROJECTION-VIEW.CASH-VALUE (#INS-INDEX)     /* yet paid
END-IF
*
MOVE C*ACTIVE-SEGMENTS TO #L-ACTIVE-SEG
MOVE *DATN TO #WYYYYMMDD-N
COMPRESS #WMM-A #WDD-A #WYYYY-A INTO #PARM-DATE WITH '/'
MOVE #INS-INDEX        TO #L-SEGNO
MOVE ST-V.PAID-TO-DATE (#INS-INDEX) TO #L-PAID-THRU
*
FOR #I1 1 TO 9
  IF STATUS (#INS-INDEX) = 'D'
    MOVE ISSUE-DATE (#INS-INDEX) TO #L-ISS-DT (#I1)
  END-IF
END-FOR
*
MOVE 06900              TO #L-GROWTH-RATE    /* DW9
RESET                      #L-MONTHLY-SW
MOVE 1986               TO #L-MNTHLY-START-YR
MOVE 'NC'               TO #L-REIN-CODE
MOVE 99                 TO #L-NUM-PROJ-YRS
MOVE 'N'                TO #L-DISPLAY-CALCS
MOVE 'Y'                TO #L-SHOW-LOAN-REPAID  /* was 'N'  /* DW18
MOVE PREM-RATING (#INS-INDEX) TO #L-PREM-RATING  /* DW6
* DISPLAY 'DOB' DATE-OF-BIRTH 'NUM/SEG' #L-ACTIVE-SEG 'SEG' #L-SEGNO
*         'PREM' ANNUAL-PREM (#L-SEGNO)
*  'CSV' CASH-VALUE (#L-SEGNO)
*  'DUR' DURATION (#L-SEGNO)
*  'FAC' FACE-AMOUNT (#L-SEGNO)
*  'AGE' ISSUE-AGE (#L-SEGNO)
*  'PD-THRU' #L-PAID-THRU #L-ISS-DT (#L-SEGNO)
* WRITE
*   'GRO/RATE' #L-GROWTH-RATE
*  'ACV' ACC-CASH-VALUE (#L-SEGNO)
*   'MCSV' MIN-CASH-VALUE (#L-SEGNO)
*   'NXT/MCSV' NXT-YR-MIN-CASH-VALUE (#L-SEGNO)
*  'NPR' NET-PR-RATIO (#L-SEGNO)
*    INTRO-FLAG
* WRITE    'ONLINE/ACTION-GN' ONLINE-ACTION-GN
* WRITE    'ONLINE/ACTION' ONLINE-ACTION (#L-SEGNO)
* STOP   /* <<<<<<<<<<<<<<<<<<<<<<<<<<<
IF *DEVICE = 'BATCH'
**                                             SAG RH1 10282005 AB START
**CALL 'AOCX2V5B' #PROJECTION-VIEW.ID-NUMBER
**                #L-ACTIVE-SEG
**                #L-NUM-DTLS
  CALLNAT 'AOCX2V5B'  #PROJECTION-VIEW  #L-MISC-INPUT  #L-OUTPUT-INFO
**
ELSE
**
**CALL 'AOCX2V5A' #PROJECTION-VIEW.ID-NUMBER
**                #L-ACTIVE-SEG
**                #L-NUM-DTLS
  CALLNAT 'AOCX2V5A'  #PROJECTION-VIEW  #L-MISC-INPUT  #L-OUTPUT-INFO
**                                             SAG RH1 10282005 AB END
END-IF
*
* DISPLAY #L-PTY-YEAR (1:10)
*   #L-PTY-MIN-CSV (1:10)
*   #L-PTY-PR-CSV (1:10)
*   #L-PTY-MIN-DB (1:10)
*
MOVE #INS-INDEX TO #IDX
RESET #USE-X-CALCS
IF   (ISSUE-DATE (#IDX) GE 19970101)
    AND (MONTH-ALLOC-AMT (#IDX) NE 999.99)
  MOVE TRUE TO #USE-X-CALCS
END-IF
*
MOVE 1 TO #ISC
FOR #I1 1 TO 10
  IF #L-PTY-MEM-AGE (#I1) = 100 OR = 0
    ESCAPE BOTTOM
  END-IF
* * * * * * * beginning of tot-prms-paid test
  IF PLAN (#IDX) = 'OL' or = 'GPL' OR = 'GP2'                    /* DW22
    IF #USE-X-CALCS
      COMPUTE #MAX-YRS = (DOB-YYYY + 100)
        - #PROJECTION-VIEW.ISSUE-DATE-YYYY (#IDX)
    ELSE
      COMPUTE #MAX-YRS = (DOB-YYYY + 96)
        - #PROJECTION-VIEW.ISSUE-DATE-YYYY (#IDX)
    END-IF
  ELSE
    IF PLAN (#IDX) NE 'SPF'
      RESET #MAX-YRS
      IF PLAN-2A (#IDX) = 'P' OR = 'F'
        MOVE PLAN-1A (#IDX) TO #MAX-YRS-A1
      ELSE
        MOVE PLAN-2 (#IDX) TO #MAX-YRS-A2
      END-IF
    END-IF
  END-IF
*
  IF PAY-STATUS (#IDX) = '47' OR = '48' OR = '45'
    IF   (PAY-STATUS (#IDX) = '47')
        AND ((ONLINE-ACTION-GN    = '2')
        OR (ONLINE-ACTION (#IDX) = '1'))
      MOVE TOT-PREMIUMS-PAID (#IDX) TO #DUES-PAID
*     COMPRESS 'Monthly Premium: N/A' INTO #SCN-HDR-VAR-2   /* DW8
    ELSE
      IF PAY-STATUS (#IDX) = '45'
        MOVE #L-PAID-THRU-YYYY TO #WORK-DATE-YYYY
        MOVE #L-PAID-THRU-MM   TO #WORK-DATE-MM
*
        COMPUTE #NUM-MONTHS =
          (((#WORK-DATE-YYYY - ISSUE-DATE-YYYY (#IDX)) * 12)
          + (#WORK-DATE-MM - ISSUE-DATE-MM (#IDX)))
        COMPUTE #DUES-PAID = TOT-PREMIUMS-PAID (#IDX)
          + (#NUM-MONTHS * (ANNUAL-PREM (#IDX) / 12))
      ELSE
*       IF PAY-STATUS (#IDX) = '47'
*         MOVE TOT-PREMIUMS-PAID (#IDX) TO #DUES-PAID
*         COMPRESS 'Monthly Premium: N/A' INTO #SCN-HDR-VAR-2
*       END-IF
        MOVE TOT-PREMIUMS-PAID (#IDX) TO #DUES-PAID
      END-IF
    END-IF
  ELSE
    IF #L-PTY-POL-AGE (#I1) GT #MAX-YRS
      COMPUTE #DUES-PAID = TOT-PREMIUMS-PAID (#IDX)
        + (ANNUAL-PREM (#IDX) * #MAX-YRS)
    ELSE
      COMPUTE #DUES-PAID = TOT-PREMIUMS-PAID (#IDX)
        + (ANNUAL-PREM (#IDX) * #L-PTY-POL-AGE (#I1))
    END-IF
  END-IF
*    Below added 10/27/2003 from tim & crooks for PP pols w lump sum
*    Below is also in C2V10PVP & must be keep the same
  IF #USE-X-CALCS
      AND (ST-V.TOT-PREMIUMS-PAID (#IDX) GT 0)
      AND (PAY-STATUS (#IDX) LT '40')
    IF  (PLAN (#IDX) = 'OL' OR = 'SP' OR = 'SO' or = 'GPL' OR = 'GP2')   /* DW22      /*TT1
      COMPUTE #PP-YEARS = 100 - ISSUE-AGE-N (#IDX)
      COMPUTE #PP-YEARS = 100 - 50
    ELSE
      MOVE PLAN (#IDX) TO #PLAN
      IF #PLAN = MASK (NN)
        MOVE #PLAN-N2  TO #PP-YEARS
      ELSE
        MOVE #PLAN-N1 TO #PP-YEARS
      END-IF
    END-IF
*
    COMPUTE ROUNDED #LUMP-PREM-VALUE = ST-V.TOT-PREMIUMS-PAID (#IDX)
      * (1 - (#L-PTY-POL-AGE (#I1) / #PP-YEARS))
    IF #LUMP-PREM-VALUE LT 0
      RESET #LUMP-PREM-VALUE
    END-IF
*
    IF (#LUMP-PREM-VALUE + #L-PTY-MIN-CSV (#I1))
        GT #L-PTY-MIN-CSV (#I1)
      COMPUTE #L-PTY-MIN-CSV (#I1) =
        #LUMP-PREM-VALUE + #L-PTY-MIN-CSV (#I1)
    END-IF
*
    IF TOT-PREMIUMS-PAID (#IDX) GT #L-PTY-MIN-CSV (#I1)
      MOVE TOT-PREMIUMS-PAID (#IDX) TO #L-PTY-MIN-CSV (#I1)
    END-IF
  END-IF
*
  MOVE ROUNDED #DUES-PAID TO #DUES-PD-DOLS
*
* ISPLAY #USE-X-CALCS ISSUE-AGE(#IDX) PREM-RATING(#IDX) ISSUE-DATE(#IDX)
*    #I1 #IDX
  IF #USE-X-CALCS AND (NOT PLAN (#FST-X) = 'SO' OR = 'FSO')
      AND (ISSUE-AGE (#IDX) LT '71')
      AND (PREM-RATING (#IDX) = ' ')
      AND (ISSUE-DATE (#IDX) LT 20030701)
*   COMPUTE #CSV-W-O-TDIV = #L-PTY-PR-CSV (#I1)
*                         - #L-PTY-MIN-DB (#I1) /* USED FOR TDIV
* DISPLAY 'CSV-w/o/TDIV' #CSV-W-O-TDIV
*   'csv'     #L-PTY-PR-CSV (#I1)
*   'MIN CSV' #L-PTY-MIN-CSV(#I1)
*   'age' #L-PTY-POL-AGE (#I1)
*   'dues/paid' #DUES-PD-DOLS
*   'iss-dt'    ISSUE-DATE (#IDX)
*
    IF #L-PTY-MIN-CSV (#I1) GT #L-PTY-PR-CSV (#I1)
* RITE 'reset min w csv- csv=' #CSV-W-O-TDIV 'min=' #L-PTY-PR-CSV (#I1)
      MOVE #L-PTY-PR-CSV (#I1) TO #L-PTY-MIN-CSV (#I1)
    END-IF
  END-IF
*
* DISPLAY #DUES-PD-DOLS #L-PTY-MIN-CSV (#I1)
  IF #DUES-PD-DOLS GT #L-PTY-MIN-CSV (#I1)  /* removed 6/2004 RLB
* RITE 'reset min w tpp- tpp=' #DUES-PD-DOLS 'min=' #L-PTY-MIN-CSV (#I1)
    MOVE #DUES-PD-DOLS TO #L-PTY-MIN-CSV (#I1)
  END-IF
*
* above reinstituted 10/6/2004 as per rlb & bmg
  IF #DUES-PD-DOLS GT #L-PTY-PR-CSV (#I1)
* RITE 'reset c w tpp- tpp=' #DUES-PD-DOLS 'min=' #L-PTY-PR-CSV (#I1)
    MOVE #DUES-PD-DOLS TO #L-PTY-PR-CSV (#I1)
  END-IF
*
  IF #L-PTY-MIN-CSV (#I1) GT #L-PTY-PR-CSV (#I1)
* ITE 'reset min w csv-csv=' #L-PTY-PR-CSV(#I1)'min=' #L-PTY-PR-CSV(#I1)
    MOVE #L-PTY-PR-CSV (#I1) TO #L-PTY-MIN-CSV (#I1)
  END-IF
* WRITE 'final min=' #L-PTY-MIN-CSV (#I1)
* * * * * * * end of tot-prms-paid test
*
  IF #L-PTY-MIN-CSV (#I1) LE 0
    ESCAPE TOP
  END-IF
*
  IF CONV-DURATION (#INS-INDEX) = 999   /* cap mbr policy
    MOVE #L-PTY-YEAR (#I1) TO #CALC-DATE-YYYY
    MOVE ISSUE-DATE-MM (#INS-INDEX) TO #CALC-DATE-MM
    MOVE ISSUE-DATE-DD (#INS-INDEX) TO #CALC-DATE-DD
    MOVE #L-PTY-MIN-CSV (#I1) TO #CSV
*
    PERFORM CALC-CAP-CSV
    MOVE #CAP-CSV TO #L-PTY-MIN-CSV (#I1)
  END-IF
*
  MOVE EDITED #L-PTY-MIN-CSV (#I1) (EM=ZZ,ZZZ,ZZ9) TO #SCN-VALUE(#ISC)
*
  IF #L-PTY-POL-AGE (#I1) LT 10
    MOVE EDITED #L-PTY-POL-AGE (#I1) (EM=^^^^^^9) TO #SCN-DUR (#ISC)
  ELSE
    MOVE EDITED #L-PTY-POL-AGE (#I1) (EM=^^^^^Z9) TO #SCN-DUR (#ISC)
  END-IF
  ADD 1 TO #SCN-X
  IF #SCN-X GE 9
    IGNORE
  ELSE
    COMPRESS FULL '             ' #SCN-DUR(#ISC)
      '                 ' #SCN-VALUE(#ISC) INTO #SCN-LINES(#SCN-X)
  END-IF
END-FOR
*
END-SUBROUTINE
*
* * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-NEW-DB
* * * * * * * * * * * * * * * *
*
IF SMOKER-FLAG (#INS-INDEX) = 'S'
  MOVE 2 TO #I2
ELSE
  MOVE 1 TO #I2
END-IF
*
IF #RT-AGE-N (#ISC) LT 50 MOVE 1 TO #I3 ELSE
  IF #RT-AGE-N (#ISC) LT 55 MOVE 2 TO #I3 ELSE
    IF #RT-AGE-N (#ISC) LT 60 MOVE 3 TO #I3 ELSE
      IF #RT-AGE-N (#ISC) LT 65 MOVE 4 TO #I3 ELSE
        IF #RT-AGE-N (#ISC) LT 70 MOVE 5 TO #I3 ELSE
          MOVE 6 TO #I3
        END-IF END-IF END-IF END-IF END-IF
*
COMPUTE ROUNDED #NEW-DB =
  #NEW-DB - (#NEW-DB * (#REDUCT-RATE (#I2, #I3)))
*
END-SUBROUTINE
*
END
