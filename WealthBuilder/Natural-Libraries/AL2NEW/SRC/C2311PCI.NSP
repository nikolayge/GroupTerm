* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 10
* <Natural Source Header
* PGM-ID: C2311PCI
*
*    CI SCREEN STATS UPDATING AND NOTE CREATION
******************************************************
*                       MODIFICATION LOG
* USER DATE      TAG  REASON
* DRW  02042005  DW1  Add P/I to LAPO note
* DRW  03312005  DW2  fix CASH Valu calc in lapo
* DRW  05152005  DW3  Add face Amt & TPP linkage to CVALUSXX
* DRW  04212005  DW4  ADD ANNUITIUZES NOTE ON AL CSV"S
* DRW  04215005  DW5  Fix DEAD on policy with prior terminations
* DRW 02/14/2008 DW6  Add "ANNU" TRAN Processing
* DRW 08/21/2008 DW7 GEN PLUS Processing
* RSE  20130213  RE1  Add EZ and LTII Processing
* YK1  20130405  YK1  Add note for ACDB transaction
* TMT 06/19/2014 TT1  Contact Normalization DOB and Sex
* TMT 10/27/2014 TT2
******************************************************
*
DEFINE DATA
GLOBAL USING BCOMMGXX WITH MASTER-BLOCK.CI-BLOCK
LOCAL USING C2311LCI
LOCAL USING GONERLXX
LOCAL
*
1 #HIST-KEY              (N15)
1 REDEFINE #HIST-KEY
 2 #HIST-ID-NUMBER       (N6)
 2 #HIST-ISS-DATE        (N8)
 2 #HIST-SPL-IND         (N1)
*
1 #HOLD-SUFFIX (A3)
1 #TO-INIT   (A3)
1 #HIST-KEY-YEAR-MONTH-P (P7)
1 #YEAR-MONTH-M          (N6)
1 REDEFINE #YEAR-MONTH-M
 2 #HIST-YYYY            (N4)
 2 #HIST-MM              (N2)
*
1 #IM    (I2)
1 #ID    (I2)
1 #IS    (I2)
1 #I2    (I2)
*
1 #PLAN-2    (A2)
1 #NET-DB            (P7.2)
1 #FOUND-DB-POL   (L)
1 #HIST-REC-FOUND (L)
1 #STATS-FOUND    (L) INIT<TRUE>
*
1 #AGE            (N8)
1 REDEFINE #AGE
 2 #AGE-YYYY      (N4)
 2 #AGE-MM        (N2)
 2 #AGE-DD        (N2)
*
1 #HOLD-MONTH    (N8)
1 REDEFINE #HOLD-MONTH
 2 #HOLD-MONTH-KEY   (N6)
 2 #HOLD-FIL         (N2)
*
1 #YYYYMMDD       (N8)
1 REDEFINE #YYYYMMDD
 2 #YYYYMM      (N6)
 2 REDEFINE #YYYYMM
  3 #YYYY       (N4)
  3 #MM         (N2)
 2 #DD          (N2)
1 REDEFINE #YYYYMMDD
 2 #YYYY-A      (A4)
 2 #MM-A        (A2)
 2 #DD-A        (A2)
*
1 #DOD-YYYYMMDD-G
 2 #DOD-YYYYMM     (N6)
 2 REDEFINE #DOD-YYYYMM
  3 #DOD-YYYY         (N4)
  3 #DOD-MM           (N2)
 2 #DOD-DD           (N2)
1 REDEFINE #DOD-YYYYMMDD-G
 2 #DOD-YYYYMMDD     (N8)
*
1 #STATS-TABLE   (A79)
1 REDEFINE #STATS-TABLE
 2 #ENTRIES          (5)
  3 #ST-MBR      (N1)
  3 #ST-MBRSHIP  (N2)
  3 #ST-PLANS    (N2)
  3 #ST-FACE     (N7.2)
 2 #ST-NET-DB    (N7.2)
*
1 #REIN-TABLE (A65)     /* WAS 44 rein TABLE FROM C2311PCI  was 51 YK6
1 REDEFINE #REIN-TABLE
  2 #G-L-REINSTATE (P3/9)        /* WAS 6          DW33  was 7 YK6
  2 #G-L-REINSTATE-DB (P7.2/9)
  2 #REIN-TERMED-THIS-MON (L)
  2 #PRIOR-OA (A1)
*
1 #G-L-TABLE (A63)   /* WAS 42  GAIN LOSS TABLE FROM C2311PCI was 49 YK6
1 REDEFINE #G-L-TABLE
  2 #G-L-LOSSES    (P3/9)      /* Was 6     DW33   was 7 YK6
  2 #G-L-LOSSES-DB (P7.2/9)
*
1 #GAINS-LIVES-BY-CAT-TABLE   (A24)    /* GAIN LOSS TABLE FROM C2311PCI  
1 REDEFINE #GAINS-LIVES-BY-CAT-TABLE
 2 #GAINS-LIVES-BY-CAT   (P5/4)
 2 #LOSSES-LIVES-BY-CAT  (P5/4)
*
1 #PASSED-INFO-G1
 2 #PRORATED-LOAN-INT-TABLE   (9)
  3 #PRORAT-LOAN-AMT    (P7.2)
1 REDEFINE #PASSED-INFO-G1
 2 #PASSED-INFO-1       (A45)    /* MUST BE KEPT UPDATED WITH ABOVE
*
1 #PASSED-INFO-G2
 2 #PRORATED-LOAN-INT-TABLE   (9)
  3 #PRORAT-INT         (P5.2)
 2 #TOT-RPU-LOAN-AMT    (P7.2)
 2 #TOT-RPU-INT-AMT     (P5.2)
1 REDEFINE #PASSED-INFO-G2
 2 #PASSED-INFO-2       (A45)   /* MUST BE KEPT UPDATED WITH ABOVE
* YK1 Start
1 #PASSED-INFO-G3
  2 #ACC-DEATH-BENEFIT  (N6.2)
  2 #PREM-REFUND-PASSED (N6.2)
  2 #PREM-DUE-PASSED    (N6.2)
  2 #DB-ADJ             (N6.2)
1 REDEFINE #PASSED-INFO-G3
  2 #PASSED-INFO-3 (A32)
* YK1 End
1 #ISS-DTE           (A10)
1 #FACE-K            (N4)        /* NG99
1 REDEFINE #FACE-K
 2 #FACE-K-A         (A4)
1 #TOT-FACE          (A4)
1 #TERMED-FACE       (A4)
*
* 1 #SCR-DAILY-INT     (P3.7)
* 1 #SCR-ACC-INT       (P5.2)
* 1 #SCR-ACC-INT-2     (P5.2)
1 #CASH-VALUE    (P7.2)
1 #P     (N7.2)     /* DW1
1 #I     (N7.2)     /* DW1
1 #P-DISP    (A11)  /* DW1
1 #I-DISP    (A9)   /* DW1
1 #OVLN-AMT          (P7.2)
1 #OVLN-AMT-DISP     (A9)
1 #OLD-PLAN          (A3)
1 #NEW-PLAN          (A7)
1 #AMT-DISP          (A10)
1 #TOT-AMT           (P7.2)
*
1 #PARTIAL-UNITS     (A15)
1 #INT               (I2)       /* USED FOR ADDITIONAL NOTES CNT
1 #WRITE-NOTE-RECORD  (L)       /* TRUE IF NOTE RECORD TO BE WRITTEN
1 #NOTE-REC-NOT-FOUND (L) INIT <TRUE>  /* TRUE IF NO NOTE RECORD YET
1 #NOTE-ISN           (P8)
1 #NOTE-TEXT          (A60/10)
*
1 #CONV-MSG-LINE-2   (A50)
1 REDEFINE #CONV-MSG-LINE-2
 2 #PRM-LBL          (A15) /* INIT <' TOT PREMS PAID '>
 2 #PRM-AMT          (A10)
 2 #PRM-THRU-LBL     (A06) /* init <' THRU '>
 2 #PRM-PD-THRU      (A07)
*
* BELOW for CALC-PREMS-PAID
1 #PP-DATE-OF-BIRTH  (N8)
1 #PP-ANNUAL-PREM    (N5.2)
1 #PP-PAY-STATUS     (A2)
1 #PP-TOT-PREMIUMS-PAID (N7.2)
1 #PP-PAID-TO-DATE   (N8)
1 #PP-ISSUE-DATE     (N8)
1 #PP-MODE           (A1)
1 #PP-PLAN           (A3)
1 #PP-COST-BASIS      (N7.2)
1 #PP-MONTH-ALLOC-AMT (N7.2)    /*TT1
1 #PP-INTRO-FLAG     (A1)
1 #PP-FIRST-PLACE-FEE (N7.2)
1 #PREMS-PAID         (P7.2)
1 #SUB-PREMS-PAID     (P7.2)
1 #PP-BADJ            (P5.2)
* ABOVE for CALC-PREMS-PAID
*
1 #SUFFIX     (A3)
1 #AS-OF-DT   (N8)
1 #LOAN-BAL   (N7.2/9)
1 #LOAN-BAL-2 (N7.2/9)
1 #ACC-INT    (N7.2/9)
1 #ACC-INT-2  (N7.2/9)
1 #CSV        (N7.2/9)
1 #CVALUE     (N7.2/9)
1 #LVALUE     (N7.2/9)
1 #MCSV       (N7.2/9)
1 #DB         (N7.2/9)
1 #ANN-PREMIUM (N7.2/9)
1 #FACE-AMT    (N7.2/9)  /* DW3
1 #TPP         (N7.2/9)  /* DW3
*
1 #DATE-OF-BIRTH    (N8.0)            /* TT1
END-DEFINE
* * * * * * * * * * *
INCLUDE GONERCXX
*
INPUT #STATS-TABLE      /* RECEIVE PASSED INFO FROM C2300PCI
      #PASSED-INFO-1    /* RECEIVE PASSED INFO FROM C2300PCI
      #PASSED-INFO-2    /* RECEIVE PASSED INFO FROM C2300PCI
      #PASSED-INFO-3    /* RECEIVE PASSED INFO FROM C2300PCI
      #REIN-TABLE       /* RECEIVE PASSED INFO FROM C2300PCI
      #G-L-TABLE        /* RECEIVE PASSED INFO FROM C2300PCI
      #GAINS-LIVES-BY-CAT-TABLE
*
GET ST-V #CGA-ISN
*
MOVE *DATN TO #AS-OF-DT
MOVE CI-V.FACE-AMOUNT (*) TO #FACE-AMT (*)   /* DW3
CALLNAT 'CVALUSXX'
  CI-V.ID-NUMBER
  #SUFFIX
  #AS-OF-DT
  #LOAN-BAL   (1:9)
  #LOAN-BAL-2 (1:9)
  #ACC-INT    (1:9)
  #ACC-INT-2  (1:9)
  #CSV        (1:9)
  #CVALUE     (1:9)
  #LVALUE     (1:9)
  #MCSV       (1:9)
  #DB         (1:9)
  #ANN-PREMIUM  (1:9)
  #FACE-AMT   (1:9)   /* DW3
  #TPP        (1:9)   /* DW3
*
RESET #DATE-OF-BIRTH                                                   /* TT1
#DATE-OF-BIRTH := GET-DATE-OF-BIRTH(<CI-V.MEMBER-CONTACT-ID>)          /* TT1
*
FOR #ISC 1 TO 9        /* CREATE NOTES
  MOVE #SCR-EFF-DTE-YYYYMMDD (#ISC) TO #YYYYMMDD
  COMPRESS #MM-A '/' #DD-A '/' #YYYY-A INTO #ISS-DTE LEAVING NO
*
  IF #SCR-TRAN (#ISC) = 'REIN'
*   IF NOT #REIN-TERMED-THIS-MON
*     RESET #NOTE-TEXT (*)
*     COMPRESS 'CN' #CGA-ID 'has REINSTATED a policy issued'
*              #SCR-EFF-DTE (#ISC)                 INTO #NOTE-TEXT (1)
*     MOVE 'LCE'      TO #TO-INIT
*     MOVE #CGA-SCR-SUFFIX TO #HOLD-SUFFIX
*     MOVE '*NX' TO #CGA-SCR-SUFFIX
*     FETCH RETURN 'G4090PNX' #CGA-CLERK #TO-INIT #NOTE-TEXT (1:5)
*     MOVE #HOLD-SUFFIX TO #CGA-SCR-SUFFIX
*   END-IF
*
    MOVE TRUE TO #WRITE-NOTE-RECORD
    ADD 1 TO #INT
    COMPRESS '* POL ISS' #ISS-DTE
             'REINSTATED ON' *DAT4U INTO #NOTE-TEXT (#INT)
*
    IF #REIN-TERMED-THIS-MON
      COMPRESS #NOTE-TEXT (#INT) '-adjstd stats'
             INTO #NOTE-TEXT (#INT)
    END-IF
  END-IF
*
  RESET #PARTIAL-UNITS
  FOR #I1 1 TO 9
    IF (#SCR-EFF-DTE-YYYYMMDD (#ISC) = CI-V.ISSUE-DATE (#I1))
     AND (#SCR-PLN (#ISC) = CI-V.PLAN (#I1))
     AND (CI-V.STATUS (#I1) = 'E')            /* purged seg
      COMPUTE #FACE-K = CI-V.FACE-AMOUNT (#I1) / 1000
      COMPRESS #FACE-K-A 'K' INTO #TERMED-FACE LEAVING NO
    END-IF
  END-FOR
*
  FOR #I1 1 TO 9
    IF (#SCR-EFF-DTE-YYYYMMDD (#ISC) = CI-V.ISSUE-DATE (#I1))
     AND (#SCR-PLN (#ISC) = CI-V.PLAN (#I1))
     AND (CI-V.STATUS (#I1) = 'D')            /* PARTIALS
     AND (#SCR-TRAN (#ISC) NE 'CORR')
      COMPUTE #FACE-K = (CI-V.FACE-AMOUNT (#I1) / 1000) + #FACE-K
      COMPRESS #FACE-K-A 'K' INTO #TOT-FACE LEAVING NO
      COMPRESS #TERMED-FACE 'OF' #TOT-FACE 'ON' INTO #PARTIAL-UNITS
    END-IF
  END-FOR
*
  IF #SCR-TRAN (#ISC) = 'CSV'
    MOVE TRUE TO #WRITE-NOTE-RECORD
    ADD 1 TO #INT
*
    IF IS-ANNUITY-LIFE(<#SCR-PLN(#ISC)>)           /* DW4    /* TT2
      COMPRESS '* ' #PARTIAL-UNITS ' POL ISS ' #ISS-DTE
           ' CSV"D ON ' *DAT4U ' was an "'#SCR-PLN(#ISC)'" policy' INTO #NOTE-TEXT (#INT) LEAVING NO
    ELSE
      COMPRESS '*' #PARTIAL-UNITS 'POL ISS' #ISS-DTE
           'CSV"D ON' *DAT4U INTO #NOTE-TEXT (#INT)
    END-IF
  END-IF
*
  IF #SCR-TRAN (#ISC) = 'ANNU'                      /* DW4
    MOVE TRUE TO #WRITE-NOTE-RECORD
    ADD 1 TO #INT
*
    COMPRESS '*' #PARTIAL-UNITS 'POL ISS' #ISS-DTE
          'ANNUITIZED ON' *DAT4U INTO #NOTE-TEXT (#INT)
  END-IF

  IF #SCR-TRAN (#ISC) = 'CVEX'
    MOVE TRUE TO #WRITE-NOTE-RECORD
    ADD 1 TO #INT
    COMPRESS '*' #PARTIAL-UNITS 'POL ISS' #ISS-DTE
         'CSV EXC"D ON' *DAT4U INTO #NOTE-TEXT (#INT)
*
    IF #CGA-MF-SCR-COMMAND = 'EI'  /* indicates exch internal
      COMPRESS #NOTE-TEXT(#INT) '- INTERNAL EXCH' INTO #NOTE-TEXT (#INT)
    END-IF
  END-IF
*
  IF #SCR-TRAN (#ISC) = 'RSGN'
    MOVE TRUE TO #WRITE-NOTE-RECORD
*   MOVE #ISC TO #I1   /* USUALLY WILL BE RIGHT
    MOVE #FILE-MATCHING-INDX (#ISC) TO #I1
    PERFORM CALC-PREMS-PAID-SETUP
    SUBTRACT CI-V.DEBIT-CREDIT-AMT FROM #PREMS-PAID
    MOVE EDITED #PREMS-PAID (EM=ZZ,ZZZ.99) TO #AMT-DISP
    COMPRESS '$' #AMT-DISP INTO #AMT-DISP LEAVING NO
    ADD 1 TO #INT
*
    IF #PARTIAL-UNITS NE ' '           /* ADDED 01/12/2000 TO SPLIT NOTE
      IF   (INTRO-FLAG NE 'F')    /* NO REFUND ON "FSO'
       AND (NOT CI-V.PLAN (#I1) = 'LT' OR = 'RT')  /* OR TERM INS
        IF CI-V.ISSUE-DATE (#I1) LT 19990101
          COMPRESS '*' #AMT-DISP INTO #NOTE-TEXT (#INT)
          COMPRESS #NOTE-TEXT (#INT) ' REFD' INTO #NOTE-TEXT (#INT)
                                              LEAVING NO
        ELSE
          IF CI-V.CONV-DURATION (#I1) = 999 /* cap
            MOVE '* No Refund' TO #NOTE-TEXT (#INT)
          ELSE
            MOVE '* See RE for REFD' TO #NOTE-TEXT (#INT)
          END-IF
        END-IF
        ADD +1 TO #INT
      END-IF
*
      COMPRESS '*' #PARTIAL-UNITS 'POL ISS' #ISS-DTE
                   'RESIGNED ON' *DAT4U INTO #NOTE-TEXT (#INT)
    ELSE
      COMPRESS '*' #PARTIAL-UNITS 'POL ISS' #ISS-DTE
                    'RESIGNED ON' *DAT4U INTO #NOTE-TEXT (#INT)
*
      IF   (INTRO-FLAG NE 'F')    /* NO REFUND ON "FSO'
       AND (NOT CI-V.PLAN (#I1) = 'LT' OR = 'RT') /* OR ON TERM POLS
        IF CI-V.ISSUE-DATE (#I1) LT 19990101
          COMPRESS #NOTE-TEXT (#INT) '-' #AMT-DISP ' REFD'
                  INTO #NOTE-TEXT (#INT) LEAVING NO
        ELSE
          IF CI-V.CONV-DURATION (#I1) = 999 /* cap
            COMPRESS #NOTE-TEXT(#INT)'- No Refund' TO #NOTE-TEXT (#INT)
          ELSE
            COMPRESS #NOTE-TEXT (#INT) '- See RE for REFD'
                    INTO #NOTE-TEXT (#INT) LEAVING NO
          END-IF
        END-IF
      END-IF
    END-IF
  END-IF
*
  IF #SCR-TRAN (#ISC) = 'LAPS'
    MOVE TRUE TO #WRITE-NOTE-RECORD
    ADD 1 TO #INT
    COMPRESS '*' #PARTIAL-UNITS 'POL ISS' #ISS-DTE
             'LAPSED ON' *DAT4U INTO #NOTE-TEXT (#INT)
  END-IF
*
  IF #SCR-TRAN (#ISC) = 'LAPN'
    MOVE TRUE TO #WRITE-NOTE-RECORD
    ADD 1 TO #INT
    COMPRESS '*' #PARTIAL-UNITS 'POL ISS' #ISS-DTE
               'LAPS NOPMT ON' *DAT4U INTO #NOTE-TEXT (#INT)
  END-IF
*
  IF #SCR-TRAN (#ISC) = 'LAPC'
    MOVE TRUE TO #WRITE-NOTE-RECORD
    ADD 1 TO #INT
    COMPRESS '*' #PARTIAL-UNITS 'POL ISS' #ISS-DTE
             'LAPC ON' *DAT4U INTO #NOTE-TEXT (#INT)
  END-IF
*
  IF #SCR-TRAN (#ISC) = 'LAPO'
    MOVE TRUE TO #WRITE-NOTE-RECORD
    FOR #I1 1 TO 9
      IF   (#SCR-EFF-DTE-YYYYMMDD (#ISC) =  CI-V.ISSUE-DATE (#I1))
       AND (#SCR-PLN              (#ISC) =  CI-V.PLAN       (#I1))
        IF  (CI-V.ISSUE-DATE-DD (#I1) = 01)
         OR (CI-V.ISSUE-DATE-DD (#I1) LE #TODAY-DD)   /* DW2
          MOVE CI-V.CASH-VALUE (#I1) TO #CASH-VALUE
        ELSE
          MOVE CI-V.NXT-MON-CASH-VALUE (#I1) TO #CASH-VALUE
        END-IF
*
        COMPUTE #P = ST-V.X-LOAN-AMOUNT   (#I1)    /* DW1
                   + ST-V.X-LOAN-AMOUNT-2 (#I1)    /* DW1
        COMPUTE #I = #ACC-INT (#I1) + #ACC-INT-2 (#I1) /* DW1
        COMPUTE #OVLN-AMT = #P + #I - #CASH-VALUE   /* DW1
        MOVE EDITED #P (EM=ZZZZ,ZZZ.99) TO #P-DISP  /* DW1
        MOVE EDITED #I (EM=-Z,ZZZ.99) TO #I-DISP    /* DW1
        MOVE EDITED #OVLN-AMT (EM=-Z,ZZZ.99) TO #OVLN-AMT-DISP
        MOVE LEFT #P-DISP TO #P-DISP               /* DW1
        MOVE LEFT #I-DISP TO #I-DISP               /* DW1
        MOVE LEFT #OVLN-AMT-DISP TO #OVLN-AMT-DISP
      END-IF
    END-FOR
*
    ADD 1 TO #INT
*   COMPRESS '* LOAN AMT + ACC-INT EXCEEDED TOTAL CASH-VALUE BY $'
    COMPRESS '* P+I' #P-DISP '+' #I-DISP 'Exceeds CSV by $'
         #OVLN-AMT-DISP      INTO #NOTE-TEXT (#INT)
*
    ADD 1 TO #INT
    COMPRESS '*' #PARTIAL-UNITS 'POL ISS' #ISS-DTE
                 'LAPS OVRLN ON' *DAT4U INTO #NOTE-TEXT (#INT)
  END-IF
*
  IF #SCR-TRAN (#ISC) = 'CONV'
    RESET #OLD-PLAN
    MOVE #FILE-MATCHING-INDX (#ISC) TO #I1
*   FOR #I1 = 1 TO 9             /* FIND PRIOR PLAN
*     IF (#SCR-EFF-DTE-YYYYMMDD (#ISC) = CI-V.ISSUE-DATE (#I1))
*      AND (CI-V.STATUS (#I1) = 'D')
        IF CI-V.PAY-STATUS (#I1) = '47' OR = '48'
          MOVE 'PU' TO #NEW-PLAN
        ELSE
          IF #SCR-PLN (#ISC) = 'LTD'
            MOVE 'LTD' TO #NEW-PLAN
          ELSE
            MOVE CI-V.PLAN (#I1) TO #NEW-PLAN
          END-IF
        END-IF
*
        IF CI-V.ONLINE-ACTION (#I1) = '2'
          MOVE 'OL' TO #OLD-PLAN
        ELSE
          IF CI-V.ONLINE-ACTION (#I1) = '3'
            MOVE '20P' TO #OLD-PLAN
          ELSE
            IF CI-V.ONLINE-ACTION (#I1) = '4'
              MOVE '30P' TO #OLD-PLAN
            ELSE
              IF CI-V.ONLINE-ACTION (#I1) = 'N'
                MOVE '7P' TO #OLD-PLAN
              ELSE
                IF CI-V.ONLINE-ACTION (#I1) = 'O'
                  MOVE 'RT' TO #OLD-PLAN
                ELSE
                  IF CI-V.ONLINE-ACTION (#I1) = 'P'
                    MOVE 'LT' TO #OLD-PLAN
                  END-IF
                END-IF
              END-IF
            END-IF
          END-IF
        END-IF
*       ESCAPE BOTTOM
*     END-IF
*   END-FOR
*
    MOVE TRUE TO #WRITE-NOTE-RECORD
    MOVE #SCR-MSG-LINE-2 TO #CONV-MSG-LINE-2
    ADD 1 TO #INT
    IF #OLD-PLAN = ' '
      COMPRESS '* POL ISS' #ISS-DTE 'CONV TO' #NEW-PLAN
                                           INTO #NOTE-TEXT (#INT)
    ELSE
      IF #OLD-PLAN = 'RT' OR = 'LT'
        COMPRESS '* POL ISS' #ISS-DTE INTO #NOTE-TEXT (#INT)
        COMPRESS #NOTE-TEXT (#INT) '-' CI-V.NUM-MBRSHIPS (#I1)
                INTO #NOTE-TEXT (#INT) LEAVING NO
        COMPRESS #NOTE-TEXT (#INT) #OLD-PLAN 'TO' #NEW-PLAN
                                            INTO #NOTE-TEXT (#INT)
      ELSE
        COMPRESS '* POL ISS' #ISS-DTE #OLD-PLAN 'TO' #NEW-PLAN
         '-TPP' #PRM-AMT 'THRU' #PRM-PD-THRU INTO #NOTE-TEXT (#INT)
      END-IF
    END-IF
  END-IF
*
  IF #SCR-TRAN (#ISC) = 'RPU'
    MOVE TRUE TO #WRITE-NOTE-RECORD
*
    IF  (#PRORAT-LOAN-AMT (#ISC) NE 0)
     OR (#PRORAT-INT      (#ISC) NE 0)
      ADD 1 TO #INT
      MOVE EDITED #PRORAT-LOAN-AMT (#ISC) (EM=ZZ,ZZZ.99) TO #AMT-DISP
      COMPRESS '* LOAN =' #AMT-DISP INTO #NOTE-TEXT (#INT) LEAVING NO
      MOVE EDITED #PRORAT-INT (#ISC) (EM=Z,ZZZ.99) TO #AMT-DISP
      COMPRESS #NOTE-TEXT (#INT) '- INTR =' INTO #NOTE-TEXT (#INT)
      COMPRESS #NOTE-TEXT (#INT) #AMT-DISP
                                      INTO #NOTE-TEXT (#INT) LEAVING NO
      COMPUTE #TOT-AMT = #PRORAT-LOAN-AMT (#ISC) + #PRORAT-INT (#ISC)
      MOVE EDITED #TOT-AMT (EM=Z,ZZZ.99) TO #AMT-DISP
      COMPRESS #NOTE-TEXT (#INT) '- LOAN+INT =' INTO #NOTE-TEXT(#INT)
      COMPRESS #NOTE-TEXT (#INT) #AMT-DISP INTO #NOTE-TEXT (#INT)
    END-IF
*
    ADD 1 TO #INT
    MOVE EDITED #SCR-DB (#ISC) (EM=ZZ,ZZZ.99) TO #AMT-DISP
    COMPRESS '* POL ISS' #ISS-DTE 'RPU"D ON' *DAT4U '(DB = $'
                                INTO #NOTE-TEXT (#INT)
    COMPRESS #NOTE-TEXT (#INT)
                   #AMT-DISP ')'INTO #NOTE-TEXT (#INT) LEAVING NO
  END-IF
*
  IF #SCR-TRAN (#ISC) = 'ETI'
    MOVE TRUE TO #WRITE-NOTE-RECORD
    ADD 1 TO #INT
    COMPRESS '* POL ISS' #ISS-DTE
           'ETI"D ON' *DAT4U INTO #NOTE-TEXT (#INT)
  END-IF
*
  IF #SCR-TRAN (#ISC) = 'CORR'
    MOVE #FILE-MATCHING-INDX (#ISC) TO #I1
    IF  (#SCR-STATUS (#ISC) = 'PULT')
     AND (CI-V.PAY-STATUS (#I1) NE 'PULT')
      MOVE TRUE TO #WRITE-NOTE-RECORD
      ADD 1 TO #INT
      COMPRESS '*Converted to Long Term Care Settlement'
             '- POL ISS' #ISS-DTE
           INTO #NOTE-TEXT (#INT)
    END-IF
  END-IF
* YK1
  IF #SCR-TRAN (#ISC) = 'ACDB'                      
    MOVE TRUE TO #WRITE-NOTE-RECORD
*     #INT := #INT + 1
*     COMPRESS '*' 'See RE for payment information' INTO #NOTE-TEXT(#INT)
    #INT := #INT + 1                
    COMPRESS '*' 'Accelerated Death Benefit paid on' *DAT4U INTO #NOTE-TEXT(#INT)
    #INT := #INT + 1
    MOVE EDITED #ACC-DEATH-BENEFIT (EM=ZZZ,ZZ9.99) TO #PARTIAL-UNITS
    #PARTIAL-UNITS := *TRIM(#PARTIAL-UNITS)
    COMPRESS '*' #PARTIAL-UNITS 'out of' INTO #NOTE-TEXT(#INT)
    #ACC-DEATH-BENEFIT := #ACC-DEATH-BENEFIT + CI-V.FACE-AMOUNT(#IFL)
    MOVE EDITED #ACC-DEATH-BENEFIT (EM=ZZZ,ZZ9.99) TO #PARTIAL-UNITS
    #PARTIAL-UNITS := *TRIM(#PARTIAL-UNITS)
    COMPRESS #NOTE-TEXT(#INT) #PARTIAL-UNITS 'for policy issued' #ISS-DTE INTO #NOTE-TEXT(#INT)
  END-IF
* YK1
  IF #SCR-TRAN (#ISC) = 'CVEX'
    MOVE TRUE TO #WRITE-NOTE-RECORD
    ADD 1 TO #INT
    COMPRESS '*' #PARTIAL-UNITS 'POL ISS' #ISS-DTE
         'CSV EXC"D ON' *DAT4U INTO #NOTE-TEXT (#INT)
*
    IF #CGA-MF-SCR-COMMAND = 'EI'  /* indicates exch internal
      COMPRESS #NOTE-TEXT(#INT) '- INTERNAL EXCH' INTO #NOTE-TEXT (#INT)
    END-IF
  END-IF 
* YK1  
END-FOR
*
IF #WRITE-NOTE-RECORD
  PERFORM ADD-NOTE-MESSAGES
END-IF
*
RESET #IFL               /*   CALCULATE NET DEATH BENEFIT AMT
FOR #ISC 1 TO 9
  ADD 1 TO #IFL
  IF #IFL GT 9     /* DW5
    ESCAPE BOTTOM
  END-IF
*
*
* IF #SCR-TRAN (#ISC) NE 'DEAD'  /* IF 1 LINE IS DEAD THERE ALL DEAD
*   ESCAPE BOTTOM        /* No longer needed a/o 2003   /DW5
* END-IF
*
  IF #SCR-EFF-DTE-YYYYMMDD (#ISC) NE CI-V.ISSUE-DATE (#IFL)
    SUBTRACT 1 FROM #ISC  /* To keep the same SCR INDX
*   ADD 1 TO #IFL                  /* DW5
    IF #IFL LT 9
      ESCAPE TOP            /* TRY NEXT SEGMENT
    ELSE
      ESCAPE BOTTOM         /* SOMETHING IS WRONG
    END-IF
  END-IF
*
  IF #SCR-TRAN (#ISC) = 'DEAD'
    PERFORM CALC-NET-DEATH-BENEFIT
  END-IF
END-FOR
*
MOVE *DATN TO #HOLD-MONTH
*
MOVE TRUE TO #STATS-FOUND        /* UPDATE STATS-RECORD AMOUNTS
FIND (1) STATS-V WITH MONTH-KEY = #HOLD-MONTH-KEY
  IF NO RECORDS FOUND
    MOVE FALSE TO #STATS-FOUND
  END-NOREC
*
  IF #STATS-FOUND
* DISPLAY LOSS-MBRS (*) LOSS-PLANS (*) LOSSES-BY-PLAN (*)
*               LOSSES-BY-PLAN-DB (*) LOSSES-LIVES-BY-CAT (*)
    IF #REIN-TERMED-THIS-MON
      IF ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
        IF #PRIOR-OA = '5' OR = 'J'
          SUBTRACT #ST-MBR   (5) FROM SPS-GEN-LOSS-MBRS  (2)
          SUBTRACT #ST-MBR   (5) FROM SPS-GEN-LOSS-PLANS (2)
          SUBTRACT #ST-PLANS (5) FROM SPS-GEN-LOSS-PLANS (2)
        ELSE
          SUBTRACT #ST-MBR   (5) FROM SPS-GEN-LOSS-MBRS  (3)
          SUBTRACT #ST-MBR   (5) FROM SPS-GEN-LOSS-PLANS (3)
          SUBTRACT #ST-PLANS (5) FROM SPS-GEN-LOSS-PLANS (3)
        END-IF
      ELSE
        IF #PRIOR-OA = '5' OR = 'J'
          SUBTRACT #ST-MBR   (5) FROM LOSS-MBRS  (2)
          SUBTRACT #ST-PLANS (5) FROM LOSS-PLANS (2)
        ELSE
          SUBTRACT #ST-MBR  (5) FROM LOSS-MBRS  (3) /* used if body gain
          SUBTRACT #ST-MBR   (5) FROM LOSS-PLANS (3)
          SUBTRACT #ST-PLANS (5) FROM LOSS-PLANS (3) /* used if pol gain
        END-IF
      END-IF
*
      FOR #I1 1 TO 9        /* Was 6    DW7         RE1 was 7
        SUBTRACT #G-L-REINSTATE    (#I1) FROM LOSSES-BY-PLAN    (#I1)
        SUBTRACT #G-L-REINSTATE-DB (#I1) FROM LOSSES-BY-PLAN-DB (#I1)
      END-FOR
*
      FOR #I1 1 TO 4
        SUBTRACT #GAINS-LIVES-BY-CAT (#I1) FROM LOSSES-LIVES-BY-CAT(#I1)
      END-FOR
* DISPLAY LOSS-MBRS (*) LOSS-PLANS (*) LOSSES-BY-PLAN (*)
*             LOSSES-BY-PLAN-DB (*) LOSSES-LIVES-BY-CAT (*)
*
      UPDATE
      ESCAPE BOTTOM
    END-IF
*
    FOR #I1 1 TO 9    /* WAS 6                        DW7         RE1 was 7
      ADD #G-L-REINSTATE    (#I1) TO GAINS-BY-PLAN     (#I1)
      ADD #G-L-REINSTATE-DB (#I1) TO GAINS-BY-PLAN-DB  (#I1)
      ADD #G-L-LOSSES       (#I1) TO LOSSES-BY-PLAN    (#I1)
      ADD #G-L-LOSSES-DB    (#I1) TO LOSSES-BY-PLAN-DB (#I1)
    END-FOR
*
    FOR #I1 1 TO 4
      ADD #GAINS-LIVES-BY-CAT  (#I1) TO GAINS-LIVES-BY-CAT  (#I1)
      ADD #LOSSES-LIVES-BY-CAT (#I1) TO LOSSES-LIVES-BY-CAT (#I1)
    END-FOR
*
*   IF ST-V.INTRO-FLAG = 'O' OR = 'P' OR = 'Q'
    IF ST-V.PROCESS-IND = 'I' OR = 'O' OR = 'D'
      FOR #IM 1 TO 3   /* no expirations
        ADD #ST-PLANS   (#IM) TO INS-ONLY-LOSS-PLANS(#IM)
      END-FOR
    END-IF
*
    IF ST-V.INTRO-FLAG = 'S' OR = 'K' OR = 'G'
      FOR #IM 1 TO 3   /* no expirations
        ADD #ST-MBR     (#IM) TO SPS-GEN-LOSS-MBRS(#IM)
        ADD #ST-PLANS   (#IM) TO SPS-GEN-LOSS-PLANS(#IM)
      END-FOR
*
      ADD #ST-MBR     (5) TO SPS-GEN-GAIN-PLANS (13)  /* REINSTATEMENTS
      ADD #ST-FACE    (5) TO SPS-GEN-GAIN-FAC-AMT (13)
    ELSE
      FOR #IM 1 TO 4
        ADD #ST-MBR     (#IM) TO LOSS-MBRS(#IM)
        ADD #ST-MBRSHIP (#IM) TO LOSS-SHIPS(#IM)
        ADD #ST-PLANS   (#IM) TO LOSS-PLANS(#IM)
*
        IF #IM = 1                 /* DEATHS BUCKET
          IF #ST-MBR (#IM) NE 0    /* IF THERE ARE ANY DEATHS
            COMPUTE #AGE = CI-V.DATE-OF-DEATH - #DATE-OF-BIRTH         /* TT1
            ADD #AGE-YYYY           TO LOSS-DEATH-TOTAL-AGE
*
            IF ST-V.MILITARY-STATUS = 'A'
              ADD #ST-MBR     (#IM) TO LOSS-DEATH-ACTIVE-MBRS
              ADD #ST-MBRSHIP (#IM) TO LOSS-DEATH-ACTIVE-UNITS
            ELSE
              ADD #ST-MBR     (#IM) TO LOSS-DEATH-RETIRED-MBRS
              ADD #ST-MBRSHIP (#IM) TO LOSS-DEATH-RETIRED-UNITS
            END-IF
          END-IF
        END-IF
*
      END-FOR
*
      ADD #ST-MBR     (5) TO GAIN-MBRS    (20)  /* REINSTATEMENTS
      ADD #ST-PLANS   (5) TO GAIN-MBRS    (19)  /* addl REINSTATEMENTS
      ADD #ST-MBRSHIP (5) TO GAIN-SHIPS   (20)
      ADD #ST-FACE    (5) TO GAIN-FAC-AMT (20)
      ADD #ST-NET-DB      TO NET-DEATH-BENE     /* DEATHS
*
      IF #ST-MBRSHIP (5) > 0
         IF CI-V.MILITARY-SERVICE = MASK('F')
           ADD #ST-MBR     (5) TO TOT-GAIN-AIRF-NEW-MBRS  /*REINST
           ADD #ST-MBRSHIP (5) TO TOT-GAIN-AIRF-UNITS
         ELSE
           IF CI-V.MILITARY-SERVICE = MASK('A')
             ADD #ST-MBR     (5) TO TOT-GAIN-ARMY-NEW-MBRS  /*REINST
             ADD #ST-MBRSHIP (5) TO TOT-GAIN-ARMY-UNITS
           END-IF
         END-IF
      END-IF
    END-IF
*
    UPDATE             /* UPDATE MEMBER STATISTICS RECORD   /*<<<<<
  END-IF
*
END-FIND
*
* * * * * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE CALC-NET-DEATH-BENEFIT
* * * * * * * * * * * * * * * * * * * * *
*
RESET #NET-DB
RESET #FOUND-DB-POL
FIND (1) FIRS-V WITH WIDOW-KEY = #CGA-ID-G
  IF NO RECORDS FOUND
    ESCAPE ROUTINE
  END-NOREC
*
  FOR #IS 1 TO C*POLICY-TABLE
    IF POL-NAME(#IS) = 'AMAA' OR = 'AAFMAA'
      IF POL-DATE(#IS) = CI-V.ISSUE-DATE (#IFL)
        MOVE TRUE TO #FOUND-DB-POL
        MOVE POL-AMT-PAID (#IS) TO #NET-DB   /* DEATH BENEFIT
        ESCAPE BOTTOM
      END-IF
    END-IF
  END-FOR
END-FIND
*
IF #FOUND-DB-POL
  MOVE CI-V.DATE-OF-DEATH TO #DOD-YYYYMMDD
*
  IF #DOD-YYYYMM = #YYYYMM
    IF  (ISSUE-DATE-DD (#IFL) = 01)
     OR (ISSUE-DATE-DD (#IFL) GT #DOD-DD)
      SUBTRACT CI-V.ACC-CASH-VALUE (#IFL) FROM #NET-DB
    ELSE
      IF (CI-V.ACC-CASH-VALUE (#IFL) = CI-V.CASH-VALUE (#IFL))
        SUBTRACT CI-V.NXT-MON-CASH-VALUE (#IFL) FROM #NET-DB
      ELSE
        SUBTRACT CI-V.ACC-CASH-VALUE (#IFL) FROM #NET-DB
      END-IF
    END-IF
  ELSE
    MOVE CI-V.ID-NUMBER         TO #HIST-ID-NUMBER
    MOVE CI-V.ISSUE-DATE (#IFL) TO #HIST-ISS-DATE
    MOVE 0                      TO #HIST-SPL-IND
    MOVE TRUE TO #HIST-REC-FOUND
    FIND (1) HIST-V WITH RECORD-KEY = #HIST-KEY
      IF NO RECORDS FOUND
        MOVE 1 TO #HIST-SPL-IND
        FIND (1) HIST-V WITH RECORD-KEY = #HIST-KEY
          IF NO RECORDS FOUND
            MOVE FALSE TO #HIST-REC-FOUND
          END-NOREC
        END-FIND
      END-NOREC
    END-FIND
*
    IF #HIST-REC-FOUND
      MOVE #DOD-YYYY TO #HIST-YYYY
      MOVE #DOD-MM   TO #HIST-MM
*
      IF  (ISSUE-DATE-DD (#IFL) = 01)
       OR (ISSUE-DATE-DD (#IFL) GT #DOD-DD)
        SUBTRACT 1 FROM #HIST-MM
*
        IF #HIST-MM = 0
          MOVE 12 TO #HIST-MM
          SUBTRACT 1 FROM #HIST-YYYY
        END-IF
*
      END-IF
*
      MOVE #YEAR-MONTH-M TO #HIST-KEY-YEAR-MONTH-P
      FOR #I1 1 TO 13
        IF HIST-V.YEAR-MONTH-M (#I1) = #HIST-KEY-YEAR-MONTH-P
          SUBTRACT HIST-V.ACCUM-CASH-VALUE-M (#I1) FROM #NET-DB
          ESCAPE BOTTOM
        END-IF
      END-FOR
    END-IF
  END-IF
*
  ADD #NET-DB TO #ST-NET-DB     /* ACCUMULATE NET DEATH BENEFIT
*
END-IF
*
END-SUBROUTINE /* (0719)
*
* * * * * * * * * * * * * * * * * *
DEFINE SUBROUTINE ADD-NOTE-MESSAGES
* * * * * * * * * * * * * * * * * *
*
CALLNAT 'E4205SDM' #CGA-ID #INT #CGA-CLERK #NOTE-TEXT (1:10)
*
END-SUBROUTINE /* (0802)
*
* * * * * * * * * * * * * * *
DEFINE CALC-PREMS-PAID-SETUP
* * * * * * * * * * * * * * *
*
MOVE #DATE-OF-BIRTH               TO #PP-DATE-OF-BIRTH           /* TT1
MOVE CI-V.ANNUAL-PREM (#I1)       TO #PP-ANNUAL-PREM
MOVE CI-V.PAY-STATUS (#I1)        TO #PP-PAY-STATUS
MOVE CI-V.TOT-PREMIUMS-PAID (#I1) TO #PP-TOT-PREMIUMS-PAID
MOVE CI-V.PAID-TO-DATE (#I1)      TO #PP-PAID-TO-DATE
MOVE CI-V.ISSUE-DATE (#I1)        TO #PP-ISSUE-DATE
MOVE CI-V.MODE (#I1)              TO #PP-MODE
MOVE CI-V.PLAN (#I1)              TO #PP-PLAN
MOVE CI-V.COST-BASIS (#I1)        TO #PP-COST-BASIS
MOVE CI-V.MONTH-ALLOC-AMT (#I1)   TO #PP-MONTH-ALLOC-AMT
MOVE ST-V.INTRO-FLAG              TO #PP-INTRO-FLAG
MOVE ST-V.X-FIRST-PLACE-FEE (#I1) TO #PP-FIRST-PLACE-FEE
MOVE ST-V.X-BILL-ADJUST     (#I1) TO #PP-BADJ
*
CALLNAT 'GPRPDSCO'
  #PP-DATE-OF-BIRTH
  #PP-ANNUAL-PREM
  #PP-PAY-STATUS
  #PP-TOT-PREMIUMS-PAID
  #PP-PAID-TO-DATE
  #PP-ISSUE-DATE
  #PP-MODE
  #PP-PLAN
  #PP-COST-BASIS
  #PP-MONTH-ALLOC-AMT
  #PP-INTRO-FLAG
  #PP-FIRST-PLACE-FEE
  #PREMS-PAID
  #SUB-PREMS-PAID
  #PP-BADJ
*
END-SUBROUTINE
*
END
