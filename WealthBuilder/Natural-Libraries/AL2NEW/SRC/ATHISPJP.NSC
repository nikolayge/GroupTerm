* >Natural Source Header 000000
* :Mode S
* :CP ISO_8859-1:1987
* :LineIncrement 5
* <Natural Source Header
*****************************************************************
*                                                               *
* New COPYCODE member: ATHISPJP created by ACCORD on: 02/09/05  *
*                                                               *
*****************************************************************
*************************************************************************
*                       MODIFICATI ON LOG                               *
* USER DATE     TAG  REASON                                             *
* SAG  12082005 RH1   SS - Made code changes to reflect the conversion  *
*                     of variable REINSTATE-COMPLETE-SW from A1 to L    *
*                     H'FF' assignment to REINSTATE-COMPLETE-SW will be *
*                     treated as checking for the FLAG = 'FALSE'.       *
* SAG  20060223 RH1   AS - Correction made to converted code.  Logic    *
*                     now matches that of original Cobol module.        *
** DW11-AB 20060327   Change made to Cobol migrated to converted Natural*
* DRW 06/06/2008 DW19 Stop a negative overflow on Min CSV after a Conv  *
* DRW 08/18/2008 DW21 Gen Plus Processing                               *
* RSE  20090917  RE1  Change PROCESS-IND logic                          *
* PAM 07/21/2010 PM2  Added 3SR service-fee processing                  *
* YAK 09/26/2012 YK1  Use function to identify Level Term II plan       *
* NGG            NG2  GP2 POLICY SUPPORT                                *
*************************************************************************
*
IF L-REIN-CODE = 'REDO'
  FOR REDO-MON-X = 1 TO 12
    PERFORM AAF-00150-SAVE-PRMS
  END-FOR
  MOVE 10 TO REDO-X
END-IF
*
IF L-LN = 'LN'
  FOR LIR-X = 1 TO 12
    PERFORM AAF-00151-LOAD-RATES
  END-FOR
END-IF
*
FOR CLC-X = 1 TO 83
  PERFORM AAF-01100-INIT-DISPLAY-CALCS
END-FOR
FOR PTY-X = 1 TO 90
  PERFORM AAF-01200-INIT-YTD-AMTS
END-FOR
FOR DTL-X = 1 TO 27
  PERFORM AAF-01300-INIT-LINK-AREA
END-FOR
*
IF (L-REIN-CODE = 'REIN' OR = 'NC' OR = 'AV') OR L-IPR = 'IPR' OR L-LN = 'LN'
  MOVE 'N' TO IS-PROJ-SW
ELSE
  MOVE 'Y' TO IS-PROJ-SW
END-IF
*
IF L-REIN-CODE = 'REIN' OR = 'REDO'
  MOVE PARM-DATE TO REIN-STOP-DATE/ALPHA
  SUBTRACT 01 FROM R-S-D-MM
  IF R-S-D-MM = 00
    MOVE 12 TO R-S-D-MM
    SUBTRACT 01 FROM R-S-D-YYYY
  END-IF
END-IF
MOVE L-SEG-NO TO SU IS-SEG-X
PERFORM AAF-10000-CALC-PROJECTION
*
IF L-REIN-CODE = 'MCSV' OR L-NPR = 'NP' OR L-REIN-CODE = 'REDO'
  MOVE IS-NET-PREM-RATIO TO L-CALC-AMT(1)
  MOVE IS-MIN-CSV TO L-CALC-AMT2(1)
  MOVE IS-NXT-YR-MIN-CSV TO L-CALC-AMT2(2)
  MOVE IS-CURR-ACQ TO L-CALC-AMT2(3)
  MOVE IS-MON-AMORT-ACQ TO L-CALC-AMT2(4)
  MOVE IS-NXT-CONT-FUND TO L-CALC-AMT2(5)
  MOVE IS-NXT-ACV TO L-CALC-AMT2(6)
  MOVE IS-EOM-DB TO L-CALC-AMT2(7)
  MOVE IS-ILL-DB TO L-CALC-AMT2(8)
  ESCAPE ROUTINE                      /* SAG-AB 20060224
END-IF                                /* SAG-AB 20060224
**
IF L-REIN-CODE = 'REIN'
  MOVE IS-DURATION TO I-LAST-DURATION(SU)
  SUBTRACT 1 FROM I-LAST-DURATION(SU)
  MOVE IS-NXT-CSV TO I-II-CASH-VALUE(SU) II-NEW-NXT-MON-CSH-VL(SU)
  MOVE IS-EOM-DB TO I-II-DEATH-BENE(SU)
  MOVE IS-EOM-DB TO II-NEW-NXT-MON-DEATH-BEN(SU)
  MOVE IS-DURATION TO II-NEW-DURATION(SU)
  MOVE IS-MNTH-IND TO II-NEW-MONTH-IND(SU)
  MOVE IS-MIN-CSV TO II-NEW-MIN-CASH-VALUE(SU)
  MOVE IS-NXT-YR-MIN-CSV TO II-NEW-NXT-YR-MIN-CSH-VL(SU)
  MOVE IS-NXT-CSV TO II-NEW-LST-ANN-CSH-VL(SU)
  IF I-CONV-FLAG(SU) = 'C'
    MOVE IS-NXT-ACV TO II-NEW-ACC-CASH-VALUE(SU)
    MOVE IS-CONV-DUR TO II-NEW-CONV-DUR(SU)
    MOVE IS-ALLOC-CRED TO II-NEW-MNTH-ALLOC-AMT(SU)
    MOVE IS-PREM-DEFIC TO II-NEW-PREM-DEFIC(SU)
    RESET II-NEW-BEG-CSH-VAL(SU) II-NEW-NET-PR-RATIO(SU)
  ELSE
    MOVE IS-NXT-CSV TO II-NEW-ACC-CASH-VALUE(SU)
    RESET II-NEW-CONV-DUR(SU) II-NEW-MNTH-ALLOC-AMT(SU) II-NEW-PREM-DEFIC(SU)
      II-NEW-BEG-CSH-VAL(SU)
    MOVE IS-NET-PREM-RATIO TO II-NEW-NET-PR-RATIO(SU)
  END-IF
ELSE
  PERFORM AAF-40000-STORE-PROJECTION
END-IF
**
IF L-REIN-CODE = 'REIN' AND USE-X-CALCS = 'Y'
  RESET II-NEW-LST-ANN-CSH-VL(SU)
  MOVE IS-CURR-ACQ TO II-NEW-MNTH-ALLOC-AMT(SU)
  MOVE IS-MON-AMORT-ACQ TO II-NEW-PREM-DEFIC(SU)
  MOVE IS-NXT-CONT-FUND TO II-NEW-BEG-CSH-VAL(SU)
END-IF
**
ESCAPE ROUTINE
**
*********** END OF MAIN PROCESS ***************
***********************************************
DEFINE SUBROUTINE AAF-10100-CALC-REIN-TODAY-MON
***********************************************
MOVE II-NEW-MONTH-IND(SU) TO IS-MNTH-IND
ADD 1 TO IS-MNTH-IND
MOVE L-REIN-BEGIN-MM TO IS-TODAY-MON
*
END-SUBROUTINE
**************
******************************************
DEFINE SUBROUTINE AAF-10200-CALC-TODAY-MON
******************************************
MOVE II-NEW-MONTH-IND(SU) TO IS-MNTH-IND
ADD 1 TO IS-MNTH-IND
MOVE PARM-MONTH TO IS-TODAY-MON
SUBTRACT 1 FROM IS-TODAY-MON
*
IF IS-TODAY-MON = 0
  MOVE 12 TO IS-TODAY-MON
END-IF
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-10300-CALC-CONV-TODAY-MON
*
MOVE 1 TO IS-MNTH-IND
MOVE L-ISS-YYYY(LID-X) TO #WORK-DATE/YYYY
MOVE L-ISS-MM  (LID-X) TO #WORK-DATE/MM
MOVE L-ISS-DD  (LID-X) TO #WORK-DATE/DD
MOVE #WORK-DATE/ALPHA TO W-DATE-2-YYYYMMDD/ALPHA
MOVE WD-2-MM TO IS-TODAY-MON
*
SUBTRACT 1 FROM IS-TODAY-MON
IF IS-TODAY-MON = 0
  MOVE 12 TO IS-TODAY-MON
END-IF
*
IF NOT (G-ONLINE-ACTION = '2' OR I-ONLINE-ACTION(SU) = '1')
  IF WD-2-MM > PARM-MONTH OR WD-2-MM = PARM-MONTH
    ADD 1 TO I-LAST-DURATION(SU)
  END-IF
END-IF
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-10400-CALC-PREM-PMT-MONS
*
MOVE L-PAID-THRU TO W-DATE-2-YYYYMMDD/ALPHA
*
* RESET IS-PRM-PAID-MONS/ALPHA                /* SAG RH1 12082005 SS
MOVE ALL H'00' TO IS-PRM-PAID-MONS/ALPHA  /* SAG RH1 12082005 SS
MOVE WD-2-MM TO IS-PRM-PD-MON(1)
*
IF IS-MODE NE 1
*
  IF IS-MODE = 2
    ADD 6 TO WD-2-MM
    MOVE WD-2-MM TO IS-PRM-PD-MON(2)
    IF WD-2-MM > 12
      SUBTRACT 12 FROM IS-PRM-PD-MON(2)
    END-IF
    ESCAPE ROUTINE
  END-IF
  ADD 3 TO WD-2-MM
  IF WD-2-MM > 12
    SUBTRACT 12 FROM WD-2-MM
  END-IF
*
  MOVE WD-2-MM TO IS-PRM-PD-MON(2)
  ADD 3 TO WD-2-MM
  IF WD-2-MM > 12
    SUBTRACT 12 FROM WD-2-MM
  END-IF
*
  MOVE WD-2-MM TO IS-PRM-PD-MON(3)
  ADD 3 TO WD-2-MM
  IF WD-2-MM > 12
    SUBTRACT 12 FROM WD-2-MM
  END-IF
*
  MOVE WD-2-MM TO IS-PRM-PD-MON(4)
*
END-IF
*
END-SUBROUTINE
*
***********************************************************************
*
DEFINE SUBROUTINE AAF-35000-INCR-LOAN-AMT
*
IF L-REIN-CODE = 'CAP'
  COMPUTE ROUNDED IS-LN-AMT = IS-LN-AMT * (1 + IS-LOAN-RT)
  COMPUTE ROUNDED IS-LN-AMT-2 = IS-LN-AMT-2 * (1 + (CUR-VAR-INT-RT / 100))
ELSE
  IF IS-LN-AMT NE 0
    COMPUTE ROUNDED IS-OLD-LN-INT = IS-LN-AMT * IS-LOAN-RT
    COMPUTE ROUNDED IS-NEW-LN-AMT = IS-LN-AMT * (1 + (L-INT-PCT / 100))
    COMPUTE ROUNDED IS-NEW-LN-INT = (IS-NEW-LN-AMT - IS-LN-AMT) * 0.12
    COMPUTE ROUNDED IS-LOAN-RT = (IS-OLD-LN-INT + IS-NEW-LN-INT) / IS-NEW-LN-AMT
    MOVE IS-NEW-LN-AMT TO IS-LN-AMT
    PERFORM CALC-MNTHLY-CMP-INT-RATES
  END-IF
*
  IF IS-LN-AMT-2 NE 0
    COMPUTE ROUNDED IS-OLD-LN-INT = IS-LN-AMT-2 * IS-LOAN-RT-2
    COMPUTE ROUNDED IS-NEW-LN-AMT = IS-LN-AMT-2 * (1 + (L-INT-PCT / 100))
    COMPUTE ROUNDED IS-NEW-LN-INT = (IS-NEW-LN-AMT - IS-LN-AMT-2) * 0.12
    COMPUTE ROUNDED IS-LOAN-RT-2 = (IS-OLD-LN-INT + IS-NEW-LN-INT) / IS-NEW-LN-AMT
    MOVE IS-NEW-LN-AMT TO IS-LN-AMT-2
    PERFORM CALC-MNTHLY-CMP-INT-RATES
  END-IF
END-IF
*
END-SUBROUTINE
**************
********************************************
DEFINE SUBROUTINE AAF-40000-STORE-PROJECTION
********************************************
MOVE 1 TO DTL-X
RESET L-NUM-DTLS
IF IS-CURR-SW = 'Y' AND IS-PROJ-CONV-SW = 'N'
  MOVE 1 TO PTY-X
  IF L-LN NE 'LN'
    RESET IS-PTY-YEAR(PTY-X)
  END-IF
END-IF
MOVE 10 TO FIRST-10
FOR PTY-X = 1 TO 86
  PERFORM AAF-43000-PROJ-YRLY-DETAIL
END-FOR
*
END-SUBROUTINE
**************
******************************************
DEFINE SUBROUTINE AAF-01300-INIT-LINK-AREA
******************************************
**MOVE PRX-YEARLY-VALUES/IND (1) TO L-DTL-MNTHLY-IND (DTL-X) /* SAG-AB 20060223
**MOVE PRX-YEARLY-VALUES/LINE(1) TO L-DTL-LINE-MNTHLY(DTL-X) /* SAG-AB 20060223
MOVE PRX-YEARLY-VALUES-A35 (1) TO L-DTL-LINE-A35   (DTL-X)   /* SAG-AB 20060223
MOVE IS-PTY-YTD-PREM       (1) TO L-YTD-PREM       (DTL-X)
MOVE IS-PTY-YTD-INT        (1) TO L-YTD-INT        (DTL-X)
MOVE IS-PTY-YTD-COI        (1) TO L-YTD-COI        (DTL-X)
MOVE IS-PTY-ACV            (1) TO L-ACV            (DTL-X)
*
END-SUBROUTINE
**************
***********************************************************************
*
DEFINE SUBROUTINE AAF-01200-INIT-YTD-AMTS
*
RESET IS-PTY-YEAR(PTY-X) IS-PTY-MEM-AGE(PTY-X) IS-PTY-POL-AGE(PTY-X) IS-PTY-ANN-PRM(PTY-X)
  IS-PTY-MIN-CSV(PTY-X) IS-PTY-MIN-DB(PTY-X) IS-PTY-PR-CSV(PTY-X) IS-PTY-PR-DB(PTY-X)
  IS-PTY-PR-CSV-NL(PTY-X) IS-PTY-PR-DB-NL(PTY-X) IS-PTY-YTD-PREM(PTY-X) IS-PTY-YTD-INT(PTY-X)
  IS-PTY-YTD-COI(PTY-X) IS-PTY-ACV(PTY-X)
*
END-SUBROUTINE
*
***********************************************************************
*
DEFINE SUBROUTINE AAF-01100-INIT-DISPLAY-CALCS
*
RESET L-CALC-MO-IND(CLC-X) L-CALC-AMT(CLC-X) L-CALC-AMT2(CLC-X)
*
END-SUBROUTINE
*
***********************************************************************
*
DEFINE SUBROUTINE AAF-00151-LOAD-RATES
*
MOVE LIR-X TO CLC-X
MOVE L-CALC-AMT(CLC-X) TO LN-CURR-RT(LIR-X)
*
END-SUBROUTINE
*
***********************************************************************
*
DEFINE SUBROUTINE AAF-00150-SAVE-PRMS
*
MOVE REDO-MON-X TO CLC-X
MOVE L-CALC-MO-IND(CLC-X) TO REDO-MON(REDO-MON-X)
MOVE L-CALC-AMT2(CLC-X) TO REDO-PRM(REDO-MON-X)
*
END-SUBROUTINE
*
***********************************************************************
*
DEFINE SUBROUTINE AAF-43100-PROJ-MTHLY-M-DTL
*
*
MOVE 'M' TO L-DTL-MNTHLY-IND(DTL-X)
MOVE PRX-MONTHLY-VALUES/ALPHA(PTM-Y-X,PTM-M-X) TO L-DTL-LINE-MNTHLY(DTL-X)
ADD 1 TO L-NUM-DTLS
ADD 1 TO DTL-X
*
END-SUBROUTINE
*
***********************************************************************
*
DEFINE SUBROUTINE AAF-32100-CALC-NEW-MNTHLY-VAL
*
ADD 1 TO IS-TODAY-MON
IF IS-TODAY-MON = 13
  MOVE 01 TO IS-TODAY-MON
  IF L-REIN-CODE = 'REIN' OR = 'REDO'
    ADD 1 TO L-REIN-BEGIN-YYYY
  END-IF
END-IF
IF L-REIN-CODE = 'REDO'
  RESET IS-WORK-PREM
  FOR REDO-MON-X = 1 TO 12
    IF REDO-MON(REDO-MON-X) = IS-TODAY-MON
      MOVE REDO-PRM(REDO-MON-X) TO IS-WORK-PREM
      MOVE 12 TO REDO-MON-X
    END-IF
  END-FOR
END-IF
*
MOVE IS-NXT-ACV TO IS-LST-ACV
MOVE IS-NXT-CSV TO IS-LST-CSV
MOVE IS-NXT-MCV-AL TO IS-LST-MCV-AL
MOVE IS-EOM-DB TO IS-LST-DB
MOVE IS-CURR-ACQ TO IS-LST-ACQ
MOVE IS-NXT-CONT-FUND TO IS-LST-CONT-FUND
PERFORM CALC-NEW-MNTHLY-VALUES
IF IS-NO-LOAN-SW NE 'Y'
  ADD IS-WORK-PREM TO IS-YTD-PREM
  ADD IS-INTEREST TO IS-YTD-INT
  ADD IS-COI TO IS-YTD-COI
END-IF
*
MOVE PTY-X TO PTM-Y-X
IF L-MONTHLY-SW = 'M'
  PERFORM STOR-MNTHLY-PROJ-VALUES
END-IF
*
IF L-REIN-CODE = 'REIN' AND IS-MNTH-IND NE 12
  IF IS-TODAY-MON = R-S-D-MM AND L-REIN-BEGIN-YYYY = R-S-D-YYYY
    REINSTATE-COMPLETE-SW := TRUE               /* SAG RH1 12082005 SS
*     MOVE ALL H'FF' TO REINSTATE-COMPLETE-SW   /* SAG RH1 12022005 SS    /* SAG RH1 12082005 SS
    SUBTRACT 1 FROM IS-MNTH-IND
    ESCAPE ROUTINE
  END-IF
END-IF
*
IF L-REIN-CODE = 'REDO' AND REDO-X < 79
  ADD 1 TO REDO-X
  MOVE IS-TODAY-MON TO L-CALC-MO-IND(REDO-X)
  COMPUTE ROUNDED L-CALC-AMT2(REDO-X) = IS-WORK-PREM * +1
  COMPUTE ROUNDED L-CALC-AMT(REDO-X) = IS-NXT-ACV * +1
  ADD 1 TO REDO-X
  COMPUTE ROUNDED L-CALC-AMT2(REDO-X) = IS-COI * +1
  COMPUTE ROUNDED L-CALC-AMT(REDO-X) = IS-NXT-CSV * +1
  ADD 1 TO REDO-X
  COMPUTE ROUNDED L-CALC-AMT2(REDO-X) = IS-INTEREST * +1
  ADD 1 TO REDO-X
  COMPUTE ROUNDED L-CALC-AMT2(REDO-X) = IS-MON-AMORT-ACQ * +1
  ADD 1 TO REDO-X
  COMPUTE ROUNDED L-CALC-AMT2(REDO-X) = IS-MON-MAINT-EXP * +1
END-IF
IF L-REIN-CODE = 'REDO'
    AND IS-TODAY-MON = R-S-D-MM
    AND L-REIN-BEGIN-YYYY = R-S-D-YYYY
    AND IS-MNTH-IND NE 12
  REINSTATE-COMPLETE-SW := TRUE                /* SAG RH1 12082005 SS
*   MOVE ALL H'FF' TO REINSTATE-COMPLETE-SW    /* SAG RH1 12022005 SS    /* SAG RH1 12082005 SS
  SUBTRACT 1 FROM IS-MNTH-IND
END-IF
*
END-SUBROUTINE
**************
*************************************************
DEFINE SUBROUTINE AAF-30000-NEW-POLICY-PROJECTION
*************************************************
*    converted as
**IF (IS-TYPE = 'OL' AND USE-X-CALCS NE 'Y' AND (IS-ISS-AGE + IS-DURATION) > 95) OR
**    ((IS-TYPE = 'OL' OR = 'SO' OR = 'FS') AND USE-X-CALCS = 'Y' AND
**    (IS-ISS-AGE + IS-DURATION) > 99) OR
**    (IS-TYPE NE 'OL' AND IS-TYPE NE 'SO' AND IS-TYPE NE 'FS' AND
**    (IS-DURATION > (IS-TYPE-YEARS - 1)))
IF ((IS-TYPE = 'OL') AND (USE-X-CALCS NE 'Y') AND ((IS-ISS-AGE + IS-DURATION) > 95))

    OR ((IS-TYPE = 'OL' OR = 'SO' OR = 'FS' OR = 'GP')              /* DW21
    AND (USE-X-CALCS = 'Y')
    AND  ((IS-ISS-AGE + IS-DURATION) > 99))

    OR ((IS-TYPE NE 'OL') AND (IS-TYPE NE 'SO') AND (IS-TYPE NE 'FS')
    AND (IS-DURATION > (IS-TYPE-YEARS - 1)))

  IF IS-PAID-UP-SW NE 'Y'
    MOVE 'Y' TO IS-PAID-UP-SW
    IF I-PAY-STATUS(SU) NE '44'
      MOVE '42' TO I-PAY-STATUS(SU)
    END-IF
  END-IF
END-IF
*
MOVE I-RESTRICT-MBR-SW TO IS-RESTRICTED-MBR-SW
*
IF IS-PROJ-CONV-SW = 'Y'
  MOVE I-II-CASH-VALUE(SU) TO IS-WORK-BEG-CSV
  MOVE II-NEW-ACC-CASH-VALUE(SU) TO IS-WORK-BEG-ACV
  MOVE II-NEW-MIN-CASH-VALUE(SU) TO IS-WORK-BEG-MIN-CSV
  MOVE II-NEW-NET-PR-RATIO(SU) TO IS-NET-PREM-RATIO
  MOVE II-NEW-LST-ANN-CSH-VL(SU) TO IS-LUMP-PREM
  PERFORM CALC-INIT-VALUES
ELSE
  RESET IS-ADJ-PREM IS-WORK-C IS-WORK-D
  IF L-REIN-CODE = 'REIN'
    MOVE 1 TO IS-PROJ-DUR
    PERFORM CALC-NEW-YEARLY-VALUES
    PERFORM CALC-NEW-END-YR-VALUES
    MOVE IS-MIN-CSV TO IS-BEG-MIN-CSV
    MOVE I-FACE-AMOUNT(SU) TO IS-BEG-MIN-DB
    MOVE II-NEW-ACC-CASH-VALUE(SU) TO IS-BEG-ACV
    MOVE I-II-CASH-VALUE(SU) TO IS-BEG-CSV
    MOVE I-II-DEATH-BENE(SU) TO IS-BEG-DB
    MOVE II-NEW-NXT-YR-MIN-CSH-VL(SU) TO IS-NXT-YR-MIN-CSV IS-ORIG-NXT-MIN-CV
    MOVE II-NEW-NET-PR-RATIO(SU) TO IS-NET-PREM-RATIO
  ELSE
    MOVE II-NEW-MIN-CASH-VALUE(SU) TO IS-BEG-MIN-CSV
    MOVE I-FACE-AMOUNT(SU) TO IS-BEG-MIN-DB
    MOVE II-NEW-ACC-CASH-VALUE(SU) TO IS-BEG-ACV
    MOVE I-II-CASH-VALUE(SU) TO IS-BEG-CSV
    MOVE I-II-CASH-VALUE(SU) TO IS-BEG-MCV-AL
    MOVE I-II-DEATH-BENE(SU) TO IS-BEG-DB
    MOVE II-NEW-NXT-YR-MIN-CSH-VL(SU) TO IS-NXT-YR-MIN-CSV IS-ORIG-NXT-MIN-CV
    MOVE II-NEW-NET-PR-RATIO(SU) TO IS-NET-PREM-RATIO
    IF USE-X-CALCS = 'Y'
      MOVE II-NEW-MNTH-ALLOC-AMT(SU) TO IS-CURR-ACQ
      MOVE II-NEW-PREM-DEFIC(SU) TO IS-MON-AMORT-ACQ
      MOVE II-NEW-BEG-CSH-VAL(SU) TO IS-NXT-CONT-FUND
    END-IF
*      write 'athispjp line 2225 after eoy nxt-csv=' is-beg-csv 'db=' is-beg-db

  END-IF
END-IF
*
IF IS-PROJ-CONV-SW NE 'Y' AND L-REIN-CODE = 'REIN' AND USE-X-CALCS = 'Y'
  MOVE II-NEW-MNTH-ALLOC-AMT(SU) TO IS-CURR-ACQ
  MOVE II-NEW-PREM-DEFIC(SU) TO IS-MON-AMORT-ACQ
  MOVE II-NEW-BEG-CSH-VAL(SU) TO IS-NXT-CONT-FUND
END-IF
*
IF L-REIN-CODE = 'MCSV' OR L-NPR = 'NP'
  ESCAPE ROUTINE
END-IF
IF L-REIN-CODE = 'REDO'
  FOR REDO-MON-X = 1 TO 12
    IF REDO-MON(REDO-MON-X) = IS-TODAY-MON
      ADD 1 TO REDO-X
      MOVE REDO-PRM(REDO-MON-X) TO IS-BEG-ACV IS-BEG-CSV L-CALC-AMT2(REDO-X) L-CALC-AMT(REDO-X)
      MOVE IS-TODAY-MON TO L-CALC-MO-IND(REDO-X)
      ADD 1 TO REDO-X
      MOVE REDO-PRM(REDO-MON-X) TO L-CALC-AMT(REDO-X)
      ADD 3 TO REDO-X
      MOVE 12 TO REDO-MON-X
    END-IF
  END-FOR
END-IF
*
IF (L-REIN-CODE = 'REDO') AND (IS-TODAY-MON = R-S-D-MM) AND
    (L-REIN-BEGIN-YYYY = R-S-D-YYYY)
  RESET IS-NXT-CONT-FUND
  MOVE IS-BEG-ACV TO IS-NXT-ACV
  MOVE IS-BEG-DB TO IS-EOM-DB
  MOVE IS-BEG-DB TO IS-ILL-DB
  ESCAPE ROUTINE
END-IF
RESET IS-PREM-DEFIC IS-ZSPPRM IS-ZSPEXP
*
MOVE IS-BEG-MIN-CSV TO IS-MIN-CSV
MOVE IS-BEG-MIN-DB TO IS-MIN-DB
MOVE IS-BEG-CSV TO IS-CSV
MOVE IS-BEG-DB TO IS-DB
MOVE IS-BEG-ACV TO IS-NXT-ACV
MOVE IS-BEG-CSV TO IS-NXT-CSV
MOVE IS-BEG-MCV-AL TO IS-NXT-MCV-AL
MOVE IS-BEG-DB TO IS-EOM-DB
IF L-LN = 'LN'
  MOVE 1 TO IS-PROJ-DUR
  PERFORM CALC-LIAB-RSV
END-IF
PERFORM STOR-YRLY-PROJ-VALUES
*
RESET IS-PROJ-DUR
IF IS-ISS-AGE + IS-DURATION > 90
  COMPUTE IS-HIGH-AGE = IS-ISS-AGE + IS-DURATION + 20
ELSE
  MOVE 100 TO IS-HIGH-AGE
END-IF
*
IF L-PJ = 'PJ'
  MOVE L-LIFE-EXP TO IS-HIGH-AGE
END-IF
IF L-MONTHLY-SW = 'M'
  COMPUTE IS-END-PROJ = IS-DURATION + (L-MNTHLY-START-YR - IS-PROJ-YR) + 2
ELSE
  COMPUTE IS-END-PROJ = IS-HIGH-AGE - IS-ISS-AGE
  IF (L-REIN-CODE = 'NC') AND (IS-ISS-AGE < 50)
**  COMPUTE IS-END-PROJ = IS-DURATION + 36      /* temp replaced SAG-AB 20060227
    COMPUTE IS-END-PROJ = IS-DURATION + 35      /* temp replaced SAG-AB 20060227
  ELSE
    IF (L-REIN-CODE = 'AV')
      COMPUTE IS-END-PROJ = IS-DURATION + 25
    END-IF
  END-IF
END-IF
IF (L-NUM-PROJ-YRS < 99) AND (L-NUM-PROJ-YRS NE 0)
  COMPUTE IS-WORK-A = IS-DURATION + L-NUM-PROJ-YRS
  IF IS-WORK-A < IS-END-PROJ
    COMPUTE IS-HIGH-AGE = IS-ISS-AGE + IS-DURATION + L-NUM-PROJ-YRS
    MOVE IS-WORK-A TO IS-END-PROJ
  END-IF
END-IF
*
ADD 1 TO IS-DURATION
IF (L-LN = 'LN') AND ((IS-LN-AMT > 0) OR (IS-LN-AMT-2 > 0))
  PERFORM AAF-35000-INCR-LOAN-AMT
END-IF
*
FOR IS-DURATION = IS-DURATION TO IS-END-PROJ
  IF REINSTATE-COMPLETE-SW              /* SAG RH1 12082005 SS
*   IF REINSTATE-COMPLETE-SW = H'FF'    /* SAG RH1 12022005 SS   /* SAG RH1 12082005 SS
    ESCAPE BOTTOM
  END-IF
  PERFORM AAF-32000-CALC-NEW-POL-VAL
END-FOR
IF REINSTATE-COMPLETE-SW             /* SAG RH1 12082005 SS
* IF REINSTATE-COMPLETE-SW = H'FF'   /* SAG RH1 12022005 SS       /* SAG RH1 12082005 SS
  ESCAPE ROUTINE
END-IF
IF PRX-LOAN-REPAID-COL-SW NE 'N'
  MOVE 'Y' TO IS-NO-LOAN-SW
  RESET IS-PROJ-DUR
  MOVE I-LAST-DURATION(SU) TO IS-DURATION
  MOVE IS-PROJ-START-YR-HOLD TO IS-PROJ-START-YR-COMPARE
  IF I-PAY-STATUS(SU) > '40'
    MOVE 'Y' TO IS-PAID-UP-SW
  ELSE
    RESET IS-PAID-UP-SW
  END-IF
  IF IS-PROJ-CONV-SW = 'Y'
    PERFORM AAF-10300-CALC-CONV-TODAY-MON
  ELSE
    PERFORM AAF-10200-CALC-TODAY-MON
  END-IF
  RESET IS-LN-AMT IS-LN-AMT-2
  MOVE I-FACE-AMOUNT(SU) TO IS-FAC-AMT
  MOVE IS-ORIG-NXT-MIN-CV TO IS-NXT-YR-MIN-CSV
  MOVE 1 TO PTY-X
  SUBTRACT 1 FROM PTY-X
  MOVE IS-BEG-MIN-CSV TO IS-MIN-CSV
  MOVE IS-BEG-MIN-DB TO IS-MIN-DB
  MOVE IS-BEG-CSV TO IS-CSV
  MOVE IS-BEG-DB TO IS-DB
  MOVE IS-BEG-ACV TO IS-NXT-ACV
  MOVE IS-BEG-CSV TO IS-NXT-CSV
  MOVE IS-BEG-MCV-AL TO IS-NXT-MCV-AL
  MOVE IS-BEG-DB TO IS-EOM-DB
  PERFORM STOR-YRLY-PROJ-VALUES
  ADD 1 TO IS-DURATION
*
  FOR IS-DURATION = IS-DURATION TO IS-END-PROJ
    IF REINSTATE-COMPLETE-SW              /* SAG RH1 12082005 SS
*     IF REINSTATE-COMPLETE-SW = H'FF'    /* SAG RH1 12022005 SS   /* SAG RH1 12082005 SS
      ESCAPE BOTTOM
    END-IF
    PERFORM AAF-32000-CALC-NEW-POL-VAL
  END-FOR
  IF REINSTATE-COMPLETE-SW              /* SAG RH1 12082005 SS
*   IF REINSTATE-COMPLETE-SW = H'FF'    /* SAG RH1 12022005 SS   /* SAG RH1 12082005 SS
    ESCAPE ROUTINE
  END-IF
END-IF
*
IF PTY-X < 90
  ADD 1 TO PTY-X
  MOVE 9999 TO IS-PTY-YEAR(PTY-X)
END-IF
IF L-MONTHLY-SW = 'M'
  ADD 1 TO PTM-Y-X
  MOVE 999999.99 TO IS-PTM-BOM-ACV(PTM-Y-X,1)
END-IF
*
END-SUBROUTINE
**************
********************************************
DEFINE SUBROUTINE AAF-43000-PROJ-YRLY-DETAIL
********************************************
IF (L-REIN-CODE = 'PROJ' OR L-PJ = 'PJ')
    AND L-DISPLAY-CALCS NE 'Y'
    AND L-MONTHLY-SW NE 'M'
    AND PTY-X GE 2 AND PTY-X LE 21
    AND PTY-X LE L-NUM-PROJ-YRS
    AND IS-CURR-SW = 'Y'
    AND IS-PTY-YEAR(PTY-X) NE 9999
  MOVE PTY-X TO CLC-X
  SUBTRACT 1 FROM CLC-X
  MOVE IS-PTY-YEAR(PTY-X) TO L-CALC-MO-IND(CLC-X)
  COMPUTE L-CALC-AMT2(CLC-X) = IS-PTY-PR-DB(PTY-X) / 100
  IF PTY-X = 11
    COMPUTE L-CALC-AMT2(21) = IS-PTY-MIN-CSV(PTY-X) / 100
    COMPUTE L-CALC-AMT2(22) = IS-PTY-PR-CSV(PTY-X) / 100
  ELSE
    IF PTY-X = 21
      COMPUTE L-CALC-AMT2(23) = IS-PTY-MIN-CSV(PTY-X) / 100
      COMPUTE L-CALC-AMT2(24) = IS-PTY-PR-CSV(PTY-X) / 100
    END-IF
  END-IF
END-IF
*
IF L-MONTHLY-SW = 'M' AND PTY-X > 2
  MOVE 87 TO PTY-X
  ESCAPE ROUTINE
END-IF
*
IF IS-PTY-YEAR(PTY-X) = 9999
  MOVE 87 TO PTY-X
  ESCAPE ROUTINE
END-IF
*
IF IS-PTY-MEM-AGE(PTY-X) > IS-HIGH-AGE
  ESCAPE ROUTINE
END-IF
*
NEXT-SENTENCE-01.
REPEAT
  IF L-REIN-CODE = 'NC'
    IF IS-PTY-MEM-AGE(PTY-X) > 45
      IF IS-PTY-POL-AGE(PTY-X) = 3 OR = 5 OR = 10 OR = 15 OR = 20
          OR = 25 OR = 30 OR = 35 OR = 100
        ESCAPE BOTTOM (NEXT-SENTENCE-01.)
      ELSE
        ESCAPE ROUTINE
      END-IF
    ELSE
      IF ((IS-PTY-POL-AGE(PTY-X) = 3 OR = 5 OR = 10 OR = 15 OR = 20 OR = 25 OR = 30 OR = 35)
          AND (IS-PTY-MEM-AGE(PTY-X) < 60))
          OR (IS-PTY-MEM-AGE(PTY-X) = 60 OR = 65 OR = 100)
        ESCAPE BOTTOM (NEXT-SENTENCE-01.)
      ELSE
        ESCAPE ROUTINE
      END-IF
    END-IF
  ELSE
    IF L-REIN-CODE = 'AV'
      IF IS-PTY-POL-AGE(PTY-X) = 5 OR IS-PTY-POL-AGE(PTY-X) = 15
          OR IS-PTY-POL-AGE(PTY-X) = 25
        ESCAPE BOTTOM (NEXT-SENTENCE-01.)
      ELSE
        ESCAPE ROUTINE
      END-IF
    ELSE
      IF (L-MONTHLY-SW NE 'M') AND (L-NUM-PROJ-YRS > 26)
        IF PTY-X > FIRST-10
          DIVIDE 5 INTO IS-PTY-MEM-AGE(PTY-X) GIVING WORK-QUOT REMAINDER WORK-REM
          IF (WORK-REM = +0)
              OR ((L-PJ = 'PJ') AND (IS-PTY-MEM-AGE (PTY-X) = L-LIFE-EXP))/*SAG 20060223 RH1 AS
            ESCAPE BOTTOM (NEXT-SENTENCE-01.)
          ELSE
            ESCAPE ROUTINE
          END-IF
        ELSE
          ESCAPE BOTTOM (NEXT-SENTENCE-01.)
        END-IF
      END-IF
    END-IF
  END-IF
  ESCAPE BOTTOM (NEXT-SENTENCE-01.)
END-REPEAT /* (NEXT-SENTENCE-01.)
*
***** IF NEEDED THE FOLLOWING CODE CAN BY REMOVED TO BYPASS NO LOAN LOGIC
*
IF NOT ( PRX-LOAN-REPAID-COL-SW = 'Y' )
  MOVE 999999 TO IS-PTY-PR-CSV-NL(PTY-X)
END-IF
*
IF DTL-X < 28
**MOVE PRX-YEARLY-VALUES/IND (PTY-X) TO L-DTL-MNTHLY-IND (DTL-X) /* SAG-AB 20050223
**MOVE PRX-YEARLY-VALUES/LINE(PTY-X) TO L-DTL-LINE-MNTHLY(DTL-X) /* SAG-AB 20050223
  MOVE PRX-YEARLY-VALUES-A35 (PTY-X) TO L-DTL-LINE-A35   (DTL-X) /* SAG-AB 20050223
  MOVE IS-PTY-YTD-PREM       (PTY-X) TO L-YTD-PREM       (DTL-X)
  MOVE IS-PTY-YTD-INT        (PTY-X) TO L-YTD-INT        (DTL-X)
  MOVE IS-PTY-YTD-COI        (PTY-X) TO L-YTD-COI        (DTL-X)
  MOVE IS-PTY-ACV            (PTY-X) TO L-ACV            (DTL-X)
END-IF
ADD 1 TO L-NUM-DTLS
ADD 1 TO DTL-X
*
MOVE PTY-X TO PTM-Y-X
IF L-MONTHLY-SW = 'M'
  FOR PTM-M-X = 1 TO 12
    PERFORM AAF-43100-PROJ-MTHLY-M-DTL
  END-FOR
END-IF
*
END-SUBROUTINE
*
***********************************************************************
*
DEFINE SUBROUTINE AAF-31100-CALC-OLD-MNTHLY-VAL
*
MOVE IS-NXT-ACV TO IS-LST-ACV
MOVE IS-EOM-DB TO IS-LST-DB
ADD 1 TO IS-TODAY-MON
IF IS-TODAY-MON = 13
  MOVE 01 TO IS-TODAY-MON
  IF L-REIN-CODE = 'REIN'
    ADD 1 TO L-REIN-BEGIN-YYYY
  END-IF
END-IF
*
PERFORM CALC-OLD-MNTHLY-VALUES
IF IS-NO-LOAN-SW NE 'Y'
  ADD IS-WORK-PREM TO IS-YTD-PREM
  ADD IS-INTEREST TO IS-YTD-INT
  ADD IS-COI TO IS-YTD-COI
END-IF
MOVE PTY-X TO PTM-Y-X
IF L-MONTHLY-SW = 'M'
  PERFORM STOR-MNTHLY-PROJ-VALUES
END-IF
*
IF (L-REIN-CODE = 'REIN') AND (IS-MNTH-IND NE +12)
  IF (IS-TODAY-MON = R-S-D-MM) AND (L-REIN-BEGIN-YYYY = R-S-D-YYYY)
    REINSTATE-COMPLETE-SW := TRUE                /* SAG RH1 12082005 SS
*     MOVE ALL H'FF' TO REINSTATE-COMPLETE-SW    /* SAG RH1 12022005 SS     /* SAG RH1 12082005 SS
    SUBTRACT 1 FROM IS-MNTH-IND
    ESCAPE ROUTINE
  END-IF
END-IF
*
END-SUBROUTINE
*
***********************************************************************
*
DEFINE SUBROUTINE AAF-32000-CALC-NEW-POL-VAL
*** converted as
**IF (IS-TYPE = 'OL' AND USE-X-CALCS NE 'Y' AND (IS-ISS-AGE + IS-DURATION) > 96)
**    OR ((IS-TYPE = 'OL' OR = 'SO' OR = 'FS')
**    AND (USE-X-CALCS = 'Y') AND ((IS-ISS-AGE + IS-DURATION) > 99))
**    OR  ((IS-TYPE NE 'OL' AND IS-TYPE NE 'SO' AND IS-TYPE NE 'FS')
**    AND IS-DURATION > IS-TYPE-YEARS)
**  MOVE 'Y' TO IS-PAID-UP-SW
**END-IF
*** replaced with
IF ((IS-TYPE = 'OL') AND (USE-X-CALCS NE 'Y') AND ((IS-ISS-AGE + IS-DURATION) > 96))

    OR ((IS-TYPE = 'OL' OR = 'SO' OR = 'FS' OR = 'GP')      /* DW21
    AND (USE-X-CALCS = 'Y')
    AND ((IS-ISS-AGE + IS-DURATION) > 99))

    OR  ((IS-TYPE NE 'OL') AND (IS-TYPE NE 'SO') AND (IS-TYPE NE 'FS')
    AND (IS-DURATION > IS-TYPE-YEARS))
  MOVE 'Y' TO IS-PAID-UP-SW
END-IF
**
IF IS-TYPE NE 'GPL'                                   /* DW21
  IF IS-MIN-CSV LT -999999.99   /* To prevent negative overflow  /* DW19
    MOVE -999999.99 TO IS-MNTHLY-MIN-DIFF
  ELSE
    COMPUTE ROUNDED IS-MNTHLY-MIN-DIFF = (IS-NXT-YR-MIN-CSV - IS-MIN-CSV) / +12
  END-IF
END-IF
*
ADD 1 TO IS-CONV-DUR
ADD 1 TO IS-PROJ-DUR
*
PERFORM CALC-NEW-YEARLY-VALUES
*
* write 'athispjp line 3905 after yearly value nxt-csv=' is-nxt-csv
MOVE 1 TO PTM-M-X
SUBTRACT 1 FROM PTM-M-X
IF L-REIN-CODE = 'REIN'
  IF IS-TODAY-MON = R-S-D-MM AND L-REIN-BEGIN-YYYY = R-S-D-YYYY
    SUBTRACT 1 FROM IS-MNTH-IND
    REINSTATE-COMPLETE-SW := TRUE                 /* SAG RH1 12082005 SS
*     MOVE ALL H'FF' TO REINSTATE-COMPLETE-SW     /* SAG RH1 12022005 SS   /* SAG RH1 12082005 SS
    SUBTRACT 1 FROM IS-DURATION
    ESCAPE ROUTINE
  END-IF
END-IF
RESET IS-YTD-PREM IS-YTD-INT IS-YTD-COI
*
FOR IS-MNTH-IND = IS-MNTH-IND TO 12
  IF REINSTATE-COMPLETE-SW                  /* SAG RH1 12082005 SS
*   IF REINSTATE-COMPLETE-SW = H'FF'        /* SAG RH1 12022005 SS   /* SAG RH1 12082005 SS
    ESCAPE BOTTOM
  END-IF
  PERFORM AAF-32100-CALC-NEW-MNTHLY-VAL
*  write 'athispjp line 4005 after monthly values nxt-csv=' is-nxt-csv
END-FOR
MOVE IS-NXT-MCV-AL TO IS-MIN-CSV
IF REINSTATE-COMPLETE-SW                 /* SAG RH1 12082005 SS
* IF REINSTATE-COMPLETE-SW = H'FF'       /* SAG RH1 12022005 SS   /* SAG RH1 12082005 SS
  SUBTRACT 1 FROM IS-DURATION
  ESCAPE ROUTINE
END-IF
*
MOVE 1 TO IS-MNTH-IND
PERFORM CALC-NEW-END-YR-VALUES
* write 'athispjp ln 4070 ft4 eoy nxt-csv=' is-nxt-csv
*   'db=' is-eom-db 'dur=' is-duration
IF I-PAY-STATUS(SU) = '44'
  MOVE IS-NXT-CSV TO IS-CSV
  RESET IS-MIN-CSV IS-NXT-YR-MIN-CSV
END-IF
PERFORM STOR-YRLY-PROJ-VALUES
IF L-LN = 'LN' AND (IS-LN-AMT > 0 OR IS-LN-AMT-2 > 0)
  PERFORM AAF-35000-INCR-LOAN-AMT
END-IF
*
IF L-REIN-CODE = 'CAP' AND (IS-LN-AMT > 0 OR IS-LN-AMT-2 > 0)
  PERFORM AAF-35000-INCR-LOAN-AMT
END-IF
IF L-REIN-CODE = 'REIN' OR L-REIN-CODE = 'REDO'
  IF IS-TODAY-MON = R-S-D-MM AND L-REIN-BEGIN-YYYY = R-S-D-YYYY
    RESET IS-MNTH-IND
    ADD 1 TO IS-DURATION
    ADD 1 TO IS-CONV-DUR
    REINSTATE-COMPLETE-SW := TRUE                 /* SAG RH1 12082005 SS
*     MOVE ALL H'FF' TO REINSTATE-COMPLETE-SW     /* SAG RH1 12022005 SS  /* SAG RH1 12082005 SS
    SUBTRACT 1 FROM IS-DURATION
    ESCAPE ROUTINE
  END-IF
END-IF
IF L-LN = 'LN' AND IS-PROJ-DUR < 20 AND IS-PROJ-DUR > 0
  MOVE IS-PROJ-DUR TO LIR-X
  MOVE LN-CURR-RT(LIR-X) TO IS-CURR-RT
  PERFORM CALC-MNTHLY-CMP-INT-RATES
END-IF
*
END-SUBROUTINE
*
***********************************************************************
*
DEFINE SUBROUTINE AAF-31000-CALC-OLD-POL-VALUES
*
IF     (IS-TYPE = '20' AND IS-DURATION > 20)
    OR (IS-TYPE = '30' AND IS-DURATION > 30)
    OR (IS-TYPE = '7'  AND IS-DURATION > 7)
    OR (IS-TYPE = 'OL' AND (IS-ISS-AGE + IS-DURATION) > 96)
  MOVE 'Y' TO IS-PAID-UP-SW
END-IF
COMPUTE ROUNDED IS-MNTHLY-MIN-DIFF = (IS-NXT-YR-MIN-CSV - IS-MIN-CSV) / +12
ADD 1 TO IS-CONV-DUR
ADD 1 TO IS-PROJ-DUR
PERFORM CALC-OLD-YEARLY-VALUES
MOVE 1 TO PTM-M-X
SUBTRACT 1 FROM PTM-M-X
*
IF L-REIN-CODE = 'REIN'
  IF IS-TODAY-MON = R-S-D-MM AND L-REIN-BEGIN-YYYY = R-S-D-YYYY
    SUBTRACT 1 FROM IS-MNTH-IND
    REINSTATE-COMPLETE-SW := TRUE                    /* SAG RH1 12082005 SS
*     MOVE ALL H'FF' TO REINSTATE-COMPLETE-SW        /* SAG RH1 12022005 SS   /* SAG RH1 12082005 SS
    SUBTRACT 1 FROM IS-DURATION
    ESCAPE ROUTINE
  END-IF
END-IF
RESET IS-YTD-PREM IS-YTD-INT IS-YTD-COI IS-YTD-COI-SUBSIDY IS-YTD-DB-DIFF
FOR IS-MNTH-IND = IS-MNTH-IND TO 12
  IF REINSTATE-COMPLETE-SW                     /* SAG RH1 12082005 SS
*   IF REINSTATE-COMPLETE-SW = H'FF'           /* SAG RH1 12022005 SS    /* SAG RH1 12082005 SS
    ESCAPE BOTTOM
  END-IF
  PERFORM AAF-31100-CALC-OLD-MNTHLY-VAL
END-FOR
*
IF REINSTATE-COMPLETE-SW                 /* SAG RH1 12082005 SS
* IF REINSTATE-COMPLETE-SW = H'FF'       /* SAG RH1 12022005 SS   /* SAG RH1 12082005 SS
  SUBTRACT 1 FROM IS-DURATION
  ESCAPE ROUTINE
END-IF
MOVE 1 TO IS-MNTH-IND
PERFORM CALC-OLD-END-YR-VALUES
*
IF I-PAY-STATUS(SU) = '44'
  MOVE IS-NXT-CSV TO IS-CSV
  RESET IS-MIN-CSV IS-NXT-YR-MIN-CSV
END-IF
PERFORM STOR-YRLY-PROJ-VALUES
IF L-LN = 'LN' AND (IS-LN-AMT > 0 OR IS-LN-AMT-2 > 0)
  PERFORM AAF-35000-INCR-LOAN-AMT
END-IF
IF L-REIN-CODE = 'CAP' AND (IS-LN-AMT > 0 OR IS-LN-AMT-2 > 0)
  PERFORM AAF-35000-INCR-LOAN-AMT
END-IF
*
IF L-REIN-CODE = 'REIN'
  IF IS-TODAY-MON = R-S-D-MM AND L-REIN-BEGIN-YYYY = R-S-D-YYYY
    RESET IS-MNTH-IND
    ADD 1 TO IS-DURATION
    ADD 1 TO IS-CONV-DUR
    REINSTATE-COMPLETE-SW := TRUE                 /* SAG RH1 12082005 SS
*     MOVE ALL H'FF' TO REINSTATE-COMPLETE-SW     /* SAG RH1 12022005 SS   /* SAG RH1 12082005 SS
    SUBTRACT 1 FROM IS-DURATION
    ESCAPE ROUTINE
  END-IF
END-IF
IF L-LN = 'LN' AND IS-PROJ-DUR < 20 AND IS-PROJ-DUR > 0
  MOVE IS-PROJ-DUR TO LIR-X
  MOVE LN-CURR-RT(LIR-X) TO IS-CURR-RT
  PERFORM CALC-MNTHLY-CMP-INT-RATES
END-IF
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-10000-CALC-PROJECTION
*
RESET USE-X-CALCS
IF I-ISSUE-DATE(SU) GE 19970101 AND II-NEW-MNTH-ALLOC-AMT(SU) NE 999.99
  MOVE 'Y' TO USE-X-CALCS
END-IF
RESET PROJ-RPT-EXT-WORK
*
MOVE G-ID-NO TO IS-ID-NO
RESET IS-BLENDED-INT-RT
COMPUTE IS-LOAN-RT = G-INTEREST-RATE / 100
COMPUTE IS-LOAN-RT-2 = CUR-VAR-INT-RT / 100
MOVE L-GROWTH-RATE TO IS-CURR-RT                /* err here
MOVE L-GROWTH-RATE TO IS-ACQ-LOAN-INT-RT
COMPUTE IS-TDIV-A-INT-RT = L-GROWTH-RATE * IS-TDIV-A-PCT
MOVE L-GROWTH-RATE TO IS-TDIV-B-INT-RT
PERFORM CALC-MNTHLY-CMP-INT-RATES
MOVE L-PREM-RATING TO IS-PREM-RATING
*
MOVE I-PAY-STATUS(SU) TO IS-PAY-STATUS
IF I-PAY-STATUS(SU) > '40'
  MOVE 'Y' TO IS-PAID-UP-SW
ELSE
  RESET IS-PAID-UP-SW
END-IF
MOVE I-PLAN(SU) TO IS-TYPE
IF (IS-TYPE-2 = 'P' OR = 'F') AND IS-TYPE NE 'SP'
    AND (IS-TYPE NE 'GP')                                    /* DW21
  RESET IS-TYPE-2
END-IF
* write 'i-plan=' i-plan (su) 'is-type=' is-type
MOVE '00' TO IS-TYPE-YEARS-XX
**IF NOT (IS-TYPE = 'OL' OR = 'AL' OR = 'SP' OR = 'SO' OR = 'FS')
IF NOT (IS-TYPE = 'OL' OR = 'SP' OR = 'SO' OR = 'FS'
    OR IS-ANNUITY-LIFE (< IS-TYPE >) )  /* NG1
  IF IS-TYPE-2 = ' '
    MOVE IS-TYPE-1 TO IS-TYPE-YEARS-2
  ELSE
    MOVE IS-TYPE TO IS-TYPE-YEARS-XX
  END-IF
END-IF
*
IF I-MODE(SU) = 'A'
  MOVE 1 TO IS-MODE
ELSE
  IF I-MODE(SU) = 'S'
    MOVE 2 TO IS-MODE
  ELSE
    IF I-MODE(SU) = 'Q'
      MOVE 4 TO IS-MODE
    ELSE
      MOVE 12 TO IS-MODE
    END-IF
  END-IF
END-IF
*
IF IS-MODE = 01 OR IS-MODE = 02 OR IS-MODE = 04
  PERFORM AAF-10400-CALC-PREM-PMT-MONS
END-IF
MOVE SU TO LID-X
MOVE L-ISS-MM(LID-X) TO IS-1ST-MONTHIVERSARY
MOVE I-ISSUE-DATE(SU) TO IS-ISS-DATE
IF G-ONLINE-ACTION = '2' OR I-ONLINE-ACTION(SU) = '1'
  MOVE 'Y' TO IS-PROJ-CONV-SW
ELSE
  MOVE 'N' TO IS-PROJ-CONV-SW
END-IF
IF L-REIN-CODE = 'REIN' AND L-REIN-CONV = 'Y'
  MOVE 'Y' TO IS-PROJ-CONV-SW
END-IF
IF L-REIN-CODE = 'REIN'
  PERFORM AAF-10100-CALC-REIN-TODAY-MON
ELSE
  IF IS-PROJ-CONV-SW = 'Y'
    PERFORM AAF-10300-CALC-CONV-TODAY-MON
  ELSE
    PERFORM AAF-10200-CALC-TODAY-MON
  END-IF
END-IF
*
MOVE I-FACE-AMOUNT(SU) TO IS-FAC-AMT
MOVE I-LAST-DURATION(SU) TO IS-DURATION
MOVE I-ANNUAL-PREM(SU) TO IS-ANN-PREM
COMPUTE I-MODE-PREMIUM = I-ANNUAL-PREM(SU) / IS-MODE
MOVE I-MODE-PREMIUM TO IS-PREMIUM
MOVE I-ISSUE-AGE(SU) TO IS-ISS-AGE
*
IF IS-TYPE = 'GP'     /* Get this iss age's 120 cv amts   DW21
  CALLNAT 'GPLN0002' I-PLAN(SU) IS-ISS-AGE   /* NG2
    #GPL-CVS         (*)
    #GP2-CVS         (*)
  IF I-PLAN(SU) = 'GP2'
    MOVE #GP2-CVS (*) TO IS-GPL-CVS (*)
  ELSE
    MOVE #GPL-CVS (*) TO IS-GPL-CVS (*)
  END-IF
*   FIND GPL-V WITH ISSUE-AGE = IS-ISS-AGE
*     MOVE PLAN-RATES (*) TO IS-GPL-CVS (*)
* *    write 'is-iss-age=' is-iss-age 'csv=' is-gpl-cvs (*)
*   END-FIND
END-IF
RESET #DATE-OF-BIRTH                                                      /* TT1
#DATE-OF-BIRTH      := GET-DATE-OF-BIRTH(<G-MEMBER-CONTACT-ID>)           /* TT1
MOVE #DATE-OF-BIRTH TO IS-DOB         /* TT1                         /* END DW21
*
* write is-id-no 'is-type=' is-type 'dob=' is-dob
*
MOVE II-NEW-NET-PR-RATIO(SU) TO IS-NET-PREM-RATIO
*
IF I-CONV-FLAG(SU) = 'N'
  IF I-ISSUE-DATE(SU) < 19860701
    MOVE 'C' TO IS-SMOK-STATUS
  ELSE
    MOVE I-SMOKER-FLAG(SU) TO IS-SMOK-STATUS
  END-IF
ELSE
  MOVE 'C' TO IS-SMOK-STATUS
END-IF
*
MOVE SU TO SU2
MOVE G-LOAN-AMT TO IS-LN-AMT
MOVE G-LOAN-AMT-2 TO IS-LN-AMT-2
IF II-NEW-CONV-DUR(SU) = 999
  RESET IS-LN-AMT
END-IF
MOVE PARM-YYYY TO IS-PROJ-YR
IF IS-PROJ-YR NE L-MNTHLY-START-YR
  MOVE 'N' TO IS-CURR-SW
ELSE
  SUBTRACT 1 FROM L-MNTHLY-START-YR
END-IF
SUBTRACT 2 FROM IS-PROJ-YR
IF L-LN = 'LN'
  ADD 1 TO IS-PROJ-YR
END-IF
MOVE L-ISS-MM(LID-X) TO IS-ANN-MO
IF IS-PROJ-CONV-SW = 'Y' OR IS-ANN-MO < PARM-MONTH
  ADD 1 TO IS-PROJ-YR
  IF IS-CURR-SW = 'Y'
    ADD 1 TO L-MNTHLY-START-YR
  END-IF
END-IF
MOVE IS-PROJ-YR TO IS-PROJ-START-YR-COMPARE IS-PROJ-START-YR-HOLD
MOVE IS-ISS-AGE TO IS-PROJ-MEM-AGE
ADD IS-DURATION TO IS-PROJ-MEM-AGE
SUBTRACT 1 FROM IS-PROJ-MEM-AGE
MOVE IS-DURATION TO IS-PROJ-POL-AGE
SUBTRACT 1 FROM IS-PROJ-POL-AGE
MOVE 1 TO PTY-X
SUBTRACT 1 FROM PTY-X
MOVE 'N' TO IS-NO-LOAN-SW
RESET REINSTATE-COMPLETE-SW
* MOVE ALL H'00' TO REINSTATE-COMPLETE-SW
RESET IS-YTD-PREM IS-YTD-INT IS-YTD-COI IS-YTD-COI-SUBSIDY IS-YTD-DB-DIFF
  IS-LIAB-PREM IS-LIAB-RSV IS-LIAB-RSV-1 IS-LIAB-MID-RSV IS-SNG-PRM-BENE
  IS-SNG-PRM-ANNU
*
IF IS-SMOK-STATUS = 'N'
  MOVE 1 TO TD-SMOK-X
ELSE
  IF IS-SMOK-STATUS = 'S'
    MOVE 2 TO TD-SMOK-X
  ELSE
    MOVE 3 TO TD-SMOK-X
  END-IF
END-IF
MOVE IS-ISS-AGE TO TD-ISS-X
ADD 1 TO TD-ISS-X
MOVE IS-DURATION TO TD-ATT-X
IF TD-ATT-X > 16
  COMPUTE IS-WORK-A = IS-DURATION - 16
  ADD IS-WORK-A TO TD-ISS-X
  MOVE 16 TO TD-ATT-X
  IF TD-ISS-X > 86
    MOVE 86 TO TD-ISS-X
  END-IF
END-IF
*
IF L-SHOW-LOAN-REPAID = 'N' OR L-REIN-CODE = 'NC' OR L-REIN-CODE = 'AV'
  MOVE 'N' TO PRX-LOAN-REPAID-COL-SW
ELSE
  IF (IS-LN-AMT NE 0 AND IS-M-LOAN-RT NE IS-M-CURR-RT)
      OR (IS-LN-AMT-2 NE 0 AND IS-M-LOAN-RT-2 NE IS-M-CURR-RT)
    MOVE 'Y' TO PRX-LOAN-REPAID-COL-SW
  ELSE
    MOVE 'N' TO PRX-LOAN-REPAID-COL-SW
  END-IF
END-IF
*
MOVE G-PROCESS-IND TO IS-PROCESS-IND
IF IS-PROCESS-IND = 'O'
  MOVE L-OPT-OUT-ADJ TO IS-OO-COI-ADJ
END-IF
RESET IS-FIRST-GF-POL SU3
*
#SERVICES-CN        :=  G-ID-NO  /* PM2
#SERVICES-PARM-DATE :=  *DATN    /* PM2
CALLNAT 'SVCN0001'               /* PM2
  #PDA-AAFMAA-SERVICES           /* PM2
*
REPEAT
  ADD 1 TO SU3
  IF SU3 > 9
    ESCAPE BOTTOM
  END-IF
  IF I-STATUS(SU3) NE 'D'
*     OR (IS-TYPE = 'RT' OR = 'LT' OR = 'SO')        /* YK1
      OR IS-TYPE = 'SO'                              /* YK1
      OR I-PLAN(SU3) = 'FSO'
*     OR (IS-TYPE-1 GE 'U' AND IS-TYPE-1 LE 'Z')     /* YK1
      OR FUNCTION-TERM-POLICY(<I-PLAN(SU)>)          /* YK1
    ESCAPE TOP
  END-IF
  IF ((IS-PROCESS-IND = 'G')      /* DW11-AB 20060327
      OR (IS-PROCESS-IND = 'O')   /* DW11-AB 20060327
      OR (IS-PROCESS-IND = 'S'))  /* RE1
      AND (IS-FIRST-GF-POL = 0)   /* DW11-AB 20060327
    MOVE SU3 TO IS-FIRST-GF-POL
    MOVE 9 TO SU3
  END-IF
END-REPEAT
*
IF IS-SMOK-STATUS = 'C'
  PERFORM AAF-20000-OLD-POLICY-PROJECTION
ELSE
  PERFORM AAF-30000-NEW-POLICY-PROJECTION
END-IF
*
END-SUBROUTINE
*
********************************************************************************
*
DEFINE SUBROUTINE AAF-20000-OLD-POLICY-PROJECTION
*
IF     (IS-TYPE = '20' AND IS-DURATION > 19)
    OR (IS-TYPE = '30' AND IS-DURATION > 29)
    OR (IS-TYPE = '7'  AND IS-DURATION > 6)
    OR (IS-TYPE = 'OL' AND (IS-ISS-AGE + IS-DURATION) > 95)
  IF IS-PAID-UP-SW NE 'Y'
    MOVE 'Y' TO IS-PAID-UP-SW
    IF I-PAY-STATUS(SU) NE '44'
      MOVE '42' TO I-PAY-STATUS(SU)
    END-IF
  END-IF
END-IF
*
IF I-FACE-AMOUNT(SU) = 0 AND #DATE-OF-BIRTH < 18910101        /* TT1
  MOVE 'Y' TO IS-AGE-96-REINST
ELSE
  MOVE 'N' TO IS-AGE-96-REINST
END-IF
*
IF IS-PROJ-CONV-SW = 'Y'
  RESET IS-CONV-DUR
  IF IS-AGE-96-REINST = 'Y'
    MOVE 4000.00 TO IS-BEG-ACV IS-BEG-CSV IS-BEG-DB
    RESET IS-BEG-MIN-CSV IS-NXT-YR-MIN-CSV IS-ORIG-NXT-MIN-CV IS-ALLOC-CRED
      IS-BEG-MIN-DB
  ELSE
    PERFORM CALC-CONV-VALUES
  END-IF
ELSE
  IF L-REIN-CODE = 'REIN'
    MOVE 1 TO IS-PROJ-DUR
    PERFORM CALC-OLD-YEARLY-VALUES
    PERFORM CALC-OLD-END-YR-VALUES
    MOVE IS-MIN-CSV TO IS-BEG-MIN-CSV
    MOVE I-FACE-AMOUNT(SU) TO IS-BEG-MIN-DB
    MOVE I-II-CASH-VALUE(SU) TO IS-BEG-CSV
    MOVE I-II-DEATH-BENE(SU) TO IS-BEG-DB
    MOVE II-NEW-MNTH-ALLOC-AMT(SU) TO IS-ALLOC-CRED
    MOVE II-NEW-PREM-DEFIC(SU) TO IS-PREM-DEFIC IS-ORIG-PREM-DEFIC
    MOVE II-NEW-ACC-CASH-VALUE(SU) TO IS-BEG-ACV
    MOVE II-NEW-NXT-YR-MIN-CSH-VL(SU) TO IS-NXT-YR-MIN-CSV IS-ORIG-NXT-MIN-CV
    MOVE II-NEW-CONV-DUR(SU) TO IS-CONV-DUR
    SUBTRACT 1 FROM IS-CONV-DUR
  ELSE
    MOVE II-NEW-MIN-CASH-VALUE(SU) TO IS-BEG-MIN-CSV
    MOVE I-FACE-AMOUNT(SU) TO IS-BEG-MIN-DB
    MOVE I-II-CASH-VALUE(SU) TO IS-BEG-CSV
    MOVE I-II-DEATH-BENE(SU) TO IS-BEG-DB
    MOVE II-NEW-MNTH-ALLOC-AMT(SU) TO IS-ALLOC-CRED
    MOVE II-NEW-PREM-DEFIC(SU) TO IS-PREM-DEFIC IS-ORIG-PREM-DEFIC
    MOVE II-NEW-ACC-CASH-VALUE(SU) TO IS-BEG-ACV
    MOVE II-NEW-NXT-YR-MIN-CSH-VL(SU) TO IS-NXT-YR-MIN-CSV IS-ORIG-NXT-MIN-CV
    MOVE II-NEW-CONV-DUR(SU) TO IS-CONV-DUR
    SUBTRACT 1 FROM IS-CONV-DUR
  END-IF
END-IF
*
IF I-PAY-STATUS(SU) = '44'
  RESET IS-ALLOC-CRED
END-IF
*
MOVE IS-BEG-MIN-CSV TO IS-MIN-CSV
MOVE IS-BEG-MIN-DB TO IS-MIN-DB
MOVE IS-BEG-CSV TO IS-CSV
MOVE IS-BEG-DB TO IS-DB
MOVE IS-BEG-ACV TO IS-NXT-ACV
MOVE IS-BEG-CSV TO IS-NXT-CSV
MOVE IS-BEG-DB TO IS-EOM-DB
IF L-LN = 'LN'
  MOVE 1 TO IS-PROJ-DUR
  PERFORM CALC-LIAB-RSV
END-IF
PERFORM STOR-YRLY-PROJ-VALUES
*
RESET IS-PROJ-DUR
*
IF IS-ISS-AGE + IS-DURATION > 90
  COMPUTE IS-HIGH-AGE = IS-ISS-AGE + IS-DURATION + 20
ELSE
  MOVE 100 TO IS-HIGH-AGE
END-IF
IF L-PJ = 'PJ'
  MOVE L-LIFE-EXP TO IS-HIGH-AGE
END-IF
IF L-MONTHLY-SW = 'M'
  COMPUTE IS-END-PROJ = IS-DURATION + (L-MNTHLY-START-YR - IS-PROJ-YR) + 2
ELSE
  COMPUTE IS-END-PROJ = IS-HIGH-AGE - IS-ISS-AGE
  IF L-REIN-CODE = 'NC' AND IS-ISS-AGE < 50
**  COMPUTE IS-END-PROJ = IS-DURATION + 36      /* temp replaced SAG-AB 20060227
    COMPUTE IS-END-PROJ = IS-DURATION + 35      /* temp replaced SAG-AB 20060227
  ELSE
    IF L-REIN-CODE = 'AV'
      COMPUTE IS-END-PROJ = IS-DURATION + 25
    END-IF
  END-IF
END-IF
IF L-NUM-PROJ-YRS < 99 AND L-NUM-PROJ-YRS NE 0
  COMPUTE IS-WORK-A = IS-DURATION + L-NUM-PROJ-YRS
  IF IS-WORK-A < IS-END-PROJ
    COMPUTE IS-HIGH-AGE = IS-ISS-AGE + IS-DURATION + L-NUM-PROJ-YRS
    MOVE IS-WORK-A TO IS-END-PROJ
  END-IF
END-IF
ADD 1 TO IS-DURATION
IF L-LN = 'LN' AND (IS-LN-AMT > 0 OR IS-LN-AMT-2 > 0)
  PERFORM AAF-35000-INCR-LOAN-AMT
END-IF
*
FOR IS-DURATION = IS-DURATION TO IS-END-PROJ
  IF REINSTATE-COMPLETE-SW            /* SAG RH1 12082005 SS
*   IF REINSTATE-COMPLETE-SW = H'FF'  /* SAG RH1 12022005 SS   /* SAG RH1 12082005 SS
    ESCAPE BOTTOM
  END-IF
  PERFORM AAF-31000-CALC-OLD-POL-VALUES
END-FOR
IF REINSTATE-COMPLETE-SW              /* SAG RH1 12082005 SS
* IF REINSTATE-COMPLETE-SW = H'FF'    /* SAG RH1 12022005 SS     /* SAG RH1 12082005 SS
  ESCAPE ROUTINE
END-IF
*
IF PRX-LOAN-REPAID-COL-SW NE 'N'
  MOVE 'Y' TO IS-NO-LOAN-SW
  RESET IS-PROJ-DUR
  MOVE I-LAST-DURATION(SU) TO IS-DURATION
  MOVE IS-PROJ-START-YR-HOLD TO IS-PROJ-START-YR-COMPARE
  IF I-PAY-STATUS(SU) > '40'
    MOVE 'Y' TO IS-PAID-UP-SW
  ELSE
    RESET IS-PAID-UP-SW
  END-IF
*
  IF IS-PROJ-CONV-SW = 'Y'
    PERFORM AAF-10300-CALC-CONV-TODAY-MON
    RESET IS-CONV-DUR
  ELSE
    PERFORM AAF-10200-CALC-TODAY-MON
    MOVE II-NEW-CONV-DUR(SU) TO IS-CONV-DUR
    SUBTRACT 1 FROM IS-CONV-DUR
  END-IF
*
  RESET IS-LN-AMT IS-LN-AMT-2
  MOVE I-FACE-AMOUNT(SU) TO IS-FAC-AMT
  MOVE IS-ORIG-PREM-DEFIC TO IS-PREM-DEFIC
  MOVE IS-ORIG-NXT-MIN-CV TO IS-NXT-YR-MIN-CSV
  MOVE 1 TO PTY-X
  SUBTRACT 1 FROM PTY-X
  MOVE IS-BEG-MIN-CSV TO IS-MIN-CSV
  MOVE IS-BEG-MIN-DB TO IS-MIN-DB
  MOVE IS-BEG-CSV TO IS-CSV
  MOVE IS-BEG-DB TO IS-DB
  MOVE IS-BEG-ACV TO IS-NXT-ACV
  MOVE IS-BEG-DB TO IS-EOM-DB
  PERFORM STOR-YRLY-PROJ-VALUES
  ADD 1 TO IS-DURATION
*
  FOR IS-DURATION = IS-DURATION TO IS-END-PROJ
    IF REINSTATE-COMPLETE-SW                /* SAG RH1 12082005 SS
*     IF REINSTATE-COMPLETE-SW = H'FF'      /* SAG RH1 12022005 SS   /* SAG RH1 12082005 SS
      ESCAPE BOTTOM
    END-IF
    PERFORM AAF-31000-CALC-OLD-POL-VALUES
  END-FOR
*
  IF REINSTATE-COMPLETE-SW                /* SAG RH1 12082005 SS
*   IF REINSTATE-COMPLETE-SW = H'FF'      /* SAG RH1 12022005 SS   /* SAG RH1 12082005 SS
    ESCAPE ROUTINE
  END-IF
*
END-IF
*
IF PTY-X < 90
  ADD 1 TO PTY-X
  MOVE 9999 TO IS-PTY-YEAR(PTY-X)
END-IF
IF L-MONTHLY-SW = 'M'
  ADD 1 TO PTM-Y-X
  MOVE 999999.99 TO IS-PTM-BOM-ACV(PTM-Y-X,1)
END-IF
*
END-SUBROUTINE
*
*****************************************************************
*
