* >Natural Source Header 000000
* :Mode S
* :CP
* <Natural Source Header
/** New Subprogram AUCNORDR.
/**
/** :author nguentchev

DEFINE DATA
PARAMETER
1 INPUT-DATA          (A) Dynamic        /* In
1 RESPONSE-DATA       (A) Dynamic        /* Out
LOCAL USING ORDPDA
LOCAL
1 BLANK   (A1) CONST <' '>
1 J   (I4)
1 #ORDER
  2 CRMOrderID   (A) DYNAMIC
  2 UserCode     (A) DYNAMIC
  2 HeightFeet   (N2)
  2 HeightInches (N2)
  2 Weight       (N3)

END-DEFINE
/*         Parse the Order request from CRM
CALLNAT 'ORDPARSE' INPUT-DATA IASOrder
RESPONSE-DATA := IASOrder.ErrorDescription
if RESPONSE-DATA = BLANK
  RESPONSE-DATA := 'Success'
END-IF
/*

/* All entities are independent and complete transaction
/* In case of error the order request can be resend and only
/*  missing data will be created.
/*         Create contacts
/*         Create contacts relationships
CALLNAT 'ORDNCNTS' IASOrder
FOR J 1 TO IASOrder.C@Contact
  IF IASOrder.ErrorDescription_002 (J) NE BLANK
/* Create an Error
    BACKOUT TRANSACTION
    ESCAPE ROUTINE
  END-IF
END-FOR

END TRANSACTION  /* Contacts data are stored in IAS

/*    Create applications 
/*    Create application roles
CALLNAT 'ORDNAPPS' IASOrder
FOR J 1 TO IASOrder.C@Application
  IF IASOrder.ErrorDescription_003 (J) NE BLANK
/* Create an Error
    BACKOUT TRANSACTION
    ESCAPE ROUTINE   
  END-IF
END-FOR

END TRANSACTION /* Application data
COMPRESS RESPONSE-DATA IASOrder.ATNumber (1) INTO RESPONSE-DATA

/*      
/*         Create payment
CALLNAT 'ORDNPAY' IASOrder
IF IASOrder.ErrorDescription NE BLANK
/* Create an Error
  BACKOUT TRANSACTION
ELSE
  END TRANSACTION
END-IF
/*         Sync CRM with IAS data elements (asynch request). Can be done in NM/AI
/* 
END
