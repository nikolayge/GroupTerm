* >Natural Source Header 000000
* :Mode S
* :CP
* <Natural Source Header
/** New Subprogram ORDNPAY.
/**
/** :author nguentchev
/*  At this point AT, STATUS and Contacts are created
/*  The Contact ID abd ID-NUMBER are required to create payor information
/*  For all applications there is one insured and one payer
/*
DEFINE DATA
PARAMETER
  USING ORDPDA
** LOCAL USING OBJACC01
LOCAL
1 BLANK            (A1) CONST <' '>
1 #CRM-ADD-REQUEST (A) DYNAMIC CONST <'CRM-ADD-REQUEST'>
1 #GET-BY-ID       (A) DYNAMIC CONST <'GET-BY-GUID'>
1 #ADD             (A) DYNAMIC CONST <'ADD'>
1 PARM-CC-DATA
  2 #PARM-ID-NUMBER (N6.0) /* Payer CN
  2 #ISN (P9.0)
  2 #ACTION (A) DYNAMIC
  2 #RESULT-CODE (A3)
  2 #NUMBER-OF-RECORDS (N1)
1 PARM-CC-INFO
  2 ID-NUMBER (N6.0)
  2 POLICY-NUMBER (A16)
  2 CC-NUMBER (A16)
  2 CC-EXPIRATION-DATE (A6)
  2 REDEFINE CC-EXPIRATION-DATE
    3 CC-EXPIRATION-MONTH (A2)
    3 CC-EXPIRATION-YEAR (A4)
  2 CRM-CONTACT-ID (A36)   /* Payer CRM Contact GUID
  2 CC-GUID (A32)          /* CC Sage GUID
  2 CC-DEFAULT-IND (A1)
  2 CCHOLDER-NAME (A50)
  2 CCHOLDER-STREET-ADDR (A50)
  2 CCHOLDER-ADDL-ADDR (A50)
  2 CCHOLDER-CITY (A50)
  2 CCHOLDER-STATE-CD (A2)
  2 CCHOLDER-COUNTRY (A50)
  2 CCHOLDER-ZIP-CODE (N5.0)
  2 CCHOLDER-POSTAL-CODE (A10)
  2 CC-ADDR-FORMAT-CODE (A1)
  2 CC-ADDR-VALIDATION-CODE (A1)
  2 LAST-TIME-UPDATE (N7.0)
  2 LAST-USER-UPDATE (A8)
  2 LAST-DATE-UPDATE (N8.0)
*   2 Payment /* SEQ
*     3 CardHolder (A) DYNAMIC /* CCHOLDER-NAME
*     3 CCNumber (A) DYNAMIC   /* CC-NUMBER
*     3 CCSageGuid (A) DYNAMIC /* CC-GUID
*     3 CCExpMonth (A) DYNAMIC /* CC-EXPIRATION-DATE
*     3 CCExpYear (A) DYNAMIC  /* CC-EXPIRATION-DATE
*     3 BillingAddress /* SEQ
*       4 Street (A) DYNAMIC /* CCHOLDER-STREET-ADDR
*       4 Unit (A) DYNAMIC   /* CCHOLDER-ADDL-ADDR
*       4 State (A) DYNAMIC  /* CCHOLDER-STATE-CD
*       4 City (A) DYNAMIC   /* CCHOLDER-CITY
*       4 Zip5 (A) DYNAMIC   /* CCHOLDER-ZIP-CODE or CCHOLDER-POSTAL-CODE
*       4 Zip4 (A) DYNAMIC   /* string
*       4 CountryCode (A) DYNAMIC /* CCHOLDER-COUNTRY
*       4 Zip (A) DYNAMIC    /* string
*       4 AddressRole   (A) DYNAMIC /* string
*       4 Undeliverable (A) DYNAMIC /* string
*       4 Certified     (L) /* CC-ADDR-VALIDATION-CODE
1 j   (i4)
1 cnt-v view of a-contacts
  2 contact-id (n8)
  2 id-number  (n6)
END-DEFINE
/* 
RESET PARM-CC-DATA
  PARM-CC-INFO

/* get insured/payor CN and Contact ID
for j 1 to C@ApplicationRoles (1)
  if IASOrder.Name(1,j) = 'Insured'
    PARM-CC-INFO.CRM-CONTACT-ID := IASOrder.CRMContactID (1,j)
    find (1) cnt-v with CRM-CONTACT-GUI = IASOrder.CRMContactID (1,j)
      PARM-CC-DATA.#PARM-ID-NUMBER := cnt-v.id-number
    end-find
  end-if
/* The payer has to have a CN Number
  if IASOrder.Name(1,j) = 'Payer'
      and PARM-CC-INFO.CRM-CONTACT-ID NE IASOrder.CRMContactID (1,j)
    PARM-CC-INFO.CRM-CONTACT-ID := IASOrder.CRMContactID (1,j)
    find (1) cnt-v with CRM-CONTACT-GUI = IASOrder.CRMContactID (1,j)
      if cnt-v.id-number > 0
        PARM-CC-DATA.#PARM-ID-NUMBER := cnt-v.id-number
      end-if
    end-find
  end-if
end-for

PARM-CC-DATA.#ACTION := #GET-BY-ID
CALLNAT 'OBJNCC01' PARM-CC-DATA PARM-CC-INFO

if PARM-CC-DATA.#NUMBER-OF-RECORDS = 0
  PARM-CC-DATA.#ACTION := #ADD
/* Populate Payment information
  PARM-CC-INFO.ID-NUMBER := PARM-CC-DATA.#PARM-ID-NUMBER
  PARM-CC-INFO.CC-NUMBER := IASOrder.CCNumber
/*  PARM-CC-INFO.CC-GUID := IASOrder.CCSageGuid
  PARM-CC-INFO.CC-EXPIRATION-MONTH := IASOrder.CCExpMonth
  PARM-CC-INFO.CC-EXPIRATION-YEAR := IASOrder.CCExpYear
  PARM-CC-INFO.CCHOLDER-NAME := IASOrder.CardHolder
  PARM-CC-INFO.CCHOLDER-STREET-ADDR := IASOrder.Street
  PARM-CC-INFO.CCHOLDER-ADDL-ADDR := IASOrder.Unit
  PARM-CC-INFO.CCHOLDER-CITY := IASOrder.City
  PARM-CC-INFO.CCHOLDER-STATE-CD := IASOrder.State
  PARM-CC-INFO.CCHOLDER-COUNTRY := IASorder.CountryCode
  PARM-CC-INFO.CC-DEFAULT-IND := 'Y'
/* Only US address
  if IASorder.CountryCode ='US'
    PARM-CC-INFO.CCHOLDER-ZIP-CODE := val(IASOrder.Zip)
  else
    PARM-CC-INFO.CCHOLDER-POSTAL-CODE := "Postal"
  end-if

  CALLNAT 'OBJNCC01' PARM-CC-DATA PARM-CC-INFO
  if PARM-CC-DATA.#RESULT-CODE NE BLANK
    IASOrder.ErrorDescription := F-ERROR-DESCRIPTION(<#RESULT-CODE>)
  end-if
end-if
END
