* >Natural Source Header 000000
* :Mode S
* :CP
* <Natural Source Header
/** New Subprogram ORDNCNTS.
/**
/** :author nguentchev
DEFINE DATA
PARAMETER
  USING ORDAPARM
LOCAL
1 BLANK    (A1)  CONST <' '>

1 #CONTACT  /* GOCOA001
  2 CONTACT-ID (N8.0)
  2 ID-NUMBER (N6)
  2 CONTACT-TYPE (A1)
  2 RANK-ID (N6)
  2 MILITARY-STATUS (A1)
  2 PREFIX-TITLE (A25)
  2 FULL-NAME
    3 FIRST-NAME (A25)
    3 MIDDLE-NAME (A25)
    3 LAST-NAME (A25)
    3 SUFFIX (A10)
  2 GENDER-CD (A1)
  2 DATE-OF-BIRTH (N8.0)
  2 SSN (N9.0)
  2 FIRM-ORGANIZATION-NAME (A75)
  2 WEBSITE-URL (A70)
  2 CRM-CONTACT-GUI (A50)
  2 #FORCE-NEW (L)

1 #PHONE  /* GOPHA001
  2 PHONE-ID (N8.0)
  2 CONTACT-ID (N8.0)
  2 PHONE-TYPE-CODE (A1)
  2 INTL-ACCESS-CODE (N3.0)
  2 INTL-DIAL-NUMBER-A (A20)
  2 REDEFINE INTL-DIAL-NUMBER-A /* BEGIN REDEFINE: INTL-DIAL-NUM
    3 INTL-DIAL-NUMBER (N20)
  2 AREA-CODE (N3.0)
  2 DIAL-NUMBER (N7.0)
  2 EXT (N6.0)
  2 PREFERRED-PHONE-IND (A1)
  2 PHONE-SOURCE (A1)
  2 REMARKS (A70/3)

1 #EMAIL  /* GOEMA001
  2 EMAIL-ID (N8)
  2 CONTACT-ID (N8)
  2 EMAIL-TYPE (A1)
  2 EMAIL-ADDRESS (A70)
  2 EMAIL-PROTECTION-IND (A1)
  2 EMAIL-UNDELIV (A1)
  2 EMAIL-PREFERRED-IND (A1)
  2 EMAIL-SOURCE (A1)
  2 STATUS (A1)
  2 STATUS-DATE (N8)
  2 REMARKS (A70/3)

1 #ADDR-POOL /* GOADA001
  2 ADDRESS-POOL-ID (N8)
  2 STREET (A50)
  2 UNIT (A25)
  2 CITY (A50)
  2 STATE-CODE (A2)
  2 ZIP-CODE (N9)
  2 REDEFINE ZIP-CODE 
    3 ZIP-5 (N5)
    3 ZIP-4 (N4)
  2 COUNTRY-CODE (A2)
  2 INTL-REGION (A50)
  2 POSTAL-CODE (A25)
  2 URBANIZATION (A50)
  2 ADDR-VALID-IND (A1)
1 #ADDR-REL
  2 CONTACT-ID (N8)
  2 ADDRESS-POOL-ID (N8)
  2 ADDR-TYPE-CD (A1)
  2 ADDR-LOCATION (A1)
  2 ATTENTION-LINE (A50)
  2 RETURNED-MAIL-IND (A1)
  2 PREVENT-OVER-IND (A1)
  2 ADDRESS-SOURCE (A1)
  2 STATUS (A1)
  2 STATUS-DATE (N8)
1 #CLERK-ID (A3)
1 #MSG      (A) DYNAMIC
1 #CONTACT-REL   /* GOCRA001
  2 CONTACT-1-ID (N8)
  2 ROLE-1-CD (A1)
  2 CONTACT-2-ID (N8)
  2 ROLE-2-CD (A1)
  2 LAST-USER-UPD (A8)
  2 ACCESS-AUTH-SVC (A1)
  2 ACCESS-AUTH-INS (A1)
  2 LAST-DATE-UPD (N8)
  2 LAST-TIME-UPD (N7)
  
1 J          (I4)
1 K          (I4)
1 #UPDATED   (L)

1 CNT-V VIEW OF A-CONTACTS
  2 CONTACT-ID  (N8)
END-DEFINE
/* 
FOR J 1 TO C@Contacts
  FIND CNT-V WITH CRM-CONTACT-GUI = IASOrder.Id (J)
    IF NO RECORDS FOUND
      PERFORM CREATE-CONTACT
    END-NOREC
  END-FIND
END-FOR

RESET #MSG
FOR J 1 TO IASOrder.C@Relationships
  FIND CNT-V WITH CRM-CONTACT-GUI = IASOrder.MemberId (J)
    IF NO RECORDS FOUND
      COMPRESS #MSG '<> No contact found GOUD:' IASOrder.MemberId (j)
        INTO #MSG
      ESCAPE BOTTOM
    END-NOREC
    IASOrder.MemberContactID (J) := CNT-V.CONTACT-ID
  END-FIND
  FIND CNT-V WITH CRM-CONTACT-GUI = IASOrder.PartnerId (J)
    IF NO RECORDS FOUND
      COMPRESS #MSG '<> No contact found GOUD:' IASOrder.PartnerId (J)
        INTO #MSG
      ESCAPE BOTTOM
    END-NOREC
    IASOrder.PartnerContactID (J) := CNT-V.CONTACT-ID
  END-FIND
  PERFORM CREATE-CONTACT-REL
END-FOR
/*
DEFINE CREATE-CONTACT
/*     ==============
FOR K 1 TO IASOrder.C@Addresses (J)
  PERFORM CREATE-ADDRESS
END-FOR

FOR K 1 TO IASOrder.C@Emails (J)
  PERFORM CREATE-EMAIL
END-FOR

FOR K 1 TO IASOrder.C@Phones (J)
  PERFORM CREATE-PHONE
END-FOR

PRINT 
  / 'CREATE CONTACT' J
ESCAPE ROUTINE
/*  Convert and populate data from IASOrder to #CONTACT

RESET #CONTACT  
#CONTACT.CRM-CONTACT-GUI := IASOrder.Id (J)
#CONTACT.CONTACT-TYPE := IASOrder.ContactType (J)

IF #CONTACT.CONTACT-TYPE = BLANK  
  #CONTACT.CONTACT-TYPE := 'I'
END-IF

CALLNAT 'GOCON001' #CONTACT #CLERK-ID #MSG
  #UPDATED
IF #MSG NE BLANK
  COMPRESS IASOrder.ErrorDescription (J) #MSG
    INTO IASOrder.ErrorDescription (J)
END-IF

END-SUBROUTINE
/*
DEFINE CREATE-EMAIL
/*     ============
PRINT 
  / 'CREATE EMAIL' J K
escape routine

RESET #EMAIL
IF #EMAIL.EMAIL-ADDRESS NE BLANK
  RESET #MSG
  #EMAIL.CONTACT-ID := #CONTACT.CONTACT-ID
  IF #EMAIL.EMAIL-TYPE = BLANK      /* Default is P 
    #EMAIL.EMAIL-TYPE := 'P'
  END-IF
  CALLNAT 'GOEMN001' #EMAIL #CLERK-ID #MSG
    #UPDATED
  IF #MSG NE BLANK
    COMPRESS IASOrder.ErrorDescription (J) #MSG 
      INTO IASOrder.ErrorDescription (J)
  END-IF
END-IF
END-SUBROUTINE
/*
DEFINE CREATE-PHONE
/*     ==============
PRINT 
  / 'CREATE PHONE' J K
escape routine

RESET #PHONE
IF #PHONE.INTL-DIAL-NUMBER NE 0
  #MSG := 'ZERO ACCEPTED'
  #PHONE.CONTACT-ID := #CONTACT.CONTACT-ID
  CALLNAT 'GOPHN001' #PHONE #CLERK-ID #MSG
    #UPDATED
  IF #MSG NE BLANK
    COMPRESS IASOrder.ErrorDescription (J) #MSG 
      INTO IASOrder.ErrorDescription (J)
  END-IF
END-IF
END-SUBROUTINE
/*
DEFINE CREATE-CONTACT-REL
/*     ==================
PRINT 
  / 'CREATE PHONE' J K
escape routine

RESET #CONTACT-REL
IF #CONTACT-REL.CONTACT-1-ID > 0
  CALLNAT 'GOCRN001' #CONTACT-REL #MSG #UPDATED
END-IF
END-SUBROUTINE
/*
DEFINE CREATE-ADDRESS
/*     ==============
PRINT 
  / 'CREATE ADDRESSES'
escape routine

RESET #ADDR-POOL #ADDR-REL
IF #ADDR-POOL.STREET NE BLANK
  RESET #MSG
  #ADDR-REL.CONTACT-ID := #CONTACT.CONTACT-ID
  IF #ADDR-REL.ADDRESS-SOURCE = BLANK
    #ADDR-REL.ADDRESS-SOURCE := 'A'
  END-IF
  IF #ADDR-POOL.COUNTRY-CODE = BLANK   /* Default is US 
    #ADDR-POOL.COUNTRY-CODE := 'US'
  END-IF
  IF #ADDR-POOL.COUNTRY-CODE = 'US' OR= 'PR'
    RESET #ADDR-POOL.POSTAL-CODE
  ELSE
    RESET #ADDR-POOL.ZIP-CODE
  END-IF
  CALLNAT 'GOADN001' #ADDR-POOL #ADDR-REL #CLERK-ID #MSG
    #UPDATED 
  IF #MSG NE BLANK
    COMPRESS IASOrder.ErrorDescription (J) #MSG 
      INTO IASOrder.ErrorDescription (J)
  END-IF
END-IF
END-SUBROUTINE
END
